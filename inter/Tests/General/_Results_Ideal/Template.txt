version 1
# Package types:
packagetype _plain
packagetype _code
packagetype _linkage
packagetype _module
packagetype _submodule
packagetype _function
packagetype _action
packagetype _command
packagetype _property
packagetype _to_phrase
# Pragmas:
# Primitives:
primitive !font val -> void
primitive !stylebold void -> void
primitive !styleunderline void -> void
primitive !stylereverse void -> void
primitive !styleroman void -> void
primitive !print val -> void
primitive !printret val -> void
primitive !printchar val -> void
primitive !printname val -> void
primitive !printobj val -> void
primitive !printproperty val -> void
primitive !printnumber val -> void
primitive !printaddress val -> void
primitive !printstring val -> void
primitive !printnlnumber val -> void
primitive !printdef val -> void
primitive !printcdef val -> void
primitive !printindef val -> void
primitive !printcindef val -> void
primitive !box val -> void
primitive !push val -> void
primitive !pull ref -> void
primitive !postincrement ref -> val
primitive !preincrement ref -> val
primitive !postdecrement ref -> val
primitive !predecrement ref -> val
primitive !return val -> void
primitive !quit void -> void
primitive !restore lab -> void
primitive !spaces val -> void
primitive !break void -> void
primitive !continue void -> void
primitive !jump lab -> void
primitive !move val val -> void
primitive !remove val -> void
primitive !give val val -> void
primitive !take val val -> void
primitive !store ref val -> val
primitive !setbit ref val -> void
primitive !clearbit ref val -> void
primitive !modulo val val -> val
primitive !random val -> val
primitive !lookup val val -> val
primitive !lookupbyte val val -> val
primitive !lookupref val val -> ref
primitive !not val -> val
primitive !and val val -> val
primitive !or val val -> val
primitive !alternative val val -> val
primitive !alternativecase val val -> val
primitive !bitwiseand val val -> val
primitive !bitwiseor val val -> val
primitive !bitwisenot val -> val
primitive !eq val val -> val
primitive !ne val val -> val
primitive !gt val val -> val
primitive !ge val val -> val
primitive !lt val val -> val
primitive !le val val -> val
primitive !has val val -> val
primitive !hasnt val val -> val
primitive !in val val -> val
primitive !ofclass val val -> val
primitive !sequential val val -> val
primitive !ternarysequential val val val -> val
primitive !plus val val -> val
primitive !minus val val -> val
primitive !unaryminus val -> val
primitive !times val val -> val
primitive !divide val val -> val
primitive !if val code -> void
primitive !ifdebug code -> void
primitive !ifstrict code -> void
primitive !ifelse val code code -> void
primitive !while val code -> void
primitive !do val code -> void
primitive !for val val val code -> void
primitive !objectloop ref val val code -> void
primitive !objectloopx ref val code -> void
primitive !switch val code -> void
primitive !case val code -> void
primitive !default code -> void
primitive !indirect0v val -> void
primitive !indirect1v val val -> void
primitive !indirect2v val val val -> void
primitive !indirect3v val val val val -> void
primitive !indirect4v val val val val val -> void
primitive !indirect5v val val val val val val -> void
primitive !indirect0 val -> val
primitive !indirect1 val val -> val
primitive !indirect2 val val val -> val
primitive !indirect3 val val val val -> val
primitive !indirect4 val val val val val -> val
primitive !indirect5 val val val val val val -> val
primitive !message0 val val -> val
primitive !message1 val val val -> val
primitive !message2 val val val val -> val
primitive !message3 val val val val val -> val
primitive !callmessage0 val -> val
primitive !callmessage1 val val -> val
primitive !callmessage2 val val val -> val
primitive !callmessage3 val val val val -> val
primitive !propertyaddress val val -> val
primitive !propertylength val val -> val
primitive !provides val val -> val
primitive !propertyvalue val val -> val
primitive !notin val val -> val
primitive !read val val -> void
primitive !inversion void -> void
package main _plain
	package veneer _module
		symbol external misc K_unchecked --> /main/generic/K_unchecked
		symbol public misc WORDSIZE
		symbol public misc TARGET_ZCODE
		symbol public misc DEBUG
		symbol public misc #largest_object
		symbol public misc __assembly_arrow `->`
		symbol public misc metaclass
		symbol public misc String
		symbol public misc Routine
		symbol public misc Object
		symbol public misc Class
		symbol public misc #identifiers_table
		symbol public misc indirect
		symbol public misc #actions_table
		symbol public misc __assembly_negated_label `~`
		symbol public misc __assembly_rtrue_label `?rtrue`
		symbol public misc __assembly_rfalse_label `?rfalse`
		symbol public misc __assembly_sp `sp`
		symbol public misc __assembly_negated_rtrue_label `?~rtrue`
		symbol public misc __assembly_negated_rfalse_label `?~rfalse`
		symbol public misc Z__Region
		symbol public misc RT__Err
		symbol public misc parent
		symbol public misc child
		symbol public misc sibling
		symbol public misc random
		symbol public misc #dict_par2
		symbol public misc #dict_par1
		symbol public misc #grammar_table
		symbol public misc children
		symbol public misc CreatePropertyOffsets
		symbol public misc ResponseTexts
		symbol public misc FBNA_PROP_NUMBER
		symbol public misc property_metadata
		symbol public misc KindHierarchy
		symbol public misc value_property_holders
		symbol public misc value_range
		symbol public misc saved_short_name
		symbol public misc NO_RESPONSES
		constant WORDSIZE K_unchecked = 2
		constant TARGET_ZCODE K_unchecked = 1
		constant DEBUG K_unchecked = 1
		constant #largest_object K_unchecked = 0 __veneer=1
		constant __assembly_arrow K_unchecked = 0 __veneer=1
		constant metaclass K_unchecked = 0 __veneer=1
		constant String K_unchecked = 0 __veneer=1
		constant Routine K_unchecked = 0 __veneer=1
		constant Object K_unchecked = 0 __veneer=1
		constant Class K_unchecked = 0 __veneer=1
		constant #identifiers_table K_unchecked = 0 __veneer=1
		constant indirect K_unchecked = 0 __veneer=1
		constant #actions_table K_unchecked = 0 __veneer=1
		constant __assembly_negated_label K_unchecked = 0 __veneer=1
		constant __assembly_rtrue_label K_unchecked = 0 __veneer=1
		constant __assembly_rfalse_label K_unchecked = 0 __veneer=1
		constant __assembly_sp K_unchecked = 0 __veneer=1
		constant __assembly_negated_rtrue_label K_unchecked = 0 __veneer=1
		constant __assembly_negated_rfalse_label K_unchecked = 0 __veneer=1
		constant Z__Region K_unchecked = 0 __veneer=1
		constant RT__Err K_unchecked = 0 __veneer=1
		constant parent K_unchecked = 0 __veneer=1
		constant child K_unchecked = 0 __veneer=1
		constant sibling K_unchecked = 0 __veneer=1
		constant random K_unchecked = 0 __veneer=1
		constant #dict_par2 K_unchecked = 0 __veneer=1
		constant #dict_par1 K_unchecked = 0 __veneer=1
		constant #grammar_table K_unchecked = 0 __veneer=1
		constant children K_unchecked = 0 __veneer=1
		constant CreatePropertyOffsets K_unchecked = 0 __veneer=1
		constant ResponseTexts K_unchecked = 0 __veneer=1
		constant FBNA_PROP_NUMBER K_unchecked = 0 __veneer=1
		constant property_metadata K_unchecked = 0 __veneer=1
		constant KindHierarchy K_unchecked = 0 __veneer=1
		constant value_property_holders K_unchecked = 0 __veneer=1
		constant value_range K_unchecked = 0 __veneer=1
		constant saved_short_name K_unchecked = 0 __veneer=1
		constant NO_RESPONSES K_unchecked = 0 __veneer=1
	package generic _module
		symbol public misc K_unchecked
		symbol public misc K_typeless_int
		symbol public misc K_truth_state
		symbol public misc K_unchecked_function
		symbol public misc K_list_of_values
		kind K_unchecked unchecked
		kind K_typeless_int int32
		kind K_truth_state int2
		kind K_unchecked_function function K_unchecked -> K_unchecked
		kind K_list_of_values list of K_unchecked
	package template _module
		package constants _submodule
			package LibSerial_con _plain
				symbol public misc LibSerial
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LibSerial K_unchecked = "080126" __assimilated=1
			package LibRelease_con _plain
				symbol public misc LibRelease
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LibRelease K_unchecked = "6/12N" __assimilated=1
			package LIBRARY_VERSION_con _plain
				symbol public misc LIBRARY_VERSION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LIBRARY_VERSION K_unchecked = 612 __assimilated=1
			package USE_SCORING_con _plain
				symbol public misc USE_SCORING
				symbol external misc plug_00015 --> /main/connectors/plug_00015
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant USE_SCORING K_unchecked = plug_00015 __assimilated=1
			package INDIV_PROP_START_con _plain
				symbol public misc INDIV_PROP_START
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INDIV_PROP_START K_unchecked = 64 __assimilated=1
			package HDR_ZCODEVERSION_con _plain
				symbol public misc HDR_ZCODEVERSION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_ZCODEVERSION K_unchecked = 0 __assimilated=1
			package HDR_TERPFLAGS_con _plain
				symbol public misc HDR_TERPFLAGS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_TERPFLAGS K_unchecked = 1 __assimilated=1
			package HDR_GAMERELEASE_con _plain
				symbol public misc HDR_GAMERELEASE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_GAMERELEASE K_unchecked = 2 __assimilated=1
			package HDR_HIGHMEMORY_con _plain
				symbol public misc HDR_HIGHMEMORY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_HIGHMEMORY K_unchecked = 4 __assimilated=1
			package HDR_INITIALPC_con _plain
				symbol public misc HDR_INITIALPC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_INITIALPC K_unchecked = 6 __assimilated=1
			package HDR_DICTIONARY_con _plain
				symbol public misc HDR_DICTIONARY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_DICTIONARY K_unchecked = 8 __assimilated=1
			package HDR_OBJECTS_con _plain
				symbol public misc HDR_OBJECTS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_OBJECTS K_unchecked = 10 __assimilated=1
			package HDR_GLOBALS_con _plain
				symbol public misc HDR_GLOBALS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_GLOBALS K_unchecked = 12 __assimilated=1
			package HDR_STATICMEMORY_con _plain
				symbol public misc HDR_STATICMEMORY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_STATICMEMORY K_unchecked = 14 __assimilated=1
			package HDR_GAMEFLAGS_con _plain
				symbol public misc HDR_GAMEFLAGS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_GAMEFLAGS K_unchecked = 16 __assimilated=1
			package HDR_GAMESERIAL_con _plain
				symbol public misc HDR_GAMESERIAL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_GAMESERIAL K_unchecked = 18 __assimilated=1
			package HDR_ABBREVIATIONS_con _plain
				symbol public misc HDR_ABBREVIATIONS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_ABBREVIATIONS K_unchecked = 24 __assimilated=1
			package HDR_FILELENGTH_con _plain
				symbol public misc HDR_FILELENGTH
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_FILELENGTH K_unchecked = 26 __assimilated=1
			package HDR_CHECKSUM_con _plain
				symbol public misc HDR_CHECKSUM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_CHECKSUM K_unchecked = 28 __assimilated=1
			package HDR_TERPNUMBER_con _plain
				symbol public misc HDR_TERPNUMBER
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_TERPNUMBER K_unchecked = 30 __assimilated=1
			package HDR_TERPVERSION_con _plain
				symbol public misc HDR_TERPVERSION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_TERPVERSION K_unchecked = 31 __assimilated=1
			package HDR_SCREENHLINES_con _plain
				symbol public misc HDR_SCREENHLINES
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_SCREENHLINES K_unchecked = 32 __assimilated=1
			package HDR_SCREENWCHARS_con _plain
				symbol public misc HDR_SCREENWCHARS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_SCREENWCHARS K_unchecked = 33 __assimilated=1
			package HDR_SCREENWUNITS_con _plain
				symbol public misc HDR_SCREENWUNITS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_SCREENWUNITS K_unchecked = 34 __assimilated=1
			package HDR_SCREENHUNITS_con _plain
				symbol public misc HDR_SCREENHUNITS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_SCREENHUNITS K_unchecked = 36 __assimilated=1
			package HDR_FONTWUNITS_con _plain
				symbol public misc HDR_FONTWUNITS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_FONTWUNITS K_unchecked = 38 __assimilated=1
			package HDR_FONTHUNITS_con _plain
				symbol public misc HDR_FONTHUNITS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_FONTHUNITS K_unchecked = 39 __assimilated=1
			package HDR_ROUTINEOFFSET_con _plain
				symbol public misc HDR_ROUTINEOFFSET
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_ROUTINEOFFSET K_unchecked = 40 __assimilated=1
			package HDR_STRINGOFFSET_con _plain
				symbol public misc HDR_STRINGOFFSET
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_STRINGOFFSET K_unchecked = 42 __assimilated=1
			package HDR_BGCOLOUR_con _plain
				symbol public misc HDR_BGCOLOUR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_BGCOLOUR K_unchecked = 44 __assimilated=1
			package HDR_FGCOLOUR_con _plain
				symbol public misc HDR_FGCOLOUR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_FGCOLOUR K_unchecked = 45 __assimilated=1
			package HDR_TERMCHARS_con _plain
				symbol public misc HDR_TERMCHARS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_TERMCHARS K_unchecked = 46 __assimilated=1
			package HDR_PIXELSTO3_con _plain
				symbol public misc HDR_PIXELSTO3
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_PIXELSTO3 K_unchecked = 48 __assimilated=1
			package HDR_TERPSTANDARD_con _plain
				symbol public misc HDR_TERPSTANDARD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_TERPSTANDARD K_unchecked = 50 __assimilated=1
			package HDR_ALPHABET_con _plain
				symbol public misc HDR_ALPHABET
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_ALPHABET K_unchecked = 52 __assimilated=1
			package HDR_EXTENSION_con _plain
				symbol public misc HDR_EXTENSION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_EXTENSION K_unchecked = 54 __assimilated=1
			package HDR_UNUSED_con _plain
				symbol public misc HDR_UNUSED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_UNUSED K_unchecked = 56 __assimilated=1
			package HDR_INFORMVERSION_con _plain
				symbol public misc HDR_INFORMVERSION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HDR_INFORMVERSION K_unchecked = 60 __assimilated=1
			package NORMAL_VMSTY_con _plain
				symbol public misc NORMAL_VMSTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NORMAL_VMSTY K_unchecked = 0 __assimilated=1
			package HEADER_VMSTY_con _plain
				symbol public misc HEADER_VMSTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HEADER_VMSTY K_unchecked = 3 __assimilated=1
			package SUBHEADER_VMSTY_con _plain
				symbol public misc SUBHEADER_VMSTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SUBHEADER_VMSTY K_unchecked = 4 __assimilated=1
			package ALERT_VMSTY_con _plain
				symbol public misc ALERT_VMSTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALERT_VMSTY K_unchecked = 5 __assimilated=1
			package NOTE_VMSTY_con _plain
				symbol public misc NOTE_VMSTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NOTE_VMSTY K_unchecked = 6 __assimilated=1
			package BLOCKQUOTE_VMSTY_con _plain
				symbol public misc BLOCKQUOTE_VMSTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLOCKQUOTE_VMSTY K_unchecked = 7 __assimilated=1
			package INPUT_VMSTY_con _plain
				symbol public misc INPUT_VMSTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INPUT_VMSTY K_unchecked = 8 __assimilated=1
			package CLR_DEFAULT_con _plain
				symbol public misc CLR_DEFAULT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_DEFAULT K_unchecked = 1 __assimilated=1
			package CLR_BLACK_con _plain
				symbol public misc CLR_BLACK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_BLACK K_unchecked = 2 __assimilated=1
			package CLR_RED_con _plain
				symbol public misc CLR_RED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_RED K_unchecked = 3 __assimilated=1
			package CLR_GREEN_con _plain
				symbol public misc CLR_GREEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_GREEN K_unchecked = 4 __assimilated=1
			package CLR_YELLOW_con _plain
				symbol public misc CLR_YELLOW
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_YELLOW K_unchecked = 5 __assimilated=1
			package CLR_BLUE_con _plain
				symbol public misc CLR_BLUE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_BLUE K_unchecked = 6 __assimilated=1
			package CLR_MAGENTA_con _plain
				symbol public misc CLR_MAGENTA
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_MAGENTA K_unchecked = 7 __assimilated=1
			package CLR_PURPLE_con _plain
				symbol public misc CLR_PURPLE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_PURPLE K_unchecked = 7 __assimilated=1
			package CLR_CYAN_con _plain
				symbol public misc CLR_CYAN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_CYAN K_unchecked = 8 __assimilated=1
			package CLR_AZURE_con _plain
				symbol public misc CLR_AZURE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_AZURE K_unchecked = 8 __assimilated=1
			package CLR_WHITE_con _plain
				symbol public misc CLR_WHITE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLR_WHITE K_unchecked = 9 __assimilated=1
			package WIN_ALL_con _plain
				symbol public misc WIN_ALL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WIN_ALL K_unchecked = 0 __assimilated=1
			package WIN_STATUS_con _plain
				symbol public misc WIN_STATUS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WIN_STATUS K_unchecked = 1 __assimilated=1
			package WIN_MAIN_con _plain
				symbol public misc WIN_MAIN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WIN_MAIN K_unchecked = 2 __assimilated=1
			package PARA_COMPLETED_con _plain
				symbol public misc PARA_COMPLETED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARA_COMPLETED K_unchecked = 1 __assimilated=1
			package PARA_PROMPTSKIP_con _plain
				symbol public misc PARA_PROMPTSKIP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARA_PROMPTSKIP K_unchecked = 2 __assimilated=1
			package PARA_SUPPRESSPROMPTSKIP_con _plain
				symbol public misc PARA_SUPPRESSPROMPTSKIP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARA_SUPPRESSPROMPTSKIP K_unchecked = 4 __assimilated=1
			package PARA_NORULEBOOKBREAKS_con _plain
				symbol public misc PARA_NORULEBOOKBREAKS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARA_NORULEBOOKBREAKS K_unchecked = 8 __assimilated=1
			package PARA_CONTENTEXPECTED_con _plain
				symbol public misc PARA_CONTENTEXPECTED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARA_CONTENTEXPECTED K_unchecked = 16 __assimilated=1
			package POSSESS_PK_con _plain
				symbol public misc POSSESS_PK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant POSSESS_PK K_unchecked = 256 __assimilated=1
			package DEFART_PK_con _plain
				symbol public misc DEFART_PK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DEFART_PK K_unchecked = 257 __assimilated=1
			package INDEFART_PK_con _plain
				symbol public misc INDEFART_PK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INDEFART_PK K_unchecked = 258 __assimilated=1
			package RTP_BACKDROP_con _plain
				symbol public misc RTP_BACKDROP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_BACKDROP K_unchecked = 1 __assimilated=1
			package RTP_EXITDOOR_con _plain
				symbol public misc RTP_EXITDOOR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_EXITDOOR K_unchecked = 2 __assimilated=1
			package RTP_NOEXIT_con _plain
				symbol public misc RTP_NOEXIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_NOEXIT K_unchecked = 3 __assimilated=1
			package RTP_CANTCHANGE_con _plain
				symbol public misc RTP_CANTCHANGE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTCHANGE K_unchecked = 4 __assimilated=1
			package RTP_IMPREL_con _plain
				symbol public misc RTP_IMPREL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_IMPREL K_unchecked = 5 __assimilated=1
			package RTP_RULESTACK_con _plain
				symbol public misc RTP_RULESTACK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_RULESTACK K_unchecked = 6 __assimilated=1
			package RTP_TOOMANYRULEBOOKS_con _plain
				symbol public misc RTP_TOOMANYRULEBOOKS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TOOMANYRULEBOOKS K_unchecked = 7 __assimilated=1
			package RTP_TOOMANYEVENTS_con _plain
				symbol public misc RTP_TOOMANYEVENTS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TOOMANYEVENTS K_unchecked = 8 __assimilated=1
			package RTP_BADPROPERTY_con _plain
				symbol public misc RTP_BADPROPERTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_BADPROPERTY K_unchecked = 9 __assimilated=1
			package RTP_UNPROVIDED_con _plain
				symbol public misc RTP_UNPROVIDED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_UNPROVIDED K_unchecked = 10 __assimilated=1
			package RTP_UNSET_con _plain
				symbol public misc RTP_UNSET
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_UNSET K_unchecked = 11 __assimilated=1
			package RTP_TOOMANYACTS_con _plain
				symbol public misc RTP_TOOMANYACTS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TOOMANYACTS K_unchecked = 12 __assimilated=1
			package RTP_CANTABANDON_con _plain
				symbol public misc RTP_CANTABANDON
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTABANDON K_unchecked = 13 __assimilated=1
			package RTP_CANTEND_con _plain
				symbol public misc RTP_CANTEND
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTEND K_unchecked = 14 __assimilated=1
			package RTP_CANTMOVENOTHING_con _plain
				symbol public misc RTP_CANTMOVENOTHING
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTMOVENOTHING K_unchecked = 15 __assimilated=1
			package RTP_CANTREMOVENOTHING_con _plain
				symbol public misc RTP_CANTREMOVENOTHING
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTREMOVENOTHING K_unchecked = 16 __assimilated=1
			package RTP_DIVZERO_con _plain
				symbol public misc RTP_DIVZERO
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_DIVZERO K_unchecked = 17 __assimilated=1
			package RTP_BADVALUEPROPERTY_con _plain
				symbol public misc RTP_BADVALUEPROPERTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_BADVALUEPROPERTY K_unchecked = 18 __assimilated=1
			package RTP_NOTBACKDROP_con _plain
				symbol public misc RTP_NOTBACKDROP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_NOTBACKDROP K_unchecked = 19 __assimilated=1
			package RTP_TABLE_NOCOL_con _plain
				symbol public misc RTP_TABLE_NOCOL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOCOL K_unchecked = 20 __assimilated=1
			package RTP_TABLE_NOCORR_con _plain
				symbol public misc RTP_TABLE_NOCORR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOCORR K_unchecked = 21 __assimilated=1
			package RTP_TABLE_NOROW_con _plain
				symbol public misc RTP_TABLE_NOROW
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOROW K_unchecked = 22 __assimilated=1
			package RTP_TABLE_NOENTRY_con _plain
				symbol public misc RTP_TABLE_NOENTRY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOENTRY K_unchecked = 23 __assimilated=1
			package RTP_TABLE_NOTABLE_con _plain
				symbol public misc RTP_TABLE_NOTABLE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOTABLE K_unchecked = 24 __assimilated=1
			package RTP_TABLE_NOMOREBLANKS_con _plain
				symbol public misc RTP_TABLE_NOMOREBLANKS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOMOREBLANKS K_unchecked = 25 __assimilated=1
			package RTP_TABLE_NOROWS_con _plain
				symbol public misc RTP_TABLE_NOROWS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOROWS K_unchecked = 26 __assimilated=1
			package RTP_TABLE_CANTSORT_con _plain
				symbol public misc RTP_TABLE_CANTSORT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_CANTSORT K_unchecked = 27 __assimilated=1
			package RTP_NOTINAROOM_con _plain
				symbol public misc RTP_NOTINAROOM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_NOTINAROOM K_unchecked = 28 __assimilated=1
			package RTP_BADTOPIC_con _plain
				symbol public misc RTP_BADTOPIC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_BADTOPIC K_unchecked = 29 __assimilated=1
			package RTP_ROUTELESS_con _plain
				symbol public misc RTP_ROUTELESS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_ROUTELESS K_unchecked = 30 __assimilated=1
			package RTP_PROPOFNOTHING_con _plain
				symbol public misc RTP_PROPOFNOTHING
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_PROPOFNOTHING K_unchecked = 31 __assimilated=1
			package RTP_DECIDEONWRONGKIND_con _plain
				symbol public misc RTP_DECIDEONWRONGKIND
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_DECIDEONWRONGKIND K_unchecked = 32 __assimilated=1
			package RTP_DECIDEONNOTHING_con _plain
				symbol public misc RTP_DECIDEONNOTHING
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_DECIDEONNOTHING K_unchecked = 33 __assimilated=1
			package RTP_TABLE_CANTSAVE_con _plain
				symbol public misc RTP_TABLE_CANTSAVE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_CANTSAVE K_unchecked = 34 __assimilated=1
			package RTP_TABLE_WONTFIT_con _plain
				symbol public misc RTP_TABLE_WONTFIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_WONTFIT K_unchecked = 35 __assimilated=1
			package RTP_TABLE_BADFILE_con _plain
				symbol public misc RTP_TABLE_BADFILE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_BADFILE K_unchecked = 36 __assimilated=1
			package RTP_LOWLEVELERROR_con _plain
				symbol public misc RTP_LOWLEVELERROR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_LOWLEVELERROR K_unchecked = 37 __assimilated=1
			package RTP_DONTIGNORETURNSEQUENCE_con _plain
				symbol public misc RTP_DONTIGNORETURNSEQUENCE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_DONTIGNORETURNSEQUENCE K_unchecked = 38 __assimilated=1
			package RTP_SAYINVALIDSNIPPET_con _plain
				symbol public misc RTP_SAYINVALIDSNIPPET
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_SAYINVALIDSNIPPET K_unchecked = 39 __assimilated=1
			package RTP_SPLICEINVALIDSNIPPET_con _plain
				symbol public misc RTP_SPLICEINVALIDSNIPPET
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_SPLICEINVALIDSNIPPET K_unchecked = 40 __assimilated=1
			package RTP_INCLUDEINVALIDSNIPPET_con _plain
				symbol public misc RTP_INCLUDEINVALIDSNIPPET
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_INCLUDEINVALIDSNIPPET K_unchecked = 41 __assimilated=1
			package RTP_LISTWRITERMEMORY_con _plain
				symbol public misc RTP_LISTWRITERMEMORY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_LISTWRITERMEMORY K_unchecked = 42 __assimilated=1
			package RTP_CANTREMOVEPLAYER_con _plain
				symbol public misc RTP_CANTREMOVEPLAYER
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTREMOVEPLAYER K_unchecked = 43 __assimilated=1
			package RTP_CANTREMOVEDOORS_con _plain
				symbol public misc RTP_CANTREMOVEDOORS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTREMOVEDOORS K_unchecked = 44 __assimilated=1
			package RTP_CANTCHANGEOFFSTAGE_con _plain
				symbol public misc RTP_CANTCHANGEOFFSTAGE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTCHANGEOFFSTAGE K_unchecked = 45 __assimilated=1
			package RTP_MSTACKMEMORY_con _plain
				symbol public misc RTP_MSTACKMEMORY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_MSTACKMEMORY K_unchecked = 46 __assimilated=1
			package RTP_TYPECHECK_con _plain
				symbol public misc RTP_TYPECHECK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TYPECHECK K_unchecked = 47 __assimilated=1
			package RTP_FILEIOERROR_con _plain
				symbol public misc RTP_FILEIOERROR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_FILEIOERROR K_unchecked = 48 __assimilated=1
			package RTP_HEAPERROR_con _plain
				symbol public misc RTP_HEAPERROR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_HEAPERROR K_unchecked = 49 __assimilated=1
			package RTP_LISTRANGEERROR_con _plain
				symbol public misc RTP_LISTRANGEERROR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_LISTRANGEERROR K_unchecked = 50 __assimilated=1
			package RTP_REGEXPSYNTAXERROR_con _plain
				symbol public misc RTP_REGEXPSYNTAXERROR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_REGEXPSYNTAXERROR K_unchecked = 51 __assimilated=1
			package RTP_NOGLULXUNICODE_con _plain
				symbol public misc RTP_NOGLULXUNICODE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_NOGLULXUNICODE K_unchecked = 52 __assimilated=1
			package RTP_BACKDROPONLY_con _plain
				symbol public misc RTP_BACKDROPONLY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_BACKDROPONLY K_unchecked = 53 __assimilated=1
			package RTP_NOTTHING_con _plain
				symbol public misc RTP_NOTTHING
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_NOTTHING K_unchecked = 54 __assimilated=1
			package RTP_SCENEHASNTSTARTED_con _plain
				symbol public misc RTP_SCENEHASNTSTARTED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_SCENEHASNTSTARTED K_unchecked = 55 __assimilated=1
			package RTP_SCENEHASNTENDED_con _plain
				symbol public misc RTP_SCENEHASNTENDED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_SCENEHASNTENDED K_unchecked = 56 __assimilated=1
			package RTP_NEGATIVEROOT_con _plain
				symbol public misc RTP_NEGATIVEROOT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_NEGATIVEROOT K_unchecked = 57 __assimilated=1
			package RTP_TABLE_CANTRUNTHROUGH_con _plain
				symbol public misc RTP_TABLE_CANTRUNTHROUGH
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_CANTRUNTHROUGH K_unchecked = 58 __assimilated=1
			package RTP_CANTITERATE_con _plain
				symbol public misc RTP_CANTITERATE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTITERATE K_unchecked = 59 __assimilated=1
			package RTP_WRONGASSIGNEDKIND_con _plain
				symbol public misc RTP_WRONGASSIGNEDKIND
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_WRONGASSIGNEDKIND K_unchecked = 60 __assimilated=1
			package RTP_CANTBEOFFSTAGE_con _plain
				symbol public misc RTP_CANTBEOFFSTAGE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTBEOFFSTAGE K_unchecked = 61 __assimilated=1
			package RTP_RELKINDVIOLATION_con _plain
				symbol public misc RTP_RELKINDVIOLATION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_RELKINDVIOLATION K_unchecked = 62 __assimilated=1
			package RTP_CANTMAKEPART_con _plain
				symbol public misc RTP_CANTMAKEPART
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_CANTMAKEPART K_unchecked = 63 __assimilated=1
			package RTP_TEXTTOKENTOOHARD_con _plain
				symbol public misc RTP_TEXTTOKENTOOHARD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TEXTTOKENTOOHARD K_unchecked = 64 __assimilated=1
			package RTP_TABLE_NOTABLE2_con _plain
				symbol public misc RTP_TABLE_NOTABLE2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_TABLE_NOTABLE2 K_unchecked = 65 __assimilated=1
			package RTP_RELATIONCHANGEIMPOSSIBLE_con _plain
				symbol public misc RTP_RELATIONCHANGEIMPOSSIBLE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_RELATIONCHANGEIMPOSSIBLE K_unchecked = 66 __assimilated=1
			package RTP_RELMINIMAL_con _plain
				symbol public misc RTP_RELMINIMAL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_RELMINIMAL K_unchecked = 67 __assimilated=1
			package RTP_LISTSIZENEGATIVE_con _plain
				symbol public misc RTP_LISTSIZENEGATIVE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_LISTSIZENEGATIVE K_unchecked = 68 __assimilated=1
			package RTP_REGIONSNOTADJACENT_con _plain
				symbol public misc RTP_REGIONSNOTADJACENT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RTP_REGIONSNOTADJACENT K_unchecked = 69 __assimilated=1
			package STARTING_VIRTUAL_MACHINE_ACT_con _plain
				symbol public misc STARTING_VIRTUAL_MACHINE_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STARTING_VIRTUAL_MACHINE_ACT K_unchecked = 0 __assimilated=1
			package PRINTING_RESPONSE_ACT_con _plain
				symbol public misc PRINTING_RESPONSE_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_RESPONSE_ACT K_unchecked = 1 __assimilated=1
			package PRINTING_THE_NAME_ACT_con _plain
				symbol public misc PRINTING_THE_NAME_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_THE_NAME_ACT K_unchecked = 2 __assimilated=1
			package PRINTING_THE_PLURAL_NAME_ACT_con _plain
				symbol public misc PRINTING_THE_PLURAL_NAME_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_THE_PLURAL_NAME_ACT K_unchecked = 3 __assimilated=1
			package PRINTING_A_NUMBER_OF_ACT_con _plain
				symbol public misc PRINTING_A_NUMBER_OF_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_A_NUMBER_OF_ACT K_unchecked = 4 __assimilated=1
			package PRINTING_ROOM_DESC_DETAILS_ACT_con _plain
				symbol public misc PRINTING_ROOM_DESC_DETAILS_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_ROOM_DESC_DETAILS_ACT K_unchecked = 5 __assimilated=1
			package PRINTING_INVENTORY_DETAILS_ACT_con _plain
				symbol public misc PRINTING_INVENTORY_DETAILS_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_INVENTORY_DETAILS_ACT K_unchecked = 6 __assimilated=1
			package LISTING_CONTENTS_ACT_con _plain
				symbol public misc LISTING_CONTENTS_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LISTING_CONTENTS_ACT K_unchecked = 7 __assimilated=1
			package GROUPING_TOGETHER_ACT_con _plain
				symbol public misc GROUPING_TOGETHER_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GROUPING_TOGETHER_ACT K_unchecked = 8 __assimilated=1
			package WRITING_A_PARAGRAPH_ABOUT_ACT_con _plain
				symbol public misc WRITING_A_PARAGRAPH_ABOUT_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WRITING_A_PARAGRAPH_ABOUT_ACT K_unchecked = 9 __assimilated=1
			package LISTING_NONDESCRIPT_ITEMS_ACT_con _plain
				symbol public misc LISTING_NONDESCRIPT_ITEMS_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LISTING_NONDESCRIPT_ITEMS_ACT K_unchecked = 10 __assimilated=1
			package PRINTING_NAME_OF_DARK_ROOM_ACT_con _plain
				symbol public misc PRINTING_NAME_OF_DARK_ROOM_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_NAME_OF_DARK_ROOM_ACT K_unchecked = 11 __assimilated=1
			package PRINTING_DESC_OF_DARK_ROOM_ACT_con _plain
				symbol public misc PRINTING_DESC_OF_DARK_ROOM_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_DESC_OF_DARK_ROOM_ACT K_unchecked = 12 __assimilated=1
			package PRINTING_NEWS_OF_DARKNESS_ACT_con _plain
				symbol public misc PRINTING_NEWS_OF_DARKNESS_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_NEWS_OF_DARKNESS_ACT K_unchecked = 13 __assimilated=1
			package PRINTING_NEWS_OF_LIGHT_ACT_con _plain
				symbol public misc PRINTING_NEWS_OF_LIGHT_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_NEWS_OF_LIGHT_ACT K_unchecked = 14 __assimilated=1
			package REFUSAL_TO_ACT_IN_DARK_ACT_con _plain
				symbol public misc REFUSAL_TO_ACT_IN_DARK_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant REFUSAL_TO_ACT_IN_DARK_ACT K_unchecked = 15 __assimilated=1
			package CONSTRUCTING_STATUS_LINE_ACT_con _plain
				symbol public misc CONSTRUCTING_STATUS_LINE_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CONSTRUCTING_STATUS_LINE_ACT K_unchecked = 16 __assimilated=1
			package PRINTING_BANNER_TEXT_ACT_con _plain
				symbol public misc PRINTING_BANNER_TEXT_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_BANNER_TEXT_ACT K_unchecked = 17 __assimilated=1
			package READING_A_COMMAND_ACT_con _plain
				symbol public misc READING_A_COMMAND_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant READING_A_COMMAND_ACT K_unchecked = 18 __assimilated=1
			package DECIDING_SCOPE_ACT_con _plain
				symbol public misc DECIDING_SCOPE_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DECIDING_SCOPE_ACT K_unchecked = 19 __assimilated=1
			package DECIDING_CONCEALED_POSSESS_ACT_con _plain
				symbol public misc DECIDING_CONCEALED_POSSESS_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DECIDING_CONCEALED_POSSESS_ACT K_unchecked = 20 __assimilated=1
			package DECIDING_WHETHER_ALL_INC_ACT_con _plain
				symbol public misc DECIDING_WHETHER_ALL_INC_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DECIDING_WHETHER_ALL_INC_ACT K_unchecked = 21 __assimilated=1
			package CLARIFYING_PARSERS_CHOICE_ACT_con _plain
				symbol public misc CLARIFYING_PARSERS_CHOICE_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CLARIFYING_PARSERS_CHOICE_ACT K_unchecked = 22 __assimilated=1
			package ASKING_WHICH_DO_YOU_MEAN_ACT_con _plain
				symbol public misc ASKING_WHICH_DO_YOU_MEAN_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ASKING_WHICH_DO_YOU_MEAN_ACT K_unchecked = 23 __assimilated=1
			package PRINTING_A_PARSER_ERROR_ACT_con _plain
				symbol public misc PRINTING_A_PARSER_ERROR_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_A_PARSER_ERROR_ACT K_unchecked = 24 __assimilated=1
			package SUPPLYING_A_MISSING_NOUN_ACT_con _plain
				symbol public misc SUPPLYING_A_MISSING_NOUN_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SUPPLYING_A_MISSING_NOUN_ACT K_unchecked = 25 __assimilated=1
			package SUPPLYING_A_MISSING_SECOND_ACT_con _plain
				symbol public misc SUPPLYING_A_MISSING_SECOND_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SUPPLYING_A_MISSING_SECOND_ACT K_unchecked = 26 __assimilated=1
			package IMPLICITLY_TAKING_ACT_con _plain
				symbol public misc IMPLICITLY_TAKING_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant IMPLICITLY_TAKING_ACT K_unchecked = 27 __assimilated=1
			package AMUSING_A_VICTORIOUS_PLAYER_ACT_con _plain
				symbol public misc AMUSING_A_VICTORIOUS_PLAYER_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AMUSING_A_VICTORIOUS_PLAYER_ACT K_unchecked = 28 __assimilated=1
			package PRINTING_PLAYERS_OBITUARY_ACT_con _plain
				symbol public misc PRINTING_PLAYERS_OBITUARY_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_PLAYERS_OBITUARY_ACT K_unchecked = 29 __assimilated=1
			package DEALING_WITH_FINAL_QUESTION_ACT_con _plain
				symbol public misc DEALING_WITH_FINAL_QUESTION_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DEALING_WITH_FINAL_QUESTION_ACT K_unchecked = 30 __assimilated=1
			package PRINTING_LOCALE_DESCRIPTION_ACT_con _plain
				symbol public misc PRINTING_LOCALE_DESCRIPTION_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_LOCALE_DESCRIPTION_ACT K_unchecked = 31 __assimilated=1
			package CHOOSING_NOTABLE_LOCALE_OBJ_ACT_con _plain
				symbol public misc CHOOSING_NOTABLE_LOCALE_OBJ_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CHOOSING_NOTABLE_LOCALE_OBJ_ACT K_unchecked = 32 __assimilated=1
			package PRINTING_LOCALE_PARAGRAPH_ACT_con _plain
				symbol public misc PRINTING_LOCALE_PARAGRAPH_ACT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PRINTING_LOCALE_PARAGRAPH_ACT K_unchecked = 33 __assimilated=1
			package STARTUP_RB_con _plain
				symbol public misc STARTUP_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STARTUP_RB K_unchecked = 0 __assimilated=1
			package TURN_SEQUENCE_RB_con _plain
				symbol public misc TURN_SEQUENCE_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TURN_SEQUENCE_RB K_unchecked = 1 __assimilated=1
			package SHUTDOWN_RB_con _plain
				symbol public misc SHUTDOWN_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SHUTDOWN_RB K_unchecked = 2 __assimilated=1
			package WHEN_PLAY_BEGINS_RB_con _plain
				symbol public misc WHEN_PLAY_BEGINS_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WHEN_PLAY_BEGINS_RB K_unchecked = 4 __assimilated=1
			package WHEN_PLAY_ENDS_RB_con _plain
				symbol public misc WHEN_PLAY_ENDS_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WHEN_PLAY_ENDS_RB K_unchecked = 5 __assimilated=1
			package WHEN_SCENE_BEGINS_RB_con _plain
				symbol public misc WHEN_SCENE_BEGINS_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WHEN_SCENE_BEGINS_RB K_unchecked = 6 __assimilated=1
			package WHEN_SCENE_ENDS_RB_con _plain
				symbol public misc WHEN_SCENE_ENDS_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WHEN_SCENE_ENDS_RB K_unchecked = 7 __assimilated=1
			package ACTION_PROCESSING_RB_con _plain
				symbol public misc ACTION_PROCESSING_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACTION_PROCESSING_RB K_unchecked = 9 __assimilated=1
			package SETTING_ACTION_VARIABLES_RB_con _plain
				symbol public misc SETTING_ACTION_VARIABLES_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SETTING_ACTION_VARIABLES_RB K_unchecked = 10 __assimilated=1
			package SPECIFIC_ACTION_PROCESSING_RB_con _plain
				symbol public misc SPECIFIC_ACTION_PROCESSING_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SPECIFIC_ACTION_PROCESSING_RB K_unchecked = 11 __assimilated=1
			package ACCESSIBILITY_RB_con _plain
				symbol public misc ACCESSIBILITY_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACCESSIBILITY_RB K_unchecked = 13 __assimilated=1
			package REACHING_INSIDE_RB_con _plain
				symbol public misc REACHING_INSIDE_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant REACHING_INSIDE_RB K_unchecked = 14 __assimilated=1
			package REACHING_OUTSIDE_RB_con _plain
				symbol public misc REACHING_OUTSIDE_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant REACHING_OUTSIDE_RB K_unchecked = 15 __assimilated=1
			package VISIBLE_RB_con _plain
				symbol public misc VISIBLE_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VISIBLE_RB K_unchecked = 16 __assimilated=1
			package PERSUADE_RB_con _plain
				symbol public misc PERSUADE_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PERSUADE_RB K_unchecked = 17 __assimilated=1
			package UNSUCCESSFUL_ATTEMPT_RB_con _plain
				symbol public misc UNSUCCESSFUL_ATTEMPT_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UNSUCCESSFUL_ATTEMPT_RB K_unchecked = 18 __assimilated=1
			package AFTER_RB_con _plain
				symbol public misc AFTER_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AFTER_RB K_unchecked = 23 __assimilated=1
			package REPORT_RB_con _plain
				symbol public misc REPORT_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant REPORT_RB K_unchecked = 24 __assimilated=1
			package MULTIPLE_ACTION_PROCESSING_RB_con _plain
				symbol public misc MULTIPLE_ACTION_PROCESSING_RB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MULTIPLE_ACTION_PROCESSING_RB K_unchecked = 26 __assimilated=1
			package STUCK_PE_con _plain
				symbol public misc STUCK_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STUCK_PE K_unchecked = 1 __assimilated=1
			package UPTO_PE_con _plain
				symbol public misc UPTO_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UPTO_PE K_unchecked = 2 __assimilated=1
			package NUMBER_PE_con _plain
				symbol public misc NUMBER_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NUMBER_PE K_unchecked = 3 __assimilated=1
			package ANIMA_PE_con _plain
				symbol public misc ANIMA_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ANIMA_PE K_unchecked = 4 __assimilated=1
			package CANTSEE_PE_con _plain
				symbol public misc CANTSEE_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CANTSEE_PE K_unchecked = 5 __assimilated=1
			package TOOLIT_PE_con _plain
				symbol public misc TOOLIT_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TOOLIT_PE K_unchecked = 6 __assimilated=1
			package NOTHELD_PE_con _plain
				symbol public misc NOTHELD_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NOTHELD_PE K_unchecked = 7 __assimilated=1
			package MULTI_PE_con _plain
				symbol public misc MULTI_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MULTI_PE K_unchecked = 8 __assimilated=1
			package MMULTI_PE_con _plain
				symbol public misc MMULTI_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MMULTI_PE K_unchecked = 9 __assimilated=1
			package VAGUE_PE_con _plain
				symbol public misc VAGUE_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VAGUE_PE K_unchecked = 10 __assimilated=1
			package EXCEPT_PE_con _plain
				symbol public misc EXCEPT_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant EXCEPT_PE K_unchecked = 11 __assimilated=1
			package VERB_PE_con _plain
				symbol public misc VERB_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VERB_PE K_unchecked = 12 __assimilated=1
			package SCENERY_PE_con _plain
				symbol public misc SCENERY_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCENERY_PE K_unchecked = 13 __assimilated=1
			package ITGONE_PE_con _plain
				symbol public misc ITGONE_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ITGONE_PE K_unchecked = 14 __assimilated=1
			package JUNKAFTER_PE_con _plain
				symbol public misc JUNKAFTER_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant JUNKAFTER_PE K_unchecked = 15 __assimilated=1
			package TOOFEW_PE_con _plain
				symbol public misc TOOFEW_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TOOFEW_PE K_unchecked = 16 __assimilated=1
			package NOTHING_PE_con _plain
				symbol public misc NOTHING_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NOTHING_PE K_unchecked = 17 __assimilated=1
			package ASKSCOPE_PE_con _plain
				symbol public misc ASKSCOPE_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ASKSCOPE_PE K_unchecked = 18 __assimilated=1
			package NOTINCONTEXT_PE_con _plain
				symbol public misc NOTINCONTEXT_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NOTINCONTEXT_PE K_unchecked = 19 __assimilated=1
			package BLANKLINE_PE_con _plain
				symbol public misc BLANKLINE_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLANKLINE_PE K_unchecked = 20 __assimilated=1
			package ANIMAAGAIN_PE_con _plain
				symbol public misc ANIMAAGAIN_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ANIMAAGAIN_PE K_unchecked = 21 __assimilated=1
			package COMMABEGIN_PE_con _plain
				symbol public misc COMMABEGIN_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COMMABEGIN_PE K_unchecked = 22 __assimilated=1
			package MISSINGPERSON_PE_con _plain
				symbol public misc MISSINGPERSON_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MISSINGPERSON_PE K_unchecked = 23 __assimilated=1
			package ANIMALISTEN_PE_con _plain
				symbol public misc ANIMALISTEN_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ANIMALISTEN_PE K_unchecked = 24 __assimilated=1
			package TOTALK_PE_con _plain
				symbol public misc TOTALK_PE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TOTALK_PE K_unchecked = 25 __assimilated=1
			package PARSING_REASON_con _plain
				symbol public misc PARSING_REASON
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARSING_REASON K_unchecked = 0 __assimilated=1
			package TALKING_REASON_con _plain
				symbol public misc TALKING_REASON
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TALKING_REASON K_unchecked = 1 __assimilated=1
			package EACH_TURN_REASON_con _plain
				symbol public misc EACH_TURN_REASON
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant EACH_TURN_REASON K_unchecked = 2 __assimilated=1
			package LOOPOVERSCOPE_REASON_con _plain
				symbol public misc LOOPOVERSCOPE_REASON
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LOOPOVERSCOPE_REASON K_unchecked = 5 __assimilated=1
			package TESTSCOPE_REASON_con _plain
				symbol public misc TESTSCOPE_REASON
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TESTSCOPE_REASON K_unchecked = 6 __assimilated=1
			package ILLEGAL_TT_con _plain
				symbol public misc ILLEGAL_TT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ILLEGAL_TT K_unchecked = 0 __assimilated=1
			package ELEMENTARY_TT_con _plain
				symbol public misc ELEMENTARY_TT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ELEMENTARY_TT K_unchecked = 1 __assimilated=1
			package PREPOSITION_TT_con _plain
				symbol public misc PREPOSITION_TT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PREPOSITION_TT K_unchecked = 2 __assimilated=1
			package ROUTINE_FILTER_TT_con _plain
				symbol public misc ROUTINE_FILTER_TT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ROUTINE_FILTER_TT K_unchecked = 3 __assimilated=1
			package ATTR_FILTER_TT_con _plain
				symbol public misc ATTR_FILTER_TT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ATTR_FILTER_TT K_unchecked = 4 __assimilated=1
			package SCOPE_TT_con _plain
				symbol public misc SCOPE_TT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCOPE_TT K_unchecked = 5 __assimilated=1
			package GPR_TT_con _plain
				symbol public misc GPR_TT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GPR_TT K_unchecked = 6 __assimilated=1
			package NOUN_TOKEN_con _plain
				symbol public misc NOUN_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NOUN_TOKEN K_unchecked = 0 __assimilated=1
			package HELD_TOKEN_con _plain
				symbol public misc HELD_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HELD_TOKEN K_unchecked = 1 __assimilated=1
			package MULTI_TOKEN_con _plain
				symbol public misc MULTI_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MULTI_TOKEN K_unchecked = 2 __assimilated=1
			package MULTIHELD_TOKEN_con _plain
				symbol public misc MULTIHELD_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MULTIHELD_TOKEN K_unchecked = 3 __assimilated=1
			package MULTIEXCEPT_TOKEN_con _plain
				symbol public misc MULTIEXCEPT_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MULTIEXCEPT_TOKEN K_unchecked = 4 __assimilated=1
			package MULTIINSIDE_TOKEN_con _plain
				symbol public misc MULTIINSIDE_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MULTIINSIDE_TOKEN K_unchecked = 5 __assimilated=1
			package CREATURE_TOKEN_con _plain
				symbol public misc CREATURE_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CREATURE_TOKEN K_unchecked = 6 __assimilated=1
			package SPECIAL_TOKEN_con _plain
				symbol public misc SPECIAL_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SPECIAL_TOKEN K_unchecked = 7 __assimilated=1
			package NUMBER_TOKEN_con _plain
				symbol public misc NUMBER_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NUMBER_TOKEN K_unchecked = 8 __assimilated=1
			package TOPIC_TOKEN_con _plain
				symbol public misc TOPIC_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TOPIC_TOKEN K_unchecked = 9 __assimilated=1
			package ENDIT_TOKEN_con _plain
				symbol public misc ENDIT_TOKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ENDIT_TOKEN K_unchecked = 15 __assimilated=1
			package GPR_FAIL_con _plain
				symbol public misc GPR_FAIL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GPR_FAIL K_unchecked = -1 __assimilated=1
			package GPR_PREPOSITION_con _plain
				symbol public misc GPR_PREPOSITION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GPR_PREPOSITION K_unchecked = 0 __assimilated=1
			package GPR_NUMBER_con _plain
				symbol public misc GPR_NUMBER
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GPR_NUMBER K_unchecked = 1 __assimilated=1
			package GPR_MULTIPLE_con _plain
				symbol public misc GPR_MULTIPLE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GPR_MULTIPLE K_unchecked = 2 __assimilated=1
			package GPR_REPARSE_con _plain
				symbol public misc GPR_REPARSE
				symbol external misc plug_00016 --> /main/connectors/plug_00016
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GPR_REPARSE K_unchecked = plug_00016 __assimilated=1
			package GPR_NOUN_con _plain
				symbol public misc GPR_NOUN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant GPR_NOUN K_unchecked = -256 __assimilated=1
			package GPR_HELD_con _plain
				symbol public misc GPR_HELD
				symbol public misc Computed_Constant_Value_0
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_1
				symbol external misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
				constant Computed_Constant_Value_0 K_unchecked = 1
				constant Computed_Constant_Value_1 K_unchecked = sum{ GPR_NOUN, Computed_Constant_Value_0 }
				constant GPR_HELD K_unchecked = Computed_Constant_Value_1 __assimilated=1
			package GPR_MULTI_con _plain
				symbol public misc GPR_MULTI
				symbol public misc Computed_Constant_Value_2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_3
				symbol external misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
				constant Computed_Constant_Value_2 K_unchecked = 2
				constant Computed_Constant_Value_3 K_unchecked = sum{ GPR_NOUN, Computed_Constant_Value_2 }
				constant GPR_MULTI K_unchecked = Computed_Constant_Value_3 __assimilated=1
			package GPR_MULTIHELD_con _plain
				symbol public misc GPR_MULTIHELD
				symbol public misc Computed_Constant_Value_4
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_5
				symbol external misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
				constant Computed_Constant_Value_4 K_unchecked = 3
				constant Computed_Constant_Value_5 K_unchecked = sum{ GPR_NOUN, Computed_Constant_Value_4 }
				constant GPR_MULTIHELD K_unchecked = Computed_Constant_Value_5 __assimilated=1
			package GPR_MULTIEXCEPT_con _plain
				symbol public misc GPR_MULTIEXCEPT
				symbol public misc Computed_Constant_Value_6
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_7
				symbol external misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
				constant Computed_Constant_Value_6 K_unchecked = 4
				constant Computed_Constant_Value_7 K_unchecked = sum{ GPR_NOUN, Computed_Constant_Value_6 }
				constant GPR_MULTIEXCEPT K_unchecked = Computed_Constant_Value_7 __assimilated=1
			package GPR_MULTIINSIDE_con _plain
				symbol public misc GPR_MULTIINSIDE
				symbol public misc Computed_Constant_Value_8
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_9
				symbol external misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
				constant Computed_Constant_Value_8 K_unchecked = 5
				constant Computed_Constant_Value_9 K_unchecked = sum{ GPR_NOUN, Computed_Constant_Value_8 }
				constant GPR_MULTIINSIDE K_unchecked = Computed_Constant_Value_9 __assimilated=1
			package GPR_CREATURE_con _plain
				symbol public misc GPR_CREATURE
				symbol public misc Computed_Constant_Value_10
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_11
				symbol external misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
				constant Computed_Constant_Value_10 K_unchecked = 6
				constant Computed_Constant_Value_11 K_unchecked = sum{ GPR_NOUN, Computed_Constant_Value_10 }
				constant GPR_CREATURE K_unchecked = Computed_Constant_Value_11 __assimilated=1
			package NEWLINE_BIT_con _plain
				symbol public misc NEWLINE_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NEWLINE_BIT K_unchecked = 1 __assimilated=1
			package INDENT_BIT_con _plain
				symbol public misc INDENT_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INDENT_BIT K_unchecked = 2 __assimilated=1
			package FULLINV_BIT_con _plain
				symbol public misc FULLINV_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant FULLINV_BIT K_unchecked = 4 __assimilated=1
			package ENGLISH_BIT_con _plain
				symbol public misc ENGLISH_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ENGLISH_BIT K_unchecked = 8 __assimilated=1
			package RECURSE_BIT_con _plain
				symbol public misc RECURSE_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RECURSE_BIT K_unchecked = 16 __assimilated=1
			package ALWAYS_BIT_con _plain
				symbol public misc ALWAYS_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALWAYS_BIT K_unchecked = 32 __assimilated=1
			package TERSE_BIT_con _plain
				symbol public misc TERSE_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TERSE_BIT K_unchecked = 64 __assimilated=1
			package PARTINV_BIT_con _plain
				symbol public misc PARTINV_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARTINV_BIT K_unchecked = 128 __assimilated=1
			package DEFART_BIT_con _plain
				symbol public misc DEFART_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DEFART_BIT K_unchecked = 256 __assimilated=1
			package WORKFLAG_BIT_con _plain
				symbol public misc WORKFLAG_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WORKFLAG_BIT K_unchecked = 512 __assimilated=1
			package ISARE_BIT_con _plain
				symbol public misc ISARE_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ISARE_BIT K_unchecked = 1024 __assimilated=1
			package CONCEAL_BIT_con _plain
				symbol public misc CONCEAL_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CONCEAL_BIT K_unchecked = 2048 __assimilated=1
			package NOARTICLE_BIT_con _plain
				symbol public misc NOARTICLE_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NOARTICLE_BIT K_unchecked = 4096 __assimilated=1
			package EXTRAINDENT_BIT_con _plain
				symbol public misc EXTRAINDENT_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant EXTRAINDENT_BIT K_unchecked = 8192 __assimilated=1
			package CFIRSTART_BIT_con _plain
				symbol public misc CFIRSTART_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CFIRSTART_BIT K_unchecked = 16384 __assimilated=1
			package QUARTER_HOUR_con _plain
				symbol public misc QUARTER_HOUR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant QUARTER_HOUR K_unchecked = 15 __assimilated=1
			package HALF_HOUR_con _plain
				symbol public misc HALF_HOUR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HALF_HOUR K_unchecked = 30 __assimilated=1
			package ONE_HOUR_con _plain
				symbol public misc ONE_HOUR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ONE_HOUR K_unchecked = 60 __assimilated=1
			package TWELVE_HOURS_con _plain
				symbol public misc TWELVE_HOURS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TWELVE_HOURS K_unchecked = 720 __assimilated=1
			package TWENTY_FOUR_HOURS_con _plain
				symbol public misc TWENTY_FOUR_HOURS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TWENTY_FOUR_HOURS K_unchecked = 1440 __assimilated=1
			package EMPTY_TEXT_PACKED_con _plain
				symbol public misc EMPTY_TEXT_PACKED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant EMPTY_TEXT_PACKED K_unchecked = "" __assimilated=1
			package list_filter_permits_con _plain
				symbol public misc list_filter_permits
				symbol external misc privately_named --> /main/template/properties/privately_named_prop/privately_named
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant list_filter_permits K_unchecked = privately_named __assimilated=1
			package ActionCount_con _plain
				symbol public misc ActionCount
				symbol external misc plug_00018 --> /main/connectors/plug_00018
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ActionCount K_unchecked = plug_00018 __assimilated=1
			package ##ListMiscellany_con _plain
				symbol public misc ##ListMiscellany
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ##ListMiscellany K_unchecked = 0 __assimilated=1 __fake_action=1
			package ##Miscellany_con _plain
				symbol public misc ##Miscellany
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ##Miscellany K_unchecked = 0 __assimilated=1 __fake_action=1
			package ##PluralFound_con _plain
				symbol public misc ##PluralFound
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ##PluralFound K_unchecked = 0 __assimilated=1 __fake_action=1
			package ##TheSame_con _plain
				symbol public misc ##TheSame
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ##TheSame K_unchecked = 0 __assimilated=1 __fake_action=1
			package BLOCKV_STACK_SIZE_con _plain
				symbol public misc BLOCKV_STACK_SIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLOCKV_STACK_SIZE K_unchecked = 224 __assimilated=1
			package NUMBER_SCENES_CREATED_con _plain
				symbol public misc NUMBER_SCENES_CREATED
				symbol external misc plug_00019 --> /main/connectors/plug_00019
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NUMBER_SCENES_CREATED K_unchecked = plug_00019 __assimilated=1
			package SCENE_ARRAY_SIZE_con _plain
				symbol public misc SCENE_ARRAY_SIZE
				symbol public misc Computed_Constant_Value_12
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_13
				symbol external misc NUMBER_SCENES_CREATED --> /main/template/constants/NUMBER_SCENES_CREATED_con/NUMBER_SCENES_CREATED
				constant Computed_Constant_Value_12 K_unchecked = 2
				constant Computed_Constant_Value_13 K_unchecked = sum{ NUMBER_SCENES_CREATED, Computed_Constant_Value_12 }
				constant SCENE_ARRAY_SIZE K_unchecked = Computed_Constant_Value_13 __assimilated=1
			package DEFAULT_LOOKMODE_con _plain
				symbol public misc DEFAULT_LOOKMODE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DEFAULT_LOOKMODE K_unchecked = 2 __assimilated=1
			package INPUT_BUFFER_LEN_con _plain
				symbol public misc INPUT_BUFFER_LEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INPUT_BUFFER_LEN K_unchecked = 120 __assimilated=1
			package Compass_con _plain
				symbol public misc Compass
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant Compass K_unchecked = 0 __assimilated=1 __object=1
			package AGAIN1__WD_con _plain
				symbol public misc AGAIN1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AGAIN1__WD K_unchecked = dw'again' __assimilated=1
			package AGAIN2__WD_con _plain
				symbol public misc AGAIN2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AGAIN2__WD K_unchecked = dw'g//' __assimilated=1
			package AGAIN3__WD_con _plain
				symbol public misc AGAIN3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AGAIN3__WD K_unchecked = dw'again' __assimilated=1
			package OOPS1__WD_con _plain
				symbol public misc OOPS1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OOPS1__WD K_unchecked = dw'oops' __assimilated=1
			package OOPS2__WD_con _plain
				symbol public misc OOPS2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OOPS2__WD K_unchecked = dw'o//' __assimilated=1
			package OOPS3__WD_con _plain
				symbol public misc OOPS3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OOPS3__WD K_unchecked = dw'oops' __assimilated=1
			package UNDO1__WD_con _plain
				symbol public misc UNDO1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UNDO1__WD K_unchecked = dw'undo' __assimilated=1
			package UNDO2__WD_con _plain
				symbol public misc UNDO2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UNDO2__WD K_unchecked = dw'undo' __assimilated=1
			package UNDO3__WD_con _plain
				symbol public misc UNDO3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UNDO3__WD K_unchecked = dw'undo' __assimilated=1
			package ALL1__WD_con _plain
				symbol public misc ALL1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALL1__WD K_unchecked = dw'all' __assimilated=1
			package ALL2__WD_con _plain
				symbol public misc ALL2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALL2__WD K_unchecked = dw'each' __assimilated=1
			package ALL3__WD_con _plain
				symbol public misc ALL3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALL3__WD K_unchecked = dw'every' __assimilated=1
			package ALL4__WD_con _plain
				symbol public misc ALL4__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALL4__WD K_unchecked = dw'everything' __assimilated=1
			package ALL5__WD_con _plain
				symbol public misc ALL5__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALL5__WD K_unchecked = dw'both' __assimilated=1
			package AND1__WD_con _plain
				symbol public misc AND1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AND1__WD K_unchecked = dw'and' __assimilated=1
			package AND2__WD_con _plain
				symbol public misc AND2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AND2__WD K_unchecked = dw'and' __assimilated=1
			package AND3__WD_con _plain
				symbol public misc AND3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AND3__WD K_unchecked = dw'and' __assimilated=1
			package BUT1__WD_con _plain
				symbol public misc BUT1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BUT1__WD K_unchecked = dw'but' __assimilated=1
			package BUT2__WD_con _plain
				symbol public misc BUT2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BUT2__WD K_unchecked = dw'except' __assimilated=1
			package BUT3__WD_con _plain
				symbol public misc BUT3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BUT3__WD K_unchecked = dw'but' __assimilated=1
			package ME1__WD_con _plain
				symbol public misc ME1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ME1__WD K_unchecked = dw'me' __assimilated=1
			package ME2__WD_con _plain
				symbol public misc ME2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ME2__WD K_unchecked = dw'myself' __assimilated=1
			package ME3__WD_con _plain
				symbol public misc ME3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ME3__WD K_unchecked = dw'self' __assimilated=1
			package OF1__WD_con _plain
				symbol public misc OF1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OF1__WD K_unchecked = dw'of' __assimilated=1
			package OF2__WD_con _plain
				symbol public misc OF2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OF2__WD K_unchecked = dw'of' __assimilated=1
			package OF3__WD_con _plain
				symbol public misc OF3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OF3__WD K_unchecked = dw'of' __assimilated=1
			package OF4__WD_con _plain
				symbol public misc OF4__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OF4__WD K_unchecked = dw'of' __assimilated=1
			package OTHER1__WD_con _plain
				symbol public misc OTHER1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OTHER1__WD K_unchecked = dw'another' __assimilated=1
			package OTHER2__WD_con _plain
				symbol public misc OTHER2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OTHER2__WD K_unchecked = dw'other' __assimilated=1
			package OTHER3__WD_con _plain
				symbol public misc OTHER3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OTHER3__WD K_unchecked = dw'other' __assimilated=1
			package THEN1__WD_con _plain
				symbol public misc THEN1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant THEN1__WD K_unchecked = dw'then' __assimilated=1
			package THEN2__WD_con _plain
				symbol public misc THEN2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant THEN2__WD K_unchecked = dw'then' __assimilated=1
			package THEN3__WD_con _plain
				symbol public misc THEN3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant THEN3__WD K_unchecked = dw'then' __assimilated=1
			package NO1__WD_con _plain
				symbol public misc NO1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NO1__WD K_unchecked = dw'n//' __assimilated=1
			package NO2__WD_con _plain
				symbol public misc NO2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NO2__WD K_unchecked = dw'no' __assimilated=1
			package NO3__WD_con _plain
				symbol public misc NO3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NO3__WD K_unchecked = dw'no' __assimilated=1
			package YES1__WD_con _plain
				symbol public misc YES1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant YES1__WD K_unchecked = dw'y//' __assimilated=1
			package YES2__WD_con _plain
				symbol public misc YES2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant YES2__WD K_unchecked = dw'yes' __assimilated=1
			package YES3__WD_con _plain
				symbol public misc YES3__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant YES3__WD K_unchecked = dw'yes' __assimilated=1
			package AMUSING__WD_con _plain
				symbol public misc AMUSING__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AMUSING__WD K_unchecked = dw'amusing' __assimilated=1
			package FULLSCORE1__WD_con _plain
				symbol public misc FULLSCORE1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant FULLSCORE1__WD K_unchecked = dw'fullscore' __assimilated=1
			package FULLSCORE2__WD_con _plain
				symbol public misc FULLSCORE2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant FULLSCORE2__WD K_unchecked = dw'full' __assimilated=1
			package QUIT1__WD_con _plain
				symbol public misc QUIT1__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant QUIT1__WD K_unchecked = dw'q//' __assimilated=1
			package QUIT2__WD_con _plain
				symbol public misc QUIT2__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant QUIT2__WD K_unchecked = dw'quit' __assimilated=1
			package RESTART__WD_con _plain
				symbol public misc RESTART__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RESTART__WD K_unchecked = dw'restart' __assimilated=1
			package RESTORE__WD_con _plain
				symbol public misc RESTORE__WD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RESTORE__WD K_unchecked = dw'restore' __assimilated=1
			package LanguageAnimateGender_con _plain
				symbol public misc LanguageAnimateGender
				symbol external misc male --> /main/template/properties/male_prop/male
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LanguageAnimateGender K_unchecked = male __assimilated=1
			package LanguageInanimateGender_con _plain
				symbol public misc LanguageInanimateGender
				symbol external misc neuter --> /main/template/properties/neuter_prop/neuter
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LanguageInanimateGender K_unchecked = neuter __assimilated=1
			package LanguageContractionForms_con _plain
				symbol public misc LanguageContractionForms
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LanguageContractionForms K_unchecked = 2 __assimilated=1
			package LanguageCases_con _plain
				symbol public misc LanguageCases
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LanguageCases K_unchecked = 1 __assimilated=1
			package thedark_con _plain
				symbol public misc thedark
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant thedark K_unchecked = 0 __assimilated=1 __object=1
			package REQUISITION_STACK_SIZE_con _plain
				symbol public misc REQUISITION_STACK_SIZE
				symbol public misc Computed_Constant_Value_15
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_16
				symbol external misc plug_00032 --> /main/connectors/plug_00032
				constant Computed_Constant_Value_15 K_unchecked = 3
				constant Computed_Constant_Value_16 K_unchecked = product{ Computed_Constant_Value_15, plug_00032 }
				constant REQUISITION_STACK_SIZE K_unchecked = Computed_Constant_Value_16 __assimilated=1
			package SEEK_ITF_con _plain
				symbol public misc SEEK_ITF
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SEEK_ITF K_unchecked = 0 __assimilated=1
			package ADVANCE_ITF_con _plain
				symbol public misc ADVANCE_ITF
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ADVANCE_ITF K_unchecked = 1 __assimilated=1
			package COALESCE_ITF_con _plain
				symbol public misc COALESCE_ITF
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COALESCE_ITF K_unchecked = 2 __assimilated=1
			package START_ITF_con _plain
				symbol public misc START_ITF
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant START_ITF K_unchecked = 3 __assimilated=1
			package R_DecimalNumber_con _plain
				symbol public misc R_DecimalNumber
				symbol external misc GenerateRandomNumber --> /main/template/functions/GenerateRandomNumber_fn/GenerateRandomNumber
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant R_DecimalNumber K_unchecked = GenerateRandomNumber __assimilated=1
			package R_PrintTimeOfDay_con _plain
				symbol public misc R_PrintTimeOfDay
				symbol external misc GenerateRandomNumber --> /main/template/functions/GenerateRandomNumber_fn/GenerateRandomNumber
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant R_PrintTimeOfDay K_unchecked = GenerateRandomNumber __assimilated=1
			package InformParser_con _plain
				symbol public misc InformParser
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant InformParser K_unchecked = 0 __assimilated=1 __object=1
			package PATTERN_NULL_con _plain
				symbol public misc PATTERN_NULL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PATTERN_NULL K_unchecked = 65535 __assimilated=1
			package INDEF_ALL_WANTED_con _plain
				symbol public misc INDEF_ALL_WANTED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INDEF_ALL_WANTED K_unchecked = 32767 __assimilated=1
			package comma_word_con _plain
				symbol public misc comma_word
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant comma_word K_unchecked = dw'comma,' __assimilated=1
			package OTHER_BIT_con _plain
				symbol public misc OTHER_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OTHER_BIT K_unchecked = 1 __assimilated=1
			package MY_BIT_con _plain
				symbol public misc MY_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MY_BIT K_unchecked = 2 __assimilated=1
			package THAT_BIT_con _plain
				symbol public misc THAT_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant THAT_BIT K_unchecked = 4 __assimilated=1
			package PLURAL_BIT_con _plain
				symbol public misc PLURAL_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PLURAL_BIT K_unchecked = 8 __assimilated=1
			package LIT_BIT_con _plain
				symbol public misc LIT_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LIT_BIT K_unchecked = 16 __assimilated=1
			package UNLIT_BIT_con _plain
				symbol public misc UNLIT_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UNLIT_BIT K_unchecked = 32 __assimilated=1
			package SCORE__CHOOSEOBJ_con _plain
				symbol public misc SCORE__CHOOSEOBJ
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__CHOOSEOBJ K_unchecked = 1000 __assimilated=1
			package SCORE__IFGOOD_con _plain
				symbol public misc SCORE__IFGOOD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__IFGOOD K_unchecked = 500 __assimilated=1
			package SCORE__UNCONCEALED_con _plain
				symbol public misc SCORE__UNCONCEALED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__UNCONCEALED K_unchecked = 100 __assimilated=1
			package SCORE__BESTLOC_con _plain
				symbol public misc SCORE__BESTLOC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__BESTLOC K_unchecked = 60 __assimilated=1
			package SCORE__NEXTBESTLOC_con _plain
				symbol public misc SCORE__NEXTBESTLOC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__NEXTBESTLOC K_unchecked = 40 __assimilated=1
			package SCORE__NOTCOMPASS_con _plain
				symbol public misc SCORE__NOTCOMPASS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__NOTCOMPASS K_unchecked = 20 __assimilated=1
			package SCORE__NOTSCENERY_con _plain
				symbol public misc SCORE__NOTSCENERY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__NOTSCENERY K_unchecked = 10 __assimilated=1
			package SCORE__NOTACTOR_con _plain
				symbol public misc SCORE__NOTACTOR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__NOTACTOR K_unchecked = 5 __assimilated=1
			package SCORE__GNA_con _plain
				symbol public misc SCORE__GNA
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__GNA K_unchecked = 1 __assimilated=1
			package SCORE__DIVISOR_con _plain
				symbol public misc SCORE__DIVISOR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SCORE__DIVISOR K_unchecked = 20 __assimilated=1
			package PREFER_HELD_con _plain
				symbol public misc PREFER_HELD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PREFER_HELD K_unchecked = 0 __assimilated=1
			package HIGHEST_DPMR_SCORE_con _plain
				symbol public misc HIGHEST_DPMR_SCORE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HIGHEST_DPMR_SCORE K_unchecked = 4 __assimilated=1
			package InformLibrary_con _plain
				symbol public misc InformLibrary
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant InformLibrary K_unchecked = 0 __assimilated=1 __object=1
			package ACTION_PRES_con _plain
				symbol public misc ACTION_PRES
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACTION_PRES K_unchecked = 0 __assimilated=1
			package NO_INPS_PRES_con _plain
				symbol public misc NO_INPS_PRES
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NO_INPS_PRES K_unchecked = 1 __assimilated=1
			package INP1_PRES_con _plain
				symbol public misc INP1_PRES
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INP1_PRES K_unchecked = 2 __assimilated=1
			package INP2_PRES_con _plain
				symbol public misc INP2_PRES
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant INP2_PRES K_unchecked = 3 __assimilated=1
			package attributed_property_offsets_SIZE_con _plain
				symbol public misc attributed_property_offsets_SIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant attributed_property_offsets_SIZE K_unchecked = 48 __assimilated=1
			package valued_property_offsets_SIZE_con _plain
				symbol public misc valued_property_offsets_SIZE
				symbol public misc Computed_Constant_Value_20
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_21
				symbol external misc plug_00037 --> /main/connectors/plug_00037
				symbol public misc Computed_Constant_Value_22
				symbol external misc INDIV_PROP_START --> /main/template/constants/INDIV_PROP_START_con/INDIV_PROP_START
				symbol public misc Computed_Constant_Value_23
				symbol public misc Computed_Constant_Value_24
				constant Computed_Constant_Value_20 K_unchecked = 100
				constant Computed_Constant_Value_21 K_unchecked = sum{ Computed_Constant_Value_20, plug_00037 }
				constant Computed_Constant_Value_22 K_unchecked = sum{ Computed_Constant_Value_21, INDIV_PROP_START }
				constant Computed_Constant_Value_23 K_unchecked = 48
				constant Computed_Constant_Value_24 K_unchecked = difference{ Computed_Constant_Value_22, Computed_Constant_Value_23 }
				constant valued_property_offsets_SIZE K_unchecked = Computed_Constant_Value_24 __assimilated=1
			package AD_ACTION_con _plain
				symbol public misc AD_ACTION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AD_ACTION K_unchecked = 0 __assimilated=1
			package AD_REQUIREMENTS_con _plain
				symbol public misc AD_REQUIREMENTS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AD_REQUIREMENTS K_unchecked = 1 __assimilated=1
			package AD_NOUN_KOV_con _plain
				symbol public misc AD_NOUN_KOV
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AD_NOUN_KOV K_unchecked = 2 __assimilated=1
			package AD_SECOND_KOV_con _plain
				symbol public misc AD_SECOND_KOV
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AD_SECOND_KOV K_unchecked = 3 __assimilated=1
			package AD_VARIABLES_CREATOR_con _plain
				symbol public misc AD_VARIABLES_CREATOR
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AD_VARIABLES_CREATOR K_unchecked = 4 __assimilated=1
			package AD_VARIABLES_ID_con _plain
				symbol public misc AD_VARIABLES_ID
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AD_VARIABLES_ID K_unchecked = 5 __assimilated=1
			package AD_RECORD_SIZE_con _plain
				symbol public misc AD_RECORD_SIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant AD_RECORD_SIZE K_unchecked = 6 __assimilated=1
			package TOUCH_NOUN_ABIT_con _plain
				symbol public misc TOUCH_NOUN_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TOUCH_NOUN_ABIT K_unchecked = 1 __assimilated=1
			package TOUCH_SECOND_ABIT_con _plain
				symbol public misc TOUCH_SECOND_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TOUCH_SECOND_ABIT K_unchecked = 2 __assimilated=1
			package LIGHT_ABIT_con _plain
				symbol public misc LIGHT_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LIGHT_ABIT K_unchecked = 4 __assimilated=1
			package NEED_NOUN_ABIT_con _plain
				symbol public misc NEED_NOUN_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NEED_NOUN_ABIT K_unchecked = 8 __assimilated=1
			package NEED_SECOND_ABIT_con _plain
				symbol public misc NEED_SECOND_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NEED_SECOND_ABIT K_unchecked = 16 __assimilated=1
			package OUT_OF_WORLD_ABIT_con _plain
				symbol public misc OUT_OF_WORLD_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant OUT_OF_WORLD_ABIT K_unchecked = 32 __assimilated=1
			package CARRY_NOUN_ABIT_con _plain
				symbol public misc CARRY_NOUN_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CARRY_NOUN_ABIT K_unchecked = 64 __assimilated=1
			package CARRY_SECOND_ABIT_con _plain
				symbol public misc CARRY_SECOND_ABIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CARRY_SECOND_ABIT K_unchecked = 128 __assimilated=1
			package MAX_NESTED_ACTIVITIES_con _plain
				symbol public misc MAX_NESTED_ACTIVITIES
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MAX_NESTED_ACTIVITIES K_unchecked = 20 __assimilated=1
			package MAX_MSTACK_FRAME_con _plain
				symbol public misc MAX_MSTACK_FRAME
				symbol public misc Computed_Constant_Value_28
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_29
				symbol external misc plug_00040 --> /main/connectors/plug_00040
				constant Computed_Constant_Value_28 K_unchecked = 2
				constant Computed_Constant_Value_29 K_unchecked = sum{ Computed_Constant_Value_28, plug_00040 }
				constant MAX_MSTACK_FRAME K_unchecked = Computed_Constant_Value_29 __assimilated=1
			package MSTACK_CAPACITY_con _plain
				symbol public misc MSTACK_CAPACITY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MSTACK_CAPACITY K_unchecked = 20 __assimilated=1
			package MSTACK_SIZE_con _plain
				symbol public misc MSTACK_SIZE
				symbol public misc Computed_Constant_Value_30
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc MSTACK_CAPACITY --> /main/template/constants/MSTACK_CAPACITY_con/MSTACK_CAPACITY
				symbol external misc MAX_MSTACK_FRAME --> /main/template/constants/MAX_MSTACK_FRAME_con/MAX_MSTACK_FRAME
				constant Computed_Constant_Value_30 K_unchecked = product{ MSTACK_CAPACITY, MAX_MSTACK_FRAME }
				constant MSTACK_SIZE K_unchecked = Computed_Constant_Value_30 __assimilated=1
			package RR_NAME_con _plain
				symbol public misc RR_NAME
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RR_NAME K_unchecked = 5 __assimilated=1
			package RR_PERMISSIONS_con _plain
				symbol public misc RR_PERMISSIONS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RR_PERMISSIONS K_unchecked = 6 __assimilated=1
			package RR_STORAGE_con _plain
				symbol public misc RR_STORAGE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RR_STORAGE K_unchecked = 7 __assimilated=1
			package RR_KIND_con _plain
				symbol public misc RR_KIND
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RR_KIND K_unchecked = 8 __assimilated=1
			package RR_HANDLER_con _plain
				symbol public misc RR_HANDLER
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RR_HANDLER K_unchecked = 9 __assimilated=1
			package RR_DESCRIPTION_con _plain
				symbol public misc RR_DESCRIPTION
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RR_DESCRIPTION K_unchecked = 10 __assimilated=1
			package VALENCY_MASK_con _plain
				symbol public misc VALENCY_MASK
				symbol public misc Computed_Constant_Value_31
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc plug_00043 --> /main/connectors/plug_00043
				symbol external misc plug_00044 --> /main/connectors/plug_00044
				symbol public misc Computed_Constant_Value_32
				symbol external misc plug_00045 --> /main/connectors/plug_00045
				symbol public misc Computed_Constant_Value_33
				symbol external misc plug_00046 --> /main/connectors/plug_00046
				constant Computed_Constant_Value_31 K_unchecked = sum{ plug_00043, plug_00044 }
				constant Computed_Constant_Value_32 K_unchecked = sum{ Computed_Constant_Value_31, plug_00045 }
				constant Computed_Constant_Value_33 K_unchecked = sum{ Computed_Constant_Value_32, plug_00046 }
				constant VALENCY_MASK K_unchecked = Computed_Constant_Value_33 __assimilated=1
			package VTOVS_LEFT_INDEX_PROP_con _plain
				symbol public misc VTOVS_LEFT_INDEX_PROP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_LEFT_INDEX_PROP K_unchecked = 0 __assimilated=1
			package VTOVS_RIGHT_INDEX_PROP_con _plain
				symbol public misc VTOVS_RIGHT_INDEX_PROP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_RIGHT_INDEX_PROP K_unchecked = 1 __assimilated=1
			package VTOVS_LEFT_DOMAIN_SIZE_con _plain
				symbol public misc VTOVS_LEFT_DOMAIN_SIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_LEFT_DOMAIN_SIZE K_unchecked = 2 __assimilated=1
			package VTOVS_RIGHT_DOMAIN_SIZE_con _plain
				symbol public misc VTOVS_RIGHT_DOMAIN_SIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_RIGHT_DOMAIN_SIZE K_unchecked = 3 __assimilated=1
			package VTOVS_LEFT_PRINTING_ROUTINE_con _plain
				symbol public misc VTOVS_LEFT_PRINTING_ROUTINE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_LEFT_PRINTING_ROUTINE K_unchecked = 4 __assimilated=1
			package VTOVS_RIGHT_PRINTING_ROUTINE_con _plain
				symbol public misc VTOVS_RIGHT_PRINTING_ROUTINE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_RIGHT_PRINTING_ROUTINE K_unchecked = 5 __assimilated=1
			package VTOVS_CACHE_BROKEN_con _plain
				symbol public misc VTOVS_CACHE_BROKEN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_CACHE_BROKEN K_unchecked = 6 __assimilated=1
			package VTOVS_CACHE_con _plain
				symbol public misc VTOVS_CACHE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VTOVS_CACHE K_unchecked = 7 __assimilated=1
			package SLOW_ROUTE_FINDING_con _plain
				symbol public misc SLOW_ROUTE_FINDING
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SLOW_ROUTE_FINDING K_unchecked = 0 __assimilated=1
			package NUM_DOORS_con _plain
				symbol public misc NUM_DOORS
				symbol external misc plug_00047 --> /main/connectors/plug_00047
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NUM_DOORS K_unchecked = plug_00047 __assimilated=1
			package NUM_ROOMS_con _plain
				symbol public misc NUM_ROOMS
				symbol external misc plug_00048 --> /main/connectors/plug_00048
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NUM_ROOMS K_unchecked = plug_00048 __assimilated=1
			package MAX_ROUTE_LENGTH_con _plain
				symbol public misc MAX_ROUTE_LENGTH
				symbol public misc Computed_Constant_Value_36
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_37
				symbol external misc plug_00049 --> /main/connectors/plug_00049
				constant Computed_Constant_Value_36 K_unchecked = 32
				constant Computed_Constant_Value_37 K_unchecked = sum{ plug_00049, Computed_Constant_Value_36 }
				constant MAX_ROUTE_LENGTH K_unchecked = Computed_Constant_Value_37 __assimilated=1
			package MAX_TIMERS_con _plain
				symbol public misc MAX_TIMERS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MAX_TIMERS K_unchecked = 0 __assimilated=1
			package RS_NEITHER_con _plain
				symbol public misc RS_NEITHER
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RS_NEITHER K_unchecked = 0 __assimilated=1
			package RS_SUCCEEDS_con _plain
				symbol public misc RS_SUCCEEDS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RS_SUCCEEDS K_unchecked = 1 __assimilated=1
			package RS_FAILS_con _plain
				symbol public misc RS_FAILS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RS_FAILS K_unchecked = 2 __assimilated=1
			package TB_COLUMN_REAL_con _plain
				symbol public misc TB_COLUMN_REAL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_REAL K_unchecked = 32768 __assimilated=1
			package TB_COLUMN_SIGNED_con _plain
				symbol public misc TB_COLUMN_SIGNED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_SIGNED K_unchecked = 16384 __assimilated=1
			package TB_COLUMN_TOPIC_con _plain
				symbol public misc TB_COLUMN_TOPIC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_TOPIC K_unchecked = 8192 __assimilated=1
			package TB_COLUMN_DONTSORTME_con _plain
				symbol public misc TB_COLUMN_DONTSORTME
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_DONTSORTME K_unchecked = 4096 __assimilated=1
			package TB_COLUMN_NOBLANKBITS_con _plain
				symbol public misc TB_COLUMN_NOBLANKBITS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_NOBLANKBITS K_unchecked = 2048 __assimilated=1
			package TB_COLUMN_CANEXCHANGE_con _plain
				symbol public misc TB_COLUMN_CANEXCHANGE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_CANEXCHANGE K_unchecked = 1024 __assimilated=1
			package TB_COLUMN_ALLOCATED_con _plain
				symbol public misc TB_COLUMN_ALLOCATED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_ALLOCATED K_unchecked = 512 __assimilated=1
			package TB_COLUMN_NUMBER_con _plain
				symbol public misc TB_COLUMN_NUMBER
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TB_COLUMN_NUMBER K_unchecked = 511 __assimilated=1
			package COL_HSIZE_con _plain
				symbol public misc COL_HSIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COL_HSIZE K_unchecked = 2 __assimilated=1
			package TABLE_NOVALUE_con _plain
				symbol public misc TABLE_NOVALUE
				symbol external misc plug_00050 --> /main/connectors/plug_00050
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TABLE_NOVALUE K_unchecked = plug_00050 __assimilated=1
			package cap_short_name_con _plain
				symbol public misc cap_short_name
				symbol external misc short_name --> /main/template/properties/short_name_prop/short_name
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant cap_short_name K_unchecked = short_name __assimilated=1
			package BLK_HEADER_N_con _plain
				symbol public misc BLK_HEADER_N
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_HEADER_N K_unchecked = 0 __assimilated=1
			package BLK_HEADER_FLAGS_con _plain
				symbol public misc BLK_HEADER_FLAGS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_HEADER_FLAGS K_unchecked = 1 __assimilated=1
			package BLK_FLAG_MULTIPLE_con _plain
				symbol public misc BLK_FLAG_MULTIPLE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_FLAG_MULTIPLE K_unchecked = 1 __assimilated=1
			package BLK_FLAG_16_BIT_con _plain
				symbol public misc BLK_FLAG_16_BIT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_FLAG_16_BIT K_unchecked = 2 __assimilated=1
			package BLK_FLAG_WORD_con _plain
				symbol public misc BLK_FLAG_WORD
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_FLAG_WORD K_unchecked = 4 __assimilated=1
			package BLK_FLAG_RESIDENT_con _plain
				symbol public misc BLK_FLAG_RESIDENT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_FLAG_RESIDENT K_unchecked = 8 __assimilated=1
			package BLK_FLAG_TRUNCMULT_con _plain
				symbol public misc BLK_FLAG_TRUNCMULT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_FLAG_TRUNCMULT K_unchecked = 16 __assimilated=1
			package BLK_HEADER_KOV_con _plain
				symbol public misc BLK_HEADER_KOV
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_HEADER_KOV K_unchecked = 1 __assimilated=1
			package BLK_HEADER_RCOUNT_con _plain
				symbol public misc BLK_HEADER_RCOUNT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_HEADER_RCOUNT K_unchecked = 2 __assimilated=1
			package BLK_DATA_OFFSET_con _plain
				symbol public misc BLK_DATA_OFFSET
				symbol public misc Computed_Constant_Value_50
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_51
				symbol external misc plug_00091 --> /main/connectors/plug_00091
				constant Computed_Constant_Value_50 K_unchecked = 3
				constant Computed_Constant_Value_51 K_unchecked = product{ Computed_Constant_Value_50, plug_00091 }
				constant BLK_DATA_OFFSET K_unchecked = Computed_Constant_Value_51 __assimilated=1
			package BLK_DATA_MULTI_OFFSET_con _plain
				symbol public misc BLK_DATA_MULTI_OFFSET
				symbol public misc Computed_Constant_Value_52
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_53
				symbol external misc plug_00092 --> /main/connectors/plug_00092
				symbol public misc Computed_Constant_Value_54
				symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
				constant Computed_Constant_Value_52 K_unchecked = 2
				constant Computed_Constant_Value_53 K_unchecked = product{ Computed_Constant_Value_52, plug_00092 }
				constant Computed_Constant_Value_54 K_unchecked = sum{ BLK_DATA_OFFSET, Computed_Constant_Value_53 }
				constant BLK_DATA_MULTI_OFFSET K_unchecked = Computed_Constant_Value_54 __assimilated=1
			package BLK_NEXT_con _plain
				symbol public misc BLK_NEXT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_NEXT K_unchecked = 3 __assimilated=1
			package BLK_PREV_con _plain
				symbol public misc BLK_PREV
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_PREV K_unchecked = 4 __assimilated=1
			package SMALLEST_BLK_WORTH_ALLOCATING_con _plain
				symbol public misc SMALLEST_BLK_WORTH_ALLOCATING
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SMALLEST_BLK_WORTH_ALLOCATING K_unchecked = 12 __assimilated=1
			package RC_INFINITY_con _plain
				symbol public misc RC_INFINITY
				symbol external misc plug_00094 --> /main/connectors/plug_00094
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RC_INFINITY K_unchecked = plug_00094 __assimilated=1
			package BLK_BVBITMAP_con _plain
				symbol public misc BLK_BVBITMAP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_BVBITMAP K_unchecked = 255 __assimilated=1
			package BLK_BVBITMAP_LONGBLOCK_con _plain
				symbol public misc BLK_BVBITMAP_LONGBLOCK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_BVBITMAP_LONGBLOCK K_unchecked = 16 __assimilated=1
			package BLK_BVBITMAP_TEXT_con _plain
				symbol public misc BLK_BVBITMAP_TEXT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_BVBITMAP_TEXT K_unchecked = 32 __assimilated=1
			package BLK_BVBITMAP_CONSTANT_con _plain
				symbol public misc BLK_BVBITMAP_CONSTANT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_BVBITMAP_CONSTANT K_unchecked = 64 __assimilated=1
			package BLK_BVBITMAP_LONGBLOCKMASK_con _plain
				symbol public misc BLK_BVBITMAP_LONGBLOCKMASK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_BVBITMAP_LONGBLOCKMASK K_unchecked = 65296 __assimilated=1
			package BLK_BVBITMAP_TEXTMASK_con _plain
				symbol public misc BLK_BVBITMAP_TEXTMASK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_BVBITMAP_TEXTMASK K_unchecked = 65312 __assimilated=1
			package BLK_BVBITMAP_CONSTANTMASK_con _plain
				symbol public misc BLK_BVBITMAP_CONSTANTMASK
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BLK_BVBITMAP_CONSTANTMASK K_unchecked = 65344 __assimilated=1
			package CREATE_KOVS_con _plain
				symbol public misc CREATE_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CREATE_KOVS K_unchecked = 1 __assimilated=1
			package CAST_KOVS_con _plain
				symbol public misc CAST_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CAST_KOVS K_unchecked = 2 __assimilated=1
			package DESTROY_KOVS_con _plain
				symbol public misc DESTROY_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DESTROY_KOVS K_unchecked = 3 __assimilated=1
			package MAKEMUTABLE_KOVS_con _plain
				symbol public misc MAKEMUTABLE_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MAKEMUTABLE_KOVS K_unchecked = 4 __assimilated=1
			package COPYKIND_KOVS_con _plain
				symbol public misc COPYKIND_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COPYKIND_KOVS K_unchecked = 5 __assimilated=1
			package EXTENT_KOVS_con _plain
				symbol public misc EXTENT_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant EXTENT_KOVS K_unchecked = 6 __assimilated=1
			package COPYQUICK_KOVS_con _plain
				symbol public misc COPYQUICK_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COPYQUICK_KOVS K_unchecked = 7 __assimilated=1
			package COPYSB_KOVS_con _plain
				symbol public misc COPYSB_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COPYSB_KOVS K_unchecked = 8 __assimilated=1
			package KINDDATA_KOVS_con _plain
				symbol public misc KINDDATA_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant KINDDATA_KOVS K_unchecked = 9 __assimilated=1
			package COPY_KOVS_con _plain
				symbol public misc COPY_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COPY_KOVS K_unchecked = 10 __assimilated=1
			package COMPARE_KOVS_con _plain
				symbol public misc COMPARE_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COMPARE_KOVS K_unchecked = 11 __assimilated=1
			package READ_FILE_KOVS_con _plain
				symbol public misc READ_FILE_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant READ_FILE_KOVS K_unchecked = 12 __assimilated=1
			package WRITE_FILE_KOVS_con _plain
				symbol public misc WRITE_FILE_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WRITE_FILE_KOVS K_unchecked = 13 __assimilated=1
			package HASH_KOVS_con _plain
				symbol public misc HASH_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant HASH_KOVS K_unchecked = 14 __assimilated=1
			package DEBUG_KOVS_con _plain
				symbol public misc DEBUG_KOVS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DEBUG_KOVS K_unchecked = 15 __assimilated=1
			package CONSTANT_PACKED_TEXT_STORAGE_con _plain
				symbol public misc CONSTANT_PACKED_TEXT_STORAGE
				symbol public misc Computed_Constant_Value_57
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc BLK_BVBITMAP_TEXT --> /main/template/constants/BLK_BVBITMAP_TEXT_con/BLK_BVBITMAP_TEXT
				symbol external misc BLK_BVBITMAP_CONSTANT --> /main/template/constants/BLK_BVBITMAP_CONSTANT_con/BLK_BVBITMAP_CONSTANT
				symbol public misc Computed_Constant_Value_58
				symbol public misc Computed_Constant_Value_59
				constant Computed_Constant_Value_57 K_unchecked = sum{ BLK_BVBITMAP_TEXT, BLK_BVBITMAP_CONSTANT }
				constant Computed_Constant_Value_58 K_unchecked = 1
				constant Computed_Constant_Value_59 K_unchecked = sum{ Computed_Constant_Value_57, Computed_Constant_Value_58 }
				constant CONSTANT_PACKED_TEXT_STORAGE K_unchecked = Computed_Constant_Value_59 __assimilated=1
			package CONSTANT_PERISHABLE_TEXT_STORAGE_con _plain
				symbol public misc CONSTANT_PERISHABLE_TEXT_STORAGE
				symbol public misc Computed_Constant_Value_60
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc BLK_BVBITMAP_TEXT --> /main/template/constants/BLK_BVBITMAP_TEXT_con/BLK_BVBITMAP_TEXT
				symbol external misc BLK_BVBITMAP_CONSTANT --> /main/template/constants/BLK_BVBITMAP_CONSTANT_con/BLK_BVBITMAP_CONSTANT
				symbol public misc Computed_Constant_Value_61
				symbol public misc Computed_Constant_Value_62
				constant Computed_Constant_Value_60 K_unchecked = sum{ BLK_BVBITMAP_TEXT, BLK_BVBITMAP_CONSTANT }
				constant Computed_Constant_Value_61 K_unchecked = 2
				constant Computed_Constant_Value_62 K_unchecked = sum{ Computed_Constant_Value_60, Computed_Constant_Value_61 }
				constant CONSTANT_PERISHABLE_TEXT_STORAGE K_unchecked = Computed_Constant_Value_62 __assimilated=1
			package PACKED_TEXT_STORAGE_con _plain
				symbol public misc PACKED_TEXT_STORAGE
				symbol public misc Computed_Constant_Value_63
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_64
				symbol external misc BLK_BVBITMAP_TEXT --> /main/template/constants/BLK_BVBITMAP_TEXT_con/BLK_BVBITMAP_TEXT
				constant Computed_Constant_Value_63 K_unchecked = 3
				constant Computed_Constant_Value_64 K_unchecked = sum{ BLK_BVBITMAP_TEXT, Computed_Constant_Value_63 }
				constant PACKED_TEXT_STORAGE K_unchecked = Computed_Constant_Value_64 __assimilated=1
			package UNPACKED_TEXT_STORAGE_con _plain
				symbol public misc UNPACKED_TEXT_STORAGE
				symbol public misc Computed_Constant_Value_65
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc BLK_BVBITMAP_TEXT --> /main/template/constants/BLK_BVBITMAP_TEXT_con/BLK_BVBITMAP_TEXT
				symbol external misc BLK_BVBITMAP_LONGBLOCK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCK_con/BLK_BVBITMAP_LONGBLOCK
				symbol public misc Computed_Constant_Value_66
				symbol public misc Computed_Constant_Value_67
				constant Computed_Constant_Value_65 K_unchecked = sum{ BLK_BVBITMAP_TEXT, BLK_BVBITMAP_LONGBLOCK }
				constant Computed_Constant_Value_66 K_unchecked = 4
				constant Computed_Constant_Value_67 K_unchecked = sum{ Computed_Constant_Value_65, Computed_Constant_Value_66 }
				constant UNPACKED_TEXT_STORAGE K_unchecked = Computed_Constant_Value_67 __assimilated=1
			package TEXT_TY_Storage_Flags_con _plain
				symbol public misc TEXT_TY_Storage_Flags
				symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TEXT_TY_Storage_Flags K_unchecked = BLK_FLAG_MULTIPLE __assimilated=1
			package ZSCII_Tables_con _plain
				symbol public misc ZSCII_Tables
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ZSCII_Tables K_unchecked = 0 __assimilated=1
			package UNIC_NCT_con _plain
				symbol public misc UNIC_NCT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UNIC_NCT K_unchecked = 10000 __assimilated=1
			package TEXT_TY_BufferSize_con _plain
				symbol public misc TEXT_TY_BufferSize
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TEXT_TY_BufferSize K_unchecked = 512 __assimilated=1
			package TEXT_TY_NoBuffers_con _plain
				symbol public misc TEXT_TY_NoBuffers
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TEXT_TY_NoBuffers K_unchecked = 2 __assimilated=1
			package CHR_BLOB_con _plain
				symbol public misc CHR_BLOB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CHR_BLOB K_unchecked = 1 __assimilated=1
			package WORD_BLOB_con _plain
				symbol public misc WORD_BLOB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WORD_BLOB K_unchecked = 2 __assimilated=1
			package PWORD_BLOB_con _plain
				symbol public misc PWORD_BLOB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PWORD_BLOB K_unchecked = 3 __assimilated=1
			package UWORD_BLOB_con _plain
				symbol public misc UWORD_BLOB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UWORD_BLOB K_unchecked = 4 __assimilated=1
			package PARA_BLOB_con _plain
				symbol public misc PARA_BLOB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PARA_BLOB K_unchecked = 5 __assimilated=1
			package LINE_BLOB_con _plain
				symbol public misc LINE_BLOB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LINE_BLOB K_unchecked = 6 __assimilated=1
			package REGEXP_BLOB_con _plain
				symbol public misc REGEXP_BLOB
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant REGEXP_BLOB K_unchecked = 7 __assimilated=1
			package WS_BRM_con _plain
				symbol public misc WS_BRM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WS_BRM K_unchecked = 1 __assimilated=1
			package SKIPPED_BRM_con _plain
				symbol public misc SKIPPED_BRM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SKIPPED_BRM K_unchecked = 2 __assimilated=1
			package ACCEPTED_BRM_con _plain
				symbol public misc ACCEPTED_BRM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACCEPTED_BRM K_unchecked = 3 __assimilated=1
			package ACCEPTEDP_BRM_con _plain
				symbol public misc ACCEPTEDP_BRM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACCEPTEDP_BRM K_unchecked = 4 __assimilated=1
			package ACCEPTEDN_BRM_con _plain
				symbol public misc ACCEPTEDN_BRM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACCEPTEDN_BRM K_unchecked = 5 __assimilated=1
			package ACCEPTEDPN_BRM_con _plain
				symbol public misc ACCEPTEDPN_BRM
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACCEPTEDPN_BRM K_unchecked = 6 __assimilated=1
			package NEWLINE_RE_CC_con _plain
				symbol public misc NEWLINE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NEWLINE_RE_CC K_unchecked = -1 __assimilated=1
			package TAB_RE_CC_con _plain
				symbol public misc TAB_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant TAB_RE_CC K_unchecked = -2 __assimilated=1
			package DIGIT_RE_CC_con _plain
				symbol public misc DIGIT_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DIGIT_RE_CC K_unchecked = -3 __assimilated=1
			package NONDIGIT_RE_CC_con _plain
				symbol public misc NONDIGIT_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NONDIGIT_RE_CC K_unchecked = -4 __assimilated=1
			package WHITESPACE_RE_CC_con _plain
				symbol public misc WHITESPACE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WHITESPACE_RE_CC K_unchecked = -5 __assimilated=1
			package NONWHITESPACE_RE_CC_con _plain
				symbol public misc NONWHITESPACE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NONWHITESPACE_RE_CC K_unchecked = -6 __assimilated=1
			package PUNCTUATION_RE_CC_con _plain
				symbol public misc PUNCTUATION_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant PUNCTUATION_RE_CC K_unchecked = -7 __assimilated=1
			package NONPUNCTUATION_RE_CC_con _plain
				symbol public misc NONPUNCTUATION_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NONPUNCTUATION_RE_CC K_unchecked = -8 __assimilated=1
			package WORD_RE_CC_con _plain
				symbol public misc WORD_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant WORD_RE_CC K_unchecked = -9 __assimilated=1
			package NONWORD_RE_CC_con _plain
				symbol public misc NONWORD_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NONWORD_RE_CC K_unchecked = -10 __assimilated=1
			package ANYTHING_RE_CC_con _plain
				symbol public misc ANYTHING_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ANYTHING_RE_CC K_unchecked = -11 __assimilated=1
			package NOTHING_RE_CC_con _plain
				symbol public misc NOTHING_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NOTHING_RE_CC K_unchecked = -12 __assimilated=1
			package RANGE_RE_CC_con _plain
				symbol public misc RANGE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RANGE_RE_CC K_unchecked = -13 __assimilated=1
			package LCASE_RE_CC_con _plain
				symbol public misc LCASE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LCASE_RE_CC K_unchecked = -14 __assimilated=1
			package NONLCASE_RE_CC_con _plain
				symbol public misc NONLCASE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NONLCASE_RE_CC K_unchecked = -15 __assimilated=1
			package UCASE_RE_CC_con _plain
				symbol public misc UCASE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant UCASE_RE_CC K_unchecked = -16 __assimilated=1
			package NONUCASE_RE_CC_con _plain
				symbol public misc NONUCASE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NONUCASE_RE_CC K_unchecked = -17 __assimilated=1
			package SUBEXP_RE_CC_con _plain
				symbol public misc SUBEXP_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SUBEXP_RE_CC K_unchecked = -20 __assimilated=1
			package DISJUNCTION_RE_CC_con _plain
				symbol public misc DISJUNCTION_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant DISJUNCTION_RE_CC K_unchecked = -21 __assimilated=1
			package CHOICE_RE_CC_con _plain
				symbol public misc CHOICE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CHOICE_RE_CC K_unchecked = -22 __assimilated=1
			package QUANTIFIER_RE_CC_con _plain
				symbol public misc QUANTIFIER_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant QUANTIFIER_RE_CC K_unchecked = -23 __assimilated=1
			package IF_RE_CC_con _plain
				symbol public misc IF_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant IF_RE_CC K_unchecked = -24 __assimilated=1
			package CONDITION_RE_CC_con _plain
				symbol public misc CONDITION_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CONDITION_RE_CC K_unchecked = -25 __assimilated=1
			package THEN_RE_CC_con _plain
				symbol public misc THEN_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant THEN_RE_CC K_unchecked = -26 __assimilated=1
			package ELSE_RE_CC_con _plain
				symbol public misc ELSE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ELSE_RE_CC K_unchecked = -27 __assimilated=1
			package VARIABLE_RE_CC_con _plain
				symbol public misc VARIABLE_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant VARIABLE_RE_CC K_unchecked = -30 __assimilated=1
			package LITERAL_RE_CC_con _plain
				symbol public misc LITERAL_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LITERAL_RE_CC K_unchecked = -31 __assimilated=1
			package START_RE_CC_con _plain
				symbol public misc START_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant START_RE_CC K_unchecked = -40 __assimilated=1
			package END_RE_CC_con _plain
				symbol public misc END_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant END_RE_CC K_unchecked = -41 __assimilated=1
			package BOUNDARY_RE_CC_con _plain
				symbol public misc BOUNDARY_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant BOUNDARY_RE_CC K_unchecked = -42 __assimilated=1
			package NONBOUNDARY_RE_CC_con _plain
				symbol public misc NONBOUNDARY_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NONBOUNDARY_RE_CC K_unchecked = -43 __assimilated=1
			package ALWAYS_RE_CC_con _plain
				symbol public misc ALWAYS_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ALWAYS_RE_CC K_unchecked = -44 __assimilated=1
			package NEVER_RE_CC_con _plain
				symbol public misc NEVER_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant NEVER_RE_CC K_unchecked = -45 __assimilated=1
			package SENSITIVITY_RE_CC_con _plain
				symbol public misc SENSITIVITY_RE_CC
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant SENSITIVITY_RE_CC K_unchecked = -50 __assimilated=1
			package RE_MAX_PACKETS_con _plain
				symbol public misc RE_MAX_PACKETS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_MAX_PACKETS K_unchecked = 32 __assimilated=1
			package RE_PACKET_SIZE_con _plain
				symbol public misc RE_PACKET_SIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_PACKET_SIZE K_unchecked = 14 __assimilated=1
			package RE_PACKET_SIZE_IN_BYTES_con _plain
				symbol public misc RE_PACKET_SIZE_IN_BYTES
				symbol public misc Computed_Constant_Value_69
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc plug_00095 --> /main/connectors/plug_00095
				symbol external misc RE_PACKET_SIZE --> /main/template/constants/RE_PACKET_SIZE_con/RE_PACKET_SIZE
				constant Computed_Constant_Value_69 K_unchecked = product{ plug_00095, RE_PACKET_SIZE }
				constant RE_PACKET_SIZE_IN_BYTES K_unchecked = Computed_Constant_Value_69 __assimilated=1
			package RE_CCLASS_con _plain
				symbol public misc RE_CCLASS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_CCLASS K_unchecked = 0 __assimilated=1
			package RE_PAR1_con _plain
				symbol public misc RE_PAR1
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_PAR1 K_unchecked = 1 __assimilated=1
			package RE_PAR2_con _plain
				symbol public misc RE_PAR2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_PAR2 K_unchecked = 2 __assimilated=1
			package RE_PAR3_con _plain
				symbol public misc RE_PAR3
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_PAR3 K_unchecked = 3 __assimilated=1
			package RE_NEXT_con _plain
				symbol public misc RE_NEXT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_NEXT K_unchecked = 4 __assimilated=1
			package RE_PREVIOUS_con _plain
				symbol public misc RE_PREVIOUS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_PREVIOUS K_unchecked = 5 __assimilated=1
			package RE_DOWN_con _plain
				symbol public misc RE_DOWN
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_DOWN K_unchecked = 6 __assimilated=1
			package RE_UP_con _plain
				symbol public misc RE_UP
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_UP K_unchecked = 7 __assimilated=1
			package RE_DATA1_con _plain
				symbol public misc RE_DATA1
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_DATA1 K_unchecked = 8 __assimilated=1
			package RE_DATA2_con _plain
				symbol public misc RE_DATA2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_DATA2 K_unchecked = 9 __assimilated=1
			package RE_CONSTRAINT_con _plain
				symbol public misc RE_CONSTRAINT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_CONSTRAINT K_unchecked = 10 __assimilated=1
			package RE_CACHE1_con _plain
				symbol public misc RE_CACHE1
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_CACHE1 K_unchecked = 11 __assimilated=1
			package RE_CACHE2_con _plain
				symbol public misc RE_CACHE2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_CACHE2 K_unchecked = 12 __assimilated=1
			package RE_MODES_con _plain
				symbol public misc RE_MODES
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RE_MODES K_unchecked = 13 __assimilated=1
			package CIS_MFLAG_con _plain
				symbol public misc CIS_MFLAG
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant CIS_MFLAG K_unchecked = 1 __assimilated=1
			package ACCUM_MFLAG_con _plain
				symbol public misc ACCUM_MFLAG
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant ACCUM_MFLAG K_unchecked = 2 __assimilated=1
			package STORA_ACTION_F_con _plain
				symbol public misc STORA_ACTION_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STORA_ACTION_F K_unchecked = 0 __assimilated=1
			package STORA_NOUN_F_con _plain
				symbol public misc STORA_NOUN_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STORA_NOUN_F K_unchecked = 1 __assimilated=1
			package STORA_SECOND_F_con _plain
				symbol public misc STORA_SECOND_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STORA_SECOND_F K_unchecked = 2 __assimilated=1
			package STORA_ACTOR_F_con _plain
				symbol public misc STORA_ACTOR_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STORA_ACTOR_F K_unchecked = 3 __assimilated=1
			package STORA_REQUEST_F_con _plain
				symbol public misc STORA_REQUEST_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STORA_REQUEST_F K_unchecked = 4 __assimilated=1
			package STORA_COMMAND_TEXT_F_con _plain
				symbol public misc STORA_COMMAND_TEXT_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant STORA_COMMAND_TEXT_F K_unchecked = 5 __assimilated=1
			package LIST_ITEM_KOV_F_con _plain
				symbol public misc LIST_ITEM_KOV_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LIST_ITEM_KOV_F K_unchecked = 0 __assimilated=1
			package LIST_LENGTH_F_con _plain
				symbol public misc LIST_LENGTH_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LIST_LENGTH_F K_unchecked = 1 __assimilated=1
			package LIST_ITEM_BASE_con _plain
				symbol public misc LIST_ITEM_BASE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant LIST_ITEM_BASE K_unchecked = 2 __assimilated=1
			package COMBINATION_KIND_F_con _plain
				symbol public misc COMBINATION_KIND_F
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COMBINATION_KIND_F K_unchecked = 0 __assimilated=1
			package COMBINATION_ITEM_BASE_con _plain
				symbol public misc COMBINATION_ITEM_BASE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant COMBINATION_ITEM_BASE K_unchecked = 1 __assimilated=1
			package RRV_NAME_con _plain
				symbol public misc RRV_NAME
				symbol public misc Computed_Constant_Value_71
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_72
				symbol external misc RR_NAME --> /main/template/constants/RR_NAME_con/RR_NAME
				constant Computed_Constant_Value_71 K_unchecked = 5
				constant Computed_Constant_Value_72 K_unchecked = difference{ RR_NAME, Computed_Constant_Value_71 }
				constant RRV_NAME K_unchecked = Computed_Constant_Value_72 __assimilated=1
			package RRV_PERMISSIONS_con _plain
				symbol public misc RRV_PERMISSIONS
				symbol public misc Computed_Constant_Value_73
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_74
				symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
				constant Computed_Constant_Value_73 K_unchecked = 5
				constant Computed_Constant_Value_74 K_unchecked = difference{ RR_PERMISSIONS, Computed_Constant_Value_73 }
				constant RRV_PERMISSIONS K_unchecked = Computed_Constant_Value_74 __assimilated=1
			package RRV_STORAGE_con _plain
				symbol public misc RRV_STORAGE
				symbol public misc Computed_Constant_Value_75
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_76
				symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
				constant Computed_Constant_Value_75 K_unchecked = 5
				constant Computed_Constant_Value_76 K_unchecked = difference{ RR_STORAGE, Computed_Constant_Value_75 }
				constant RRV_STORAGE K_unchecked = Computed_Constant_Value_76 __assimilated=1
			package RRV_KIND_con _plain
				symbol public misc RRV_KIND
				symbol public misc Computed_Constant_Value_77
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_78
				symbol external misc RR_KIND --> /main/template/constants/RR_KIND_con/RR_KIND
				constant Computed_Constant_Value_77 K_unchecked = 5
				constant Computed_Constant_Value_78 K_unchecked = difference{ RR_KIND, Computed_Constant_Value_77 }
				constant RRV_KIND K_unchecked = Computed_Constant_Value_78 __assimilated=1
			package RRV_HANDLER_con _plain
				symbol public misc RRV_HANDLER
				symbol public misc Computed_Constant_Value_79
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_80
				symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
				constant Computed_Constant_Value_79 K_unchecked = 5
				constant Computed_Constant_Value_80 K_unchecked = difference{ RR_HANDLER, Computed_Constant_Value_79 }
				constant RRV_HANDLER K_unchecked = Computed_Constant_Value_80 __assimilated=1
			package RRV_DESCRIPTION_con _plain
				symbol public misc RRV_DESCRIPTION
				symbol public misc Computed_Constant_Value_81
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_82
				symbol external misc RR_DESCRIPTION --> /main/template/constants/RR_DESCRIPTION_con/RR_DESCRIPTION
				constant Computed_Constant_Value_81 K_unchecked = 5
				constant Computed_Constant_Value_82 K_unchecked = difference{ RR_DESCRIPTION, Computed_Constant_Value_81 }
				constant RRV_DESCRIPTION K_unchecked = Computed_Constant_Value_82 __assimilated=1
			package RRV_USED_con _plain
				symbol public misc RRV_USED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRV_USED K_unchecked = 6 __assimilated=1
			package RRV_FILLED_con _plain
				symbol public misc RRV_FILLED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRV_FILLED K_unchecked = 7 __assimilated=1
			package RRV_DATA_BASE_con _plain
				symbol public misc RRV_DATA_BASE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRV_DATA_BASE K_unchecked = 8 __assimilated=1
			package RRVAL_V_TO_V_con _plain
				symbol public misc RRVAL_V_TO_V
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRVAL_V_TO_V K_unchecked = 0 __assimilated=1
			package RRVAL_V_TO_O_con _plain
				symbol public misc RRVAL_V_TO_O
				symbol external misc plug_00096 --> /main/connectors/plug_00096
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRVAL_V_TO_O K_unchecked = plug_00096 __assimilated=1
			package RRVAL_O_TO_V_con _plain
				symbol public misc RRVAL_O_TO_V
				symbol external misc plug_00097 --> /main/connectors/plug_00097
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRVAL_O_TO_V K_unchecked = plug_00097 __assimilated=1
			package RRVAL_O_TO_O_con _plain
				symbol public misc RRVAL_O_TO_O
				symbol public misc Computed_Constant_Value_83
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc plug_00098 --> /main/connectors/plug_00098
				symbol external misc plug_00099 --> /main/connectors/plug_00099
				constant Computed_Constant_Value_83 K_unchecked = sum{ plug_00098, plug_00099 }
				constant RRVAL_O_TO_O K_unchecked = Computed_Constant_Value_83 __assimilated=1
			package RRVAL_EQUIV_con _plain
				symbol public misc RRVAL_EQUIV
				symbol public misc Computed_Constant_Value_84
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc plug_00100 --> /main/connectors/plug_00100
				symbol external misc plug_00101 --> /main/connectors/plug_00101
				constant Computed_Constant_Value_84 K_unchecked = sum{ plug_00100, plug_00101 }
				constant RRVAL_EQUIV K_unchecked = Computed_Constant_Value_84 __assimilated=1
			package RRVAL_SYM_V_TO_V_con _plain
				symbol public misc RRVAL_SYM_V_TO_V
				symbol external misc plug_00102 --> /main/connectors/plug_00102
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRVAL_SYM_V_TO_V K_unchecked = plug_00102 __assimilated=1
			package RRVAL_SYM_O_TO_O_con _plain
				symbol public misc RRVAL_SYM_O_TO_O
				symbol public misc Computed_Constant_Value_85
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc plug_00103 --> /main/connectors/plug_00103
				symbol external misc plug_00104 --> /main/connectors/plug_00104
				symbol public misc Computed_Constant_Value_86
				symbol external misc plug_00105 --> /main/connectors/plug_00105
				constant Computed_Constant_Value_85 K_unchecked = sum{ plug_00103, plug_00104 }
				constant Computed_Constant_Value_86 K_unchecked = sum{ Computed_Constant_Value_85, plug_00105 }
				constant RRVAL_SYM_O_TO_O K_unchecked = Computed_Constant_Value_86 __assimilated=1
			package RRF_USED_con _plain
				symbol public misc RRF_USED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRF_USED K_unchecked = 1 __assimilated=1
			package RRF_DELETED_con _plain
				symbol public misc RRF_DELETED
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRF_DELETED K_unchecked = 2 __assimilated=1
			package RRF_SINGLE_con _plain
				symbol public misc RRF_SINGLE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRF_SINGLE K_unchecked = 4 __assimilated=1
			package RRF_HASX_con _plain
				symbol public misc RRF_HASX
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRF_HASX K_unchecked = 16 __assimilated=1
			package RRF_HASY_con _plain
				symbol public misc RRF_HASY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRF_HASY K_unchecked = 32 __assimilated=1
			package RRF_ENTKEYX_con _plain
				symbol public misc RRF_ENTKEYX
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRF_ENTKEYX K_unchecked = 64 __assimilated=1
			package RRF_ENTKEYY_con _plain
				symbol public misc RRF_ENTKEYY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRF_ENTKEYY K_unchecked = 128 __assimilated=1
			package RELS_COPY_con _plain
				symbol public misc RELS_COPY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RELS_COPY K_unchecked = 32 __assimilated=1
			package RELS_DESTROY_con _plain
				symbol public misc RELS_DESTROY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RELS_DESTROY K_unchecked = 16 __assimilated=1
			package RELS_EMPTY_con _plain
				symbol public misc RELS_EMPTY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RELS_EMPTY K_unchecked = 3 __assimilated=1
			package RELS_SET_VALENCY_con _plain
				symbol public misc RELS_SET_VALENCY
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RELS_SET_VALENCY K_unchecked = 5 __assimilated=1
			package RLANY_GET_X_con _plain
				symbol public misc RLANY_GET_X
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RLANY_GET_X K_unchecked = 1 __assimilated=1
			package RLANY_GET_Y_con _plain
				symbol public misc RLANY_GET_Y
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RLANY_GET_Y K_unchecked = 2 __assimilated=1
			package RLANY_CAN_GET_X_con _plain
				symbol public misc RLANY_CAN_GET_X
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RLANY_CAN_GET_X K_unchecked = 3 __assimilated=1
			package RLANY_CAN_GET_Y_con _plain
				symbol public misc RLANY_CAN_GET_Y
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RLANY_CAN_GET_Y K_unchecked = 4 __assimilated=1
			package RLIST_ALL_X_con _plain
				symbol public misc RLIST_ALL_X
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RLIST_ALL_X K_unchecked = 1 __assimilated=1
			package RLIST_ALL_Y_con _plain
				symbol public misc RLIST_ALL_Y
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RLIST_ALL_Y K_unchecked = 2 __assimilated=1
			package RLIST_ALL_PAIRS_con _plain
				symbol public misc RLIST_ALL_PAIRS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RLIST_ALL_PAIRS K_unchecked = 3 __assimilated=1
			package RRP_MIN_SIZE_con _plain
				symbol public misc RRP_MIN_SIZE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRP_MIN_SIZE K_unchecked = 8 __assimilated=1
			package RRP_PERTURB_SHIFT_con _plain
				symbol public misc RRP_PERTURB_SHIFT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRP_PERTURB_SHIFT K_unchecked = 5 __assimilated=1
			package MINUS_RRP_PERTURB_SHIFT_con _plain
				symbol public misc MINUS_RRP_PERTURB_SHIFT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant MINUS_RRP_PERTURB_SHIFT K_unchecked = -5 __assimilated=1
			package RRP_RESIZE_SMALL_con _plain
				symbol public misc RRP_RESIZE_SMALL
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRP_RESIZE_SMALL K_unchecked = 4 __assimilated=1
			package RRP_RESIZE_LARGE_con _plain
				symbol public misc RRP_RESIZE_LARGE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRP_RESIZE_LARGE K_unchecked = 2 __assimilated=1
			package RRP_LARGE_IS_con _plain
				symbol public misc RRP_LARGE_IS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRP_LARGE_IS K_unchecked = 256 __assimilated=1
			package RRP_CROWDED_IS_con _plain
				symbol public misc RRP_CROWDED_IS
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				constant RRP_CROWDED_IS K_unchecked = 2 __assimilated=1
		package variables _submodule
			package max_z_object_var _plain
				symbol public misc max_z_object
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable max_z_object K_unchecked = 0 __assimilated=1
			package MAX_SCORE_var _plain
				symbol public misc MAX_SCORE
				symbol external misc plug_00528 --> /main/connectors/plug_00528
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable MAX_SCORE K_unchecked = plug_00528 __assimilated=1
			package formal_rv_var _plain
				symbol public misc formal_rv
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_rv K_unchecked = 0 __assimilated=1
			package formal_par0_var _plain
				symbol public misc formal_par0
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par0 K_unchecked = 0 __assimilated=1
			package formal_par1_var _plain
				symbol public misc formal_par1
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par1 K_unchecked = 0 __assimilated=1
			package formal_par2_var _plain
				symbol public misc formal_par2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par2 K_unchecked = 0 __assimilated=1
			package formal_par3_var _plain
				symbol public misc formal_par3
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par3 K_unchecked = 0 __assimilated=1
			package formal_par4_var _plain
				symbol public misc formal_par4
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par4 K_unchecked = 0 __assimilated=1
			package formal_par5_var _plain
				symbol public misc formal_par5
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par5 K_unchecked = 0 __assimilated=1
			package formal_par6_var _plain
				symbol public misc formal_par6
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par6 K_unchecked = 0 __assimilated=1
			package formal_par7_var _plain
				symbol public misc formal_par7
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable formal_par7 K_unchecked = 0 __assimilated=1
			package unicode_temp_var _plain
				symbol public misc unicode_temp
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable unicode_temp K_unchecked = 0 __assimilated=1
			package location_var _plain
				symbol public misc location
				symbol external misc InformLibrary --> /main/template/constants/InformLibrary_con/InformLibrary
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable location K_unchecked = InformLibrary __assimilated=1
			package sline1_var _plain
				symbol public misc sline1
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable sline1 K_unchecked = 0 __assimilated=1
			package sline2_var _plain
				symbol public misc sline2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable sline2 K_unchecked = 0 __assimilated=1
			package say__p_var _plain
				symbol public misc say__p
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable say__p K_unchecked = 1 __assimilated=1
			package say__pc_var _plain
				symbol public misc say__pc
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable say__pc K_unchecked = 0 __assimilated=1
			package say__pc_save_var _plain
				symbol public misc say__pc_save
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable say__pc_save K_unchecked = 0 __assimilated=1
			package say__n_var _plain
				symbol public misc say__n
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable say__n K_unchecked = 0 __assimilated=1
			package say__comp_var _plain
				symbol public misc say__comp
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable say__comp K_unchecked = 0 __assimilated=1
			package los_rv_var _plain
				symbol public misc los_rv
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable los_rv K_unchecked = 0 __assimilated=1
			package parameter_object_var _plain
				symbol public misc parameter_object
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parameter_object K_unchecked = 0 __assimilated=1
			package parameter_value_var _plain
				symbol public misc parameter_value
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parameter_value K_unchecked = 0 __assimilated=1
			package property_to_be_totalled_var _plain
				symbol public misc property_to_be_totalled
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable property_to_be_totalled K_unchecked = 0 __assimilated=1
			package property_loop_sign_var _plain
				symbol public misc property_loop_sign
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable property_loop_sign K_unchecked = 0 __assimilated=1
			package suppress_scope_loops_var _plain
				symbol public misc suppress_scope_loops
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable suppress_scope_loops K_unchecked = 0 __assimilated=1
			package temporary_value_var _plain
				symbol public misc temporary_value
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable temporary_value K_unchecked = 0 __assimilated=1
			package I7SFRAME_var _plain
				symbol public misc I7SFRAME
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable I7SFRAME K_unchecked = 0 __assimilated=1
			package TEXT_TY_RE_Err_var _plain
				symbol public misc TEXT_TY_RE_Err
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable TEXT_TY_RE_Err K_unchecked = 0 __assimilated=1
			package standard_interpreter_var _plain
				symbol public misc standard_interpreter
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable standard_interpreter K_unchecked = 0 __assimilated=1
			package undo_flag_var _plain
				symbol public misc undo_flag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable undo_flag K_unchecked = 0 __assimilated=1
			package deadflag_var _plain
				symbol public misc deadflag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable deadflag K_unchecked = 0 __assimilated=1
			package story_complete_var _plain
				symbol public misc story_complete
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable story_complete K_unchecked = 0 __assimilated=1
			package resurrect_please_var _plain
				symbol public misc resurrect_please
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable resurrect_please K_unchecked = 0 __assimilated=1
			package not_yet_in_play_var _plain
				symbol public misc not_yet_in_play
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable not_yet_in_play K_unchecked = 1 __assimilated=1
			package turns_var _plain
				symbol public misc turns
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable turns K_unchecked = 1 __assimilated=1
			package the_time_var _plain
				symbol public misc the_time
				symbol external misc plug_00529 --> /main/connectors/plug_00529
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable the_time K_unchecked = plug_00529 __assimilated=1
			package time_rate_var _plain
				symbol public misc time_rate
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable time_rate K_unchecked = 1 __assimilated=1
			package score_var _plain
				symbol public misc score
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable score K_unchecked = 0 __assimilated=1
			package last_score_var _plain
				symbol public misc last_score
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable last_score K_unchecked = 0 __assimilated=1
			package notify_mode_var _plain
				symbol public misc notify_mode
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable notify_mode K_unchecked = 1 __assimilated=1
			package left_hand_status_line_var _plain
				symbol public misc left_hand_status_line
				symbol external misc T_SL_Location --> /main/template/arrays/T_SL_Location_arr/T_SL_Location
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable left_hand_status_line K_unchecked = T_SL_Location __assimilated=1
			package right_hand_status_line_var _plain
				symbol public misc right_hand_status_line
				symbol external misc T_SL_Score_Moves --> /main/template/arrays/T_SL_Score_Moves_arr/T_SL_Score_Moves
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable right_hand_status_line K_unchecked = T_SL_Score_Moves __assimilated=1
			package player_var _plain
				symbol public misc player
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable player K_unchecked = 0 __assimilated=1
			package real_location_var _plain
				symbol public misc real_location
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable real_location K_unchecked = 0 __assimilated=1
			package visibility_ceiling_var _plain
				symbol public misc visibility_ceiling
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable visibility_ceiling K_unchecked = 0 __assimilated=1
			package visibility_levels_var _plain
				symbol public misc visibility_levels
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable visibility_levels K_unchecked = 0 __assimilated=1
			package SACK_OBJECT_var _plain
				symbol public misc SACK_OBJECT
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable SACK_OBJECT K_unchecked = 0 __assimilated=1
			package act_requester_var _plain
				symbol public misc act_requester
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable act_requester K_unchecked = 0 __assimilated=1
			package actor_var _plain
				symbol public misc actor
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable actor K_unchecked = 0 __assimilated=1
			package actors_location_var _plain
				symbol public misc actors_location
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable actors_location K_unchecked = 0 __assimilated=1
			package actor_location_var _plain
				symbol public misc actor_location
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable actor_location K_unchecked = 0 __assimilated=1
			package action_var _plain
				symbol public misc action
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable action K_unchecked = 0 __assimilated=1
			package meta_var _plain
				symbol public misc meta
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable meta K_unchecked = 0 __assimilated=1
			package inp1_var _plain
				symbol public misc inp1
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable inp1 K_unchecked = 0 __assimilated=1
			package inp2_var _plain
				symbol public misc inp2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable inp2 K_unchecked = 0 __assimilated=1
			package toomany_flag_var _plain
				symbol public misc toomany_flag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable toomany_flag K_unchecked = 0 __assimilated=1
			package multiflag_var _plain
				symbol public misc multiflag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable multiflag K_unchecked = 0 __assimilated=1
			package multiple_object_item_var _plain
				symbol public misc multiple_object_item
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable multiple_object_item K_unchecked = 0 __assimilated=1
			package noun_var _plain
				symbol public misc noun
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable noun K_unchecked = 0 __assimilated=1
			package second_var _plain
				symbol public misc second
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable second K_unchecked = 0 __assimilated=1
			package keep_silent_var _plain
				symbol public misc keep_silent
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable keep_silent K_unchecked = 0 __assimilated=1
			package etype_var _plain
				symbol public misc etype
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable etype K_unchecked = 0 __assimilated=1
			package trace_actions_var _plain
				symbol public misc trace_actions
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable trace_actions K_unchecked = 0 __assimilated=1
			package untouchable_object_var _plain
				symbol public misc untouchable_object
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable untouchable_object K_unchecked = 0 __assimilated=1
			package untouchable_silence_var _plain
				symbol public misc untouchable_silence
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable untouchable_silence K_unchecked = 0 __assimilated=1
			package touch_persona_var _plain
				symbol public misc touch_persona
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable touch_persona K_unchecked = 0 __assimilated=1
			package special_word_var _plain
				symbol public misc special_word
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable special_word K_unchecked = 0 __assimilated=1
			package consult_from_var _plain
				symbol public misc consult_from
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable consult_from K_unchecked = 0 __assimilated=1
			package consult_words_var _plain
				symbol public misc consult_words
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable consult_words K_unchecked = 0 __assimilated=1
			package parsed_number_var _plain
				symbol public misc parsed_number
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parsed_number K_unchecked = 0 __assimilated=1
			package special_number1_var _plain
				symbol public misc special_number1
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable special_number1 K_unchecked = 0 __assimilated=1
			package special_number2_var _plain
				symbol public misc special_number2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable special_number2 K_unchecked = 0 __assimilated=1
			package parser_trace_var _plain
				symbol public misc parser_trace
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parser_trace K_unchecked = 0 __assimilated=1
			package pronoun_word_var _plain
				symbol public misc pronoun_word
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable pronoun_word K_unchecked = 0 __assimilated=1
			package pronoun_obj_var _plain
				symbol public misc pronoun_obj
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable pronoun_obj K_unchecked = 0 __assimilated=1
			package players_command_var _plain
				symbol public misc players_command
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable players_command K_unchecked = 100 __assimilated=1
			package matched_text_var _plain
				symbol public misc matched_text
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable matched_text K_unchecked = 0 __assimilated=1
			package reason_the_action_failed_var _plain
				symbol public misc reason_the_action_failed
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable reason_the_action_failed K_unchecked = 0 __assimilated=1
			package understand_as_mistake_number_var _plain
				symbol public misc understand_as_mistake_number
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable understand_as_mistake_number K_unchecked = 0 __assimilated=1
			package particular_possession_var _plain
				symbol public misc particular_possession
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable particular_possession K_unchecked = 0 __assimilated=1
			package parser_action_var _plain
				symbol public misc parser_action
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parser_action K_unchecked = 0 __assimilated=1
			package parser_one_var _plain
				symbol public misc parser_one
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parser_one K_unchecked = 0 __assimilated=1
			package parser_two_var _plain
				symbol public misc parser_two
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parser_two K_unchecked = 0 __assimilated=1
			package parameters_var _plain
				symbol public misc parameters
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parameters K_unchecked = 0 __assimilated=1
			package action_to_be_var _plain
				symbol public misc action_to_be
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable action_to_be K_unchecked = 0 __assimilated=1
			package action_reversed_var _plain
				symbol public misc action_reversed
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable action_reversed K_unchecked = 0 __assimilated=1
			package wn_var _plain
				symbol public misc wn
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable wn K_unchecked = 0 __assimilated=1
			package num_words_var _plain
				symbol public misc num_words
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable num_words K_unchecked = 0 __assimilated=1
			package verb_word_var _plain
				symbol public misc verb_word
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable verb_word K_unchecked = 0 __assimilated=1
			package verb_wordnum_var _plain
				symbol public misc verb_wordnum
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable verb_wordnum K_unchecked = 0 __assimilated=1
			package scope_reason_var _plain
				symbol public misc scope_reason
				symbol external misc PARSING_REASON --> /main/template/constants/PARSING_REASON_con/PARSING_REASON
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable scope_reason K_unchecked = PARSING_REASON __assimilated=1
			package scope_token_var _plain
				symbol public misc scope_token
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable scope_token K_unchecked = 0 __assimilated=1
			package scope_error_var _plain
				symbol public misc scope_error
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable scope_error K_unchecked = 0 __assimilated=1
			package scope_stage_var _plain
				symbol public misc scope_stage
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable scope_stage K_unchecked = 0 __assimilated=1
			package advance_warning_var _plain
				symbol public misc advance_warning
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable advance_warning K_unchecked = 0 __assimilated=1
			package ats_flag_var _plain
				symbol public misc ats_flag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable ats_flag K_unchecked = 0 __assimilated=1
			package ats_hls_var _plain
				symbol public misc ats_hls
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable ats_hls K_unchecked = 0 __assimilated=1
			package move_pushing_var _plain
				symbol public misc move_pushing
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable move_pushing K_unchecked = 0 __assimilated=1
			package move_from_var _plain
				symbol public misc move_from
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable move_from K_unchecked = 0 __assimilated=1
			package move_to_var _plain
				symbol public misc move_to
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable move_to K_unchecked = 0 __assimilated=1
			package move_by_var _plain
				symbol public misc move_by
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable move_by K_unchecked = 0 __assimilated=1
			package move_through_var _plain
				symbol public misc move_through
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable move_through K_unchecked = 0 __assimilated=1
			package lookmode_var _plain
				symbol public misc lookmode
				symbol external misc DEFAULT_LOOKMODE --> /main/template/constants/DEFAULT_LOOKMODE_con/DEFAULT_LOOKMODE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable lookmode K_unchecked = DEFAULT_LOOKMODE __assimilated=1
			package c_style_var _plain
				symbol public misc c_style
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable c_style K_unchecked = 0 __assimilated=1
			package c_depth_var _plain
				symbol public misc c_depth
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable c_depth K_unchecked = 0 __assimilated=1
			package c_iterator_var _plain
				symbol public misc c_iterator
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable c_iterator K_unchecked = 0 __assimilated=1
			package lt_value_var _plain
				symbol public misc lt_value
				symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable lt_value K_unchecked = EMPTY_TEXT_VALUE __assimilated=1
			package listing_together_var _plain
				symbol public misc listing_together
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable listing_together K_unchecked = 0 __assimilated=1
			package listing_size_var _plain
				symbol public misc listing_size
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable listing_size K_unchecked = 0 __assimilated=1
			package c_margin_var _plain
				symbol public misc c_margin
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable c_margin K_unchecked = 0 __assimilated=1
			package inventory_stage_var _plain
				symbol public misc inventory_stage
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable inventory_stage K_unchecked = 1 __assimilated=1
			package prior_named_noun_var _plain
				symbol public misc prior_named_noun
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable prior_named_noun K_unchecked = 0 __assimilated=1
			package prior_named_list_var _plain
				symbol public misc prior_named_list
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable prior_named_list K_unchecked = 0 __assimilated=1
			package prior_named_list_gender_var _plain
				symbol public misc prior_named_list_gender
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable prior_named_list_gender K_unchecked = 0 __assimilated=1
			package story_tense_var _plain
				symbol public misc story_tense
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable story_tense K_unchecked = 1 __assimilated=1
			package story_viewpoint_var _plain
				symbol public misc story_viewpoint
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable story_viewpoint K_unchecked = 2 __assimilated=1
			package clr_fg_var _plain
				symbol public misc clr_fg
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable clr_fg K_unchecked = 1 __assimilated=1
			package clr_bg_var _plain
				symbol public misc clr_bg
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable clr_bg K_unchecked = 1 __assimilated=1
			package clr_fgstatus_var _plain
				symbol public misc clr_fgstatus
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable clr_fgstatus K_unchecked = 1 __assimilated=1
			package clr_bgstatus_var _plain
				symbol public misc clr_bgstatus
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable clr_bgstatus K_unchecked = 1 __assimilated=1
			package clr_on_var _plain
				symbol public misc clr_on
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable clr_on K_unchecked = 0 __assimilated=1
			package statuswin_current_var _plain
				symbol public misc statuswin_current
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable statuswin_current K_unchecked = 0 __assimilated=1
			package statuswin_cursize_var _plain
				symbol public misc statuswin_cursize
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable statuswin_cursize K_unchecked = 0 __assimilated=1
			package statuswin_size_var _plain
				symbol public misc statuswin_size
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable statuswin_size K_unchecked = 1 __assimilated=1
			package debug_rules_var _plain
				symbol public misc debug_rules
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable debug_rules K_unchecked = 0 __assimilated=1
			package debug_scenes_var _plain
				symbol public misc debug_scenes
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable debug_scenes K_unchecked = 0 __assimilated=1
			package debug_rule_nesting_var _plain
				symbol public misc debug_rule_nesting
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable debug_rule_nesting K_unchecked = 0 __assimilated=1
			package top_object_var _plain
				symbol public misc top_object
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable top_object K_unchecked = 0 __assimilated=1
			package xcommsdir_var _plain
				symbol public misc xcommsdir
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable xcommsdir K_unchecked = 0 __assimilated=1
			package transcript_mode_var _plain
				symbol public misc transcript_mode
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable transcript_mode K_unchecked = 0 __assimilated=1
			package dict_start_var _plain
				symbol public misc dict_start
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable dict_start K_unchecked = 0 __assimilated=1
			package dict_entry_size_var _plain
				symbol public misc dict_entry_size
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable dict_entry_size K_unchecked = 0 __assimilated=1
			package dict_end_var _plain
				symbol public misc dict_end
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable dict_end K_unchecked = 0 __assimilated=1
			package lightflag_var _plain
				symbol public misc lightflag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable lightflag K_unchecked = 0 __assimilated=1
			package requisition_stack_pointer_var _plain
				symbol public misc requisition_stack_pointer
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable requisition_stack_pointer K_unchecked = 0 __assimilated=1
			package MarkedObjectArray_var _plain
				symbol public misc MarkedObjectArray
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable MarkedObjectArray K_unchecked = 0 __assimilated=1
			package MarkedObjectLength_var _plain
				symbol public misc MarkedObjectLength
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable MarkedObjectLength K_unchecked = 0 __assimilated=1
			package list_filter_routine_var _plain
				symbol public misc list_filter_routine
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable list_filter_routine K_unchecked = 0 __assimilated=1
			package best_etype_var _plain
				symbol public misc best_etype
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable best_etype K_unchecked = 0 __assimilated=1
			package nextbest_etype_var _plain
				symbol public misc nextbest_etype
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable nextbest_etype K_unchecked = 0 __assimilated=1
			package parser_inflection_var _plain
				symbol public misc parser_inflection
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parser_inflection K_unchecked = 0 __assimilated=1
			package pcount_var _plain
				symbol public misc pcount
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable pcount K_unchecked = 0 __assimilated=1
			package pcount2_var _plain
				symbol public misc pcount2
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable pcount2 K_unchecked = 0 __assimilated=1
			package nsns_var _plain
				symbol public misc nsns
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable nsns K_unchecked = 0 __assimilated=1
			package params_wanted_var _plain
				symbol public misc params_wanted
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable params_wanted K_unchecked = 0 __assimilated=1
			package inferfrom_var _plain
				symbol public misc inferfrom
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable inferfrom K_unchecked = 0 __assimilated=1
			package inferword_var _plain
				symbol public misc inferword
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable inferword K_unchecked = 0 __assimilated=1
			package dont_infer_var _plain
				symbol public misc dont_infer
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable dont_infer K_unchecked = 0 __assimilated=1
			package cobj_flag_var _plain
				symbol public misc cobj_flag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable cobj_flag K_unchecked = 0 __assimilated=1
			package oops_from_var _plain
				symbol public misc oops_from
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable oops_from K_unchecked = 0 __assimilated=1
			package saved_oops_var _plain
				symbol public misc saved_oops
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable saved_oops K_unchecked = 0 __assimilated=1
			package held_back_mode_var _plain
				symbol public misc held_back_mode
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable held_back_mode K_unchecked = 0 __assimilated=1
			package hb_wn_var _plain
				symbol public misc hb_wn
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable hb_wn K_unchecked = 0 __assimilated=1
			package usual_grammar_after_var _plain
				symbol public misc usual_grammar_after
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable usual_grammar_after K_unchecked = 0 __assimilated=1
			package found_ttype_var _plain
				symbol public misc found_ttype
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable found_ttype K_unchecked = 0 __assimilated=1
			package found_tdata_var _plain
				symbol public misc found_tdata
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable found_tdata K_unchecked = 0 __assimilated=1
			package token_filter_var _plain
				symbol public misc token_filter
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable token_filter K_unchecked = 0 __assimilated=1
			package length_of_noun_var _plain
				symbol public misc length_of_noun
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable length_of_noun K_unchecked = 0 __assimilated=1
			package lookahead_var _plain
				symbol public misc lookahead
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable lookahead K_unchecked = 0 __assimilated=1
			package multi_mode_var _plain
				symbol public misc multi_mode
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable multi_mode K_unchecked = 0 __assimilated=1
			package multi_wanted_var _plain
				symbol public misc multi_wanted
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable multi_wanted K_unchecked = 0 __assimilated=1
			package multi_had_var _plain
				symbol public misc multi_had
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable multi_had K_unchecked = 0 __assimilated=1
			package multi_context_var _plain
				symbol public misc multi_context
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable multi_context K_unchecked = 0 __assimilated=1
			package indef_mode_var _plain
				symbol public misc indef_mode
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_mode K_unchecked = 0 __assimilated=1
			package indef_type_var _plain
				symbol public misc indef_type
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_type K_unchecked = 0 __assimilated=1
			package indef_wanted_var _plain
				symbol public misc indef_wanted
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_wanted K_unchecked = 0 __assimilated=1
			package indef_guess_p_var _plain
				symbol public misc indef_guess_p
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_guess_p K_unchecked = 0 __assimilated=1
			package indef_owner_var _plain
				symbol public misc indef_owner
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_owner K_unchecked = 0 __assimilated=1
			package indef_cases_var _plain
				symbol public misc indef_cases
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_cases K_unchecked = 0 __assimilated=1
			package indef_possambig_var _plain
				symbol public misc indef_possambig
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_possambig K_unchecked = 0 __assimilated=1
			package indef_nspec_at_var _plain
				symbol public misc indef_nspec_at
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable indef_nspec_at K_unchecked = 0 __assimilated=1
			package allow_plurals_var _plain
				symbol public misc allow_plurals
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable allow_plurals K_unchecked = 0 __assimilated=1
			package take_all_rule_var _plain
				symbol public misc take_all_rule
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable take_all_rule K_unchecked = 0 __assimilated=1
			package dict_flags_of_noun_var _plain
				symbol public misc dict_flags_of_noun
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable dict_flags_of_noun K_unchecked = 0 __assimilated=1
			package pronoun__word_var _plain
				symbol public misc pronoun__word
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable pronoun__word K_unchecked = 0 __assimilated=1
			package pronoun__obj_var _plain
				symbol public misc pronoun__obj
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable pronoun__obj K_unchecked = 0 __assimilated=1
			package number_matched_var _plain
				symbol public misc number_matched
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable number_matched K_unchecked = 0 __assimilated=1
			package number_of_classes_var _plain
				symbol public misc number_of_classes
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable number_of_classes K_unchecked = 0 __assimilated=1
			package match_length_var _plain
				symbol public misc match_length
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable match_length K_unchecked = 0 __assimilated=1
			package match_from_var _plain
				symbol public misc match_from
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable match_from K_unchecked = 0 __assimilated=1
			package parsetoken_nesting_var _plain
				symbol public misc parsetoken_nesting
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable parsetoken_nesting K_unchecked = 0 __assimilated=1
			package EarlyInTurnSequence_var _plain
				symbol public misc EarlyInTurnSequence
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable EarlyInTurnSequence K_unchecked = 0 __assimilated=1
			package IterationsOfTurnSequence_var _plain
				symbol public misc IterationsOfTurnSequence
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable IterationsOfTurnSequence K_unchecked = 0 __assimilated=1
			package time_step_var _plain
				symbol public misc time_step
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable time_step K_unchecked = 0 __assimilated=1
			package converted_action_outcome_var _plain
				symbol public misc converted_action_outcome
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable converted_action_outcome K_unchecked = -1 __assimilated=1
			package activities_sp_var _plain
				symbol public misc activities_sp
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable activities_sp K_unchecked = 0 __assimilated=1
			package inhibit_flag_var _plain
				symbol public misc inhibit_flag
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable inhibit_flag K_unchecked = 0 __assimilated=1
			package saved_debug_rules_var _plain
				symbol public misc saved_debug_rules
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable saved_debug_rules K_unchecked = 0 __assimilated=1
			package MStack_Top_var _plain
				symbol public misc MStack_Top
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable MStack_Top K_unchecked = 0 __assimilated=1
			package MStack_Frame_Extent_var _plain
				symbol public misc MStack_Frame_Extent
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable MStack_Frame_Extent K_unchecked = 0 __assimilated=1
			package pending_boxed_quotation_var _plain
				symbol public misc pending_boxed_quotation
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable pending_boxed_quotation K_unchecked = 0 __assimilated=1
			package caps_mode_var _plain
				symbol public misc caps_mode
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable caps_mode K_unchecked = 0 __assimilated=1
			package short_name_case_var _plain
				symbol public misc short_name_case
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable short_name_case K_unchecked = 0 __assimilated=1
			package map_has_changed_var _plain
				symbol public misc map_has_changed
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable map_has_changed K_unchecked = 1 __assimilated=1
			package last_filter_var _plain
				symbol public misc last_filter
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable last_filter K_unchecked = 0 __assimilated=1
			package last_use_doors_var _plain
				symbol public misc last_use_doors
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable last_use_doors K_unchecked = 0 __assimilated=1
			package process_rulebook_count_var _plain
				symbol public misc process_rulebook_count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable process_rulebook_count K_unchecked = 0 __assimilated=1
			package debugging_rules_var _plain
				symbol public misc debugging_rules
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable debugging_rules K_unchecked = 0 __assimilated=1
			package I7S_Tab_var _plain
				symbol public misc I7S_Tab
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable I7S_Tab K_unchecked = 0 __assimilated=1
			package I7S_Col_var _plain
				symbol public misc I7S_Col
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable I7S_Col K_unchecked = 0 __assimilated=1
			package I7S_Dir_var _plain
				symbol public misc I7S_Dir
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable I7S_Dir K_unchecked = 0 __assimilated=1
			package I7S_Swap_var _plain
				symbol public misc I7S_Swap
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable I7S_Swap K_unchecked = 0 __assimilated=1
			package I7S_Comp_var _plain
				symbol public misc I7S_Comp
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable I7S_Comp K_unchecked = 0 __assimilated=1
			package suppress_text_substitution_var _plain
				symbol public misc suppress_text_substitution
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable suppress_text_substitution K_unchecked = 0 __assimilated=1
			package x_scope_count_var _plain
				symbol public misc x_scope_count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable x_scope_count K_unchecked = 0 __assimilated=1
			package RawBufferAddress_var _plain
				symbol public misc RawBufferAddress
				symbol external misc TEXT_TY_Buffers --> /main/template/arrays/TEXT_TY_Buffers_arr/TEXT_TY_Buffers
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable RawBufferAddress K_unchecked = TEXT_TY_Buffers __assimilated=1
			package RawBufferSize_var _plain
				symbol public misc RawBufferSize
				symbol external misc TEXT_TY_BufferSize --> /main/template/constants/TEXT_TY_BufferSize_con/TEXT_TY_BufferSize
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable RawBufferSize K_unchecked = TEXT_TY_BufferSize __assimilated=1
			package TEXT_TY_CastPrimitiveNesting_var _plain
				symbol public misc TEXT_TY_CastPrimitiveNesting
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable TEXT_TY_CastPrimitiveNesting K_unchecked = 0 __assimilated=1
			package TEXT_TY_RE_Trace_var _plain
				symbol public misc TEXT_TY_RE_Trace
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable TEXT_TY_RE_Trace K_unchecked = 0 __assimilated=1
			package TEXT_TY_RE_RewindCount_var _plain
				symbol public misc TEXT_TY_RE_RewindCount
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable TEXT_TY_RE_RewindCount K_unchecked = 0 __assimilated=1
			package LIST_OF_TY_Sort_cf_var _plain
				symbol public misc LIST_OF_TY_Sort_cf
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				variable LIST_OF_TY_Sort_cf K_unchecked = 0 __assimilated=1
		package arrays _submodule
			package PowersOfTwo_TB_arr _plain
				symbol public misc PowersOfTwo_TB
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant PowersOfTwo_TB K_list_of_values = { 2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1 } __assimilated=1
			package IncreasingPowersOfTwo_TB_arr _plain
				symbol public misc IncreasingPowersOfTwo_TB
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant IncreasingPowersOfTwo_TB K_list_of_values = { 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768 } __assimilated=1
			package EMPTY_TEXT_VALUE_arr _plain
				symbol public misc EMPTY_TEXT_VALUE
				symbol external misc plug_00017 --> /main/template/constants/CONSTANT_PACKED_TEXT_STORAGE_con/CONSTANT_PACKED_TEXT_STORAGE
				symbol external misc EMPTY_TEXT_PACKED --> /main/template/constants/EMPTY_TEXT_PACKED_con/EMPTY_TEXT_PACKED
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant EMPTY_TEXT_VALUE K_list_of_values = { CONSTANT_PACKED_TEXT_STORAGE, EMPTY_TEXT_PACKED } __assimilated=1
			package TheEmptyTable_arr _plain
				symbol public misc TheEmptyTable
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant TheEmptyTable K_list_of_values = { 0, 0 } __assimilated=1
			package deferred_calling_list_arr _plain
				symbol public misc deferred_calling_list
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant deferred_calling_list K_list_of_values = { 27 } __assimilated=1
			package blockv_stack_arr _plain
				symbol public misc blockv_stack
				symbol external misc BLOCKV_STACK_SIZE --> /main/template/constants/BLOCKV_STACK_SIZE_con/BLOCKV_STACK_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant blockv_stack K_list_of_values = { BLOCKV_STACK_SIZE } __assimilated=1
			package LocalParking_arr _plain
				symbol public misc LocalParking
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant LocalParking K_list_of_values = { 64 } __assimilated=1
			package scene_started_arr _plain
				symbol public misc scene_started
				symbol external misc SCENE_ARRAY_SIZE --> /main/template/constants/SCENE_ARRAY_SIZE_con/SCENE_ARRAY_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant scene_started K_list_of_values = { SCENE_ARRAY_SIZE } __assimilated=1
			package scene_ended_arr _plain
				symbol public misc scene_ended
				symbol external misc SCENE_ARRAY_SIZE --> /main/template/constants/SCENE_ARRAY_SIZE_con/SCENE_ARRAY_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant scene_ended K_list_of_values = { SCENE_ARRAY_SIZE } __assimilated=1
			package scene_status_arr _plain
				symbol public misc scene_status
				symbol external misc SCENE_ARRAY_SIZE --> /main/template/constants/SCENE_ARRAY_SIZE_con/SCENE_ARRAY_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant scene_status K_list_of_values = { SCENE_ARRAY_SIZE } __assimilated=1
			package scene_endings_arr _plain
				symbol public misc scene_endings
				symbol external misc SCENE_ARRAY_SIZE --> /main/template/constants/SCENE_ARRAY_SIZE_con/SCENE_ARRAY_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant scene_endings K_list_of_values = { SCENE_ARRAY_SIZE } __assimilated=1
			package scene_latest_ending_arr _plain
				symbol public misc scene_latest_ending
				symbol external misc SCENE_ARRAY_SIZE --> /main/template/constants/SCENE_ARRAY_SIZE_con/SCENE_ARRAY_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant scene_latest_ending K_list_of_values = { SCENE_ARRAY_SIZE } __assimilated=1
			package multiple_object_arr _plain
				symbol public misc multiple_object
				symbol external misc plug_00020 --> /main/connectors/plug_00020
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant multiple_object K_list_of_values = { plug_00020 } __assimilated=1
			package parser_results_arr _plain
				symbol public misc parser_results
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant parser_results K_list_of_values = { 16 } __assimilated=1
			package buffer_arr _plain
				symbol public misc buffer
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant buffer K_list_of_values = { 123 } __assimilated=1 __byte_array=1
			package buffer2_arr _plain
				symbol public misc buffer2
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant buffer2 K_list_of_values = { 123 } __assimilated=1 __byte_array=1
			package buffer3_arr _plain
				symbol public misc buffer3
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant buffer3 K_list_of_values = { 123 } __assimilated=1 __byte_array=1
			package parse_arr _plain
				symbol public misc parse
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant parse K_list_of_values = { 63 } __assimilated=1 __buffer_array=1
			package parse2_arr _plain
				symbol public misc parse2
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant parse2 K_list_of_values = { 63 } __assimilated=1 __buffer_array=1
			package LanguagePronouns_arr _plain
				symbol public misc LanguagePronouns
				symbol external misc plug_00021 --> /main/connectors/plug_00021
				symbol external misc plug_00022 --> /main/connectors/plug_00022
				symbol external misc plug_00023 --> /main/connectors/plug_00023
				symbol external misc plug_00024 --> /main/connectors/plug_00024
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant LanguagePronouns K_list_of_values = { dw'it', 568, plug_00021, dw'him', 2048, plug_00022, dw'her', 1024, plug_00023, dw'them', 455, plug_00024 } __assimilated=1 __table_array=1
			package LanguageDescriptors_arr _plain
				symbol public misc LanguageDescriptors
				symbol external misc POSSESS_PK --> /main/template/constants/POSSESS_PK_con/POSSESS_PK
				symbol external misc DEFART_PK --> /main/template/constants/DEFART_PK_con/DEFART_PK
				symbol external misc plug_00025 --> /main/connectors/plug_00025
				symbol external misc INDEFART_PK --> /main/template/constants/INDEFART_PK_con/INDEFART_PK
				symbol external misc plug_00026 --> /main/connectors/plug_00026
				symbol external misc plug_00027 --> /main/connectors/plug_00027
				symbol external misc plug_00028 --> /main/connectors/plug_00028
				symbol external misc light --> /main/template/properties/light_prop/light
				symbol external misc plug_00029 --> /main/connectors/plug_00029
				symbol external misc plug_00030 --> /main/connectors/plug_00030
				symbol public misc Computed_Constant_Value_14
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc plug_00031 --> /main/connectors/plug_00031
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_14 K_unchecked = difference{ 0, light }
				constant LanguageDescriptors K_list_of_values = { dw'my', 4095, POSSESS_PK, 0, dw'this', 4095, POSSESS_PK, 0, dw'these', 455, POSSESS_PK, 0, dw'that', 4095, POSSESS_PK, 1, dw'those', 455, POSSESS_PK, 1, dw'his', 4095, POSSESS_PK, dw'him', dw'her', 4095, POSSESS_PK, dw'her', dw'their', 4095, POSSESS_PK, dw'them', dw'its', 4095, POSSESS_PK, dw'it', dw'the', 4095, DEFART_PK, plug_00025, dw'a//', 3640, INDEFART_PK, plug_00026, dw'an', 3640, INDEFART_PK, plug_00027, dw'some', 455, INDEFART_PK, plug_00028, dw'lit', 4095, light, plug_00029, dw'lighted', 4095, light, plug_00030, dw'unlit', 4095, Computed_Constant_Value_14, plug_00031 } __assimilated=1 __table_array=1
			package LanguageNumbers_arr _plain
				symbol public misc LanguageNumbers
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant LanguageNumbers K_list_of_values = { dw'one', 1, dw'two', 2, dw'three', 3, dw'four', 4, dw'five', 5, dw'six', 6, dw'seven', 7, dw'eight', 8, dw'nine', 9, dw'ten', 10, dw'eleven', 11, dw'twelve', 12, dw'thirteen', 13, dw'fourteen', 14, dw'fifteen', 15, dw'sixteen', 16, dw'seventeen', 17, dw'eighteen', 18, dw'nineteen', 19, dw'twenty', 20, dw'twenty-one', 21, dw'twenty-two', 22, dw'twenty-three', 23, dw'twenty-four', 24, dw'twenty-five', 25, dw'twenty-six', 26, dw'twenty-seven', 27, dw'twenty-eight', 28, dw'twenty-nine', 29, dw'thirty', 30 } __assimilated=1 __table_array=1
			package LanguageArticles_arr _plain
				symbol public misc LanguageArticles
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant LanguageArticles K_list_of_values = { "The ", "the ", "a ", "The ", "the ", "an ", "The ", "the ", "some ", "The ", "the ", "some " } __assimilated=1
			package LanguageGNAsToArticles_arr _plain
				symbol public misc LanguageGNAsToArticles
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant LanguageGNAsToArticles K_list_of_values = { 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1 } __assimilated=1
			package requisition_stack_arr _plain
				symbol public misc requisition_stack
				symbol external misc REQUISITION_STACK_SIZE --> /main/template/constants/REQUISITION_STACK_SIZE_con/REQUISITION_STACK_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant requisition_stack K_list_of_values = { REQUISITION_STACK_SIZE } __assimilated=1
			package LWI_Storage_arr _plain
				symbol public misc LWI_Storage
				symbol public misc Computed_Constant_Value_17
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_17 K_unchecked = 0
				constant LWI_Storage K_list_of_values = { 1, -1, Computed_Constant_Value_17 } __assimilated=1
			package pattern_arr _plain
				symbol public misc pattern
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant pattern K_list_of_values = { 32 } __assimilated=1
			package pattern2_arr _plain
				symbol public misc pattern2
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant pattern2 K_list_of_values = { 32 } __assimilated=1
			package line_ttype_arr _plain
				symbol public misc line_ttype
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant line_ttype K_list_of_values = { 32 } __assimilated=1
			package line_tdata_arr _plain
				symbol public misc line_tdata
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant line_tdata K_list_of_values = { 32 } __assimilated=1
			package line_token_arr _plain
				symbol public misc line_token
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant line_token K_list_of_values = { 32 } __assimilated=1
			package oops_workspace_arr _plain
				symbol public misc oops_workspace
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant oops_workspace K_list_of_values = { 64 } __assimilated=1 __byte_array=1
			package match_list_arr _plain
				symbol public misc match_list
				symbol external misc plug_00033 --> /main/connectors/plug_00033
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant match_list K_list_of_values = { plug_00033 } __assimilated=1
			package match_classes_arr _plain
				symbol public misc match_classes
				symbol external misc plug_00034 --> /main/connectors/plug_00034
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant match_classes K_list_of_values = { plug_00034 } __assimilated=1
			package match_scores_arr _plain
				symbol public misc match_scores
				symbol external misc plug_00035 --> /main/connectors/plug_00035
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant match_scores K_list_of_values = { plug_00035 } __assimilated=1
			package alt_match_list_arr _plain
				symbol public misc alt_match_list
				symbol public misc Computed_Constant_Value_18
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_19
				symbol external misc plug_00036 --> /main/connectors/plug_00036
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_18 K_unchecked = 1
				constant Computed_Constant_Value_19 K_unchecked = sum{ plug_00036, Computed_Constant_Value_18 }
				constant alt_match_list K_list_of_values = { Computed_Constant_Value_19 } __assimilated=1
			package Protect_I7_Arrays_arr _plain
				symbol public misc Protect_I7_Arrays
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Protect_I7_Arrays K_list_of_values = { 16339, 12345 } __assimilated=1
			package attributed_property_offsets_arr _plain
				symbol public misc attributed_property_offsets
				symbol external misc attributed_property_offsets_SIZE --> /main/template/constants/attributed_property_offsets_SIZE_con/attributed_property_offsets_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant attributed_property_offsets K_list_of_values = { attributed_property_offsets_SIZE } __assimilated=1
			package valued_property_offsets_arr _plain
				symbol public misc valued_property_offsets
				symbol external misc valued_property_offsets_SIZE --> /main/template/constants/valued_property_offsets_SIZE_con/valued_property_offsets_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant valued_property_offsets K_list_of_values = { valued_property_offsets_SIZE } __assimilated=1
			package Details_of_Specific_Action_arr _plain
				symbol public misc Details_of_Specific_Action
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Details_of_Specific_Action K_list_of_values = { 5 } __assimilated=1
			package activities_stack_arr _plain
				symbol public misc activities_stack
				symbol external misc MAX_NESTED_ACTIVITIES --> /main/template/constants/MAX_NESTED_ACTIVITIES_con/MAX_NESTED_ACTIVITIES
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant activities_stack K_list_of_values = { MAX_NESTED_ACTIVITIES } __assimilated=1
			package activity_parameters_stack_arr _plain
				symbol public misc activity_parameters_stack
				symbol external misc MAX_NESTED_ACTIVITIES --> /main/template/constants/MAX_NESTED_ACTIVITIES_con/MAX_NESTED_ACTIVITIES
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant activity_parameters_stack K_list_of_values = { MAX_NESTED_ACTIVITIES } __assimilated=1
			package ResourceUsageFlags_arr _plain
				symbol public misc ResourceUsageFlags
				symbol public misc Computed_Constant_Value_25
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc plug_00038 --> /main/connectors/plug_00038
				symbol external misc plug_00039 --> /main/connectors/plug_00039
				symbol public misc Computed_Constant_Value_26
				symbol public misc Computed_Constant_Value_27
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_25 K_unchecked = sum{ plug_00038, plug_00039 }
				constant Computed_Constant_Value_26 K_unchecked = 5
				constant Computed_Constant_Value_27 K_unchecked = sum{ Computed_Constant_Value_25, Computed_Constant_Value_26 }
				constant ResourceUsageFlags K_list_of_values = { Computed_Constant_Value_27 } __assimilated=1 __byte_array=1
			package MStack_arr _plain
				symbol public misc MStack
				symbol external misc MSTACK_SIZE --> /main/template/constants/MSTACK_SIZE_con/MSTACK_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant MStack K_list_of_values = { MSTACK_SIZE } __assimilated=1
			package T_SL_Score_Moves_arr _plain
				symbol public misc T_SL_Score_Moves
				symbol external misc plug_00041 --> /main/template/constants/CONSTANT_PACKED_TEXT_STORAGE_con/CONSTANT_PACKED_TEXT_STORAGE
				symbol external misc SL_Score_Moves --> /main/template/functions/SL_Score_Moves_fn/SL_Score_Moves
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant T_SL_Score_Moves K_list_of_values = { CONSTANT_PACKED_TEXT_STORAGE, SL_Score_Moves } __assimilated=1
			package T_SL_Location_arr _plain
				symbol public misc T_SL_Location
				symbol external misc plug_00042 --> /main/template/constants/CONSTANT_PACKED_TEXT_STORAGE_con/CONSTANT_PACKED_TEXT_STORAGE
				symbol external misc SL_Location --> /main/template/functions/SL_Location_fn/SL_Location
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant T_SL_Location K_list_of_values = { CONSTANT_PACKED_TEXT_STORAGE, SL_Location } __assimilated=1
			package StorageForShortName_arr _plain
				symbol public misc StorageForShortName
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant StorageForShortName K_list_of_values = { 250 } __assimilated=1 __buffer_array=1
			package I7_SOO_SHUF_arr _plain
				symbol public misc I7_SOO_SHUF
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant I7_SOO_SHUF K_list_of_values = { 32 } __assimilated=1 __byte_array=1
			package DoorRoutingViable_arr _plain
				symbol public misc DoorRoutingViable
				symbol public misc Computed_Constant_Value_34
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_35
				symbol external misc NUM_DOORS --> /main/template/constants/NUM_DOORS_con/NUM_DOORS
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_34 K_unchecked = 1
				constant Computed_Constant_Value_35 K_unchecked = sum{ NUM_DOORS, Computed_Constant_Value_34 }
				constant DoorRoutingViable K_list_of_values = { Computed_Constant_Value_35 } __assimilated=1 __byte_array=1
			package RTP_Buffer_arr _plain
				symbol public misc RTP_Buffer
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant RTP_Buffer K_list_of_values = { 7 } __assimilated=1
			package latest_rule_result_arr _plain
				symbol public misc latest_rule_result
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant latest_rule_result K_list_of_values = { 3 } __assimilated=1
			package CheckTableEntryIsBlank_LU_arr _plain
				symbol public misc CheckTableEntryIsBlank_LU
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant CheckTableEntryIsBlank_LU K_list_of_values = { 1, 2, 4, 8, 16, 32, 64, 128 } __assimilated=1 __byte_array=1
			package CheckTableEntryIsNonBlank_LU_arr _plain
				symbol public misc CheckTableEntryIsNonBlank_LU
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant CheckTableEntryIsNonBlank_LU K_list_of_values = { 254, 253, 251, 247, 239, 223, 191, 127 } __assimilated=1 __byte_array=1
			package TimesActionHasHappened_arr _plain
				symbol public misc TimesActionHasHappened
				symbol public misc Computed_Constant_Value_38
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_39
				symbol external misc plug_00084 --> /main/connectors/plug_00084
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_38 K_unchecked = 1
				constant Computed_Constant_Value_39 K_unchecked = sum{ plug_00084, Computed_Constant_Value_38 }
				constant TimesActionHasHappened K_list_of_values = { Computed_Constant_Value_39 } __assimilated=1
			package TurnsActionHasBeenHappening_arr _plain
				symbol public misc TurnsActionHasBeenHappening
				symbol public misc Computed_Constant_Value_40
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_41
				symbol external misc plug_00085 --> /main/connectors/plug_00085
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_40 K_unchecked = 1
				constant Computed_Constant_Value_41 K_unchecked = sum{ plug_00085, Computed_Constant_Value_40 }
				constant TurnsActionHasBeenHappening K_list_of_values = { Computed_Constant_Value_41 } __assimilated=1
			package LastTurnActionHappenedOn_arr _plain
				symbol public misc LastTurnActionHappenedOn
				symbol public misc Computed_Constant_Value_42
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_43
				symbol external misc plug_00086 --> /main/connectors/plug_00086
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_42 K_unchecked = 1
				constant Computed_Constant_Value_43 K_unchecked = sum{ plug_00086, Computed_Constant_Value_42 }
				constant LastTurnActionHappenedOn K_list_of_values = { Computed_Constant_Value_43 } __assimilated=1
			package ActionCurrentlyHappeningFlag_arr _plain
				symbol public misc ActionCurrentlyHappeningFlag
				symbol public misc Computed_Constant_Value_44
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_45
				symbol external misc plug_00087 --> /main/connectors/plug_00087
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_44 K_unchecked = 1
				constant Computed_Constant_Value_45 K_unchecked = sum{ plug_00087, Computed_Constant_Value_44 }
				constant ActionCurrentlyHappeningFlag K_list_of_values = { Computed_Constant_Value_45 } __assimilated=1 __byte_array=1
			package past_chronological_record_arr _plain
				symbol public misc past_chronological_record
				symbol public misc Computed_Constant_Value_46
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_47
				symbol external misc plug_00088 --> /main/connectors/plug_00088
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_46 K_unchecked = 1
				constant Computed_Constant_Value_47 K_unchecked = sum{ plug_00088, Computed_Constant_Value_46 }
				constant past_chronological_record K_list_of_values = { Computed_Constant_Value_47 } __assimilated=1
			package present_chronological_record_arr _plain
				symbol public misc present_chronological_record
				symbol public misc Computed_Constant_Value_48
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_49
				symbol external misc plug_00089 --> /main/connectors/plug_00089
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_48 K_unchecked = 1
				constant Computed_Constant_Value_49 K_unchecked = sum{ plug_00089, Computed_Constant_Value_48 }
				constant present_chronological_record K_list_of_values = { Computed_Constant_Value_49 } __assimilated=1
			package Runtime_Quotations_Displayed_arr _plain
				symbol public misc Runtime_Quotations_Displayed
				symbol external misc plug_00090 --> /main/connectors/plug_00090
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Runtime_Quotations_Displayed K_list_of_values = { plug_00090 } __assimilated=1
			package Flex_Heap_arr _plain
				symbol public misc Flex_Heap
				symbol public misc Computed_Constant_Value_55
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol public misc Computed_Constant_Value_56
				symbol external misc plug_00093 --> /main/connectors/plug_00093
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_55 K_unchecked = 16
				constant Computed_Constant_Value_56 K_unchecked = sum{ plug_00093, Computed_Constant_Value_55 }
				constant Flex_Heap K_list_of_values = { Computed_Constant_Value_56 } __assimilated=1 __byte_array=1
			package CharCasingChart0_arr _plain
				symbol public misc CharCasingChart0
				symbol external misc UNIC_NCT --> /main/template/constants/UNIC_NCT_con/UNIC_NCT
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant CharCasingChart0 K_list_of_values = { 97, 26, -32, 155, 3, 3, 161, 1, UNIC_NCT, 164, 2, 3, 166, 1, UNIC_NCT, 169, 6, 6, 181, 5, 5, 191, 5, 5, 201, -3, 1, 205, 3, 3, 211, -3, 1, 215, 2, 2, 220, 1, 1, 0 } __assimilated=1
			package CharCasingChart1_arr _plain
				symbol public misc CharCasingChart1
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant CharCasingChart1 K_list_of_values = { 65, 26, 32, 158, 3, -3, 167, 2, -3, 175, 6, -6, 186, 5, -5, 196, 5, -5, 202, -3, -1, 208, 3, -3, 212, -3, -1, 217, 2, -2, 221, 1, -1, 0 } __assimilated=1
			package TEXT_TY_Buffers_arr _plain
				symbol public misc TEXT_TY_Buffers
				symbol public misc Computed_Constant_Value_68
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc TEXT_TY_BufferSize --> /main/template/constants/TEXT_TY_BufferSize_con/TEXT_TY_BufferSize
				symbol external misc TEXT_TY_NoBuffers --> /main/template/constants/TEXT_TY_NoBuffers_con/TEXT_TY_NoBuffers
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_68 K_unchecked = product{ TEXT_TY_BufferSize, TEXT_TY_NoBuffers }
				constant TEXT_TY_Buffers K_list_of_values = { Computed_Constant_Value_68 } __assimilated=1 __byte_array=1
			package RE_PACKET_space_arr _plain
				symbol public misc RE_PACKET_space
				symbol public misc Computed_Constant_Value_70
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				symbol external misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
				symbol external misc RE_PACKET_SIZE --> /main/template/constants/RE_PACKET_SIZE_con/RE_PACKET_SIZE
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Computed_Constant_Value_70 K_unchecked = product{ RE_MAX_PACKETS, RE_PACKET_SIZE }
				constant RE_PACKET_space K_list_of_values = { Computed_Constant_Value_70 } __assimilated=1
			package RE_Subexpressions_arr _plain
				symbol public misc RE_Subexpressions
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant RE_Subexpressions K_list_of_values = { 11 } __assimilated=1
			package Allocated_Match_Vars_arr _plain
				symbol public misc Allocated_Match_Vars
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Allocated_Match_Vars K_list_of_values = { 10 } __assimilated=1
			package Subexp_Posns_arr _plain
				symbol public misc Subexp_Posns
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant Subexp_Posns K_list_of_values = { 20 } __assimilated=1
			package SAT_Tmp_arr _plain
				symbol public misc SAT_Tmp
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant SAT_Tmp K_list_of_values = { 7 } __assimilated=1
		package functions _submodule
			package Prop_Falsity_fn _function
				symbol public misc Prop_Falsity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Prop_Falsity_B _code
					symbol private misc reason
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj
					local reason K_unchecked
					local obj K_unchecked
					code
						inv !return
							val K_unchecked 0
				constant Prop_Falsity K_unchecked_function = Prop_Falsity_B __assimilated=1
			package VM_Initialise_fn _function
				symbol public misc VM_Initialise
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Initialise_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00107 --> /main/template/variables/standard_interpreter_var/standard_interpreter
					symbol external misc HDR_TERPSTANDARD --> /main/template/constants/HDR_TERPSTANDARD_con/HDR_TERPSTANDARD
					symbol external misc plug_00108 --> /main/template/variables/transcript_mode_var/transcript_mode
					symbol external misc HDR_GAMEFLAGS --> /main/template/constants/HDR_GAMEFLAGS_con/HDR_GAMEFLAGS
					symbol external misc plug_00109 --> /main/template/variables/dict_start_var/dict_start
					symbol external misc HDR_DICTIONARY --> /main/template/constants/HDR_DICTIONARY_con/HDR_DICTIONARY
					symbol external misc plug_00110 --> /main/template/variables/dict_entry_size_var/dict_entry_size
					symbol external misc plug_00111 --> /main/template/variables/dict_end_var/dict_end
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol external misc INPUT_BUFFER_LEN --> /main/template/constants/INPUT_BUFFER_LEN_con/INPUT_BUFFER_LEN
					symbol external misc buffer2 --> /main/template/arrays/buffer2_arr/buffer2
					symbol external misc buffer3 --> /main/template/arrays/buffer3_arr/buffer3
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc parse2 --> /main/template/arrays/parse2_arr/parse2
					symbol external misc plug_00112 --> /main/template/variables/top_object_var/top_object
					symbol external misc #largest_object --> /main/veneer/#largest_object
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked standard_interpreter
							inv !lookup
								val K_unchecked HDR_TERPSTANDARD
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked transcript_mode
							inv !bitwiseand
								inv !lookup
									val K_unchecked HDR_GAMEFLAGS
									val K_unchecked 0
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked dict_start
							inv !lookup
								val K_unchecked HDR_DICTIONARY
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked dict_entry_size
							inv !lookupbyte
								val K_unchecked dict_start
								inv !plus
									inv !lookupbyte
										val K_unchecked dict_start
										val K_unchecked 0
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked dict_start
							inv !plus
								inv !plus
									val K_unchecked dict_start
									inv !lookupbyte
										val K_unchecked dict_start
										val K_unchecked 0
								val K_unchecked 4
						inv !store
							reference
								val K_unchecked dict_end
							inv !plus
								val K_unchecked dict_start
								inv !times
									inv !lookup
										inv !minus
											val K_unchecked dict_start
											val K_unchecked 2
										val K_unchecked 0
									val K_unchecked dict_entry_size
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked buffer
									val K_unchecked 0
							val K_unchecked INPUT_BUFFER_LEN
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked buffer2
									val K_unchecked 0
							val K_unchecked INPUT_BUFFER_LEN
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked buffer3
									val K_unchecked 0
							val K_unchecked INPUT_BUFFER_LEN
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked parse
									val K_unchecked 0
							val K_unchecked 15
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked parse2
									val K_unchecked 0
							val K_unchecked 15
						inv !store
							reference
								val K_unchecked top_object
							inv !minus
								val K_unchecked #largest_object
								val K_unchecked 255
				constant VM_Initialise K_unchecked_function = VM_Initialise_B __assimilated=1
			package ENABLE_GLULX_ACCEL_R_fn _function
				symbol public misc ENABLE_GLULX_ACCEL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ENABLE_GLULX_ACCEL_R_B _code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							val K_unchecked 0
				constant ENABLE_GLULX_ACCEL_R K_unchecked_function = ENABLE_GLULX_ACCEL_R_B __assimilated=1
			package VM_Describe_Release_fn _function
				symbol public misc VM_Describe_Release
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Describe_Release_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc HDR_GAMERELEASE --> /main/template/constants/HDR_GAMERELEASE_con/HDR_GAMERELEASE
					symbol external misc HDR_GAMESERIAL --> /main/template/constants/HDR_GAMESERIAL_con/HDR_GAMESERIAL
					local i K_unchecked
					code
						inv !print
							val K_unchecked "Release "
						inv !printnumber
							inv !bitwiseand
								inv !lookup
									val K_unchecked HDR_GAMERELEASE
									val K_unchecked 0
								val K_unchecked 1023
						inv !print
							val K_unchecked " / Serial number "
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked 6
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !printchar
									inv !lookupbyte
										val K_unchecked HDR_GAMESERIAL
										val K_unchecked i
				constant VM_Describe_Release K_unchecked_function = VM_Describe_Release_B __assimilated=1
			package VM_KeyChar_fn _function
				symbol public misc VM_KeyChar
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_KeyChar_B _code
					symbol private misc win
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc key
					symbol external misc __assembly_arrow --> /main/veneer/__assembly_arrow
					local win K_unchecked
					local key K_unchecked
					code
						inv !if
							val K_unchecked win
							code
								inv @set_window
									val K_unchecked win
						inv @read_char
							val K_unchecked 1
							val K_unchecked __assembly_arrow
							val K_unchecked key
						inv !return
							val K_unchecked key
				constant VM_KeyChar K_unchecked_function = VM_KeyChar_B __assimilated=1
			package VM_KeyDelay_fn _function
				symbol public misc VM_KeyDelay
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_KeyDelay_B _code
					symbol private misc tenths
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc key
					symbol external misc VM_KeyDelay_Interrupt --> /main/template/functions/VM_KeyDelay_Interrupt_fn/VM_KeyDelay_Interrupt
					symbol external misc __assembly_arrow --> /main/veneer/__assembly_arrow
					local tenths K_unchecked
					local key K_unchecked
					code
						inv @read_char
							val K_unchecked 1
							val K_unchecked tenths
							val K_unchecked VM_KeyDelay_Interrupt
							val K_unchecked __assembly_arrow
							val K_unchecked key
						inv !return
							val K_unchecked key
				constant VM_KeyDelay K_unchecked_function = VM_KeyDelay_B __assimilated=1
			package VM_KeyDelay_Interrupt_fn _function
				symbol public misc VM_KeyDelay_Interrupt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_KeyDelay_Interrupt_B _code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							val K_unchecked 1
				constant VM_KeyDelay_Interrupt K_unchecked_function = VM_KeyDelay_Interrupt_B __assimilated=1
			package VM_ReadKeyboard_fn _function
				symbol public misc VM_ReadKeyboard
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_ReadKeyboard_B _code
					symbol private misc a_buffer
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc a_table
					symbol private misc i
					local a_buffer K_unchecked
					local a_table K_unchecked
					local i K_unchecked
					code
						inv !read
							val K_unchecked a_buffer
							val K_unchecked a_table
						inv !store
							reference
								val K_unchecked i
							val K_unchecked 0
				constant VM_ReadKeyboard K_unchecked_function = VM_ReadKeyboard_B __assimilated=1
			package VM_CopyBuffer_fn _function
				symbol public misc VM_CopyBuffer
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_CopyBuffer_B _code
					symbol private misc bto
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc bfrom
					symbol private misc i
					symbol external misc INPUT_BUFFER_LEN --> /main/template/constants/INPUT_BUFFER_LEN_con/INPUT_BUFFER_LEN
					local bto K_unchecked
					local bfrom K_unchecked
					local i K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked INPUT_BUFFER_LEN
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked bto
											val K_unchecked i
									inv !lookupbyte
										val K_unchecked bfrom
										val K_unchecked i
				constant VM_CopyBuffer K_unchecked_function = VM_CopyBuffer_B __assimilated=1
			package VM_PrintToBuffer_fn _function
				symbol public misc VM_PrintToBuffer
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_PrintToBuffer_B _code
					symbol private misc buf
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc len
					symbol private misc a
					symbol private misc b
					symbol private misc c
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc String --> /main/veneer/String
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc Object --> /main/veneer/Object
					symbol external misc Class --> /main/veneer/Class
					symbol external misc PrintOrRun --> /main/template/functions/PrintOrRun_fn/PrintOrRun
					local buf K_unchecked
					local len K_unchecked
					local a K_unchecked
					local b K_unchecked
					local c K_unchecked
					code
						inv @output_stream
							val K_unchecked 3
							val K_unchecked buf
						inv !switch
							inv metaclass
								val K_unchecked a
							code
								inv !case
									val K_unchecked String
									code
										inv !printstring
											val K_unchecked a
								inv !case
									val K_unchecked Routine
									code
										inv !indirect2
											val K_unchecked a
											val K_unchecked b
											val K_unchecked c
								inv !case
									inv !alternativecase
										val K_unchecked Object
										val K_unchecked Class
									code
										inv !ifelse
											val K_unchecked b
											code
												inv PrintOrRun
													val K_unchecked a
													val K_unchecked b
													val K_unchecked 1
											code
												inv !printname
													val K_unchecked a
						inv @output_stream
							val K_unchecked -3
						inv !if
							inv !gt
								inv !lookup
									val K_unchecked buf
									val K_unchecked 0
								val K_unchecked len
							code
								inv !print
									val K_unchecked "Error: Overflow in VM_PrintToBuffer.\n"
						inv !return
							inv !lookup
								val K_unchecked buf
								val K_unchecked 0
				constant VM_PrintToBuffer K_unchecked_function = VM_PrintToBuffer_B __assimilated=1
			package VM_Tokenise_fn _function
				symbol public misc VM_Tokenise
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Tokenise_B _code
					symbol private misc b
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					local b K_unchecked
					local p K_unchecked
					code
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked b
									inv !plus
										val K_unchecked 2
										inv !lookupbyte
											val K_unchecked b
											val K_unchecked 1
							val K_unchecked 0
						inv @tokenise
							val K_unchecked b
							val K_unchecked p
				constant VM_Tokenise K_unchecked_function = VM_Tokenise_B __assimilated=1
			package LTI_Insert_fn _function
				symbol public misc LTI_Insert
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LTI_Insert_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ch
					symbol private misc b
					symbol private misc y
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					local i K_unchecked
					local ch K_unchecked
					local b K_unchecked
					local y K_unchecked
					code
						inv !store
							reference
								val K_unchecked b
							val K_unchecked buffer
						inv !store
							reference
								val K_unchecked y
							inv !lookupbyte
								val K_unchecked b
								val K_unchecked 1
						inv !if
							inv !gt
								val K_unchecked y
								inv !lookupbyte
									val K_unchecked b
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked y
									inv !lookupbyte
										val K_unchecked b
										val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked y
								inv !plus
									val K_unchecked y
									val K_unchecked 2
							inv !gt
								val K_unchecked y
								val K_unchecked i
							inv !postdecrement
								reference
									val K_unchecked y
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked b
											val K_unchecked y
									inv !lookupbyte
										val K_unchecked b
										inv !minus
											val K_unchecked y
											val K_unchecked 1
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked b
									val K_unchecked i
							val K_unchecked ch
						inv !if
							inv !lt
								inv !lookupbyte
									val K_unchecked b
									val K_unchecked 1
								inv !lookupbyte
									val K_unchecked b
									val K_unchecked 0
							code
								inv !postincrement
									reference
										inv !lookupbyte
											val K_unchecked b
											val K_unchecked 1
				constant LTI_Insert K_unchecked_function = LTI_Insert_B __assimilated=1
			package VM_InvalidDictionaryAddress_fn _function
				symbol public misc VM_InvalidDictionaryAddress
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_InvalidDictionaryAddress_B _code
					symbol private misc addr
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc plug_00109 --> /main/template/variables/dict_start_var/dict_start
					symbol external misc plug_00111 --> /main/template/variables/dict_end_var/dict_end
					symbol external misc plug_00110 --> /main/template/variables/dict_entry_size_var/dict_entry_size
					local addr K_unchecked
					code
						inv !if
							inv !or
								inv !or
									inv !lt
										inv UnsignedCompare
											val K_unchecked addr
											val K_unchecked dict_start
										val K_unchecked 0
									inv !ge
										inv UnsignedCompare
											val K_unchecked addr
											val K_unchecked dict_end
										val K_unchecked 0
								inv !ne
									inv !modulo
										inv !minus
											val K_unchecked addr
											val K_unchecked dict_start
										val K_unchecked dict_entry_size
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant VM_InvalidDictionaryAddress K_unchecked_function = VM_InvalidDictionaryAddress_B __assimilated=1
			package VM_DictionaryAddressToNumber_fn _function
				symbol public misc VM_DictionaryAddressToNumber
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_DictionaryAddressToNumber_B _code
					symbol private misc w
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc HDR_DICTIONARY --> /main/template/constants/HDR_DICTIONARY_con/HDR_DICTIONARY
					local w K_unchecked
					code
						inv !return
							inv !divide
								inv !minus
									val K_unchecked w
									inv !plus
										inv !lookup
											val K_unchecked HDR_DICTIONARY
											val K_unchecked 0
										val K_unchecked 7
								val K_unchecked 9
				constant VM_DictionaryAddressToNumber K_unchecked_function = VM_DictionaryAddressToNumber_B __assimilated=1
			package VM_NumberToDictionaryAddress_fn _function
				symbol public misc VM_NumberToDictionaryAddress
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_NumberToDictionaryAddress_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc HDR_DICTIONARY --> /main/template/constants/HDR_DICTIONARY_con/HDR_DICTIONARY
					local n K_unchecked
					code
						inv !return
							inv !plus
								inv !plus
									inv !lookup
										val K_unchecked HDR_DICTIONARY
										val K_unchecked 0
									val K_unchecked 7
								inv !times
									val K_unchecked 9
									val K_unchecked n
				constant VM_NumberToDictionaryAddress K_unchecked_function = VM_NumberToDictionaryAddress_B __assimilated=1
			package VM_CommandTableAddress_fn _function
				symbol public misc VM_CommandTableAddress
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_CommandTableAddress_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc HDR_STATICMEMORY --> /main/template/constants/HDR_STATICMEMORY_con/HDR_STATICMEMORY
					local i K_unchecked
					code
						inv !return
							inv !lookup
								inv !lookup
									val K_unchecked HDR_STATICMEMORY
									val K_unchecked 0
								val K_unchecked i
				constant VM_CommandTableAddress K_unchecked_function = VM_CommandTableAddress_B __assimilated=1
			package VM_PrintCommandWords_fn _function
				symbol public misc VM_PrintCommandWords
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_PrintCommandWords_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc da
					symbol private misc j
					symbol external misc HDR_DICTIONARY --> /main/template/constants/HDR_DICTIONARY_con/HDR_DICTIONARY
					symbol external misc VM_NumberToDictionaryAddress --> /main/template/functions/VM_NumberToDictionaryAddress_fn/VM_NumberToDictionaryAddress
					local i K_unchecked
					local da K_unchecked
					local j K_unchecked
					code
						inv !store
							reference
								val K_unchecked da
							inv !lookup
								val K_unchecked HDR_DICTIONARY
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 0
							inv !lt
								val K_unchecked j
								inv !lookup
									inv !plus
										val K_unchecked da
										val K_unchecked 5
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked j
							code
								inv !if
									inv !eq
										inv !lookupbyte
											val K_unchecked da
											inv !plus
												inv !times
													val K_unchecked j
													val K_unchecked 9
												val K_unchecked 14
										inv !minus
											val K_unchecked 255
											val K_unchecked i
									code
										inv !print
											val K_unchecked "'"
										inv !printaddress
											inv VM_NumberToDictionaryAddress
												val K_unchecked j
										inv !print
											val K_unchecked "' "
				constant VM_PrintCommandWords K_unchecked_function = VM_PrintCommandWords_B __assimilated=1
			package DebugAction_fn _function
				symbol public misc DebugAction
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DebugAction_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc anames
					symbol external misc #identifiers_table --> /main/veneer/#identifiers_table
					local a K_unchecked
					local anames K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked a
								val K_unchecked 4096
							code
								inv !print
									val K_unchecked "<fake action "
								inv !printnumber
									inv !minus
										val K_unchecked a
										val K_unchecked 4096
								inv !print
									val K_unchecked ">"
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked anames
							val K_unchecked #identifiers_table
						inv !store
							reference
								val K_unchecked anames
							inv !plus
								inv !plus
									val K_unchecked anames
									inv !times
										val K_unchecked 2
										inv !lookup
											val K_unchecked anames
											val K_unchecked 0
								inv !times
									val K_unchecked 2
									val K_unchecked 48
						inv !printstring
							inv !lookup
								val K_unchecked anames
								val K_unchecked a
				constant DebugAction K_unchecked_function = DebugAction_B __assimilated=1
			package DebugAttribute_fn _function
				symbol public misc DebugAttribute
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DebugAttribute_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc anames
					symbol external misc #identifiers_table --> /main/veneer/#identifiers_table
					local a K_unchecked
					local anames K_unchecked
					code
						inv !ifelse
							inv !or
								inv !lt
									val K_unchecked a
									val K_unchecked 0
								inv !ge
									val K_unchecked a
									val K_unchecked 48
							code
								inv !print
									val K_unchecked "<invalid attribute "
								inv !printnumber
									val K_unchecked a
								inv !print
									val K_unchecked ">"
							code
								inv !store
									reference
										val K_unchecked anames
									val K_unchecked #identifiers_table
								inv !store
									reference
										val K_unchecked anames
									inv !plus
										val K_unchecked anames
										inv !times
											val K_unchecked 2
											inv !lookup
												val K_unchecked anames
												val K_unchecked 0
								inv !printstring
									inv !lookup
										val K_unchecked anames
										val K_unchecked a
				constant DebugAttribute K_unchecked_function = DebugAttribute_B __assimilated=1
			package VM_Seed_RNG_fn _function
				symbol public misc VM_Seed_RNG
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Seed_RNG_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc __assembly_arrow --> /main/veneer/__assembly_arrow
					local n K_unchecked
					code
						inv !if
							inv !gt
								val K_unchecked n
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked n
									inv !unaryminus
										val K_unchecked n
						inv @random
							val K_unchecked n
							val K_unchecked __assembly_arrow
							val K_unchecked n
				constant VM_Seed_RNG K_unchecked_function = VM_Seed_RNG_B __assimilated=1
			package VM_AllocateMemory_fn _function
				symbol public misc VM_AllocateMemory
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_AllocateMemory_B _code
					symbol private misc amount
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local amount K_unchecked
					code
						inv !return
							val K_unchecked 0
				constant VM_AllocateMemory K_unchecked_function = VM_AllocateMemory_B __assimilated=1
			package VM_FreeMemory_fn _function
				symbol public misc VM_FreeMemory
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_FreeMemory_B _code
					symbol private misc address
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local address K_unchecked
					code
				constant VM_FreeMemory K_unchecked_function = VM_FreeMemory_B __assimilated=1
			package VM_Picture_fn _function
				symbol public misc VM_Picture
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Picture_B _code
					symbol private misc resource_ID
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local resource_ID K_unchecked
					code
				constant VM_Picture K_unchecked_function = VM_Picture_B __assimilated=1
			package VM_SoundEffect_fn _function
				symbol public misc VM_SoundEffect
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_SoundEffect_B _code
					symbol private misc resource_ID
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local resource_ID K_unchecked
					code
				constant VM_SoundEffect K_unchecked_function = VM_SoundEffect_B __assimilated=1
			package VM_Style_fn _function
				symbol public misc VM_Style
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Style_B _code
					symbol private misc sty
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc NORMAL_VMSTY --> /main/template/constants/NORMAL_VMSTY_con/NORMAL_VMSTY
					symbol external misc NOTE_VMSTY --> /main/template/constants/NOTE_VMSTY_con/NOTE_VMSTY
					symbol external misc HEADER_VMSTY --> /main/template/constants/HEADER_VMSTY_con/HEADER_VMSTY
					symbol external misc SUBHEADER_VMSTY --> /main/template/constants/SUBHEADER_VMSTY_con/SUBHEADER_VMSTY
					symbol external misc ALERT_VMSTY --> /main/template/constants/ALERT_VMSTY_con/ALERT_VMSTY
					local sty K_unchecked
					code
						inv !switch
							val K_unchecked sty
							code
								inv !case
									inv !alternativecase
										val K_unchecked NORMAL_VMSTY
										val K_unchecked NOTE_VMSTY
									code
										inv !styleroman
								inv !case
									inv !alternativecase
										inv !alternativecase
											val K_unchecked HEADER_VMSTY
											val K_unchecked SUBHEADER_VMSTY
										val K_unchecked ALERT_VMSTY
									code
										inv !stylebold
				constant VM_Style K_unchecked_function = VM_Style_B __assimilated=1
			package VM_UpperToLowerCase_fn _function
				symbol public misc VM_UpperToLowerCase
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_UpperToLowerCase_B _code
					symbol private misc c
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local c K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 65
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 90
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 32
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 158
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 160
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 3
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 167
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 168
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 3
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 175
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 180
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 6
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 186
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 190
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 5
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 196
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 200
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 5
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 202
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 204
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 208
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 210
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 3
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 212
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 214
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 217
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 2
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 218
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 2
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 221
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 1
						inv !return
							val K_unchecked c
				constant VM_UpperToLowerCase K_unchecked_function = VM_UpperToLowerCase_B __assimilated=1
			package VM_LowerToUpperCase_fn _function
				symbol public misc VM_LowerToUpperCase
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_LowerToUpperCase_B _code
					symbol private misc c
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local c K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 97
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 122
							code
								inv !return
									inv !minus
										val K_unchecked c
										val K_unchecked 32
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 155
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 157
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 3
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 164
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 165
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 3
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 169
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 174
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 6
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 181
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 185
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 5
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 191
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 195
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 5
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 201
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 203
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 205
							code
								inv !return
									val K_unchecked c
						inv !if
							inv !le
								val K_unchecked c
								val K_unchecked 207
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 3
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 211
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 213
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 215
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 2
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 216
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 2
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 220
							code
								inv !return
									inv !plus
										val K_unchecked c
										val K_unchecked 1
						inv !return
							val K_unchecked c
				constant VM_LowerToUpperCase K_unchecked_function = VM_LowerToUpperCase_B __assimilated=1
			package VM_ClearScreen_fn _function
				symbol public misc VM_ClearScreen
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_ClearScreen_B _code
					symbol private misc window
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc WIN_ALL --> /main/template/constants/WIN_ALL_con/WIN_ALL
					symbol external misc plug_00114 --> /main/template/variables/statuswin_cursize_var/statuswin_cursize
					symbol external misc WIN_STATUS --> /main/template/constants/WIN_STATUS_con/WIN_STATUS
					symbol external misc WIN_MAIN --> /main/template/constants/WIN_MAIN_con/WIN_MAIN
					local window K_unchecked
					code
						inv !switch
							val K_unchecked window
							code
								inv !case
									val K_unchecked WIN_ALL
									code
										inv @erase_window
											val K_unchecked -1
										inv !store
											reference
												val K_unchecked statuswin_cursize
											val K_unchecked 0
								inv !case
									val K_unchecked WIN_STATUS
									code
										inv @erase_window
											val K_unchecked 1
								inv !case
									val K_unchecked WIN_MAIN
									code
										inv @erase_window
											val K_unchecked 0
				constant VM_ClearScreen K_unchecked_function = VM_ClearScreen_B __assimilated=1
			package VM_ScreenWidth_fn _function
				symbol public misc VM_ScreenWidth
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_ScreenWidth_B _code
					symbol private misc width
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc charw
					symbol external misc HDR_SCREENWCHARS --> /main/template/constants/HDR_SCREENWCHARS_con/HDR_SCREENWCHARS
					local width K_unchecked
					local charw K_unchecked
					code
						inv !return
							inv !lookupbyte
								val K_unchecked HDR_SCREENWCHARS
								val K_unchecked 0
				constant VM_ScreenWidth K_unchecked_function = VM_ScreenWidth_B __assimilated=1
			package VM_ScreenHeight_fn _function
				symbol public misc VM_ScreenHeight
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_ScreenHeight_B _code
					symbol external misc HDR_SCREENHLINES --> /main/template/constants/HDR_SCREENHLINES_con/HDR_SCREENHLINES
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							inv !lookupbyte
								val K_unchecked HDR_SCREENHLINES
								val K_unchecked 0
				constant VM_ScreenHeight K_unchecked_function = VM_ScreenHeight_B __assimilated=1
			package VM_SetWindowColours_fn _function
				symbol public misc VM_SetWindowColours
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_SetWindowColours_B _code
					symbol private misc f
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc b
					symbol private misc window
					symbol external misc plug_00115 --> /main/template/variables/clr_on_var/clr_on
					symbol external misc plug_00116 --> /main/template/variables/clr_fgstatus_var/clr_fgstatus
					symbol external misc plug_00117 --> /main/template/variables/clr_bgstatus_var/clr_bgstatus
					symbol external misc plug_00118 --> /main/template/variables/clr_fg_var/clr_fg
					symbol external misc plug_00119 --> /main/template/variables/clr_bg_var/clr_bg
					symbol external misc plug_00120 --> /main/template/variables/statuswin_current_var/statuswin_current
					local f K_unchecked
					local b K_unchecked
					local window K_unchecked
					code
						inv !if
							inv !and
								inv !and
									val K_unchecked clr_on
									val K_unchecked f
								val K_unchecked b
							code
								inv !if
									inv !eq
										val K_unchecked window
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked clr_fgstatus
											val K_unchecked b
										inv !store
											reference
												val K_unchecked clr_bgstatus
											val K_unchecked f
								inv !if
									inv !eq
										val K_unchecked window
										val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked clr_fgstatus
											val K_unchecked f
										inv !store
											reference
												val K_unchecked clr_bgstatus
											val K_unchecked b
								inv !if
									inv !eq
										val K_unchecked window
										inv !alternative
											val K_unchecked 0
											val K_unchecked 2
									code
										inv !store
											reference
												val K_unchecked clr_fg
											val K_unchecked f
										inv !store
											reference
												val K_unchecked clr_bg
											val K_unchecked b
								inv !ifelse
									val K_unchecked statuswin_current
									code
										inv @set_colour
											val K_unchecked clr_fgstatus
											val K_unchecked clr_bgstatus
									code
										inv @set_colour
											val K_unchecked clr_fg
											val K_unchecked clr_bg
				constant VM_SetWindowColours K_unchecked_function = VM_SetWindowColours_B __assimilated=1
			package VM_RestoreWindowColours_fn _function
				symbol public misc VM_RestoreWindowColours
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_RestoreWindowColours_B _code
					symbol external misc plug_00115 --> /main/template/variables/clr_on_var/clr_on
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc VM_SetWindowColours --> /main/template/functions/VM_SetWindowColours_fn/VM_SetWindowColours
					symbol external misc plug_00118 --> /main/template/variables/clr_fg_var/clr_fg
					symbol external misc plug_00119 --> /main/template/variables/clr_bg_var/clr_bg
					symbol external misc plug_00116 --> /main/template/variables/clr_fgstatus_var/clr_fgstatus
					symbol external misc plug_00117 --> /main/template/variables/clr_bgstatus_var/clr_bgstatus
					symbol external misc VM_ClearScreen --> /main/template/functions/VM_ClearScreen_fn/VM_ClearScreen
					code
						inv !if
							val K_unchecked clr_on
							code
								inv VM_SetWindowColours
									val K_unchecked clr_fg
									val K_unchecked clr_bg
									val K_unchecked 2
								inv VM_SetWindowColours
									val K_unchecked clr_fgstatus
									val K_unchecked clr_bgstatus
									val K_unchecked 1
									val K_unchecked 1
								inv VM_ClearScreen
				constant VM_RestoreWindowColours K_unchecked_function = VM_RestoreWindowColours_B __assimilated=1
			package VM_MainWindow_fn _function
				symbol public misc VM_MainWindow
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_MainWindow_B _code
					symbol external misc plug_00120 --> /main/template/variables/statuswin_current_var/statuswin_current
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00115 --> /main/template/variables/clr_on_var/clr_on
					symbol external misc plug_00117 --> /main/template/variables/clr_bgstatus_var/clr_bgstatus
					symbol external misc plug_00118 --> /main/template/variables/clr_fg_var/clr_fg
					symbol external misc plug_00119 --> /main/template/variables/clr_bg_var/clr_bg
					code
						inv !if
							val K_unchecked statuswin_current
							code
								inv !ifelse
									inv !and
										val K_unchecked clr_on
										inv !gt
											val K_unchecked clr_bgstatus
											val K_unchecked 1
									code
										inv @set_colour
											val K_unchecked clr_fg
											val K_unchecked clr_bg
									code
										inv !styleroman
								inv @set_window
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked statuswin_current
							val K_unchecked 0
				constant VM_MainWindow K_unchecked_function = VM_MainWindow_B __assimilated=1
			package VM_MoveCursorInStatusLine_fn _function
				symbol public misc VM_MoveCursorInStatusLine
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_MoveCursorInStatusLine_B _code
					symbol private misc line
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc column
					symbol external misc plug_00120 --> /main/template/variables/statuswin_current_var/statuswin_current
					symbol external misc plug_00115 --> /main/template/variables/clr_on_var/clr_on
					symbol external misc plug_00117 --> /main/template/variables/clr_bgstatus_var/clr_bgstatus
					symbol external misc plug_00116 --> /main/template/variables/clr_fgstatus_var/clr_fgstatus
					local line K_unchecked
					local column K_unchecked
					code
						inv !if
							inv !not
								val K_unchecked statuswin_current
							code
								inv @set_window
									val K_unchecked 1
								inv !ifelse
									inv !and
										val K_unchecked clr_on
										inv !gt
											val K_unchecked clr_bgstatus
											val K_unchecked 1
									code
										inv @set_colour
											val K_unchecked clr_fgstatus
											val K_unchecked clr_bgstatus
									code
										inv !stylereverse
						inv !if
							inv !eq
								val K_unchecked line
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked line
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked column
									val K_unchecked 1
						inv @set_cursor
							val K_unchecked line
							val K_unchecked column
						inv !store
							reference
								val K_unchecked statuswin_current
							val K_unchecked 1
				constant VM_MoveCursorInStatusLine K_unchecked_function = VM_MoveCursorInStatusLine_B __assimilated=1
			package Z6_MoveCursor_fn _function
				symbol public misc Z6_MoveCursor
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Z6_MoveCursor_B _code
					symbol private misc line
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc column
					symbol private misc charw
					symbol private misc charh
					local line K_unchecked
					local column K_unchecked
					local charw K_unchecked
					local charh K_unchecked
					code
				constant Z6_MoveCursor K_unchecked_function = Z6_MoveCursor_B __assimilated=1
			package VM_StatusLineHeight_fn _function
				symbol public misc VM_StatusLineHeight
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_StatusLineHeight_B _code
					symbol private misc height
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc wx
					symbol private misc wy
					symbol private misc x
					symbol private misc y
					symbol private misc charh
					symbol external misc plug_00114 --> /main/template/variables/statuswin_cursize_var/statuswin_cursize
					local height K_unchecked
					local wx K_unchecked
					local wy K_unchecked
					local x K_unchecked
					local y K_unchecked
					local charh K_unchecked
					code
						inv !if
							inv !ne
								val K_unchecked statuswin_cursize
								val K_unchecked height
							code
								inv @split_window
									val K_unchecked height
						inv !store
							reference
								val K_unchecked statuswin_cursize
							val K_unchecked height
				constant VM_StatusLineHeight K_unchecked_function = VM_StatusLineHeight_B __assimilated=1
			package Z6_DrawStatusLine_fn _function
				symbol public misc Z6_DrawStatusLine
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Z6_DrawStatusLine_B _code
					symbol private misc width
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol private misc charw
					symbol private misc scw
					local width K_unchecked
					local x K_unchecked
					local charw K_unchecked
					local scw K_unchecked
					code
				constant Z6_DrawStatusLine K_unchecked_function = Z6_DrawStatusLine_B __assimilated=1
			package VM_Undo_fn _function
				symbol public misc VM_Undo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Undo_B _code
					symbol private misc result_code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local result_code K_unchecked
					code
						inv @restore_undo
							val K_unchecked result_code
						inv !return
							val K_unchecked result_code
				constant VM_Undo K_unchecked_function = VM_Undo_B __assimilated=1
			package VM_Save_Undo_fn _function
				symbol public misc VM_Save_Undo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VM_Save_Undo_B _code
					symbol private misc result_code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local result_code K_unchecked
					code
						inv @save_undo
							val K_unchecked result_code
						inv !return
							val K_unchecked result_code
				constant VM_Save_Undo K_unchecked_function = VM_Save_Undo_B __assimilated=1
			package QUIT_THE_GAME_R_fn _function
				symbol public misc QUIT_THE_GAME_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package QUIT_THE_GAME_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00123 --> /main/connectors/plug_00123
					symbol external misc YesOrNo --> /main/template/functions/YesOrNo_fn/YesOrNo
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv plug_00123
							val K_unchecked 65
						inv !if
							inv !ne
								inv YesOrNo
								val K_unchecked 0
							code
								inv !quit
				constant QUIT_THE_GAME_R K_unchecked_function = QUIT_THE_GAME_R_B __assimilated=1
			package RESTART_THE_GAME_R_fn _function
				symbol public misc RESTART_THE_GAME_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RESTART_THE_GAME_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00124 --> /main/connectors/plug_00124
					symbol external misc YesOrNo --> /main/template/functions/YesOrNo_fn/YesOrNo
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv plug_00124
							val K_unchecked 65
						inv !if
							inv !ne
								inv YesOrNo
								val K_unchecked 0
							code
								inv @restart
								inv plug_00124
									val K_unchecked 66
								inv !print
									val K_unchecked "\n"
				constant RESTART_THE_GAME_R K_unchecked_function = RESTART_THE_GAME_R_B __assimilated=1
			package RESTORE_THE_GAME_R_fn _function
				symbol public misc RESTORE_THE_GAME_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RESTORE_THE_GAME_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol private label .RMaybe
					symbol external misc plug_00125 --> /main/connectors/plug_00125
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !restore
							lab .RMaybe
						inv plug_00125
							val K_unchecked 65
						inv !print
							val K_unchecked "\n"
						inv !return
							val K_unchecked 1
						.RMaybe
						inv plug_00125
							val K_unchecked 66
						inv !print
							val K_unchecked "\n"
				constant RESTORE_THE_GAME_R K_unchecked_function = RESTORE_THE_GAME_R_B __assimilated=1
			package SAVE_THE_GAME_R_fn _function
				symbol public misc SAVE_THE_GAME_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SAVE_THE_GAME_R_B _code
					symbol private misc flag
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc __assembly_arrow --> /main/veneer/__assembly_arrow
					symbol external misc plug_00126 --> /main/connectors/plug_00126
					symbol external misc plug_00125 --> /main/connectors/plug_00125
					local flag K_unchecked
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv @save
							val K_unchecked __assembly_arrow
							val K_unchecked flag
						inv !switch
							val K_unchecked flag
							code
								inv !case
									val K_unchecked 0
									code
										inv plug_00126
											val K_unchecked 65
										inv !print
											val K_unchecked "\n"
								inv !case
									val K_unchecked 1
									code
										inv plug_00126
											val K_unchecked 66
										inv !print
											val K_unchecked "\n"
								inv !case
									val K_unchecked 2
									code
										inv plug_00125
											val K_unchecked 66
										inv !print
											val K_unchecked "\n"
				constant SAVE_THE_GAME_R K_unchecked_function = SAVE_THE_GAME_R_B __assimilated=1
			package VERIFY_THE_STORY_FILE_R_fn _function
				symbol public misc VERIFY_THE_STORY_FILE_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VERIFY_THE_STORY_FILE_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol private label .Vmaybe
					symbol private label .Vwrong
					symbol external misc plug_00127 --> /main/connectors/plug_00127
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv @verify
							lab .Vmaybe
						inv !jump
							lab .Vwrong
						.Vmaybe
						inv plug_00127
							val K_unchecked 65
						inv !print
							val K_unchecked "\n"
						inv !return
							val K_unchecked 1
						.Vwrong
						inv plug_00127
							val K_unchecked 66
						inv !print
							val K_unchecked "\n"
				constant VERIFY_THE_STORY_FILE_R K_unchecked_function = VERIFY_THE_STORY_FILE_R_B __assimilated=1
			package SWITCH_TRANSCRIPT_ON_R_fn _function
				symbol public misc SWITCH_TRANSCRIPT_ON_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SWITCH_TRANSCRIPT_ON_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00108 --> /main/template/variables/transcript_mode_var/transcript_mode
					symbol external misc plug_00128 --> /main/connectors/plug_00128
					symbol external misc plug_00129 --> /main/connectors/plug_00129
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked transcript_mode
							inv !bitwiseand
								inv !lookup
									val K_unchecked 0
									val K_unchecked 8
								val K_unchecked 1
						inv !if
							val K_unchecked transcript_mode
							code
								inv plug_00128
									val K_unchecked 65
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv @output_stream
							val K_unchecked 2
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookup
										val K_unchecked 0
										val K_unchecked 8
									val K_unchecked 1
								val K_unchecked 0
							code
								inv plug_00128
									val K_unchecked 67
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv plug_00128
							val K_unchecked 66
						inv !print
							val K_unchecked "\n"
						inv plug_00129
						inv !store
							reference
								val K_unchecked transcript_mode
							val K_unchecked 1
				constant SWITCH_TRANSCRIPT_ON_R K_unchecked_function = SWITCH_TRANSCRIPT_ON_R_B __assimilated=1
			package SWITCH_TRANSCRIPT_OFF_R_fn _function
				symbol public misc SWITCH_TRANSCRIPT_OFF_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SWITCH_TRANSCRIPT_OFF_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00108 --> /main/template/variables/transcript_mode_var/transcript_mode
					symbol external misc plug_00130 --> /main/connectors/plug_00130
					symbol external misc plug_00128 --> /main/connectors/plug_00128
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked transcript_mode
							inv !bitwiseand
								inv !lookup
									val K_unchecked 0
									val K_unchecked 8
								val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked transcript_mode
								val K_unchecked 0
							code
								inv plug_00130
									val K_unchecked 65
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv plug_00130
							val K_unchecked 66
						inv !print
							val K_unchecked "\n"
						inv @output_stream
							val K_unchecked -2
						inv !if
							inv !bitwiseand
								inv !lookup
									val K_unchecked 0
									val K_unchecked 8
								val K_unchecked 1
							code
								inv plug_00128
									val K_unchecked 67
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked transcript_mode
							val K_unchecked 0
				constant SWITCH_TRANSCRIPT_OFF_R K_unchecked_function = SWITCH_TRANSCRIPT_OFF_R_B __assimilated=1
			package ANNOUNCE_STORY_FILE_VERSION_R_fn _function
				symbol public misc ANNOUNCE_STORY_FILE_VERSION_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ANNOUNCE_STORY_FILE_VERSION_R_B _code
					symbol private misc ix
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc Banner --> /main/template/functions/Banner_fn/Banner
					symbol external misc plug_00133 --> /main/connectors/plug_00133
					symbol external misc plug_00107 --> /main/template/variables/standard_interpreter_var/standard_interpreter
					symbol external misc HDR_TERPNUMBER --> /main/template/constants/HDR_TERPNUMBER_con/HDR_TERPNUMBER
					symbol external misc HDR_TERPVERSION --> /main/template/constants/HDR_TERPVERSION_con/HDR_TERPVERSION
					symbol external misc LibSerial --> /main/template/constants/LibSerial_con/LibSerial
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					local ix K_unchecked
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv Banner
						inv !print
							val K_unchecked "Identification number: "
						inv !for
							inv !store
								reference
									val K_unchecked ix
								val K_unchecked 6
							inv !le
								val K_unchecked ix
								inv !lookupbyte
									val K_unchecked plug_00133
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked ix
							code
								inv !printchar
									inv !lookupbyte
										val K_unchecked plug_00133
										val K_unchecked ix
						inv !print
							val K_unchecked "\n"
						inv !store
							reference
								val K_unchecked ix
							val K_unchecked 0
						inv !ifelse
							inv !gt
								val K_unchecked standard_interpreter
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "Standard interpreter "
								inv !printnumber
									inv !divide
										val K_unchecked standard_interpreter
										val K_unchecked 256
								inv !print
									val K_unchecked "."
								inv !printnumber
									inv !modulo
										val K_unchecked standard_interpreter
										val K_unchecked 256
								inv !print
									val K_unchecked " ("
								inv !printnumber
									inv !lookupbyte
										val K_unchecked HDR_TERPNUMBER
										val K_unchecked 0
								inv !printchar
									inv !lookupbyte
										val K_unchecked HDR_TERPVERSION
										val K_unchecked 0
								inv !print
									val K_unchecked ") / "
							code
								inv !print
									val K_unchecked "Interpreter "
								inv !printnumber
									inv !lookupbyte
										val K_unchecked HDR_TERPNUMBER
										val K_unchecked 0
								inv !print
									val K_unchecked " Version "
								inv !printchar
									inv !lookupbyte
										val K_unchecked HDR_TERPVERSION
										val K_unchecked 0
								inv !print
									val K_unchecked " / "
						inv !print
							val K_unchecked "Library serial number "
						inv !printstring
							val K_unchecked LibSerial
						inv !print
							val K_unchecked "\n"
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
				constant ANNOUNCE_STORY_FILE_VERSION_R K_unchecked_function = ANNOUNCE_STORY_FILE_VERSION_R_B __assimilated=1
			package DESCEND_TO_SPECIFIC_ACTION_R_fn _function
				symbol public misc DESCEND_TO_SPECIFIC_ACTION_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DESCEND_TO_SPECIFIC_ACTION_R_B _code
					symbol external misc indirect --> /main/veneer/indirect
					symbol external misc #actions_table --> /main/veneer/#actions_table
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					code
						inv indirect
							inv !lookup
								val K_unchecked #actions_table
								val K_unchecked action
						inv !return
							val K_unchecked 1
				constant DESCEND_TO_SPECIFIC_ACTION_R K_unchecked_function = DESCEND_TO_SPECIFIC_ACTION_R_B __assimilated=1
			package OC__Cl_fn _function
				symbol public misc OC__Cl
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package OC__Cl_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc cla
					symbol private misc j
					symbol private misc a
					symbol private misc n
					symbol private misc objflag
					symbol private label .NotObj
					symbol external misc plug_00136 --> /main/template/variables/max_z_object_var/max_z_object
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc __assembly_negated_label --> /main/veneer/__assembly_negated_label
					symbol private label .NotRoom
					symbol external misc mark_as_room --> /main/template/properties/mark_as_room_prop/mark_as_room
					symbol external misc __assembly_rtrue_label --> /main/veneer/__assembly_rtrue_label
					symbol external misc plug_00138 --> /main/connectors/plug_00138
					symbol external misc mark_as_thing --> /main/template/properties/mark_as_thing_prop/mark_as_thing
					symbol external misc Object --> /main/veneer/Object
					symbol external misc Class --> /main/veneer/Class
					symbol private label .ObjOrClass
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc String --> /main/veneer/String
					symbol private label .RoutOrStr
					symbol private label .Mistake
					symbol external misc __assembly_rfalse_label --> /main/veneer/__assembly_rfalse_label
					symbol external misc __assembly_arrow --> /main/veneer/__assembly_arrow
					symbol private label .Loop
					symbol external misc __assembly_sp --> /main/veneer/__assembly_sp
					symbol private label .JustObj
					symbol external misc __assembly_negated_rtrue_label --> /main/veneer/__assembly_negated_rtrue_label
					symbol external misc __assembly_negated_rfalse_label --> /main/veneer/__assembly_negated_rfalse_label
					symbol external misc Z__Region --> /main/veneer/Z__Region
					symbol external misc RT__Err --> /main/veneer/RT__Err
					local obj K_unchecked
					local cla K_unchecked
					local j K_unchecked
					local a K_unchecked
					local n K_unchecked
					local objflag K_unchecked
					code
						inv @jl
							val K_unchecked obj
							val K_unchecked 1
							lab .NotObj
						inv @jg
							val K_unchecked obj
							val K_unchecked max_z_object
							lab .NotObj
						inv @inc
							val K_unchecked objflag
						inv @je
							val K_unchecked cla
							val K_unchecked plug_00137
							val K_unchecked __assembly_negated_label
							lab .NotRoom
						inv @test_attr
							val K_unchecked obj
							val K_unchecked mark_as_room
							val K_unchecked __assembly_rtrue_label
						inv @rfalse
						.NotRoom
						inv @je
							val K_unchecked cla
							val K_unchecked plug_00138
							val K_unchecked __assembly_negated_label
							lab .NotObj
						inv @test_attr
							val K_unchecked obj
							val K_unchecked mark_as_thing
							val K_unchecked __assembly_rtrue_label
						inv @rfalse
						.NotObj
						inv @je
							val K_unchecked cla
							val K_unchecked Object
							val K_unchecked Class
							lab .ObjOrClass
						inv @je
							val K_unchecked cla
							val K_unchecked Routine
							val K_unchecked String
							lab .RoutOrStr
						inv @jin
							val K_unchecked cla
							val K_unchecked 1
							val K_unchecked __assembly_negated_label
							lab .Mistake
						inv @jz
							val K_unchecked objflag
							val K_unchecked __assembly_rfalse_label
						inv @get_prop_addr
							val K_unchecked obj
							val K_unchecked 2
							val K_unchecked __assembly_arrow
							val K_unchecked a
						inv @jz
							val K_unchecked a
							val K_unchecked __assembly_rfalse_label
						inv @get_prop_len
							val K_unchecked a
							val K_unchecked __assembly_arrow
							val K_unchecked n
						inv @div
							val K_unchecked n
							val K_unchecked 2
							val K_unchecked __assembly_arrow
							val K_unchecked n
						.Loop
						inv @loadw
							val K_unchecked a
							val K_unchecked j
							val K_unchecked __assembly_arrow
							val K_unchecked __assembly_sp
						inv @je
							val K_unchecked __assembly_sp
							val K_unchecked cla
							val K_unchecked __assembly_rtrue_label
						inv @inc
							val K_unchecked j
						inv @jl
							val K_unchecked j
							val K_unchecked n
							lab .Loop
						inv @rfalse
						.ObjOrClass
						inv @jz
							val K_unchecked objflag
							val K_unchecked __assembly_rfalse_label
						inv @je
							val K_unchecked cla
							val K_unchecked Object
							lab .JustObj
						inv @jg
							val K_unchecked obj
							val K_unchecked String
							val K_unchecked __assembly_negated_rtrue_label
						inv @jin
							val K_unchecked obj
							val K_unchecked Class
							val K_unchecked __assembly_rtrue_label
						inv @rfalse
						.JustObj
						inv @jg
							val K_unchecked obj
							val K_unchecked String
							val K_unchecked __assembly_negated_rfalse_label
						inv @jin
							val K_unchecked obj
							val K_unchecked Class
							val K_unchecked __assembly_rfalse_label
						inv @rtrue
						.RoutOrStr
						inv @jz
							val K_unchecked objflag
							val K_unchecked __assembly_negated_rfalse_label
						inv @call_2s
							val K_unchecked Z__Region
							val K_unchecked obj
							val K_unchecked __assembly_arrow
							val K_unchecked __assembly_sp
						inv @inc
							val K_unchecked __assembly_sp
						inv @je
							val K_unchecked __assembly_sp
							val K_unchecked cla
							val K_unchecked __assembly_rtrue_label
						inv @rfalse
						.Mistake
						inv RT__Err
							val K_unchecked "apply 'ofclass' for"
							val K_unchecked cla
							inv !unaryminus
								val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant OC__Cl K_unchecked_function = OC__Cl_B __assimilated=1
			package Unsigned__Compare_fn _function
				symbol public misc Unsigned__Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Unsigned__Compare_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol private misc u
					symbol private misc v
					symbol external misc __assembly_rfalse_label --> /main/veneer/__assembly_rfalse_label
					symbol private label .XNegative
					symbol private label .XPosYNeg
					symbol external misc __assembly_rtrue_label --> /main/veneer/__assembly_rtrue_label
					symbol external misc __assembly_negated_rtrue_label --> /main/veneer/__assembly_negated_rtrue_label
					local x K_unchecked
					local y K_unchecked
					local u K_unchecked
					local v K_unchecked
					code
						inv @je
							val K_unchecked x
							val K_unchecked y
							val K_unchecked __assembly_rfalse_label
						inv @jl
							val K_unchecked x
							val K_unchecked 0
							lab .XNegative
						inv @jl
							val K_unchecked y
							val K_unchecked 0
							lab .XPosYNeg
						inv @jg
							val K_unchecked x
							val K_unchecked y
							val K_unchecked __assembly_rtrue_label
						inv @ret
							val K_unchecked -1
						.XPosYNeg
						inv @ret
							val K_unchecked -1
						.XNegative
						inv @jl
							val K_unchecked y
							val K_unchecked 0
							val K_unchecked __assembly_negated_rtrue_label
						inv @jg
							val K_unchecked x
							val K_unchecked y
							val K_unchecked __assembly_rtrue_label
						inv @ret
							val K_unchecked -1
				constant Unsigned__Compare K_unchecked_function = Unsigned__Compare_B __assimilated=1
			package RT__ChLDW_fn _function
				symbol public misc RT__ChLDW
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RT__ChLDW_B _code
					symbol private misc base
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc offset
					symbol external misc __assembly_arrow --> /main/veneer/__assembly_arrow
					symbol external misc __assembly_sp --> /main/veneer/__assembly_sp
					local base K_unchecked
					local offset K_unchecked
					code
						inv @loadw
							val K_unchecked base
							val K_unchecked offset
							val K_unchecked __assembly_arrow
							val K_unchecked __assembly_sp
						inv @ret
							val K_unchecked __assembly_sp
				constant RT__ChLDW K_unchecked_function = RT__ChLDW_B __assimilated=1
			package LanguageNumber_fn _function
				symbol public misc LanguageNumber
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageNumber_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc f
					symbol external misc LanguageNumber --> /main/template/functions/LanguageNumber_fn/LanguageNumber
					local n K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked n
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "zero"
								inv !return
									val K_unchecked 0
						inv !if
							inv !lt
								val K_unchecked n
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "minus "
								inv !store
									reference
										val K_unchecked n
									inv !unaryminus
										val K_unchecked n
						inv !if
							inv !ge
								val K_unchecked n
								val K_unchecked 1000
							code
								inv !if
									inv !eq
										val K_unchecked f
										val K_unchecked 1
									code
										inv !print
											val K_unchecked ", "
								inv LanguageNumber
									inv !divide
										val K_unchecked n
										val K_unchecked 1000
								inv !print
									val K_unchecked " thousand"
								inv !store
									reference
										val K_unchecked n
									inv !modulo
										val K_unchecked n
										val K_unchecked 1000
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 1
						inv !if
							inv !ge
								val K_unchecked n
								val K_unchecked 100
							code
								inv !if
									inv !eq
										val K_unchecked f
										val K_unchecked 1
									code
										inv !print
											val K_unchecked ", "
								inv LanguageNumber
									inv !divide
										val K_unchecked n
										val K_unchecked 100
								inv !print
									val K_unchecked " hundred"
								inv !store
									reference
										val K_unchecked n
									inv !modulo
										val K_unchecked n
										val K_unchecked 100
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked n
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked f
								val K_unchecked 1
							code
								inv !print
									val K_unchecked " and "
						inv !ifelse
							inv !and
								inv !ge
									val K_unchecked n
									val K_unchecked 20
								inv !lt
									val K_unchecked n
									val K_unchecked 100
							code
								inv !switch
									inv !divide
										val K_unchecked n
										val K_unchecked 10
									code
										inv !case
											val K_unchecked 2
											code
												inv !print
													val K_unchecked "twenty"
										inv !case
											val K_unchecked 3
											code
												inv !print
													val K_unchecked "thirty"
										inv !case
											val K_unchecked 4
											code
												inv !print
													val K_unchecked "forty"
										inv !case
											val K_unchecked 5
											code
												inv !print
													val K_unchecked "fifty"
										inv !case
											val K_unchecked 6
											code
												inv !print
													val K_unchecked "sixty"
										inv !case
											val K_unchecked 7
											code
												inv !print
													val K_unchecked "seventy"
										inv !case
											val K_unchecked 8
											code
												inv !print
													val K_unchecked "eighty"
										inv !case
											val K_unchecked 9
											code
												inv !print
													val K_unchecked "ninety"
								inv !if
									inv !ne
										inv !modulo
											val K_unchecked n
											val K_unchecked 10
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "-"
										inv LanguageNumber
											inv !modulo
												val K_unchecked n
												val K_unchecked 10
							code
								inv !switch
									val K_unchecked n
									code
										inv !case
											val K_unchecked 1
											code
												inv !print
													val K_unchecked "one"
										inv !case
											val K_unchecked 2
											code
												inv !print
													val K_unchecked "two"
										inv !case
											val K_unchecked 3
											code
												inv !print
													val K_unchecked "three"
										inv !case
											val K_unchecked 4
											code
												inv !print
													val K_unchecked "four"
										inv !case
											val K_unchecked 5
											code
												inv !print
													val K_unchecked "five"
										inv !case
											val K_unchecked 6
											code
												inv !print
													val K_unchecked "six"
										inv !case
											val K_unchecked 7
											code
												inv !print
													val K_unchecked "seven"
										inv !case
											val K_unchecked 8
											code
												inv !print
													val K_unchecked "eight"
										inv !case
											val K_unchecked 9
											code
												inv !print
													val K_unchecked "nine"
										inv !case
											val K_unchecked 10
											code
												inv !print
													val K_unchecked "ten"
										inv !case
											val K_unchecked 11
											code
												inv !print
													val K_unchecked "eleven"
										inv !case
											val K_unchecked 12
											code
												inv !print
													val K_unchecked "twelve"
										inv !case
											val K_unchecked 13
											code
												inv !print
													val K_unchecked "thirteen"
										inv !case
											val K_unchecked 14
											code
												inv !print
													val K_unchecked "fourteen"
										inv !case
											val K_unchecked 15
											code
												inv !print
													val K_unchecked "fifteen"
										inv !case
											val K_unchecked 16
											code
												inv !print
													val K_unchecked "sixteen"
										inv !case
											val K_unchecked 17
											code
												inv !print
													val K_unchecked "seventeen"
										inv !case
											val K_unchecked 18
											code
												inv !print
													val K_unchecked "eighteen"
										inv !case
											val K_unchecked 19
											code
												inv !print
													val K_unchecked "nineteen"
				constant LanguageNumber K_unchecked_function = LanguageNumber_B __assimilated=1
			package LanguageTimeOfDay_fn _function
				symbol public misc LanguageTimeOfDay
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageTimeOfDay_B _code
					symbol private misc hours
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc mins
					symbol private misc i
					local hours K_unchecked
					local mins K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							inv !modulo
								val K_unchecked hours
								val K_unchecked 12
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked i
									val K_unchecked 12
						inv !if
							inv !lt
								val K_unchecked i
								val K_unchecked 10
							code
								inv !print
									val K_unchecked " "
						inv !printnumber
							val K_unchecked i
						inv !print
							val K_unchecked ":"
						inv !printnumber
							inv !divide
								val K_unchecked mins
								val K_unchecked 10
						inv !printnumber
							inv !modulo
								val K_unchecked mins
								val K_unchecked 10
						inv !ifelse
							inv !gt
								inv !divide
									val K_unchecked hours
									val K_unchecked 12
								val K_unchecked 0
							code
								inv !print
									val K_unchecked " pm"
							code
								inv !print
									val K_unchecked " am"
				constant LanguageTimeOfDay K_unchecked_function = LanguageTimeOfDay_B __assimilated=1
			package LanguageDirection_fn _function
				symbol public misc LanguageDirection
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageDirection_B _code
					symbol private misc d
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local d K_unchecked
					code
						inv !printname
							val K_unchecked d
				constant LanguageDirection K_unchecked_function = LanguageDirection_B __assimilated=1
			package LanguageToInformese_fn _function
				symbol public misc LanguageToInformese
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageToInformese_B _code
					code
				constant LanguageToInformese K_unchecked_function = LanguageToInformese_B __assimilated=1
			package LanguageContraction_fn _function
				symbol public misc LanguageContraction
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageContraction_B _code
					symbol private misc text
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local text K_unchecked
					code
						inv !if
							inv !eq
								inv !lookupbyte
									val K_unchecked text
									val K_unchecked 0
								inv !alternative
									inv !alternative
										inv !alternative
											inv !alternative
												inv !alternative
													inv !alternative
														inv !alternative
															inv !alternative
																inv !alternative
																	val K_unchecked 97
																	val K_unchecked 101
																val K_unchecked 105
															val K_unchecked 111
														val K_unchecked 117
													val K_unchecked 65
												val K_unchecked 69
											val K_unchecked 73
										val K_unchecked 79
									val K_unchecked 85
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant LanguageContraction K_unchecked_function = LanguageContraction_B __assimilated=1
			package LanguageVerb_fn _function
				symbol public misc LanguageVerb
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageVerb_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local i K_unchecked
					code
						inv !switch
							val K_unchecked i
							code
								inv !case
									inv !alternativecase
										inv !alternativecase
											val K_unchecked dw'i//'
											val K_unchecked dw'inv'
										val K_unchecked dw'inventory'
									code
										inv !print
											val K_unchecked "take inventory"
								inv !case
									val K_unchecked dw'l//'
									code
										inv !print
											val K_unchecked "look"
								inv !case
									val K_unchecked dw'x//'
									code
										inv !print
											val K_unchecked "examine"
								inv !case
									val K_unchecked dw'z//'
									code
										inv !print
											val K_unchecked "wait"
								inv !default
									code
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant LanguageVerb K_unchecked_function = LanguageVerb_B __assimilated=1
			package LanguageVerbLikesAdverb_fn _function
				symbol public misc LanguageVerbLikesAdverb
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageVerbLikesAdverb_B _code
					symbol private misc w
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local w K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked w
								inv !alternative
									inv !alternative
										inv !alternative
											val K_unchecked dw'look'
											val K_unchecked dw'go'
										val K_unchecked dw'push'
									val K_unchecked dw'walk'
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant LanguageVerbLikesAdverb K_unchecked_function = LanguageVerbLikesAdverb_B __assimilated=1
			package LanguageVerbMayBeName_fn _function
				symbol public misc LanguageVerbMayBeName
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LanguageVerbMayBeName_B _code
					symbol private misc w
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local w K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked w
								inv !alternative
									inv !alternative
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked dw'long'
													val K_unchecked dw'short'
												val K_unchecked dw'normal'
											val K_unchecked dw'brief'
										val K_unchecked dw'full'
									val K_unchecked dw'verbose'
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant LanguageVerbMayBeName K_unchecked_function = LanguageVerbMayBeName_B __assimilated=1
			package OffersLight_fn _function
				symbol public misc OffersLight
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package OffersLight_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc j
					symbol external misc light --> /main/template/properties/light_prop/light
					symbol external misc plug_00141 --> /main/connectors/plug_00141
					symbol external misc HasLightSource --> /main/template/functions/HasLightSource_fn/HasLightSource
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc transparent --> /main/template/properties/transparent_prop/transparent
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc parent --> /main/veneer/parent
					local obj K_unchecked
					local j K_unchecked
					code
						inv !while
							val K_unchecked obj
							code
								inv !if
									inv !has
										val K_unchecked obj
										val K_unchecked light
									code
										inv !return
											val K_unchecked 1
								inv !objectloop
									reference
										val K_unchecked j
									val K_unchecked plug_00141
									inv !in
										val K_unchecked j
										val K_unchecked obj
									code
										inv !if
											inv HasLightSource
												val K_unchecked j
											code
												inv !return
													val K_unchecked 1
								inv !if
									inv !and
										inv !and
											inv !has
												val K_unchecked obj
												val K_unchecked container
											inv !hasnt
												val K_unchecked obj
												val K_unchecked open
										inv !hasnt
											val K_unchecked obj
											val K_unchecked transparent
									code
										inv !return
											val K_unchecked 0
								inv !ifelse
									inv !and
										inv !provides
											val K_unchecked obj
											val K_unchecked component_parent
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked component_parent
									code
										inv !store
											reference
												val K_unchecked obj
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_parent
									code
										inv !store
											reference
												val K_unchecked obj
											inv parent
												val K_unchecked obj
						inv !return
							val K_unchecked 0
				constant OffersLight K_unchecked_function = OffersLight_B __assimilated=1
			package HasLightSource_fn _function
				symbol public misc HasLightSource
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HasLightSource_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc j
					symbol private misc ad
					symbol private misc sr
					symbol private misc po
					symbol external misc light --> /main/template/properties/light_prop/light
					symbol external misc IsSeeThrough --> /main/template/functions/IsSeeThrough_fn/IsSeeThrough
					symbol external misc HidesLightSource --> /main/template/functions/HidesLightSource_fn/HidesLightSource
					symbol external misc plug_00142 --> /main/connectors/plug_00142
					symbol external misc HasLightSource --> /main/template/functions/HasLightSource_fn/HasLightSource
					symbol external misc add_to_scope --> /main/template/properties/add_to_scope_prop/add_to_scope
					symbol external misc parent --> /main/veneer/parent
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc plug_00143 --> /main/template/variables/ats_hls_var/ats_hls
					symbol external misc plug_00144 --> /main/template/variables/ats_flag_var/ats_flag
					symbol external misc plug_00145 --> /main/template/variables/scope_reason_var/scope_reason
					symbol external misc plug_00146 --> /main/template/variables/parser_one_var/parser_one
					symbol external misc LOOPOVERSCOPE_REASON --> /main/template/constants/LOOPOVERSCOPE_REASON_con/LOOPOVERSCOPE_REASON
					symbol external misc RunRoutines --> /main/template/functions/RunRoutines_fn/RunRoutines
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc ComponentHasLight --> /main/template/functions/ComponentHasLight_fn/ComponentHasLight
					local i K_unchecked
					local j K_unchecked
					local ad K_unchecked
					local sr K_unchecked
					local po K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !has
								val K_unchecked i
								val K_unchecked light
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv IsSeeThrough
									val K_unchecked i
								inv !not
									inv HidesLightSource
										val K_unchecked i
							code
								inv !objectloop
									reference
										val K_unchecked j
									val K_unchecked plug_00142
									inv !in
										val K_unchecked j
										val K_unchecked i
									code
										inv !if
											inv HasLightSource
												val K_unchecked j
											code
												inv !return
													val K_unchecked 1
						inv !store
							reference
								val K_unchecked ad
							inv !propertyaddress
								val K_unchecked i
								val K_unchecked add_to_scope
						inv !if
							inv !and
								inv !ne
									inv parent
										val K_unchecked i
									val K_unchecked 0
								inv !ne
									val K_unchecked ad
									val K_unchecked 0
							code
								inv !ifelse
									inv !eq
										inv metaclass
											inv !lookup
												val K_unchecked ad
												val K_unchecked 0
										val K_unchecked Routine
									code
										inv !store
											reference
												val K_unchecked ats_hls
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked ats_flag
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked sr
											val K_unchecked scope_reason
										inv !store
											reference
												val K_unchecked po
											val K_unchecked parser_one
										inv !store
											reference
												val K_unchecked scope_reason
											val K_unchecked LOOPOVERSCOPE_REASON
										inv !store
											reference
												val K_unchecked parser_one
											val K_unchecked 0
										inv RunRoutines
											val K_unchecked i
											val K_unchecked add_to_scope
										inv !store
											reference
												val K_unchecked scope_reason
											val K_unchecked sr
										inv !store
											reference
												val K_unchecked parser_one
											val K_unchecked po
										inv !store
											reference
												val K_unchecked ats_flag
											val K_unchecked 0
										inv !if
											inv !eq
												val K_unchecked ats_hls
												val K_unchecked 1
											code
												inv !return
													val K_unchecked 1
									code
										inv !for
											inv !store
												reference
													val K_unchecked j
												val K_unchecked 0
											inv !lt
												inv !times
													val K_unchecked plug_00139
													val K_unchecked j
												inv !propertylength
													val K_unchecked i
													val K_unchecked add_to_scope
											inv !postincrement
												reference
													val K_unchecked j
											code
												inv !if
													inv !and
														inv !lookup
															val K_unchecked ad
															val K_unchecked j
														inv !eq
															inv HasLightSource
																inv !lookup
																	val K_unchecked ad
																	val K_unchecked j
															val K_unchecked 1
													code
														inv !return
															val K_unchecked 1
						inv !if
							inv ComponentHasLight
								val K_unchecked i
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant HasLightSource K_unchecked_function = HasLightSource_B __assimilated=1
			package ComponentHasLight_fn _function
				symbol public misc ComponentHasLight
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ComponentHasLight_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj
					symbol private misc next_obj
					symbol external misc component_child --> /main/template/properties/component_child_prop/component_child
					symbol external misc component_sibling --> /main/template/properties/component_sibling_prop/component_sibling
					symbol external misc light --> /main/template/properties/light_prop/light
					symbol external misc HasLightSource --> /main/template/functions/HasLightSource_fn/HasLightSource
					symbol external misc ComponentHasLight --> /main/template/functions/ComponentHasLight_fn/ComponentHasLight
					local o K_unchecked
					local obj K_unchecked
					local next_obj K_unchecked
					code
						inv !if
							inv !provides
								val K_unchecked o
								val K_unchecked component_child
							code
								inv !store
									reference
										val K_unchecked obj
									inv !propertyvalue
										val K_unchecked o
										val K_unchecked component_child
								inv !while
									val K_unchecked obj
									code
										inv !store
											reference
												val K_unchecked next_obj
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_sibling
										inv !if
											inv !has
												val K_unchecked obj
												val K_unchecked light
											code
												inv !return
													val K_unchecked 1
										inv !if
											inv HasLightSource
												val K_unchecked obj
											code
												inv !return
													val K_unchecked 1
										inv !if
											inv !and
												inv !provides
													val K_unchecked obj
													val K_unchecked component_child
												inv ComponentHasLight
													val K_unchecked obj
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked obj
											val K_unchecked next_obj
						inv !return
							val K_unchecked 0
				constant ComponentHasLight K_unchecked_function = ComponentHasLight_B __assimilated=1
			package HidesLightSource_fn _function
				symbol public misc HidesLightSource
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HidesLightSource_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc transparent --> /main/template/properties/transparent_prop/transparent
					symbol external misc supporter --> /main/template/properties/supporter_prop/supporter
					symbol external misc animate --> /main/template/properties/animate_prop/animate
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc enterable --> /main/template/properties/enterable_prop/enterable
					local obj K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !has
								val K_unchecked obj
								inv !alternative
									val K_unchecked transparent
									val K_unchecked supporter
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked animate
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked container
							code
								inv !return
									inv !hasnt
										val K_unchecked obj
										val K_unchecked open
						inv !return
							inv !hasnt
								val K_unchecked obj
								val K_unchecked enterable
				constant HidesLightSource K_unchecked_function = HidesLightSource_B __assimilated=1
			package ADJUST_LIGHT_R_fn _function
				symbol public misc ADJUST_LIGHT_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ADJUST_LIGHT_R_B _code
					symbol private misc previous_light_condition
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00147 --> /main/template/variables/lightflag_var/lightflag
					symbol external misc OffersLight --> /main/template/functions/OffersLight_fn/OffersLight
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc PRINTING_NEWS_OF_LIGHT_ACT --> /main/template/constants/PRINTING_NEWS_OF_LIGHT_ACT_con/PRINTING_NEWS_OF_LIGHT_ACT
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc PRINTING_NEWS_OF_DARKNESS_ACT --> /main/template/constants/PRINTING_NEWS_OF_DARKNESS_ACT_con/PRINTING_NEWS_OF_DARKNESS_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc plug_00150 --> /main/connectors/plug_00150
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					local previous_light_condition K_unchecked
					code
						inv !store
							reference
								val K_unchecked previous_light_condition
							val K_unchecked lightflag
						inv !store
							reference
								val K_unchecked lightflag
							inv OffersLight
								inv parent
									val K_unchecked player
						inv !if
							inv !and
								inv !eq
									val K_unchecked previous_light_condition
									val K_unchecked 0
								inv !eq
									val K_unchecked lightflag
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked location
									val K_unchecked thedark
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !eq
									val K_unchecked previous_light_condition
									val K_unchecked 0
								inv !eq
									val K_unchecked lightflag
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked location
									val K_unchecked real_location
								inv CarryOutActivity
									val K_unchecked PRINTING_NEWS_OF_LIGHT_ACT
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !eq
									val K_unchecked previous_light_condition
									val K_unchecked 1
								inv !eq
									val K_unchecked lightflag
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked location
									val K_unchecked thedark
								inv DivideParagraphPoint
								inv BeginActivity
									val K_unchecked PRINTING_NEWS_OF_DARKNESS_ACT
								inv !if
									inv !eq
										inv ForActivity
											val K_unchecked PRINTING_NEWS_OF_DARKNESS_ACT
										val K_unchecked 0
									code
										inv plug_00150
											val K_unchecked 65
										inv !print
											val K_unchecked "\n"
								inv EndActivity
									val K_unchecked PRINTING_NEWS_OF_DARKNESS_ACT
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !eq
									val K_unchecked previous_light_condition
									val K_unchecked 1
								inv !eq
									val K_unchecked lightflag
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked location
									val K_unchecked real_location
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 0
				constant ADJUST_LIGHT_R K_unchecked_function = ADJUST_LIGHT_R_B __assimilated=1
			package SilentlyConsiderLight_fn _function
				symbol public misc SilentlyConsiderLight
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SilentlyConsiderLight_B _code
					symbol external misc plug_00147 --> /main/template/variables/lightflag_var/lightflag
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc OffersLight --> /main/template/functions/OffersLight_fn/OffersLight
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					code
						inv !store
							reference
								val K_unchecked lightflag
							inv OffersLight
								inv parent
									val K_unchecked player
						inv !ifelse
							val K_unchecked lightflag
							code
								inv !store
									reference
										val K_unchecked location
									val K_unchecked real_location
							code
								inv !store
									reference
										val K_unchecked location
									val K_unchecked thedark
						inv !return
							val K_unchecked 0
				constant SilentlyConsiderLight K_unchecked_function = SilentlyConsiderLight_B __assimilated=1
			package IsSeeThrough_fn _function
				symbol public misc IsSeeThrough
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IsSeeThrough_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc supporter --> /main/template/properties/supporter_prop/supporter
					symbol external misc transparent --> /main/template/properties/transparent_prop/transparent
					symbol external misc animate --> /main/template/properties/animate_prop/animate
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					local obj K_unchecked
					code
						inv !if
							inv !or
								inv !or
									inv !or
										inv !has
											val K_unchecked obj
											val K_unchecked supporter
										inv !has
											val K_unchecked obj
											val K_unchecked transparent
									inv !has
										val K_unchecked obj
										val K_unchecked animate
								inv !and
									inv !has
										val K_unchecked obj
										val K_unchecked container
									inv !has
										val K_unchecked obj
										val K_unchecked open
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant IsSeeThrough K_unchecked_function = IsSeeThrough_B __assimilated=1
			package VisibilityParent_fn _function
				symbol public misc VisibilityParent
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VisibilityParent_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc transparent --> /main/template/properties/transparent_prop/transparent
					symbol external misc CoreOfParentOfCoreOf --> /main/template/functions/CoreOfParentOfCoreOf_fn/CoreOfParentOfCoreOf
					local o K_unchecked
					code
						inv !if
							inv !and
								inv !and
									inv !and
										val K_unchecked o
										inv !has
											val K_unchecked o
											val K_unchecked container
									inv !hasnt
										val K_unchecked o
										val K_unchecked open
								inv !hasnt
									val K_unchecked o
									val K_unchecked transparent
							code
								inv !return
									val K_unchecked 0
						inv !if
							val K_unchecked o
							code
								inv !store
									reference
										val K_unchecked o
									inv CoreOfParentOfCoreOf
										val K_unchecked o
						inv !return
							val K_unchecked o
				constant VisibilityParent K_unchecked_function = VisibilityParent_B __assimilated=1
			package FindVisibilityLevels_fn _function
				symbol public misc FindVisibilityLevels
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FindVisibilityLevels_B _code
					symbol private misc lc
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc up
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					symbol external misc plug_00151 --> /main/template/variables/visibility_ceiling_var/visibility_ceiling
					symbol external misc plug_00152 --> /main/template/variables/visibility_levels_var/visibility_levels
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc VisibilityParent --> /main/template/functions/VisibilityParent_fn/VisibilityParent
					local lc K_unchecked
					local up K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked location
								val K_unchecked thedark
							code
								inv !store
									reference
										val K_unchecked visibility_ceiling
									val K_unchecked thedark
								inv !store
									reference
										val K_unchecked visibility_levels
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked visibility_ceiling
									val K_unchecked player
								inv !while
									val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked up
											inv VisibilityParent
												val K_unchecked visibility_ceiling
										inv !if
											inv !eq
												val K_unchecked up
												val K_unchecked 0
											code
												inv !break
										inv !store
											reference
												val K_unchecked visibility_ceiling
											val K_unchecked up
										inv !postincrement
											reference
												val K_unchecked lc
								inv !store
									reference
										val K_unchecked visibility_levels
									val K_unchecked lc
				constant FindVisibilityLevels K_unchecked_function = FindVisibilityLevels_B __assimilated=1
			package TouchabilityCeiling_fn _function
				symbol public misc TouchabilityCeiling
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TouchabilityCeiling_B _code
					symbol private misc original
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol private misc p
					symbol external misc CoreOfParentOfCoreOf --> /main/template/functions/CoreOfParentOfCoreOf_fn/CoreOfParentOfCoreOf
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc REACHING_OUTSIDE_RB --> /main/template/constants/REACHING_OUTSIDE_RB_con/REACHING_OUTSIDE_RB
					symbol external misc RulebookFailed --> /main/template/functions/RulebookFailed_fn/RulebookFailed
					local original K_unchecked
					local o K_unchecked
					local p K_unchecked
					code
						inv !store
							reference
								val K_unchecked o
							val K_unchecked original
						inv !while
							val K_unchecked o
							code
								inv !store
									reference
										val K_unchecked p
									inv CoreOfParentOfCoreOf
										val K_unchecked o
								inv !if
									inv !ofclass
										val K_unchecked p
										val K_unchecked plug_00137
									code
										inv !return
											val K_unchecked p
								inv !if
									inv !eq
										val K_unchecked p
										val K_unchecked 0
									code
										inv !return
											val K_unchecked o
								inv !if
									inv !and
										inv FollowRulebook
											val K_unchecked REACHING_OUTSIDE_RB
											val K_unchecked p
										inv RulebookFailed
									code
										inv !return
											val K_unchecked p
								inv !store
									reference
										val K_unchecked o
									val K_unchecked p
						inv !return
							val K_unchecked o
				constant TouchabilityCeiling K_unchecked_function = TouchabilityCeiling_B __assimilated=1
			package ScopeCeiling_fn _function
				symbol public misc ScopeCeiling
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScopeCeiling_B _code
					symbol private misc pos
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc c
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					symbol external misc parent --> /main/veneer/parent
					symbol external misc VisibilityParent --> /main/template/functions/VisibilityParent_fn/VisibilityParent
					local pos K_unchecked
					local c K_unchecked
					code
						inv !if
							inv !and
								inv !eq
									val K_unchecked pos
									val K_unchecked player
								inv !eq
									val K_unchecked location
									val K_unchecked thedark
							code
								inv !return
									val K_unchecked thedark
						inv !store
							reference
								val K_unchecked c
							inv parent
								val K_unchecked pos
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 0
							code
								inv !return
									val K_unchecked pos
						inv !while
							inv VisibilityParent
								val K_unchecked c
							code
								inv !store
									reference
										val K_unchecked c
									inv VisibilityParent
										val K_unchecked c
						inv !return
							val K_unchecked c
				constant ScopeCeiling K_unchecked_function = ScopeCeiling_B __assimilated=1
			package ObjectIsUntouchable_fn _function
				symbol public misc ObjectIsUntouchable
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ObjectIsUntouchable_B _code
					symbol private misc item
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc silent_flag
					symbol private misc p
					symbol private misc save_sp
					symbol private misc decision
					symbol private misc moving
					symbol private misc x
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc CoreOf --> /main/template/functions/CoreOf_fn/CoreOf
					symbol external misc CoreOfParentOfCoreOf --> /main/template/functions/CoreOfParentOfCoreOf_fn/CoreOfParentOfCoreOf
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc MoveFloatingObjects --> /main/template/functions/MoveFloatingObjects_fn/MoveFloatingObjects
					symbol external misc plug_00155 --> /main/template/variables/untouchable_object_var/untouchable_object
					symbol external misc plug_00156 --> /main/template/variables/untouchable_silence_var/untouchable_silence
					symbol external misc plug_00157 --> /main/template/variables/touch_persona_var/touch_persona
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc ACCESSIBILITY_RB --> /main/template/constants/ACCESSIBILITY_RB_con/ACCESSIBILITY_RB
					symbol external misc RulebookSucceeded --> /main/template/functions/RulebookSucceeded_fn/RulebookSucceeded
					local item K_unchecked
					local silent_flag K_unchecked
					local p K_unchecked
					local save_sp K_unchecked
					local decision K_unchecked
					local moving K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !ne
								inv LocationOf
									val K_unchecked p
								val K_unchecked real_location
							code
								inv !for
									inv !store
										reference
											val K_unchecked x
										inv CoreOf
											val K_unchecked item
									val K_unchecked x
									inv !store
										reference
											val K_unchecked x
										inv CoreOfParentOfCoreOf
											val K_unchecked x
									code
										inv !if
											inv !ofclass
												val K_unchecked x
												inv !alternative
													val K_unchecked plug_00153
													val K_unchecked plug_00154
											code
												inv !store
													reference
														val K_unchecked moving
													val K_unchecked 1
												inv MoveFloatingObjects
													inv LocationOf
														val K_unchecked p
												inv !break
						inv !store
							reference
								val K_unchecked untouchable_object
							val K_unchecked item
						inv !store
							reference
								val K_unchecked untouchable_silence
							val K_unchecked silent_flag
						inv !store
							reference
								val K_unchecked touch_persona
							val K_unchecked p
						inv !if
							inv !eq
								val K_unchecked p
								val K_unchecked actor
							code
								inv !store
									reference
										val K_unchecked touch_persona
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked save_sp
							val K_unchecked say__p
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 0
						inv !push
							val K_unchecked actor
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked p
						inv !ifelse
							inv FollowRulebook
								val K_unchecked ACCESSIBILITY_RB
								val K_unchecked 0
								val K_unchecked 1
							code
								inv !ifelse
									inv RulebookSucceeded
									code
										inv !store
											reference
												val K_unchecked decision
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked decision
											val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked decision
									val K_unchecked 0
						inv !pull
							reference
								val K_unchecked actor
						inv !if
							inv !eq
								val K_unchecked say__p
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked say__p
									val K_unchecked save_sp
						inv !if
							val K_unchecked moving
							code
								inv MoveFloatingObjects
						inv !store
							reference
								val K_unchecked untouchable_silence
							val K_unchecked 0
						inv !return
							val K_unchecked decision
				constant ObjectIsUntouchable K_unchecked_function = ObjectIsUntouchable_B __assimilated=1
			package ACCESS_THROUGH_BARRIERS_R_fn _function
				symbol public misc ACCESS_THROUGH_BARRIERS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ACCESS_THROUGH_BARRIERS_R_B _code
					symbol private misc ancestor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc external
					symbol private misc p
					symbol external misc plug_00157 --> /main/template/variables/touch_persona_var/touch_persona
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc CommonAncestor --> /main/template/functions/CommonAncestor_fn/CommonAncestor
					symbol external misc plug_00155 --> /main/template/variables/untouchable_object_var/untouchable_object
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00156 --> /main/template/variables/untouchable_silence_var/untouchable_silence
					symbol external misc plug_00158 --> /main/connectors/plug_00158
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					symbol external misc CoreOf --> /main/template/functions/CoreOf_fn/CoreOf
					symbol external misc parent --> /main/veneer/parent
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc REACHING_OUTSIDE_RB --> /main/template/constants/REACHING_OUTSIDE_RB_con/REACHING_OUTSIDE_RB
					symbol external misc RulebookFailed --> /main/template/functions/RulebookFailed_fn/RulebookFailed
					symbol external misc plug_00159 --> /main/connectors/plug_00159
					symbol external misc REACHING_INSIDE_RB --> /main/template/constants/REACHING_INSIDE_RB_con/REACHING_INSIDE_RB
					symbol external misc RulebookSucceeds --> /main/template/functions/RulebookSucceeds_fn/RulebookSucceeds
					local ancestor K_unchecked
					local i K_unchecked
					local j K_unchecked
					local external K_unchecked
					local p K_unchecked
					code
						inv !store
							reference
								val K_unchecked p
							val K_unchecked touch_persona
						inv !if
							inv !eq
								val K_unchecked p
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked p
									val K_unchecked actor
						inv !store
							reference
								val K_unchecked ancestor
							inv CommonAncestor
								val K_unchecked p
								val K_unchecked untouchable_object
						inv !if
							inv !and
								inv !and
									inv !eq
										val K_unchecked ancestor
										val K_unchecked 0
									inv !eq
										inv LocationOf
											val K_unchecked untouchable_object
										val K_unchecked 0
								inv !eq
									inv !ofclass
										val K_unchecked untouchable_object
										inv !alternative
											val K_unchecked plug_00153
											val K_unchecked plug_00154
									val K_unchecked 0
							code
								inv !if
									inv !eq
										val K_unchecked touch_persona
										val K_unchecked 0
									code
										inv !if
											inv !and
												inv !eq
													val K_unchecked actor
													val K_unchecked player
												inv !eq
													val K_unchecked untouchable_silence
													val K_unchecked 0
											code
												inv plug_00158
													val K_unchecked 65
													val K_unchecked untouchable_object
												inv !print
													val K_unchecked "\n"
								inv RulebookFails
								inv !return
									val K_unchecked 1
						inv !if
							inv !ne
								inv CoreOf
									val K_unchecked p
								val K_unchecked ancestor
							code
								inv !store
									reference
										val K_unchecked i
									inv parent
										inv CoreOf
											val K_unchecked p
								inv !store
									reference
										val K_unchecked j
									inv CoreOf
										val K_unchecked i
								inv !store
									reference
										val K_unchecked external
									val K_unchecked 0
								inv !if
									inv !ne
										val K_unchecked j
										val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked i
											val K_unchecked j
										inv !store
											reference
												val K_unchecked external
											val K_unchecked 1
								inv !while
									inv !and
										inv !ne
											val K_unchecked i
											val K_unchecked ancestor
										val K_unchecked i
									code
										inv !if
											inv !and
												inv !and
													inv !eq
														val K_unchecked external
														val K_unchecked 0
													inv FollowRulebook
														val K_unchecked REACHING_OUTSIDE_RB
														val K_unchecked i
												inv RulebookFailed
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked i
											inv parent
												inv CoreOf
													val K_unchecked i
										inv !store
											reference
												val K_unchecked external
											val K_unchecked 0
										inv !if
											inv !not
												inv !ofclass
													val K_unchecked i
													val K_unchecked plug_00159
											code
												inv !store
													reference
														val K_unchecked j
													inv CoreOf
														val K_unchecked i
												inv !if
													inv !ne
														val K_unchecked j
														val K_unchecked i
													code
														inv !store
															reference
																val K_unchecked i
															val K_unchecked j
														inv !store
															reference
																val K_unchecked external
															val K_unchecked 1
						inv !if
							inv !ne
								inv CoreOf
									val K_unchecked untouchable_object
								val K_unchecked ancestor
							code
								inv !store
									reference
										val K_unchecked i
									inv CoreOf
										val K_unchecked untouchable_object
								inv !store
									reference
										val K_unchecked i
									inv parent
										val K_unchecked i
								inv !store
									reference
										val K_unchecked external
									val K_unchecked 0
								inv !while
									inv !and
										inv !ne
											val K_unchecked i
											val K_unchecked ancestor
										val K_unchecked i
									code
										inv !if
											inv !and
												inv !and
													inv !eq
														val K_unchecked external
														val K_unchecked 0
													inv FollowRulebook
														val K_unchecked REACHING_INSIDE_RB
														val K_unchecked i
												inv RulebookFailed
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked i
											inv CoreOf
												val K_unchecked i
										inv !if
											inv !eq
												val K_unchecked i
												val K_unchecked ancestor
											code
												inv !break
										inv !store
											reference
												val K_unchecked i
											inv parent
												val K_unchecked i
										inv !store
											reference
												val K_unchecked external
											val K_unchecked 0
										inv !if
											inv !not
												inv !ofclass
													val K_unchecked i
													val K_unchecked plug_00159
											code
												inv !store
													reference
														val K_unchecked j
													inv CoreOf
														val K_unchecked i
												inv !if
													inv !ne
														val K_unchecked j
														val K_unchecked i
													code
														inv !store
															reference
																val K_unchecked i
															val K_unchecked j
														inv !store
															reference
																val K_unchecked external
															val K_unchecked 1
						inv RulebookSucceeds
						inv !return
							val K_unchecked 1
				constant ACCESS_THROUGH_BARRIERS_R K_unchecked_function = ACCESS_THROUGH_BARRIERS_R_B __assimilated=1
			package CANT_REACH_INSIDE_CLOSED_R_fn _function
				symbol public misc CANT_REACH_INSIDE_CLOSED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CANT_REACH_INSIDE_CLOSED_R_B _code
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc plug_00157 --> /main/template/variables/touch_persona_var/touch_persona
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00156 --> /main/template/variables/untouchable_silence_var/untouchable_silence
					symbol external misc plug_00161 --> /main/connectors/plug_00161
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					code
						inv !if
							inv !and
								inv !has
									val K_unchecked parameter_value
									val K_unchecked container
								inv !hasnt
									val K_unchecked parameter_value
									val K_unchecked open
							code
								inv !if
									inv !eq
										val K_unchecked touch_persona
										val K_unchecked 0
									code
										inv !if
											inv !and
												inv !eq
													val K_unchecked actor
													val K_unchecked player
												inv !eq
													val K_unchecked untouchable_silence
													val K_unchecked 0
											code
												inv plug_00161
													val K_unchecked 65
													val K_unchecked parameter_value
												inv !print
													val K_unchecked "\n"
								inv RulebookFails
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CANT_REACH_INSIDE_CLOSED_R K_unchecked_function = CANT_REACH_INSIDE_CLOSED_R_B __assimilated=1
			package CANT_REACH_OUTSIDE_CLOSED_R_fn _function
				symbol public misc CANT_REACH_OUTSIDE_CLOSED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CANT_REACH_OUTSIDE_CLOSED_R_B _code
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc plug_00157 --> /main/template/variables/touch_persona_var/touch_persona
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00156 --> /main/template/variables/untouchable_silence_var/untouchable_silence
					symbol external misc plug_00162 --> /main/connectors/plug_00162
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					code
						inv !if
							inv !and
								inv !has
									val K_unchecked parameter_value
									val K_unchecked container
								inv !hasnt
									val K_unchecked parameter_value
									val K_unchecked open
							code
								inv !if
									inv !eq
										val K_unchecked touch_persona
										val K_unchecked 0
									code
										inv !if
											inv !and
												inv !eq
													val K_unchecked actor
													val K_unchecked player
												inv !eq
													val K_unchecked untouchable_silence
													val K_unchecked 0
											code
												inv plug_00162
													val K_unchecked 65
													val K_unchecked parameter_value
												inv !print
													val K_unchecked "\n"
								inv RulebookFails
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CANT_REACH_OUTSIDE_CLOSED_R K_unchecked_function = CANT_REACH_OUTSIDE_CLOSED_R_B __assimilated=1
			package CANT_REACH_INSIDE_ROOMS_R_fn _function
				symbol public misc CANT_REACH_INSIDE_ROOMS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CANT_REACH_INSIDE_ROOMS_R_B _code
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00157 --> /main/template/variables/touch_persona_var/touch_persona
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00156 --> /main/template/variables/untouchable_silence_var/untouchable_silence
					symbol external misc plug_00163 --> /main/connectors/plug_00163
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					code
						inv !if
							inv !and
								val K_unchecked parameter_value
								inv !ofclass
									val K_unchecked parameter_value
									val K_unchecked plug_00137
							code
								inv !if
									inv !eq
										val K_unchecked touch_persona
										val K_unchecked 0
									code
										inv !if
											inv !and
												inv !eq
													val K_unchecked actor
													val K_unchecked player
												inv !eq
													val K_unchecked untouchable_silence
													val K_unchecked 0
											code
												inv plug_00163
													val K_unchecked 65
													val K_unchecked parameter_value
												inv !print
													val K_unchecked "\n"
								inv RulebookFails
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CANT_REACH_INSIDE_ROOMS_R K_unchecked_function = CANT_REACH_INSIDE_ROOMS_R_B __assimilated=1
			package RequisitionStack_fn _function
				symbol public misc RequisitionStack
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RequisitionStack_B _code
					symbol private misc len
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc top
					symbol private misc addr
					symbol external misc plug_00164 --> /main/template/variables/requisition_stack_pointer_var/requisition_stack_pointer
					symbol external misc REQUISITION_STACK_SIZE --> /main/template/constants/REQUISITION_STACK_SIZE_con/REQUISITION_STACK_SIZE
					symbol external misc requisition_stack --> /main/template/arrays/requisition_stack_arr/requisition_stack
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local len K_unchecked
					local top K_unchecked
					local addr K_unchecked
					code
						inv !store
							reference
								val K_unchecked top
							inv !plus
								val K_unchecked requisition_stack_pointer
								val K_unchecked len
						inv !if
							inv !gt
								val K_unchecked top
								val K_unchecked REQUISITION_STACK_SIZE
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked addr
							inv !plus
								val K_unchecked requisition_stack
								inv !times
									val K_unchecked requisition_stack_pointer
									val K_unchecked plug_00139
						inv !store
							reference
								val K_unchecked requisition_stack_pointer
							val K_unchecked top
						inv !return
							val K_unchecked addr
				constant RequisitionStack K_unchecked_function = RequisitionStack_B __assimilated=1
			package FreeStack_fn _function
				symbol public misc FreeStack
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FreeStack_B _code
					symbol private misc addr
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00164 --> /main/template/variables/requisition_stack_pointer_var/requisition_stack_pointer
					symbol external misc requisition_stack --> /main/template/arrays/requisition_stack_arr/requisition_stack
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local addr K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked addr
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked requisition_stack_pointer
							inv !divide
								inv !minus
									val K_unchecked addr
									val K_unchecked requisition_stack
								val K_unchecked plug_00139
				constant FreeStack K_unchecked_function = FreeStack_B __assimilated=1
			package WriteListOfMarkedObjects_fn _function
				symbol public misc WriteListOfMarkedObjects
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteListOfMarkedObjects_B _code
					symbol private misc in_style
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj
					symbol private misc common_parent
					symbol private misc first
					symbol private misc mixed_parentage
					symbol private misc length
					symbol private misc g
					symbol private misc gc
					symbol external misc Object --> /main/veneer/Object
					symbol external misc workflag2 --> /main/template/properties/workflag2_prop/workflag2
					symbol external misc parent --> /main/veneer/parent
					symbol external misc GetGNAOfObject --> /main/template/functions/GetGNAOfObject_fn/GetGNAOfObject
					symbol external misc ISARE_BIT --> /main/template/constants/ISARE_BIT_con/ISARE_BIT
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc CFIRSTART_BIT --> /main/template/constants/CFIRSTART_BIT_con/CFIRSTART_BIT
					symbol external misc plug_00166 --> /main/template/variables/MarkedObjectArray_var/MarkedObjectArray
					symbol external misc plug_00167 --> /main/template/variables/MarkedObjectLength_var/MarkedObjectLength
					symbol external misc RequisitionStack --> /main/template/functions/RequisitionStack_fn/RequisitionStack
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTWRITERMEMORY --> /main/template/constants/RTP_LISTWRITERMEMORY_con/RTP_LISTWRITERMEMORY
					symbol external misc ObjectTreeCoalesce --> /main/template/functions/ObjectTreeCoalesce_fn/ObjectTreeCoalesce
					symbol external misc child --> /main/veneer/child
					symbol external misc plug_00168 --> /main/connectors/plug_00168
					symbol external misc WriteListFrom --> /main/template/functions/WriteListFrom_fn/WriteListFrom
					symbol external misc MarkedListIterator --> /main/template/functions/MarkedListIterator_fn/MarkedListIterator
					symbol external misc FreeStack --> /main/template/functions/FreeStack_fn/FreeStack
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					symbol external misc plug_00170 --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
					local in_style K_unchecked
					local obj K_unchecked
					local common_parent K_unchecked
					local first K_unchecked
					local mixed_parentage K_unchecked
					local length K_unchecked
					local g K_unchecked
					local gc K_unchecked
					code
						inv !store
							reference
								val K_unchecked gc
							val K_unchecked -2
						inv !objectloop
							reference
								val K_unchecked obj
							val K_unchecked Object
							inv !and
								inv !ofclass
									val K_unchecked obj
									val K_unchecked Object
								inv !has
									val K_unchecked obj
									val K_unchecked workflag2
							code
								inv !postincrement
									reference
										val K_unchecked length
								inv !ifelse
									inv !eq
										val K_unchecked first
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked first
											val K_unchecked obj
										inv !store
											reference
												val K_unchecked common_parent
											inv parent
												val K_unchecked obj
									code
										inv !if
											inv !ne
												inv parent
													val K_unchecked obj
												val K_unchecked common_parent
											code
												inv !store
													reference
														val K_unchecked mixed_parentage
													val K_unchecked 1
								inv !store
									reference
										val K_unchecked g
									inv GetGNAOfObject
										val K_unchecked obj
								inv !store
									reference
										val K_unchecked g
									inv !modulo
										val K_unchecked g
										val K_unchecked 3
								inv !ifelse
									inv !eq
										val K_unchecked gc
										val K_unchecked -2
									code
										inv !store
											reference
												val K_unchecked gc
											val K_unchecked g
									code
										inv !if
											inv !ne
												val K_unchecked gc
												val K_unchecked g
											code
												inv !store
													reference
														val K_unchecked gc
													val K_unchecked -1
						inv !if
							val K_unchecked mixed_parentage
							code
								inv !store
									reference
										val K_unchecked common_parent
									val K_unchecked 0
						inv !ifelse
							inv !eq
								val K_unchecked length
								val K_unchecked 0
							code
								inv !ifelse
									inv !ne
										inv !bitwiseand
											val K_unchecked in_style
											val K_unchecked ISARE_BIT
										val K_unchecked 0
									code
										inv plug_00165
											val K_unchecked 87
									code
										inv !ifelse
											inv !ne
												inv !bitwiseand
													val K_unchecked in_style
													val K_unchecked CFIRSTART_BIT
												val K_unchecked 0
											code
												inv plug_00165
													val K_unchecked 88
											code
												inv plug_00165
													val K_unchecked 89
							code
								inv !push
									val K_unchecked MarkedObjectArray
								inv !push
									val K_unchecked MarkedObjectLength
								inv !store
									reference
										val K_unchecked MarkedObjectArray
									inv RequisitionStack
										val K_unchecked length
								inv !store
									reference
										val K_unchecked MarkedObjectLength
									val K_unchecked length
								inv !if
									inv !eq
										val K_unchecked MarkedObjectArray
										val K_unchecked 0
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_LISTWRITERMEMORY
								inv !ifelse
									val K_unchecked common_parent
									code
										inv ObjectTreeCoalesce
											inv child
												val K_unchecked common_parent
										inv !store
											reference
												val K_unchecked length
											val K_unchecked 0
										inv !objectloop
											reference
												val K_unchecked obj
											val K_unchecked plug_00168
											inv !in
												val K_unchecked obj
												val K_unchecked common_parent
											code
												inv !if
													inv !has
														val K_unchecked obj
														val K_unchecked workflag2
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked MarkedObjectArray
																	inv !postincrement
																		reference
																			val K_unchecked length
															val K_unchecked obj
									code
										inv !store
											reference
												val K_unchecked length
											val K_unchecked 0
										inv !objectloop
											reference
												val K_unchecked obj
											val K_unchecked Object
											inv !ofclass
												val K_unchecked obj
												val K_unchecked Object
											code
												inv !if
													inv !has
														val K_unchecked obj
														val K_unchecked workflag2
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked MarkedObjectArray
																	inv !postincrement
																		reference
																			val K_unchecked length
															val K_unchecked obj
								inv WriteListFrom
									val K_unchecked first
									val K_unchecked in_style
									val K_unchecked 0
									val K_unchecked 0
									val K_unchecked MarkedListIterator
								inv FreeStack
									val K_unchecked MarkedObjectArray
								inv !pull
									reference
										val K_unchecked MarkedObjectLength
								inv !pull
									reference
										val K_unchecked MarkedObjectArray
						inv !store
							reference
								val K_unchecked prior_named_list
							val K_unchecked length
						inv !store
							reference
								val K_unchecked prior_named_list_gender
							val K_unchecked gc
						inv !return
							val K_unchecked 1
				constant WriteListOfMarkedObjects K_unchecked_function = WriteListOfMarkedObjects_B __assimilated=1
			package RegardingMarkedObjects_fn _function
				symbol public misc RegardingMarkedObjects
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RegardingMarkedObjects_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc length
					symbol private misc g
					symbol private misc gc
					symbol external misc Object --> /main/veneer/Object
					symbol external misc workflag2 --> /main/template/properties/workflag2_prop/workflag2
					symbol external misc GetGNAOfObject --> /main/template/functions/GetGNAOfObject_fn/GetGNAOfObject
					symbol external misc plug_00171 --> /main/template/variables/prior_named_noun_var/prior_named_noun
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					symbol external misc plug_00170 --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
					local obj K_unchecked
					local length K_unchecked
					local g K_unchecked
					local gc K_unchecked
					code
						inv !store
							reference
								val K_unchecked gc
							val K_unchecked -2
						inv !objectloop
							reference
								val K_unchecked obj
							val K_unchecked Object
							inv !and
								inv !ofclass
									val K_unchecked obj
									val K_unchecked Object
								inv !has
									val K_unchecked obj
									val K_unchecked workflag2
							code
								inv !postincrement
									reference
										val K_unchecked length
								inv !store
									reference
										val K_unchecked g
									inv GetGNAOfObject
										val K_unchecked obj
								inv !store
									reference
										val K_unchecked g
									inv !modulo
										val K_unchecked g
										val K_unchecked 3
								inv !ifelse
									inv !eq
										val K_unchecked gc
										val K_unchecked -2
									code
										inv !store
											reference
												val K_unchecked gc
											val K_unchecked g
										inv !store
											reference
												val K_unchecked prior_named_noun
											val K_unchecked obj
									code
										inv !if
											inv !ne
												val K_unchecked gc
												val K_unchecked g
											code
												inv !store
													reference
														val K_unchecked gc
													val K_unchecked -1
						inv !store
							reference
								val K_unchecked prior_named_list
							val K_unchecked length
						inv !store
							reference
								val K_unchecked prior_named_list_gender
							val K_unchecked gc
						inv !if
							inv !eq
								val K_unchecked length
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked prior_named_noun
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked prior_named_list_gender
									val K_unchecked -1
						inv !return
							val K_unchecked 1
				constant RegardingMarkedObjects K_unchecked_function = RegardingMarkedObjects_B __assimilated=1
			package RegardingSingleObject_fn _function
				symbol public misc RegardingSingleObject
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RegardingSingleObject_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					symbol external misc plug_00170 --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
					symbol external misc plug_00171 --> /main/template/variables/prior_named_noun_var/prior_named_noun
					local obj K_unchecked
					code
						inv !store
							reference
								val K_unchecked prior_named_list
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked prior_named_list_gender
							val K_unchecked -1
						inv !store
							reference
								val K_unchecked prior_named_noun
							val K_unchecked obj
				constant RegardingSingleObject K_unchecked_function = RegardingSingleObject_B __assimilated=1
			package RegardingNumber_fn _function
				symbol public misc RegardingNumber
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RegardingNumber_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					symbol external misc plug_00170 --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
					symbol external misc plug_00171 --> /main/template/variables/prior_named_noun_var/prior_named_noun
					local n K_unchecked
					code
						inv !store
							reference
								val K_unchecked prior_named_list
							val K_unchecked n
						inv !store
							reference
								val K_unchecked prior_named_list_gender
							val K_unchecked -1
						inv !store
							reference
								val K_unchecked prior_named_noun
							val K_unchecked 0
				constant RegardingNumber K_unchecked_function = RegardingNumber_B __assimilated=1
			package PNToVP_fn _function
				symbol public misc PNToVP
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PNToVP_B _code
					symbol private misc gna
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00171 --> /main/template/variables/prior_named_noun_var/prior_named_noun
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00172 --> /main/template/variables/story_viewpoint_var/story_viewpoint
					symbol external misc GetGNAOfObject --> /main/template/functions/GetGNAOfObject_fn/GetGNAOfObject
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					local gna K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked prior_named_noun
								val K_unchecked player
							code
								inv !return
									val K_unchecked story_viewpoint
						inv !if
							val K_unchecked prior_named_noun
							code
								inv !store
									reference
										val K_unchecked gna
									inv GetGNAOfObject
										val K_unchecked prior_named_noun
						inv !if
							inv !or
								inv !eq
									inv !divide
										inv !modulo
											val K_unchecked gna
											val K_unchecked 6
										val K_unchecked 3
									val K_unchecked 1
								inv !ge
									val K_unchecked prior_named_list
									val K_unchecked 2
							code
								inv !return
									val K_unchecked 6
						inv !return
							val K_unchecked 3
				constant PNToVP K_unchecked_function = PNToVP_B __assimilated=1
			package PrintVerbAsValue_fn _function
				symbol public misc PrintVerbAsValue
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintVerbAsValue_B _code
					symbol private misc vb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local vb K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked vb
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "(no verb)"
							code
								inv !print
									val K_unchecked "verb "
								inv !indirect1
									val K_unchecked vb
									val K_unchecked 1
				constant PrintVerbAsValue K_unchecked_function = PrintVerbAsValue_B __assimilated=1
			package VerbIsMeaningful_fn _function
				symbol public misc VerbIsMeaningful
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VerbIsMeaningful_B _code
					symbol private misc vb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc plug_00173 --> /main/connectors/plug_00173
					symbol external misc plug_00174 --> /main/connectors/plug_00174
					local vb K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked vb
								inv !ne
									inv BlkValueCompare
										inv !indirect1
											val K_unchecked vb
											val K_unchecked plug_00173
										val K_unchecked plug_00174
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant VerbIsMeaningful K_unchecked_function = VerbIsMeaningful_B __assimilated=1
			package VerbIsModal_fn _function
				symbol public misc VerbIsModal
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VerbIsModal_B _code
					symbol private misc vb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00175 --> /main/connectors/plug_00175
					local vb K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked vb
								inv !indirect1
									val K_unchecked vb
									val K_unchecked plug_00175
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant VerbIsModal K_unchecked_function = VerbIsModal_B __assimilated=1
			package SetLWI_fn _function
				symbol public misc SetLWI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetLWI_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc b
					symbol private misc c
					symbol external misc LWI_Storage --> /main/template/arrays/LWI_Storage_arr/LWI_Storage
					local a K_unchecked
					local b K_unchecked
					local c K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked LWI_Storage
									val K_unchecked 0
							val K_unchecked a
						inv !store
							reference
								inv !lookup
									val K_unchecked LWI_Storage
									val K_unchecked 1
							val K_unchecked b
						inv !store
							reference
								inv !lookup
									val K_unchecked LWI_Storage
									val K_unchecked 2
							val K_unchecked c
				constant SetLWI K_unchecked_function = SetLWI_B __assimilated=1
			package RegardingLWI_fn _function
				symbol public misc RegardingLWI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RegardingLWI_B _code
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc LWI_Storage --> /main/template/arrays/LWI_Storage_arr/LWI_Storage
					symbol external misc plug_00170 --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
					symbol external misc plug_00171 --> /main/template/variables/prior_named_noun_var/prior_named_noun
					code
						inv !store
							reference
								val K_unchecked prior_named_list
							inv !lookup
								val K_unchecked LWI_Storage
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked prior_named_list_gender
							inv !lookup
								val K_unchecked LWI_Storage
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked prior_named_noun
							inv !lookup
								val K_unchecked LWI_Storage
								val K_unchecked 2
				constant RegardingLWI K_unchecked_function = RegardingLWI_B __assimilated=1
			package ResponseViaActivity_fn _function
				symbol public misc ResponseViaActivity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ResponseViaActivity_B _code
					symbol private misc R
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00171 --> /main/template/variables/prior_named_noun_var/prior_named_noun
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					symbol external misc plug_00170 --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
					symbol external misc RegardingSingleObject --> /main/template/functions/RegardingSingleObject_fn/RegardingSingleObject
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc PRINTING_RESPONSE_ACT --> /main/template/constants/PRINTING_RESPONSE_ACT_con/PRINTING_RESPONSE_ACT
					local R K_unchecked
					code
						inv !push
							val K_unchecked prior_named_noun
						inv !push
							val K_unchecked prior_named_list
						inv !push
							val K_unchecked prior_named_list_gender
						inv RegardingSingleObject
							val K_unchecked 0
						inv CarryOutActivity
							val K_unchecked PRINTING_RESPONSE_ACT
							val K_unchecked R
						inv !pull
							reference
								val K_unchecked prior_named_list_gender
						inv !pull
							reference
								val K_unchecked prior_named_list
						inv !pull
							reference
								val K_unchecked prior_named_noun
				constant ResponseViaActivity K_unchecked_function = ResponseViaActivity_B __assimilated=1
			package MarkedListIterator_fn _function
				symbol public misc MarkedListIterator
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MarkedListIterator_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc depth
					symbol private misc required_lt
					symbol private misc function
					symbol private misc i
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc START_ITF --> /main/template/constants/START_ITF_con/START_ITF
					symbol external misc plug_00166 --> /main/template/variables/MarkedObjectArray_var/MarkedObjectArray
					symbol external misc COALESCE_ITF --> /main/template/constants/COALESCE_ITF_con/COALESCE_ITF
					symbol external misc MarkedListCoalesce --> /main/template/functions/MarkedListCoalesce_fn/MarkedListCoalesce
					symbol external misc SEEK_ITF --> /main/template/constants/SEEK_ITF_con/SEEK_ITF
					symbol external misc ADVANCE_ITF --> /main/template/constants/ADVANCE_ITF_con/ADVANCE_ITF
					symbol external misc plug_00167 --> /main/template/variables/MarkedObjectLength_var/MarkedObjectLength
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc WORKFLAG_BIT --> /main/template/constants/WORKFLAG_BIT_con/WORKFLAG_BIT
					symbol external misc workflag --> /main/template/properties/workflag_prop/workflag
					symbol external misc CONCEAL_BIT --> /main/template/constants/CONCEAL_BIT_con/CONCEAL_BIT
					symbol external misc ConcealedFromLists --> /main/template/functions/ConcealedFromLists_fn/ConcealedFromLists
					local obj K_unchecked
					local depth K_unchecked
					local required_lt K_unchecked
					local function K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked required_lt
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked required_lt
									val K_unchecked EMPTY_TEXT_VALUE
						inv !switch
							val K_unchecked function
							code
								inv !case
									val K_unchecked START_ITF
									code
										inv !return
											inv !lookup
												val K_unchecked MarkedObjectArray
												val K_unchecked 0
								inv !case
									val K_unchecked COALESCE_ITF
									code
										inv !return
											inv MarkedListCoalesce
								inv !case
									inv !alternativecase
										val K_unchecked SEEK_ITF
										val K_unchecked ADVANCE_ITF
									code
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked MarkedObjectLength
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !if
													inv !eq
														inv !lookup
															val K_unchecked MarkedObjectArray
															val K_unchecked i
														val K_unchecked obj
													code
														inv !if
															inv !eq
																val K_unchecked function
																val K_unchecked ADVANCE_ITF
															code
																inv !postincrement
																	reference
																		val K_unchecked i
														inv !for
															val K_unchecked 1
															inv !lt
																val K_unchecked i
																val K_unchecked MarkedObjectLength
															inv !postincrement
																reference
																	val K_unchecked i
															code
																inv !store
																	reference
																		val K_unchecked obj
																	inv !lookup
																		val K_unchecked MarkedObjectArray
																		val K_unchecked i
																inv !if
																	inv !and
																		inv !ne
																			inv LT_Compare
																				val K_unchecked required_lt
																				val K_unchecked EMPTY_TEXT_VALUE
																			val K_unchecked 0
																		inv !ne
																			inv LT_Compare
																				inv !propertyvalue
																					val K_unchecked obj
																					val K_unchecked list_together
																				val K_unchecked required_lt
																			val K_unchecked 0
																	code
																		inv !continue
																inv !if
																	inv !and
																		inv !and
																			inv !bitwiseand
																				val K_unchecked c_style
																				val K_unchecked WORKFLAG_BIT
																			inv !eq
																				val K_unchecked depth
																				val K_unchecked 0
																		inv !hasnt
																			val K_unchecked obj
																			val K_unchecked workflag
																	code
																		inv !continue
																inv !if
																	inv !and
																		inv !bitwiseand
																			val K_unchecked c_style
																			val K_unchecked CONCEAL_BIT
																		inv ConcealedFromLists
																			val K_unchecked obj
																	code
																		inv !continue
																inv !return
																	val K_unchecked obj
														inv !return
															val K_unchecked 0
						inv !return
							val K_unchecked 0
				constant MarkedListIterator K_unchecked_function = MarkedListIterator_B __assimilated=1
			package ConcealedFromLists_fn _function
				symbol public misc ConcealedFromLists
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ConcealedFromLists_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc c
					symbol external misc concealed --> /main/template/properties/concealed_prop/concealed
					symbol external misc scenery --> /main/template/properties/scenery_prop/scenery
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00159 --> /main/connectors/plug_00159
					symbol external misc plug_00177 --> /main/connectors/plug_00177
					symbol external misc TestConcealment --> /main/template/functions/TestConcealment_fn/TestConcealment
					local obj K_unchecked
					local c K_unchecked
					code
						inv !if
							inv !or
								inv !has
									val K_unchecked obj
									val K_unchecked concealed
								inv !has
									val K_unchecked obj
									val K_unchecked scenery
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked c
							inv parent
								val K_unchecked obj
						inv !if
							inv !and
								inv !and
									val K_unchecked c
									inv !ofclass
										val K_unchecked c
										inv !alternative
											val K_unchecked plug_00159
											val K_unchecked plug_00177
								inv TestConcealment
									val K_unchecked c
									val K_unchecked obj
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ConcealedFromLists K_unchecked_function = ConcealedFromLists_B __assimilated=1
			package MarkedListCoalesce_fn _function
				symbol public misc MarkedListCoalesce
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MarkedListCoalesce_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc lt
					symbol private misc l
					symbol private misc swap
					symbol private misc m
					symbol external misc plug_00167 --> /main/template/variables/MarkedObjectLength_var/MarkedObjectLength
					symbol external misc plug_00166 --> /main/template/variables/MarkedObjectArray_var/MarkedObjectArray
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					local o K_unchecked
					local i K_unchecked
					local lt K_unchecked
					local l K_unchecked
					local swap K_unchecked
					local m K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked MarkedObjectLength
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked lt
									inv !propertyvalue
										inv !lookup
											val K_unchecked MarkedObjectArray
											val K_unchecked i
										val K_unchecked list_together
								inv !if
									inv !ne
										inv LT_Compare
											val K_unchecked lt
											val K_unchecked EMPTY_TEXT_VALUE
										val K_unchecked 0
									code
										inv !for
											inv !postincrement
												reference
													val K_unchecked i
											inv !and
												inv !lt
													val K_unchecked i
													val K_unchecked MarkedObjectLength
												inv !eq
													inv LT_Compare
														inv !propertyvalue
															inv !lookup
																val K_unchecked MarkedObjectArray
																val K_unchecked i
															val K_unchecked list_together
														val K_unchecked lt
													val K_unchecked 0
											inv !postincrement
												reference
													val K_unchecked i
											code
										inv !if
											inv !eq
												val K_unchecked i
												val K_unchecked MarkedObjectLength
											code
												inv !return
													inv !lookup
														val K_unchecked MarkedObjectArray
														val K_unchecked 0
										inv !for
											inv !store
												reference
													val K_unchecked l
												inv !plus
													val K_unchecked i
													val K_unchecked 1
											inv !lt
												val K_unchecked l
												val K_unchecked MarkedObjectLength
											inv !postincrement
												reference
													val K_unchecked l
											code
												inv !if
													inv !eq
														inv LT_Compare
															inv !propertyvalue
																inv !lookup
																	val K_unchecked MarkedObjectArray
																	val K_unchecked l
																val K_unchecked list_together
															val K_unchecked lt
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked swap
															inv !lookup
																val K_unchecked MarkedObjectArray
																val K_unchecked l
														inv !for
															inv !store
																reference
																	val K_unchecked m
																val K_unchecked l
															inv !gt
																val K_unchecked m
																val K_unchecked i
															inv !postdecrement
																reference
																	val K_unchecked m
															code
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked MarkedObjectArray
																			val K_unchecked m
																	inv !lookup
																		val K_unchecked MarkedObjectArray
																		inv !minus
																			val K_unchecked m
																			val K_unchecked 1
														inv !store
															reference
																inv !lookup
																	val K_unchecked MarkedObjectArray
																	val K_unchecked i
															val K_unchecked swap
														inv !postincrement
															reference
																val K_unchecked i
														inv !if
															inv !eq
																val K_unchecked i
																val K_unchecked MarkedObjectLength
															code
																inv !return
																	inv !lookup
																		val K_unchecked MarkedObjectArray
																		val K_unchecked 0
										inv !postdecrement
											reference
												val K_unchecked i
						inv !return
							inv !lookup
								val K_unchecked MarkedObjectArray
								val K_unchecked 0
				constant MarkedListCoalesce K_unchecked_function = MarkedListCoalesce_B __assimilated=1
			package ObjectTreeIterator_fn _function
				symbol public misc ObjectTreeIterator
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ObjectTreeIterator_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc depth
					symbol private misc required_lt
					symbol private misc function
					symbol external misc parent --> /main/veneer/parent
					symbol external misc START_ITF --> /main/template/constants/START_ITF_con/START_ITF
					symbol external misc child --> /main/veneer/child
					symbol external misc COALESCE_ITF --> /main/template/constants/COALESCE_ITF_con/COALESCE_ITF
					symbol external misc ObjectTreeCoalesce --> /main/template/functions/ObjectTreeCoalesce_fn/ObjectTreeCoalesce
					symbol external misc ADVANCE_ITF --> /main/template/constants/ADVANCE_ITF_con/ADVANCE_ITF
					symbol external misc sibling --> /main/veneer/sibling
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc WORKFLAG_BIT --> /main/template/constants/WORKFLAG_BIT_con/WORKFLAG_BIT
					symbol external misc workflag --> /main/template/properties/workflag_prop/workflag
					symbol external misc list_filter_permits --> /main/template/constants/list_filter_permits_con/list_filter_permits
					symbol external misc CONCEAL_BIT --> /main/template/constants/CONCEAL_BIT_con/CONCEAL_BIT
					symbol external misc ConcealedFromLists --> /main/template/functions/ConcealedFromLists_fn/ConcealedFromLists
					local obj K_unchecked
					local depth K_unchecked
					local required_lt K_unchecked
					local function K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked obj
									val K_unchecked 0
								inv !eq
									inv parent
										val K_unchecked obj
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked function
								val K_unchecked START_ITF
							code
								inv !store
									reference
										val K_unchecked obj
									inv child
										inv parent
											val K_unchecked obj
						inv !if
							inv !eq
								val K_unchecked function
								val K_unchecked COALESCE_ITF
							code
								inv !return
									inv ObjectTreeCoalesce
										val K_unchecked obj
						inv !if
							inv !eq
								val K_unchecked function
								val K_unchecked ADVANCE_ITF
							code
								inv !store
									reference
										val K_unchecked obj
									inv sibling
										val K_unchecked obj
						inv !if
							inv !eq
								val K_unchecked required_lt
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked required_lt
									val K_unchecked EMPTY_TEXT_VALUE
						inv !for
							val K_unchecked 1
							val K_unchecked 1
							inv !store
								reference
									val K_unchecked obj
								inv sibling
									val K_unchecked obj
							code
								inv !if
									inv !eq
										val K_unchecked obj
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !and
										inv !ne
											inv LT_Compare
												val K_unchecked required_lt
												val K_unchecked EMPTY_TEXT_VALUE
											val K_unchecked 0
										inv !ne
											inv LT_Compare
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked list_together
												val K_unchecked required_lt
											val K_unchecked 0
									code
										inv !continue
								inv !if
									inv !and
										inv !and
											inv !bitwiseand
												val K_unchecked c_style
												val K_unchecked WORKFLAG_BIT
											inv !eq
												val K_unchecked depth
												val K_unchecked 0
										inv !hasnt
											val K_unchecked obj
											val K_unchecked workflag
									code
										inv !continue
								inv !if
									inv !hasnt
										val K_unchecked obj
										val K_unchecked list_filter_permits
									code
										inv !continue
								inv !if
									inv !and
										inv !bitwiseand
											val K_unchecked c_style
											val K_unchecked CONCEAL_BIT
										inv ConcealedFromLists
											val K_unchecked obj
									code
										inv !continue
								inv !return
									val K_unchecked obj
				constant ObjectTreeIterator K_unchecked_function = ObjectTreeIterator_B __assimilated=1
			package ObjectTreeCoalesce_fn _function
				symbol public misc ObjectTreeCoalesce
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ObjectTreeCoalesce_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc memb
					symbol private misc lt
					symbol private misc later
					symbol private label .StartAgain
					symbol external misc sibling --> /main/veneer/sibling
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc GroupChildren --> /main/template/functions/GroupChildren_fn/GroupChildren
					symbol external misc parent --> /main/veneer/parent
					local obj K_unchecked
					local memb K_unchecked
					local lt K_unchecked
					local later K_unchecked
					code
						.StartAgain
						inv !for
							inv !store
								reference
									val K_unchecked memb
								val K_unchecked obj
							inv !ne
								val K_unchecked memb
								val K_unchecked 0
							inv !store
								reference
									val K_unchecked memb
								inv sibling
									val K_unchecked memb
							code
								inv !store
									reference
										val K_unchecked lt
									inv !propertyvalue
										val K_unchecked memb
										val K_unchecked list_together
								inv !if
									inv !ne
										inv LT_Compare
											val K_unchecked lt
											val K_unchecked EMPTY_TEXT_VALUE
										val K_unchecked 0
									code
										inv !for
											inv !store
												reference
													val K_unchecked memb
												inv sibling
													val K_unchecked memb
											inv !and
												val K_unchecked memb
												inv !eq
													inv LT_Compare
														inv !propertyvalue
															val K_unchecked memb
															val K_unchecked list_together
														val K_unchecked lt
													val K_unchecked 0
											inv !store
												reference
													val K_unchecked memb
												inv sibling
													val K_unchecked memb
											code
										inv !if
											inv !eq
												val K_unchecked memb
												val K_unchecked 0
											code
												inv !return
													val K_unchecked obj
										inv !for
											inv !store
												reference
													val K_unchecked later
												inv sibling
													val K_unchecked memb
											val K_unchecked later
											inv !store
												reference
													val K_unchecked later
												inv sibling
													val K_unchecked later
											code
												inv !if
													inv !eq
														inv LT_Compare
															inv !propertyvalue
																val K_unchecked later
																val K_unchecked list_together
															val K_unchecked lt
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked obj
															inv GroupChildren
																inv parent
																	val K_unchecked obj
																val K_unchecked lt
														inv !jump
															lab .StartAgain
						inv !return
							val K_unchecked obj
				constant ObjectTreeCoalesce K_unchecked_function = ObjectTreeCoalesce_B __assimilated=1
			package WriteListFrom_fn _function
				symbol public misc WriteListFrom
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteListFrom_B _code
					symbol private misc first
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc in_style
					symbol private misc depth
					symbol private misc noactivity
					symbol private misc iter
					symbol private misc a
					symbol private misc ol
					symbol external misc plug_00179 --> /main/template/variables/c_iterator_var/c_iterator
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc plug_00180 --> /main/template/variables/c_depth_var/c_depth
					symbol external misc plug_00181 --> /main/template/variables/c_margin_var/c_margin
					symbol external misc ObjectTreeIterator --> /main/template/functions/ObjectTreeIterator_fn/ObjectTreeIterator
					symbol external misc EXTRAINDENT_BIT --> /main/template/constants/EXTRAINDENT_BIT_con/EXTRAINDENT_BIT
					symbol external misc Object --> /main/veneer/Object
					symbol external misc list_filter_permits --> /main/template/constants/list_filter_permits_con/list_filter_permits
					symbol external misc plug_00182 --> /main/template/variables/list_filter_routine_var/list_filter_routine
					symbol external misc START_ITF --> /main/template/constants/START_ITF_con/START_ITF
					symbol external misc ISARE_BIT --> /main/template/constants/ISARE_BIT_con/ISARE_BIT
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc NEWLINE_BIT --> /main/template/constants/NEWLINE_BIT_con/NEWLINE_BIT
					symbol external misc WriteListR --> /main/template/functions/WriteListR_fn/WriteListR
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00183 --> /main/connectors/plug_00183
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc LISTING_CONTENTS_ACT --> /main/template/constants/LISTING_CONTENTS_ACT_con/LISTING_CONTENTS_ACT
					symbol external misc parent --> /main/veneer/parent
					local first K_unchecked
					local in_style K_unchecked
					local depth K_unchecked
					local noactivity K_unchecked
					local iter K_unchecked
					local a K_unchecked
					local ol K_unchecked
					code
						inv !push
							val K_unchecked c_iterator
						inv !push
							val K_unchecked c_style
						inv !push
							val K_unchecked c_depth
						inv !push
							val K_unchecked c_margin
						inv !ifelse
							val K_unchecked iter
							code
								inv !store
									reference
										val K_unchecked c_iterator
									val K_unchecked iter
							code
								inv !store
									reference
										val K_unchecked c_iterator
									val K_unchecked ObjectTreeIterator
						inv !store
							reference
								val K_unchecked c_style
							val K_unchecked in_style
						inv !store
							reference
								val K_unchecked c_depth
							val K_unchecked depth
						inv !store
							reference
								val K_unchecked c_margin
							val K_unchecked 0
						inv !if
							inv !bitwiseand
								val K_unchecked in_style
								val K_unchecked EXTRAINDENT_BIT
							code
								inv !store
									reference
										val K_unchecked c_margin
									val K_unchecked 1
						inv !objectloop
							reference
								val K_unchecked a
							val K_unchecked Object
							inv !ofclass
								val K_unchecked a
								val K_unchecked Object
							code
								inv !give
									val K_unchecked a
									val K_unchecked list_filter_permits
								inv !if
									inv !and
										val K_unchecked list_filter_routine
										inv !eq
											inv list_filter_routine
												val K_unchecked a
											val K_unchecked 0
									code
										inv !take
											val K_unchecked a
											val K_unchecked list_filter_permits
						inv !store
							reference
								val K_unchecked first
							inv c_iterator
								val K_unchecked first
								val K_unchecked depth
								val K_unchecked 0
								val K_unchecked START_ITF
						inv !ifelse
							inv !eq
								val K_unchecked first
								val K_unchecked 0
							code
								inv !ifelse
									inv !ne
										inv !bitwiseand
											val K_unchecked in_style
											val K_unchecked ISARE_BIT
										val K_unchecked 0
									code
										inv plug_00165
											val K_unchecked 87
									code
										inv plug_00165
											val K_unchecked 89
								inv !if
									inv !ne
										inv !bitwiseand
											val K_unchecked in_style
											val K_unchecked NEWLINE_BIT
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "\n"
							code
								inv !ifelse
									inv !or
										val K_unchecked noactivity
										val K_unchecked iter
									code
										inv WriteListR
											val K_unchecked first
											val K_unchecked c_depth
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked say__p
											val K_unchecked 1
									code
										inv !objectloop
											reference
												val K_unchecked ol
											val K_unchecked plug_00183
											inv !provides
												val K_unchecked ol
												val K_unchecked list_together
											code
												inv BlkValueCopy
													inv !propertyvalue
														val K_unchecked ol
														val K_unchecked list_together
													val K_unchecked EMPTY_TEXT_VALUE
										inv CarryOutActivity
											val K_unchecked LISTING_CONTENTS_ACT
											inv parent
												val K_unchecked first
						inv !pull
							reference
								val K_unchecked c_margin
						inv !pull
							reference
								val K_unchecked c_depth
						inv !pull
							reference
								val K_unchecked c_style
						inv !pull
							reference
								val K_unchecked c_iterator
				constant WriteListFrom K_unchecked_function = WriteListFrom_B __assimilated=1
			package STANDARD_CONTENTS_LISTING_R_fn _function
				symbol public misc STANDARD_CONTENTS_LISTING_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STANDARD_CONTENTS_LISTING_R_B _code
					symbol external misc WriteListFrom --> /main/template/functions/WriteListFrom_fn/WriteListFrom
					symbol external misc child --> /main/veneer/child
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc plug_00180 --> /main/template/variables/c_depth_var/c_depth
					code
						inv WriteListFrom
							inv child
								val K_unchecked parameter_value
							val K_unchecked c_style
							val K_unchecked c_depth
							val K_unchecked 1
				constant STANDARD_CONTENTS_LISTING_R K_unchecked_function = STANDARD_CONTENTS_LISTING_R_B __assimilated=1
			package PartitionList_fn _function
				symbol public misc PartitionList
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PartitionList_B _code
					symbol private misc first
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc no_objs
					symbol private misc depth
					symbol private misc partition_classes
					symbol private misc partition_class_sizes
					symbol private misc i
					symbol private misc k
					symbol private misc l
					symbol private misc n
					symbol private misc m
					symbol external misc plug_00179 --> /main/template/variables/c_iterator_var/c_iterator
					symbol external misc plug_00184 --> /main/template/variables/lt_value_var/lt_value
					symbol external misc ADVANCE_ITF --> /main/template/constants/ADVANCE_ITF_con/ADVANCE_ITF
					symbol external misc ListEqual --> /main/template/functions/ListEqual_fn/ListEqual
					local first K_unchecked
					local no_objs K_unchecked
					local depth K_unchecked
					local partition_classes K_unchecked
					local partition_class_sizes K_unchecked
					local i K_unchecked
					local k K_unchecked
					local l K_unchecked
					local n K_unchecked
					local m K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_objs
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked partition_classes
											val K_unchecked i
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked n
							val K_unchecked 1
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked i
									val K_unchecked first
								inv !store
									reference
										val K_unchecked k
									val K_unchecked 0
							inv !lt
								val K_unchecked k
								val K_unchecked no_objs
							inv !sequential
								inv !store
									reference
										val K_unchecked i
									inv c_iterator
										val K_unchecked i
										val K_unchecked depth
										val K_unchecked lt_value
										val K_unchecked ADVANCE_ITF
								inv !postincrement
									reference
										val K_unchecked k
							code
								inv !if
									inv !eq
										inv !lookupbyte
											val K_unchecked partition_classes
											val K_unchecked k
										val K_unchecked 0
									code
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked partition_classes
													val K_unchecked k
											val K_unchecked n
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked partition_class_sizes
													val K_unchecked n
											val K_unchecked 1
										inv !for
											inv !sequential
												inv !store
													reference
														val K_unchecked l
													inv c_iterator
														val K_unchecked i
														val K_unchecked depth
														val K_unchecked lt_value
														val K_unchecked ADVANCE_ITF
												inv !store
													reference
														val K_unchecked m
													inv !plus
														val K_unchecked k
														val K_unchecked 1
											inv !and
												inv !ne
													val K_unchecked l
													val K_unchecked 0
												inv !lt
													val K_unchecked m
													val K_unchecked no_objs
											inv !sequential
												inv !store
													reference
														val K_unchecked l
													inv c_iterator
														val K_unchecked l
														val K_unchecked depth
														val K_unchecked lt_value
														val K_unchecked ADVANCE_ITF
												inv !postincrement
													reference
														val K_unchecked m
											code
												inv !if
													inv !and
														inv !eq
															inv !lookupbyte
																val K_unchecked partition_classes
																val K_unchecked m
															val K_unchecked 0
														inv ListEqual
															val K_unchecked i
															val K_unchecked l
													code
														inv !if
															inv !lt
																inv !lookupbyte
																	val K_unchecked partition_class_sizes
																	val K_unchecked n
																val K_unchecked 255
															code
																inv !postincrement
																	reference
																		inv !lookupbyte
																			val K_unchecked partition_class_sizes
																			val K_unchecked n
														inv !store
															reference
																inv !lookupbyte
																	val K_unchecked partition_classes
																	val K_unchecked m
															val K_unchecked n
										inv !if
											inv !lt
												val K_unchecked n
												val K_unchecked 255
											code
												inv !postincrement
													reference
														val K_unchecked n
						inv !postdecrement
							reference
								val K_unchecked n
						inv !return
							val K_unchecked n
				constant PartitionList K_unchecked_function = PartitionList_B __assimilated=1
			package ListEqual_fn _function
				symbol public misc ListEqual
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ListEqual_B _code
					symbol private misc o1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o2
					symbol external misc plural --> /main/template/properties/plural_prop/plural
					symbol external misc child --> /main/veneer/child
					symbol external misc WillRecurs --> /main/template/functions/WillRecurs_fn/WillRecurs
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc FULLINV_BIT --> /main/template/constants/FULLINV_BIT_con/FULLINV_BIT
					symbol external misc PARTINV_BIT --> /main/template/constants/PARTINV_BIT_con/PARTINV_BIT
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc light --> /main/template/properties/light_prop/light
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc Identical --> /main/template/functions/Identical_fn/Identical
					local o1 K_unchecked
					local o2 K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									inv !propertyvalue
										val K_unchecked o1
										val K_unchecked plural
									val K_unchecked 0
								inv !eq
									inv !propertyvalue
										val K_unchecked o2
										val K_unchecked plural
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !ne
									inv child
										val K_unchecked o1
									val K_unchecked 0
								inv !ne
									inv WillRecurs
										val K_unchecked o1
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !ne
									inv child
										val K_unchecked o2
									val K_unchecked 0
								inv !ne
									inv WillRecurs
										val K_unchecked o2
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked c_style
									inv !plus
										val K_unchecked FULLINV_BIT
										val K_unchecked PARTINV_BIT
								val K_unchecked 0
							code
								inv !if
									inv !or
										inv !and
											inv !hasnt
												val K_unchecked o1
												val K_unchecked worn
											inv !has
												val K_unchecked o2
												val K_unchecked worn
										inv !and
											inv !hasnt
												val K_unchecked o2
												val K_unchecked worn
											inv !has
												val K_unchecked o1
												val K_unchecked worn
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !or
										inv !and
											inv !hasnt
												val K_unchecked o1
												val K_unchecked light
											inv !has
												val K_unchecked o2
												val K_unchecked light
										inv !and
											inv !hasnt
												val K_unchecked o2
												val K_unchecked light
											inv !has
												val K_unchecked o1
												val K_unchecked light
									code
										inv !return
											val K_unchecked 0
								inv !ifelse
									inv !has
										val K_unchecked o1
										val K_unchecked container
									code
										inv !if
											inv !hasnt
												val K_unchecked o2
												val K_unchecked container
											code
												inv !return
													val K_unchecked 0
										inv !if
											inv !or
												inv !and
													inv !has
														val K_unchecked o1
														val K_unchecked open
													inv !hasnt
														val K_unchecked o2
														val K_unchecked open
												inv !and
													inv !has
														val K_unchecked o2
														val K_unchecked open
													inv !hasnt
														val K_unchecked o1
														val K_unchecked open
											code
												inv !return
													val K_unchecked 0
									code
										inv !if
											inv !has
												val K_unchecked o2
												val K_unchecked container
											code
												inv !return
													val K_unchecked 0
						inv !return
							inv Identical
								val K_unchecked o1
								val K_unchecked o2
				constant ListEqual K_unchecked_function = ListEqual_B __assimilated=1
			package WillRecurs_fn _function
				symbol public misc WillRecurs
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WillRecurs_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc ALWAYS_BIT --> /main/template/constants/ALWAYS_BIT_con/ALWAYS_BIT
					symbol external misc RECURSE_BIT --> /main/template/constants/RECURSE_BIT_con/RECURSE_BIT
					symbol external misc supporter --> /main/template/properties/supporter_prop/supporter
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc transparent --> /main/template/properties/transparent_prop/transparent
					local o K_unchecked
					code
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked c_style
									val K_unchecked ALWAYS_BIT
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								inv !bitwiseand
									val K_unchecked c_style
									val K_unchecked RECURSE_BIT
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !has
									val K_unchecked o
									val K_unchecked supporter
								inv !and
									inv !has
										val K_unchecked o
										val K_unchecked container
									inv !has
										val K_unchecked o
										inv !alternative
											val K_unchecked open
											val K_unchecked transparent
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant WillRecurs K_unchecked_function = WillRecurs_B __assimilated=1
			package NumberOfGroupsInList_fn _function
				symbol public misc NumberOfGroupsInList
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NumberOfGroupsInList_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc no_classes
					symbol private misc depth
					symbol private misc partition_classes
					symbol private misc partition_class_sizes
					symbol private misc no_groups
					symbol private misc cl
					symbol private misc memb
					symbol private misc k
					symbol private misc current_lt
					symbol private misc lt
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc plug_00179 --> /main/template/variables/c_iterator_var/c_iterator
					symbol external misc plug_00184 --> /main/template/variables/lt_value_var/lt_value
					symbol external misc ADVANCE_ITF --> /main/template/constants/ADVANCE_ITF_con/ADVANCE_ITF
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					local o K_unchecked
					local no_classes K_unchecked
					local depth K_unchecked
					local partition_classes K_unchecked
					local partition_class_sizes K_unchecked
					local no_groups K_unchecked
					local cl K_unchecked
					local memb K_unchecked
					local k K_unchecked
					local current_lt K_unchecked
					local lt K_unchecked
					code
						inv !store
							reference
								val K_unchecked current_lt
							val K_unchecked EMPTY_TEXT_VALUE
						inv !store
							reference
								val K_unchecked lt
							val K_unchecked EMPTY_TEXT_VALUE
						inv !store
							reference
								val K_unchecked no_groups
							val K_unchecked no_classes
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked cl
									val K_unchecked 1
								inv !sequential
									inv !store
										reference
											val K_unchecked memb
										val K_unchecked o
									inv !store
										reference
											val K_unchecked k
										val K_unchecked 0
							inv !le
								val K_unchecked cl
								val K_unchecked no_classes
							inv !postincrement
								reference
									val K_unchecked cl
							code
								inv !while
									inv !ne
										inv !lookupbyte
											val K_unchecked partition_classes
											val K_unchecked k
										val K_unchecked cl
									code
										inv !postincrement
											reference
												val K_unchecked k
										inv !store
											reference
												val K_unchecked memb
											inv c_iterator
												val K_unchecked memb
												val K_unchecked depth
												val K_unchecked lt_value
												val K_unchecked ADVANCE_ITF
								inv !if
									val K_unchecked memb
									code
										inv !store
											reference
												val K_unchecked lt
											inv !propertyvalue
												val K_unchecked memb
												val K_unchecked list_together
										inv !if
											inv !and
												inv !and
													inv !ne
														inv LT_Compare
															val K_unchecked lt
															val K_unchecked lt_value
														val K_unchecked 0
													inv !ne
														inv LT_Compare
															val K_unchecked lt
															val K_unchecked EMPTY_TEXT_VALUE
														val K_unchecked 0
												inv !eq
													inv LT_Compare
														val K_unchecked lt
														val K_unchecked current_lt
													val K_unchecked 0
											code
												inv !postdecrement
													reference
														val K_unchecked no_groups
										inv !store
											reference
												val K_unchecked current_lt
											val K_unchecked lt
						inv !return
							val K_unchecked no_groups
				constant NumberOfGroupsInList K_unchecked_function = NumberOfGroupsInList_B __assimilated=1
			package LT_Compare_fn _function
				symbol public misc LT_Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LT_Compare_B _code
					symbol private misc lt1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc lt2
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc TEXT_TY_IsSubstituted --> /main/template/functions/TEXT_TY_IsSubstituted_fn/TEXT_TY_IsSubstituted
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					local lt1 K_unchecked
					local lt2 K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked lt1
								val K_unchecked lt2
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked lt1
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked lt1
									val K_unchecked EMPTY_TEXT_VALUE
						inv !if
							inv !eq
								val K_unchecked lt2
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked lt2
									val K_unchecked EMPTY_TEXT_VALUE
						inv !if
							inv !eq
								inv TEXT_TY_IsSubstituted
									val K_unchecked lt1
								val K_unchecked 0
							code
								inv !if
									inv !eq
										inv TEXT_TY_IsSubstituted
											val K_unchecked lt2
										val K_unchecked 0
									code
										inv !return
											inv !minus
												inv !lookup
													val K_unchecked lt1
													val K_unchecked 1
												inv !lookup
													val K_unchecked lt2
													val K_unchecked 1
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !if
							inv !eq
								inv TEXT_TY_IsSubstituted
									val K_unchecked lt2
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !return
							inv BlkValueCompare
								val K_unchecked lt1
								val K_unchecked lt2
				constant LT_Compare K_unchecked_function = LT_Compare_B __assimilated=1
			package WriteListR_fn _function
				symbol public misc WriteListR
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteListR_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc depth
					symbol private misc from_start
					symbol private misc partition_classes
					symbol private misc partition_class_sizes
					symbol private misc cl
					symbol private misc memb
					symbol private misc index
					symbol private misc k2
					symbol private misc l
					symbol private misc m
					symbol private misc no_classes
					symbol private misc q
					symbol private misc groups_to_do
					symbol private misc current_lt
					symbol external misc plug_00179 --> /main/template/variables/c_iterator_var/c_iterator
					symbol external misc COALESCE_ITF --> /main/template/constants/COALESCE_ITF_con/COALESCE_ITF
					symbol external misc SEEK_ITF --> /main/template/constants/SEEK_ITF_con/SEEK_ITF
					symbol external misc plug_00184 --> /main/template/variables/lt_value_var/lt_value
					symbol external misc ADVANCE_ITF --> /main/template/constants/ADVANCE_ITF_con/ADVANCE_ITF
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc ISARE_BIT --> /main/template/constants/ISARE_BIT_con/ISARE_BIT
					symbol external misc SetLWI --> /main/template/functions/SetLWI_fn/SetLWI
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc NEWLINE_BIT --> /main/template/constants/NEWLINE_BIT_con/NEWLINE_BIT
					symbol external misc RequisitionStack --> /main/template/functions/RequisitionStack_fn/RequisitionStack
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTWRITERMEMORY --> /main/template/constants/RTP_LISTWRITERMEMORY_con/RTP_LISTWRITERMEMORY
					symbol external misc PartitionList --> /main/template/functions/PartitionList_fn/PartitionList
					symbol external misc NumberOfGroupsInList --> /main/template/functions/NumberOfGroupsInList_fn/NumberOfGroupsInList
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc plug_00186 --> /main/template/variables/listing_size_var/listing_size
					symbol external misc WriteMultiClassGroup --> /main/template/functions/WriteMultiClassGroup_fn/WriteMultiClassGroup
					symbol private label .GroupComplete
					symbol external misc WriteSingleClassGroup --> /main/template/functions/WriteSingleClassGroup_fn/WriteSingleClassGroup
					symbol external misc ENGLISH_BIT --> /main/template/constants/ENGLISH_BIT_con/ENGLISH_BIT
					symbol external misc FreeStack --> /main/template/functions/FreeStack_fn/FreeStack
					local o K_unchecked
					local depth K_unchecked
					local from_start K_unchecked
					local partition_classes K_unchecked
					local partition_class_sizes K_unchecked
					local cl K_unchecked
					local memb K_unchecked
					local index K_unchecked
					local k2 K_unchecked
					local l K_unchecked
					local m K_unchecked
					local no_classes K_unchecked
					local q K_unchecked
					local groups_to_do K_unchecked
					local current_lt K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked o
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							val K_unchecked from_start
							code
								inv !store
									reference
										val K_unchecked o
									inv c_iterator
										val K_unchecked o
										val K_unchecked depth
										val K_unchecked 0
										val K_unchecked COALESCE_ITF
						inv !store
							reference
								val K_unchecked o
							inv c_iterator
								val K_unchecked o
								val K_unchecked depth
								val K_unchecked 0
								val K_unchecked SEEK_ITF
						inv !if
							inv !eq
								val K_unchecked o
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked memb
									val K_unchecked o
								inv !store
									reference
										val K_unchecked index
									val K_unchecked 0
							val K_unchecked memb
							inv !store
								reference
									val K_unchecked memb
								inv c_iterator
									val K_unchecked memb
									val K_unchecked depth
									val K_unchecked lt_value
									val K_unchecked ADVANCE_ITF
							code
								inv !postincrement
									reference
										val K_unchecked index
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked c_style
									val K_unchecked ISARE_BIT
								val K_unchecked 0
							code
								inv SetLWI
									val K_unchecked index
									inv !unaryminus
										val K_unchecked 1
									val K_unchecked o
								inv plug_00165
									val K_unchecked 86
									val K_unchecked o
								inv !ifelse
									inv !ne
										inv !bitwiseand
											val K_unchecked c_style
											val K_unchecked NEWLINE_BIT
										val K_unchecked 0
									code
										inv !print
											val K_unchecked ":\n"
									code
										inv !printchar
											val K_unchecked 32
								inv !store
									reference
										val K_unchecked c_style
									inv !minus
										val K_unchecked c_style
										val K_unchecked ISARE_BIT
						inv !store
							reference
								val K_unchecked partition_classes
							inv RequisitionStack
								inv !plus
									inv !divide
										val K_unchecked index
										val K_unchecked plug_00139
									val K_unchecked 2
						inv !store
							reference
								val K_unchecked partition_class_sizes
							inv RequisitionStack
								inv !plus
									inv !divide
										val K_unchecked index
										val K_unchecked plug_00139
									val K_unchecked 2
						inv !if
							inv !or
								inv !eq
									val K_unchecked partition_classes
									val K_unchecked 0
								inv !eq
									val K_unchecked partition_class_sizes
									val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_LISTWRITERMEMORY
						inv !store
							reference
								val K_unchecked no_classes
							inv PartitionList
								val K_unchecked o
								val K_unchecked index
								val K_unchecked depth
								val K_unchecked partition_classes
								val K_unchecked partition_class_sizes
						inv !store
							reference
								val K_unchecked groups_to_do
							inv NumberOfGroupsInList
								val K_unchecked o
								val K_unchecked no_classes
								val K_unchecked depth
								val K_unchecked partition_classes
								val K_unchecked partition_class_sizes
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked cl
									val K_unchecked 1
								inv !sequential
									inv !store
										reference
											val K_unchecked memb
										val K_unchecked o
									inv !sequential
										inv !store
											reference
												val K_unchecked index
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked current_lt
											val K_unchecked EMPTY_TEXT_VALUE
							inv !gt
								val K_unchecked groups_to_do
								val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked cl
							code
								inv !while
									inv !ne
										inv !lookupbyte
											val K_unchecked partition_classes
											val K_unchecked index
										val K_unchecked cl
									code
										inv !postincrement
											reference
												val K_unchecked index
										inv !store
											reference
												val K_unchecked memb
											inv c_iterator
												val K_unchecked memb
												val K_unchecked depth
												val K_unchecked lt_value
												val K_unchecked ADVANCE_ITF
										inv !if
											inv !eq
												val K_unchecked memb
												val K_unchecked 0
											code
												inv !print
													val K_unchecked "*** Error in list-writer ***\n"
												inv !return
													val K_unchecked 1
								inv !ifelse
									inv !or
										inv !eq
											inv LT_Compare
												inv !propertyvalue
													val K_unchecked memb
													val K_unchecked list_together
												val K_unchecked lt_value
											val K_unchecked 0
										inv !eq
											inv LT_Compare
												inv !propertyvalue
													val K_unchecked memb
													val K_unchecked list_together
												val K_unchecked EMPTY_TEXT_VALUE
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked current_lt
											val K_unchecked EMPTY_TEXT_VALUE
									code
										inv !if
											inv !eq
												inv LT_Compare
													inv !propertyvalue
														val K_unchecked memb
														val K_unchecked list_together
													val K_unchecked current_lt
												val K_unchecked 0
											code
												inv !continue
										inv !push
											val K_unchecked listing_size
										inv !store
											reference
												val K_unchecked q
											val K_unchecked memb
										inv !store
											reference
												val K_unchecked listing_size
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked l
											val K_unchecked index
										inv !store
											reference
												val K_unchecked m
											val K_unchecked cl
										inv !while
											inv !and
												inv !lt
													val K_unchecked m
													val K_unchecked no_classes
												inv !eq
													inv LT_Compare
														inv !propertyvalue
															val K_unchecked q
															val K_unchecked list_together
														inv !propertyvalue
															val K_unchecked memb
															val K_unchecked list_together
													val K_unchecked 0
											code
												inv !postincrement
													reference
														val K_unchecked m
												inv !while
													inv !ne
														inv !lookupbyte
															val K_unchecked partition_classes
															val K_unchecked l
														val K_unchecked m
													code
														inv !postincrement
															reference
																val K_unchecked l
														inv !store
															reference
																val K_unchecked q
															inv c_iterator
																val K_unchecked q
																val K_unchecked depth
																val K_unchecked lt_value
																val K_unchecked ADVANCE_ITF
												inv !if
													inv !eq
														inv LT_Compare
															inv !propertyvalue
																val K_unchecked q
																val K_unchecked list_together
															inv !propertyvalue
																val K_unchecked memb
																val K_unchecked list_together
														val K_unchecked 0
													code
														inv !postincrement
															reference
																val K_unchecked listing_size
										inv !if
											inv !gt
												val K_unchecked listing_size
												val K_unchecked 1
											code
												inv WriteMultiClassGroup
													val K_unchecked cl
													val K_unchecked memb
													val K_unchecked depth
													val K_unchecked partition_class_sizes
												inv !store
													reference
														val K_unchecked current_lt
													inv !propertyvalue
														val K_unchecked memb
														val K_unchecked list_together
												inv !jump
													lab .GroupComplete
										inv !store
											reference
												val K_unchecked current_lt
											val K_unchecked EMPTY_TEXT_VALUE
										inv !pull
											reference
												val K_unchecked listing_size
								inv WriteSingleClassGroup
									val K_unchecked cl
									val K_unchecked memb
									val K_unchecked depth
									inv !lookupbyte
										val K_unchecked partition_class_sizes
										val K_unchecked cl
								.GroupComplete
								inv !postdecrement
									reference
										val K_unchecked groups_to_do
								inv !if
									inv !ne
										inv !bitwiseand
											val K_unchecked c_style
											val K_unchecked ENGLISH_BIT
										val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked groups_to_do
												val K_unchecked 1
											code
												inv plug_00165
													val K_unchecked 67
										inv !if
											inv !gt
												val K_unchecked groups_to_do
												val K_unchecked 1
											code
												inv !print
													val K_unchecked ", "
						inv FreeStack
							val K_unchecked partition_class_sizes
						inv FreeStack
							val K_unchecked partition_classes
				constant WriteListR K_unchecked_function = WriteListR_B __assimilated=1
			package WriteMultiClassGroup_fn _function
				symbol public misc WriteMultiClassGroup
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteMultiClassGroup_B _code
					symbol private misc cl
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc memb
					symbol private misc depth
					symbol private misc partition_class_sizes
					symbol private misc pv
					symbol private misc q
					symbol private misc k2
					symbol private misc l
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc INDENT_BIT --> /main/template/constants/INDENT_BIT_con/INDENT_BIT
					symbol external misc PrintSpaces --> /main/template/functions/PrintSpaces_fn/PrintSpaces
					symbol external misc plug_00181 --> /main/template/variables/c_margin_var/c_margin
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc GROUPING_TOGETHER_ACT --> /main/template/constants/GROUPING_TOGETHER_ACT_con/GROUPING_TOGETHER_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc NEWLINE_BIT --> /main/template/constants/NEWLINE_BIT_con/NEWLINE_BIT
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc TEXT_TY_IsSubstituted --> /main/template/functions/TEXT_TY_IsSubstituted_fn/TEXT_TY_IsSubstituted
					symbol external misc plug_00187 --> /main/template/variables/inventory_stage_var/inventory_stage
					symbol external misc plug_00146 --> /main/template/variables/parser_one_var/parser_one
					symbol external misc plug_00188 --> /main/template/variables/parser_two_var/parser_two
					symbol private label .Omit__Sublist2
					symbol external misc plug_00186 --> /main/template/variables/listing_size_var/listing_size
					symbol external misc EnglishNumber --> /main/template/functions/EnglishNumber_fn/EnglishNumber
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc ENGLISH_BIT --> /main/template/constants/ENGLISH_BIT_con/ENGLISH_BIT
					symbol external misc plug_00184 --> /main/template/variables/lt_value_var/lt_value
					symbol external misc plug_00189 --> /main/template/variables/listing_together_var/listing_together
					symbol external misc WriteListR --> /main/template/functions/WriteListR_fn/WriteListR
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					local cl K_unchecked
					local memb K_unchecked
					local depth K_unchecked
					local partition_class_sizes K_unchecked
					local pv K_unchecked
					local q K_unchecked
					local k2 K_unchecked
					local l K_unchecked
					code
						inv !store
							reference
								val K_unchecked q
							val K_unchecked c_style
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked c_style
									val K_unchecked INDENT_BIT
								val K_unchecked 0
							code
								inv PrintSpaces
									inv !times
										val K_unchecked 2
										inv !plus
											val K_unchecked depth
											val K_unchecked c_margin
						inv BeginActivity
							val K_unchecked GROUPING_TOGETHER_ACT
							val K_unchecked memb
						inv !ifelse
							inv ForActivity
								val K_unchecked GROUPING_TOGETHER_ACT
								val K_unchecked memb
							code
								inv !store
									reference
										val K_unchecked c_style
									inv !bitwiseand
										val K_unchecked c_style
										inv !bitwisenot
											val K_unchecked NEWLINE_BIT
							code
								inv !store
									reference
										val K_unchecked pv
									inv !propertyvalue
										val K_unchecked memb
										val K_unchecked list_together
								inv !ifelse
									inv !eq
										inv TEXT_TY_IsSubstituted
											val K_unchecked pv
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked inventory_stage
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked parser_one
											val K_unchecked memb
										inv !store
											reference
												val K_unchecked parser_two
											inv !plus
												val K_unchecked depth
												val K_unchecked c_margin
										inv !if
											inv !eq
												inv !indirect0
													inv !lookup
														val K_unchecked pv
														val K_unchecked 1
												val K_unchecked 1
											code
												inv !jump
													lab .Omit__Sublist2
									code
										inv !if
											val K_unchecked pv
											code
												inv !store
													reference
														val K_unchecked k2
													val K_unchecked 0
												inv !for
													inv !store
														reference
															val K_unchecked l
														val K_unchecked 0
													inv !lt
														val K_unchecked l
														val K_unchecked listing_size
													inv !postincrement
														reference
															val K_unchecked l
													code
														inv !store
															reference
																val K_unchecked k2
															inv !plus
																val K_unchecked k2
																inv !lookupbyte
																	val K_unchecked partition_class_sizes
																	inv !plus
																		val K_unchecked l
																		val K_unchecked cl
												inv EnglishNumber
													val K_unchecked k2
												inv !print
													val K_unchecked " "
												inv TEXT_TY_Say
													val K_unchecked pv
												inv !if
													inv !ne
														inv !bitwiseand
															val K_unchecked c_style
															val K_unchecked ENGLISH_BIT
														val K_unchecked 0
													code
														inv !print
															val K_unchecked " ("
												inv !if
													inv !ne
														inv !bitwiseand
															val K_unchecked c_style
															val K_unchecked INDENT_BIT
														val K_unchecked 0
													code
														inv !print
															val K_unchecked ":\n"
								inv !postincrement
									reference
										val K_unchecked c_margin
								inv !push
									val K_unchecked lt_value
								inv !push
									val K_unchecked listing_together
								inv !push
									val K_unchecked listing_size
								inv !store
									reference
										val K_unchecked lt_value
									inv !propertyvalue
										val K_unchecked memb
										val K_unchecked list_together
								inv !store
									reference
										val K_unchecked listing_together
									val K_unchecked memb
								inv WriteListR
									val K_unchecked memb
									val K_unchecked depth
									val K_unchecked 0
								inv !pull
									reference
										val K_unchecked listing_size
								inv !pull
									reference
										val K_unchecked listing_together
								inv !pull
									reference
										val K_unchecked lt_value
								inv !postdecrement
									reference
										val K_unchecked c_margin
								inv !store
									reference
										val K_unchecked pv
									inv !propertyvalue
										val K_unchecked memb
										val K_unchecked list_together
								inv !ifelse
									inv !eq
										inv TEXT_TY_IsSubstituted
											val K_unchecked pv
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked inventory_stage
											val K_unchecked 2
										inv !store
											reference
												val K_unchecked parser_one
											val K_unchecked memb
										inv !store
											reference
												val K_unchecked parser_two
											inv !plus
												val K_unchecked depth
												val K_unchecked c_margin
										inv !indirect0
											inv !lookup
												val K_unchecked pv
												val K_unchecked 1
									code
										inv !if
											inv !ne
												inv LT_Compare
													val K_unchecked pv
													val K_unchecked EMPTY_TEXT_VALUE
												val K_unchecked 0
											code
												inv !if
													inv !ne
														inv !bitwiseand
															val K_unchecked q
															val K_unchecked ENGLISH_BIT
														val K_unchecked 0
													code
														inv !print
															val K_unchecked ")"
								.Omit__Sublist2
						inv EndActivity
							val K_unchecked GROUPING_TOGETHER_ACT
							val K_unchecked memb
						inv !if
							inv !and
								inv !ne
									inv !bitwiseand
										val K_unchecked q
										val K_unchecked NEWLINE_BIT
									val K_unchecked 0
								inv !eq
									inv !bitwiseand
										val K_unchecked c_style
										val K_unchecked NEWLINE_BIT
									val K_unchecked 0
							code
								inv !print
									val K_unchecked "\n"
						inv !store
							reference
								val K_unchecked c_style
							val K_unchecked q
				constant WriteMultiClassGroup K_unchecked_function = WriteMultiClassGroup_B __assimilated=1
			package WriteSingleClassGroup_fn _function
				symbol public misc WriteSingleClassGroup
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteSingleClassGroup_B _code
					symbol private misc cl
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc memb
					symbol private misc depth
					symbol private misc size
					symbol private misc q
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc INDENT_BIT --> /main/template/constants/INDENT_BIT_con/INDENT_BIT
					symbol external misc PrintSpaces --> /main/template/functions/PrintSpaces_fn/PrintSpaces
					symbol external misc plug_00181 --> /main/template/variables/c_margin_var/c_margin
					symbol external misc NOARTICLE_BIT --> /main/template/constants/NOARTICLE_BIT_con/NOARTICLE_BIT
					symbol external misc DEFART_BIT --> /main/template/constants/DEFART_BIT_con/DEFART_BIT
					symbol external misc CFIRSTART_BIT --> /main/template/constants/CFIRSTART_BIT_con/CFIRSTART_BIT
					symbol external misc CIndefArt --> /main/template/functions/CIndefArt_fn/CIndefArt
					symbol external misc PrefaceByArticle --> /main/template/functions/PrefaceByArticle_fn/PrefaceByArticle
					symbol external misc plug_00186 --> /main/template/variables/listing_size_var/listing_size
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc PRINTING_A_NUMBER_OF_ACT --> /main/template/constants/PRINTING_A_NUMBER_OF_ACT_con/PRINTING_A_NUMBER_OF_ACT
					symbol external misc pluralname --> /main/template/properties/pluralname_prop/pluralname
					symbol external misc WriteAfterEntry --> /main/template/functions/WriteAfterEntry_fn/WriteAfterEntry
					local cl K_unchecked
					local memb K_unchecked
					local depth K_unchecked
					local size K_unchecked
					local q K_unchecked
					code
						inv !store
							reference
								val K_unchecked q
							val K_unchecked c_style
						inv !if
							inv !bitwiseand
								val K_unchecked c_style
								val K_unchecked INDENT_BIT
							code
								inv PrintSpaces
									inv !times
										val K_unchecked 2
										inv !plus
											val K_unchecked depth
											val K_unchecked c_margin
						inv !ifelse
							inv !eq
								val K_unchecked size
								val K_unchecked 1
							code
								inv !ifelse
									inv !ne
										inv !bitwiseand
											val K_unchecked c_style
											val K_unchecked NOARTICLE_BIT
										val K_unchecked 0
									code
										inv !printname
											val K_unchecked memb
									code
										inv !ifelse
											inv !bitwiseand
												val K_unchecked c_style
												val K_unchecked DEFART_BIT
											code
												inv !ifelse
													inv !and
														inv !eq
															val K_unchecked cl
															val K_unchecked 1
														inv !bitwiseand
															val K_unchecked c_style
															val K_unchecked CFIRSTART_BIT
													code
														inv !printcdef
															val K_unchecked memb
													code
														inv !printdef
															val K_unchecked memb
											code
												inv !ifelse
													inv !and
														inv !eq
															val K_unchecked cl
															val K_unchecked 1
														inv !bitwiseand
															val K_unchecked c_style
															val K_unchecked CFIRSTART_BIT
													code
														inv CIndefArt
															val K_unchecked memb
													code
														inv !printindef
															val K_unchecked memb
							code
								inv !if
									inv !bitwiseand
										val K_unchecked c_style
										val K_unchecked DEFART_BIT
									code
										inv !ifelse
											inv !and
												inv !eq
													val K_unchecked cl
													val K_unchecked 1
												inv !bitwiseand
													val K_unchecked c_style
													val K_unchecked CFIRSTART_BIT
											code
												inv PrefaceByArticle
													val K_unchecked memb
													val K_unchecked 0
													val K_unchecked size
											code
												inv PrefaceByArticle
													val K_unchecked memb
													val K_unchecked 1
													val K_unchecked size
								inv !push
									val K_unchecked listing_size
								inv !store
									reference
										val K_unchecked listing_size
									val K_unchecked size
								inv CarryOutActivity
									val K_unchecked PRINTING_A_NUMBER_OF_ACT
									val K_unchecked memb
								inv !pull
									reference
										val K_unchecked listing_size
						inv !ifelse
							inv !and
								inv !gt
									val K_unchecked size
									val K_unchecked 1
								inv !hasnt
									val K_unchecked memb
									val K_unchecked pluralname
							code
								inv !give
									val K_unchecked memb
									val K_unchecked pluralname
								inv WriteAfterEntry
									val K_unchecked memb
									val K_unchecked depth
								inv !take
									val K_unchecked memb
									val K_unchecked pluralname
							code
								inv WriteAfterEntry
									val K_unchecked memb
									val K_unchecked depth
						inv !store
							reference
								val K_unchecked c_style
							val K_unchecked q
				constant WriteSingleClassGroup K_unchecked_function = WriteSingleClassGroup_B __assimilated=1
			package WriteAfterEntry_fn _function
				symbol public misc WriteAfterEntry
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteAfterEntry_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc depth
					symbol private misc p
					symbol private misc recurse_flag
					symbol private misc parenth_flag
					symbol private misc eldest_child
					symbol private misc child_count
					symbol private misc combo
					symbol external misc plug_00187 --> /main/template/variables/inventory_stage_var/inventory_stage
					symbol external misc plug_00176 --> /main/template/variables/c_style_var/c_style
					symbol external misc PARTINV_BIT --> /main/template/constants/PARTINV_BIT_con/PARTINV_BIT
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc PRINTING_ROOM_DESC_DETAILS_ACT --> /main/template/constants/PRINTING_ROOM_DESC_DETAILS_ACT_con/PRINTING_ROOM_DESC_DETAILS_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc light --> /main/template/properties/light_prop/light
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc transparent --> /main/template/properties/transparent_prop/transparent
					symbol external misc child --> /main/veneer/child
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					symbol external misc FULLINV_BIT --> /main/template/constants/FULLINV_BIT_con/FULLINV_BIT
					symbol external misc PRINTING_INVENTORY_DETAILS_ACT --> /main/template/constants/PRINTING_INVENTORY_DETAILS_ACT_con/PRINTING_INVENTORY_DETAILS_ACT
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc openable --> /main/template/properties/openable_prop/openable
					symbol external misc lockable --> /main/template/properties/lockable_prop/lockable
					symbol external misc locked --> /main/template/properties/locked_prop/locked
					symbol external misc plug_00190 --> /main/connectors/plug_00190
					symbol external misc CONCEAL_BIT --> /main/template/constants/CONCEAL_BIT_con/CONCEAL_BIT
					symbol external misc ConcealedFromLists --> /main/template/functions/ConcealedFromLists_fn/ConcealedFromLists
					symbol external misc list_filter_permits --> /main/template/constants/list_filter_permits_con/list_filter_permits
					symbol external misc ALWAYS_BIT --> /main/template/constants/ALWAYS_BIT_con/ALWAYS_BIT
					symbol external misc ENGLISH_BIT --> /main/template/constants/ENGLISH_BIT_con/ENGLISH_BIT
					symbol external misc RECURSE_BIT --> /main/template/constants/RECURSE_BIT_con/RECURSE_BIT
					symbol external misc supporter --> /main/template/properties/supporter_prop/supporter
					symbol external misc TERSE_BIT --> /main/template/constants/TERSE_BIT_con/TERSE_BIT
					symbol external misc SetLWI --> /main/template/functions/SetLWI_fn/SetLWI
					symbol external misc NEWLINE_BIT --> /main/template/constants/NEWLINE_BIT_con/NEWLINE_BIT
					symbol external misc plug_00184 --> /main/template/variables/lt_value_var/lt_value
					symbol external misc plug_00189 --> /main/template/variables/listing_together_var/listing_together
					symbol external misc plug_00186 --> /main/template/variables/listing_size_var/listing_size
					symbol external misc plug_00179 --> /main/template/variables/c_iterator_var/c_iterator
					symbol external misc ObjectTreeIterator --> /main/template/functions/ObjectTreeIterator_fn/ObjectTreeIterator
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc WriteListR --> /main/template/functions/WriteListR_fn/WriteListR
					local o K_unchecked
					local depth K_unchecked
					local p K_unchecked
					local recurse_flag K_unchecked
					local parenth_flag K_unchecked
					local eldest_child K_unchecked
					local child_count K_unchecked
					local combo K_unchecked
					code
						inv !store
							reference
								val K_unchecked inventory_stage
							val K_unchecked 2
						inv !if
							inv !bitwiseand
								val K_unchecked c_style
								val K_unchecked PARTINV_BIT
							code
								inv BeginActivity
									val K_unchecked PRINTING_ROOM_DESC_DETAILS_ACT
									val K_unchecked o
								inv !if
									inv !eq
										inv ForActivity
											val K_unchecked PRINTING_ROOM_DESC_DETAILS_ACT
											val K_unchecked o
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked combo
											val K_unchecked 0
										inv !if
											inv !and
												inv !has
													val K_unchecked o
													val K_unchecked light
												inv !hasnt
													val K_unchecked location
													val K_unchecked light
											code
												inv !store
													reference
														val K_unchecked combo
													inv !plus
														val K_unchecked combo
														val K_unchecked 1
										inv !if
											inv !and
												inv !has
													val K_unchecked o
													val K_unchecked container
												inv !hasnt
													val K_unchecked o
													val K_unchecked open
											code
												inv !store
													reference
														val K_unchecked combo
													inv !plus
														val K_unchecked combo
														val K_unchecked 2
										inv !if
											inv !and
												inv !and
													inv !has
														val K_unchecked o
														val K_unchecked container
													inv !or
														inv !has
															val K_unchecked o
															val K_unchecked open
														inv !has
															val K_unchecked o
															val K_unchecked transparent
												inv !eq
													inv child
														val K_unchecked o
													val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked combo
													inv !plus
														val K_unchecked combo
														val K_unchecked 4
										inv !if
											val K_unchecked combo
											code
												inv plug_00165
													val K_unchecked 65
										inv !switch
											val K_unchecked combo
											code
												inv !case
													val K_unchecked 1
													code
														inv plug_00165
															val K_unchecked 68
															val K_unchecked o
												inv !case
													val K_unchecked 2
													code
														inv plug_00165
															val K_unchecked 69
															val K_unchecked o
												inv !case
													val K_unchecked 3
													code
														inv plug_00165
															val K_unchecked 72
															val K_unchecked o
												inv !case
													val K_unchecked 4
													code
														inv plug_00165
															val K_unchecked 70
															val K_unchecked o
												inv !case
													val K_unchecked 5
													code
														inv plug_00165
															val K_unchecked 73
															val K_unchecked o
												inv !case
													val K_unchecked 6
													code
														inv plug_00165
															val K_unchecked 71
															val K_unchecked o
												inv !case
													val K_unchecked 7
													code
														inv plug_00165
															val K_unchecked 74
															val K_unchecked o
										inv !if
											val K_unchecked combo
											code
												inv plug_00165
													val K_unchecked 66
								inv EndActivity
									val K_unchecked PRINTING_ROOM_DESC_DETAILS_ACT
									val K_unchecked o
						inv !if
							inv !bitwiseand
								val K_unchecked c_style
								val K_unchecked FULLINV_BIT
							code
								inv BeginActivity
									val K_unchecked PRINTING_INVENTORY_DETAILS_ACT
									val K_unchecked o
								inv !if
									inv !eq
										inv ForActivity
											val K_unchecked PRINTING_INVENTORY_DETAILS_ACT
											val K_unchecked o
										val K_unchecked 0
									code
										inv !ifelse
											inv !and
												inv !has
													val K_unchecked o
													val K_unchecked light
												inv !has
													val K_unchecked o
													val K_unchecked worn
											code
												inv plug_00165
													val K_unchecked 65
												inv plug_00165
													val K_unchecked 75
													val K_unchecked o
												inv !store
													reference
														val K_unchecked parenth_flag
													val K_unchecked 1
											code
												inv !if
													inv !has
														val K_unchecked o
														val K_unchecked light
													code
														inv plug_00165
															val K_unchecked 65
														inv plug_00165
															val K_unchecked 68
															val K_unchecked o
														inv !store
															reference
																val K_unchecked parenth_flag
															val K_unchecked 1
												inv !if
													inv !has
														val K_unchecked o
														val K_unchecked worn
													code
														inv plug_00165
															val K_unchecked 65
														inv plug_00165
															val K_unchecked 76
															val K_unchecked o
														inv !store
															reference
																val K_unchecked parenth_flag
															val K_unchecked 1
										inv !if
											inv !has
												val K_unchecked o
												val K_unchecked container
											code
												inv !ifelse
													inv !has
														val K_unchecked o
														val K_unchecked openable
													code
														inv !ifelse
															val K_unchecked parenth_flag
															code
																inv plug_00165
																	val K_unchecked 67
															code
																inv plug_00165
																	val K_unchecked 65
																	val K_unchecked o
														inv !ifelse
															inv !has
																val K_unchecked o
																val K_unchecked open
															code
																inv !ifelse
																	inv child
																		val K_unchecked o
																	code
																		inv plug_00165
																			val K_unchecked 77
																			val K_unchecked o
																	code
																		inv plug_00165
																			val K_unchecked 78
																			val K_unchecked o
															code
																inv !ifelse
																	inv !and
																		inv !has
																			val K_unchecked o
																			val K_unchecked lockable
																		inv !has
																			val K_unchecked o
																			val K_unchecked locked
																	code
																		inv plug_00165
																			val K_unchecked 80
																			val K_unchecked o
																	code
																		inv plug_00165
																			val K_unchecked 79
																			val K_unchecked o
														inv !store
															reference
																val K_unchecked parenth_flag
															val K_unchecked 1
													code
														inv !if
															inv !and
																inv !eq
																	inv child
																		val K_unchecked o
																	val K_unchecked 0
																inv !has
																	val K_unchecked o
																	val K_unchecked transparent
															code
																inv !ifelse
																	val K_unchecked parenth_flag
																	code
																		inv plug_00165
																			val K_unchecked 67
																		inv plug_00165
																			val K_unchecked 70
																	code
																		inv plug_00165
																			val K_unchecked 65
																		inv plug_00165
																			val K_unchecked 70
																		inv plug_00165
																			val K_unchecked 66
										inv !if
											val K_unchecked parenth_flag
											code
												inv plug_00165
													val K_unchecked 66
								inv EndActivity
									val K_unchecked PRINTING_INVENTORY_DETAILS_ACT
									val K_unchecked o
						inv !store
							reference
								val K_unchecked child_count
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked eldest_child
							val K_unchecked 0
						inv !objectloop
							reference
								val K_unchecked p
							val K_unchecked plug_00190
							inv !in
								val K_unchecked p
								val K_unchecked o
							code
								inv !if
									inv !or
										inv !eq
											inv !bitwiseand
												val K_unchecked c_style
												val K_unchecked CONCEAL_BIT
											val K_unchecked 0
										inv !eq
											inv ConcealedFromLists
												val K_unchecked p
											val K_unchecked 0
									code
										inv !if
											inv !has
												val K_unchecked p
												val K_unchecked list_filter_permits
											code
												inv !postincrement
													reference
														val K_unchecked child_count
												inv !if
													inv !eq
														val K_unchecked eldest_child
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked eldest_child
															val K_unchecked p
						inv !if
							inv !and
								val K_unchecked child_count
								inv !bitwiseand
									val K_unchecked c_style
									val K_unchecked ALWAYS_BIT
							code
								inv !if
									inv !bitwiseand
										val K_unchecked c_style
										val K_unchecked ENGLISH_BIT
									code
										inv !print
											val K_unchecked " "
										inv plug_00165
											val K_unchecked 81
											val K_unchecked o
										inv !print
											val K_unchecked " "
								inv !store
									reference
										val K_unchecked recurse_flag
									val K_unchecked 1
						inv !if
							inv !and
								val K_unchecked child_count
								inv !bitwiseand
									val K_unchecked c_style
									val K_unchecked RECURSE_BIT
							code
								inv !if
									inv !has
										val K_unchecked o
										val K_unchecked supporter
									code
										inv !if
											inv !bitwiseand
												val K_unchecked c_style
												val K_unchecked ENGLISH_BIT
											code
												inv !ifelse
													inv !bitwiseand
														val K_unchecked c_style
														val K_unchecked TERSE_BIT
													code
														inv plug_00165
															val K_unchecked 65
															val K_unchecked o
														inv plug_00165
															val K_unchecked 82
															val K_unchecked o
													code
														inv plug_00165
															val K_unchecked 83
															val K_unchecked o
										inv !store
											reference
												val K_unchecked recurse_flag
											val K_unchecked 1
								inv !if
									inv !and
										inv !has
											val K_unchecked o
											val K_unchecked container
										inv !or
											inv !has
												val K_unchecked o
												val K_unchecked open
											inv !has
												val K_unchecked o
												val K_unchecked transparent
									code
										inv !if
											inv !bitwiseand
												val K_unchecked c_style
												val K_unchecked ENGLISH_BIT
											code
												inv !ifelse
													inv !bitwiseand
														val K_unchecked c_style
														val K_unchecked TERSE_BIT
													code
														inv plug_00165
															val K_unchecked 65
															val K_unchecked o
														inv plug_00165
															val K_unchecked 84
															val K_unchecked o
													code
														inv plug_00165
															val K_unchecked 85
															val K_unchecked o
										inv !store
											reference
												val K_unchecked recurse_flag
											val K_unchecked 1
						inv !if
							inv !and
								val K_unchecked recurse_flag
								inv !bitwiseand
									val K_unchecked c_style
									val K_unchecked ENGLISH_BIT
							code
								inv SetLWI
									val K_unchecked child_count
									inv !unaryminus
										val K_unchecked 1
									val K_unchecked eldest_child
								inv plug_00165
									val K_unchecked 86
									val K_unchecked o
								inv !print
									val K_unchecked " "
						inv !if
							inv !bitwiseand
								val K_unchecked c_style
								val K_unchecked NEWLINE_BIT
							code
								inv !print
									val K_unchecked "\n"
						inv !if
							val K_unchecked recurse_flag
							code
								inv !store
									reference
										val K_unchecked o
									inv child
										val K_unchecked o
								inv !push
									val K_unchecked lt_value
								inv !push
									val K_unchecked listing_together
								inv !push
									val K_unchecked listing_size
								inv !push
									val K_unchecked c_iterator
								inv !store
									reference
										val K_unchecked c_iterator
									val K_unchecked ObjectTreeIterator
								inv !store
									reference
										val K_unchecked lt_value
									val K_unchecked EMPTY_TEXT_VALUE
								inv !store
									reference
										val K_unchecked listing_together
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked listing_size
									val K_unchecked 0
								inv WriteListR
									val K_unchecked o
									inv !plus
										val K_unchecked depth
										val K_unchecked 1
									val K_unchecked 1
								inv !pull
									reference
										val K_unchecked c_iterator
								inv !pull
									reference
										val K_unchecked listing_size
								inv !pull
									reference
										val K_unchecked listing_together
								inv !pull
									reference
										val K_unchecked lt_value
								inv !if
									inv !bitwiseand
										val K_unchecked c_style
										val K_unchecked TERSE_BIT
									code
										inv plug_00165
											val K_unchecked 66
				constant WriteAfterEntry K_unchecked_function = WriteAfterEntry_B __assimilated=1
			package LIST_WRITER_INTERNAL_R_fn _function
				symbol public misc LIST_WRITER_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_WRITER_INTERNAL_R_B _code
					code
				constant LIST_WRITER_INTERNAL_R K_unchecked_function = LIST_WRITER_INTERNAL_R_B __assimilated=1
			package SayPhraseName_fn _function
				symbol public misc SayPhraseName
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SayPhraseName_B _code
					symbol private misc closure
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local closure K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked closure
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "nothing"
							code
								inv !printstring
									inv !lookup
										val K_unchecked closure
										val K_unchecked 2
				constant SayPhraseName K_unchecked_function = SayPhraseName_B __assimilated=1
			package KindAtomic_fn _function
				symbol public misc KindAtomic
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package KindAtomic_B _code
					symbol private misc kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00191 --> /main/connectors/plug_00191
					local kind K_unchecked
					code
						inv !if
							inv !and
								inv !ge
									val K_unchecked kind
									val K_unchecked 0
								inv !lt
									val K_unchecked kind
									val K_unchecked plug_00191
							code
								inv !return
									val K_unchecked kind
						inv !return
							inv !lookup
								val K_unchecked kind
								val K_unchecked 0
				constant KindAtomic K_unchecked_function = KindAtomic_B __assimilated=1
			package KindBaseArity_fn _function
				symbol public misc KindBaseArity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package KindBaseArity_B _code
					symbol private misc kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00191 --> /main/connectors/plug_00191
					local kind K_unchecked
					code
						inv !if
							inv !and
								inv !ge
									val K_unchecked kind
									val K_unchecked 0
								inv !lt
									val K_unchecked kind
									val K_unchecked plug_00191
							code
								inv !return
									val K_unchecked 0
						inv !return
							inv !lookup
								val K_unchecked kind
								val K_unchecked 1
				constant KindBaseArity K_unchecked_function = KindBaseArity_B __assimilated=1
			package KindBaseTerm_fn _function
				symbol public misc KindBaseTerm
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package KindBaseTerm_B _code
					symbol private misc kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol external misc plug_00191 --> /main/connectors/plug_00191
					symbol external misc plug_00192 --> /main/connectors/plug_00192
					local kind K_unchecked
					local n K_unchecked
					code
						inv !if
							inv !and
								inv !ge
									val K_unchecked kind
									val K_unchecked 0
								inv !lt
									val K_unchecked kind
									val K_unchecked plug_00191
							code
								inv !return
									val K_unchecked plug_00192
						inv !return
							inv !lookup
								val K_unchecked kind
								inv !plus
									val K_unchecked 2
									val K_unchecked n
				constant KindBaseTerm K_unchecked_function = KindBaseTerm_B __assimilated=1
			package DigitToValue_fn _function
				symbol public misc DigitToValue
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DigitToValue_B _code
					symbol private misc c
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					local c K_unchecked
					local n K_unchecked
					code
						inv !store
							reference
								val K_unchecked n
							inv !minus
								val K_unchecked c
								val K_unchecked 48
						inv !if
							inv !or
								inv !lt
									val K_unchecked n
									val K_unchecked 0
								inv !gt
									val K_unchecked n
									val K_unchecked 9
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !return
							val K_unchecked n
				constant DigitToValue K_unchecked_function = DigitToValue_B __assimilated=1
			package GenerateRandomNumber_fn _function
				symbol public misc GenerateRandomNumber
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GenerateRandomNumber_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc m
					symbol private misc s
					symbol external misc random --> /main/veneer/random
					local n K_unchecked
					local m K_unchecked
					local s K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked n
								val K_unchecked m
							code
								inv !return
									val K_unchecked n
						inv !if
							inv !gt
								val K_unchecked n
								val K_unchecked m
							code
								inv !store
									reference
										val K_unchecked s
									val K_unchecked n
								inv !store
									reference
										val K_unchecked n
									val K_unchecked m
								inv !store
									reference
										val K_unchecked m
									val K_unchecked s
						inv !postdecrement
							reference
								val K_unchecked n
						inv !return
							inv !plus
								inv random
									inv !minus
										val K_unchecked m
										val K_unchecked n
								val K_unchecked n
				constant GenerateRandomNumber K_unchecked_function = GenerateRandomNumber_B __assimilated=1
			package GroupChildren_fn _function
				symbol public misc GroupChildren
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GroupChildren_B _code
					symbol private misc par
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc value
					symbol external misc child --> /main/veneer/child
					symbol external misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
					symbol external misc list_together --> /main/template/properties/list_together_prop/list_together
					symbol external misc plug_00193 --> /main/connectors/plug_00193
					symbol external misc plug_00194 --> /main/connectors/plug_00194
					local par K_unchecked
					local value K_unchecked
					code
						inv !while
							inv !ne
								inv child
									val K_unchecked par
								val K_unchecked 0
							code
								inv !ifelse
									inv !ne
										inv LT_Compare
											inv !propertyvalue
												inv child
													val K_unchecked par
												val K_unchecked list_together
											val K_unchecked value
										val K_unchecked 0
									code
										inv !move
											inv child
												val K_unchecked par
											val K_unchecked plug_00193
									code
										inv !move
											inv child
												val K_unchecked par
											val K_unchecked plug_00194
						inv !while
							inv !ne
								inv child
									val K_unchecked plug_00194
								val K_unchecked 0
							code
								inv !move
									inv child
										val K_unchecked plug_00194
									val K_unchecked par
						inv !while
							inv !ne
								inv child
									val K_unchecked plug_00193
								val K_unchecked 0
							code
								inv !move
									inv child
										val K_unchecked plug_00193
									val K_unchecked par
						inv !return
							inv child
								val K_unchecked par
				constant GroupChildren K_unchecked_function = GroupChildren_B __assimilated=1
			package PrintSpaces_fn _function
				symbol public misc PrintSpaces
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintSpaces_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local n K_unchecked
					code
						inv !while
							inv !gt
								val K_unchecked n
								val K_unchecked 0
							code
								inv !print
									val K_unchecked " "
								inv !store
									reference
										val K_unchecked n
									inv !minus
										val K_unchecked n
										val K_unchecked 1
				constant PrintSpaces K_unchecked_function = PrintSpaces_B __assimilated=1
			package RunRoutines_fn _function
				symbol public misc RunRoutines
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RunRoutines_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc prop
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc INDIV_PROP_START --> /main/template/constants/INDIV_PROP_START_con/INDIV_PROP_START
					local obj K_unchecked
					local prop K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked thedark
							code
								inv !store
									reference
										val K_unchecked obj
									val K_unchecked real_location
						inv !if
							inv !and
								inv !eq
									inv !propertyaddress
										val K_unchecked obj
										val K_unchecked prop
									val K_unchecked 0
								inv !ge
									val K_unchecked prop
									val K_unchecked INDIV_PROP_START
							code
								inv !return
									val K_unchecked 0
						inv !return
							inv !message0
								val K_unchecked obj
								val K_unchecked prop
				constant RunRoutines K_unchecked_function = RunRoutines_B __assimilated=1
			package SwapWorkflags_fn _function
				symbol public misc SwapWorkflags
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SwapWorkflags_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc lst
					symbol external misc Object --> /main/veneer/Object
					symbol external misc workflag2 --> /main/template/properties/workflag2_prop/workflag2
					symbol external misc workflag --> /main/template/properties/workflag_prop/workflag
					local obj K_unchecked
					local lst K_unchecked
					code
						inv !objectloop
							reference
								val K_unchecked obj
							val K_unchecked Object
							inv !ofclass
								val K_unchecked obj
								val K_unchecked Object
							code
								inv !store
									reference
										val K_unchecked lst
									val K_unchecked 0
								inv !if
									inv !has
										val K_unchecked obj
										val K_unchecked workflag2
									code
										inv !store
											reference
												val K_unchecked lst
											val K_unchecked 1
								inv !take
									val K_unchecked obj
									val K_unchecked workflag2
								inv !if
									inv !has
										val K_unchecked obj
										val K_unchecked workflag
									code
										inv !give
											val K_unchecked obj
											val K_unchecked workflag2
								inv !take
									val K_unchecked obj
									val K_unchecked workflag
								inv !if
									val K_unchecked lst
									code
										inv !give
											val K_unchecked obj
											val K_unchecked workflag
				constant SwapWorkflags K_unchecked_function = SwapWorkflags_B __assimilated=1
			package IntegerDivide_fn _function
				symbol public misc IntegerDivide
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IntegerDivide_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc B
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_DIVZERO --> /main/template/constants/RTP_DIVZERO_con/RTP_DIVZERO
					local A K_unchecked
					local B K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked B
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_DIVZERO
								inv !return
									val K_unchecked 0
						inv !return
							inv !divide
								val K_unchecked A
								val K_unchecked B
				constant IntegerDivide K_unchecked_function = IntegerDivide_B __assimilated=1
			package IntegerRemainder_fn _function
				symbol public misc IntegerRemainder
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IntegerRemainder_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc B
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_DIVZERO --> /main/template/constants/RTP_DIVZERO_con/RTP_DIVZERO
					local A K_unchecked
					local B K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked B
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_DIVZERO
								inv !return
									val K_unchecked 0
						inv !return
							inv !modulo
								val K_unchecked A
								val K_unchecked B
				constant IntegerRemainder K_unchecked_function = IntegerRemainder_B __assimilated=1
			package UnsignedCompare_fn _function
				symbol public misc UnsignedCompare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package UnsignedCompare_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol private misc u
					symbol private misc v
					symbol external misc plug_00196 --> /main/connectors/plug_00196
					local x K_unchecked
					local y K_unchecked
					local u K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked x
								val K_unchecked y
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !lt
									val K_unchecked x
									val K_unchecked 0
								inv !ge
									val K_unchecked y
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !ge
									val K_unchecked x
									val K_unchecked 0
								inv !lt
									val K_unchecked y
									val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked u
							inv !bitwiseand
								val K_unchecked x
								inv !bitwisenot
									val K_unchecked plug_00196
						inv !store
							reference
								val K_unchecked v
							inv !bitwiseand
								val K_unchecked y
								inv !bitwisenot
									val K_unchecked plug_00196
						inv !if
							inv !gt
								val K_unchecked u
								val K_unchecked v
							code
								inv !return
									val K_unchecked 1
						inv !return
							inv !unaryminus
								val K_unchecked 1
				constant UnsignedCompare K_unchecked_function = UnsignedCompare_B __assimilated=1
			package SignedCompare_fn _function
				symbol public misc SignedCompare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SignedCompare_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					local x K_unchecked
					local y K_unchecked
					code
						inv !if
							inv !gt
								val K_unchecked x
								val K_unchecked y
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked x
								val K_unchecked y
							code
								inv !return
									val K_unchecked 0
						inv !return
							inv !unaryminus
								val K_unchecked 1
				constant SignedCompare K_unchecked_function = SignedCompare_B __assimilated=1
			package ZRegion_fn _function
				symbol public misc ZRegion
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ZRegion_B _code
					symbol private misc addr
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Object --> /main/veneer/Object
					symbol external misc Class --> /main/veneer/Class
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc String --> /main/veneer/String
					local addr K_unchecked
					code
						inv !switch
							inv metaclass
								val K_unchecked addr
							code
								inv !case
									val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !case
									inv !alternativecase
										val K_unchecked Object
										val K_unchecked Class
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked Routine
									code
										inv !return
											val K_unchecked 2
								inv !case
									val K_unchecked String
									code
										inv !return
											val K_unchecked 3
				constant ZRegion K_unchecked_function = ZRegion_B __assimilated=1
			package Memcpy_fn _function
				symbol public misc Memcpy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Memcpy_B _code
					symbol private misc to_addr
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_addr
					symbol private misc size
					symbol private misc n
					local to_addr K_unchecked
					local from_addr K_unchecked
					local size K_unchecked
					local n K_unchecked
					code
						inv @mcopy
							val K_unchecked size
							val K_unchecked from_addr
							val K_unchecked to_addr
				constant Memcpy K_unchecked_function = Memcpy_B __assimilated=1
			package Arrcpy_fn _function
				symbol public misc Arrcpy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Arrcpy_B _code
					symbol private misc to_array
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to_entry_size
					symbol private misc from_array
					symbol private misc from_entry_size
					symbol private misc no_entries
					symbol private misc n
					symbol private misc val
					symbol external misc Memcpy --> /main/template/functions/Memcpy_fn/Memcpy
					local to_array K_unchecked
					local to_entry_size K_unchecked
					local from_array K_unchecked
					local from_entry_size K_unchecked
					local no_entries K_unchecked
					local n K_unchecked
					local val K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked to_entry_size
								val K_unchecked from_entry_size
							code
								inv Memcpy
									val K_unchecked to_array
									val K_unchecked from_array
									inv !times
										val K_unchecked to_entry_size
										val K_unchecked no_entries
							code
								inv !ifelse
									inv !and
										inv !eq
											val K_unchecked to_entry_size
											val K_unchecked 2
										inv !eq
											val K_unchecked from_entry_size
											val K_unchecked 4
									code
										inv !for
											inv !store
												reference
													val K_unchecked n
												val K_unchecked 0
											inv !lt
												val K_unchecked n
												val K_unchecked no_entries
											inv !postincrement
												reference
													val K_unchecked n
											code
												inv !store
													reference
														val K_unchecked val
													inv !lookup
														val K_unchecked from_array
														val K_unchecked n
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked to_array
															val K_unchecked 0
													inv !modulo
														inv !divide
															val K_unchecked val
															val K_unchecked 256
														val K_unchecked 256
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked to_array
															val K_unchecked 1
													inv !modulo
														val K_unchecked val
														val K_unchecked 256
												inv !store
													reference
														val K_unchecked to_array
													inv !plus
														val K_unchecked to_array
														val K_unchecked 2
									code
										inv !printret
											val K_unchecked "*** Arrcpy doesn't support this ***"
				constant Arrcpy K_unchecked_function = Arrcpy_B __assimilated=1
			package WordCount_fn _function
				symbol public misc WordCount
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WordCount_B _code
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							inv !lookupbyte
								val K_unchecked parse
								val K_unchecked 1
				constant WordCount K_unchecked_function = WordCount_B __assimilated=1
			package WordAddress_fn _function
				symbol public misc WordAddress
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WordAddress_B _code
					symbol private misc wordnum
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					local wordnum K_unchecked
					code
						inv !return
							inv !plus
								val K_unchecked buffer
								inv !lookupbyte
									val K_unchecked parse
									inv !plus
										inv !times
											val K_unchecked wordnum
											val K_unchecked 4
										val K_unchecked 1
				constant WordAddress K_unchecked_function = WordAddress_B __assimilated=1
			package WordLength_fn _function
				symbol public misc WordLength
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WordLength_B _code
					symbol private misc wordnum
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					local wordnum K_unchecked
					code
						inv !return
							inv !lookupbyte
								val K_unchecked parse
								inv !times
									val K_unchecked wordnum
									val K_unchecked 4
				constant WordLength K_unchecked_function = WordLength_B __assimilated=1
			package WordFrom_fn _function
				symbol public misc WordFrom
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WordFrom_B _code
					symbol private misc w
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol private misc i
					symbol private misc j
					symbol private misc wc
					symbol external misc comma_word --> /main/template/constants/comma_word_con/comma_word
					symbol external misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
					local w K_unchecked
					local p K_unchecked
					local i K_unchecked
					local j K_unchecked
					local wc K_unchecked
					code
						inv !store
							reference
								val K_unchecked wc
							inv !lookup
								val K_unchecked p
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked i
							inv !minus
								inv !times
									val K_unchecked w
									val K_unchecked 3
								val K_unchecked 2
						inv !if
							inv !or
								inv !lt
									val K_unchecked w
									val K_unchecked 1
								inv !gt
									val K_unchecked w
									val K_unchecked wc
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked j
							inv !lookup
								val K_unchecked p
								val K_unchecked i
						inv !if
							inv !eq
								val K_unchecked j
								val K_unchecked dw',//'
							code
								inv !store
									reference
										val K_unchecked j
									val K_unchecked comma_word
						inv !if
							inv !eq
								val K_unchecked j
								val K_unchecked dw'.//'
							code
								inv !store
									reference
										val K_unchecked j
									val K_unchecked THEN1__WD
						inv !return
							val K_unchecked j
				constant WordFrom K_unchecked_function = WordFrom_B __assimilated=1
			package NextWord_fn _function
				symbol public misc NextWord
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NextWord_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc j
					symbol private misc wc
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc comma_word --> /main/template/constants/comma_word_con/comma_word
					symbol external misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
					local i K_unchecked
					local j K_unchecked
					local wc K_unchecked
					code
						inv !store
							reference
								val K_unchecked wc
							inv !lookup
								val K_unchecked parse
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked i
							inv !minus
								inv !times
									val K_unchecked wn
									val K_unchecked 3
								val K_unchecked 2
						inv !postincrement
							reference
								val K_unchecked wn
						inv !if
							inv !or
								inv !lt
									val K_unchecked wn
									val K_unchecked 2
								inv !gt
									val K_unchecked wn
									inv !plus
										val K_unchecked wc
										val K_unchecked 1
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked j
							inv !lookup
								val K_unchecked parse
								val K_unchecked i
						inv !if
							inv !eq
								val K_unchecked j
								val K_unchecked dw',//'
							code
								inv !store
									reference
										val K_unchecked j
									val K_unchecked comma_word
						inv !if
							inv !eq
								val K_unchecked j
								val K_unchecked dw'.//'
							code
								inv !store
									reference
										val K_unchecked j
									val K_unchecked THEN1__WD
						inv !return
							val K_unchecked j
				constant NextWord K_unchecked_function = NextWord_B __assimilated=1
			package NextWordStopped_fn _function
				symbol public misc NextWordStopped
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NextWordStopped_B _code
					symbol private misc wc
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					local wc K_unchecked
					code
						inv !store
							reference
								val K_unchecked wc
							inv !lookup
								val K_unchecked parse
								val K_unchecked 0
						inv !if
							inv !or
								inv !lt
									val K_unchecked wn
									val K_unchecked 1
								inv !gt
									val K_unchecked wn
									val K_unchecked wc
							code
								inv !postincrement
									reference
										val K_unchecked wn
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !return
							inv NextWord
				constant NextWordStopped K_unchecked_function = NextWordStopped_B __assimilated=1
			package PrintSnippet_fn _function
				symbol public misc PrintSnippet
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintSnippet_B _code
					symbol private misc snip
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc i
					symbol private misc w1
					symbol private misc w2
					symbol external misc WordCount --> /main/template/functions/WordCount_fn/WordCount
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_SAYINVALIDSNIPPET --> /main/template/constants/RTP_SAYINVALIDSNIPPET_con/RTP_SAYINVALIDSNIPPET
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc WordLength --> /main/template/functions/WordLength_fn/WordLength
					local snip K_unchecked
					local from K_unchecked
					local to K_unchecked
					local i K_unchecked
					local w1 K_unchecked
					local w2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked w1
							inv !divide
								val K_unchecked snip
								val K_unchecked 100
						inv !store
							reference
								val K_unchecked w2
							inv !minus
								inv !plus
									val K_unchecked w1
									inv !modulo
										val K_unchecked snip
										val K_unchecked 100
								val K_unchecked 1
						inv !if
							inv !or
								inv !or
									inv !lt
										val K_unchecked w2
										val K_unchecked w1
									inv !lt
										val K_unchecked w1
										val K_unchecked 1
								inv !gt
									val K_unchecked w2
									inv WordCount
							code
								inv !if
									inv !and
										inv !eq
											val K_unchecked w1
											val K_unchecked 1
										inv !eq
											val K_unchecked w2
											val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_SAYINVALIDSNIPPET
										val K_unchecked w1
										val K_unchecked w2
						inv !store
							reference
								val K_unchecked from
							inv WordAddress
								val K_unchecked w1
						inv !store
							reference
								val K_unchecked to
							inv !minus
								inv !plus
									inv WordAddress
										val K_unchecked w2
									inv WordLength
										val K_unchecked w2
								val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked from
							inv !le
								val K_unchecked i
								val K_unchecked to
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !printchar
									inv !lookupbyte
										val K_unchecked i
										val K_unchecked 0
				constant PrintSnippet K_unchecked_function = PrintSnippet_B __assimilated=1
			package SpliceSnippet_fn _function
				symbol public misc SpliceSnippet
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SpliceSnippet_B _code
					symbol private misc snip
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc t
					symbol private misc i
					symbol private misc w1
					symbol private misc w2
					symbol private misc nextw
					symbol private misc at
					symbol private misc endsnippet
					symbol private misc newlen
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_SPLICEINVALIDSNIPPET --> /main/template/constants/RTP_SPLICEINVALIDSNIPPET_con/RTP_SPLICEINVALIDSNIPPET
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol external misc WordCount --> /main/template/functions/WordCount_fn/WordCount
					symbol external misc buffer2 --> /main/template/arrays/buffer2_arr/buffer2
					symbol external misc VM_PrintToBuffer --> /main/template/functions/VM_PrintToBuffer_fn/VM_PrintToBuffer
					symbol external misc SpliceSnippet__TextPrinter --> /main/template/functions/SpliceSnippet__TextPrinter_fn/SpliceSnippet__TextPrinter
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc VM_Tokenise --> /main/template/functions/VM_Tokenise_fn/VM_Tokenise
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					local snip K_unchecked
					local t K_unchecked
					local i K_unchecked
					local w1 K_unchecked
					local w2 K_unchecked
					local nextw K_unchecked
					local at K_unchecked
					local endsnippet K_unchecked
					local newlen K_unchecked
					code
						inv !store
							reference
								val K_unchecked w1
							inv !divide
								val K_unchecked snip
								val K_unchecked 100
						inv !store
							reference
								val K_unchecked w2
							inv !minus
								inv !plus
									val K_unchecked w1
									inv !modulo
										val K_unchecked snip
										val K_unchecked 100
								val K_unchecked 1
						inv !if
							inv !or
								inv !lt
									val K_unchecked w2
									val K_unchecked w1
								inv !lt
									val K_unchecked w1
									val K_unchecked 1
							code
								inv !if
									inv !and
										inv !eq
											val K_unchecked w1
											val K_unchecked 1
										inv !eq
											val K_unchecked w2
											val K_unchecked 0
									code
										inv !return
											val K_unchecked 1
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_SPLICEINVALIDSNIPPET
										val K_unchecked w1
										val K_unchecked w2
						inv !push
							val K_unchecked say__p
						inv !push
							val K_unchecked say__pc
						inv !store
							reference
								val K_unchecked nextw
							inv !plus
								val K_unchecked w2
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked at
							inv !minus
								inv WordAddress
									val K_unchecked w1
								val K_unchecked buffer
						inv !if
							inv !le
								val K_unchecked nextw
								inv WordCount
							code
								inv !store
									reference
										val K_unchecked endsnippet
									inv !plus
										inv !times
											val K_unchecked 100
											val K_unchecked nextw
										inv !plus
											inv !minus
												inv WordCount
												val K_unchecked nextw
											val K_unchecked 1
						inv !store
							reference
								inv !lookup
									val K_unchecked buffer2
									val K_unchecked 0
							val K_unchecked 120
						inv !store
							reference
								val K_unchecked newlen
							inv VM_PrintToBuffer
								val K_unchecked buffer2
								val K_unchecked 120
								val K_unchecked SpliceSnippet__TextPrinter
								val K_unchecked t
								val K_unchecked endsnippet
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !and
								inv !lt
									val K_unchecked i
									val K_unchecked newlen
								inv !lt
									inv !plus
										val K_unchecked at
										val K_unchecked i
									val K_unchecked 120
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked buffer
											inv !plus
												val K_unchecked at
												val K_unchecked i
									inv !lookupbyte
										val K_unchecked buffer2
										inv !plus
											val K_unchecked plug_00139
											val K_unchecked i
						inv !store
							reference
								inv !lookup
									val K_unchecked buffer
									val K_unchecked 0
							inv !plus
								val K_unchecked at
								val K_unchecked i
						inv !for
							val K_unchecked 1
							inv !lt
								inv !plus
									val K_unchecked at
									val K_unchecked i
								val K_unchecked 120
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked buffer
											inv !plus
												val K_unchecked at
												val K_unchecked i
									val K_unchecked 32
						inv VM_Tokenise
							val K_unchecked buffer
							val K_unchecked parse
						inv !store
							reference
								val K_unchecked players_command
							inv !plus
								val K_unchecked 100
								inv WordCount
						inv !pull
							reference
								val K_unchecked say__pc
						inv !pull
							reference
								val K_unchecked say__p
				constant SpliceSnippet K_unchecked_function = SpliceSnippet_B __assimilated=1
			package SpliceSnippet__TextPrinter_fn _function
				symbol public misc SpliceSnippet__TextPrinter
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SpliceSnippet__TextPrinter_B _code
					symbol private misc t
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc endsnippet
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc PrintSnippet --> /main/template/functions/PrintSnippet_fn/PrintSnippet
					local t K_unchecked
					local endsnippet K_unchecked
					code
						inv TEXT_TY_Say
							val K_unchecked t
						inv !if
							val K_unchecked endsnippet
							code
								inv !print
									val K_unchecked " "
								inv PrintSnippet
									val K_unchecked endsnippet
				constant SpliceSnippet__TextPrinter K_unchecked_function = SpliceSnippet__TextPrinter_B __assimilated=1
			package SnippetIncludes_fn _function
				symbol public misc SnippetIncludes
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SnippetIncludes_B _code
					symbol private misc test
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc snippet
					symbol private misc w1
					symbol private misc w2
					symbol private misc wlen
					symbol private misc i
					symbol private misc j
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_INCLUDEINVALIDSNIPPET --> /main/template/constants/RTP_INCLUDEINVALIDSNIPPET_con/RTP_INCLUDEINVALIDSNIPPET
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					local test K_unchecked
					local snippet K_unchecked
					local w1 K_unchecked
					local w2 K_unchecked
					local wlen K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !store
							reference
								val K_unchecked w1
							inv !divide
								val K_unchecked snippet
								val K_unchecked 100
						inv !store
							reference
								val K_unchecked w2
							inv !minus
								inv !plus
									val K_unchecked w1
									inv !modulo
										val K_unchecked snippet
										val K_unchecked 100
								val K_unchecked 1
						inv !if
							inv !or
								inv !lt
									val K_unchecked w2
									val K_unchecked w1
								inv !lt
									val K_unchecked w1
									val K_unchecked 1
							code
								inv !if
									inv !and
										inv !eq
											val K_unchecked w1
											val K_unchecked 1
										inv !eq
											val K_unchecked w2
											val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_INCLUDEINVALIDSNIPPET
										val K_unchecked w1
										val K_unchecked w2
						inv !if
							inv !eq
								inv metaclass
									val K_unchecked test
								val K_unchecked Routine
							code
								inv !store
									reference
										val K_unchecked wlen
									inv !modulo
										val K_unchecked snippet
										val K_unchecked 100
								inv !for
									inv !sequential
										inv !store
											reference
												val K_unchecked i
											val K_unchecked w1
										inv !store
											reference
												val K_unchecked j
											val K_unchecked wlen
									inv !gt
										val K_unchecked j
										val K_unchecked 0
									inv !sequential
										inv !postincrement
											reference
												val K_unchecked i
										inv !postdecrement
											reference
												val K_unchecked j
									code
										inv !if
											inv !ne
												inv !indirect2
													val K_unchecked test
													val K_unchecked i
													val K_unchecked 0
												val K_unchecked GPR_FAIL
											code
												inv !return
													inv !minus
														inv !plus
															inv !times
																val K_unchecked i
																val K_unchecked 100
															val K_unchecked wn
														val K_unchecked i
						inv !return
							val K_unchecked 0
				constant SnippetIncludes K_unchecked_function = SnippetIncludes_B __assimilated=1
			package SnippetMatches_fn _function
				symbol public misc SnippetMatches
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SnippetMatches_B _code
					symbol private misc snippet
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc topic_gpr
					symbol private misc rv
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_BADTOPIC --> /main/template/constants/RTP_BADTOPIC_con/RTP_BADTOPIC
					local snippet K_unchecked
					local topic_gpr K_unchecked
					local rv K_unchecked
					code
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked topic_gpr
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								inv metaclass
									val K_unchecked topic_gpr
								val K_unchecked Routine
							code
								inv !store
									reference
										val K_unchecked rv
									inv !indirect2
										val K_unchecked topic_gpr
										inv !divide
											val K_unchecked snippet
											val K_unchecked 100
										inv !modulo
											val K_unchecked snippet
											val K_unchecked 100
								inv !if
									inv !ne
										val K_unchecked rv
										val K_unchecked GPR_FAIL
									code
										inv !return
											val K_unchecked 1
								inv !return
									val K_unchecked 0
						inv RunTimeProblem
							val K_unchecked RTP_BADTOPIC
						inv !return
							val K_unchecked 0
				constant SnippetMatches K_unchecked_function = SnippetMatches_B __assimilated=1
			package UnpackGrammarLine_fn _function
				symbol public misc UnpackGrammarLine
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package UnpackGrammarLine_B _code
					symbol private misc line_address
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc size
					symbol external misc line_token --> /main/template/arrays/line_token_arr/line_token
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc line_ttype --> /main/template/arrays/line_ttype_arr/line_ttype
					symbol external misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
					symbol external misc line_tdata --> /main/template/arrays/line_tdata_arr/line_tdata
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00202 --> /main/template/variables/action_reversed_var/action_reversed
					symbol external misc plug_00203 --> /main/template/variables/params_wanted_var/params_wanted
					symbol external misc AnalyseToken --> /main/template/functions/AnalyseToken_fn/AnalyseToken
					symbol external misc plug_00204 --> /main/template/variables/found_ttype_var/found_ttype
					symbol external misc PREPOSITION_TT --> /main/template/constants/PREPOSITION_TT_con/PREPOSITION_TT
					symbol external misc plug_00205 --> /main/template/variables/found_tdata_var/found_tdata
					local line_address K_unchecked
					local i K_unchecked
					local size K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked 32
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked line_token
											val K_unchecked i
									val K_unchecked ENDIT_TOKEN
								inv !store
									reference
										inv !lookup
											val K_unchecked line_ttype
											val K_unchecked i
									val K_unchecked ELEMENTARY_TT
								inv !store
									reference
										inv !lookup
											val K_unchecked line_tdata
											val K_unchecked i
									val K_unchecked ENDIT_TOKEN
						inv @aloads
							val K_unchecked line_address
							val K_unchecked 0
							val K_unchecked action_to_be
						inv !store
							reference
								val K_unchecked action_reversed
							inv !ne
								inv !bitwiseand
									inv !lookupbyte
										val K_unchecked line_address
										val K_unchecked 2
									val K_unchecked 1
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked line_address
							inv !minus
								val K_unchecked line_address
								val K_unchecked 2
						inv !store
							reference
								val K_unchecked size
							val K_unchecked 5
						inv !store
							reference
								val K_unchecked params_wanted
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							val K_unchecked 1
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked line_address
									inv !plus
										val K_unchecked line_address
										val K_unchecked size
								inv !if
									inv !eq
										inv !lookupbyte
											val K_unchecked line_address
											val K_unchecked 0
										val K_unchecked ENDIT_TOKEN
									code
										inv !break
								inv !store
									reference
										inv !lookup
											val K_unchecked line_token
											val K_unchecked i
									val K_unchecked line_address
								inv AnalyseToken
									val K_unchecked line_address
								inv !if
									inv !ne
										val K_unchecked found_ttype
										val K_unchecked PREPOSITION_TT
									code
										inv !postincrement
											reference
												val K_unchecked params_wanted
								inv !store
									reference
										inv !lookup
											val K_unchecked line_ttype
											val K_unchecked i
									val K_unchecked found_ttype
								inv !store
									reference
										inv !lookup
											val K_unchecked line_tdata
											val K_unchecked i
									val K_unchecked found_tdata
						inv !return
							inv !plus
								val K_unchecked line_address
								val K_unchecked 1
				constant UnpackGrammarLine K_unchecked_function = UnpackGrammarLine_B __assimilated=1
			package AnalyseToken_fn _function
				symbol public misc AnalyseToken
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AnalyseToken_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc plug_00204 --> /main/template/variables/found_ttype_var/found_ttype
					symbol external misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
					symbol external misc plug_00205 --> /main/template/variables/found_tdata_var/found_tdata
					local token K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked token
								val K_unchecked ENDIT_TOKEN
							code
								inv !store
									reference
										val K_unchecked found_ttype
									val K_unchecked ELEMENTARY_TT
								inv !store
									reference
										val K_unchecked found_tdata
									val K_unchecked ENDIT_TOKEN
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked found_ttype
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked token
									val K_unchecked 0
								val K_unchecked 15
						inv !store
							reference
								val K_unchecked found_tdata
							inv !lookup
								inv !plus
									val K_unchecked token
									val K_unchecked 1
								val K_unchecked 0
				constant AnalyseToken K_unchecked_function = AnalyseToken_B __assimilated=1
			package DictionaryWordToVerbNum_fn _function
				symbol public misc DictionaryWordToVerbNum
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DictionaryWordToVerbNum_B _code
					symbol private misc dword
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc verbnum
					symbol external misc #dict_par2 --> /main/veneer/#dict_par2
					local dword K_unchecked
					local verbnum K_unchecked
					code
						inv !store
							reference
								val K_unchecked dword
							inv !minus
								inv !plus
									val K_unchecked dword
									val K_unchecked #dict_par2
								val K_unchecked 1
						inv @aloads
							val K_unchecked dword
							val K_unchecked 0
							val K_unchecked verbnum
						inv !store
							reference
								val K_unchecked verbnum
							inv !minus
								val K_unchecked 65535
								val K_unchecked verbnum
						inv !return
							val K_unchecked verbnum
				constant DictionaryWordToVerbNum K_unchecked_function = DictionaryWordToVerbNum_B __assimilated=1
			package KeyboardPrimitive_fn _function
				symbol public misc KeyboardPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package KeyboardPrimitive_B _code
					symbol private misc a_buffer
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc a_table
					symbol external misc VM_ReadKeyboard --> /main/template/functions/VM_ReadKeyboard_fn/VM_ReadKeyboard
					local a_buffer K_unchecked
					local a_table K_unchecked
					code
						inv !return
							inv VM_ReadKeyboard
								val K_unchecked a_buffer
								val K_unchecked a_table
				constant KeyboardPrimitive K_unchecked_function = KeyboardPrimitive_B __assimilated=1
			package Keyboard_fn _function
				symbol public misc Keyboard
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Keyboard_B _code
					symbol private misc a_buffer
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc a_table
					symbol private misc nw
					symbol private misc i
					symbol private misc w
					symbol private misc w2
					symbol private misc x1
					symbol private misc x2
					symbol external misc plug_00209 --> /main/template/variables/sline1_var/sline1
					symbol external misc plug_00210 --> /main/template/variables/score_var/score
					symbol external misc plug_00211 --> /main/template/variables/sline2_var/sline2
					symbol external misc plug_00212 --> /main/template/variables/turns_var/turns
					symbol external misc oops_workspace --> /main/template/arrays/oops_workspace_arr/oops_workspace
					symbol external misc PrintPrompt --> /main/template/functions/PrintPrompt_fn/PrintPrompt
					symbol external misc DrawStatusLine --> /main/template/functions/DrawStatusLine_fn/DrawStatusLine
					symbol external misc KeyboardPrimitive --> /main/template/functions/KeyboardPrimitive_fn/KeyboardPrimitive
					symbol external misc plug_00213 --> /main/template/variables/etype_var/etype
					symbol external misc BLANKLINE_PE --> /main/template/constants/BLANKLINE_PE_con/BLANKLINE_PE
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc PRINTING_A_PARSER_ERROR_ACT --> /main/template/constants/PRINTING_A_PARSER_ERROR_ACT_con/PRINTING_A_PARSER_ERROR_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc plug_00214 --> /main/connectors/plug_00214
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					symbol external misc OOPS1__WD --> /main/template/constants/OOPS1__WD_con/OOPS1__WD
					symbol external misc OOPS2__WD --> /main/template/constants/OOPS2__WD_con/OOPS2__WD
					symbol external misc OOPS3__WD --> /main/template/constants/OOPS3__WD_con/OOPS3__WD
					symbol external misc plug_00216 --> /main/template/variables/oops_from_var/oops_from
					symbol external misc plug_00217 --> /main/connectors/plug_00217
					symbol external misc INPUT_BUFFER_LEN --> /main/template/constants/INPUT_BUFFER_LEN_con/INPUT_BUFFER_LEN
					symbol external misc buffer2 --> /main/template/arrays/buffer2_arr/buffer2
					symbol external misc VM_Tokenise --> /main/template/functions/VM_Tokenise_fn/VM_Tokenise
					symbol external misc UNDO1__WD --> /main/template/constants/UNDO1__WD_con/UNDO1__WD
					symbol external misc UNDO2__WD --> /main/template/constants/UNDO2__WD_con/UNDO2__WD
					symbol external misc UNDO3__WD --> /main/template/constants/UNDO3__WD_con/UNDO3__WD
					symbol external misc Perform_Undo --> /main/template/functions/Perform_Undo_fn/Perform_Undo
					symbol external misc VM_Save_Undo --> /main/template/functions/VM_Save_Undo_fn/VM_Save_Undo
					symbol external misc plug_00218 --> /main/template/variables/undo_flag_var/undo_flag
					symbol external misc VM_RestoreWindowColours --> /main/template/functions/VM_RestoreWindowColours_fn/VM_RestoreWindowColours
					symbol external misc VM_Style --> /main/template/functions/VM_Style_fn/VM_Style
					symbol external misc SUBHEADER_VMSTY --> /main/template/constants/SUBHEADER_VMSTY_con/SUBHEADER_VMSTY
					symbol external misc SL_Location --> /main/template/functions/SL_Location_fn/SL_Location
					symbol external misc NORMAL_VMSTY --> /main/template/constants/NORMAL_VMSTY_con/NORMAL_VMSTY
					symbol external misc plug_00219 --> /main/connectors/plug_00219
					local a_buffer K_unchecked
					local a_table K_unchecked
					local nw K_unchecked
					local i K_unchecked
					local w K_unchecked
					local w2 K_unchecked
					local x1 K_unchecked
					local x2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked sline1
							val K_unchecked score
						inv !store
							reference
								val K_unchecked sline2
							val K_unchecked turns
						inv !while
							val K_unchecked 1
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked 64
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked oops_workspace
													val K_unchecked i
											inv !lookupbyte
												val K_unchecked a_buffer
												val K_unchecked i
								inv PrintPrompt
								inv DrawStatusLine
								inv KeyboardPrimitive
									val K_unchecked a_buffer
									val K_unchecked a_table
								inv !store
									reference
										val K_unchecked nw
									inv !lookup
										val K_unchecked a_table
										val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked nw
										val K_unchecked 0
									code
										inv !push
											val K_unchecked etype
										inv !store
											reference
												val K_unchecked etype
											val K_unchecked BLANKLINE_PE
										inv !store
											reference
												val K_unchecked players_command
											val K_unchecked 100
										inv BeginActivity
											val K_unchecked PRINTING_A_PARSER_ERROR_ACT
										inv !if
											inv !eq
												inv ForActivity
													val K_unchecked PRINTING_A_PARSER_ERROR_ACT
												val K_unchecked 0
											code
												inv plug_00214
													val K_unchecked 88
													val K_unchecked noun
												inv !print
													val K_unchecked "\n"
										inv EndActivity
											val K_unchecked PRINTING_A_PARSER_ERROR_ACT
										inv !pull
											reference
												val K_unchecked etype
										inv !continue
								inv !store
									reference
										val K_unchecked w
									inv !lookup
										val K_unchecked a_table
										val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked w
										inv !alternative
											inv !alternative
												val K_unchecked OOPS1__WD
												val K_unchecked OOPS2__WD
											val K_unchecked OOPS3__WD
									code
										inv !if
											inv !eq
												val K_unchecked oops_from
												val K_unchecked 0
											code
												inv plug_00217
													val K_unchecked 65
												inv !print
													val K_unchecked "\n"
												inv !continue
										inv !if
											inv !eq
												val K_unchecked nw
												val K_unchecked 1
											code
												inv plug_00217
													val K_unchecked 66
												inv !print
													val K_unchecked "\n"
												inv !continue
										inv !if
											inv !gt
												val K_unchecked nw
												val K_unchecked 2
											code
												inv plug_00217
													val K_unchecked 67
												inv !print
													val K_unchecked "\n"
												inv !continue
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked INPUT_BUFFER_LEN
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked buffer2
															val K_unchecked i
													inv !lookupbyte
														val K_unchecked a_buffer
														val K_unchecked i
										inv !store
											reference
												val K_unchecked x1
											inv !lookup
												val K_unchecked a_table
												val K_unchecked 6
										inv !store
											reference
												val K_unchecked x2
											inv !lookup
												val K_unchecked a_table
												val K_unchecked 5
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked 64
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked a_buffer
															val K_unchecked i
													inv !lookupbyte
														val K_unchecked oops_workspace
														val K_unchecked i
										inv VM_Tokenise
											val K_unchecked a_buffer
											val K_unchecked a_table
										inv !store
											reference
												val K_unchecked w
											inv !lookup
												val K_unchecked a_table
												inv !times
													val K_unchecked 3
													val K_unchecked oops_from
										inv !store
											reference
												val K_unchecked w2
											inv !lookup
												val K_unchecked a_table
												inv !minus
													inv !times
														val K_unchecked 3
														val K_unchecked oops_from
													val K_unchecked 1
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked w2
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked a_buffer
															inv !plus
																val K_unchecked i
																val K_unchecked w
													val K_unchecked 32
										inv !if
											inv !lt
												val K_unchecked w2
												val K_unchecked x2
											code
												inv !for
													inv !store
														reference
															val K_unchecked i
														inv !minus
															val K_unchecked INPUT_BUFFER_LEN
															val K_unchecked 1
													inv !ge
														val K_unchecked i
														inv !plus
															val K_unchecked w
															val K_unchecked x2
													inv !postdecrement
														reference
															val K_unchecked i
													code
														inv !store
															reference
																inv !lookupbyte
																	val K_unchecked a_buffer
																	val K_unchecked i
															inv !lookupbyte
																val K_unchecked a_buffer
																inv !plus
																	inv !minus
																		val K_unchecked i
																		val K_unchecked x2
																	val K_unchecked w2
												inv !store
													reference
														inv !lookup
															val K_unchecked a_buffer
															val K_unchecked 0
													inv !plus
														inv !lookup
															val K_unchecked a_buffer
															val K_unchecked 0
														inv !minus
															val K_unchecked x2
															val K_unchecked w2
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked x2
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked a_buffer
															inv !plus
																val K_unchecked i
																val K_unchecked w
													inv !lookupbyte
														val K_unchecked buffer2
														inv !plus
															val K_unchecked i
															val K_unchecked x1
										inv VM_Tokenise
											val K_unchecked a_buffer
											val K_unchecked a_table
										inv !store
											reference
												val K_unchecked nw
											inv !lookup
												val K_unchecked a_table
												val K_unchecked 0
										inv !return
											val K_unchecked nw
								inv !if
									inv !and
										inv !eq
											val K_unchecked w
											inv !alternative
												inv !alternative
													val K_unchecked UNDO1__WD
													val K_unchecked UNDO2__WD
												val K_unchecked UNDO3__WD
										inv !eq
											val K_unchecked nw
											val K_unchecked 1
									code
										inv Perform_Undo
										inv !continue
								inv !store
									reference
										val K_unchecked i
									inv VM_Save_Undo
								inv !store
									reference
										val K_unchecked undo_flag
									val K_unchecked 2
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked -1
									code
										inv !store
											reference
												val K_unchecked undo_flag
											val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked undo_flag
											val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked 2
									code
										inv VM_RestoreWindowColours
										inv VM_Style
											val K_unchecked SUBHEADER_VMSTY
										inv SL_Location
										inv !print
											val K_unchecked "\n"
										inv VM_Style
											val K_unchecked NORMAL_VMSTY
										inv plug_00219
											val K_unchecked 69
										inv !print
											val K_unchecked "\n"
										inv !continue
								inv !return
									val K_unchecked nw
				constant Keyboard K_unchecked_function = Keyboard_B __assimilated=1
			package Parser__parse_fn _function
				symbol public misc Parser__parse
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Parser__parse_B _code
					symbol private misc syntax
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc line
					symbol private misc num_lines
					symbol private misc line_address
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc token
					symbol private misc l
					symbol private misc m
					symbol private misc inferred_go
					symbol external misc plug_00221 --> /main/template/variables/cobj_flag_var/cobj_flag
					symbol external misc parser_results --> /main/template/arrays/parser_results_arr/parser_results
					symbol external misc ACTION_PRES --> /main/template/constants/ACTION_PRES_con/ACTION_PRES
					symbol external misc NO_INPS_PRES --> /main/template/constants/NO_INPS_PRES_con/NO_INPS_PRES
					symbol external misc INP1_PRES --> /main/template/constants/INP1_PRES_con/INP1_PRES
					symbol external misc INP2_PRES --> /main/template/constants/INP2_PRES_con/INP2_PRES
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc plug_00223 --> /main/template/variables/held_back_mode_var/held_back_mode
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00224 --> /main/template/variables/hb_wn_var/hb_wn
					symbol external misc plug_00225 --> /main/template/variables/verb_wordnum_var/verb_wordnum
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					symbol external misc AGAIN1__WD --> /main/template/constants/AGAIN1__WD_con/AGAIN1__WD
					symbol external misc AGAIN2__WD --> /main/template/constants/AGAIN2__WD_con/AGAIN2__WD
					symbol external misc AGAIN3__WD --> /main/template/constants/AGAIN3__WD_con/AGAIN3__WD
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc INPUT_BUFFER_LEN --> /main/template/constants/INPUT_BUFFER_LEN_con/INPUT_BUFFER_LEN
					symbol external misc buffer3 --> /main/template/arrays/buffer3_arr/buffer3
					symbol external misc VM_Tokenise --> /main/template/functions/VM_Tokenise_fn/VM_Tokenise
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol private label .ReParse
					symbol private label .ReType
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc ScopeCeiling --> /main/template/functions/ScopeCeiling_fn/ScopeCeiling
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc READING_A_COMMAND_ACT --> /main/template/constants/READING_A_COMMAND_ACT_con/READING_A_COMMAND_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc Keyboard --> /main/template/functions/Keyboard_fn/Keyboard
					symbol external misc WordCount --> /main/template/functions/WordCount_fn/WordCount
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					symbol external misc plug_00228 --> /main/template/variables/parser_inflection_var/parser_inflection
					symbol external misc plug_00229 --> /main/connectors/plug_00229
					symbol external misc LanguageToInformese --> /main/template/functions/LanguageToInformese_fn/LanguageToInformese
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00230 --> /main/template/variables/usual_grammar_after_var/usual_grammar_after
					symbol private label .AlmostReParse
					symbol external misc plug_00231 --> /main/template/variables/scope_token_var/scope_token
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol private label .BeginCommand
					symbol external misc plug_00233 --> /main/template/variables/verb_word_var/verb_word
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc plug_00234 --> /main/template/variables/best_etype_var/best_etype
					symbol external misc STUCK_PE --> /main/template/constants/STUCK_PE_con/STUCK_PE
					symbol private label .GiveError
					symbol external misc comma_word --> /main/template/constants/comma_word_con/comma_word
					symbol external misc COMMABEGIN_PE --> /main/template/constants/COMMABEGIN_PE_con/COMMABEGIN_PE
					symbol external misc ANIMAAGAIN_PE --> /main/template/constants/ANIMAAGAIN_PE_con/ANIMAAGAIN_PE
					symbol external misc plug_00217 --> /main/connectors/plug_00217
					symbol external misc RunRoutines --> /main/template/functions/RunRoutines_fn/RunRoutines
					symbol external misc grammar --> /main/template/properties/grammar_prop/grammar
					symbol external misc VM_InvalidDictionaryAddress --> /main/template/functions/VM_InvalidDictionaryAddress_fn/VM_InvalidDictionaryAddress
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc #dict_par1 --> /main/veneer/#dict_par1
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00237 --> /main/template/variables/token_filter_var/token_filter
					symbol external misc plug_00238 --> /main/template/variables/parameters_var/parameters
					symbol external misc plug_00239 --> /main/connectors/plug_00239
					symbol external misc NounDomain --> /main/template/functions/NounDomain_fn/NounDomain
					symbol external misc Compass --> /main/template/constants/Compass_con/Compass
					symbol external misc plug_00240 --> /main/connectors/plug_00240
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					symbol private label .LookForMore
					symbol private label .Conversation
					symbol private label .NotConversation
					symbol external misc plug_00242 --> /main/template/variables/lookahead_var/lookahead
					symbol external misc HELD_TOKEN --> /main/template/constants/HELD_TOKEN_con/HELD_TOKEN
					symbol external misc plug_00145 --> /main/template/variables/scope_reason_var/scope_reason
					symbol external misc TALKING_REASON --> /main/template/constants/TALKING_REASON_con/TALKING_REASON
					symbol external misc PARSING_REASON --> /main/template/constants/PARSING_REASON_con/PARSING_REASON
					symbol external misc MISSINGPERSON_PE --> /main/template/constants/MISSINGPERSON_PE_con/MISSINGPERSON_PE
					symbol private label .Conversation2
					symbol external misc animate --> /main/template/properties/animate_prop/animate
					symbol external misc talkable --> /main/template/properties/talkable_prop/talkable
					symbol external misc ANIMALISTEN_PE --> /main/template/constants/ANIMALISTEN_PE_con/ANIMALISTEN_PE
					symbol external misc TOTALK_PE --> /main/template/constants/TOTALK_PE_con/TOTALK_PE
					symbol external misc PronounNotice --> /main/template/functions/PronounNotice_fn/PronounNotice
					symbol external misc UnknownVerb --> /main/template/functions/UnknownVerb_fn/UnknownVerb
					symbol private label .VerbAccepted
					symbol external misc VERB_PE --> /main/template/constants/VERB_PE_con/VERB_PE
					symbol external misc DictionaryWordToVerbNum --> /main/template/functions/DictionaryWordToVerbNum_fn/DictionaryWordToVerbNum
					symbol external misc #grammar_table --> /main/veneer/#grammar_table
					symbol external misc plug_00243 --> /main/template/variables/pronoun_word_var/pronoun_word
					symbol external misc plug_00244 --> /main/template/variables/pronoun_obj_var/pronoun_obj
					symbol external misc plug_00245 --> /main/template/variables/nextbest_etype_var/nextbest_etype
					symbol external misc plug_00246 --> /main/template/variables/multiflag_var/multiflag
					symbol external misc UnpackGrammarLine --> /main/template/functions/UnpackGrammarLine_fn/UnpackGrammarLine
					symbol external misc plug_00247 --> /main/template/variables/inferfrom_var/inferfrom
					symbol external misc plug_00248 --> /main/template/variables/nsns_var/nsns
					symbol external misc plug_00249 --> /main/template/variables/special_word_var/special_word
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc plug_00250 --> /main/template/variables/multi_context_var/multi_context
					symbol external misc plug_00213 --> /main/template/variables/etype_var/etype
					symbol external misc plug_00251 --> /main/template/variables/advance_warning_var/advance_warning
					symbol external misc plug_00252 --> /main/template/variables/pcount_var/pcount
					symbol external misc line_token --> /main/template/arrays/line_token_arr/line_token
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc line_ttype --> /main/template/arrays/line_ttype_arr/line_ttype
					symbol external misc PREPOSITION_TT --> /main/template/constants/PREPOSITION_TT_con/PREPOSITION_TT
					symbol external misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
					symbol external misc line_tdata --> /main/template/arrays/line_tdata_arr/line_tdata
					symbol external misc MULTI_TOKEN --> /main/template/constants/MULTI_TOKEN_con/MULTI_TOKEN
					symbol external misc MULTIEXCEPT_TOKEN --> /main/template/constants/MULTIEXCEPT_TOKEN_con/MULTIEXCEPT_TOKEN
					symbol external misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
					symbol private label .EmptyLine
					symbol external misc PrepositionChain --> /main/template/functions/PrepositionChain_fn/PrepositionChain
					symbol private label .LineFailed
					symbol external misc NOUN_TOKEN --> /main/template/constants/NOUN_TOKEN_con/NOUN_TOKEN
					symbol external misc Descriptors --> /main/template/functions/Descriptors_fn/Descriptors
					symbol external misc plug_00253 --> /main/template/variables/take_all_rule_var/take_all_rule
					symbol external misc plug_00203 --> /main/template/variables/params_wanted_var/params_wanted
					symbol external misc plug_00254 --> /main/connectors/plug_00254
					symbol external misc AnalyseToken --> /main/template/functions/AnalyseToken_fn/AnalyseToken
					symbol external misc plug_00204 --> /main/template/variables/found_ttype_var/found_ttype
					symbol external misc pattern --> /main/template/arrays/pattern_arr/pattern
					symbol external misc PATTERN_NULL --> /main/template/constants/PATTERN_NULL_con/PATTERN_NULL
					symbol external misc ParseToken --> /main/template/functions/ParseToken_fn/ParseToken
					symbol external misc plug_00205 --> /main/template/variables/found_tdata_var/found_tdata
					symbol external misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
					symbol external misc GPR_PREPOSITION --> /main/template/constants/GPR_PREPOSITION_con/GPR_PREPOSITION
					symbol external misc TOPIC_TOKEN --> /main/template/constants/TOPIC_TOKEN_con/TOPIC_TOKEN
					symbol external misc GPR_REPARSE --> /main/template/constants/GPR_REPARSE_con/GPR_REPARSE
					symbol external misc GPR_NUMBER --> /main/template/constants/GPR_NUMBER_con/GPR_NUMBER
					symbol external misc plug_00255 --> /main/template/variables/special_number1_var/special_number1
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc plug_00257 --> /main/template/variables/special_number2_var/special_number2
					symbol external misc GPR_MULTIPLE --> /main/template/constants/GPR_MULTIPLE_con/GPR_MULTIPLE
					symbol external misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
					symbol external misc THEN2__WD --> /main/template/constants/THEN2__WD_con/THEN2__WD
					symbol external misc THEN3__WD --> /main/template/constants/THEN3__WD_con/THEN3__WD
					symbol external misc pattern2 --> /main/template/arrays/pattern2_arr/pattern2
					symbol external misc plug_00258 --> /main/template/variables/pcount2_var/pcount2
					symbol external misc UPTO_PE --> /main/template/constants/UPTO_PE_con/UPTO_PE
					symbol external misc ReviseMulti --> /main/template/functions/ReviseMulti_fn/ReviseMulti
					symbol external misc NOTHING_PE --> /main/template/constants/NOTHING_PE_con/NOTHING_PE
					symbol external misc plug_00216 --> /main/template/variables/oops_from_var/oops_from
					symbol external misc PrintInferredCommand --> /main/template/functions/PrintInferredCommand_fn/PrintInferredCommand
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					symbol external misc plug_00202 --> /main/template/variables/action_reversed_var/action_reversed
					symbol external misc ASKSCOPE_PE --> /main/template/constants/ASKSCOPE_PE_con/ASKSCOPE_PE
					symbol external misc plug_00259 --> /main/connectors/plug_00259
					symbol external misc plug_00260 --> /main/template/variables/consult_from_var/consult_from
					symbol external misc plug_00261 --> /main/template/variables/consult_words_var/consult_words
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc String --> /main/veneer/String
					symbol external misc ParserError --> /main/template/functions/ParserError_fn/ParserError
					symbol external misc CANTSEE_PE --> /main/template/constants/CANTSEE_PE_con/CANTSEE_PE
					symbol external misc PRINTING_A_PARSER_ERROR_ACT --> /main/template/constants/PRINTING_A_PARSER_ERROR_ACT_con/PRINTING_A_PARSER_ERROR_ACT
					symbol private label .SkipParserError
					symbol external misc plug_00262 --> /main/template/variables/pronoun__word_var/pronoun__word
					symbol external misc plug_00263 --> /main/template/variables/pronoun__obj_var/pronoun__obj
					symbol external misc plug_00214 --> /main/connectors/plug_00214
					symbol external misc PrintCommand --> /main/template/functions/PrintCommand_fn/PrintCommand
					symbol external misc NUMBER_PE --> /main/template/constants/NUMBER_PE_con/NUMBER_PE
					symbol external misc plug_00264 --> /main/template/variables/saved_oops_var/saved_oops
					symbol external misc TOOLIT_PE --> /main/template/constants/TOOLIT_PE_con/TOOLIT_PE
					symbol external misc NOTHELD_PE --> /main/template/constants/NOTHELD_PE_con/NOTHELD_PE
					symbol external misc MULTI_PE --> /main/template/constants/MULTI_PE_con/MULTI_PE
					symbol external misc MMULTI_PE --> /main/template/constants/MMULTI_PE_con/MMULTI_PE
					symbol external misc VAGUE_PE --> /main/template/constants/VAGUE_PE_con/VAGUE_PE
					symbol external misc ITGONE_PE --> /main/template/constants/ITGONE_PE_con/ITGONE_PE
					symbol external misc EXCEPT_PE --> /main/template/constants/EXCEPT_PE_con/EXCEPT_PE
					symbol external misc ANIMA_PE --> /main/template/constants/ANIMA_PE_con/ANIMA_PE
					symbol external misc SCENERY_PE --> /main/template/constants/SCENERY_PE_con/SCENERY_PE
					symbol external misc JUNKAFTER_PE --> /main/template/constants/JUNKAFTER_PE_con/JUNKAFTER_PE
					symbol external misc TOOFEW_PE --> /main/template/constants/TOOFEW_PE_con/TOOFEW_PE
					symbol external misc plug_00265 --> /main/template/variables/multi_had_var/multi_had
					symbol external misc plug_00266 --> /main/connectors/plug_00266
					symbol external misc Object --> /main/veneer/Object
					symbol external misc plug_00267 --> /main/connectors/plug_00267
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc supporter --> /main/template/properties/supporter_prop/supporter
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc children --> /main/veneer/children
					symbol external misc plug_00268 --> /main/template/variables/multi_wanted_var/multi_wanted
					symbol external misc NOTINCONTEXT_PE --> /main/template/constants/NOTINCONTEXT_PE_con/NOTINCONTEXT_PE
					symbol external misc plug_00269 --> /main/template/variables/scope_stage_var/scope_stage
					symbol external misc indirect --> /main/veneer/indirect
					symbol external misc plug_00270 --> /main/template/variables/scope_error_var/scope_error
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					local syntax K_unchecked
					local line K_unchecked
					local num_lines K_unchecked
					local line_address K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local token K_unchecked
					local l K_unchecked
					local m K_unchecked
					local inferred_go K_unchecked
					code
						inv !store
							reference
								val K_unchecked cobj_flag
							val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked parser_results
									val K_unchecked ACTION_PRES
							val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked parser_results
									val K_unchecked NO_INPS_PRES
							val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked parser_results
									val K_unchecked INP1_PRES
							val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked parser_results
									val K_unchecked INP2_PRES
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked meta
							val K_unchecked 0
						inv !if
							val K_unchecked held_back_mode
							code
								inv !store
									reference
										val K_unchecked held_back_mode
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked hb_wn
								inv !ifelse
									inv !gt
										val K_unchecked verb_wordnum
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked i
											inv WordAddress
												val K_unchecked verb_wordnum
									code
										inv !store
											reference
												val K_unchecked i
											inv WordAddress
												val K_unchecked 1
								inv !store
									reference
										val K_unchecked j
									inv WordAddress
										val K_unchecked wn
								inv !if
									inv !le
										val K_unchecked i
										val K_unchecked j
									code
										inv !for
											val K_unchecked 1
											inv !lt
												val K_unchecked i
												val K_unchecked j
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked i
															val K_unchecked 0
													val K_unchecked 32
								inv !store
									reference
										val K_unchecked i
									inv NextWord
								inv !if
									inv !eq
										val K_unchecked i
										inv !alternative
											inv !alternative
												val K_unchecked AGAIN1__WD
												val K_unchecked AGAIN2__WD
											val K_unchecked AGAIN3__WD
									code
										inv !store
											reference
												val K_unchecked i
											inv !minus
												inv WordAddress
													inv !minus
														val K_unchecked wn
														val K_unchecked 2
												val K_unchecked buffer
										inv !ifelse
											inv !gt
												val K_unchecked wn
												val K_unchecked num_words
											code
												inv !store
													reference
														val K_unchecked j
													inv !minus
														val K_unchecked INPUT_BUFFER_LEN
														val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked j
													inv !minus
														inv WordAddress
															val K_unchecked wn
														val K_unchecked buffer
										inv !for
											val K_unchecked 1
											inv !lt
												val K_unchecked i
												val K_unchecked j
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked buffer3
															val K_unchecked i
													val K_unchecked 32
								inv VM_Tokenise
									val K_unchecked buffer
									val K_unchecked parse
								inv !jump
									lab .ReParse
						.ReType
						inv !store
							reference
								val K_unchecked cobj_flag
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked actors_location
							inv ScopeCeiling
								val K_unchecked player
						inv BeginActivity
							val K_unchecked READING_A_COMMAND_ACT
						inv !if
							inv !eq
								inv ForActivity
									val K_unchecked READING_A_COMMAND_ACT
								val K_unchecked 0
							code
								inv Keyboard
									val K_unchecked buffer
									val K_unchecked parse
								inv !store
									reference
										val K_unchecked num_words
									inv WordCount
								inv !store
									reference
										val K_unchecked players_command
									inv !plus
										val K_unchecked 100
										val K_unchecked num_words
						inv !if
							inv EndActivity
								val K_unchecked READING_A_COMMAND_ACT
							code
								inv !jump
									lab .ReType
						.ReParse
						inv !store
							reference
								val K_unchecked parser_inflection
							val K_unchecked plug_00229
						inv !store
							reference
								val K_unchecked num_words
							inv WordCount
						inv !store
							reference
								val K_unchecked players_command
							inv !plus
								val K_unchecked 100
								val K_unchecked num_words
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked inferred_go
							val K_unchecked 0
						inv LanguageToInformese
						inv VM_Tokenise
							val K_unchecked buffer
							val K_unchecked parse
						inv !store
							reference
								val K_unchecked num_words
							inv WordCount
						inv !store
							reference
								val K_unchecked players_command
							inv !plus
								val K_unchecked 100
								val K_unchecked num_words
						inv !store
							reference
								val K_unchecked k
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked verb_wordnum
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked player
						inv !store
							reference
								val K_unchecked actors_location
							inv ScopeCeiling
								val K_unchecked player
						inv !store
							reference
								val K_unchecked usual_grammar_after
							val K_unchecked 0
						.AlmostReParse
						inv !store
							reference
								val K_unchecked scope_token
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked action_to_be
							val K_unchecked plug_00232
						.BeginCommand
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked verb_wordnum
						inv !store
							reference
								val K_unchecked verb_word
							inv NextWordStopped
						inv !if
							inv !eq
								val K_unchecked verb_word
								val K_unchecked -1
							code
								inv !store
									reference
										val K_unchecked best_etype
									val K_unchecked STUCK_PE
								inv !jump
									lab .GiveError
						inv !if
							inv !eq
								val K_unchecked verb_word
								val K_unchecked comma_word
							code
								inv !store
									reference
										val K_unchecked best_etype
									val K_unchecked COMMABEGIN_PE
								inv !jump
									lab .GiveError
						inv !if
							inv !eq
								val K_unchecked verb_word
								inv !alternative
									val K_unchecked AGAIN2__WD
									val K_unchecked AGAIN3__WD
							code
								inv !store
									reference
										val K_unchecked verb_word
									val K_unchecked AGAIN1__WD
						inv !if
							inv !eq
								val K_unchecked verb_word
								val K_unchecked AGAIN1__WD
							code
								inv !if
									inv !ne
										val K_unchecked actor
										val K_unchecked player
									code
										inv !store
											reference
												val K_unchecked best_etype
											val K_unchecked ANIMAAGAIN_PE
										inv !jump
											lab .GiveError
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked buffer3
											val K_unchecked 0
										val K_unchecked 0
									code
										inv plug_00217
											val K_unchecked 68
										inv !print
											val K_unchecked "\n"
										inv !jump
											lab .ReType
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked INPUT_BUFFER_LEN
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked buffer
													val K_unchecked i
											inv !lookupbyte
												val K_unchecked buffer3
												val K_unchecked i
								inv VM_Tokenise
									val K_unchecked buffer
									val K_unchecked parse
								inv !store
									reference
										val K_unchecked num_words
									inv WordCount
								inv !store
									reference
										val K_unchecked players_command
									inv !plus
										val K_unchecked 100
										val K_unchecked num_words
								inv !jump
									lab .ReParse
						inv !if
							inv !ne
								val K_unchecked verb_word
								val K_unchecked AGAIN1__WD
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked INPUT_BUFFER_LEN
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked buffer3
													val K_unchecked i
											inv !lookupbyte
												val K_unchecked buffer
												val K_unchecked i
						inv !ifelse
							inv !eq
								val K_unchecked usual_grammar_after
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked j
									val K_unchecked verb_wordnum
								inv !store
									reference
										val K_unchecked i
									inv RunRoutines
										val K_unchecked actor
										val K_unchecked grammar
								inv !if
									inv !and
										inv !ne
											val K_unchecked i
											inv !alternative
												val K_unchecked 0
												val K_unchecked 1
										inv VM_InvalidDictionaryAddress
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked usual_grammar_after
											val K_unchecked verb_wordnum
										inv !store
											reference
												val K_unchecked i
											inv !unaryminus
												val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked 1
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked ACTION_PRES
											val K_unchecked action
										inv !store
											reference
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked NO_INPS_PRES
											val K_unchecked 0
										inv !store
											reference
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked INP1_PRES
											val K_unchecked noun
										inv !store
											reference
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked INP2_PRES
											val K_unchecked second
										inv !if
											val K_unchecked noun
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked parser_results
															val K_unchecked NO_INPS_PRES
													val K_unchecked 1
										inv !if
											val K_unchecked second
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked parser_results
															val K_unchecked NO_INPS_PRES
													val K_unchecked 2
										inv !return
											val K_unchecked 1
								inv !ifelse
									inv !ne
										val K_unchecked i
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked verb_word
											val K_unchecked i
										inv !postdecrement
											reference
												val K_unchecked wn
										inv !postdecrement
											reference
												val K_unchecked verb_wordnum
									code
										inv !store
											reference
												val K_unchecked wn
											val K_unchecked verb_wordnum
										inv !store
											reference
												val K_unchecked verb_word
											inv NextWord
							code
								inv !store
									reference
										val K_unchecked usual_grammar_after
									val K_unchecked 0
						inv !if
							inv !or
								inv !eq
									val K_unchecked verb_word
									val K_unchecked 0
								inv !eq
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked verb_word
											val K_unchecked #dict_par1
										val K_unchecked 1
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked verb_wordnum
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked token_filter
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked parameters
									val K_unchecked 0
								inv !push
									val K_unchecked actor
								inv !push
									val K_unchecked action
								inv !push
									val K_unchecked action_to_be
								inv !store
									reference
										val K_unchecked actor
									val K_unchecked player
								inv !store
									reference
										val K_unchecked meta
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked action
									val K_unchecked plug_00239
								inv !store
									reference
										val K_unchecked action_to_be
									val K_unchecked plug_00239
								inv !store
									reference
										val K_unchecked l
									inv NounDomain
										val K_unchecked Compass
										val K_unchecked 0
										val K_unchecked 0
								inv !pull
									reference
										val K_unchecked action_to_be
								inv !pull
									reference
										val K_unchecked action
								inv !pull
									reference
										val K_unchecked actor
								inv !if
									inv !eq
										val K_unchecked l
										val K_unchecked plug_00240
									code
										inv !jump
											lab .ReParse
								inv !if
									inv !and
										inv !ne
											val K_unchecked l
											val K_unchecked 0
										inv !ofclass
											val K_unchecked l
											val K_unchecked plug_00241
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked ACTION_PRES
											val K_unchecked plug_00239
										inv !store
											reference
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked NO_INPS_PRES
											val K_unchecked 1
										inv !store
											reference
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked INP1_PRES
											val K_unchecked l
										inv !store
											reference
												val K_unchecked inferred_go
											val K_unchecked 1
										inv !jump
											lab .LookForMore
						inv !if
							inv !eq
								val K_unchecked actor
								val K_unchecked player
							code
								inv !for
									inv !store
										reference
											val K_unchecked j
										val K_unchecked 2
									inv !le
										val K_unchecked j
										val K_unchecked num_words
									inv !postincrement
										reference
											val K_unchecked j
									code
										inv !store
											reference
												val K_unchecked i
											inv NextWord
										inv !if
											inv !eq
												val K_unchecked i
												val K_unchecked comma_word
											code
												inv !jump
													lab .Conversation
						inv !jump
							lab .NotConversation
						.Conversation
						inv !store
							reference
								val K_unchecked j
							inv !minus
								val K_unchecked wn
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked lookahead
							val K_unchecked HELD_TOKEN
						inv !store
							reference
								val K_unchecked scope_reason
							val K_unchecked TALKING_REASON
						inv !store
							reference
								val K_unchecked l
							inv NounDomain
								val K_unchecked player
								val K_unchecked actors_location
								val K_unchecked 6
						inv !store
							reference
								val K_unchecked scope_reason
							val K_unchecked PARSING_REASON
						inv !if
							inv !eq
								val K_unchecked l
								val K_unchecked plug_00240
							code
								inv !jump
									lab .ReParse
						inv !if
							inv !eq
								val K_unchecked l
								val K_unchecked 0
							code
								inv !if
									inv !and
										val K_unchecked verb_word
										inv !bitwiseand
											inv !lookupbyte
												val K_unchecked verb_word
												val K_unchecked #dict_par1
											val K_unchecked 1
									code
										inv !jump
											lab .NotConversation
								inv !store
									reference
										val K_unchecked best_etype
									val K_unchecked MISSINGPERSON_PE
								inv !jump
									lab .GiveError
						.Conversation2
						inv !if
							inv !and
								inv !hasnt
									val K_unchecked l
									val K_unchecked animate
								inv !hasnt
									val K_unchecked l
									val K_unchecked talkable
							code
								inv !store
									reference
										val K_unchecked best_etype
									val K_unchecked ANIMALISTEN_PE
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked l
								inv !jump
									lab .GiveError
						inv !if
							inv !ne
								val K_unchecked wn
								val K_unchecked j
							code
								inv !if
									inv !and
										val K_unchecked verb_word
										inv !bitwiseand
											inv !lookupbyte
												val K_unchecked verb_word
												val K_unchecked #dict_par1
											val K_unchecked 1
									code
										inv !jump
											lab .NotConversation
								inv !store
									reference
										val K_unchecked best_etype
									val K_unchecked TOTALK_PE
								inv !jump
									lab .GiveError
						inv PronounNotice
							val K_unchecked l
						inv !store
							reference
								val K_unchecked verb_wordnum
							inv !plus
								val K_unchecked j
								val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked l
								val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked verb_wordnum
								inv !if
									inv !eq
										inv NextWordStopped
										inv !alternative
											inv !alternative
												val K_unchecked AGAIN1__WD
												val K_unchecked AGAIN2__WD
											val K_unchecked AGAIN3__WD
									code
										inv !store
											reference
												val K_unchecked best_etype
											val K_unchecked ANIMAAGAIN_PE
										inv !jump
											lab .GiveError
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked l
						inv !store
							reference
								val K_unchecked actors_location
							inv ScopeCeiling
								val K_unchecked l
						inv !jump
							lab .BeginCommand
						.NotConversation
						inv !if
							inv !or
								inv !eq
									val K_unchecked verb_word
									val K_unchecked 0
								inv !eq
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked verb_word
											val K_unchecked #dict_par1
										val K_unchecked 1
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked verb_word
									inv UnknownVerb
										val K_unchecked verb_word
								inv !if
									inv !ne
										val K_unchecked verb_word
										val K_unchecked 0
									code
										inv !jump
											lab .VerbAccepted
								inv !store
									reference
										val K_unchecked best_etype
									val K_unchecked VERB_PE
								inv !jump
									lab .GiveError
						.VerbAccepted
						inv !store
							reference
								val K_unchecked meta
							inv !divide
								inv !bitwiseand
									inv !lookupbyte
										val K_unchecked verb_word
										val K_unchecked #dict_par1
									val K_unchecked 2
								val K_unchecked 2
						inv !if
							inv !and
								inv !eq
									val K_unchecked meta
									val K_unchecked 1
								inv !ne
									val K_unchecked actor
									val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked best_etype
									val K_unchecked VERB_PE
								inv !store
									reference
										val K_unchecked meta
									val K_unchecked 0
								inv !jump
									lab .GiveError
						inv !store
							reference
								val K_unchecked i
							inv DictionaryWordToVerbNum
								val K_unchecked verb_word
						inv !store
							reference
								val K_unchecked syntax
							inv !lookup
								val K_unchecked #grammar_table
								inv !plus
									val K_unchecked i
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked num_lines
							inv !minus
								inv !lookupbyte
									val K_unchecked syntax
									val K_unchecked 0
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked pronoun_word
							val K_unchecked plug_00232
						inv !store
							reference
								val K_unchecked pronoun_obj
							val K_unchecked plug_00232
						inv !store
							reference
								val K_unchecked best_etype
							val K_unchecked STUCK_PE
						inv !store
							reference
								val K_unchecked nextbest_etype
							val K_unchecked STUCK_PE
						inv !store
							reference
								val K_unchecked multiflag
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked line_address
							inv !plus
								val K_unchecked syntax
								val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked line
								val K_unchecked 0
							inv !le
								val K_unchecked line
								val K_unchecked num_lines
							inv !postincrement
								reference
									val K_unchecked line
							code
								inv !store
									reference
										val K_unchecked line_address
									inv UnpackGrammarLine
										val K_unchecked line_address
								inv !store
									reference
										val K_unchecked inferfrom
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked parameters
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked nsns
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked special_word
									val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked 0
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked multi_context
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked etype
									val K_unchecked STUCK_PE
								inv !store
									reference
										val K_unchecked wn
									inv !plus
										val K_unchecked verb_wordnum
										val K_unchecked 1
								inv !store
									reference
										val K_unchecked advance_warning
									val K_unchecked -1
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked 0
								inv !for
									inv !sequential
										inv !store
											reference
												val K_unchecked i
											val K_unchecked 0
										inv !sequential
											inv !store
												reference
													val K_unchecked m
												val K_unchecked 0
											inv !store
												reference
													val K_unchecked pcount
												val K_unchecked 0
									inv !ne
										inv !lookup
											val K_unchecked line_token
											val K_unchecked pcount
										val K_unchecked ENDIT_TOKEN
									inv !postincrement
										reference
											val K_unchecked pcount
									code
										inv !store
											reference
												val K_unchecked scope_token
											val K_unchecked 0
										inv !if
											inv !ne
												inv !lookup
													val K_unchecked line_ttype
													val K_unchecked pcount
												val K_unchecked PREPOSITION_TT
											code
												inv !postincrement
													reference
														val K_unchecked i
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked line_ttype
													val K_unchecked pcount
												val K_unchecked ELEMENTARY_TT
											code
												inv !if
													inv !eq
														inv !lookup
															val K_unchecked line_tdata
															val K_unchecked pcount
														val K_unchecked MULTI_TOKEN
													code
														inv !store
															reference
																val K_unchecked m
															val K_unchecked 1
												inv !if
													inv !and
														inv !eq
															inv !lookup
																val K_unchecked line_tdata
																val K_unchecked pcount
															inv !alternative
																val K_unchecked MULTIEXCEPT_TOKEN
																val K_unchecked MULTIINSIDE_TOKEN
														inv !eq
															val K_unchecked i
															val K_unchecked 1
													code
														inv !postincrement
															reference
																val K_unchecked pcount
														inv !if
															inv !eq
																inv !lookup
																	val K_unchecked line_ttype
																	val K_unchecked pcount
																val K_unchecked PREPOSITION_TT
															code
																inv !do
																	inv !or
																		inv !gt
																			val K_unchecked wn
																			val K_unchecked num_words
																		inv !and
																			val K_unchecked l
																			inv !ne
																				inv !bitwiseand
																					inv !lookupbyte
																						val K_unchecked l
																						val K_unchecked #dict_par1
																					val K_unchecked 8
																				val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked l
																			inv NextWord
																inv !if
																	inv !gt
																		val K_unchecked wn
																		val K_unchecked num_words
																	code
																		inv !jump
																			lab .EmptyLine
																inv !do
																	inv !ne
																		inv !lookup
																			val K_unchecked line_ttype
																			val K_unchecked pcount
																		val K_unchecked PREPOSITION_TT
																	code
																		inv !ifelse
																			inv !ne
																				inv PrepositionChain
																					val K_unchecked l
																					val K_unchecked pcount
																				val K_unchecked -1
																			code
																				inv !ifelse
																					inv !ne
																						inv !bitwiseand
																							inv !lookupbyte
																								inv !lookup
																									val K_unchecked line_token
																									val K_unchecked pcount
																								val K_unchecked 0
																							val K_unchecked 32
																						val K_unchecked 0
																					code
																						inv !postincrement
																							reference
																								val K_unchecked pcount
																						inv !while
																							inv !and
																								inv !ne
																									inv !lookup
																										val K_unchecked line_token
																										val K_unchecked pcount
																									val K_unchecked ENDIT_TOKEN
																								inv !ne
																									inv !bitwiseand
																										inv !lookupbyte
																											inv !lookup
																												val K_unchecked line_token
																												val K_unchecked pcount
																											val K_unchecked 0
																										val K_unchecked 16
																									val K_unchecked 0
																							code
																								inv !postincrement
																									reference
																										val K_unchecked pcount
																					code
																						inv !postincrement
																							reference
																								val K_unchecked pcount
																			code
																				inv !do
																					inv !or
																						inv !ge
																							val K_unchecked wn
																							val K_unchecked num_words
																						inv !and
																							val K_unchecked l
																							inv !ne
																								inv !bitwiseand
																									inv !lookupbyte
																										val K_unchecked l
																										val K_unchecked #dict_par1
																									val K_unchecked 8
																								val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked l
																							inv NextWord
																				inv !if
																					inv !and
																						val K_unchecked l
																						inv !bitwiseand
																							inv !lookupbyte
																								val K_unchecked l
																								val K_unchecked #dict_par1
																							val K_unchecked 8
																					code
																						inv !continue
																				inv !jump
																					lab .LineFailed
																		inv !if
																			inv !le
																				val K_unchecked wn
																				val K_unchecked num_words
																			code
																				inv !store
																					reference
																						val K_unchecked l
																					inv NextWord
																.EmptyLine
																inv !postdecrement
																	reference
																		val K_unchecked wn
																inv !if
																	inv !and
																		inv !eq
																			inv !lookup
																				val K_unchecked line_ttype
																				val K_unchecked pcount
																			val K_unchecked ELEMENTARY_TT
																		inv !eq
																			inv !lookup
																				val K_unchecked line_tdata
																				val K_unchecked pcount
																			val K_unchecked NOUN_TOKEN
																	code
																		inv !store
																			reference
																				val K_unchecked l
																			inv Descriptors
																		inv !if
																			inv !ne
																				val K_unchecked l
																				val K_unchecked 0
																			code
																				inv !store
																					reference
																						val K_unchecked etype
																					val K_unchecked l
																		inv !store
																			reference
																				val K_unchecked k
																			inv !lookup
																				val K_unchecked parser_results
																				val K_unchecked INP1_PRES
																		inv !push
																			val K_unchecked k
																		inv !push
																			val K_unchecked parameters
																		inv !store
																			reference
																				val K_unchecked parameters
																			val K_unchecked 1
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked parser_results
																					val K_unchecked INP1_PRES
																			val K_unchecked 0
																		inv !store
																			reference
																				val K_unchecked l
																			inv NounDomain
																				val K_unchecked actors_location
																				val K_unchecked actor
																				val K_unchecked NOUN_TOKEN
																				val K_unchecked 1
																		inv !pull
																			reference
																				val K_unchecked parameters
																		inv !pull
																			reference
																				val K_unchecked k
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked parser_results
																					val K_unchecked INP1_PRES
																			val K_unchecked k
																		inv !if
																			inv !eq
																				val K_unchecked l
																				val K_unchecked plug_00240
																			code
																				inv !jump
																					lab .ReParse
																		inv !if
																			inv !ge
																				val K_unchecked l
																				val K_unchecked 2
																			code
																				inv !store
																					reference
																						val K_unchecked advance_warning
																					val K_unchecked l
														inv !break
								inv !store
									reference
										val K_unchecked take_all_rule
									val K_unchecked 0
								inv !if
									inv !and
										inv !and
											val K_unchecked m
											inv !eq
												val K_unchecked params_wanted
												val K_unchecked 1
										inv !eq
											val K_unchecked action_to_be
											val K_unchecked plug_00254
									code
										inv !store
											reference
												val K_unchecked take_all_rule
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked inferfrom
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked parameters
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked nsns
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked special_word
									val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked 0
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked etype
									val K_unchecked STUCK_PE
								inv !store
									reference
										val K_unchecked wn
									inv !plus
										val K_unchecked verb_wordnum
										val K_unchecked 1
								inv !store
									reference
										val K_unchecked m
									val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked pcount
										val K_unchecked 1
									val K_unchecked 1
									inv !postincrement
										reference
											val K_unchecked pcount
									code
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked line_token
													inv !minus
														val K_unchecked pcount
														val K_unchecked 1
												val K_unchecked ENDIT_TOKEN
											code
												inv !if
													inv !ge
														val K_unchecked pcount
														val K_unchecked 2
													code
														inv !while
															inv !ne
																inv !bitwiseand
																	inv !lookupbyte
																		inv !lookup
																			val K_unchecked line_token
																			inv !minus
																				val K_unchecked pcount
																				val K_unchecked 2
																		val K_unchecked 0
																	val K_unchecked 16
																val K_unchecked 0
															code
																inv !postdecrement
																	reference
																		val K_unchecked pcount
														inv AnalyseToken
															inv !lookup
																val K_unchecked line_token
																inv !minus
																	val K_unchecked pcount
																	val K_unchecked 2
														inv !if
															inv !eq
																val K_unchecked found_ttype
																val K_unchecked PREPOSITION_TT
															code
																inv !store
																	reference
																		val K_unchecked l
																	val K_unchecked -1
																inv !while
																	val K_unchecked 1
																	code
																		inv !store
																			reference
																				val K_unchecked m
																			inv NextWordStopped
																		inv !if
																			inv !eq
																				val K_unchecked m
																				val K_unchecked -1
																			code
																				inv !break
																		inv !store
																			reference
																				val K_unchecked l
																			val K_unchecked m
																inv !ifelse
																	inv !eq
																		inv PrepositionChain
																			val K_unchecked l
																			inv !minus
																				val K_unchecked pcount
																				val K_unchecked 2
																		val K_unchecked -1
																	code
																		inv !store
																			reference
																				val K_unchecked m
																			val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked m
																			val K_unchecked 1
												inv !break
								inv !store
									reference
										val K_unchecked wn
									inv !plus
										val K_unchecked verb_wordnum
										val K_unchecked 1
								inv !if
									val K_unchecked m
									code
										inv !for
											inv !store
												reference
													val K_unchecked pcount
												val K_unchecked 1
											val K_unchecked 1
											inv !postincrement
												reference
													val K_unchecked pcount
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked pattern
															val K_unchecked pcount
													val K_unchecked PATTERN_NULL
												inv !store
													reference
														val K_unchecked scope_token
													val K_unchecked 0
												inv !store
													reference
														val K_unchecked token
													inv !lookup
														val K_unchecked line_token
														inv !minus
															val K_unchecked pcount
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked lookahead
													inv !lookup
														val K_unchecked line_token
														val K_unchecked pcount
												inv !ifelse
													inv !ne
														val K_unchecked token
														val K_unchecked ENDIT_TOKEN
													code
														inv !store
															reference
																val K_unchecked scope_reason
															val K_unchecked PARSING_REASON
														inv AnalyseToken
															val K_unchecked token
														inv !store
															reference
																val K_unchecked l
															inv ParseToken
																val K_unchecked found_ttype
																val K_unchecked found_tdata
																inv !minus
																	val K_unchecked pcount
																	val K_unchecked 1
																val K_unchecked token
														inv !while
															inv !and
																inv !ge
																	val K_unchecked l
																	val K_unchecked GPR_NOUN
																inv !lt
																	val K_unchecked l
																	val K_unchecked -1
															code
																inv !store
																	reference
																		val K_unchecked l
																	inv ParseToken
																		val K_unchecked ELEMENTARY_TT
																		inv !plus
																			val K_unchecked l
																			val K_unchecked 256
														inv !store
															reference
																val K_unchecked scope_reason
															val K_unchecked PARSING_REASON
														inv !ifelse
															inv !eq
																val K_unchecked l
																val K_unchecked GPR_PREPOSITION
															code
																inv !if
																	inv !and
																		inv !ne
																			val K_unchecked found_ttype
																			val K_unchecked PREPOSITION_TT
																		inv !or
																			inv !ne
																				val K_unchecked found_ttype
																				val K_unchecked ELEMENTARY_TT
																			inv !ne
																				val K_unchecked found_tdata
																				val K_unchecked TOPIC_TOKEN
																	code
																		inv !postdecrement
																			reference
																				val K_unchecked params_wanted
																inv !store
																	reference
																		val K_unchecked l
																	val K_unchecked 1
															code
																inv !ifelse
																	inv !lt
																		val K_unchecked l
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked l
																			val K_unchecked 0
																	code
																		inv !if
																			inv !ne
																				val K_unchecked l
																				val K_unchecked GPR_REPARSE
																			code
																				inv !if
																					inv !eq
																						val K_unchecked l
																						val K_unchecked GPR_NUMBER
																					code
																						inv !ifelse
																							inv !eq
																								val K_unchecked nsns
																								val K_unchecked 0
																							code
																								inv !store
																									reference
																										val K_unchecked special_number1
																									val K_unchecked parsed_number
																							code
																								inv !store
																									reference
																										val K_unchecked special_number2
																									val K_unchecked parsed_number
																						inv !postincrement
																							reference
																								val K_unchecked nsns
																						inv !store
																							reference
																								val K_unchecked l
																							val K_unchecked 1
																				inv !if
																					inv !eq
																						val K_unchecked l
																						val K_unchecked GPR_MULTIPLE
																					code
																						inv !store
																							reference
																								val K_unchecked l
																							val K_unchecked 0
																				inv !store
																					reference
																						inv !lookup
																							val K_unchecked parser_results
																							inv !plus
																								val K_unchecked parameters
																								val K_unchecked INP1_PRES
																					val K_unchecked l
																				inv !postincrement
																					reference
																						val K_unchecked parameters
																				inv !store
																					reference
																						inv !lookup
																							val K_unchecked pattern
																							val K_unchecked pcount
																					val K_unchecked l
																				inv !store
																					reference
																						val K_unchecked l
																					val K_unchecked 1
														inv !if
															inv !eq
																val K_unchecked l
																val K_unchecked plug_00240
															code
																inv !jump
																	lab .ReParse
														inv !if
															inv !eq
																val K_unchecked l
																val K_unchecked 0
															code
																inv !break
													code
														inv !if
															inv !le
																val K_unchecked wn
																val K_unchecked num_words
															code
																inv !store
																	reference
																		val K_unchecked l
																	inv NextWord
																inv !ifelse
																	inv !eq
																		val K_unchecked l
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					val K_unchecked THEN1__WD
																					val K_unchecked THEN2__WD
																				val K_unchecked THEN3__WD
																			val K_unchecked comma_word
																	code
																		inv !store
																			reference
																				val K_unchecked held_back_mode
																			val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked hb_wn
																			inv !minus
																				val K_unchecked wn
																				val K_unchecked 1
																	code
																		inv !for
																			inv !store
																				reference
																					val K_unchecked m
																				val K_unchecked 0
																			inv !lt
																				val K_unchecked m
																				val K_unchecked 32
																			inv !postincrement
																				reference
																					val K_unchecked m
																			code
																				inv !store
																					reference
																						inv !lookup
																							val K_unchecked pattern2
																							val K_unchecked m
																					inv !lookup
																						val K_unchecked pattern
																						val K_unchecked m
																		inv !store
																			reference
																				val K_unchecked pcount2
																			val K_unchecked pcount
																		inv !store
																			reference
																				val K_unchecked etype
																			val K_unchecked UPTO_PE
																		inv !break
														inv !if
															inv !ge
																val K_unchecked parameters
																val K_unchecked 1
															code
																inv !if
																	inv !eq
																		inv !lookup
																			val K_unchecked parser_results
																			val K_unchecked INP1_PRES
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked l
																			inv ReviseMulti
																				inv !lookup
																					val K_unchecked parser_results
																					val K_unchecked INP2_PRES
																		inv !if
																			inv !ne
																				val K_unchecked l
																				val K_unchecked 0
																			code
																				inv !store
																					reference
																						val K_unchecked etype
																					val K_unchecked l
																				inv !store
																					reference
																						inv !lookup
																							val K_unchecked parser_results
																							val K_unchecked ACTION_PRES
																					val K_unchecked action_to_be
																				inv !break
														inv !if
															inv !ge
																val K_unchecked parameters
																val K_unchecked 2
															code
																inv !ifelse
																	inv !eq
																		inv !lookup
																			val K_unchecked parser_results
																			val K_unchecked INP2_PRES
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked l
																			inv ReviseMulti
																				inv !lookup
																					val K_unchecked parser_results
																					val K_unchecked INP1_PRES
																		inv !if
																			inv !ne
																				val K_unchecked l
																				val K_unchecked 0
																			code
																				inv !store
																					reference
																						val K_unchecked etype
																					val K_unchecked l
																				inv !break
																	code
																		inv !store
																			reference
																				val K_unchecked k
																			inv !lookup
																				val K_unchecked parser_results
																				val K_unchecked INP1_PRES
																		inv !store
																			reference
																				val K_unchecked l
																			inv !lookup
																				val K_unchecked parser_results
																				val K_unchecked INP2_PRES
																		inv !if
																			inv !and
																				val K_unchecked k
																				val K_unchecked l
																			code
																				inv !if
																					inv !or
																						inv !and
																							inv !eq
																								val K_unchecked multi_context
																								val K_unchecked MULTIEXCEPT_TOKEN
																							inv !eq
																								val K_unchecked k
																								val K_unchecked l
																						inv !and
																							inv !and
																								inv !eq
																									val K_unchecked multi_context
																									val K_unchecked MULTIINSIDE_TOKEN
																								inv !notin
																									val K_unchecked k
																									val K_unchecked l
																							inv !notin
																								val K_unchecked l
																								val K_unchecked k
																					code
																						inv !store
																							reference
																								val K_unchecked best_etype
																							val K_unchecked NOTHING_PE
																						inv !store
																							reference
																								inv !lookup
																									val K_unchecked parser_results
																									val K_unchecked ACTION_PRES
																							val K_unchecked action_to_be
																						inv !jump
																							lab .GiveError
														inv !if
															inv !and
																inv !eq
																	val K_unchecked take_all_rule
																	val K_unchecked 2
																inv !eq
																	inv !lookup
																		val K_unchecked parser_results
																		val K_unchecked INP1_PRES
																	val K_unchecked actor
															code
																inv !store
																	reference
																		val K_unchecked best_etype
																	val K_unchecked NOTHING_PE
																inv !jump
																	lab .GiveError
														inv !store
															reference
																val K_unchecked oops_from
															val K_unchecked 0
														inv !if
															inv !ne
																val K_unchecked inferfrom
																val K_unchecked 0
															code
																inv PrintInferredCommand
																	val K_unchecked inferfrom
																inv ClearParagraphing
																	val K_unchecked 20
														inv !store
															reference
																inv !lookup
																	val K_unchecked parser_results
																	val K_unchecked ACTION_PRES
															val K_unchecked action_to_be
														inv !store
															reference
																inv !lookup
																	val K_unchecked parser_results
																	val K_unchecked NO_INPS_PRES
															val K_unchecked parameters
														inv !if
															inv !and
																val K_unchecked action_reversed
																inv !eq
																	val K_unchecked parameters
																	val K_unchecked 2
															code
																inv !store
																	reference
																		val K_unchecked i
																	inv !lookup
																		val K_unchecked parser_results
																		val K_unchecked INP1_PRES
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked parser_results
																			val K_unchecked INP1_PRES
																	inv !lookup
																		val K_unchecked parser_results
																		val K_unchecked INP2_PRES
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked parser_results
																			val K_unchecked INP2_PRES
																	val K_unchecked i
																inv !if
																	inv !eq
																		val K_unchecked nsns
																		val K_unchecked 2
																	code
																		inv !store
																			reference
																				val K_unchecked i
																			val K_unchecked special_number1
																		inv !store
																			reference
																				val K_unchecked special_number1
																			val K_unchecked special_number2
																		inv !store
																			reference
																				val K_unchecked special_number2
																			val K_unchecked i
														inv !if
															inv !and
																inv !gt
																	val K_unchecked parameters
																	val K_unchecked 0
																inv !ge
																	inv !lookup
																		val K_unchecked parser_results
																		val K_unchecked INP1_PRES
																	val K_unchecked 2
															code
																inv PronounNotice
																	inv !lookup
																		val K_unchecked parser_results
																		val K_unchecked INP1_PRES
														inv !if
															val K_unchecked held_back_mode
															code
																inv !store
																	reference
																		val K_unchecked wn
																	val K_unchecked hb_wn
																inv !jump
																	lab .LookForMore
														inv !return
															val K_unchecked 1
								.LineFailed
								inv !if
									inv !gt
										val K_unchecked etype
										val K_unchecked best_etype
									code
										inv !store
											reference
												val K_unchecked best_etype
											val K_unchecked etype
								inv !if
									inv !and
										inv !ne
											val K_unchecked etype
											val K_unchecked ASKSCOPE_PE
										inv !gt
											val K_unchecked etype
											val K_unchecked nextbest_etype
									code
										inv !store
											reference
												val K_unchecked nextbest_etype
											val K_unchecked etype
								inv !if
									inv !and
										inv !eq
											val K_unchecked take_all_rule
											val K_unchecked 2
										inv !eq
											val K_unchecked etype
											val K_unchecked NOTHING_PE
									code
										inv !break
						.GiveError
						inv !store
							reference
								val K_unchecked etype
							val K_unchecked best_etype
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !if
									inv !ne
										val K_unchecked usual_grammar_after
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked verb_wordnum
											val K_unchecked usual_grammar_after
										inv !jump
											lab .AlmostReParse
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked verb_wordnum
								inv !store
									reference
										val K_unchecked special_word
									inv NextWord
								inv !if
									inv !eq
										val K_unchecked special_word
										val K_unchecked comma_word
									code
										inv !store
											reference
												val K_unchecked special_word
											inv NextWord
										inv !postincrement
											reference
												val K_unchecked verb_wordnum
								inv !store
									reference
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked ACTION_PRES
									val K_unchecked plug_00259
								inv !store
									reference
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked NO_INPS_PRES
									val K_unchecked 2
								inv !store
									reference
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked INP1_PRES
									val K_unchecked actor
								inv !store
									reference
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked INP2_PRES
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked special_number1
									val K_unchecked special_word
								inv !store
									reference
										val K_unchecked actor
									val K_unchecked player
								inv !store
									reference
										val K_unchecked consult_from
									val K_unchecked verb_wordnum
								inv !store
									reference
										val K_unchecked consult_words
									inv !plus
										inv !minus
											val K_unchecked num_words
											val K_unchecked consult_from
										val K_unchecked 1
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !or
								inv !ofclass
									val K_unchecked etype
									val K_unchecked Routine
								inv !ofclass
									val K_unchecked etype
									val K_unchecked String
							code
								inv !if
									inv !ne
										inv ParserError
											val K_unchecked etype
										val K_unchecked 0
									code
										inv !jump
											lab .ReType
							code
								inv !if
									inv !and
										inv !eq
											val K_unchecked verb_wordnum
											val K_unchecked 0
										inv !eq
											val K_unchecked etype
											val K_unchecked CANTSEE_PE
									code
										inv !store
											reference
												val K_unchecked etype
											val K_unchecked VERB_PE
								inv !store
									reference
										val K_unchecked players_command
									inv !plus
										val K_unchecked 100
										inv WordCount
								inv BeginActivity
									val K_unchecked PRINTING_A_PARSER_ERROR_ACT
								inv !if
									inv ForActivity
										val K_unchecked PRINTING_A_PARSER_ERROR_ACT
									code
										inv !jump
											lab .SkipParserError
						inv !store
							reference
								val K_unchecked pronoun_word
							val K_unchecked pronoun__word
						inv !store
							reference
								val K_unchecked pronoun_obj
							val K_unchecked pronoun__obj
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked STUCK_PE
							code
								inv plug_00214
									val K_unchecked 65
								inv !print
									val K_unchecked "\n"
								inv !store
									reference
										val K_unchecked oops_from
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked UPTO_PE
							code
								inv !ifelse
									val K_unchecked inferred_go
									code
										inv plug_00214
											val K_unchecked 67
									code
										inv plug_00214
											val K_unchecked 66
								inv !for
									inv !store
										reference
											val K_unchecked m
										val K_unchecked 0
									inv !lt
										val K_unchecked m
										val K_unchecked 32
									inv !postincrement
										reference
											val K_unchecked m
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked pattern
													val K_unchecked m
											inv !lookup
												val K_unchecked pattern2
												val K_unchecked m
								inv !store
									reference
										val K_unchecked pcount
									val K_unchecked pcount2
								inv PrintCommand
									val K_unchecked 0
								inv !print
									val K_unchecked ".\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked NUMBER_PE
							code
								inv plug_00214
									val K_unchecked 68
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked CANTSEE_PE
							code
								inv plug_00214
									val K_unchecked 69
								inv !print
									val K_unchecked "\n"
								inv !store
									reference
										val K_unchecked oops_from
									val K_unchecked saved_oops
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked TOOLIT_PE
							code
								inv plug_00214
									val K_unchecked 70
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked NOTHELD_PE
							code
								inv plug_00214
									val K_unchecked 71
								inv !print
									val K_unchecked "\n"
								inv !store
									reference
										val K_unchecked oops_from
									val K_unchecked saved_oops
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked MULTI_PE
							code
								inv plug_00214
									val K_unchecked 72
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked MMULTI_PE
							code
								inv plug_00214
									val K_unchecked 73
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked VAGUE_PE
							code
								inv plug_00214
									val K_unchecked 74
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked ITGONE_PE
							code
								inv !ifelse
									inv !eq
										val K_unchecked pronoun_obj
										val K_unchecked plug_00232
									code
										inv plug_00214
											val K_unchecked 74
										inv !print
											val K_unchecked "\n"
									code
										inv plug_00214
											val K_unchecked 75
											val K_unchecked noun
										inv !print
											val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked EXCEPT_PE
							code
								inv plug_00214
									val K_unchecked 76
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked ANIMA_PE
							code
								inv plug_00214
									val K_unchecked 77
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked VERB_PE
							code
								inv plug_00214
									val K_unchecked 78
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked SCENERY_PE
							code
								inv plug_00214
									val K_unchecked 79
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked JUNKAFTER_PE
							code
								inv plug_00214
									val K_unchecked 80
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked TOOFEW_PE
							code
								inv plug_00214
									val K_unchecked 81
									val K_unchecked multi_had
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked NOTHING_PE
							code
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked parser_results
												val K_unchecked ACTION_PRES
											val K_unchecked plug_00266
										inv !ofclass
											inv !lookup
												val K_unchecked parser_results
												val K_unchecked INP2_PRES
											val K_unchecked Object
									code
										inv !store
											reference
												val K_unchecked noun
											inv !lookup
												val K_unchecked parser_results
												val K_unchecked INP2_PRES
										inv !ifelse
											inv !has
												val K_unchecked noun
												val K_unchecked animate
											code
												inv plug_00267
													val K_unchecked 67
													val K_unchecked noun
												inv !print
													val K_unchecked "\n"
											code
												inv !ifelse
													inv !hasnt
														val K_unchecked noun
														inv !alternative
															val K_unchecked container
															val K_unchecked supporter
													code
														inv plug_00267
															val K_unchecked 68
															val K_unchecked noun
														inv !print
															val K_unchecked "\n"
													code
														inv !ifelse
															inv !and
																inv !has
																	val K_unchecked noun
																	val K_unchecked container
																inv !hasnt
																	val K_unchecked noun
																	val K_unchecked open
															code
																inv plug_00267
																	val K_unchecked 69
																	val K_unchecked noun
																inv !print
																	val K_unchecked "\n"
															code
																inv !ifelse
																	inv !eq
																		inv children
																			val K_unchecked noun
																		val K_unchecked 0
																	code
																		inv plug_00267
																			val K_unchecked 70
																			val K_unchecked noun
																		inv !print
																			val K_unchecked "\n"
																	code
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked parser_results
																					val K_unchecked ACTION_PRES
																			val K_unchecked 0
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked ACTION_PRES
										val K_unchecked plug_00266
									code
										inv !ifelse
											inv !eq
												val K_unchecked multi_wanted
												val K_unchecked 100
											code
												inv plug_00267
													val K_unchecked 65
												inv !print
													val K_unchecked "\n"
											code
												inv plug_00267
													val K_unchecked 66
												inv !print
													val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked NOTINCONTEXT_PE
							code
								inv plug_00214
									val K_unchecked 82
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked ANIMAAGAIN_PE
							code
								inv plug_00214
									val K_unchecked 83
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked COMMABEGIN_PE
							code
								inv plug_00214
									val K_unchecked 84
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked MISSINGPERSON_PE
							code
								inv plug_00214
									val K_unchecked 85
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked ANIMALISTEN_PE
							code
								inv plug_00214
									val K_unchecked 86
									val K_unchecked noun
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked TOTALK_PE
							code
								inv plug_00214
									val K_unchecked 87
								inv !print
									val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked etype
								val K_unchecked ASKSCOPE_PE
							code
								inv !store
									reference
										val K_unchecked scope_stage
									val K_unchecked 3
								inv !if
									inv !eq
										inv indirect
											val K_unchecked scope_error
										val K_unchecked -1
									code
										inv !store
											reference
												val K_unchecked best_etype
											val K_unchecked nextbest_etype
										inv !if
											inv !not
												inv !or
													inv !ofclass
														val K_unchecked etype
														val K_unchecked Routine
													inv !ofclass
														val K_unchecked etype
														val K_unchecked String
											code
												inv EndActivity
													val K_unchecked PRINTING_A_PARSER_ERROR_ACT
										inv !jump
											lab .GiveError
						.SkipParserError
						inv !if
							inv !or
								inv !ofclass
									val K_unchecked etype
									val K_unchecked Routine
								inv !ofclass
									val K_unchecked etype
									val K_unchecked String
							code
								inv !jump
									lab .ReType
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv EndActivity
							val K_unchecked PRINTING_A_PARSER_ERROR_ACT
						inv !jump
							lab .ReType
						.LookForMore
						inv !if
							inv !gt
								val K_unchecked wn
								val K_unchecked num_words
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked i
							inv NextWord
						inv !if
							inv !eq
								val K_unchecked i
								inv !alternative
									inv !alternative
										inv !alternative
											val K_unchecked THEN1__WD
											val K_unchecked THEN2__WD
										val K_unchecked THEN3__WD
									val K_unchecked comma_word
							code
								inv !if
									inv !gt
										val K_unchecked wn
										val K_unchecked num_words
									code
										inv !store
											reference
												val K_unchecked held_back_mode
											val K_unchecked 0
										inv !return
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked hb_wn
									val K_unchecked wn
								inv !store
									reference
										val K_unchecked held_back_mode
									val K_unchecked 1
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked best_etype
							val K_unchecked UPTO_PE
						inv !jump
							lab .GiveError
				constant Parser__parse K_unchecked_function = Parser__parse_B __assimilated=1
			package PARSER_ERROR_INTERNAL_R_fn _function
				symbol public misc PARSER_ERROR_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PARSER_ERROR_INTERNAL_R_B _code
					code
				constant PARSER_ERROR_INTERNAL_R K_unchecked_function = PARSER_ERROR_INTERNAL_R_B __assimilated=1
			package PARSER_N_ERROR_INTERNAL_R_fn _function
				symbol public misc PARSER_N_ERROR_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PARSER_N_ERROR_INTERNAL_R_B _code
					code
				constant PARSER_N_ERROR_INTERNAL_R K_unchecked_function = PARSER_N_ERROR_INTERNAL_R_B __assimilated=1
			package PARSER_COMMAND_INTERNAL_R_fn _function
				symbol public misc PARSER_COMMAND_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PARSER_COMMAND_INTERNAL_R_B _code
					code
				constant PARSER_COMMAND_INTERNAL_R K_unchecked_function = PARSER_COMMAND_INTERNAL_R_B __assimilated=1
			package ParseTokenStopped_fn _function
				symbol public misc ParseTokenStopped
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ParseTokenStopped_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc WordCount --> /main/template/functions/WordCount_fn/WordCount
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc ParseToken --> /main/template/functions/ParseToken_fn/ParseToken
					local x K_unchecked
					local y K_unchecked
					code
						inv !if
							inv !gt
								val K_unchecked wn
								inv WordCount
							code
								inv !return
									val K_unchecked GPR_FAIL
						inv !return
							inv ParseToken
								val K_unchecked x
								val K_unchecked y
				constant ParseTokenStopped K_unchecked_function = ParseTokenStopped_B __assimilated=1
			package ParseToken_fn _function
				symbol public misc ParseToken
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ParseToken_B _code
					symbol private misc given_ttype
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc given_tdata
					symbol private misc token_n
					symbol private misc token
					symbol private misc i
					symbol private misc t
					symbol private misc rv
					symbol external misc plug_00271 --> /main/template/variables/parsetoken_nesting_var/parsetoken_nesting
					symbol external misc plug_00272 --> /main/template/variables/match_from_var/match_from
					symbol external misc plug_00237 --> /main/template/variables/token_filter_var/token_filter
					symbol external misc plug_00273 --> /main/template/variables/match_length_var/match_length
					symbol external misc plug_00274 --> /main/template/variables/number_of_classes_var/number_of_classes
					symbol external misc plug_00216 --> /main/template/variables/oops_from_var/oops_from
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					symbol external misc match_classes --> /main/template/arrays/match_classes_arr/match_classes
					symbol external misc match_scores --> /main/template/arrays/match_scores_arr/match_scores
					symbol external misc ParseToken__ --> /main/template/functions/ParseToken___fn/ParseToken__
					local given_ttype K_unchecked
					local given_tdata K_unchecked
					local token_n K_unchecked
					local token K_unchecked
					local i K_unchecked
					local t K_unchecked
					local rv K_unchecked
					code
						inv !if
							inv !gt
								val K_unchecked parsetoken_nesting
								val K_unchecked 0
							code
								inv !push
									val K_unchecked match_from
								inv !push
									val K_unchecked token_filter
								inv !push
									val K_unchecked match_length
								inv !push
									val K_unchecked number_of_classes
								inv !push
									val K_unchecked oops_from
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked number_matched
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked t
											inv !lookup
												val K_unchecked match_list
												val K_unchecked i
										inv !push
											val K_unchecked t
										inv !store
											reference
												val K_unchecked t
											inv !lookup
												val K_unchecked match_classes
												val K_unchecked i
										inv !push
											val K_unchecked t
										inv !store
											reference
												val K_unchecked t
											inv !lookup
												val K_unchecked match_scores
												val K_unchecked i
										inv !push
											val K_unchecked t
								inv !push
									val K_unchecked number_matched
						inv !postincrement
							reference
								val K_unchecked parsetoken_nesting
						inv !store
							reference
								val K_unchecked rv
							inv ParseToken__
								val K_unchecked given_ttype
								val K_unchecked given_tdata
								val K_unchecked token_n
								val K_unchecked token
						inv !postdecrement
							reference
								val K_unchecked parsetoken_nesting
						inv !if
							inv !gt
								val K_unchecked parsetoken_nesting
								val K_unchecked 0
							code
								inv !pull
									reference
										val K_unchecked number_matched
								inv !for
									inv !store
										reference
											val K_unchecked i
										inv !minus
											val K_unchecked number_matched
											val K_unchecked 1
									inv !ge
										val K_unchecked i
										val K_unchecked 0
									inv !postdecrement
										reference
											val K_unchecked i
									code
										inv !pull
											reference
												val K_unchecked t
										inv !store
											reference
												inv !lookup
													val K_unchecked match_scores
													val K_unchecked i
											val K_unchecked t
										inv !pull
											reference
												val K_unchecked t
										inv !store
											reference
												inv !lookup
													val K_unchecked match_classes
													val K_unchecked i
											val K_unchecked t
										inv !pull
											reference
												val K_unchecked t
										inv !store
											reference
												inv !lookup
													val K_unchecked match_list
													val K_unchecked i
											val K_unchecked t
								inv !pull
									reference
										val K_unchecked oops_from
								inv !pull
									reference
										val K_unchecked number_of_classes
								inv !pull
									reference
										val K_unchecked match_length
								inv !pull
									reference
										val K_unchecked token_filter
								inv !pull
									reference
										val K_unchecked match_from
						inv !return
							val K_unchecked rv
				constant ParseToken K_unchecked_function = ParseToken_B __assimilated=1
			package ParseToken___fn _function
				symbol public misc ParseToken__
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ParseToken___B _code
					symbol private misc given_ttype
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc given_tdata
					symbol private misc token_n
					symbol private misc token
					symbol private misc l
					symbol private misc o
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc and_parity
					symbol private misc single_object
					symbol private misc desc_wn
					symbol private misc many_flag
					symbol private misc token_allows_multiple
					symbol private misc prev_indef_wanted
					symbol external misc plug_00237 --> /main/template/variables/token_filter_var/token_filter
					symbol external misc plug_00228 --> /main/template/variables/parser_inflection_var/parser_inflection
					symbol external misc plug_00229 --> /main/connectors/plug_00229
					symbol external misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
					symbol external misc SPECIAL_TOKEN --> /main/template/constants/SPECIAL_TOKEN_con/SPECIAL_TOKEN
					symbol external misc TryNumber --> /main/template/functions/TryNumber_fn/TryNumber
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00249 --> /main/template/variables/special_word_var/special_word
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc GPR_NUMBER --> /main/template/constants/GPR_NUMBER_con/GPR_NUMBER
					symbol external misc NUMBER_TOKEN --> /main/template/constants/NUMBER_TOKEN_con/NUMBER_TOKEN
					symbol external misc plug_00213 --> /main/template/variables/etype_var/etype
					symbol external misc NUMBER_PE --> /main/template/constants/NUMBER_PE_con/NUMBER_PE
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc CREATURE_TOKEN --> /main/template/constants/CREATURE_TOKEN_con/CREATURE_TOKEN
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00259 --> /main/connectors/plug_00259
					symbol external misc plug_00276 --> /main/connectors/plug_00276
					symbol external misc plug_00277 --> /main/connectors/plug_00277
					symbol external misc plug_00278 --> /main/connectors/plug_00278
					symbol external misc plug_00145 --> /main/template/variables/scope_reason_var/scope_reason
					symbol external misc TALKING_REASON --> /main/template/constants/TALKING_REASON_con/TALKING_REASON
					symbol external misc TOPIC_TOKEN --> /main/template/constants/TOPIC_TOKEN_con/TOPIC_TOKEN
					symbol external misc plug_00260 --> /main/template/variables/consult_from_var/consult_from
					symbol external misc line_ttype --> /main/template/arrays/line_ttype_arr/line_ttype
					symbol external misc PREPOSITION_TT --> /main/template/constants/PREPOSITION_TT_con/PREPOSITION_TT
					symbol external misc line_token --> /main/template/arrays/line_token_arr/line_token
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TEXTTOKENTOOHARD --> /main/template/constants/RTP_TEXTTOKENTOOHARD_con/RTP_TEXTTOKENTOOHARD
					symbol external misc GPR_PREPOSITION --> /main/template/constants/GPR_PREPOSITION_con/GPR_PREPOSITION
					symbol external misc PrepositionChain --> /main/template/functions/PrepositionChain_fn/PrepositionChain
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc plug_00261 --> /main/template/variables/consult_words_var/consult_words
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc plug_00247 --> /main/template/variables/inferfrom_var/inferfrom
					symbol external misc plug_00238 --> /main/template/variables/parameters_var/parameters
					symbol external misc plug_00203 --> /main/template/variables/params_wanted_var/params_wanted
					symbol external misc plug_00252 --> /main/template/variables/pcount_var/pcount
					symbol external misc plug_00279 --> /main/template/variables/inferword_var/inferword
					symbol external misc pattern --> /main/template/arrays/pattern_arr/pattern
					symbol external misc plug_00240 --> /main/connectors/plug_00240
					symbol external misc VM_DictionaryAddressToNumber --> /main/template/functions/VM_DictionaryAddressToNumber_fn/VM_DictionaryAddressToNumber
					symbol external misc GPR_TT --> /main/template/constants/GPR_TT_con/GPR_TT
					symbol external misc indirect --> /main/veneer/indirect
					symbol external misc SCOPE_TT --> /main/template/constants/SCOPE_TT_con/SCOPE_TT
					symbol external misc plug_00231 --> /main/template/variables/scope_token_var/scope_token
					symbol external misc plug_00269 --> /main/template/variables/scope_stage_var/scope_stage
					symbol external misc MULTI_TOKEN --> /main/template/constants/MULTI_TOKEN_con/MULTI_TOKEN
					symbol external misc NOUN_TOKEN --> /main/template/constants/NOUN_TOKEN_con/NOUN_TOKEN
					symbol external misc ATTR_FILTER_TT --> /main/template/constants/ATTR_FILTER_TT_con/ATTR_FILTER_TT
					symbol external misc ROUTINE_FILTER_TT --> /main/template/constants/ROUTINE_FILTER_TT_con/ROUTINE_FILTER_TT
					symbol external misc MULTIHELD_TOKEN --> /main/template/constants/MULTIHELD_TOKEN_con/MULTIHELD_TOKEN
					symbol external misc MULTIEXCEPT_TOKEN --> /main/template/constants/MULTIEXCEPT_TOKEN_con/MULTIEXCEPT_TOKEN
					symbol external misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
					symbol external misc plug_00280 --> /main/template/variables/dont_infer_var/dont_infer
					symbol private label .ObjectList
					symbol external misc plug_00243 --> /main/template/variables/pronoun_word_var/pronoun_word
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00244 --> /main/template/variables/pronoun_obj_var/pronoun_obj
					symbol external misc PronounValue --> /main/template/functions/PronounValue_fn/PronounValue
					symbol external misc LanguageDescriptors --> /main/template/arrays/LanguageDescriptors_arr/LanguageDescriptors
					symbol private label .AssumeDescriptor
					symbol external misc plug_00262 --> /main/template/variables/pronoun__word_var/pronoun__word
					symbol external misc plug_00263 --> /main/template/variables/pronoun__obj_var/pronoun__obj
					symbol external misc VAGUE_PE --> /main/template/constants/VAGUE_PE_con/VAGUE_PE
					symbol external misc plug_00281 --> /main/template/variables/parser_trace_var/parser_trace
					symbol external misc ME1__WD --> /main/template/constants/ME1__WD_con/ME1__WD
					symbol external misc ME2__WD --> /main/template/constants/ME2__WD_con/ME2__WD
					symbol external misc ME3__WD --> /main/template/constants/ME3__WD_con/ME3__WD
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00282 --> /main/template/variables/allow_plurals_var/allow_plurals
					symbol private label .TryAgain
					symbol external misc Descriptors --> /main/template/functions/Descriptors_fn/Descriptors
					symbol private label .TryAgain2
					symbol external misc plug_00216 --> /main/template/variables/oops_from_var/oops_from
					symbol external misc HELD_TOKEN --> /main/template/constants/HELD_TOKEN_con/HELD_TOKEN
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc NounDomain --> /main/template/functions/NounDomain_fn/NounDomain
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00283 --> /main/template/variables/indef_wanted_var/indef_wanted
					symbol external misc INDEF_ALL_WANTED --> /main/template/constants/INDEF_ALL_WANTED_con/INDEF_ALL_WANTED
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc plug_00246 --> /main/template/variables/multiflag_var/multiflag
					symbol external misc plug_00234 --> /main/template/variables/best_etype_var/best_etype
					symbol external misc MULTI_PE --> /main/template/constants/MULTI_PE_con/MULTI_PE
					symbol external misc STUCK_PE --> /main/template/constants/STUCK_PE_con/STUCK_PE
					symbol external misc plug_00284 --> /main/template/variables/indef_possambig_var/indef_possambig
					symbol external misc ResetDescriptors --> /main/template/functions/ResetDescriptors_fn/ResetDescriptors
					symbol external misc CantSee --> /main/template/functions/CantSee_fn/CantSee
					symbol private label .FailToken
					symbol external misc MultiAdd --> /main/template/functions/MultiAdd_fn/MultiAdd
					symbol external misc MultiSub --> /main/template/functions/MultiSub_fn/MultiSub
					symbol external misc plug_00273 --> /main/template/variables/match_length_var/match_length
					symbol external misc CreatureTest --> /main/template/functions/CreatureTest_fn/CreatureTest
					symbol external misc ANIMA_PE --> /main/template/constants/ANIMA_PE_con/ANIMA_PE
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00272 --> /main/template/variables/match_from_var/match_from
					symbol private label .NextInList
					symbol external misc AND1__WD --> /main/template/constants/AND1__WD_con/AND1__WD
					symbol external misc AND2__WD --> /main/template/constants/AND2__WD_con/AND2__WD
					symbol external misc AND3__WD --> /main/template/constants/AND3__WD_con/AND3__WD
					symbol external misc BUT1__WD --> /main/template/constants/BUT1__WD_con/BUT1__WD
					symbol external misc BUT2__WD --> /main/template/constants/BUT2__WD_con/BUT2__WD
					symbol external misc BUT3__WD --> /main/template/constants/BUT3__WD_con/BUT3__WD
					symbol external misc comma_word --> /main/template/constants/comma_word_con/comma_word
					symbol private label .PassToken
					symbol external misc GPR_MULTIPLE --> /main/template/constants/GPR_MULTIPLE_con/GPR_MULTIPLE
					symbol external misc plug_00250 --> /main/template/variables/multi_context_var/multi_context
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc PLURAL_BIT --> /main/template/constants/PLURAL_BIT_con/PLURAL_BIT
					symbol external misc plug_00265 --> /main/template/variables/multi_had_var/multi_had
					symbol external misc plug_00268 --> /main/template/variables/multi_wanted_var/multi_wanted
					symbol external misc TOOFEW_PE --> /main/template/constants/TOOFEW_PE_con/TOOFEW_PE
					symbol external misc plug_00286 --> /main/template/variables/indef_guess_p_var/indef_guess_p
					local given_ttype K_unchecked
					local given_tdata K_unchecked
					local token_n K_unchecked
					local token K_unchecked
					local l K_unchecked
					local o K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local and_parity K_unchecked
					local single_object K_unchecked
					local desc_wn K_unchecked
					local many_flag K_unchecked
					local token_allows_multiple K_unchecked
					local prev_indef_wanted K_unchecked
					code
						inv !store
							reference
								val K_unchecked token_filter
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked parser_inflection
							val K_unchecked plug_00229
						inv !switch
							val K_unchecked given_ttype
							code
								inv !case
									val K_unchecked ELEMENTARY_TT
									code
										inv !switch
											val K_unchecked given_tdata
											code
												inv !case
													val K_unchecked SPECIAL_TOKEN
													code
														inv !store
															reference
																val K_unchecked l
															inv TryNumber
																val K_unchecked wn
														inv !store
															reference
																val K_unchecked special_word
															inv NextWord
														inv !if
															inv !eq
																val K_unchecked l
																val K_unchecked -1000
															code
																inv !store
																	reference
																		val K_unchecked l
																	val K_unchecked special_word
														inv !store
															reference
																val K_unchecked parsed_number
															val K_unchecked l
														inv !return
															val K_unchecked GPR_NUMBER
												inv !case
													val K_unchecked NUMBER_TOKEN
													code
														inv !store
															reference
																val K_unchecked l
															inv TryNumber
																inv !postincrement
																	reference
																		val K_unchecked wn
														inv !if
															inv !eq
																val K_unchecked l
																val K_unchecked -1000
															code
																inv !store
																	reference
																		val K_unchecked etype
																	val K_unchecked NUMBER_PE
																inv !return
																	val K_unchecked GPR_FAIL
														inv !store
															reference
																val K_unchecked parsed_number
															val K_unchecked l
														inv !return
															val K_unchecked GPR_NUMBER
												inv !case
													val K_unchecked CREATURE_TOKEN
													code
														inv !if
															inv !eq
																val K_unchecked action_to_be
																inv !alternative
																	inv !alternative
																		inv !alternative
																			val K_unchecked plug_00259
																			val K_unchecked plug_00276
																		val K_unchecked plug_00277
																	val K_unchecked plug_00278
															code
																inv !store
																	reference
																		val K_unchecked scope_reason
																	val K_unchecked TALKING_REASON
												inv !case
													val K_unchecked TOPIC_TOKEN
													code
														inv !store
															reference
																val K_unchecked consult_from
															val K_unchecked wn
														inv !if
															inv !and
																inv !ne
																	inv !lookup
																		val K_unchecked line_ttype
																		inv !plus
																			val K_unchecked token_n
																			val K_unchecked 1
																	val K_unchecked PREPOSITION_TT
																inv !ne
																	inv !lookup
																		val K_unchecked line_token
																		inv !plus
																			val K_unchecked token_n
																			val K_unchecked 1
																	val K_unchecked ENDIT_TOKEN
															code
																inv RunTimeProblem
																	val K_unchecked RTP_TEXTTOKENTOOHARD
																inv !return
																	val K_unchecked GPR_PREPOSITION
														inv !do
															inv !or
																inv !eq
																	val K_unchecked o
																	val K_unchecked -1
																inv !ne
																	inv PrepositionChain
																		val K_unchecked o
																		inv !plus
																			val K_unchecked token_n
																			val K_unchecked 1
																	val K_unchecked -1
															code
																inv !store
																	reference
																		val K_unchecked o
																	inv NextWordStopped
														inv !postdecrement
															reference
																val K_unchecked wn
														inv !store
															reference
																val K_unchecked consult_words
															inv !minus
																val K_unchecked wn
																val K_unchecked consult_from
														inv !if
															inv !eq
																val K_unchecked consult_words
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked GPR_FAIL
														inv !if
															inv !eq
																val K_unchecked action_to_be
																inv !alternative
																	inv !alternative
																		val K_unchecked plug_00276
																		val K_unchecked plug_00259
																	val K_unchecked plug_00278
															code
																inv !store
																	reference
																		val K_unchecked o
																	val K_unchecked wn
																inv !store
																	reference
																		val K_unchecked wn
																	val K_unchecked consult_from
																inv !store
																	reference
																		val K_unchecked parsed_number
																	inv NextWord
																inv !store
																	reference
																		val K_unchecked wn
																	val K_unchecked o
																inv !return
																	val K_unchecked 1
														inv !if
															inv !and
																inv !eq
																	val K_unchecked o
																	val K_unchecked -1
																inv !eq
																	inv !lookup
																		val K_unchecked line_ttype
																		inv !plus
																			val K_unchecked token_n
																			val K_unchecked 1
																	val K_unchecked PREPOSITION_TT
															code
																inv !return
																	val K_unchecked GPR_FAIL
														inv !return
															val K_unchecked GPR_PREPOSITION
								inv !case
									val K_unchecked PREPOSITION_TT
									code
										inv !if
											inv !bitwiseand
												inv !lookupbyte
													val K_unchecked token
													val K_unchecked 0
												val K_unchecked 16
											code
												inv !return
													val K_unchecked GPR_PREPOSITION
										inv !if
											inv !gt
												val K_unchecked wn
												val K_unchecked num_words
											code
												inv !if
													inv !and
														inv !eq
															val K_unchecked inferfrom
															val K_unchecked 0
														inv !lt
															val K_unchecked parameters
															val K_unchecked params_wanted
													code
														inv !store
															reference
																val K_unchecked inferfrom
															val K_unchecked pcount
														inv !store
															reference
																val K_unchecked inferword
															val K_unchecked token
														inv !store
															reference
																inv !lookup
																	val K_unchecked pattern
																	val K_unchecked pcount
															inv !plus
																val K_unchecked plug_00240
																inv VM_DictionaryAddressToNumber
																	val K_unchecked given_tdata
												inv !if
													inv !eq
														val K_unchecked inferfrom
														val K_unchecked 0
													code
														inv !return
															inv !unaryminus
																val K_unchecked 1
												inv !store
													reference
														inv !lookup
															val K_unchecked pattern
															val K_unchecked pcount
													inv !plus
														val K_unchecked plug_00240
														inv VM_DictionaryAddressToNumber
															val K_unchecked given_tdata
												inv !return
													val K_unchecked GPR_PREPOSITION
										inv !store
											reference
												val K_unchecked o
											inv NextWord
										inv !store
											reference
												inv !lookup
													val K_unchecked pattern
													val K_unchecked pcount
											inv !plus
												val K_unchecked plug_00240
												inv VM_DictionaryAddressToNumber
													val K_unchecked o
										inv !if
											inv !eq
												val K_unchecked o
												val K_unchecked given_tdata
											code
												inv !return
													val K_unchecked GPR_PREPOSITION
										inv !if
											inv !ne
												inv PrepositionChain
													val K_unchecked o
													val K_unchecked token_n
												val K_unchecked -1
											code
												inv !return
													val K_unchecked GPR_PREPOSITION
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !case
									val K_unchecked GPR_TT
									code
										inv !store
											reference
												val K_unchecked l
											inv indirect
												val K_unchecked given_tdata
										inv !return
											val K_unchecked l
								inv !case
									val K_unchecked SCOPE_TT
									code
										inv !store
											reference
												val K_unchecked scope_token
											val K_unchecked given_tdata
										inv !store
											reference
												val K_unchecked scope_stage
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked l
											inv indirect
												val K_unchecked scope_token
										inv !ifelse
											inv !eq
												val K_unchecked l
												val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked given_tdata
													val K_unchecked MULTI_TOKEN
											code
												inv !store
													reference
														val K_unchecked given_tdata
													val K_unchecked NOUN_TOKEN
								inv !case
									val K_unchecked ATTR_FILTER_TT
									code
										inv !store
											reference
												val K_unchecked token_filter
											inv !plus
												val K_unchecked 1
												val K_unchecked given_tdata
										inv !store
											reference
												val K_unchecked given_tdata
											val K_unchecked NOUN_TOKEN
								inv !case
									val K_unchecked ROUTINE_FILTER_TT
									code
										inv !store
											reference
												val K_unchecked token_filter
											val K_unchecked given_tdata
										inv !store
											reference
												val K_unchecked given_tdata
											val K_unchecked NOUN_TOKEN
						inv !store
							reference
								val K_unchecked token
							val K_unchecked given_tdata
						inv !store
							reference
								val K_unchecked token_allows_multiple
							val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked token
								inv !alternative
									inv !alternative
										inv !alternative
											val K_unchecked MULTI_TOKEN
											val K_unchecked MULTIHELD_TOKEN
										val K_unchecked MULTIEXCEPT_TOKEN
									val K_unchecked MULTIINSIDE_TOKEN
							code
								inv !store
									reference
										val K_unchecked token_allows_multiple
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked many_flag
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked and_parity
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked dont_infer
							val K_unchecked 0
						.ObjectList
						inv !store
							reference
								val K_unchecked o
							inv NextWord
						inv !postdecrement
							reference
								val K_unchecked wn
						inv !store
							reference
								val K_unchecked pronoun_word
							val K_unchecked plug_00232
						inv !store
							reference
								val K_unchecked pronoun_obj
							val K_unchecked plug_00232
						inv !store
							reference
								val K_unchecked l
							inv PronounValue
								val K_unchecked o
						inv !if
							inv !ne
								val K_unchecked l
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked pronoun_word
									val K_unchecked o
								inv !store
									reference
										val K_unchecked pronoun_obj
									val K_unchecked l
								inv !if
									inv !eq
										val K_unchecked l
										val K_unchecked plug_00232
									code
										inv !for
											inv !store
												reference
													val K_unchecked l
												val K_unchecked 1
											inv !le
												val K_unchecked l
												inv !lookup
													val K_unchecked LanguageDescriptors
													val K_unchecked 0
											inv !store
												reference
													val K_unchecked l
												inv !plus
													val K_unchecked l
													val K_unchecked 4
											code
												inv !if
													inv !eq
														val K_unchecked o
														inv !lookup
															val K_unchecked LanguageDescriptors
															val K_unchecked l
													code
														inv !jump
															lab .AssumeDescriptor
										inv !store
											reference
												val K_unchecked pronoun__word
											val K_unchecked pronoun_word
										inv !store
											reference
												val K_unchecked pronoun__obj
											val K_unchecked pronoun_obj
										inv !store
											reference
												val K_unchecked etype
											val K_unchecked VAGUE_PE
										inv !if
											inv !ge
												val K_unchecked parser_trace
												val K_unchecked 3
											code
												inv !print
													val K_unchecked "  [Stop: unset pronoun]\n"
										inv !return
											val K_unchecked GPR_FAIL
						.AssumeDescriptor
						inv !if
							inv !eq
								val K_unchecked o
								inv !alternative
									inv !alternative
										val K_unchecked ME1__WD
										val K_unchecked ME2__WD
									val K_unchecked ME3__WD
							code
								inv !store
									reference
										val K_unchecked pronoun_word
									val K_unchecked o
								inv !store
									reference
										val K_unchecked pronoun_obj
									val K_unchecked player
						inv !store
							reference
								val K_unchecked allow_plurals
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked desc_wn
							val K_unchecked wn
						.TryAgain
						inv !store
							reference
								val K_unchecked l
							inv Descriptors
								val K_unchecked token_allows_multiple
						inv !if
							inv !ne
								val K_unchecked l
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked etype
									val K_unchecked l
								inv !return
									val K_unchecked 0
						.TryAgain2
						inv !store
							reference
								val K_unchecked oops_from
							val K_unchecked wn
						inv !ifelse
							inv !ne
								val K_unchecked token
								val K_unchecked HELD_TOKEN
							code
								inv !store
									reference
										val K_unchecked i
									inv !lookup
										val K_unchecked multiple_object
										val K_unchecked 0
								inv !store
									reference
										val K_unchecked l
									inv NounDomain
										val K_unchecked actors_location
										val K_unchecked actor
										val K_unchecked token
								inv !if
									inv !eq
										val K_unchecked l
										val K_unchecked plug_00240
									code
										inv !return
											val K_unchecked l
								inv !if
									inv !and
										inv !and
											inv !eq
												val K_unchecked indef_wanted
												val K_unchecked INDEF_ALL_WANTED
											inv !eq
												val K_unchecked l
												val K_unchecked 0
										inv !eq
											val K_unchecked number_matched
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked l
											val K_unchecked 1
								inv !if
									inv !and
										val K_unchecked token_allows_multiple
										inv !not
											val K_unchecked multiflag
									code
										inv !if
											inv !eq
												val K_unchecked best_etype
												val K_unchecked MULTI_PE
											code
												inv !store
													reference
														val K_unchecked best_etype
													val K_unchecked STUCK_PE
										inv !store
											reference
												val K_unchecked multiflag
											val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked l
										val K_unchecked 0
									code
										inv !if
											val K_unchecked indef_possambig
											code
												inv ResetDescriptors
												inv !store
													reference
														val K_unchecked wn
													val K_unchecked desc_wn
												inv !jump
													lab .TryAgain2
										inv !if
											inv !and
												inv !eq
													val K_unchecked etype
													val K_unchecked MULTI_PE
												val K_unchecked multiflag
											code
												inv !store
													reference
														val K_unchecked etype
													val K_unchecked STUCK_PE
										inv !store
											reference
												val K_unchecked etype
											inv CantSee
										inv !jump
											lab .FailToken
								inv !ifelse
									inv !eq
										val K_unchecked l
										val K_unchecked 1
									code
										inv !ifelse
											inv !not
												val K_unchecked many_flag
											code
												inv !store
													reference
														val K_unchecked many_flag
													val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked k
													inv !lookup
														val K_unchecked multiple_object
														val K_unchecked 0
												inv !store
													reference
														inv !lookup
															val K_unchecked multiple_object
															val K_unchecked 0
													val K_unchecked i
												inv !for
													inv !store
														reference
															val K_unchecked j
														inv !plus
															val K_unchecked i
															val K_unchecked 1
													inv !le
														val K_unchecked j
														val K_unchecked k
													inv !postincrement
														reference
															val K_unchecked j
													code
														inv !ifelse
															val K_unchecked and_parity
															code
																inv MultiAdd
																	inv !lookup
																		val K_unchecked multiple_object
																		val K_unchecked j
															code
																inv MultiSub
																	inv !lookup
																		val K_unchecked multiple_object
																		val K_unchecked j
									code
										inv !if
											inv !and
												inv !eq
													val K_unchecked match_length
													val K_unchecked 0
												val K_unchecked indef_possambig
											code
												inv ResetDescriptors
												inv !store
													reference
														val K_unchecked wn
													val K_unchecked desc_wn
												inv !jump
													lab .TryAgain2
										inv !if
											inv !and
												inv !eq
													val K_unchecked token
													val K_unchecked CREATURE_TOKEN
												inv !eq
													inv CreatureTest
														val K_unchecked l
													val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked etype
													val K_unchecked ANIMA_PE
												inv !jump
													lab .FailToken
										inv !ifelse
											inv !not
												val K_unchecked many_flag
											code
												inv !store
													reference
														val K_unchecked single_object
													val K_unchecked l
											code
												inv !ifelse
													val K_unchecked and_parity
													code
														inv MultiAdd
															val K_unchecked l
													code
														inv MultiSub
															val K_unchecked l
							code
								inv !store
									reference
										val K_unchecked l
									inv NounDomain
										val K_unchecked actor
										val K_unchecked actors_location
										val K_unchecked token
								inv !if
									inv !eq
										val K_unchecked l
										val K_unchecked plug_00240
									code
										inv !return
											val K_unchecked l
								inv !if
									inv !eq
										val K_unchecked l
										val K_unchecked 0
									code
										inv !if
											val K_unchecked indef_possambig
											code
												inv ResetDescriptors
												inv !store
													reference
														val K_unchecked wn
													val K_unchecked desc_wn
												inv !jump
													lab .TryAgain2
										inv !store
											reference
												val K_unchecked etype
											inv CantSee
										inv !jump
											lab .FailToken
								inv !store
									reference
										val K_unchecked o
									inv parent
										val K_unchecked l
								inv !if
									inv !ne
										val K_unchecked o
										val K_unchecked actor
									code
								inv !store
									reference
										val K_unchecked single_object
									val K_unchecked l
						inv !store
							reference
								val K_unchecked wn
							inv !plus
								val K_unchecked match_from
								val K_unchecked match_length
						.NextInList
						inv !store
							reference
								val K_unchecked o
							inv NextWord
						inv !if
							inv !eq
								val K_unchecked o
								inv !alternative
									inv !alternative
										inv !alternative
											inv !alternative
												inv !alternative
													inv !alternative
														val K_unchecked AND1__WD
														val K_unchecked AND2__WD
													val K_unchecked AND3__WD
												val K_unchecked BUT1__WD
											val K_unchecked BUT2__WD
										val K_unchecked BUT3__WD
									val K_unchecked comma_word
							code
								inv !if
									inv !not
										val K_unchecked token_allows_multiple
									code
										inv !if
											val K_unchecked multiflag
											code
												inv !jump
													lab .PassToken
										inv !store
											reference
												val K_unchecked etype
											val K_unchecked MULTI_PE
										inv !jump
											lab .FailToken
								inv !if
									inv !eq
										val K_unchecked o
										inv !alternative
											inv !alternative
												val K_unchecked BUT1__WD
												val K_unchecked BUT2__WD
											val K_unchecked BUT3__WD
									code
										inv !store
											reference
												val K_unchecked and_parity
											inv !minus
												val K_unchecked 1
												val K_unchecked and_parity
								inv !if
									inv !not
										val K_unchecked many_flag
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked multiple_object
													val K_unchecked 0
											val K_unchecked 1
										inv !store
											reference
												inv !lookup
													val K_unchecked multiple_object
													val K_unchecked 1
											val K_unchecked single_object
										inv !store
											reference
												val K_unchecked many_flag
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked dont_infer
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked inferfrom
									val K_unchecked 0
								inv !jump
									lab .ObjectList
						inv !postdecrement
							reference
								val K_unchecked wn
						.PassToken
						inv !ifelse
							val K_unchecked many_flag
							code
								inv !store
									reference
										val K_unchecked single_object
									val K_unchecked GPR_MULTIPLE
								inv !store
									reference
										val K_unchecked multi_context
									val K_unchecked token
							code
								inv !if
									inv !and
										inv !eq
											val K_unchecked indef_mode
											val K_unchecked 1
										inv !ne
											inv !bitwiseand
												val K_unchecked indef_type
												val K_unchecked PLURAL_BIT
											val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked token
												inv !alternative
													val K_unchecked MULTIEXCEPT_TOKEN
													val K_unchecked MULTIINSIDE_TOKEN
											code
												inv !store
													reference
														val K_unchecked multi_context
													val K_unchecked token
										inv !if
											inv !and
												inv !lt
													val K_unchecked indef_wanted
													val K_unchecked INDEF_ALL_WANTED
												inv !gt
													val K_unchecked indef_wanted
													val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked multi_had
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked multi_wanted
													val K_unchecked indef_wanted
												inv !store
													reference
														val K_unchecked etype
													val K_unchecked TOOFEW_PE
												inv !jump
													lab .FailToken
						inv !return
							val K_unchecked single_object
						.FailToken
						inv !if
							inv !and
								val K_unchecked allow_plurals
								inv !eq
									val K_unchecked indef_guess_p
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked prev_indef_wanted
									val K_unchecked indef_wanted
								inv !store
									reference
										val K_unchecked allow_plurals
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked desc_wn
								inv !jump
									lab .TryAgain
						inv !if
							inv !and
								inv !or
									inv !gt
										val K_unchecked indef_wanted
										val K_unchecked 0
									inv !gt
										val K_unchecked prev_indef_wanted
										val K_unchecked 0
								inv !not
									val K_unchecked multiflag
							code
								inv !store
									reference
										val K_unchecked etype
									val K_unchecked MULTI_PE
						inv !return
							val K_unchecked GPR_FAIL
				constant ParseToken__ K_unchecked_function = ParseToken___B __assimilated=1
			package ResetDescriptors_fn _function
				symbol public misc ResetDescriptors
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ResetDescriptors_B _code
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc plug_00283 --> /main/template/variables/indef_wanted_var/indef_wanted
					symbol external misc plug_00286 --> /main/template/variables/indef_guess_p_var/indef_guess_p
					symbol external misc plug_00284 --> /main/template/variables/indef_possambig_var/indef_possambig
					symbol external misc plug_00287 --> /main/template/variables/indef_owner_var/indef_owner
					symbol external misc plug_00288 --> /main/template/variables/indef_cases_var/indef_cases
					symbol external misc plug_00289 --> /main/template/variables/indef_nspec_at_var/indef_nspec_at
					code
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked indef_type
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked indef_wanted
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked indef_guess_p
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked indef_possambig
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked indef_owner
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked indef_cases
							val K_unchecked 4095
						inv !store
							reference
								val K_unchecked indef_nspec_at
							val K_unchecked 0
				constant ResetDescriptors K_unchecked_function = ResetDescriptors_B __assimilated=1
			package ArticleDescriptors_fn _function
				symbol public misc ArticleDescriptors
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ArticleDescriptors_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol private misc flag
					symbol private misc cto
					symbol private misc type
					symbol private misc n
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc LanguageDescriptors --> /main/template/arrays/LanguageDescriptors_arr/LanguageDescriptors
					symbol external misc DEFART_PK --> /main/template/constants/DEFART_PK_con/DEFART_PK
					symbol external misc INDEFART_PK --> /main/template/constants/INDEFART_PK_con/INDEFART_PK
					local o K_unchecked
					local x K_unchecked
					local flag K_unchecked
					local cto K_unchecked
					local type K_unchecked
					local n K_unchecked
					code
						inv !if
							inv !gt
								val K_unchecked wn
								val K_unchecked num_words
							code
								inv !return
									val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked flag
								val K_unchecked 1
							val K_unchecked flag
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked o
									inv NextWordStopped
								inv !store
									reference
										val K_unchecked flag
									val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked x
										val K_unchecked 1
									inv !le
										val K_unchecked x
										inv !lookup
											val K_unchecked LanguageDescriptors
											val K_unchecked 0
									inv !store
										reference
											val K_unchecked x
										inv !plus
											val K_unchecked x
											val K_unchecked 4
									code
										inv !if
											inv !eq
												val K_unchecked o
												inv !lookup
													val K_unchecked LanguageDescriptors
													val K_unchecked x
											code
												inv !store
													reference
														val K_unchecked type
													inv !lookup
														val K_unchecked LanguageDescriptors
														inv !plus
															val K_unchecked x
															val K_unchecked 2
												inv !if
													inv !eq
														val K_unchecked type
														inv !alternative
															val K_unchecked DEFART_PK
															val K_unchecked INDEFART_PK
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 1
						inv !postdecrement
							reference
								val K_unchecked wn
						inv !return
							val K_unchecked 0
				constant ArticleDescriptors K_unchecked_function = ArticleDescriptors_B __assimilated=1
			package Descriptors_fn _function
				symbol public misc Descriptors
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Descriptors_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol private misc flag
					symbol private misc cto
					symbol private misc type
					symbol private misc n
					symbol external misc ResetDescriptors --> /main/template/functions/ResetDescriptors_fn/ResetDescriptors
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc LanguageDescriptors --> /main/template/arrays/LanguageDescriptors_arr/LanguageDescriptors
					symbol external misc DEFART_PK --> /main/template/constants/DEFART_PK_con/DEFART_PK
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00284 --> /main/template/variables/indef_possambig_var/indef_possambig
					symbol external misc plug_00288 --> /main/template/variables/indef_cases_var/indef_cases
					symbol external misc POSSESS_PK --> /main/template/constants/POSSESS_PK_con/POSSESS_PK
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc MY_BIT --> /main/template/constants/MY_BIT_con/MY_BIT
					symbol external misc THAT_BIT --> /main/template/constants/THAT_BIT_con/THAT_BIT
					symbol external misc plug_00287 --> /main/template/variables/indef_owner_var/indef_owner
					symbol external misc PronounValue --> /main/template/functions/PronounValue_fn/PronounValue
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc InformParser --> /main/template/constants/InformParser_con/InformParser
					symbol external misc light --> /main/template/properties/light_prop/light
					symbol external misc LIT_BIT --> /main/template/constants/LIT_BIT_con/LIT_BIT
					symbol external misc UNLIT_BIT --> /main/template/constants/UNLIT_BIT_con/UNLIT_BIT
					symbol external misc OTHER1__WD --> /main/template/constants/OTHER1__WD_con/OTHER1__WD
					symbol external misc OTHER2__WD --> /main/template/constants/OTHER2__WD_con/OTHER2__WD
					symbol external misc OTHER3__WD --> /main/template/constants/OTHER3__WD_con/OTHER3__WD
					symbol external misc OTHER_BIT --> /main/template/constants/OTHER_BIT_con/OTHER_BIT
					symbol external misc ALL1__WD --> /main/template/constants/ALL1__WD_con/ALL1__WD
					symbol external misc ALL2__WD --> /main/template/constants/ALL2__WD_con/ALL2__WD
					symbol external misc ALL3__WD --> /main/template/constants/ALL3__WD_con/ALL3__WD
					symbol external misc ALL4__WD --> /main/template/constants/ALL4__WD_con/ALL4__WD
					symbol external misc ALL5__WD --> /main/template/constants/ALL5__WD_con/ALL5__WD
					symbol external misc plug_00283 --> /main/template/variables/indef_wanted_var/indef_wanted
					symbol external misc INDEF_ALL_WANTED --> /main/template/constants/INDEF_ALL_WANTED_con/INDEF_ALL_WANTED
					symbol external misc plug_00253 --> /main/template/variables/take_all_rule_var/take_all_rule
					symbol external misc PLURAL_BIT --> /main/template/constants/PLURAL_BIT_con/PLURAL_BIT
					symbol external misc plug_00282 --> /main/template/variables/allow_plurals_var/allow_plurals
					symbol external misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
					symbol external misc TryNumber --> /main/template/functions/TryNumber_fn/TryNumber
					symbol external misc plug_00286 --> /main/template/variables/indef_guess_p_var/indef_guess_p
					symbol external misc plug_00289 --> /main/template/variables/indef_nspec_at_var/indef_nspec_at
					symbol external misc OF1__WD --> /main/template/constants/OF1__WD_con/OF1__WD
					symbol external misc OF2__WD --> /main/template/constants/OF2__WD_con/OF2__WD
					symbol external misc OF3__WD --> /main/template/constants/OF3__WD_con/OF3__WD
					symbol external misc OF4__WD --> /main/template/constants/OF4__WD_con/OF4__WD
					local o K_unchecked
					local x K_unchecked
					local flag K_unchecked
					local cto K_unchecked
					local type K_unchecked
					local n K_unchecked
					code
						inv ResetDescriptors
						inv !if
							inv !gt
								val K_unchecked wn
								val K_unchecked num_words
							code
								inv !return
									val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked flag
								val K_unchecked 1
							val K_unchecked flag
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked o
									inv NextWordStopped
								inv !store
									reference
										val K_unchecked flag
									val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked x
										val K_unchecked 1
									inv !le
										val K_unchecked x
										inv !lookup
											val K_unchecked LanguageDescriptors
											val K_unchecked 0
									inv !store
										reference
											val K_unchecked x
										inv !plus
											val K_unchecked x
											val K_unchecked 4
									code
										inv !if
											inv !eq
												val K_unchecked o
												inv !lookup
													val K_unchecked LanguageDescriptors
													val K_unchecked x
											code
												inv !store
													reference
														val K_unchecked flag
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked type
													inv !lookup
														val K_unchecked LanguageDescriptors
														inv !plus
															val K_unchecked x
															val K_unchecked 2
												inv !if
													inv !ne
														val K_unchecked type
														val K_unchecked DEFART_PK
													code
														inv !store
															reference
																val K_unchecked indef_mode
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked indef_possambig
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked indef_cases
													inv !bitwiseand
														val K_unchecked indef_cases
														inv !lookup
															val K_unchecked LanguageDescriptors
															inv !plus
																val K_unchecked x
																val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked type
														val K_unchecked POSSESS_PK
													code
														inv !store
															reference
																val K_unchecked cto
															inv !lookup
																val K_unchecked LanguageDescriptors
																inv !plus
																	val K_unchecked x
																	val K_unchecked 3
														inv !switch
															val K_unchecked cto
															code
																inv !case
																	val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked indef_type
																			inv !bitwiseor
																				val K_unchecked indef_type
																				val K_unchecked MY_BIT
																inv !case
																	val K_unchecked 1
																	code
																		inv !store
																			reference
																				val K_unchecked indef_type
																			inv !bitwiseor
																				val K_unchecked indef_type
																				val K_unchecked THAT_BIT
																inv !default
																	code
																		inv !store
																			reference
																				val K_unchecked indef_owner
																			inv PronounValue
																				val K_unchecked cto
																		inv !if
																			inv !eq
																				val K_unchecked indef_owner
																				val K_unchecked plug_00232
																			code
																				inv !store
																					reference
																						val K_unchecked indef_owner
																					val K_unchecked InformParser
												inv !if
													inv !eq
														val K_unchecked type
														val K_unchecked light
													code
														inv !store
															reference
																val K_unchecked indef_type
															inv !bitwiseor
																val K_unchecked indef_type
																val K_unchecked LIT_BIT
												inv !if
													inv !eq
														val K_unchecked type
														inv !unaryminus
															val K_unchecked light
													code
														inv !store
															reference
																val K_unchecked indef_type
															inv !bitwiseor
																val K_unchecked indef_type
																val K_unchecked UNLIT_BIT
								inv !if
									inv !eq
										val K_unchecked o
										inv !alternative
											inv !alternative
												val K_unchecked OTHER1__WD
												val K_unchecked OTHER2__WD
											val K_unchecked OTHER3__WD
									code
										inv !store
											reference
												val K_unchecked indef_mode
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked flag
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked indef_type
											inv !bitwiseor
												val K_unchecked indef_type
												val K_unchecked OTHER_BIT
								inv !if
									inv !eq
										val K_unchecked o
										inv !alternative
											inv !alternative
												inv !alternative
													inv !alternative
														val K_unchecked ALL1__WD
														val K_unchecked ALL2__WD
													val K_unchecked ALL3__WD
												val K_unchecked ALL4__WD
											val K_unchecked ALL5__WD
									code
										inv !store
											reference
												val K_unchecked indef_mode
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked flag
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked indef_wanted
											val K_unchecked INDEF_ALL_WANTED
										inv !if
											inv !eq
												val K_unchecked take_all_rule
												val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked take_all_rule
													val K_unchecked 2
										inv !store
											reference
												val K_unchecked indef_type
											inv !bitwiseor
												val K_unchecked indef_type
												val K_unchecked PLURAL_BIT
								inv !if
									val K_unchecked allow_plurals
									code
										inv !ifelse
											inv !ne
												inv NextWordStopped
												inv !alternative
													val K_unchecked -1
													val K_unchecked THEN1__WD
											code
												inv !postdecrement
													reference
														val K_unchecked wn
												inv !store
													reference
														val K_unchecked n
													inv TryNumber
														inv !minus
															val K_unchecked wn
															val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked n
													val K_unchecked 0
												inv !postdecrement
													reference
														val K_unchecked wn
										inv !if
											inv !eq
												val K_unchecked n
												val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked indef_mode
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked flag
													val K_unchecked 1
										inv !if
											inv !gt
												val K_unchecked n
												val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked indef_guess_p
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked indef_mode
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked flag
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked indef_wanted
													val K_unchecked n
												inv !store
													reference
														val K_unchecked indef_nspec_at
													inv !minus
														val K_unchecked wn
														val K_unchecked 1
												inv !store
													reference
														val K_unchecked indef_type
													inv !bitwiseor
														val K_unchecked indef_type
														val K_unchecked PLURAL_BIT
								inv !if
									inv !and
										inv !eq
											val K_unchecked flag
											val K_unchecked 1
										inv !ne
											inv NextWordStopped
											inv !alternative
												inv !alternative
													inv !alternative
														val K_unchecked OF1__WD
														val K_unchecked OF2__WD
													val K_unchecked OF3__WD
												val K_unchecked OF4__WD
									code
										inv !postdecrement
											reference
												val K_unchecked wn
						inv !postdecrement
							reference
								val K_unchecked wn
						inv !return
							val K_unchecked 0
				constant Descriptors K_unchecked_function = Descriptors_B __assimilated=1
			package SafeSkipDescriptors_fn _function
				symbol public misc SafeSkipDescriptors
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SafeSkipDescriptors_B _code
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc plug_00283 --> /main/template/variables/indef_wanted_var/indef_wanted
					symbol external misc plug_00286 --> /main/template/variables/indef_guess_p_var/indef_guess_p
					symbol external misc plug_00284 --> /main/template/variables/indef_possambig_var/indef_possambig
					symbol external misc plug_00287 --> /main/template/variables/indef_owner_var/indef_owner
					symbol external misc plug_00288 --> /main/template/variables/indef_cases_var/indef_cases
					symbol external misc plug_00289 --> /main/template/variables/indef_nspec_at_var/indef_nspec_at
					symbol external misc Descriptors --> /main/template/functions/Descriptors_fn/Descriptors
					code
						inv !push
							val K_unchecked indef_mode
						inv !push
							val K_unchecked indef_type
						inv !push
							val K_unchecked indef_wanted
						inv !push
							val K_unchecked indef_guess_p
						inv !push
							val K_unchecked indef_possambig
						inv !push
							val K_unchecked indef_owner
						inv !push
							val K_unchecked indef_cases
						inv !push
							val K_unchecked indef_nspec_at
						inv Descriptors
						inv !pull
							reference
								val K_unchecked indef_nspec_at
						inv !pull
							reference
								val K_unchecked indef_cases
						inv !pull
							reference
								val K_unchecked indef_owner
						inv !pull
							reference
								val K_unchecked indef_possambig
						inv !pull
							reference
								val K_unchecked indef_guess_p
						inv !pull
							reference
								val K_unchecked indef_wanted
						inv !pull
							reference
								val K_unchecked indef_type
						inv !pull
							reference
								val K_unchecked indef_mode
				constant SafeSkipDescriptors K_unchecked_function = SafeSkipDescriptors_B __assimilated=1
			package PrepositionChain_fn _function
				symbol public misc PrepositionChain
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrepositionChain_B _code
					symbol private misc wd
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc index
					symbol external misc line_tdata --> /main/template/arrays/line_tdata_arr/line_tdata
					symbol external misc line_token --> /main/template/arrays/line_token_arr/line_token
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					local wd K_unchecked
					local index K_unchecked
					code
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked line_tdata
									val K_unchecked index
								val K_unchecked wd
							code
								inv !return
									val K_unchecked wd
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookupbyte
										inv !lookup
											val K_unchecked line_token
											val K_unchecked index
										val K_unchecked 0
									val K_unchecked 32
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !do
							inv !or
								inv !eq
									inv !lookup
										val K_unchecked line_token
										val K_unchecked index
									val K_unchecked ENDIT_TOKEN
								inv !eq
									inv !bitwiseand
										inv !lookupbyte
											inv !lookup
												val K_unchecked line_token
												val K_unchecked index
											val K_unchecked 0
										val K_unchecked 16
									val K_unchecked 0
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked line_tdata
											val K_unchecked index
										val K_unchecked wd
									code
										inv !return
											val K_unchecked wd
								inv !postincrement
									reference
										val K_unchecked index
						inv !return
							inv !unaryminus
								val K_unchecked 1
				constant PrepositionChain K_unchecked_function = PrepositionChain_B __assimilated=1
			package CreatureTest_fn _function
				symbol public misc CreatureTest
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CreatureTest_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc animate --> /main/template/properties/animate_prop/animate
					symbol external misc talkable --> /main/template/properties/talkable_prop/talkable
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00276 --> /main/connectors/plug_00276
					symbol external misc plug_00259 --> /main/connectors/plug_00259
					symbol external misc plug_00278 --> /main/connectors/plug_00278
					symbol external misc plug_00277 --> /main/connectors/plug_00277
					local obj K_unchecked
					code
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked animate
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !hasnt
								val K_unchecked obj
								val K_unchecked talkable
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked action_to_be
								inv !alternative
									inv !alternative
										inv !alternative
											val K_unchecked plug_00276
											val K_unchecked plug_00259
										val K_unchecked plug_00278
									val K_unchecked plug_00277
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CreatureTest K_unchecked_function = CreatureTest_B __assimilated=1
			package NounDomain_fn _function
				symbol public misc NounDomain
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NounDomain_B _code
					symbol private misc domain1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc domain2
					symbol private misc context
					symbol private misc dont_ask
					symbol private misc first_word
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc l
					symbol private misc answer_words
					symbol private misc marker
					symbol external misc plug_00273 --> /main/template/variables/match_length_var/match_length
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc plug_00272 --> /main/template/variables/match_from_var/match_from
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc SearchScope --> /main/template/functions/SearchScope_fn/SearchScope
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					symbol external misc AND1__WD --> /main/template/constants/AND1__WD_con/AND1__WD
					symbol external misc AND2__WD --> /main/template/constants/AND2__WD_con/AND2__WD
					symbol external misc AND3__WD --> /main/template/constants/AND3__WD_con/AND3__WD
					symbol external misc comma_word --> /main/template/constants/comma_word_con/comma_word
					symbol external misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
					symbol external misc THEN2__WD --> /main/template/constants/THEN2__WD_con/THEN2__WD
					symbol external misc THEN3__WD --> /main/template/constants/THEN3__WD_con/THEN3__WD
					symbol external misc BUT1__WD --> /main/template/constants/BUT1__WD_con/BUT1__WD
					symbol external misc BUT2__WD --> /main/template/constants/BUT2__WD_con/BUT2__WD
					symbol external misc BUT3__WD --> /main/template/constants/BUT3__WD_con/BUT3__WD
					symbol external misc plug_00242 --> /main/template/variables/lookahead_var/lookahead
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc plug_00274 --> /main/template/variables/number_of_classes_var/number_of_classes
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc PLURAL_BIT --> /main/template/constants/PLURAL_BIT_con/PLURAL_BIT
					symbol external misc MULTI_TOKEN --> /main/template/constants/MULTI_TOKEN_con/MULTI_TOKEN
					symbol external misc MULTIHELD_TOKEN --> /main/template/constants/MULTIHELD_TOKEN_con/MULTIHELD_TOKEN
					symbol external misc MULTIEXCEPT_TOKEN --> /main/template/constants/MULTIEXCEPT_TOKEN_con/MULTIEXCEPT_TOKEN
					symbol external misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
					symbol external misc NOUN_TOKEN --> /main/template/constants/NOUN_TOKEN_con/NOUN_TOKEN
					symbol external misc HELD_TOKEN --> /main/template/constants/HELD_TOKEN_con/HELD_TOKEN
					symbol external misc CREATURE_TOKEN --> /main/template/constants/CREATURE_TOKEN_con/CREATURE_TOKEN
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc DECIDING_WHETHER_ALL_INC_ACT --> /main/template/constants/DECIDING_WHETHER_ALL_INC_ACT_con/DECIDING_WHETHER_ALL_INC_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc RulebookFailed --> /main/template/functions/RulebookFailed_fn/RulebookFailed
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					symbol external misc Identical --> /main/template/functions/Identical_fn/Identical
					symbol external misc plug_00280 --> /main/template/variables/dont_infer_var/dont_infer
					symbol external misc Adjudicate --> /main/template/functions/Adjudicate_fn/Adjudicate
					symbol external misc plug_00247 --> /main/template/variables/inferfrom_var/inferfrom
					symbol external misc plug_00252 --> /main/template/variables/pcount_var/pcount
					symbol external misc pattern --> /main/template/arrays/pattern_arr/pattern
					symbol private label .Incomplete
					symbol external misc ASKING_WHICH_DO_YOU_MEAN_ACT --> /main/template/constants/ASKING_WHICH_DO_YOU_MEAN_ACT_con/ASKING_WHICH_DO_YOU_MEAN_ACT
					symbol private label .SkipWhichQuestion
					symbol external misc match_classes --> /main/template/arrays/match_classes_arr/match_classes
					symbol external misc animate --> /main/template/properties/animate_prop/animate
					symbol external misc plug_00290 --> /main/connectors/plug_00290
					symbol private label .WhichOne
					symbol external misc Keyboard --> /main/template/functions/Keyboard_fn/Keyboard
					symbol external misc buffer2 --> /main/template/arrays/buffer2_arr/buffer2
					symbol external misc parse2 --> /main/template/arrays/parse2_arr/parse2
					symbol external misc ALL1__WD --> /main/template/constants/ALL1__WD_con/ALL1__WD
					symbol external misc ALL2__WD --> /main/template/constants/ALL2__WD_con/ALL2__WD
					symbol external misc ALL3__WD --> /main/template/constants/ALL3__WD_con/ALL3__WD
					symbol external misc ALL4__WD --> /main/template/constants/ALL4__WD_con/ALL4__WD
					symbol external misc ALL5__WD --> /main/template/constants/ALL5__WD_con/ALL5__WD
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc plug_00291 --> /main/connectors/plug_00291
					symbol external misc WordFrom --> /main/template/functions/WordFrom_fn/WordFrom
					symbol external misc VM_CopyBuffer --> /main/template/functions/VM_CopyBuffer_fn/VM_CopyBuffer
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol private label .RECONSTRUCT_INPUT
					symbol external misc #dict_par1 --> /main/veneer/#dict_par1
					symbol external misc LanguageVerbMayBeName --> /main/template/functions/LanguageVerbMayBeName_fn/LanguageVerbMayBeName
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc INPUT_BUFFER_LEN --> /main/template/constants/INPUT_BUFFER_LEN_con/INPUT_BUFFER_LEN
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc WordCount --> /main/template/functions/WordCount_fn/WordCount
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc LanguageToInformese --> /main/template/functions/LanguageToInformese_fn/LanguageToInformese
					symbol external misc VM_Tokenise --> /main/template/functions/VM_Tokenise_fn/VM_Tokenise
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc ScopeCeiling --> /main/template/functions/ScopeCeiling_fn/ScopeCeiling
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc plug_00292 --> /main/connectors/plug_00292
					symbol external misc READING_A_COMMAND_ACT --> /main/template/constants/READING_A_COMMAND_ACT_con/READING_A_COMMAND_ACT
					symbol external misc plug_00240 --> /main/connectors/plug_00240
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc PATTERN_NULL --> /main/template/constants/PATTERN_NULL_con/PATTERN_NULL
					symbol external misc PronounNotice --> /main/template/functions/PronounNotice_fn/PronounNotice
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					symbol external misc VM_NumberToDictionaryAddress --> /main/template/functions/VM_NumberToDictionaryAddress_fn/VM_NumberToDictionaryAddress
					symbol external misc plug_00293 --> /main/connectors/plug_00293
					local domain1 K_unchecked
					local domain2 K_unchecked
					local context K_unchecked
					local dont_ask K_unchecked
					local first_word K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local l K_unchecked
					local answer_words K_unchecked
					local marker K_unchecked
					code
						inv !store
							reference
								val K_unchecked match_length
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked number_matched
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked match_from
							val K_unchecked wn
						inv SearchScope
							val K_unchecked domain1
							val K_unchecked domain2
							val K_unchecked context
						inv !store
							reference
								val K_unchecked wn
							inv !plus
								val K_unchecked match_from
								val K_unchecked match_length
						inv !if
							inv !eq
								val K_unchecked number_matched
								val K_unchecked 0
							code
								inv !postincrement
									reference
										val K_unchecked wn
								inv !return
									val K_unchecked 0
						inv !if
							inv !le
								val K_unchecked match_from
								val K_unchecked num_words
							code
								inv !if
									inv !eq
										val K_unchecked number_matched
										val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked i
											inv !lookup
												val K_unchecked match_list
												val K_unchecked 0
										inv !return
											val K_unchecked i
								inv !if
									inv !le
										val K_unchecked wn
										val K_unchecked num_words
									code
										inv !store
											reference
												val K_unchecked i
											inv NextWord
										inv !postdecrement
											reference
												val K_unchecked wn
										inv !if
											inv !ne
												val K_unchecked i
												inv !alternative
													inv !alternative
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					val K_unchecked AND1__WD
																					val K_unchecked AND2__WD
																				val K_unchecked AND3__WD
																			val K_unchecked comma_word
																		val K_unchecked THEN1__WD
																	val K_unchecked THEN2__WD
																val K_unchecked THEN3__WD
															val K_unchecked BUT1__WD
														val K_unchecked BUT2__WD
													val K_unchecked BUT3__WD
											code
												inv !if
													inv !eq
														val K_unchecked lookahead
														val K_unchecked ENDIT_TOKEN
													code
														inv !return
															val K_unchecked 0
						inv !store
							reference
								val K_unchecked number_of_classes
							val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked number_matched
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked i
									inv !lookup
										val K_unchecked match_list
										val K_unchecked 0
								inv !if
									inv !and
										inv !eq
											val K_unchecked indef_mode
											val K_unchecked 1
										inv !ne
											inv !bitwiseand
												val K_unchecked indef_type
												val K_unchecked PLURAL_BIT
											val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked context
												inv !alternative
													inv !alternative
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		val K_unchecked MULTI_TOKEN
																		val K_unchecked MULTIHELD_TOKEN
																	val K_unchecked MULTIEXCEPT_TOKEN
																val K_unchecked MULTIINSIDE_TOKEN
															val K_unchecked NOUN_TOKEN
														val K_unchecked HELD_TOKEN
													val K_unchecked CREATURE_TOKEN
											code
												inv BeginActivity
													val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
													val K_unchecked i
												inv !if
													inv !and
														inv ForActivity
															val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
															val K_unchecked i
														inv RulebookFailed
													code
														inv !return
															val K_unchecked 0
												inv EndActivity
													val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
													val K_unchecked i
						inv !if
							inv !gt
								val K_unchecked number_matched
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked i
									val K_unchecked 1
								inv !if
									inv !gt
										val K_unchecked number_matched
										val K_unchecked 1
									code
										inv !for
											inv !store
												reference
													val K_unchecked j
												val K_unchecked 0
											inv !lt
												val K_unchecked j
												inv !minus
													val K_unchecked number_matched
													val K_unchecked 1
											inv !postincrement
												reference
													val K_unchecked j
											code
												inv !if
													inv !eq
														inv Identical
															inv !lookup
																val K_unchecked match_list
																val K_unchecked j
															inv !lookup
																val K_unchecked match_list
																inv !plus
																	val K_unchecked j
																	val K_unchecked 1
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked i
															val K_unchecked 0
								inv !if
									val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked dont_infer
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked i
									inv Adjudicate
										val K_unchecked context
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked -1
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked 1
									code
										inv !return
											val K_unchecked 1
						inv !if
							inv !ne
								val K_unchecked i
								val K_unchecked 0
							code
								inv !if
									val K_unchecked dont_infer
									code
										inv !return
											val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked inferfrom
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked inferfrom
											val K_unchecked pcount
								inv !store
									reference
										inv !lookup
											val K_unchecked pattern
											val K_unchecked pcount
									val K_unchecked i
								inv !return
									val K_unchecked i
						inv !if
							val K_unchecked dont_ask
							code
								inv !return
									inv !lookup
										val K_unchecked match_list
										val K_unchecked 0
						inv !if
							inv !gt
								val K_unchecked match_from
								val K_unchecked num_words
							code
								inv !jump
									lab .Incomplete
						inv BeginActivity
							val K_unchecked ASKING_WHICH_DO_YOU_MEAN_ACT
						inv !if
							inv ForActivity
								val K_unchecked ASKING_WHICH_DO_YOU_MEAN_ACT
							code
								inv !jump
									lab .SkipWhichQuestion
						inv !store
							reference
								val K_unchecked j
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked marker
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked number_of_classes
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !while
									inv !and
										inv !ne
											inv !lookup
												val K_unchecked match_classes
												val K_unchecked marker
											val K_unchecked i
										inv !ne
											inv !lookup
												val K_unchecked match_classes
												val K_unchecked marker
											inv !unaryminus
												val K_unchecked i
									code
										inv !postincrement
											reference
												val K_unchecked marker
								inv !if
									inv !hasnt
										inv !lookup
											val K_unchecked match_list
											val K_unchecked marker
										val K_unchecked animate
									code
										inv !store
											reference
												val K_unchecked j
											val K_unchecked 0
						inv !ifelse
							val K_unchecked j
							code
								inv plug_00290
									val K_unchecked 65
							code
								inv plug_00290
									val K_unchecked 66
						inv !store
							reference
								val K_unchecked j
							val K_unchecked number_of_classes
						inv !store
							reference
								val K_unchecked marker
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked number_of_classes
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !while
									inv !and
										inv !ne
											inv !lookup
												val K_unchecked match_classes
												val K_unchecked marker
											val K_unchecked i
										inv !ne
											inv !lookup
												val K_unchecked match_classes
												val K_unchecked marker
											inv !unaryminus
												val K_unchecked i
									code
										inv !postincrement
											reference
												val K_unchecked marker
								inv !store
									reference
										val K_unchecked k
									inv !lookup
										val K_unchecked match_list
										val K_unchecked marker
								inv !ifelse
									inv !gt
										inv !lookup
											val K_unchecked match_classes
											val K_unchecked marker
										val K_unchecked 0
									code
										inv !printdef
											val K_unchecked k
									code
										inv !printindef
											val K_unchecked k
								inv !if
									inv !lt
										val K_unchecked i
										inv !minus
											val K_unchecked j
											val K_unchecked 1
									code
										inv !print
											val K_unchecked ", "
								inv !if
									inv !eq
										val K_unchecked i
										inv !minus
											val K_unchecked j
											val K_unchecked 1
									code
										inv plug_00290
											val K_unchecked 72
						inv !print
							val K_unchecked "?\n"
						.SkipWhichQuestion
						inv EndActivity
							val K_unchecked ASKING_WHICH_DO_YOU_MEAN_ACT
						.WhichOne
						inv !store
							reference
								val K_unchecked answer_words
							inv Keyboard
								val K_unchecked buffer2
								val K_unchecked parse2
						inv !store
							reference
								val K_unchecked first_word
							inv !lookup
								val K_unchecked parse2
								val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked first_word
								inv !alternative
									inv !alternative
										inv !alternative
											inv !alternative
												val K_unchecked ALL1__WD
												val K_unchecked ALL2__WD
											val K_unchecked ALL3__WD
										val K_unchecked ALL4__WD
									val K_unchecked ALL5__WD
							code
								inv !if
									inv !eq
										val K_unchecked context
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked MULTI_TOKEN
													val K_unchecked MULTIHELD_TOKEN
												val K_unchecked MULTIEXCEPT_TOKEN
											val K_unchecked MULTIINSIDE_TOKEN
									code
										inv !store
											reference
												val K_unchecked l
											inv !lookup
												val K_unchecked multiple_object
												val K_unchecked 0
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !and
												inv !lt
													val K_unchecked i
													val K_unchecked number_matched
												inv !lt
													inv !plus
														val K_unchecked l
														val K_unchecked i
													val K_unchecked plug_00291
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														val K_unchecked k
													inv !lookup
														val K_unchecked match_list
														val K_unchecked i
												inv !store
													reference
														inv !lookup
															val K_unchecked multiple_object
															inv !plus
																inv !plus
																	val K_unchecked i
																	val K_unchecked 1
																val K_unchecked l
													val K_unchecked k
										inv !store
											reference
												inv !lookup
													val K_unchecked multiple_object
													val K_unchecked 0
											inv !plus
												val K_unchecked i
												val K_unchecked l
										inv !return
											val K_unchecked 1
								inv plug_00290
									val K_unchecked 67
								inv !jump
									lab .WhichOne
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked answer_words
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										inv WordFrom
											val K_unchecked i
											val K_unchecked parse2
										val K_unchecked comma_word
									code
										inv VM_CopyBuffer
											val K_unchecked buffer
											val K_unchecked buffer2
										inv !jump
											lab .RECONSTRUCT_INPUT
						inv !if
							inv !ne
								val K_unchecked first_word
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked j
									inv !lookupbyte
										val K_unchecked first_word
										val K_unchecked #dict_par1
								inv !if
									inv !and
										inv !ne
											val K_unchecked 0
											inv !bitwiseand
												val K_unchecked j
												val K_unchecked 1
										inv !not
											inv LanguageVerbMayBeName
												val K_unchecked first_word
									code
										inv VM_CopyBuffer
											val K_unchecked buffer
											val K_unchecked buffer2
										inv !jump
											lab .RECONSTRUCT_INPUT
						inv !store
							reference
								val K_unchecked k
							inv !minus
								inv WordAddress
									val K_unchecked match_from
								val K_unchecked buffer
						inv !store
							reference
								val K_unchecked l
							inv !plus
								inv !lookup
									val K_unchecked buffer2
									val K_unchecked 0
								val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked j
								inv !minus
									inv !plus
										val K_unchecked buffer
										val K_unchecked INPUT_BUFFER_LEN
									val K_unchecked 1
							inv !ge
								val K_unchecked j
								inv !plus
									inv !plus
										val K_unchecked buffer
										val K_unchecked k
									val K_unchecked l
							inv !postdecrement
								reference
									val K_unchecked j
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked j
											val K_unchecked 0
									inv !lookupbyte
										val K_unchecked j
										inv !unaryminus
											val K_unchecked l
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked l
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked buffer
											inv !plus
												val K_unchecked k
												val K_unchecked i
									inv !lookupbyte
										val K_unchecked buffer2
										inv !plus
											val K_unchecked plug_00139
											val K_unchecked i
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked buffer
									inv !minus
										inv !plus
											val K_unchecked k
											val K_unchecked l
										val K_unchecked 1
							val K_unchecked 32
						inv !store
							reference
								inv !lookup
									val K_unchecked buffer
									val K_unchecked 0
							inv !plus
								inv !lookup
									val K_unchecked buffer
									val K_unchecked 0
								val K_unchecked l
						inv !if
							inv !gt
								inv !lookup
									val K_unchecked buffer
									val K_unchecked 0
								inv !minus
									val K_unchecked INPUT_BUFFER_LEN
									val K_unchecked plug_00139
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked buffer
											val K_unchecked 0
									inv !minus
										val K_unchecked INPUT_BUFFER_LEN
										val K_unchecked plug_00139
						.RECONSTRUCT_INPUT
						inv !store
							reference
								val K_unchecked num_words
							inv WordCount
						inv !store
							reference
								val K_unchecked players_command
							inv !plus
								val K_unchecked 100
								val K_unchecked num_words
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked 1
						inv LanguageToInformese
						inv VM_Tokenise
							val K_unchecked buffer
							val K_unchecked parse
						inv !store
							reference
								val K_unchecked num_words
							inv WordCount
						inv !store
							reference
								val K_unchecked players_command
							inv !plus
								val K_unchecked 100
								val K_unchecked num_words
						inv !store
							reference
								val K_unchecked actors_location
							inv ScopeCeiling
								val K_unchecked player
						inv FollowRulebook
							inv !lookup
								val K_unchecked plug_00292
								val K_unchecked READING_A_COMMAND_ACT
						inv !return
							val K_unchecked plug_00240
						.Incomplete
						inv !ifelse
							inv !eq
								val K_unchecked context
								val K_unchecked CREATURE_TOKEN
							code
								inv plug_00290
									val K_unchecked 68
									val K_unchecked actor
							code
								inv plug_00290
									val K_unchecked 69
									val K_unchecked actor
						inv !print
							val K_unchecked "\n"
						inv !store
							reference
								val K_unchecked answer_words
							inv Keyboard
								val K_unchecked buffer2
								val K_unchecked parse2
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked answer_words
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										inv WordFrom
											val K_unchecked i
											val K_unchecked parse2
										val K_unchecked comma_word
									code
										inv VM_CopyBuffer
											val K_unchecked buffer
											val K_unchecked buffer2
										inv !jump
											lab .RECONSTRUCT_INPUT
						inv !store
							reference
								val K_unchecked first_word
							inv !lookup
								val K_unchecked parse2
								val K_unchecked 1
						inv !if
							inv !ne
								val K_unchecked first_word
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked j
									inv !lookupbyte
										val K_unchecked first_word
										val K_unchecked #dict_par1
								inv !if
									inv !and
										inv !ne
											val K_unchecked 0
											inv !bitwiseand
												val K_unchecked j
												val K_unchecked 1
										inv !not
											inv LanguageVerbMayBeName
												val K_unchecked first_word
									code
										inv VM_CopyBuffer
											val K_unchecked buffer
											val K_unchecked buffer2
										inv !jump
											lab .RECONSTRUCT_INPUT
						inv !if
							inv !ne
								val K_unchecked inferfrom
								val K_unchecked 0
							code
								inv !for
									inv !store
										reference
											val K_unchecked j
										val K_unchecked inferfrom
									inv !lt
										val K_unchecked j
										val K_unchecked pcount
									inv !postincrement
										reference
											val K_unchecked j
									code
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked pattern
													val K_unchecked j
												val K_unchecked PATTERN_NULL
											code
												inv !continue
										inv !store
											reference
												val K_unchecked i
											inv !plus
												val K_unchecked plug_00139
												inv !lookup
													val K_unchecked buffer
													val K_unchecked 0
										inv !postincrement
											reference
												inv !lookup
													val K_unchecked buffer
													val K_unchecked 0
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked buffer
													inv !postincrement
														reference
															val K_unchecked i
											val K_unchecked 32
										inv !store
											reference
												inv !lookup
													val K_unchecked parse2
													val K_unchecked 1
											val K_unchecked 0
										inv !ifelse
											inv !and
												inv !ge
													inv !lookup
														val K_unchecked pattern
														val K_unchecked j
													val K_unchecked 2
												inv !lt
													inv !lookup
														val K_unchecked pattern
														val K_unchecked j
													val K_unchecked plug_00240
											code
												inv PronounNotice
													inv !lookup
														val K_unchecked pattern
														val K_unchecked j
												inv !for
													inv !store
														reference
															val K_unchecked k
														val K_unchecked 1
													inv !le
														val K_unchecked k
														inv !lookup
															val K_unchecked LanguagePronouns
															val K_unchecked 0
													inv !store
														reference
															val K_unchecked k
														inv !plus
															val K_unchecked k
															val K_unchecked 3
													code
														inv !if
															inv !eq
																inv !lookup
																	val K_unchecked pattern
																	val K_unchecked j
																inv !lookup
																	val K_unchecked LanguagePronouns
																	inv !plus
																		val K_unchecked k
																		val K_unchecked 2
															code
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked parse2
																			val K_unchecked 1
																	inv !lookup
																		val K_unchecked LanguagePronouns
																		val K_unchecked k
																inv !break
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked parse2
															val K_unchecked 1
													inv VM_NumberToDictionaryAddress
														inv !minus
															inv !lookup
																val K_unchecked pattern
																val K_unchecked j
															val K_unchecked plug_00240
										inv !if
											inv !ne
												inv !lookup
													val K_unchecked parse2
													val K_unchecked 1
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked k
													inv !plus
														val K_unchecked buffer
														val K_unchecked i
												inv !store
													reference
														val K_unchecked k
													inv plug_00293
														inv !plus
															val K_unchecked buffer
															val K_unchecked i
														inv !minus
															val K_unchecked INPUT_BUFFER_LEN
															val K_unchecked i
														inv !lookup
															val K_unchecked parse2
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked i
													inv !plus
														val K_unchecked i
														val K_unchecked k
												inv !store
													reference
														inv !lookup
															val K_unchecked buffer
															val K_unchecked 0
													inv !minus
														val K_unchecked i
														val K_unchecked plug_00139
						inv !store
							reference
								val K_unchecked i
							inv !plus
								val K_unchecked plug_00139
								inv !lookup
									val K_unchecked buffer
									val K_unchecked 0
						inv !postincrement
							reference
								inv !lookup
									val K_unchecked buffer
									val K_unchecked 0
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked buffer
									inv !postincrement
										reference
											val K_unchecked i
							val K_unchecked 32
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 0
							inv !lt
								val K_unchecked j
								inv !lookup
									val K_unchecked buffer2
									val K_unchecked 0
							inv !sequential
								inv !postincrement
									reference
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked j
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked buffer
											val K_unchecked i
									inv !lookupbyte
										val K_unchecked buffer2
										inv !plus
											val K_unchecked j
											val K_unchecked plug_00139
								inv !postincrement
									reference
										inv !lookup
											val K_unchecked buffer
											val K_unchecked 0
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked buffer
											val K_unchecked 0
										val K_unchecked INPUT_BUFFER_LEN
									code
										inv !break
						inv !jump
							lab .RECONSTRUCT_INPUT
				constant NounDomain K_unchecked_function = NounDomain_B __assimilated=1
			package PARSER_CLARIF_INTERNAL_R_fn _function
				symbol public misc PARSER_CLARIF_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PARSER_CLARIF_INTERNAL_R_B _code
					code
				constant PARSER_CLARIF_INTERNAL_R K_unchecked_function = PARSER_CLARIF_INTERNAL_R_B __assimilated=1
			package Adjudicate_fn _function
				symbol public misc Adjudicate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Adjudicate_B _code
					symbol private misc context
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc good_ones
					symbol private misc last
					symbol private misc n
					symbol private misc ultimate
					symbol private misc flag
					symbol private misc offset
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					symbol external misc match_scores --> /main/template/arrays/match_scores_arr/match_scores
					symbol external misc ScopeCeiling --> /main/template/functions/ScopeCeiling_fn/ScopeCeiling
					symbol external misc HELD_TOKEN --> /main/template/constants/HELD_TOKEN_con/HELD_TOKEN
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc MULTI_TOKEN --> /main/template/constants/MULTI_TOKEN_con/MULTI_TOKEN
					symbol external misc concealed --> /main/template/properties/concealed_prop/concealed
					symbol external misc scenery --> /main/template/properties/scenery_prop/scenery
					symbol external misc MULTIHELD_TOKEN --> /main/template/constants/MULTIHELD_TOKEN_con/MULTIHELD_TOKEN
					symbol external misc MULTIEXCEPT_TOKEN --> /main/template/constants/MULTIEXCEPT_TOKEN_con/MULTIEXCEPT_TOKEN
					symbol external misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
					symbol external misc plug_00251 --> /main/template/variables/advance_warning_var/advance_warning
					symbol external misc CREATURE_TOKEN --> /main/template/constants/CREATURE_TOKEN_con/CREATURE_TOKEN
					symbol external misc CreatureTest --> /main/template/functions/CreatureTest_fn/CreatureTest
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc PLURAL_BIT --> /main/template/constants/PLURAL_BIT_con/PLURAL_BIT
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc DECIDING_WHETHER_ALL_INC_ACT --> /main/template/constants/DECIDING_WHETHER_ALL_INC_ACT_con/DECIDING_WHETHER_ALL_INC_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc RulebookFailed --> /main/template/functions/RulebookFailed_fn/RulebookFailed
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					symbol external misc ScoreMatchL --> /main/template/functions/ScoreMatchL_fn/ScoreMatchL
					symbol external misc SingleBestGuess --> /main/template/functions/SingleBestGuess_fn/SingleBestGuess
					symbol external misc plug_00213 --> /main/template/variables/etype_var/etype
					symbol external misc MULTI_PE --> /main/template/constants/MULTI_PE_con/MULTI_PE
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc BestGuess --> /main/template/functions/BestGuess_fn/BestGuess
					symbol external misc plug_00283 --> /main/template/variables/indef_wanted_var/indef_wanted
					symbol external misc plug_00291 --> /main/connectors/plug_00291
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00254 --> /main/connectors/plug_00254
					symbol external misc plug_00266 --> /main/connectors/plug_00266
					symbol external misc ChooseObjects --> /main/template/functions/ChooseObjects_fn/ChooseObjects
					symbol external misc RulebookSucceeded --> /main/template/functions/RulebookSucceeded_fn/RulebookSucceeded
					symbol external misc INDEF_ALL_WANTED --> /main/template/constants/INDEF_ALL_WANTED_con/INDEF_ALL_WANTED
					symbol external misc TOOFEW_PE --> /main/template/constants/TOOFEW_PE_con/TOOFEW_PE
					symbol external misc plug_00268 --> /main/template/variables/multi_wanted_var/multi_wanted
					symbol external misc plug_00281 --> /main/template/variables/parser_trace_var/parser_trace
					symbol external misc plug_00265 --> /main/template/variables/multi_had_var/multi_had
					symbol external misc plug_00250 --> /main/template/variables/multi_context_var/multi_context
					symbol external misc match_classes --> /main/template/arrays/match_classes_arr/match_classes
					symbol external misc Identical --> /main/template/functions/Identical_fn/Identical
					symbol external misc plug_00274 --> /main/template/variables/number_of_classes_var/number_of_classes
					symbol external misc plug_00280 --> /main/template/variables/dont_infer_var/dont_infer
					local context K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local good_ones K_unchecked
					local last K_unchecked
					local n K_unchecked
					local ultimate K_unchecked
					local flag K_unchecked
					local offset K_unchecked
					code
						inv !store
							reference
								val K_unchecked j
							inv !minus
								val K_unchecked number_matched
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked good_ones
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked last
							inv !lookup
								val K_unchecked match_list
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !le
								val K_unchecked i
								val K_unchecked j
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked n
									inv !lookup
										val K_unchecked match_list
										val K_unchecked i
								inv !store
									reference
										inv !lookup
											val K_unchecked match_scores
											val K_unchecked i
									val K_unchecked good_ones
								inv !store
									reference
										val K_unchecked ultimate
									inv ScopeCeiling
										val K_unchecked n
								inv !if
									inv !and
										inv !eq
											val K_unchecked context
											val K_unchecked HELD_TOKEN
										inv !eq
											inv parent
												val K_unchecked n
											val K_unchecked actor
									code
										inv !postincrement
											reference
												val K_unchecked good_ones
										inv !store
											reference
												val K_unchecked last
											val K_unchecked n
								inv !if
									inv !and
										inv !and
											inv !and
												inv !and
													inv !eq
														val K_unchecked context
														val K_unchecked MULTI_TOKEN
													inv !eq
														val K_unchecked ultimate
														inv ScopeCeiling
															val K_unchecked actor
												inv !ne
													val K_unchecked n
													val K_unchecked actor
											inv !hasnt
												val K_unchecked n
												val K_unchecked concealed
										inv !hasnt
											val K_unchecked n
											val K_unchecked scenery
									code
										inv !postincrement
											reference
												val K_unchecked good_ones
										inv !store
											reference
												val K_unchecked last
											val K_unchecked n
								inv !if
									inv !and
										inv !eq
											val K_unchecked context
											val K_unchecked MULTIHELD_TOKEN
										inv !eq
											inv parent
												val K_unchecked n
											val K_unchecked actor
									code
										inv !postincrement
											reference
												val K_unchecked good_ones
										inv !store
											reference
												val K_unchecked last
											val K_unchecked n
								inv !if
									inv !eq
										val K_unchecked context
										inv !alternative
											val K_unchecked MULTIEXCEPT_TOKEN
											val K_unchecked MULTIINSIDE_TOKEN
									code
										inv !ifelse
											inv !eq
												val K_unchecked advance_warning
												val K_unchecked -1
											code
												inv !if
													inv !eq
														val K_unchecked context
														val K_unchecked MULTIEXCEPT_TOKEN
													code
														inv !postincrement
															reference
																val K_unchecked good_ones
														inv !store
															reference
																val K_unchecked last
															val K_unchecked n
												inv !if
													inv !eq
														val K_unchecked context
														val K_unchecked MULTIINSIDE_TOKEN
													code
														inv !if
															inv !ne
																inv parent
																	val K_unchecked n
																val K_unchecked actor
															code
																inv !postincrement
																	reference
																		val K_unchecked good_ones
																inv !store
																	reference
																		val K_unchecked last
																	val K_unchecked n
											code
												inv !if
													inv !and
														inv !eq
															val K_unchecked context
															val K_unchecked MULTIEXCEPT_TOKEN
														inv !ne
															val K_unchecked n
															val K_unchecked advance_warning
													code
														inv !postincrement
															reference
																val K_unchecked good_ones
														inv !store
															reference
																val K_unchecked last
															val K_unchecked n
												inv !if
													inv !and
														inv !eq
															val K_unchecked context
															val K_unchecked MULTIINSIDE_TOKEN
														inv !in
															val K_unchecked n
															val K_unchecked advance_warning
													code
														inv !postincrement
															reference
																val K_unchecked good_ones
														inv !store
															reference
																val K_unchecked last
															val K_unchecked n
								inv !if
									inv !and
										inv !eq
											val K_unchecked context
											val K_unchecked CREATURE_TOKEN
										inv !eq
											inv CreatureTest
												val K_unchecked n
											val K_unchecked 1
									code
										inv !postincrement
											reference
												val K_unchecked good_ones
										inv !store
											reference
												val K_unchecked last
											val K_unchecked n
								inv !store
									reference
										inv !lookup
											val K_unchecked match_scores
											val K_unchecked i
									inv !times
										val K_unchecked 1000
										inv !minus
											val K_unchecked good_ones
											inv !lookup
												val K_unchecked match_scores
												val K_unchecked i
						inv !if
							inv !eq
								val K_unchecked good_ones
								val K_unchecked 1
							code
								inv !ifelse
									inv !and
										inv !and
											inv !eq
												val K_unchecked indef_mode
												val K_unchecked 1
											inv !ne
												inv !bitwiseand
													val K_unchecked indef_type
													val K_unchecked PLURAL_BIT
												val K_unchecked 0
										inv !eq
											val K_unchecked context
											inv !alternative
												inv !alternative
													inv !alternative
														val K_unchecked MULTI_TOKEN
														val K_unchecked MULTIHELD_TOKEN
													val K_unchecked MULTIEXCEPT_TOKEN
												val K_unchecked MULTIINSIDE_TOKEN
									code
										inv BeginActivity
											val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
											val K_unchecked last
										inv !if
											inv !and
												inv ForActivity
													val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
													val K_unchecked last
												inv RulebookFailed
											code
												inv !store
													reference
														val K_unchecked good_ones
													val K_unchecked 0
										inv EndActivity
											val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
											val K_unchecked last
										inv !if
											inv !eq
												val K_unchecked good_ones
												val K_unchecked 1
											code
												inv !return
													val K_unchecked last
									code
										inv !return
											val K_unchecked last
						inv !if
							inv !and
								inv !eq
									val K_unchecked context
									val K_unchecked CREATURE_TOKEN
								inv !eq
									val K_unchecked good_ones
									val K_unchecked 0
							code
								inv !return
									inv !lookup
										val K_unchecked match_list
										val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked indef_mode
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked indef_type
									val K_unchecked 0
						inv ScoreMatchL
							val K_unchecked context
						inv !if
							inv !eq
								val K_unchecked number_matched
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked indef_mode
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked i
									inv SingleBestGuess
								inv !if
									inv !ge
										val K_unchecked i
										val K_unchecked 0
									code
										inv !return
											val K_unchecked i
						inv !if
							inv !and
								inv !eq
									val K_unchecked indef_mode
									val K_unchecked 1
								inv !ne
									inv !bitwiseand
										val K_unchecked indef_type
										val K_unchecked PLURAL_BIT
									val K_unchecked 0
							code
								inv !if
									inv !ne
										val K_unchecked context
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked MULTI_TOKEN
													val K_unchecked MULTIHELD_TOKEN
												val K_unchecked MULTIEXCEPT_TOKEN
											val K_unchecked MULTIINSIDE_TOKEN
									code
										inv !store
											reference
												val K_unchecked etype
											val K_unchecked MULTI_PE
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !store
									reference
										val K_unchecked i
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked offset
									inv !lookup
										val K_unchecked multiple_object
										val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked j
										inv BestGuess
									inv !and
										inv !and
											inv !ne
												val K_unchecked j
												val K_unchecked -1
											inv !lt
												val K_unchecked i
												val K_unchecked indef_wanted
										inv !lt
											inv !plus
												val K_unchecked i
												val K_unchecked offset
											inv !minus
												val K_unchecked plug_00291
												val K_unchecked 1
									inv !store
										reference
											val K_unchecked j
										inv BestGuess
									code
										inv !store
											reference
												val K_unchecked flag
											val K_unchecked 0
										inv BeginActivity
											val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
											val K_unchecked j
										inv !ifelse
											inv !eq
												inv ForActivity
													val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
													val K_unchecked j
												val K_unchecked 0
											code
												inv !if
													inv !and
														inv !hasnt
															val K_unchecked j
															val K_unchecked concealed
														inv !hasnt
															val K_unchecked j
															val K_unchecked worn
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 1
												inv !if
													inv !and
														inv !eq
															val K_unchecked context
															inv !alternative
																val K_unchecked MULTIHELD_TOKEN
																val K_unchecked MULTIEXCEPT_TOKEN
														inv !ne
															inv parent
																val K_unchecked j
															val K_unchecked actor
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 0
												inv !if
													inv !and
														inv !eq
															val K_unchecked action_to_be
															inv !alternative
																val K_unchecked plug_00254
																val K_unchecked plug_00266
														inv !eq
															inv parent
																val K_unchecked j
															val K_unchecked actor
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 0
												inv !store
													reference
														val K_unchecked k
													inv ChooseObjects
														val K_unchecked j
														val K_unchecked flag
												inv !ifelse
													inv !eq
														val K_unchecked k
														val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 1
													code
														inv !if
															inv !eq
																val K_unchecked k
																val K_unchecked 2
															code
																inv !store
																	reference
																		val K_unchecked flag
																	val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked flag
													val K_unchecked 0
												inv !if
													inv RulebookSucceeded
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 1
										inv EndActivity
											val K_unchecked DECIDING_WHETHER_ALL_INC_ACT
											val K_unchecked j
										inv !ifelse
											inv !eq
												val K_unchecked flag
												val K_unchecked 1
											code
												inv !postincrement
													reference
														val K_unchecked i
												inv !store
													reference
														inv !lookup
															val K_unchecked multiple_object
															inv !plus
																val K_unchecked i
																val K_unchecked offset
													val K_unchecked j
											code
												inv !store
													reference
														val K_unchecked i
													val K_unchecked i
								inv !if
									inv !and
										inv !lt
											val K_unchecked i
											val K_unchecked indef_wanted
										inv !lt
											val K_unchecked indef_wanted
											val K_unchecked INDEF_ALL_WANTED
									code
										inv !store
											reference
												val K_unchecked etype
											val K_unchecked TOOFEW_PE
										inv !store
											reference
												val K_unchecked multi_wanted
											val K_unchecked indef_wanted
										inv !if
											inv !ge
												val K_unchecked parser_trace
												val K_unchecked 4
											code
												inv !print
													val K_unchecked "Too few found\n"
										inv !store
											reference
												val K_unchecked multi_had
											val K_unchecked i
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !store
									reference
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked 0
									inv !plus
										val K_unchecked i
										val K_unchecked offset
								inv !store
									reference
										val K_unchecked multi_context
									val K_unchecked context
								inv !return
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked number_matched
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked match_classes
											val K_unchecked i
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked n
							val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked number_matched
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked match_classes
											val K_unchecked i
										val K_unchecked 0
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked match_classes
													val K_unchecked i
											inv !postincrement
												reference
													val K_unchecked n
										inv !store
											reference
												val K_unchecked flag
											val K_unchecked 0
										inv !for
											inv !store
												reference
													val K_unchecked j
												inv !plus
													val K_unchecked i
													val K_unchecked 1
											inv !lt
												val K_unchecked j
												val K_unchecked number_matched
											inv !postincrement
												reference
													val K_unchecked j
											code
												inv !if
													inv !and
														inv !eq
															inv !lookup
																val K_unchecked match_classes
																val K_unchecked j
															val K_unchecked 0
														inv !eq
															inv Identical
																inv !lookup
																	val K_unchecked match_list
																	val K_unchecked i
																inv !lookup
																	val K_unchecked match_list
																	val K_unchecked j
															val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 1
														inv !store
															reference
																inv !lookup
																	val K_unchecked match_classes
																	val K_unchecked j
															inv !lookup
																val K_unchecked match_classes
																val K_unchecked i
										inv !if
											inv !eq
												val K_unchecked flag
												val K_unchecked 1
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked match_classes
															val K_unchecked i
													inv !minus
														val K_unchecked 1
														val K_unchecked n
						inv !postdecrement
							reference
								val K_unchecked n
						inv !store
							reference
								val K_unchecked number_of_classes
							val K_unchecked n
						inv !if
							inv !eq
								val K_unchecked indef_mode
								val K_unchecked 0
							code
								inv !if
									inv !gt
										val K_unchecked n
										val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked k
											val K_unchecked -1
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked number_matched
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !ifelse
													inv !gt
														inv !lookup
															val K_unchecked match_scores
															val K_unchecked i
														val K_unchecked k
													code
														inv !store
															reference
																val K_unchecked k
															inv !lookup
																val K_unchecked match_scores
																val K_unchecked i
														inv !store
															reference
																val K_unchecked j
															inv !lookup
																val K_unchecked match_classes
																val K_unchecked i
														inv !store
															reference
																val K_unchecked j
															inv !times
																val K_unchecked j
																val K_unchecked j
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 0
													code
														inv !if
															inv !eq
																inv !lookup
																	val K_unchecked match_scores
																	val K_unchecked i
																val K_unchecked k
															code
																inv !if
																	inv !ne
																		inv !times
																			inv !lookup
																				val K_unchecked match_classes
																				val K_unchecked i
																			inv !lookup
																				val K_unchecked match_classes
																				val K_unchecked i
																		val K_unchecked j
																	code
																		inv !store
																			reference
																				val K_unchecked flag
																			val K_unchecked 1
										inv !if
											val K_unchecked flag
											code
												inv !return
													val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked n
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked dont_infer
									val K_unchecked 1
						inv !return
							inv BestGuess
				constant Adjudicate K_unchecked_function = Adjudicate_B __assimilated=1
			package ReviseMulti_fn _function
				symbol public misc ReviseMulti
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ReviseMulti_B _code
					symbol private misc second_p
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc low
					symbol external misc plug_00250 --> /main/template/variables/multi_context_var/multi_context
					symbol external misc MULTIEXCEPT_TOKEN --> /main/template/constants/MULTIEXCEPT_TOKEN_con/MULTIEXCEPT_TOKEN
					symbol external misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc MULTI_TOKEN --> /main/template/constants/MULTI_TOKEN_con/MULTI_TOKEN
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00254 --> /main/connectors/plug_00254
					symbol external misc plug_00253 --> /main/template/variables/take_all_rule_var/take_all_rule
					symbol external misc ScopeCeiling --> /main/template/functions/ScopeCeiling_fn/ScopeCeiling
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc NOTHING_PE --> /main/template/constants/NOTHING_PE_con/NOTHING_PE
					local second_p K_unchecked
					local i K_unchecked
					local low K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked multi_context
								inv !alternative
									val K_unchecked MULTIEXCEPT_TOKEN
									val K_unchecked MULTIINSIDE_TOKEN
							code
								inv !for
									inv !sequential
										inv !store
											reference
												val K_unchecked i
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked low
											val K_unchecked 0
									inv !le
										val K_unchecked i
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked 0
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !or
												inv !and
													inv !eq
														val K_unchecked multi_context
														val K_unchecked MULTIEXCEPT_TOKEN
													inv !ne
														inv !lookup
															val K_unchecked multiple_object
															val K_unchecked i
														val K_unchecked second_p
												inv !and
													inv !eq
														val K_unchecked multi_context
														val K_unchecked MULTIINSIDE_TOKEN
													inv !in
														inv !lookup
															val K_unchecked multiple_object
															val K_unchecked i
														val K_unchecked second_p
											code
												inv !postincrement
													reference
														val K_unchecked low
												inv !store
													reference
														inv !lookup
															val K_unchecked multiple_object
															val K_unchecked low
													inv !lookup
														val K_unchecked multiple_object
														val K_unchecked i
								inv !store
									reference
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked 0
									val K_unchecked low
						inv !if
							inv !and
								inv !eq
									val K_unchecked multi_context
									val K_unchecked MULTI_TOKEN
								inv !eq
									val K_unchecked action_to_be
									val K_unchecked plug_00254
							code
								inv !if
									inv !eq
										val K_unchecked take_all_rule
										val K_unchecked 2
									code
										inv !for
											inv !sequential
												inv !store
													reference
														val K_unchecked i
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked low
													val K_unchecked 0
											inv !le
												val K_unchecked i
												inv !lookup
													val K_unchecked multiple_object
													val K_unchecked 0
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !if
													inv !eq
														inv ScopeCeiling
															inv !lookup
																val K_unchecked multiple_object
																val K_unchecked i
														inv ScopeCeiling
															val K_unchecked actor
													code
														inv !postincrement
															reference
																val K_unchecked low
														inv !store
															reference
																inv !lookup
																	val K_unchecked multiple_object
																	val K_unchecked low
															inv !lookup
																val K_unchecked multiple_object
																val K_unchecked i
										inv !store
											reference
												inv !lookup
													val K_unchecked multiple_object
													val K_unchecked 0
											val K_unchecked low
						inv !store
							reference
								val K_unchecked i
							inv !lookup
								val K_unchecked multiple_object
								val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked 0
							code
								inv !return
									val K_unchecked NOTHING_PE
						inv !return
							val K_unchecked 0
				constant ReviseMulti K_unchecked_function = ReviseMulti_B __assimilated=1
			package MakeMatch_fn _function
				symbol public misc MakeMatch
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MakeMatch_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc quality
					symbol private misc i
					symbol external misc plug_00237 --> /main/template/variables/token_filter_var/token_filter
					symbol external misc ConsultNounFilterToken --> /main/template/functions/ConsultNounFilterToken_fn/ConsultNounFilterToken
					symbol external misc plug_00273 --> /main/template/variables/match_length_var/match_length
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc plug_00291 --> /main/connectors/plug_00291
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					local obj K_unchecked
					local quality K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !and
								inv !ne
									val K_unchecked token_filter
									val K_unchecked 0
								inv !eq
									inv ConsultNounFilterToken
										val K_unchecked obj
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked quality
								val K_unchecked match_length
							code
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !gt
								val K_unchecked quality
								val K_unchecked match_length
							code
								inv !store
									reference
										val K_unchecked match_length
									val K_unchecked quality
								inv !store
									reference
										val K_unchecked number_matched
									val K_unchecked 0
							code
								inv !if
									inv !ge
										val K_unchecked number_matched
										val K_unchecked plug_00291
									code
										inv !return
											val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked number_matched
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked match_list
													val K_unchecked i
												val K_unchecked obj
											code
												inv !return
													val K_unchecked 1
						inv !store
							reference
								inv !lookup
									val K_unchecked match_list
									inv !postincrement
										reference
											val K_unchecked number_matched
							val K_unchecked obj
				constant MakeMatch K_unchecked_function = MakeMatch_B __assimilated=1
			package ConsultNounFilterToken_fn _function
				symbol public misc ConsultNounFilterToken
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ConsultNounFilterToken_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sn
					symbol private misc rv
					symbol external misc plug_00237 --> /main/template/variables/token_filter_var/token_filter
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc indirect --> /main/veneer/indirect
					local obj K_unchecked
					local sn K_unchecked
					local rv K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked token_filter
								val K_unchecked Routine
							code
								inv !store
									reference
										val K_unchecked sn
									val K_unchecked noun
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked rv
									inv indirect
										val K_unchecked token_filter
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked sn
								inv !return
									val K_unchecked rv
						inv !if
							inv !has
								val K_unchecked obj
								inv !minus
									val K_unchecked token_filter
									val K_unchecked 1
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ConsultNounFilterToken K_unchecked_function = ConsultNounFilterToken_B __assimilated=1
			package ScoreMatchL_fn _function
				symbol public misc ScoreMatchL
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScoreMatchL_B _code
					symbol private misc context
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc its_owner
					symbol private misc its_score
					symbol private misc obj
					symbol private misc i
					symbol private misc j
					symbol private misc threshold
					symbol private misc met
					symbol private misc a_s
					symbol private misc l_s
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc MY_BIT --> /main/template/constants/MY_BIT_con/MY_BIT
					symbol external misc THAT_BIT --> /main/template/constants/THAT_BIT_con/THAT_BIT
					symbol external misc LIT_BIT --> /main/template/constants/LIT_BIT_con/LIT_BIT
					symbol external misc UNLIT_BIT --> /main/template/constants/UNLIT_BIT_con/UNLIT_BIT
					symbol external misc plug_00287 --> /main/template/variables/indef_owner_var/indef_owner
					symbol external misc SCORE__BESTLOC --> /main/template/constants/SCORE__BESTLOC_con/SCORE__BESTLOC
					symbol external misc SCORE__NEXTBESTLOC --> /main/template/constants/SCORE__NEXTBESTLOC_con/SCORE__NEXTBESTLOC
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00254 --> /main/connectors/plug_00254
					symbol external misc plug_00266 --> /main/connectors/plug_00266
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc light --> /main/template/properties/light_prop/light
					symbol external misc concealed --> /main/template/properties/concealed_prop/concealed
					symbol external misc SCORE__UNCONCEALED --> /main/template/constants/SCORE__UNCONCEALED_con/SCORE__UNCONCEALED
					symbol external misc Compass --> /main/template/constants/Compass_con/Compass
					symbol external misc SCORE__NOTCOMPASS --> /main/template/constants/SCORE__NOTCOMPASS_con/SCORE__NOTCOMPASS
					symbol external misc SCORE__CHOOSEOBJ --> /main/template/constants/SCORE__CHOOSEOBJ_con/SCORE__CHOOSEOBJ
					symbol external misc ChooseObjects --> /main/template/functions/ChooseObjects_fn/ChooseObjects
					symbol external misc scenery --> /main/template/properties/scenery_prop/scenery
					symbol external misc SCORE__NOTSCENERY --> /main/template/constants/SCORE__NOTSCENERY_con/SCORE__NOTSCENERY
					symbol external misc SCORE__NOTACTOR --> /main/template/constants/SCORE__NOTACTOR_con/SCORE__NOTACTOR
					symbol external misc plug_00288 --> /main/template/variables/indef_cases_var/indef_cases
					symbol external misc PowersOfTwo_TB --> /main/template/arrays/PowersOfTwo_TB_arr/PowersOfTwo_TB
					symbol external misc GetGNAOfObject --> /main/template/functions/GetGNAOfObject_fn/GetGNAOfObject
					symbol external misc SCORE__GNA --> /main/template/constants/SCORE__GNA_con/SCORE__GNA
					symbol external misc match_scores --> /main/template/arrays/match_scores_arr/match_scores
					local context K_unchecked
					local its_owner K_unchecked
					local its_score K_unchecked
					local obj K_unchecked
					local i K_unchecked
					local j K_unchecked
					local threshold K_unchecked
					local met K_unchecked
					local a_s K_unchecked
					local l_s K_unchecked
					code
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked indef_type
									val K_unchecked MY_BIT
								val K_unchecked 0
							code
								inv !postincrement
									reference
										val K_unchecked threshold
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked indef_type
									val K_unchecked THAT_BIT
								val K_unchecked 0
							code
								inv !postincrement
									reference
										val K_unchecked threshold
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked indef_type
									val K_unchecked LIT_BIT
								val K_unchecked 0
							code
								inv !postincrement
									reference
										val K_unchecked threshold
						inv !if
							inv !ne
								inv !bitwiseand
									val K_unchecked indef_type
									val K_unchecked UNLIT_BIT
								val K_unchecked 0
							code
								inv !postincrement
									reference
										val K_unchecked threshold
						inv !if
							inv !ne
								val K_unchecked indef_owner
								val K_unchecked 0
							code
								inv !postincrement
									reference
										val K_unchecked threshold
						inv !store
							reference
								val K_unchecked a_s
							val K_unchecked SCORE__BESTLOC
						inv !store
							reference
								val K_unchecked l_s
							val K_unchecked SCORE__NEXTBESTLOC
						inv !if
							inv !eq
								val K_unchecked action_to_be
								inv !alternative
									val K_unchecked plug_00254
									val K_unchecked plug_00266
							code
								inv !store
									reference
										val K_unchecked a_s
									val K_unchecked SCORE__NEXTBESTLOC
								inv !store
									reference
										val K_unchecked l_s
									val K_unchecked SCORE__BESTLOC
						inv !store
							reference
								val K_unchecked context
							val K_unchecked context
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked number_matched
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked obj
									inv !lookup
										val K_unchecked match_list
										val K_unchecked i
								inv !store
									reference
										val K_unchecked its_owner
									inv parent
										val K_unchecked obj
								inv !store
									reference
										val K_unchecked its_score
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked met
									val K_unchecked 0
								inv !if
									inv !and
										inv !ne
											inv !bitwiseand
												val K_unchecked indef_type
												val K_unchecked MY_BIT
											val K_unchecked 0
										inv !eq
											val K_unchecked its_owner
											val K_unchecked actor
									code
										inv !postincrement
											reference
												val K_unchecked met
								inv !if
									inv !and
										inv !ne
											inv !bitwiseand
												val K_unchecked indef_type
												val K_unchecked THAT_BIT
											val K_unchecked 0
										inv !eq
											val K_unchecked its_owner
											val K_unchecked actors_location
									code
										inv !postincrement
											reference
												val K_unchecked met
								inv !if
									inv !and
										inv !ne
											inv !bitwiseand
												val K_unchecked indef_type
												val K_unchecked LIT_BIT
											val K_unchecked 0
										inv !has
											val K_unchecked obj
											val K_unchecked light
									code
										inv !postincrement
											reference
												val K_unchecked met
								inv !if
									inv !and
										inv !ne
											inv !bitwiseand
												val K_unchecked indef_type
												val K_unchecked UNLIT_BIT
											val K_unchecked 0
										inv !hasnt
											val K_unchecked obj
											val K_unchecked light
									code
										inv !postincrement
											reference
												val K_unchecked met
								inv !if
									inv !and
										inv !ne
											val K_unchecked indef_owner
											val K_unchecked 0
										inv !eq
											val K_unchecked its_owner
											val K_unchecked indef_owner
									code
										inv !postincrement
											reference
												val K_unchecked met
								inv !ifelse
									inv !lt
										val K_unchecked met
										val K_unchecked threshold
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked match_list
													val K_unchecked i
											val K_unchecked -1
									code
										inv !store
											reference
												val K_unchecked its_score
											val K_unchecked 0
										inv !if
											inv !hasnt
												val K_unchecked obj
												val K_unchecked concealed
											code
												inv !store
													reference
														val K_unchecked its_score
													val K_unchecked SCORE__UNCONCEALED
										inv !ifelse
											inv !eq
												val K_unchecked its_owner
												val K_unchecked actor
											code
												inv !store
													reference
														val K_unchecked its_score
													inv !plus
														val K_unchecked its_score
														val K_unchecked a_s
											code
												inv !ifelse
													inv !eq
														val K_unchecked its_owner
														val K_unchecked actors_location
													code
														inv !store
															reference
																val K_unchecked its_score
															inv !plus
																val K_unchecked its_score
																val K_unchecked l_s
													code
														inv !if
															inv !ne
																val K_unchecked its_owner
																val K_unchecked Compass
															code
																inv !store
																	reference
																		val K_unchecked its_score
																	inv !plus
																		val K_unchecked its_score
																		val K_unchecked SCORE__NOTCOMPASS
										inv !store
											reference
												val K_unchecked its_score
											inv !plus
												val K_unchecked its_score
												inv !times
													val K_unchecked SCORE__CHOOSEOBJ
													inv ChooseObjects
														val K_unchecked obj
														val K_unchecked 2
										inv !if
											inv !hasnt
												val K_unchecked obj
												val K_unchecked scenery
											code
												inv !store
													reference
														val K_unchecked its_score
													inv !plus
														val K_unchecked its_score
														val K_unchecked SCORE__NOTSCENERY
										inv !if
											inv !ne
												val K_unchecked obj
												val K_unchecked actor
											code
												inv !store
													reference
														val K_unchecked its_score
													inv !plus
														val K_unchecked its_score
														val K_unchecked SCORE__NOTACTOR
										inv !if
											inv !bitwiseand
												val K_unchecked indef_cases
												inv !lookup
													val K_unchecked PowersOfTwo_TB
													inv GetGNAOfObject
														val K_unchecked obj
											code
												inv !store
													reference
														val K_unchecked its_score
													inv !plus
														val K_unchecked its_score
														val K_unchecked SCORE__GNA
										inv !store
											reference
												inv !lookup
													val K_unchecked match_scores
													val K_unchecked i
											inv !plus
												inv !lookup
													val K_unchecked match_scores
													val K_unchecked i
												val K_unchecked its_score
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked number_matched
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !while
									inv !eq
										inv !lookup
											val K_unchecked match_list
											val K_unchecked i
										val K_unchecked -1
									code
										inv !if
											inv !eq
												val K_unchecked i
												inv !minus
													val K_unchecked number_matched
													val K_unchecked 1
											code
												inv !postdecrement
													reference
														val K_unchecked number_matched
												inv !break
										inv !for
											inv !store
												reference
													val K_unchecked j
												val K_unchecked i
											inv !lt
												val K_unchecked j
												inv !minus
													val K_unchecked number_matched
													val K_unchecked 1
											inv !postincrement
												reference
													val K_unchecked j
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked match_list
															val K_unchecked j
													inv !lookup
														val K_unchecked match_list
														inv !plus
															val K_unchecked j
															val K_unchecked 1
												inv !store
													reference
														inv !lookup
															val K_unchecked match_scores
															val K_unchecked j
													inv !lookup
														val K_unchecked match_scores
														inv !plus
															val K_unchecked j
															val K_unchecked 1
										inv !postdecrement
											reference
												val K_unchecked number_matched
				constant ScoreMatchL K_unchecked_function = ScoreMatchL_B __assimilated=1
			package BestGuess_fn _function
				symbol public misc BestGuess
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BestGuess_B _code
					symbol private misc earliest
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc its_score
					symbol private misc best
					symbol private misc i
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					symbol external misc match_scores --> /main/template/arrays/match_scores_arr/match_scores
					local earliest K_unchecked
					local its_score K_unchecked
					local best K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked earliest
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked best
							val K_unchecked -1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked number_matched
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !ge
										inv !lookup
											val K_unchecked match_list
											val K_unchecked i
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked its_score
											inv !lookup
												val K_unchecked match_scores
												val K_unchecked i
										inv !if
											inv !gt
												val K_unchecked its_score
												val K_unchecked best
											code
												inv !store
													reference
														val K_unchecked best
													val K_unchecked its_score
												inv !store
													reference
														val K_unchecked earliest
													val K_unchecked i
						inv !if
							inv !lt
								val K_unchecked best
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked i
							inv !lookup
								val K_unchecked match_list
								val K_unchecked earliest
						inv !store
							reference
								inv !lookup
									val K_unchecked match_list
									val K_unchecked earliest
							val K_unchecked -1
						inv !return
							val K_unchecked i
				constant BestGuess K_unchecked_function = BestGuess_B __assimilated=1
			package SingleBestGuess_fn _function
				symbol public misc SingleBestGuess
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SingleBestGuess_B _code
					symbol private misc earliest
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc its_score
					symbol private misc best
					symbol private misc i
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc match_scores --> /main/template/arrays/match_scores_arr/match_scores
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					local earliest K_unchecked
					local its_score K_unchecked
					local best K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked earliest
							val K_unchecked -1
						inv !store
							reference
								val K_unchecked best
							val K_unchecked -1000
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked number_matched
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked its_score
									inv !lookup
										val K_unchecked match_scores
										val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked its_score
										val K_unchecked best
									code
										inv !store
											reference
												val K_unchecked earliest
											val K_unchecked -1
								inv !if
									inv !gt
										val K_unchecked its_score
										val K_unchecked best
									code
										inv !store
											reference
												val K_unchecked best
											val K_unchecked its_score
										inv !store
											reference
												val K_unchecked earliest
											inv !lookup
												val K_unchecked match_list
												val K_unchecked i
						inv !return
							val K_unchecked earliest
				constant SingleBestGuess K_unchecked_function = SingleBestGuess_B __assimilated=1
			package Identical_fn _function
				symbol public misc Identical
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Identical_B _code
					symbol private misc o1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o2
					symbol private misc p1
					symbol private misc p2
					symbol private misc n1
					symbol private misc n2
					symbol private misc i
					symbol private misc j
					symbol private misc flag
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					symbol external misc parse_name --> /main/template/properties/parse_name_prop/parse_name
					symbol external misc plug_00294 --> /main/template/variables/parser_action_var/parser_action
					symbol external misc ##TheSame --> /main/template/constants/##TheSame_con/##TheSame
					symbol external misc plug_00146 --> /main/template/variables/parser_one_var/parser_one
					symbol external misc plug_00188 --> /main/template/variables/parser_two_var/parser_two
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc RunRoutines --> /main/template/functions/RunRoutines_fn/RunRoutines
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local o1 K_unchecked
					local o2 K_unchecked
					local p1 K_unchecked
					local p2 K_unchecked
					local n1 K_unchecked
					local n2 K_unchecked
					local i K_unchecked
					local j K_unchecked
					local flag K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked o1
								val K_unchecked o2
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !or
								inv !eq
									val K_unchecked o1
									val K_unchecked 0
								inv !eq
									val K_unchecked o2
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !ofclass
									val K_unchecked o1
									val K_unchecked plug_00241
								inv !ofclass
									val K_unchecked o2
									val K_unchecked plug_00241
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !ne
									inv !propertyvalue
										val K_unchecked o1
										val K_unchecked parse_name
									val K_unchecked 0
								inv !ne
									inv !propertyvalue
										val K_unchecked o2
										val K_unchecked parse_name
									val K_unchecked 0
							code
								inv !if
									inv !ne
										inv !propertyvalue
											val K_unchecked o1
											val K_unchecked parse_name
										inv !propertyvalue
											val K_unchecked o2
											val K_unchecked parse_name
									code
										inv !return
											val K_unchecked 0
								inv !store
									reference
										val K_unchecked parser_action
									val K_unchecked ##TheSame
								inv !store
									reference
										val K_unchecked parser_one
									val K_unchecked o1
								inv !store
									reference
										val K_unchecked parser_two
									val K_unchecked o2
								inv !store
									reference
										val K_unchecked j
									val K_unchecked wn
								inv !store
									reference
										val K_unchecked i
									inv RunRoutines
										val K_unchecked o1
										val K_unchecked parse_name
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked j
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked -1
									code
										inv !return
											val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked -2
									code
										inv !return
											val K_unchecked 0
						inv !store
							reference
								val K_unchecked p1
							inv !propertyaddress
								val K_unchecked o1
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked n1
							inv !divide
								inv !propertylength
									val K_unchecked o1
									val K_unchecked 1
								val K_unchecked plug_00139
						inv !store
							reference
								val K_unchecked p2
							inv !propertyaddress
								val K_unchecked o2
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked n2
							inv !divide
								inv !propertylength
									val K_unchecked o2
									val K_unchecked 1
								val K_unchecked plug_00139
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked n1
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked flag
									val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked j
										val K_unchecked 0
									inv !lt
										val K_unchecked j
										val K_unchecked n2
									inv !postincrement
										reference
											val K_unchecked j
									code
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked p1
													val K_unchecked i
												inv !lookup
													val K_unchecked p2
													val K_unchecked j
											code
												inv !store
													reference
														val K_unchecked flag
													val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked flag
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 0
							inv !lt
								val K_unchecked j
								val K_unchecked n2
							inv !postincrement
								reference
									val K_unchecked j
							code
								inv !store
									reference
										val K_unchecked flag
									val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked n1
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked p1
													val K_unchecked i
												inv !lookup
													val K_unchecked p2
													val K_unchecked j
											code
												inv !store
													reference
														val K_unchecked flag
													val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked flag
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant Identical K_unchecked_function = Identical_B __assimilated=1
			package PrintInferredCommand_fn _function
				symbol public misc PrintInferredCommand
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintInferredCommand_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc singleton_noun
					symbol external misc plug_00252 --> /main/template/variables/pcount_var/pcount
					symbol external misc pattern --> /main/template/arrays/pattern_arr/pattern
					symbol external misc plug_00240 --> /main/connectors/plug_00240
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc CLARIFYING_PARSERS_CHOICE_ACT --> /main/template/constants/CLARIFYING_PARSERS_CHOICE_ACT_con/CLARIFYING_PARSERS_CHOICE_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc PrintCommand --> /main/template/functions/PrintCommand_fn/PrintCommand
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					local from K_unchecked
					local singleton_noun K_unchecked
					code
						inv !store
							reference
								val K_unchecked singleton_noun
							val K_unchecked 0
						inv !if
							inv !and
								inv !and
									inv !and
										inv !ne
											val K_unchecked from
											val K_unchecked 0
										inv !eq
											val K_unchecked from
											inv !minus
												val K_unchecked pcount
												val K_unchecked 1
									inv !gt
										inv !lookup
											val K_unchecked pattern
											val K_unchecked from
										val K_unchecked 1
								inv !lt
									inv !lookup
										val K_unchecked pattern
										val K_unchecked from
									val K_unchecked plug_00240
							code
								inv !store
									reference
										val K_unchecked singleton_noun
									val K_unchecked 1
						inv !ifelse
							val K_unchecked singleton_noun
							code
								inv BeginActivity
									val K_unchecked CLARIFYING_PARSERS_CHOICE_ACT
									inv !lookup
										val K_unchecked pattern
										val K_unchecked from
								inv !if
									inv !eq
										inv ForActivity
											val K_unchecked CLARIFYING_PARSERS_CHOICE_ACT
											inv !lookup
												val K_unchecked pattern
												val K_unchecked from
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "("
										inv PrintCommand
											val K_unchecked from
										inv !print
											val K_unchecked ")\n"
								inv EndActivity
									val K_unchecked CLARIFYING_PARSERS_CHOICE_ACT
									inv !lookup
										val K_unchecked pattern
										val K_unchecked from
							code
								inv !print
									val K_unchecked "("
								inv PrintCommand
									val K_unchecked from
								inv !print
									val K_unchecked ")\n"
				constant PrintInferredCommand K_unchecked_function = PrintInferredCommand_B __assimilated=1
			package PrintCommand_fn _function
				symbol public misc PrintCommand
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintCommand_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc k
					symbol private misc spacing_flag
					symbol external misc plug_00233 --> /main/template/variables/verb_word_var/verb_word
					symbol external misc LanguageVerb --> /main/template/functions/LanguageVerb_fn/LanguageVerb
					symbol external misc PrintVerb --> /main/template/functions/PrintVerb_fn/PrintVerb
					symbol external misc plug_00252 --> /main/template/variables/pcount_var/pcount
					symbol external misc pattern --> /main/template/arrays/pattern_arr/pattern
					symbol external misc PATTERN_NULL --> /main/template/constants/PATTERN_NULL_con/PATTERN_NULL
					symbol external misc plug_00290 --> /main/connectors/plug_00290
					symbol private label .TokenPrinted
					symbol external misc plug_00240 --> /main/connectors/plug_00240
					symbol external misc VM_NumberToDictionaryAddress --> /main/template/functions/VM_NumberToDictionaryAddress_fn/VM_NumberToDictionaryAddress
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					symbol external misc LanguageDirection --> /main/template/functions/LanguageDirection_fn/LanguageDirection
					local from K_unchecked
					local i K_unchecked
					local k K_unchecked
					local spacing_flag K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked i
									val K_unchecked verb_word
								inv !if
									inv !eq
										inv LanguageVerb
											val K_unchecked i
										val K_unchecked 0
									code
										inv !if
											inv !eq
												inv PrintVerb
													val K_unchecked i
												val K_unchecked 0
											code
												inv !printaddress
													val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked from
								inv !store
									reference
										val K_unchecked spacing_flag
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked from
							inv !lt
								val K_unchecked k
								val K_unchecked pcount
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv !store
									reference
										val K_unchecked i
									inv !lookup
										val K_unchecked pattern
										val K_unchecked k
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked PATTERN_NULL
									code
										inv !continue
								inv !if
									val K_unchecked spacing_flag
									code
										inv !printchar
											val K_unchecked 32
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked 0
									code
										inv plug_00290
											val K_unchecked 70
										inv !jump
											lab .TokenPrinted
								inv !if
									inv !eq
										val K_unchecked i
										val K_unchecked 1
									code
										inv plug_00290
											val K_unchecked 71
										inv !jump
											lab .TokenPrinted
								inv !ifelse
									inv !ge
										val K_unchecked i
										val K_unchecked plug_00240
									code
										inv !printaddress
											inv VM_NumberToDictionaryAddress
												inv !minus
													val K_unchecked i
													val K_unchecked plug_00240
									code
										inv !ifelse
											inv !ofclass
												val K_unchecked i
												val K_unchecked plug_00241
											code
												inv LanguageDirection
													val K_unchecked i
											code
												inv !printdef
													val K_unchecked i
								.TokenPrinted
								inv !store
									reference
										val K_unchecked spacing_flag
									val K_unchecked 1
				constant PrintCommand K_unchecked_function = PrintCommand_B __assimilated=1
			package CantSee_fn _function
				symbol public misc CantSee
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CantSee_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc w
					symbol private misc e
					symbol external misc plug_00264 --> /main/template/variables/saved_oops_var/saved_oops
					symbol external misc plug_00216 --> /main/template/variables/oops_from_var/oops_from
					symbol external misc plug_00231 --> /main/template/variables/scope_token_var/scope_token
					symbol external misc plug_00270 --> /main/template/variables/scope_error_var/scope_error
					symbol external misc ASKSCOPE_PE --> /main/template/constants/ASKSCOPE_PE_con/ASKSCOPE_PE
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					symbol external misc CANTSEE_PE --> /main/template/constants/CANTSEE_PE_con/CANTSEE_PE
					symbol external misc plug_00243 --> /main/template/variables/pronoun_word_var/pronoun_word
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc line_token --> /main/template/arrays/line_token_arr/line_token
					symbol external misc plug_00252 --> /main/template/variables/pcount_var/pcount
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc AnalyseToken --> /main/template/functions/AnalyseToken_fn/AnalyseToken
					symbol external misc plug_00204 --> /main/template/variables/found_ttype_var/found_ttype
					symbol external misc ROUTINE_FILTER_TT --> /main/template/constants/ROUTINE_FILTER_TT_con/ROUTINE_FILTER_TT
					symbol external misc ATTR_FILTER_TT --> /main/template/constants/ATTR_FILTER_TT_con/ATTR_FILTER_TT
					symbol external misc NOTINCONTEXT_PE --> /main/template/constants/NOTINCONTEXT_PE_con/NOTINCONTEXT_PE
					symbol external misc plug_00262 --> /main/template/variables/pronoun__word_var/pronoun__word
					symbol external misc plug_00263 --> /main/template/variables/pronoun__obj_var/pronoun__obj
					symbol external misc plug_00244 --> /main/template/variables/pronoun_obj_var/pronoun_obj
					symbol external misc ITGONE_PE --> /main/template/constants/ITGONE_PE_con/ITGONE_PE
					symbol external misc plug_00213 --> /main/template/variables/etype_var/etype
					local i K_unchecked
					local w K_unchecked
					local e K_unchecked
					code
						inv !store
							reference
								val K_unchecked saved_oops
							val K_unchecked oops_from
						inv !if
							inv !ne
								val K_unchecked scope_token
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked scope_error
									val K_unchecked scope_token
								inv !return
									val K_unchecked ASKSCOPE_PE
						inv !postdecrement
							reference
								val K_unchecked wn
						inv !store
							reference
								val K_unchecked w
							inv NextWord
						inv !store
							reference
								val K_unchecked e
							val K_unchecked CANTSEE_PE
						inv !if
							inv !eq
								val K_unchecked w
								val K_unchecked pronoun_word
							code
								inv !store
									reference
										val K_unchecked w
									inv NextWordStopped
								inv !postdecrement
									reference
										val K_unchecked wn
								inv !if
									inv !or
										inv !eq
											val K_unchecked w
											val K_unchecked -1
										inv !ne
											inv !lookup
												val K_unchecked line_token
												val K_unchecked pcount
											val K_unchecked ENDIT_TOKEN
									code
										inv !if
											inv !gt
												val K_unchecked pcount
												val K_unchecked 0
											code
												inv AnalyseToken
													inv !lookup
														val K_unchecked line_token
														inv !minus
															val K_unchecked pcount
															val K_unchecked 1
										inv !ifelse
											inv !and
												inv !gt
													val K_unchecked pcount
													val K_unchecked 0
												inv !eq
													val K_unchecked found_ttype
													inv !alternative
														val K_unchecked ROUTINE_FILTER_TT
														val K_unchecked ATTR_FILTER_TT
											code
												inv !store
													reference
														val K_unchecked e
													val K_unchecked NOTINCONTEXT_PE
											code
												inv !store
													reference
														val K_unchecked pronoun__word
													val K_unchecked pronoun_word
												inv !store
													reference
														val K_unchecked pronoun__obj
													val K_unchecked pronoun_obj
												inv !store
													reference
														val K_unchecked e
													val K_unchecked ITGONE_PE
						inv !if
							inv !gt
								val K_unchecked etype
								val K_unchecked e
							code
								inv !return
									val K_unchecked etype
						inv !return
							val K_unchecked e
				constant CantSee K_unchecked_function = CantSee_B __assimilated=1
			package MultiAdd_fn _function
				symbol public misc MultiAdd
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MultiAdd_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc plug_00291 --> /main/connectors/plug_00291
					symbol external misc plug_00295 --> /main/template/variables/toomany_flag_var/toomany_flag
					local o K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							inv !lookup
								val K_unchecked multiple_object
								val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked i
								inv !minus
									val K_unchecked plug_00291
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked toomany_flag
									val K_unchecked 1
								inv !return
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 1
							inv !le
								val K_unchecked j
								val K_unchecked i
							inv !postincrement
								reference
									val K_unchecked j
							code
								inv !if
									inv !eq
										val K_unchecked o
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked j
									code
										inv !return
											val K_unchecked 1
						inv !postincrement
							reference
								val K_unchecked i
						inv !store
							reference
								inv !lookup
									val K_unchecked multiple_object
									val K_unchecked i
							val K_unchecked o
						inv !store
							reference
								inv !lookup
									val K_unchecked multiple_object
									val K_unchecked 0
							val K_unchecked i
				constant MultiAdd K_unchecked_function = MultiAdd_B __assimilated=1
			package MultiSub_fn _function
				symbol public misc MultiSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MultiSub_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc VAGUE_PE --> /main/template/constants/VAGUE_PE_con/VAGUE_PE
					local o K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							inv !lookup
								val K_unchecked multiple_object
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 1
							inv !le
								val K_unchecked j
								val K_unchecked i
							inv !postincrement
								reference
									val K_unchecked j
							code
								inv !if
									inv !eq
										val K_unchecked o
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked j
									code
										inv !for
											inv !store
												reference
													val K_unchecked k
												val K_unchecked j
											inv !le
												val K_unchecked k
												val K_unchecked i
											inv !postincrement
												reference
													val K_unchecked k
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked multiple_object
															val K_unchecked k
													inv !lookup
														val K_unchecked multiple_object
														inv !plus
															val K_unchecked k
															val K_unchecked 1
										inv !store
											reference
												inv !lookup
													val K_unchecked multiple_object
													val K_unchecked 0
											inv !predecrement
												reference
													val K_unchecked i
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked VAGUE_PE
				constant MultiSub K_unchecked_function = MultiSub_B __assimilated=1
			package MultiFilter_fn _function
				symbol public misc MultiFilter
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MultiFilter_B _code
					symbol private misc attr
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc o
					symbol private label .MFiltl
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc MultiSub --> /main/template/functions/MultiSub_fn/MultiSub
					local attr K_unchecked
					local i K_unchecked
					local j K_unchecked
					local o K_unchecked
					code
						.MFiltl
						inv !store
							reference
								val K_unchecked i
							inv !lookup
								val K_unchecked multiple_object
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 1
							inv !le
								val K_unchecked j
								val K_unchecked i
							inv !postincrement
								reference
									val K_unchecked j
							code
								inv !store
									reference
										val K_unchecked o
									inv !lookup
										val K_unchecked multiple_object
										val K_unchecked j
								inv !if
									inv !hasnt
										val K_unchecked o
										val K_unchecked attr
									code
										inv MultiSub
											val K_unchecked o
										inv !jump
											lab .MFiltl
				constant MultiFilter K_unchecked_function = MultiFilter_B __assimilated=1
			package PlaceInScope_fn _function
				symbol public misc PlaceInScope
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PlaceInScope_B _code
					symbol private misc O
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc opts
					symbol private misc ws
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00272 --> /main/template/variables/match_from_var/match_from
					symbol external misc DoScopeActionAndRecurse --> /main/template/functions/DoScopeActionAndRecurse_fn/DoScopeActionAndRecurse
					symbol external misc DoScopeAction --> /main/template/functions/DoScopeAction_fn/DoScopeAction
					local O K_unchecked
					local opts K_unchecked
					local ws K_unchecked
					code
						inv !store
							reference
								val K_unchecked ws
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked match_from
						inv !ifelse
							inv !eq
								val K_unchecked opts
								val K_unchecked 0
							code
								inv DoScopeActionAndRecurse
									val K_unchecked O
							code
								inv DoScopeAction
									val K_unchecked O
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked ws
						inv !return
							val K_unchecked 1
				constant PlaceInScope K_unchecked_function = PlaceInScope_B __assimilated=1
			package AddToScope_fn _function
				symbol public misc AddToScope
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AddToScope_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00144 --> /main/template/variables/ats_flag_var/ats_flag
					symbol external misc DoScopeActionAndRecurse --> /main/template/functions/DoScopeActionAndRecurse_fn/DoScopeActionAndRecurse
					symbol external misc HasLightSource --> /main/template/functions/HasLightSource_fn/HasLightSource
					symbol external misc plug_00143 --> /main/template/variables/ats_hls_var/ats_hls
					local obj K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked ats_flag
								val K_unchecked 2
							code
								inv DoScopeActionAndRecurse
									val K_unchecked obj
									val K_unchecked 0
									inv !minus
										val K_unchecked ats_flag
										val K_unchecked 2
						inv !if
							inv !eq
								val K_unchecked ats_flag
								val K_unchecked 1
							code
								inv !if
									inv !eq
										inv HasLightSource
											val K_unchecked obj
										val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked ats_hls
											val K_unchecked 1
				constant AddToScope K_unchecked_function = AddToScope_B __assimilated=1
			package TestScope_fn _function
				symbol public misc TestScope
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestScope_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc act
					symbol private misc a
					symbol private misc al
					symbol private misc sr
					symbol private misc x
					symbol private misc y
					symbol external misc plug_00146 --> /main/template/variables/parser_one_var/parser_one
					symbol external misc plug_00188 --> /main/template/variables/parser_two_var/parser_two
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc plug_00145 --> /main/template/variables/scope_reason_var/scope_reason
					symbol external misc TESTSCOPE_REASON --> /main/template/constants/TESTSCOPE_REASON_con/TESTSCOPE_REASON
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc ScopeCeiling --> /main/template/functions/ScopeCeiling_fn/ScopeCeiling
					symbol external misc SearchScope --> /main/template/functions/SearchScope_fn/SearchScope
					local obj K_unchecked
					local act K_unchecked
					local a K_unchecked
					local al K_unchecked
					local sr K_unchecked
					local x K_unchecked
					local y K_unchecked
					code
						inv !store
							reference
								val K_unchecked x
							val K_unchecked parser_one
						inv !store
							reference
								val K_unchecked y
							val K_unchecked parser_two
						inv !store
							reference
								val K_unchecked parser_one
							val K_unchecked obj
						inv !store
							reference
								val K_unchecked parser_two
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked a
							val K_unchecked actor
						inv !store
							reference
								val K_unchecked al
							val K_unchecked actors_location
						inv !store
							reference
								val K_unchecked sr
							val K_unchecked scope_reason
						inv !store
							reference
								val K_unchecked scope_reason
							val K_unchecked TESTSCOPE_REASON
						inv !ifelse
							inv !eq
								val K_unchecked act
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked actor
									val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked actor
									val K_unchecked act
						inv !store
							reference
								val K_unchecked actors_location
							inv ScopeCeiling
								val K_unchecked actor
						inv SearchScope
							val K_unchecked actors_location
							val K_unchecked actor
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked scope_reason
							val K_unchecked sr
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked a
						inv !store
							reference
								val K_unchecked actors_location
							val K_unchecked al
						inv !store
							reference
								val K_unchecked parser_one
							val K_unchecked x
						inv !store
							reference
								val K_unchecked x
							val K_unchecked parser_two
						inv !store
							reference
								val K_unchecked parser_two
							val K_unchecked y
						inv !return
							val K_unchecked x
				constant TestScope K_unchecked_function = TestScope_B __assimilated=1
			package LoopOverScope_fn _function
				symbol public misc LoopOverScope
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LoopOverScope_B _code
					symbol private misc routine
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc act
					symbol private misc x
					symbol private misc y
					symbol private misc a
					symbol private misc al
					symbol external misc plug_00146 --> /main/template/variables/parser_one_var/parser_one
					symbol external misc plug_00145 --> /main/template/variables/scope_reason_var/scope_reason
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc ScopeCeiling --> /main/template/functions/ScopeCeiling_fn/ScopeCeiling
					symbol external misc LOOPOVERSCOPE_REASON --> /main/template/constants/LOOPOVERSCOPE_REASON_con/LOOPOVERSCOPE_REASON
					symbol external misc SearchScope --> /main/template/functions/SearchScope_fn/SearchScope
					local routine K_unchecked
					local act K_unchecked
					local x K_unchecked
					local y K_unchecked
					local a K_unchecked
					local al K_unchecked
					code
						inv !store
							reference
								val K_unchecked x
							val K_unchecked parser_one
						inv !store
							reference
								val K_unchecked y
							val K_unchecked scope_reason
						inv !store
							reference
								val K_unchecked a
							val K_unchecked actor
						inv !store
							reference
								val K_unchecked al
							val K_unchecked actors_location
						inv !store
							reference
								val K_unchecked parser_one
							val K_unchecked routine
						inv !ifelse
							inv !eq
								val K_unchecked act
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked actor
									val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked actor
									val K_unchecked act
						inv !store
							reference
								val K_unchecked actors_location
							inv ScopeCeiling
								val K_unchecked actor
						inv !store
							reference
								val K_unchecked scope_reason
							val K_unchecked LOOPOVERSCOPE_REASON
						inv SearchScope
							val K_unchecked actors_location
							val K_unchecked actor
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked parser_one
							val K_unchecked x
						inv !store
							reference
								val K_unchecked scope_reason
							val K_unchecked y
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked a
						inv !store
							reference
								val K_unchecked actors_location
							val K_unchecked al
				constant LoopOverScope K_unchecked_function = LoopOverScope_B __assimilated=1
			package SearchScope_fn _function
				symbol public misc SearchScope
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SearchScope_B _code
					symbol private misc domain1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc domain2
					symbol private misc context
					symbol private misc i
					symbol external misc plug_00231 --> /main/template/variables/scope_token_var/scope_token
					symbol external misc plug_00269 --> /main/template/variables/scope_stage_var/scope_stage
					symbol external misc indirect --> /main/veneer/indirect
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc DECIDING_SCOPE_ACT --> /main/template/constants/DECIDING_SCOPE_ACT_con/DECIDING_SCOPE_ACT
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc plug_00145 --> /main/template/variables/scope_reason_var/scope_reason
					symbol external misc PARSING_REASON --> /main/template/constants/PARSING_REASON_con/PARSING_REASON
					symbol external misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
					symbol external misc plug_00251 --> /main/template/variables/advance_warning_var/advance_warning
					symbol external misc IsSeeThrough --> /main/template/functions/IsSeeThrough_fn/IsSeeThrough
					symbol external misc ScopeWithin --> /main/template/functions/ScopeWithin_fn/ScopeWithin
					symbol external misc CREATURE_TOKEN --> /main/template/constants/CREATURE_TOKEN_con/CREATURE_TOKEN
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc Compass --> /main/template/constants/Compass_con/Compass
					symbol external misc supporter --> /main/template/properties/supporter_prop/supporter
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc DoScopeAction --> /main/template/functions/DoScopeAction_fn/DoScopeAction
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					symbol external misc DoScopeActionAndRecurse --> /main/template/functions/DoScopeActionAndRecurse_fn/DoScopeActionAndRecurse
					symbol external misc parent --> /main/veneer/parent
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					local domain1 K_unchecked
					local domain2 K_unchecked
					local context K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked domain1
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							val K_unchecked scope_token
							code
								inv !store
									reference
										val K_unchecked scope_stage
									val K_unchecked 2
								inv !if
									inv !ne
										inv indirect
											val K_unchecked scope_token
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 1
						inv BeginActivity
							val K_unchecked DECIDING_SCOPE_ACT
							val K_unchecked actor
						inv !if
							inv !eq
								inv ForActivity
									val K_unchecked DECIDING_SCOPE_ACT
									val K_unchecked actor
								val K_unchecked 0
							code
								inv !ifelse
									inv !and
										inv !and
											inv !eq
												val K_unchecked scope_reason
												val K_unchecked PARSING_REASON
											inv !eq
												val K_unchecked context
												val K_unchecked MULTIINSIDE_TOKEN
										inv !ne
											val K_unchecked advance_warning
											val K_unchecked -1
									code
										inv !if
											inv !eq
												inv IsSeeThrough
													val K_unchecked advance_warning
												val K_unchecked 1
											code
												inv ScopeWithin
													val K_unchecked advance_warning
													val K_unchecked 0
													val K_unchecked context
									code
										inv !if
											inv !and
												inv !and
													inv !and
														inv !eq
															val K_unchecked scope_reason
															val K_unchecked PARSING_REASON
														inv !ne
															val K_unchecked context
															val K_unchecked CREATURE_TOKEN
													inv !eq
														val K_unchecked indef_mode
														val K_unchecked 0
												inv !eq
													val K_unchecked domain1
													val K_unchecked actors_location
											code
												inv ScopeWithin
													val K_unchecked Compass
										inv !if
											inv !has
												val K_unchecked domain1
												inv !alternative
													val K_unchecked supporter
													val K_unchecked container
											code
												inv DoScopeAction
													val K_unchecked domain1
										inv ScopeWithin
											val K_unchecked domain1
											val K_unchecked domain2
											val K_unchecked context
										inv !if
											val K_unchecked domain2
											code
												inv !if
													inv !has
														val K_unchecked domain2
														inv !alternative
															val K_unchecked supporter
															val K_unchecked container
													code
														inv DoScopeAction
															val K_unchecked domain2
												inv ScopeWithin
													val K_unchecked domain2
													val K_unchecked 0
													val K_unchecked context
								inv !if
									inv !eq
										val K_unchecked thedark
										inv !alternative
											val K_unchecked domain1
											val K_unchecked domain2
									code
										inv DoScopeActionAndRecurse
											val K_unchecked actor
											val K_unchecked actor
											val K_unchecked context
										inv !if
											inv !has
												inv parent
													val K_unchecked actor
												inv !alternative
													val K_unchecked supporter
													val K_unchecked container
											code
												inv DoScopeActionAndRecurse
													inv parent
														val K_unchecked actor
													inv parent
														val K_unchecked actor
													val K_unchecked context
						inv EndActivity
							val K_unchecked DECIDING_SCOPE_ACT
							val K_unchecked actor
				constant SearchScope K_unchecked_function = SearchScope_B __assimilated=1
			package ScopeWithin_fn _function
				symbol public misc ScopeWithin
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScopeWithin_B _code
					symbol private misc domain
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc nosearch
					symbol private misc context
					symbol private misc obj
					symbol private misc next_obj
					symbol external misc child --> /main/veneer/child
					symbol external misc sibling --> /main/veneer/sibling
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc TestConcealment --> /main/template/functions/TestConcealment_fn/TestConcealment
					symbol external misc DoScopeActionAndRecurse --> /main/template/functions/DoScopeActionAndRecurse_fn/DoScopeActionAndRecurse
					local domain K_unchecked
					local nosearch K_unchecked
					local context K_unchecked
					local obj K_unchecked
					local next_obj K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked domain
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked obj
							inv child
								val K_unchecked domain
						inv !while
							val K_unchecked obj
							code
								inv !store
									reference
										val K_unchecked next_obj
									inv sibling
										val K_unchecked obj
								inv !if
									inv !or
										inv !eq
											val K_unchecked domain
											val K_unchecked actor
										inv !eq
											inv TestConcealment
												val K_unchecked domain
												val K_unchecked obj
											val K_unchecked 0
									code
										inv DoScopeActionAndRecurse
											val K_unchecked obj
											val K_unchecked nosearch
											val K_unchecked context
								inv !store
									reference
										val K_unchecked obj
									val K_unchecked next_obj
				constant ScopeWithin K_unchecked_function = ScopeWithin_B __assimilated=1
			package DoScopeActionAndRecurse_fn _function
				symbol public misc DoScopeActionAndRecurse
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DoScopeActionAndRecurse_B _code
					symbol private misc domain
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc nosearch
					symbol private misc context
					symbol private misc i
					symbol private misc ad
					symbol private misc n
					symbol private misc obj
					symbol private misc next_obj
					symbol external misc DoScopeAction --> /main/template/functions/DoScopeAction_fn/DoScopeAction
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00296 --> /main/connectors/plug_00296
					symbol external misc IsSeeThrough --> /main/template/functions/IsSeeThrough_fn/IsSeeThrough
					symbol external misc child --> /main/veneer/child
					symbol external misc sibling --> /main/veneer/sibling
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc TestConcealment --> /main/template/functions/TestConcealment_fn/TestConcealment
					symbol external misc DoScopeActionAndRecurse --> /main/template/functions/DoScopeActionAndRecurse_fn/DoScopeActionAndRecurse
					symbol external misc component_child --> /main/template/properties/component_child_prop/component_child
					symbol external misc component_sibling --> /main/template/properties/component_sibling_prop/component_sibling
					symbol external misc add_to_scope --> /main/template/properties/add_to_scope_prop/add_to_scope
					symbol external misc plug_00144 --> /main/template/variables/ats_flag_var/ats_flag
					symbol external misc RunRoutines --> /main/template/functions/RunRoutines_fn/RunRoutines
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local domain K_unchecked
					local nosearch K_unchecked
					local context K_unchecked
					local i K_unchecked
					local ad K_unchecked
					local n K_unchecked
					local obj K_unchecked
					local next_obj K_unchecked
					code
						inv DoScopeAction
							val K_unchecked domain
						inv !if
							inv !and
								inv !ne
									val K_unchecked domain
									val K_unchecked nosearch
								inv !or
									inv !ofclass
										val K_unchecked domain
										inv !alternative
											val K_unchecked plug_00137
											val K_unchecked plug_00296
									inv !eq
										inv IsSeeThrough
											val K_unchecked domain
										val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked obj
									inv child
										val K_unchecked domain
								inv !while
									val K_unchecked obj
									code
										inv !store
											reference
												val K_unchecked next_obj
											inv sibling
												val K_unchecked obj
										inv !if
											inv !or
												inv !eq
													val K_unchecked domain
													val K_unchecked actor
												inv !eq
													inv TestConcealment
														val K_unchecked domain
														val K_unchecked obj
													val K_unchecked 0
											code
												inv DoScopeActionAndRecurse
													val K_unchecked obj
													val K_unchecked nosearch
													val K_unchecked context
										inv !store
											reference
												val K_unchecked obj
											val K_unchecked next_obj
						inv !if
							inv !provides
								val K_unchecked domain
								val K_unchecked component_child
							code
								inv !store
									reference
										val K_unchecked obj
									inv !propertyvalue
										val K_unchecked domain
										val K_unchecked component_child
								inv !while
									val K_unchecked obj
									code
										inv !store
											reference
												val K_unchecked next_obj
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_sibling
										inv !if
											inv !or
												inv !eq
													val K_unchecked domain
													val K_unchecked actor
												inv !eq
													inv TestConcealment
														val K_unchecked domain
														val K_unchecked obj
													val K_unchecked 0
											code
												inv DoScopeActionAndRecurse
													val K_unchecked obj
													val K_unchecked 0
													val K_unchecked context
										inv !store
											reference
												val K_unchecked obj
											val K_unchecked next_obj
						inv !store
							reference
								val K_unchecked ad
							inv !propertyaddress
								val K_unchecked domain
								val K_unchecked add_to_scope
						inv !if
							inv !ne
								val K_unchecked ad
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked i
									inv !ne
										inv !lookupbyte
											inv !lookup
												val K_unchecked ad
												val K_unchecked 0
											val K_unchecked 0
										val K_unchecked 112
								inv !ifelse
									val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked ats_flag
											inv !plus
												val K_unchecked 2
												val K_unchecked context
										inv RunRoutines
											val K_unchecked domain
											val K_unchecked add_to_scope
										inv !store
											reference
												val K_unchecked ats_flag
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked n
											inv !propertylength
												val K_unchecked domain
												val K_unchecked add_to_scope
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												inv !times
													val K_unchecked plug_00139
													val K_unchecked i
												val K_unchecked n
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !if
													inv !lookup
														val K_unchecked ad
														val K_unchecked i
													code
														inv DoScopeActionAndRecurse
															inv !lookup
																val K_unchecked ad
																val K_unchecked i
															val K_unchecked 0
															val K_unchecked context
				constant DoScopeActionAndRecurse K_unchecked_function = DoScopeActionAndRecurse_B __assimilated=1
			package DoScopeAction_fn _function
				symbol public misc DoScopeAction
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DoScopeAction_B _code
					symbol private misc item
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00146 --> /main/template/variables/parser_one_var/parser_one
					symbol external misc plug_00145 --> /main/template/variables/scope_reason_var/scope_reason
					symbol external misc TESTSCOPE_REASON --> /main/template/constants/TESTSCOPE_REASON_con/TESTSCOPE_REASON
					symbol external misc plug_00188 --> /main/template/variables/parser_two_var/parser_two
					symbol external misc LOOPOVERSCOPE_REASON --> /main/template/constants/LOOPOVERSCOPE_REASON_con/LOOPOVERSCOPE_REASON
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc indirect --> /main/veneer/indirect
					symbol external misc PARSING_REASON --> /main/template/constants/PARSING_REASON_con/PARSING_REASON
					symbol external misc TALKING_REASON --> /main/template/constants/TALKING_REASON_con/TALKING_REASON
					symbol external misc MatchTextAgainstObject --> /main/template/functions/MatchTextAgainstObject_fn/MatchTextAgainstObject
					local item K_unchecked
					code
						inv !push
							val K_unchecked parser_one
						inv !push
							val K_unchecked scope_reason
						inv !switch
							val K_unchecked scope_reason
							code
								inv !case
									val K_unchecked TESTSCOPE_REASON
									code
										inv !if
											inv !eq
												val K_unchecked item
												val K_unchecked parser_one
											code
												inv !store
													reference
														val K_unchecked parser_two
													val K_unchecked 1
								inv !case
									val K_unchecked LOOPOVERSCOPE_REASON
									code
										inv !if
											inv !ofclass
												val K_unchecked parser_one
												val K_unchecked Routine
											code
												inv indirect
													val K_unchecked parser_one
													val K_unchecked item
								inv !case
									inv !alternativecase
										val K_unchecked PARSING_REASON
										val K_unchecked TALKING_REASON
									code
										inv MatchTextAgainstObject
											val K_unchecked item
						inv !pull
							reference
								val K_unchecked scope_reason
						inv !pull
							reference
								val K_unchecked parser_one
				constant DoScopeAction K_unchecked_function = DoScopeAction_B __assimilated=1
			package MatchTextAgainstObject_fn _function
				symbol public misc MatchTextAgainstObject
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MatchTextAgainstObject_B _code
					symbol private misc item
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol external misc plug_00237 --> /main/template/variables/token_filter_var/token_filter
					symbol external misc ConsultNounFilterToken --> /main/template/functions/ConsultNounFilterToken_fn/ConsultNounFilterToken
					symbol external misc plug_00272 --> /main/template/variables/match_from_var/match_from
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NounWord --> /main/template/functions/NounWord_fn/NounWord
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc MakeMatch --> /main/template/functions/MakeMatch_fn/MakeMatch
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					symbol external misc TryGivenObject --> /main/template/functions/TryGivenObject_fn/TryGivenObject
					symbol external misc plug_00289 --> /main/template/variables/indef_nspec_at_var/indef_nspec_at
					symbol external misc ResetDescriptors --> /main/template/functions/ResetDescriptors_fn/ResetDescriptors
					local item K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !and
								inv !ne
									val K_unchecked token_filter
									val K_unchecked 0
								inv !eq
									inv ConsultNounFilterToken
										val K_unchecked item
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !le
								val K_unchecked match_from
								val K_unchecked num_words
							code
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked match_from
								inv !store
									reference
										val K_unchecked i
									inv NounWord
								inv !if
									inv !and
										inv !eq
											val K_unchecked i
											val K_unchecked 1
										inv !eq
											val K_unchecked player
											val K_unchecked item
									code
										inv MakeMatch
											val K_unchecked item
											val K_unchecked 1
								inv !if
									inv !and
										inv !and
											inv !ge
												val K_unchecked i
												val K_unchecked 2
											inv !lt
												val K_unchecked i
												val K_unchecked 128
										inv !eq
											inv !lookup
												val K_unchecked LanguagePronouns
												val K_unchecked i
											val K_unchecked item
									code
										inv MakeMatch
											val K_unchecked item
											val K_unchecked 1
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked match_from
						inv !if
							inv !gt
								inv TryGivenObject
									val K_unchecked item
								val K_unchecked 0
							code
								inv !if
									inv !and
										inv !gt
											val K_unchecked indef_nspec_at
											val K_unchecked 0
										inv !ne
											val K_unchecked match_from
											val K_unchecked indef_nspec_at
									code
										inv !store
											reference
												val K_unchecked wn
											val K_unchecked indef_nspec_at
										inv !if
											inv !gt
												inv TryGivenObject
													val K_unchecked item
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked match_from
													val K_unchecked indef_nspec_at
												inv ResetDescriptors
										inv !store
											reference
												val K_unchecked wn
											val K_unchecked match_from
				constant MatchTextAgainstObject K_unchecked_function = MatchTextAgainstObject_B __assimilated=1
			package TryGivenObject_fn _function
				symbol public misc TryGivenObject
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TryGivenObject_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc nomatch
					symbol private misc threshold
					symbol private misc k
					symbol private misc w
					symbol private misc j
					symbol external misc plug_00297 --> /main/template/variables/dict_flags_of_noun_var/dict_flags_of_noun
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc MakeMatch --> /main/template/functions/MakeMatch_fn/MakeMatch
					symbol external misc parse_name --> /main/template/properties/parse_name_prop/parse_name
					symbol external misc plug_00294 --> /main/template/variables/parser_action_var/parser_action
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RunRoutines --> /main/template/functions/RunRoutines_fn/RunRoutines
					symbol private label .MMbyPN
					symbol external misc ##PluralFound --> /main/template/constants/##PluralFound_con/##PluralFound
					symbol external misc plug_00282 --> /main/template/variables/allow_plurals_var/allow_plurals
					symbol external misc plug_00285 --> /main/template/variables/indef_type_var/indef_type
					symbol external misc plug_00283 --> /main/template/variables/indef_wanted_var/indef_wanted
					symbol external misc PLURAL_BIT --> /main/template/constants/PLURAL_BIT_con/PLURAL_BIT
					symbol external misc INDEF_ALL_WANTED --> /main/template/constants/INDEF_ALL_WANTED_con/INDEF_ALL_WANTED
					symbol private label .NoWordsMatch
					symbol external misc NounWord --> /main/template/functions/NounWord_fn/NounWord
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					symbol external misc Refers --> /main/template/functions/Refers_fn/Refers
					symbol external misc #dict_par1 --> /main/veneer/#dict_par1
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					local obj K_unchecked
					local nomatch K_unchecked
					local threshold K_unchecked
					local k K_unchecked
					local w K_unchecked
					local j K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked nomatch
								inv !eq
									val K_unchecked obj
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked dict_flags_of_noun
							val K_unchecked 0
						inv !if
							inv !gt
								val K_unchecked wn
								val K_unchecked num_words
							code
								inv !if
									val K_unchecked nomatch
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !ne
										val K_unchecked indef_mode
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked dict_flags_of_noun
											val K_unchecked 112
								inv MakeMatch
									val K_unchecked obj
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !if
							inv !ne
								inv !propertyvalue
									val K_unchecked obj
									val K_unchecked parse_name
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked parser_action
									val K_unchecked plug_00232
								inv !store
									reference
										val K_unchecked j
									val K_unchecked wn
								inv !store
									reference
										val K_unchecked k
									inv RunRoutines
										val K_unchecked obj
										val K_unchecked parse_name
								inv !if
									inv !gt
										val K_unchecked k
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked wn
											inv !plus
												val K_unchecked j
												val K_unchecked k
										.MMbyPN
										inv !if
											inv !eq
												val K_unchecked parser_action
												val K_unchecked ##PluralFound
											code
												inv !store
													reference
														val K_unchecked dict_flags_of_noun
													inv !bitwiseor
														val K_unchecked dict_flags_of_noun
														val K_unchecked 4
										inv !if
											inv !bitwiseand
												val K_unchecked dict_flags_of_noun
												val K_unchecked 4
											code
												inv !ifelse
													inv !not
														val K_unchecked allow_plurals
													code
														inv !store
															reference
																val K_unchecked k
															val K_unchecked 0
													code
														inv !if
															inv !eq
																val K_unchecked indef_mode
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked indef_mode
																	val K_unchecked 1
																inv !store
																	reference
																		val K_unchecked indef_type
																	val K_unchecked 0
																inv !store
																	reference
																		val K_unchecked indef_wanted
																	val K_unchecked 0
														inv !store
															reference
																val K_unchecked indef_type
															inv !bitwiseor
																val K_unchecked indef_type
																val K_unchecked PLURAL_BIT
														inv !if
															inv !eq
																val K_unchecked indef_wanted
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked indef_wanted
																	val K_unchecked INDEF_ALL_WANTED
										inv !if
											inv !eq
												val K_unchecked nomatch
												val K_unchecked 0
											code
												inv MakeMatch
													val K_unchecked obj
													val K_unchecked k
										inv !return
											val K_unchecked k
								inv !if
									inv !eq
										val K_unchecked k
										val K_unchecked 0
									code
										inv !jump
											lab .NoWordsMatch
						inv !store
							reference
								val K_unchecked parser_action
							val K_unchecked plug_00232
						inv !store
							reference
								val K_unchecked w
							inv NounWord
						inv !if
							inv !and
								inv !eq
									val K_unchecked w
									val K_unchecked 1
								inv !eq
									val K_unchecked player
									val K_unchecked obj
							code
								inv !store
									reference
										val K_unchecked k
									val K_unchecked 1
								inv !jump
									lab .MMbyPN
						inv !if
							inv !and
								inv !and
									inv !ge
										val K_unchecked w
										val K_unchecked 2
									inv !lt
										val K_unchecked w
										val K_unchecked 128
								inv !eq
									inv !lookup
										val K_unchecked LanguagePronouns
										val K_unchecked w
									val K_unchecked obj
							code
								inv !store
									reference
										val K_unchecked k
									val K_unchecked 1
								inv !jump
									lab .MMbyPN
						inv !if
							inv !eq
								inv Refers
									val K_unchecked obj
									inv !minus
										val K_unchecked wn
										val K_unchecked 1
								val K_unchecked 0
							code
								.NoWordsMatch
								inv !if
									inv !ne
										val K_unchecked indef_mode
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked k
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked parser_action
											val K_unchecked plug_00232
										inv !jump
											lab .MMbyPN
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked threshold
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked dict_flags_of_noun
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked w
									val K_unchecked #dict_par1
								val K_unchecked 116
						inv !store
							reference
								val K_unchecked w
							inv NextWord
						inv !while
							inv Refers
								val K_unchecked obj
								inv !minus
									val K_unchecked wn
									val K_unchecked 1
							code
								inv !postincrement
									reference
										val K_unchecked threshold
								inv !if
									val K_unchecked w
									code
										inv !store
											reference
												val K_unchecked dict_flags_of_noun
											inv !bitwiseor
												val K_unchecked dict_flags_of_noun
												inv !bitwiseand
													inv !lookupbyte
														val K_unchecked w
														val K_unchecked #dict_par1
													val K_unchecked 116
								inv !store
									reference
										val K_unchecked w
									inv NextWord
						inv !store
							reference
								val K_unchecked k
							val K_unchecked threshold
						inv !jump
							lab .MMbyPN
				constant TryGivenObject K_unchecked_function = TryGivenObject_B __assimilated=1
			package Refers_fn _function
				symbol public misc Refers
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Refers_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc wnum
					symbol private misc wd
					symbol private misc k
					symbol private misc l
					symbol private misc m
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc plug_00228 --> /main/template/variables/parser_inflection_var/parser_inflection
					symbol external misc indirect --> /main/veneer/indirect
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local obj K_unchecked
					local wnum K_unchecked
					local wd K_unchecked
					local k K_unchecked
					local l K_unchecked
					local m K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked k
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked wnum
						inv !store
							reference
								val K_unchecked wd
							inv NextWordStopped
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked k
						inv !ifelse
							inv !ge
								val K_unchecked parser_inflection
								val K_unchecked 256
							code
								inv !store
									reference
										val K_unchecked k
									inv indirect
										val K_unchecked parser_inflection
										val K_unchecked obj
										val K_unchecked wd
								inv !if
									inv !ge
										val K_unchecked k
										val K_unchecked 0
									code
										inv !return
											val K_unchecked k
								inv !store
									reference
										val K_unchecked m
									inv !unaryminus
										val K_unchecked k
							code
								inv !store
									reference
										val K_unchecked m
									val K_unchecked parser_inflection
						inv !store
							reference
								val K_unchecked k
							inv !propertyaddress
								val K_unchecked obj
								val K_unchecked m
						inv !store
							reference
								val K_unchecked l
							inv !minus
								inv !divide
									inv !propertylength
										val K_unchecked obj
										val K_unchecked m
									val K_unchecked plug_00139
								val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked m
								val K_unchecked 0
							inv !le
								val K_unchecked m
								val K_unchecked l
							inv !postincrement
								reference
									val K_unchecked m
							code
								inv !if
									inv !eq
										val K_unchecked wd
										inv !lookup
											val K_unchecked k
											val K_unchecked m
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant Refers K_unchecked_function = Refers_B __assimilated=1
			package WordInProperty_fn _function
				symbol public misc WordInProperty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WordInProperty_B _code
					symbol private misc wd
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj
					symbol private misc prop
					symbol private misc k
					symbol private misc l
					symbol private misc m
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local wd K_unchecked
					local obj K_unchecked
					local prop K_unchecked
					local k K_unchecked
					local l K_unchecked
					local m K_unchecked
					code
						inv !store
							reference
								val K_unchecked k
							inv !propertyaddress
								val K_unchecked obj
								val K_unchecked prop
						inv !store
							reference
								val K_unchecked l
							inv !minus
								inv !divide
									inv !propertylength
										val K_unchecked obj
										val K_unchecked prop
									val K_unchecked plug_00139
								val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked m
								val K_unchecked 0
							inv !le
								val K_unchecked m
								val K_unchecked l
							inv !postincrement
								reference
									val K_unchecked m
							code
								inv !if
									inv !eq
										val K_unchecked wd
										inv !lookup
											val K_unchecked k
											val K_unchecked m
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant WordInProperty K_unchecked_function = WordInProperty_B __assimilated=1
			package NounWord_fn _function
				symbol public misc NounWord
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NounWord_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc j
					symbol private misc s
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					symbol external misc ME1__WD --> /main/template/constants/ME1__WD_con/ME1__WD
					symbol external misc ME2__WD --> /main/template/constants/ME2__WD_con/ME2__WD
					symbol external misc ME3__WD --> /main/template/constants/ME3__WD_con/ME3__WD
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					symbol external misc #dict_par1 --> /main/veneer/#dict_par1
					local i K_unchecked
					local j K_unchecked
					local s K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							inv NextWord
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked i
								inv !alternative
									inv !alternative
										val K_unchecked ME1__WD
										val K_unchecked ME2__WD
									val K_unchecked ME3__WD
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked s
							inv !lookup
								val K_unchecked LanguagePronouns
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 1
							inv !le
								val K_unchecked j
								val K_unchecked s
							inv !store
								reference
									val K_unchecked j
								inv !plus
									val K_unchecked j
									val K_unchecked 3
							code
								inv !if
									inv !eq
										val K_unchecked i
										inv !lookup
											val K_unchecked LanguagePronouns
											val K_unchecked j
									code
										inv !return
											inv !plus
												val K_unchecked j
												val K_unchecked 2
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookupbyte
										val K_unchecked i
										val K_unchecked #dict_par1
									val K_unchecked 128
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked i
				constant NounWord K_unchecked_function = NounWord_B __assimilated=1
			package TryNumber_fn _function
				symbol public misc TryNumber
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TryNumber_B _code
					symbol private misc wordnum
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc c
					symbol private misc num
					symbol private misc len
					symbol private misc mul
					symbol private misc tot
					symbol private misc d
					symbol private misc digit
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWord --> /main/template/functions/NextWord_fn/NextWord
					symbol external misc NumberWord --> /main/template/functions/NumberWord_fn/NumberWord
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol private label .digok
					local wordnum K_unchecked
					local i K_unchecked
					local j K_unchecked
					local c K_unchecked
					local num K_unchecked
					local len K_unchecked
					local mul K_unchecked
					local tot K_unchecked
					local d K_unchecked
					local digit K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked wordnum
						inv !store
							reference
								val K_unchecked j
							inv NextWord
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked i
						inv !store
							reference
								val K_unchecked j
							inv NumberWord
								val K_unchecked j
						inv !if
							inv !ge
								val K_unchecked j
								val K_unchecked 1
							code
								inv !return
									val K_unchecked j
						inv !store
							reference
								val K_unchecked i
							inv !times
								val K_unchecked wordnum
								val K_unchecked 3
						inv !store
							reference
								val K_unchecked j
							inv !lookup
								val K_unchecked parse
								val K_unchecked i
						inv !store
							reference
								val K_unchecked num
							inv !plus
								val K_unchecked j
								val K_unchecked buffer
						inv !store
							reference
								val K_unchecked len
							inv !lookup
								val K_unchecked parse
								inv !minus
									val K_unchecked i
									val K_unchecked 1
						inv !if
							inv !ge
								val K_unchecked len
								val K_unchecked 4
							code
								inv !store
									reference
										val K_unchecked mul
									val K_unchecked 1000
						inv !if
							inv !eq
								val K_unchecked len
								val K_unchecked 3
							code
								inv !store
									reference
										val K_unchecked mul
									val K_unchecked 100
						inv !if
							inv !eq
								val K_unchecked len
								val K_unchecked 2
							code
								inv !store
									reference
										val K_unchecked mul
									val K_unchecked 10
						inv !if
							inv !eq
								val K_unchecked len
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked mul
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked tot
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked c
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked len
							inv !minus
								val K_unchecked len
								val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked c
								val K_unchecked 0
							inv !le
								val K_unchecked c
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked c
							code
								inv !store
									reference
										val K_unchecked digit
									inv !lookupbyte
										val K_unchecked num
										val K_unchecked c
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 48
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 0
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 49
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 1
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 50
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 2
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 51
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 3
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 52
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 4
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 53
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 5
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 54
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 6
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 55
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 7
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 56
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 8
										inv !jump
											lab .digok
								inv !if
									inv !eq
										val K_unchecked digit
										val K_unchecked 57
									code
										inv !store
											reference
												val K_unchecked d
											val K_unchecked 9
										inv !jump
											lab .digok
								inv !return
									inv !unaryminus
										val K_unchecked 1000
								.digok
								inv !store
									reference
										val K_unchecked tot
									inv !plus
										val K_unchecked tot
										inv !times
											val K_unchecked mul
											val K_unchecked d
								inv !store
									reference
										val K_unchecked mul
									inv !divide
										val K_unchecked mul
										val K_unchecked 10
						inv !if
							inv !gt
								val K_unchecked len
								val K_unchecked 3
							code
								inv !store
									reference
										val K_unchecked tot
									val K_unchecked 10000
						inv !return
							val K_unchecked tot
				constant TryNumber K_unchecked_function = TryNumber_B __assimilated=1
			package GetGender_fn _function
				symbol public misc GetGender
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GetGender_B _code
					symbol private misc person
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc female --> /main/template/properties/female_prop/female
					local person K_unchecked
					code
						inv !if
							inv !hasnt
								val K_unchecked person
								val K_unchecked female
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant GetGender K_unchecked_function = GetGender_B __assimilated=1
			package GetGNAOfObject_fn _function
				symbol public misc GetGNAOfObject
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GetGNAOfObject_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc case
					symbol private misc gender
					symbol external misc animate --> /main/template/properties/animate_prop/animate
					symbol external misc male --> /main/template/properties/male_prop/male
					symbol external misc female --> /main/template/properties/female_prop/female
					symbol external misc neuter --> /main/template/properties/neuter_prop/neuter
					symbol external misc LanguageAnimateGender --> /main/template/constants/LanguageAnimateGender_con/LanguageAnimateGender
					symbol external misc LanguageInanimateGender --> /main/template/constants/LanguageInanimateGender_con/LanguageInanimateGender
					symbol external misc pluralname --> /main/template/properties/pluralname_prop/pluralname
					local obj K_unchecked
					local case K_unchecked
					local gender K_unchecked
					code
						inv !if
							inv !hasnt
								val K_unchecked obj
								val K_unchecked animate
							code
								inv !store
									reference
										val K_unchecked case
									val K_unchecked 6
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked male
							code
								inv !store
									reference
										val K_unchecked gender
									val K_unchecked male
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked female
							code
								inv !store
									reference
										val K_unchecked gender
									val K_unchecked female
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked neuter
							code
								inv !store
									reference
										val K_unchecked gender
									val K_unchecked neuter
						inv !if
							inv !eq
								val K_unchecked gender
								val K_unchecked 0
							code
								inv !ifelse
									inv !eq
										val K_unchecked case
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked gender
											val K_unchecked LanguageAnimateGender
									code
										inv !store
											reference
												val K_unchecked gender
											val K_unchecked LanguageInanimateGender
						inv !if
							inv !eq
								val K_unchecked gender
								val K_unchecked female
							code
								inv !store
									reference
										val K_unchecked case
									inv !plus
										val K_unchecked case
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked gender
								val K_unchecked neuter
							code
								inv !store
									reference
										val K_unchecked case
									inv !plus
										val K_unchecked case
										val K_unchecked 2
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked pluralname
							code
								inv !store
									reference
										val K_unchecked case
									inv !plus
										val K_unchecked case
										val K_unchecked 3
						inv !return
							val K_unchecked case
				constant GetGNAOfObject K_unchecked_function = GetGNAOfObject_B __assimilated=1
			package DetectPluralWord_fn _function
				symbol public misc DetectPluralWord
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DetectPluralWord_B _code
					symbol private misc at
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol private misc i
					symbol private misc w
					symbol private misc swn
					symbol private misc outcome
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
					symbol external misc comma_word --> /main/template/constants/comma_word_con/comma_word
					symbol external misc #dict_par1 --> /main/veneer/#dict_par1
					symbol external misc plug_00294 --> /main/template/variables/parser_action_var/parser_action
					symbol external misc ##PluralFound --> /main/template/constants/##PluralFound_con/##PluralFound
					local at K_unchecked
					local n K_unchecked
					local i K_unchecked
					local w K_unchecked
					local swn K_unchecked
					local outcome K_unchecked
					code
						inv !store
							reference
								val K_unchecked swn
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked at
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked n
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked w
									inv NextWordStopped
								inv !if
									inv !eq
										val K_unchecked w
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked 0
													val K_unchecked THEN1__WD
												val K_unchecked comma_word
											val K_unchecked -1
									code
										inv !break
								inv !if
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked w
											val K_unchecked #dict_par1
										val K_unchecked 4
									code
										inv !store
											reference
												val K_unchecked parser_action
											val K_unchecked ##PluralFound
										inv !store
											reference
												val K_unchecked outcome
											val K_unchecked 1
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked swn
						inv !return
							val K_unchecked outcome
				constant DetectPluralWord K_unchecked_function = DetectPluralWord_B __assimilated=1
			package SetPronoun_fn _function
				symbol public misc SetPronoun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetPronoun_B _code
					symbol private misc dword
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc value
					symbol private misc x
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					symbol external misc RunTimeError --> /main/template/functions/RunTimeError_fn/RunTimeError
					local dword K_unchecked
					local value K_unchecked
					local x K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked x
								val K_unchecked 1
							inv !le
								val K_unchecked x
								inv !lookup
									val K_unchecked LanguagePronouns
									val K_unchecked 0
							inv !store
								reference
									val K_unchecked x
								inv !plus
									val K_unchecked x
									val K_unchecked 3
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked LanguagePronouns
											val K_unchecked x
										val K_unchecked dword
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked LanguagePronouns
													inv !plus
														val K_unchecked x
														val K_unchecked 2
											val K_unchecked value
										inv !return
											val K_unchecked 1
						inv RunTimeError
							val K_unchecked 14
				constant SetPronoun K_unchecked_function = SetPronoun_B __assimilated=1
			package PronounValue_fn _function
				symbol public misc PronounValue
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PronounValue_B _code
					symbol private misc dword
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					local dword K_unchecked
					local x K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked x
								val K_unchecked 1
							inv !le
								val K_unchecked x
								inv !lookup
									val K_unchecked LanguagePronouns
									val K_unchecked 0
							inv !store
								reference
									val K_unchecked x
								inv !plus
									val K_unchecked x
									val K_unchecked 3
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked LanguagePronouns
											val K_unchecked x
										val K_unchecked dword
									code
										inv !return
											inv !lookup
												val K_unchecked LanguagePronouns
												inv !plus
													val K_unchecked x
													val K_unchecked 2
						inv !return
							val K_unchecked 0
				constant PronounValue K_unchecked_function = PronounValue_B __assimilated=1
			package ResetVagueWords_fn _function
				symbol public misc ResetVagueWords
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ResetVagueWords_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc PronounNotice --> /main/template/functions/PronounNotice_fn/PronounNotice
					local obj K_unchecked
					code
						inv PronounNotice
							val K_unchecked obj
				constant ResetVagueWords K_unchecked_function = ResetVagueWords_B __assimilated=1
			package PronounNotice_fn _function
				symbol public misc PronounNotice
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PronounNotice_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol private misc bm
					symbol private misc g
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc GetGNAOfObject --> /main/template/functions/GetGNAOfObject_fn/GetGNAOfObject
					symbol external misc PowersOfTwo_TB --> /main/template/arrays/PowersOfTwo_TB_arr/PowersOfTwo_TB
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					symbol external misc ambigpluralname --> /main/template/properties/ambigpluralname_prop/ambigpluralname
					local obj K_unchecked
					local x K_unchecked
					local bm K_unchecked
					local g K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked player
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked g
							inv GetGNAOfObject
								val K_unchecked obj
						inv !store
							reference
								val K_unchecked bm
							inv !lookup
								val K_unchecked PowersOfTwo_TB
								val K_unchecked g
						inv !for
							inv !store
								reference
									val K_unchecked x
								val K_unchecked 1
							inv !le
								val K_unchecked x
								inv !lookup
									val K_unchecked LanguagePronouns
									val K_unchecked 0
							inv !store
								reference
									val K_unchecked x
								inv !plus
									val K_unchecked x
									val K_unchecked 3
							code
								inv !if
									inv !ne
										inv !bitwiseand
											val K_unchecked bm
											inv !lookup
												val K_unchecked LanguagePronouns
												inv !plus
													val K_unchecked x
													val K_unchecked 1
										val K_unchecked 0
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked LanguagePronouns
													inv !plus
														val K_unchecked x
														val K_unchecked 2
											val K_unchecked obj
						inv !if
							inv !and
								inv !lt
									inv !modulo
										val K_unchecked g
										val K_unchecked 6
									val K_unchecked 3
								inv !has
									val K_unchecked obj
									val K_unchecked ambigpluralname
							code
								inv !store
									reference
										val K_unchecked g
									inv !plus
										val K_unchecked g
										val K_unchecked 3
								inv !store
									reference
										val K_unchecked bm
									inv !lookup
										val K_unchecked PowersOfTwo_TB
										val K_unchecked g
								inv !for
									inv !store
										reference
											val K_unchecked x
										val K_unchecked 1
									inv !le
										val K_unchecked x
										inv !lookup
											val K_unchecked LanguagePronouns
											val K_unchecked 0
									inv !store
										reference
											val K_unchecked x
										inv !plus
											val K_unchecked x
											val K_unchecked 3
									code
										inv !if
											inv !ne
												inv !bitwiseand
													val K_unchecked bm
													inv !lookup
														val K_unchecked LanguagePronouns
														inv !plus
															val K_unchecked x
															val K_unchecked 1
												val K_unchecked 0
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked LanguagePronouns
															inv !plus
																val K_unchecked x
																val K_unchecked 2
													val K_unchecked obj
				constant PronounNotice K_unchecked_function = PronounNotice_B __assimilated=1
			package PronounNoticeHeldObjects_fn _function
				symbol public misc PronounNoticeHeldObjects
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PronounNoticeHeldObjects_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00300 --> /main/connectors/plug_00300
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc PronounNotice --> /main/template/functions/PronounNotice_fn/PronounNotice
					local x K_unchecked
					code
						inv !objectloop
							reference
								val K_unchecked x
							val K_unchecked plug_00300
							inv !in
								val K_unchecked x
								val K_unchecked player
							code
								inv PronounNotice
									val K_unchecked x
						inv !store
							reference
								val K_unchecked x
							val K_unchecked 0
						inv !return
							val K_unchecked 0
				constant PronounNoticeHeldObjects K_unchecked_function = PronounNoticeHeldObjects_B __assimilated=1
			package YesOrNo_fn _function
				symbol public misc YesOrNo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package YesOrNo_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc j
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc DrawStatusLine --> /main/template/functions/DrawStatusLine_fn/DrawStatusLine
					symbol external misc KeyboardPrimitive --> /main/template/functions/KeyboardPrimitive_fn/KeyboardPrimitive
					symbol external misc buffer2 --> /main/template/arrays/buffer2_arr/buffer2
					symbol external misc parse2 --> /main/template/arrays/parse2_arr/parse2
					symbol external misc YES1__WD --> /main/template/constants/YES1__WD_con/YES1__WD
					symbol external misc YES2__WD --> /main/template/constants/YES2__WD_con/YES2__WD
					symbol external misc YES3__WD --> /main/template/constants/YES3__WD_con/YES3__WD
					symbol external misc NO1__WD --> /main/template/constants/NO1__WD_con/NO1__WD
					symbol external misc NO2__WD --> /main/template/constants/NO2__WD_con/NO2__WD
					symbol external misc NO3__WD --> /main/template/constants/NO3__WD_con/NO3__WD
					symbol external misc plug_00301 --> /main/connectors/plug_00301
					local i K_unchecked
					local j K_unchecked
					code
						inv !for
							val K_unchecked 1
							val K_unchecked 1
							val K_unchecked 1
							code
								inv !if
									inv !and
										inv !ne
											val K_unchecked location
											val K_unchecked 0
										inv !ne
											inv parent
												val K_unchecked player
											val K_unchecked 0
									code
										inv DrawStatusLine
								inv KeyboardPrimitive
									val K_unchecked buffer2
									val K_unchecked parse2
								inv !store
									reference
										val K_unchecked j
									inv !lookup
										val K_unchecked parse2
										val K_unchecked 0
								inv !if
									val K_unchecked j
									code
										inv !store
											reference
												val K_unchecked i
											inv !lookup
												val K_unchecked parse2
												val K_unchecked 1
										inv !if
											inv !eq
												val K_unchecked i
												inv !alternative
													inv !alternative
														val K_unchecked YES1__WD
														val K_unchecked YES2__WD
													val K_unchecked YES3__WD
											code
												inv !return
													val K_unchecked 1
										inv !if
											inv !eq
												val K_unchecked i
												inv !alternative
													inv !alternative
														val K_unchecked NO1__WD
														val K_unchecked NO2__WD
													val K_unchecked NO3__WD
											code
												inv !return
													val K_unchecked 0
								inv plug_00301
									val K_unchecked 65
								inv !print
									val K_unchecked "> "
				constant YesOrNo K_unchecked_function = YesOrNo_B __assimilated=1
			package YES_OR_NO_QUESTION_INTERNAL_R_fn _function
				symbol public misc YES_OR_NO_QUESTION_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package YES_OR_NO_QUESTION_INTERNAL_R_B _code
					code
				constant YES_OR_NO_QUESTION_INTERNAL_R K_unchecked_function = YES_OR_NO_QUESTION_INTERNAL_R_B __assimilated=1
			package NumberWord_fn _function
				symbol public misc NumberWord
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NumberWord_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc n
					symbol external misc LanguageNumbers --> /main/template/arrays/LanguageNumbers_arr/LanguageNumbers
					local o K_unchecked
					local i K_unchecked
					local n K_unchecked
					code
						inv !store
							reference
								val K_unchecked n
							inv !lookup
								val K_unchecked LanguageNumbers
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked n
							inv !store
								reference
									val K_unchecked i
								inv !plus
									val K_unchecked i
									val K_unchecked 2
							code
								inv !if
									inv !eq
										val K_unchecked o
										inv !lookup
											val K_unchecked LanguageNumbers
											val K_unchecked i
									code
										inv !return
											inv !lookup
												val K_unchecked LanguageNumbers
												inv !plus
													val K_unchecked i
													val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant NumberWord K_unchecked_function = NumberWord_B __assimilated=1
			package COBJ__Copy_fn _function
				symbol public misc COBJ__Copy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COBJ__Copy_B _code
					symbol private misc words
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc bytes
					local words K_unchecked
					local from K_unchecked
					local to K_unchecked
					local bytes K_unchecked
					code
						inv !store
							reference
								val K_unchecked bytes
							inv !times
								val K_unchecked words
								val K_unchecked 2
						inv @copy_table
							val K_unchecked from
							val K_unchecked to
							val K_unchecked bytes
				constant COBJ__Copy K_unchecked_function = COBJ__Copy_B __assimilated=1
			package COBJ__SwapMatches_fn _function
				symbol public misc COBJ__SwapMatches
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COBJ__SwapMatches_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc alt_match_list --> /main/template/arrays/alt_match_list_arr/alt_match_list
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					local i K_unchecked
					local x K_unchecked
					code
						inv !store
							reference
								val K_unchecked x
							val K_unchecked number_matched
						inv !store
							reference
								val K_unchecked number_matched
							inv !lookup
								val K_unchecked alt_match_list
								val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked alt_match_list
									val K_unchecked 0
							val K_unchecked x
						inv !if
							inv !lt
								val K_unchecked x
								val K_unchecked number_matched
							code
								inv !store
									reference
										val K_unchecked x
									val K_unchecked number_matched
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked x
							inv !gt
								val K_unchecked i
								val K_unchecked 0
							inv !postdecrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked x
									inv !lookup
										val K_unchecked match_list
										inv !minus
											val K_unchecked i
											val K_unchecked 1
								inv !store
									reference
										inv !lookup
											val K_unchecked match_list
											inv !minus
												val K_unchecked i
												val K_unchecked 1
									inv !lookup
										val K_unchecked alt_match_list
										val K_unchecked i
								inv !store
									reference
										inv !lookup
											val K_unchecked alt_match_list
											val K_unchecked i
									val K_unchecked x
				constant COBJ__SwapMatches K_unchecked_function = COBJ__SwapMatches_B __assimilated=1
			package ChooseObjects_fn _function
				symbol public misc ChooseObjects
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ChooseObjects_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc code
					symbol private misc l
					symbol private misc i
					symbol private misc swn
					symbol private misc spcount
					symbol external misc plug_00221 --> /main/template/variables/cobj_flag_var/cobj_flag
					symbol private label .CodeOne
					symbol external misc plug_00238 --> /main/template/variables/parameters_var/parameters
					symbol external misc ScoreDabCombo --> /main/template/functions/ScoreDabCombo_fn/ScoreDabCombo
					symbol external misc parser_results --> /main/template/arrays/parser_results_arr/parser_results
					symbol external misc INP1_PRES --> /main/template/constants/INP1_PRES_con/INP1_PRES
					symbol external misc alt_match_list --> /main/template/arrays/alt_match_list_arr/alt_match_list
					symbol external misc HIGHEST_DPMR_SCORE --> /main/template/constants/HIGHEST_DPMR_SCORE_con/HIGHEST_DPMR_SCORE
					symbol private label .CodeTwo
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00251 --> /main/template/variables/advance_warning_var/advance_warning
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00252 --> /main/template/variables/pcount_var/pcount
					symbol external misc line_ttype --> /main/template/arrays/line_ttype_arr/line_ttype
					symbol external misc PREPOSITION_TT --> /main/template/constants/PREPOSITION_TT_con/PREPOSITION_TT
					symbol external misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
					symbol external misc line_tdata --> /main/template/arrays/line_tdata_arr/line_tdata
					symbol external misc TOPIC_TOKEN --> /main/template/constants/TOPIC_TOKEN_con/TOPIC_TOKEN
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
					symbol external misc #dict_par1 --> /main/veneer/#dict_par1
					symbol external misc ALL1__WD --> /main/template/constants/ALL1__WD_con/ALL1__WD
					symbol external misc ALL2__WD --> /main/template/constants/ALL2__WD_con/ALL2__WD
					symbol external misc ALL3__WD --> /main/template/constants/ALL3__WD_con/ALL3__WD
					symbol external misc ALL4__WD --> /main/template/constants/ALL4__WD_con/ALL4__WD
					symbol external misc ALL5__WD --> /main/template/constants/ALL5__WD_con/ALL5__WD
					symbol external misc SafeSkipDescriptors --> /main/template/functions/SafeSkipDescriptors_fn/SafeSkipDescriptors
					symbol external misc plug_00273 --> /main/template/variables/match_length_var/match_length
					symbol external misc plug_00237 --> /main/template/variables/token_filter_var/token_filter
					symbol external misc plug_00272 --> /main/template/variables/match_from_var/match_from
					symbol external misc plug_00275 --> /main/template/variables/number_matched_var/number_matched
					symbol external misc COBJ__Copy --> /main/template/functions/COBJ__Copy_fn/COBJ__Copy
					symbol external misc match_list --> /main/template/arrays/match_list_arr/match_list
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc SearchScope --> /main/template/functions/SearchScope_fn/SearchScope
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc COBJ__SwapMatches --> /main/template/functions/COBJ__SwapMatches_fn/COBJ__SwapMatches
					local obj K_unchecked
					local code K_unchecked
					local l K_unchecked
					local i K_unchecked
					local swn K_unchecked
					local spcount K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked code
								val K_unchecked 2
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked cobj_flag
								val K_unchecked 1
							code
								.CodeOne
								inv !ifelse
									inv !gt
										val K_unchecked parameters
										val K_unchecked 0
									code
										inv !return
											inv ScoreDabCombo
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked INP1_PRES
												val K_unchecked obj
									code
										inv !store
											reference
												val K_unchecked l
											val K_unchecked 0
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 1
											inv !le
												val K_unchecked i
												inv !lookup
													val K_unchecked alt_match_list
													val K_unchecked 0
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														val K_unchecked spcount
													inv ScoreDabCombo
														val K_unchecked obj
														inv !lookup
															val K_unchecked alt_match_list
															val K_unchecked i
												inv !if
													inv !eq
														val K_unchecked spcount
														val K_unchecked HIGHEST_DPMR_SCORE
													code
														inv !return
															val K_unchecked spcount
												inv !if
													inv !gt
														val K_unchecked spcount
														val K_unchecked l
													code
														inv !store
															reference
																val K_unchecked l
															val K_unchecked spcount
										inv !return
											val K_unchecked l
						inv !if
							inv !eq
								val K_unchecked cobj_flag
								val K_unchecked 2
							code
								.CodeTwo
								inv !push
									val K_unchecked action_to_be
								inv !ifelse
									inv !eq
										val K_unchecked parameters
										val K_unchecked 0
									code
										inv !ifelse
											inv !gt
												val K_unchecked advance_warning
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked l
													inv ScoreDabCombo
														val K_unchecked obj
														val K_unchecked advance_warning
											code
												inv !store
													reference
														val K_unchecked l
													inv ScoreDabCombo
														val K_unchecked obj
														val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked l
											inv ScoreDabCombo
												inv !lookup
													val K_unchecked parser_results
													val K_unchecked INP1_PRES
												val K_unchecked obj
								inv !pull
									reference
										val K_unchecked action_to_be
								inv !return
									val K_unchecked l
						inv !store
							reference
								val K_unchecked swn
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked spcount
							val K_unchecked pcount
						inv !while
							inv !eq
								inv !lookup
									val K_unchecked line_ttype
									val K_unchecked pcount
								val K_unchecked PREPOSITION_TT
							code
								inv !postincrement
									reference
										val K_unchecked pcount
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked line_ttype
									val K_unchecked pcount
								val K_unchecked ELEMENTARY_TT
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked line_tdata
											val K_unchecked pcount
										val K_unchecked TOPIC_TOKEN
									code
										inv !store
											reference
												val K_unchecked pcount
											val K_unchecked spcount
										inv !jump
											lab .CodeTwo
								inv !while
									inv !le
										val K_unchecked wn
										val K_unchecked num_words
									code
										inv !store
											reference
												val K_unchecked l
											inv NextWordStopped
										inv !postdecrement
											reference
												val K_unchecked wn
										inv !if
											inv !eq
												val K_unchecked l
												val K_unchecked THEN1__WD
											code
												inv !break
										inv !if
											inv !and
												inv !ne
													val K_unchecked l
													inv !alternative
														val K_unchecked -1
														val K_unchecked 0
												inv !bitwiseand
													inv !lookupbyte
														val K_unchecked l
														val K_unchecked #dict_par1
													val K_unchecked 8
											code
												inv !postincrement
													reference
														val K_unchecked wn
												inv !continue
										inv !if
											inv !eq
												val K_unchecked l
												inv !alternative
													inv !alternative
														inv !alternative
															inv !alternative
																val K_unchecked ALL1__WD
																val K_unchecked ALL2__WD
															val K_unchecked ALL3__WD
														val K_unchecked ALL4__WD
													val K_unchecked ALL5__WD
											code
												inv !postincrement
													reference
														val K_unchecked wn
												inv !continue
										inv SafeSkipDescriptors
										inv !push
											val K_unchecked match_length
										inv !push
											val K_unchecked token_filter
										inv !push
											val K_unchecked match_from
										inv !store
											reference
												inv !lookup
													val K_unchecked alt_match_list
													val K_unchecked 0
											val K_unchecked number_matched
										inv COBJ__Copy
											val K_unchecked number_matched
											val K_unchecked match_list
											inv !plus
												val K_unchecked alt_match_list
												val K_unchecked plug_00139
										inv !store
											reference
												val K_unchecked match_length
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked number_matched
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked match_from
											val K_unchecked wn
										inv !store
											reference
												val K_unchecked token_filter
											val K_unchecked 0
										inv SearchScope
											val K_unchecked actor
											val K_unchecked actors_location
											inv !lookup
												val K_unchecked line_tdata
												val K_unchecked pcount
										inv !store
											reference
												val K_unchecked wn
											val K_unchecked swn
										inv !store
											reference
												val K_unchecked cobj_flag
											val K_unchecked 1
										inv COBJ__SwapMatches
										inv !pull
											reference
												val K_unchecked match_from
										inv !pull
											reference
												val K_unchecked token_filter
										inv !pull
											reference
												val K_unchecked match_length
										inv !store
											reference
												val K_unchecked pcount
											val K_unchecked spcount
										inv !jump
											lab .CodeOne
						inv !store
							reference
								val K_unchecked pcount
							val K_unchecked spcount
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked swn
						inv !store
							reference
								val K_unchecked cobj_flag
							val K_unchecked 2
						inv !jump
							lab .CodeTwo
				constant ChooseObjects K_unchecked_function = ChooseObjects_B __assimilated=1
			package ScoreDabCombo_fn _function
				symbol public misc ScoreDabCombo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScoreDabCombo_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc b
					symbol private misc result
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00202 --> /main/template/variables/action_reversed_var/action_reversed
					symbol external misc plug_00304 --> /main/connectors/plug_00304
					local a K_unchecked
					local b K_unchecked
					local result K_unchecked
					code
						inv !push
							val K_unchecked action
						inv !push
							val K_unchecked act_requester
						inv !push
							val K_unchecked noun
						inv !push
							val K_unchecked second
						inv !store
							reference
								val K_unchecked action
							val K_unchecked action_to_be
						inv !store
							reference
								val K_unchecked act_requester
							val K_unchecked player
						inv !ifelse
							val K_unchecked action_reversed
							code
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked b
								inv !store
									reference
										val K_unchecked second
									val K_unchecked a
							code
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked a
								inv !store
									reference
										val K_unchecked second
									val K_unchecked b
						inv !store
							reference
								val K_unchecked result
							inv plug_00304
						inv !pull
							reference
								val K_unchecked second
						inv !pull
							reference
								val K_unchecked noun
						inv !pull
							reference
								val K_unchecked act_requester
						inv !pull
							reference
								val K_unchecked action
						inv !return
							val K_unchecked result
				constant ScoreDabCombo K_unchecked_function = ScoreDabCombo_B __assimilated=1
			package DefaultTopic_fn _function
				symbol public misc DefaultTopic
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DefaultTopic_B _code
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							val K_unchecked GPR_FAIL
				constant DefaultTopic K_unchecked_function = DefaultTopic_B __assimilated=1
			package ParserError_fn _function
				symbol public misc ParserError
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ParserError_B _code
					symbol private misc error_type
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc PrintSingleParagraph --> /main/template/functions/PrintSingleParagraph_fn/PrintSingleParagraph
					local error_type K_unchecked
					code
						inv !if
							val K_unchecked error_type
							code
								inv PrintSingleParagraph
									val K_unchecked error_type
						inv !return
							val K_unchecked 0
				constant ParserError K_unchecked_function = ParserError_B __assimilated=1
			package Main_fn _function
				symbol public misc Main
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Main_B _code
					symbol external misc ClearRTP --> /main/template/functions/ClearRTP_fn/ClearRTP
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc STARTUP_RB --> /main/template/constants/STARTUP_RB_con/STARTUP_RB
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00305 --> /main/template/variables/deadflag_var/deadflag
					symbol external misc plug_00306 --> /main/template/variables/EarlyInTurnSequence_var/EarlyInTurnSequence
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00307 --> /main/connectors/plug_00307
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc TURN_SEQUENCE_RB --> /main/template/constants/TURN_SEQUENCE_RB_con/TURN_SEQUENCE_RB
					symbol external misc plug_00308 --> /main/template/variables/IterationsOfTurnSequence_var/IterationsOfTurnSequence
					symbol external misc SHUTDOWN_RB --> /main/template/constants/SHUTDOWN_RB_con/SHUTDOWN_RB
					code
						inv ClearRTP
						inv FollowRulebook
							val K_unchecked STARTUP_RB
						inv !while
							val K_unchecked 1
							code
								inv !while
									inv !eq
										val K_unchecked deadflag
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked EarlyInTurnSequence
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked action
											val K_unchecked plug_00307
										inv !store
											reference
												val K_unchecked meta
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked noun
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked second
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked actor
											val K_unchecked player
										inv FollowRulebook
											val K_unchecked TURN_SEQUENCE_RB
										inv !postincrement
											reference
												val K_unchecked IterationsOfTurnSequence
								inv !if
									inv !eq
										inv FollowRulebook
											val K_unchecked SHUTDOWN_RB
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 1
				constant Main K_unchecked_function = Main_B __assimilated=1
			package VIRTUAL_MACHINE_STARTUP_R_fn _function
				symbol public misc VIRTUAL_MACHINE_STARTUP_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VIRTUAL_MACHINE_STARTUP_R_B _code
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc STARTING_VIRTUAL_MACHINE_ACT --> /main/template/constants/STARTING_VIRTUAL_MACHINE_ACT_con/STARTING_VIRTUAL_MACHINE_ACT
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc VM_Initialise --> /main/template/functions/VM_Initialise_fn/VM_Initialise
					code
						inv CarryOutActivity
							val K_unchecked STARTING_VIRTUAL_MACHINE_ACT
						inv VM_Initialise
						inv !print
							val K_unchecked "\n\n\n"
						inv !return
							val K_unchecked 0
				constant VIRTUAL_MACHINE_STARTUP_R K_unchecked_function = VIRTUAL_MACHINE_STARTUP_R_B __assimilated=1
			package INITIALISE_MEMORY_R_fn _function
				symbol public misc INITIALISE_MEMORY_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package INITIALISE_MEMORY_R_B _code
					symbol external misc plug_00311 --> /main/template/variables/not_yet_in_play_var/not_yet_in_play
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00312 --> /main/connectors/plug_00312
					symbol external misc plug_00313 --> /main/connectors/plug_00313
					symbol external misc plug_00314 --> /main/template/variables/the_time_var/the_time
					symbol external misc plug_00315 --> /main/connectors/plug_00315
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc CreatePropertyOffsets --> /main/veneer/CreatePropertyOffsets
					symbol external misc HeapInitialise --> /main/template/functions/HeapInitialise_fn/HeapInitialise
					symbol external misc StackFramingInitialise --> /main/template/functions/StackFramingInitialise_fn/StackFramingInitialise
					symbol external misc plug_00316 --> /main/connectors/plug_00316
					code
						inv !store
							reference
								val K_unchecked not_yet_in_play
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked player
							inv !lookup
								val K_unchecked plug_00312
								val K_unchecked plug_00313
						inv !store
							reference
								val K_unchecked the_time
							inv !lookup
								val K_unchecked plug_00312
								val K_unchecked plug_00315
						inv !store
							reference
								val K_unchecked real_location
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked location
							val K_unchecked 0
						inv CreatePropertyOffsets
						inv HeapInitialise
						inv StackFramingInitialise
						inv plug_00316
						inv !return
							val K_unchecked 0
				constant INITIALISE_MEMORY_R K_unchecked_function = INITIALISE_MEMORY_R_B __assimilated=1
			package SEED_RANDOM_NUMBER_GENERATOR_R_fn _function
				symbol public misc SEED_RANDOM_NUMBER_GENERATOR_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SEED_RANDOM_NUMBER_GENERATOR_R_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00317 --> /main/connectors/plug_00317
					symbol external misc VM_Seed_RNG --> /main/template/functions/VM_Seed_RNG_fn/VM_Seed_RNG
					symbol external misc random --> /main/veneer/random
					local i K_unchecked
					code
						inv !if
							val K_unchecked plug_00317
							code
								inv VM_Seed_RNG
									val K_unchecked plug_00317
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked 100
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv random
									val K_unchecked i
						inv !return
							val K_unchecked 0
				constant SEED_RANDOM_NUMBER_GENERATOR_R K_unchecked_function = SEED_RANDOM_NUMBER_GENERATOR_R_B __assimilated=1
			package POSITION_PLAYER_IN_MODEL_R_fn _function
				symbol public misc POSITION_PLAYER_IN_MODEL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package POSITION_PLAYER_IN_MODEL_R_B _code
					symbol private misc player_to_be
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00318 --> /main/connectors/plug_00318
					symbol external misc plug_00312 --> /main/connectors/plug_00312
					symbol external misc plug_00313 --> /main/connectors/plug_00313
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc plug_00319 --> /main/connectors/plug_00319
					symbol external misc plug_00320 --> /main/connectors/plug_00320
					symbol external misc ChangePlayer --> /main/template/functions/ChangePlayer_fn/ChangePlayer
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc SilentlyConsiderLight --> /main/template/functions/SilentlyConsiderLight_fn/SilentlyConsiderLight
					symbol external misc NOTE_OBJECT_ACQUISITIONS_R --> /main/template/functions/NOTE_OBJECT_ACQUISITIONS_R_fn/NOTE_OBJECT_ACQUISITIONS_R
					symbol external misc MoveFloatingObjects --> /main/template/functions/MoveFloatingObjects_fn/MoveFloatingObjects
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc plug_00227 --> /main/template/variables/actors_location_var/actors_location
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00307 --> /main/connectors/plug_00307
					symbol external misc plug_00321 --> /main/connectors/plug_00321
					local player_to_be K_unchecked
					code
						inv !store
							reference
								val K_unchecked player
							val K_unchecked plug_00318
						inv !store
							reference
								val K_unchecked player_to_be
							inv !lookup
								val K_unchecked plug_00312
								val K_unchecked plug_00313
						inv !store
							reference
								val K_unchecked location
							inv LocationOf
								val K_unchecked player_to_be
						inv !if
							inv !eq
								val K_unchecked location
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked location
									inv !lookup
										val K_unchecked plug_00312
										val K_unchecked plug_00319
								inv !ifelse
									inv !lookup
										val K_unchecked plug_00312
										val K_unchecked plug_00320
									code
										inv !move
											val K_unchecked player_to_be
											inv !lookup
												val K_unchecked plug_00312
												val K_unchecked plug_00320
									code
										inv !move
											val K_unchecked player_to_be
											val K_unchecked location
						inv !ifelse
							inv !ne
								val K_unchecked player_to_be
								val K_unchecked player
							code
								inv !remove
									val K_unchecked plug_00318
								inv ChangePlayer
									val K_unchecked player_to_be
							code
								inv !store
									reference
										val K_unchecked real_location
									val K_unchecked location
								inv SilentlyConsiderLight
						inv NOTE_OBJECT_ACQUISITIONS_R
						inv MoveFloatingObjects
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked player
						inv !store
							reference
								val K_unchecked act_requester
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked actors_location
							val K_unchecked real_location
						inv !store
							reference
								val K_unchecked action
							val K_unchecked plug_00307
						inv !store
							reference
								inv !lookup
									val K_unchecked plug_00312
									val K_unchecked plug_00321
							val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant POSITION_PLAYER_IN_MODEL_R K_unchecked_function = POSITION_PLAYER_IN_MODEL_R_B __assimilated=1
			package PARSE_COMMAND_R_fn _function
				symbol public misc PARSE_COMMAND_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PARSE_COMMAND_R_B _code
					symbol external misc plug_00306 --> /main/template/variables/EarlyInTurnSequence_var/EarlyInTurnSequence
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00311 --> /main/template/variables/not_yet_in_play_var/not_yet_in_play
					symbol external misc Parser__parse --> /main/template/functions/Parser__parse_fn/Parser__parse
					symbol external misc TreatParserResults --> /main/template/functions/TreatParserResults_fn/TreatParserResults
					code
						inv !if
							inv !eq
								val K_unchecked EarlyInTurnSequence
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked not_yet_in_play
							val K_unchecked 0
						inv Parser__parse
						inv TreatParserResults
						inv !return
							val K_unchecked 0
				constant PARSE_COMMAND_R K_unchecked_function = PARSE_COMMAND_R_B __assimilated=1
			package TreatParserResults_fn _function
				symbol public misc TreatParserResults
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TreatParserResults_B _code
					symbol external misc parser_results --> /main/template/arrays/parser_results_arr/parser_results
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc ACTION_PRES --> /main/template/constants/ACTION_PRES_con/ACTION_PRES
					symbol external misc plug_00322 --> /main/connectors/plug_00322
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc plug_00278 --> /main/connectors/plug_00278
					symbol external misc INP1_PRES --> /main/template/constants/INP1_PRES_con/INP1_PRES
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00276 --> /main/connectors/plug_00276
					code
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked parser_results
									val K_unchecked ACTION_PRES
								val K_unchecked plug_00322
							code
								inv !store
									reference
										val K_unchecked meta
									val K_unchecked 1
						inv !if
							inv !and
								inv !and
									inv !eq
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked ACTION_PRES
										val K_unchecked plug_00278
									inv !eq
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked INP1_PRES
										val K_unchecked player
								inv !ne
									val K_unchecked actor
									val K_unchecked player
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked ACTION_PRES
									val K_unchecked plug_00276
								inv !store
									reference
										inv !lookup
											val K_unchecked parser_results
											val K_unchecked INP1_PRES
									val K_unchecked actor
								inv !store
									reference
										val K_unchecked actor
									val K_unchecked player
				constant TreatParserResults K_unchecked_function = TreatParserResults_B __assimilated=1
			package GENERATE_ACTION_R_fn _function
				symbol public misc GENERATE_ACTION_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GENERATE_ACTION_R_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00306 --> /main/template/variables/EarlyInTurnSequence_var/EarlyInTurnSequence
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc parser_results --> /main/template/arrays/parser_results_arr/parser_results
					symbol external misc ACTION_PRES --> /main/template/constants/ACTION_PRES_con/ACTION_PRES
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00323 --> /main/template/variables/inp1_var/inp1
					symbol external misc plug_00324 --> /main/template/variables/inp2_var/inp2
					symbol external misc plug_00246 --> /main/template/variables/multiflag_var/multiflag
					symbol external misc NO_INPS_PRES --> /main/template/constants/NO_INPS_PRES_con/NO_INPS_PRES
					symbol external misc INP1_PRES --> /main/template/constants/INP1_PRES_con/INP1_PRES
					symbol external misc INP2_PRES --> /main/template/constants/INP2_PRES_con/INP2_PRES
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc plug_00325 --> /main/connectors/plug_00325
					symbol external misc plug_00295 --> /main/template/variables/toomany_flag_var/toomany_flag
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc MULTIPLE_ACTION_PROCESSING_RB --> /main/template/constants/MULTIPLE_ACTION_PROCESSING_RB_con/MULTIPLE_ACTION_PROCESSING_RB
					symbol external misc GenerateMultipleActions --> /main/template/functions/GenerateMultipleActions_fn/GenerateMultipleActions
					symbol external misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
					symbol external misc plug_00307 --> /main/connectors/plug_00307
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc RulebookSucceeds --> /main/template/functions/RulebookSucceeds_fn/RulebookSucceeds
					local i K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked EarlyInTurnSequence
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked EarlyInTurnSequence
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked action
							inv !lookup
								val K_unchecked parser_results
								val K_unchecked ACTION_PRES
						inv !store
							reference
								val K_unchecked act_requester
							val K_unchecked 0
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked act_requester
									val K_unchecked player
						inv !store
							reference
								val K_unchecked inp1
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked inp2
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked multiflag
							val K_unchecked 0
						inv !if
							inv !ge
								inv !lookup
									val K_unchecked parser_results
									val K_unchecked NO_INPS_PRES
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked inp1
									inv !lookup
										val K_unchecked parser_results
										val K_unchecked INP1_PRES
								inv !if
									inv !eq
										val K_unchecked inp1
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked multiflag
											val K_unchecked 1
						inv !if
							inv !ge
								inv !lookup
									val K_unchecked parser_results
									val K_unchecked NO_INPS_PRES
								val K_unchecked 2
							code
								inv !store
									reference
										val K_unchecked inp2
									inv !lookup
										val K_unchecked parser_results
										val K_unchecked INP2_PRES
								inv !if
									inv !eq
										val K_unchecked inp2
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked multiflag
											val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked inp1
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked inp1
						inv !ifelse
							inv !eq
								val K_unchecked inp2
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked second
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked second
									val K_unchecked inp2
						inv !if
							val K_unchecked multiflag
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked 0
										val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00325
													val K_unchecked 66
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
								inv !if
									val K_unchecked toomany_flag
									code
										inv !store
											reference
												val K_unchecked toomany_flag
											val K_unchecked 0
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00325
													val K_unchecked 65
								inv !store
									reference
										val K_unchecked i
									inv !lookup
										val K_unchecked multiple_object
										val K_unchecked 0
								inv FollowRulebook
									val K_unchecked MULTIPLE_ACTION_PROCESSING_RB
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked multiple_object
												val K_unchecked 0
											val K_unchecked 1
										inv !gt
											val K_unchecked i
											val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked multiflag
											val K_unchecked 0
										inv !if
											inv !eq
												val K_unchecked inp1
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked noun
													inv !lookup
														val K_unchecked multiple_object
														val K_unchecked 1
										inv !if
											inv !and
												inv !eq
													val K_unchecked inp2
													val K_unchecked 0
												inv !ge
													inv !lookup
														val K_unchecked parser_results
														val K_unchecked NO_INPS_PRES
													val K_unchecked 2
											code
												inv !store
													reference
														val K_unchecked second
													inv !lookup
														val K_unchecked multiple_object
														val K_unchecked 1
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked 0
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !ifelse
							val K_unchecked multiflag
							code
								inv GenerateMultipleActions
								inv !store
									reference
										val K_unchecked multiflag
									val K_unchecked 0
							code
								inv BeginAction
									val K_unchecked action
									val K_unchecked noun
									val K_unchecked second
						inv !if
							inv !or
								inv !ne
									val K_unchecked actor
									val K_unchecked player
								val K_unchecked act_requester
							code
								inv !store
									reference
										val K_unchecked action
									val K_unchecked plug_00307
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked player
						inv !store
							reference
								val K_unchecked act_requester
							val K_unchecked 0
						inv !if
							val K_unchecked meta
							code
								inv RulebookSucceeds
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant GENERATE_ACTION_R K_unchecked_function = GENERATE_ACTION_R_B __assimilated=1
			package GenerateMultipleActions_fn _function
				symbol public misc GenerateMultipleActions
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GenerateMultipleActions_B _code
					symbol private misc initial_location
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc k
					symbol private misc item
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc RunParagraphOn --> /main/template/functions/RunParagraphOn_fn/RunParagraphOn
					symbol external misc plug_00323 --> /main/template/variables/inp1_var/inp1
					symbol external misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00324 --> /main/template/variables/inp2_var/inp2
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00305 --> /main/template/variables/deadflag_var/deadflag
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00326 --> /main/connectors/plug_00326
					local initial_location K_unchecked
					local k K_unchecked
					local item K_unchecked
					code
						inv !store
							reference
								val K_unchecked initial_location
							val K_unchecked location
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								inv !lookup
									val K_unchecked multiple_object
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv !store
									reference
										val K_unchecked item
									inv !lookup
										val K_unchecked multiple_object
										val K_unchecked k
								inv RunParagraphOn
								inv !ifelse
									inv !eq
										val K_unchecked inp1
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked inp1
											val K_unchecked item
										inv BeginAction
											val K_unchecked action
											val K_unchecked item
											val K_unchecked second
											val K_unchecked item
										inv !store
											reference
												val K_unchecked inp1
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked inp2
											val K_unchecked item
										inv BeginAction
											val K_unchecked action
											val K_unchecked noun
											val K_unchecked item
											val K_unchecked item
										inv !store
											reference
												val K_unchecked inp2
											val K_unchecked 0
								inv !if
									val K_unchecked deadflag
									code
										inv !return
											val K_unchecked 1
								inv !if
									inv !ne
										val K_unchecked location
										val K_unchecked initial_location
									code
										inv !if
											inv !eq
												val K_unchecked player
												val K_unchecked actor
											code
												inv plug_00326
													val K_unchecked 74
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
				constant GenerateMultipleActions K_unchecked_function = GenerateMultipleActions_B __assimilated=1
			package TIMED_EVENTS_R_fn _function
				symbol public misc TIMED_EVENTS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TIMED_EVENTS_R_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc d
					symbol private misc event_timer
					symbol private misc fire
					symbol private misc rule
					symbol external misc plug_00327 --> /main/connectors/plug_00327
					symbol external misc plug_00328 --> /main/connectors/plug_00328
					symbol external misc plug_00314 --> /main/template/variables/the_time_var/the_time
					symbol external misc TWENTY_FOUR_HOURS --> /main/template/constants/TWENTY_FOUR_HOURS_con/TWENTY_FOUR_HOURS
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					local i K_unchecked
					local d K_unchecked
					local event_timer K_unchecked
					local fire K_unchecked
					local rule K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								inv !lookup
									val K_unchecked plug_00327
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !ne
										inv !store
											reference
												val K_unchecked rule
											inv !lookup
												val K_unchecked plug_00327
												val K_unchecked i
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked event_timer
											inv !lookup
												val K_unchecked plug_00328
												val K_unchecked i
										inv !store
											reference
												val K_unchecked fire
											val K_unchecked 0
										inv !ifelse
											inv !lt
												val K_unchecked event_timer
												val K_unchecked 0
											code
												inv !postincrement
													reference
														inv !lookup
															val K_unchecked plug_00328
															val K_unchecked i
												inv !if
													inv !eq
														inv !lookup
															val K_unchecked plug_00328
															val K_unchecked i
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked fire
															val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked d
													inv !modulo
														inv !plus
															inv !minus
																val K_unchecked the_time
																val K_unchecked event_timer
															val K_unchecked TWENTY_FOUR_HOURS
														val K_unchecked TWENTY_FOUR_HOURS
												inv !if
													inv !and
														inv !ge
															val K_unchecked d
															val K_unchecked 0
														inv !lt
															val K_unchecked d
															val K_unchecked 30
													code
														inv !store
															reference
																val K_unchecked fire
															val K_unchecked 1
										inv !if
											val K_unchecked fire
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked plug_00327
															val K_unchecked i
													val K_unchecked 0
												inv FollowRulebook
													val K_unchecked rule
						inv !return
							val K_unchecked 0
				constant TIMED_EVENTS_R K_unchecked_function = TIMED_EVENTS_R_B __assimilated=1
			package SetTimedEvent_fn _function
				symbol public misc SetTimedEvent
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetTimedEvent_B _code
					symbol private misc rule
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc event_time
					symbol private misc absolute_time
					symbol private misc i
					symbol private misc b
					symbol external misc plug_00327 --> /main/connectors/plug_00327
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TOOMANYEVENTS --> /main/template/constants/RTP_TOOMANYEVENTS_con/RTP_TOOMANYEVENTS
					symbol external misc plug_00328 --> /main/connectors/plug_00328
					local rule K_unchecked
					local event_time K_unchecked
					local absolute_time K_unchecked
					local i K_unchecked
					local b K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								inv !lookup
									val K_unchecked plug_00327
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										val K_unchecked rule
										inv !lookup
											val K_unchecked plug_00327
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked b
											val K_unchecked i
										inv !break
								inv !if
									inv !and
										inv !eq
											val K_unchecked b
											val K_unchecked 0
										inv !eq
											inv !lookup
												val K_unchecked plug_00327
												val K_unchecked i
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked b
											val K_unchecked i
						inv !if
							inv !eq
								val K_unchecked b
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_TOOMANYEVENTS
						inv !store
							reference
								inv !lookup
									val K_unchecked plug_00327
									val K_unchecked b
							val K_unchecked rule
						inv !ifelse
							val K_unchecked absolute_time
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked plug_00328
											val K_unchecked b
									val K_unchecked event_time
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked plug_00328
											val K_unchecked b
									inv !unaryminus
										val K_unchecked event_time
				constant SetTimedEvent K_unchecked_function = SetTimedEvent_B __assimilated=1
			package SetTime_fn _function
				symbol public misc SetTime
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetTime_B _code
					symbol private misc t
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc s
					symbol external misc plug_00314 --> /main/template/variables/the_time_var/the_time
					symbol external misc plug_00329 --> /main/template/variables/time_rate_var/time_rate
					symbol external misc plug_00330 --> /main/template/variables/time_step_var/time_step
					local t K_unchecked
					local s K_unchecked
					code
						inv !store
							reference
								val K_unchecked the_time
							val K_unchecked t
						inv !store
							reference
								val K_unchecked time_rate
							val K_unchecked s
						inv !store
							reference
								val K_unchecked time_step
							val K_unchecked 0
						inv !if
							inv !lt
								val K_unchecked s
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked time_step
									inv !minus
										val K_unchecked 0
										val K_unchecked s
				constant SetTime K_unchecked_function = SetTime_B __assimilated=1
			package ADVANCE_TIME_R_fn _function
				symbol public misc ADVANCE_TIME_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ADVANCE_TIME_R_B _code
					symbol external misc plug_00212 --> /main/template/variables/turns_var/turns
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00314 --> /main/template/variables/the_time_var/the_time
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00329 --> /main/template/variables/time_rate_var/time_rate
					symbol external misc plug_00330 --> /main/template/variables/time_step_var/time_step
					symbol external misc TWENTY_FOUR_HOURS --> /main/template/constants/TWENTY_FOUR_HOURS_con/TWENTY_FOUR_HOURS
					code
						inv !postincrement
							reference
								val K_unchecked turns
						inv !if
							inv !ne
								val K_unchecked the_time
								val K_unchecked plug_00232
							code
								inv !ifelse
									inv !ge
										val K_unchecked time_rate
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked the_time
											inv !plus
												val K_unchecked the_time
												val K_unchecked time_rate
									code
										inv !postdecrement
											reference
												val K_unchecked time_step
										inv !if
											inv !eq
												val K_unchecked time_step
												val K_unchecked 0
											code
												inv !postincrement
													reference
														val K_unchecked the_time
												inv !store
													reference
														val K_unchecked time_step
													inv !unaryminus
														val K_unchecked time_rate
								inv !store
									reference
										val K_unchecked the_time
									inv !modulo
										val K_unchecked the_time
										val K_unchecked TWENTY_FOUR_HOURS
						inv !return
							val K_unchecked 0
				constant ADVANCE_TIME_R K_unchecked_function = ADVANCE_TIME_R_B __assimilated=1
			package NOTE_OBJECT_ACQUISITIONS_R_fn _function
				symbol public misc NOTE_OBJECT_ACQUISITIONS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NOTE_OBJECT_ACQUISITIONS_R_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00332 --> /main/connectors/plug_00332
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc moved --> /main/template/properties/moved_prop/moved
					symbol external misc plug_00333 --> /main/connectors/plug_00333
					symbol external misc concealed --> /main/template/properties/concealed_prop/concealed
					symbol external misc IndirectlyContains --> /main/template/functions/IndirectlyContains_fn/IndirectlyContains
					local obj K_unchecked
					code
						inv !objectloop
							reference
								val K_unchecked obj
							val K_unchecked plug_00332
							inv !in
								val K_unchecked obj
								val K_unchecked player
							code
								inv !give
									val K_unchecked obj
									val K_unchecked moved
						inv !objectloop
							reference
								val K_unchecked obj
							val K_unchecked plug_00333
							inv !has
								val K_unchecked obj
								val K_unchecked concealed
							code
								inv !if
									inv IndirectlyContains
										val K_unchecked player
										val K_unchecked obj
									code
										inv !take
											val K_unchecked obj
											val K_unchecked concealed
						inv !return
							val K_unchecked 0
				constant NOTE_OBJECT_ACQUISITIONS_R K_unchecked_function = NOTE_OBJECT_ACQUISITIONS_R_B __assimilated=1
			package RESURRECT_PLAYER_IF_ASKED_R_fn _function
				symbol public misc RESURRECT_PLAYER_IF_ASKED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RESURRECT_PLAYER_IF_ASKED_R_B _code
					symbol external misc plug_00334 --> /main/template/variables/resurrect_please_var/resurrect_please
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RulebookSucceeds --> /main/template/functions/RulebookSucceeds_fn/RulebookSucceeds
					symbol external misc plug_00305 --> /main/template/variables/deadflag_var/deadflag
					symbol external misc plug_00335 --> /main/template/variables/story_complete_var/story_complete
					code
						inv !if
							val K_unchecked resurrect_please
							code
								inv RulebookSucceeds
								inv !store
									reference
										val K_unchecked resurrect_please
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked deadflag
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked story_complete
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant RESURRECT_PLAYER_IF_ASKED_R K_unchecked_function = RESURRECT_PLAYER_IF_ASKED_R_B __assimilated=1
			package ASK_FINAL_QUESTION_R_fn _function
				symbol public misc ASK_FINAL_QUESTION_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ASK_FINAL_QUESTION_R_B _code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc DEALING_WITH_FINAL_QUESTION_ACT --> /main/template/constants/DEALING_WITH_FINAL_QUESTION_ACT_con/DEALING_WITH_FINAL_QUESTION_ACT
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					symbol external misc plug_00334 --> /main/template/variables/resurrect_please_var/resurrect_please
					code
						inv !print
							val K_unchecked "\n"
						inv !while
							val K_unchecked 1
							code
								inv CarryOutActivity
									val K_unchecked DEALING_WITH_FINAL_QUESTION_ACT
								inv DivideParagraphPoint
								inv !if
									val K_unchecked resurrect_please
									code
										inv !return
											val K_unchecked 1
				constant ASK_FINAL_QUESTION_R K_unchecked_function = ASK_FINAL_QUESTION_R_B __assimilated=1
			package READ_FINAL_ANSWER_R_fn _function
				symbol public misc READ_FINAL_ANSWER_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package READ_FINAL_ANSWER_R_B _code
					symbol external misc DrawStatusLine --> /main/template/functions/DrawStatusLine_fn/DrawStatusLine
					symbol external misc KeyboardPrimitive --> /main/template/functions/KeyboardPrimitive_fn/KeyboardPrimitive
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc WordCount --> /main/template/functions/WordCount_fn/WordCount
					symbol external misc plug_00226 --> /main/template/variables/num_words_var/num_words
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					code
						inv DrawStatusLine
						inv KeyboardPrimitive
							val K_unchecked buffer
							val K_unchecked parse
						inv !store
							reference
								val K_unchecked players_command
							inv !plus
								val K_unchecked 100
								inv WordCount
						inv !store
							reference
								val K_unchecked num_words
							inv WordCount
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant READ_FINAL_ANSWER_R K_unchecked_function = READ_FINAL_ANSWER_R_B __assimilated=1
			package IMMEDIATELY_RESTART_VM_R_fn _function
				symbol public misc IMMEDIATELY_RESTART_VM_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IMMEDIATELY_RESTART_VM_R_B _code
					code
						inv @restart
				constant IMMEDIATELY_RESTART_VM_R K_unchecked_function = IMMEDIATELY_RESTART_VM_R_B __assimilated=1
			package IMMEDIATELY_RESTORE_SAVED_R_fn _function
				symbol public misc IMMEDIATELY_RESTORE_SAVED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IMMEDIATELY_RESTORE_SAVED_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc RESTORE_THE_GAME_R --> /main/template/functions/RESTORE_THE_GAME_R_fn/RESTORE_THE_GAME_R
					code
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked player
						inv RESTORE_THE_GAME_R
				constant IMMEDIATELY_RESTORE_SAVED_R K_unchecked_function = IMMEDIATELY_RESTORE_SAVED_R_B __assimilated=1
			package IMMEDIATELY_QUIT_R_fn _function
				symbol public misc IMMEDIATELY_QUIT_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IMMEDIATELY_QUIT_R_B _code
					code
						inv @quit
				constant IMMEDIATELY_QUIT_R K_unchecked_function = IMMEDIATELY_QUIT_R_B __assimilated=1
			package IMMEDIATELY_UNDO_R_fn _function
				symbol public misc IMMEDIATELY_UNDO_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IMMEDIATELY_UNDO_R_B _code
					symbol external misc Perform_Undo --> /main/template/functions/Perform_Undo_fn/Perform_Undo
					code
						inv Perform_Undo
				constant IMMEDIATELY_UNDO_R K_unchecked_function = IMMEDIATELY_UNDO_R_B __assimilated=1
			package PRINT_OBITUARY_HEADLINE_R_fn _function
				symbol public misc PRINT_OBITUARY_HEADLINE_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PRINT_OBITUARY_HEADLINE_R_B _code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc VM_Style --> /main/template/functions/VM_Style_fn/VM_Style
					symbol external misc ALERT_VMSTY --> /main/template/constants/ALERT_VMSTY_con/ALERT_VMSTY
					symbol external misc plug_00305 --> /main/template/variables/deadflag_var/deadflag
					symbol external misc plug_00337 --> /main/connectors/plug_00337
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc NORMAL_VMSTY --> /main/template/constants/NORMAL_VMSTY_con/NORMAL_VMSTY
					code
						inv !print
							val K_unchecked "\n\n    "
						inv VM_Style
							val K_unchecked ALERT_VMSTY
						inv !print
							val K_unchecked "***"
						inv !if
							inv !eq
								val K_unchecked deadflag
								val K_unchecked 1
							code
								inv plug_00337
									val K_unchecked 65
						inv !if
							inv !eq
								val K_unchecked deadflag
								val K_unchecked 2
							code
								inv plug_00337
									val K_unchecked 66
						inv !if
							inv !eq
								val K_unchecked deadflag
								val K_unchecked 3
							code
								inv plug_00337
									val K_unchecked 67
						inv !if
							inv !ne
								val K_unchecked deadflag
								inv !alternative
									inv !alternative
										inv !alternative
											val K_unchecked 0
											val K_unchecked 1
										val K_unchecked 2
									val K_unchecked 3
							code
								inv !print
									val K_unchecked " "
								inv TEXT_TY_Say
									val K_unchecked deadflag
								inv !print
									val K_unchecked " "
						inv !print
							val K_unchecked "***"
						inv VM_Style
							val K_unchecked NORMAL_VMSTY
						inv !print
							val K_unchecked "\n\n"
						inv !print
							val K_unchecked "\n"
						inv !return
							val K_unchecked 0
				constant PRINT_OBITUARY_HEADLINE_R K_unchecked_function = PRINT_OBITUARY_HEADLINE_R_B __assimilated=1
			package PRINT_FINAL_SCORE_R_fn _function
				symbol public misc PRINT_FINAL_SCORE_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PRINT_FINAL_SCORE_R_B _code
					symbol external misc ANNOUNCE_SCORE_R --> /main/template/functions/ANNOUNCE_SCORE_R_fn/ANNOUNCE_SCORE_R
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv ANNOUNCE_SCORE_R
						inv !return
							val K_unchecked 0
				constant PRINT_FINAL_SCORE_R K_unchecked_function = PRINT_FINAL_SCORE_R_B __assimilated=1
			package DISPLAY_FINAL_STATUS_LINE_R_fn _function
				symbol public misc DISPLAY_FINAL_STATUS_LINE_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DISPLAY_FINAL_STATUS_LINE_R_B _code
					symbol external misc plug_00209 --> /main/template/variables/sline1_var/sline1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00210 --> /main/template/variables/score_var/score
					symbol external misc plug_00211 --> /main/template/variables/sline2_var/sline2
					symbol external misc plug_00212 --> /main/template/variables/turns_var/turns
					code
						inv !store
							reference
								val K_unchecked sline1
							val K_unchecked score
						inv !store
							reference
								val K_unchecked sline2
							val K_unchecked turns
						inv !return
							val K_unchecked 0
				constant DISPLAY_FINAL_STATUS_LINE_R K_unchecked_function = DISPLAY_FINAL_STATUS_LINE_R_B __assimilated=1
			package FindAction_fn _function
				symbol public misc FindAction
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FindAction_B _code
					symbol private misc fa
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc t
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_RECORD_SIZE --> /main/template/constants/AD_RECORD_SIZE_con/AD_RECORD_SIZE
					local fa K_unchecked
					local t K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked fa
								val K_unchecked -1
							code
								inv !store
									reference
										val K_unchecked fa
									val K_unchecked action
						inv !store
							reference
								val K_unchecked t
							val K_unchecked 1
						inv !while
							inv !le
								val K_unchecked t
								inv !lookup
									val K_unchecked plug_00338
									val K_unchecked 0
							code
								inv !if
									inv !eq
										val K_unchecked fa
										inv !lookup
											val K_unchecked plug_00338
											val K_unchecked t
									code
										inv !return
											val K_unchecked t
								inv !store
									reference
										val K_unchecked t
									inv !plus
										val K_unchecked t
										val K_unchecked AD_RECORD_SIZE
						inv !return
							val K_unchecked 0
				constant FindAction K_unchecked_function = FindAction_B __assimilated=1
			package ActionNumberIndexed_fn _function
				symbol public misc ActionNumberIndexed
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActionNumberIndexed_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00339 --> /main/connectors/plug_00339
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_RECORD_SIZE --> /main/template/constants/AD_RECORD_SIZE_con/AD_RECORD_SIZE
					symbol external misc AD_ACTION --> /main/template/constants/AD_ACTION_con/AD_ACTION
					local i K_unchecked
					code
						inv !if
							inv !and
								inv !ge
									val K_unchecked i
									val K_unchecked 0
								inv !lt
									val K_unchecked i
									val K_unchecked plug_00339
							code
								inv !return
									inv !lookup
										val K_unchecked plug_00338
										inv !plus
											inv !plus
												inv !times
													val K_unchecked i
													val K_unchecked AD_RECORD_SIZE
												val K_unchecked AD_ACTION
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ActionNumberIndexed K_unchecked_function = ActionNumberIndexed_B __assimilated=1
			package NeedToCarryNoun_fn _function
				symbol public misc NeedToCarryNoun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NeedToCarryNoun_B _code
					symbol external misc TestActionMask --> /main/template/functions/TestActionMask_fn/TestActionMask
					symbol external misc CARRY_NOUN_ABIT --> /main/template/constants/CARRY_NOUN_ABIT_con/CARRY_NOUN_ABIT
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							inv TestActionMask
								val K_unchecked CARRY_NOUN_ABIT
				constant NeedToCarryNoun K_unchecked_function = NeedToCarryNoun_B __assimilated=1
			package NeedToCarrySecondNoun_fn _function
				symbol public misc NeedToCarrySecondNoun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NeedToCarrySecondNoun_B _code
					symbol external misc TestActionMask --> /main/template/functions/TestActionMask_fn/TestActionMask
					symbol external misc CARRY_SECOND_ABIT --> /main/template/constants/CARRY_SECOND_ABIT_con/CARRY_SECOND_ABIT
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							inv TestActionMask
								val K_unchecked CARRY_SECOND_ABIT
				constant NeedToCarrySecondNoun K_unchecked_function = NeedToCarrySecondNoun_B __assimilated=1
			package NeedToTouchNoun_fn _function
				symbol public misc NeedToTouchNoun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NeedToTouchNoun_B _code
					symbol external misc TestActionMask --> /main/template/functions/TestActionMask_fn/TestActionMask
					symbol external misc TOUCH_NOUN_ABIT --> /main/template/constants/TOUCH_NOUN_ABIT_con/TOUCH_NOUN_ABIT
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							inv TestActionMask
								val K_unchecked TOUCH_NOUN_ABIT
				constant NeedToTouchNoun K_unchecked_function = NeedToTouchNoun_B __assimilated=1
			package NeedToTouchSecondNoun_fn _function
				symbol public misc NeedToTouchSecondNoun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NeedToTouchSecondNoun_B _code
					symbol external misc TestActionMask --> /main/template/functions/TestActionMask_fn/TestActionMask
					symbol external misc TOUCH_SECOND_ABIT --> /main/template/constants/TOUCH_SECOND_ABIT_con/TOUCH_SECOND_ABIT
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							inv TestActionMask
								val K_unchecked TOUCH_SECOND_ABIT
				constant NeedToTouchSecondNoun K_unchecked_function = NeedToTouchSecondNoun_B __assimilated=1
			package NeedLightForAction_fn _function
				symbol public misc NeedLightForAction
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NeedLightForAction_B _code
					symbol external misc TestActionMask --> /main/template/functions/TestActionMask_fn/TestActionMask
					symbol external misc LIGHT_ABIT --> /main/template/constants/LIGHT_ABIT_con/LIGHT_ABIT
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							inv TestActionMask
								val K_unchecked LIGHT_ABIT
				constant NeedLightForAction K_unchecked_function = NeedLightForAction_B __assimilated=1
			package TestActionMask_fn _function
				symbol public misc TestActionMask
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestActionMask_B _code
					symbol private misc match
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc mask
					symbol private misc at
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_REQUIREMENTS --> /main/template/constants/AD_REQUIREMENTS_con/AD_REQUIREMENTS
					local match K_unchecked
					local mask K_unchecked
					local at K_unchecked
					code
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								val K_unchecked -1
						inv !if
							inv !eq
								val K_unchecked at
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked mask
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_REQUIREMENTS
						inv !if
							inv !bitwiseand
								val K_unchecked mask
								val K_unchecked match
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant TestActionMask K_unchecked_function = TestActionMask_B __assimilated=1
			package TryAction_fn _function
				symbol public misc TryAction
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TryAction_B _code
					symbol private misc req
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc by
					symbol private misc ac
					symbol private misc n
					symbol private misc s
					symbol private misc stora
					symbol private misc smeta
					symbol private misc tbits
					symbol private misc saved_command
					symbol private misc text_of_command
					symbol external misc STORED_ACTION_TY_New --> /main/template/functions/STORED_ACTION_TY_New_fn/STORED_ACTION_TY_New
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc plug_00323 --> /main/template/variables/inp1_var/inp1
					symbol external misc plug_00324 --> /main/template/variables/inp2_var/inp2
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
					symbol external misc plug_00341 --> /main/connectors/plug_00341
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BlkValueCast --> /main/template/functions/BlkValueCast_fn/BlkValueCast
					symbol external misc plug_00343 --> /main/connectors/plug_00343
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc SetPlayersCommand --> /main/template/functions/SetPlayersCommand_fn/SetPlayersCommand
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc plug_00260 --> /main/template/variables/consult_from_var/consult_from
					symbol external misc plug_00261 --> /main/template/variables/consult_words_var/consult_words
					symbol external misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
					symbol external misc TrackActions --> /main/template/functions/TrackActions_fn/TrackActions
					local req K_unchecked
					local by K_unchecked
					local ac K_unchecked
					local n K_unchecked
					local s K_unchecked
					local stora K_unchecked
					local smeta K_unchecked
					local tbits K_unchecked
					local saved_command K_unchecked
					local text_of_command K_unchecked
					code
						inv !if
							val K_unchecked stora
							code
								inv !return
									inv STORED_ACTION_TY_New
										val K_unchecked ac
										val K_unchecked n
										val K_unchecked s
										val K_unchecked by
										val K_unchecked req
										val K_unchecked stora
						inv !store
							reference
								val K_unchecked tbits
							inv !bitwiseand
								val K_unchecked req
								inv !plus
									val K_unchecked 16
									val K_unchecked 32
						inv !store
							reference
								val K_unchecked req
							inv !bitwiseand
								val K_unchecked req
								val K_unchecked 1
						inv !push
							val K_unchecked actor
						inv !push
							val K_unchecked act_requester
						inv !push
							val K_unchecked inp1
						inv !push
							val K_unchecked inp2
						inv !push
							val K_unchecked parsed_number
						inv !store
							reference
								val K_unchecked smeta
							val K_unchecked meta
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked by
						inv !ifelse
							val K_unchecked req
							code
								inv !store
									reference
										val K_unchecked act_requester
									val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked act_requester
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked by
							inv FindAction
								val K_unchecked ac
						inv !if
							val K_unchecked by
							code
								inv !ifelse
									inv !eq
										inv !lookup
											val K_unchecked plug_00338
											inv !plus
												val K_unchecked by
												val K_unchecked AD_NOUN_KOV
										val K_unchecked plug_00340
									code
										inv !store
											reference
												val K_unchecked inp1
											val K_unchecked n
									code
										inv !store
											reference
												val K_unchecked inp1
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked parsed_number
											val K_unchecked n
								inv !ifelse
									inv !eq
										inv !lookup
											val K_unchecked plug_00338
											inv !plus
												val K_unchecked by
												val K_unchecked AD_SECOND_KOV
										val K_unchecked plug_00340
									code
										inv !store
											reference
												val K_unchecked inp2
											val K_unchecked s
									code
										inv !store
											reference
												val K_unchecked inp2
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked parsed_number
											val K_unchecked s
								inv !if
									inv !and
										inv !or
											inv !eq
												inv !lookup
													val K_unchecked plug_00338
													inv !plus
														val K_unchecked by
														val K_unchecked AD_NOUN_KOV
												val K_unchecked plug_00341
											inv !eq
												inv !lookup
													val K_unchecked plug_00338
													inv !plus
														val K_unchecked by
														val K_unchecked AD_SECOND_KOV
												val K_unchecked plug_00341
										val K_unchecked tbits
									code
										inv !store
											reference
												val K_unchecked saved_command
											inv BlkValueCreate
												val K_unchecked plug_00342
										inv BlkValueCast
											val K_unchecked saved_command
											val K_unchecked plug_00343
											val K_unchecked players_command
										inv !store
											reference
												val K_unchecked text_of_command
											inv BlkValueCreate
												val K_unchecked plug_00342
										inv BlkValueCopy
											val K_unchecked text_of_command
											val K_unchecked parsed_number
										inv SetPlayersCommand
											val K_unchecked text_of_command
										inv !ifelse
											inv !eq
												val K_unchecked tbits
												val K_unchecked 16
											code
												inv !store
													reference
														val K_unchecked n
													val K_unchecked players_command
												inv !store
													reference
														val K_unchecked inp1
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked parsed_number
													val K_unchecked players_command
											code
												inv !store
													reference
														val K_unchecked s
													val K_unchecked players_command
												inv !store
													reference
														val K_unchecked inp2
													val K_unchecked 1
												inv !store
													reference
														val K_unchecked parsed_number
													val K_unchecked players_command
										inv BlkValueFree
											val K_unchecked text_of_command
										inv !push
											val K_unchecked consult_from
										inv !push
											val K_unchecked consult_words
										inv !store
											reference
												val K_unchecked consult_from
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked consult_words
											inv !minus
												val K_unchecked parsed_number
												val K_unchecked 100
						inv BeginAction
							val K_unchecked ac
							val K_unchecked n
							val K_unchecked s
							val K_unchecked 0
							val K_unchecked 1
						inv !if
							val K_unchecked saved_command
							code
								inv !pull
									reference
										val K_unchecked consult_words
								inv !pull
									reference
										val K_unchecked consult_from
								inv SetPlayersCommand
									val K_unchecked saved_command
								inv BlkValueFree
									val K_unchecked saved_command
						inv !store
							reference
								val K_unchecked meta
							val K_unchecked smeta
						inv !pull
							reference
								val K_unchecked parsed_number
						inv !pull
							reference
								val K_unchecked inp2
						inv !pull
							reference
								val K_unchecked inp1
						inv !pull
							reference
								val K_unchecked act_requester
						inv !pull
							reference
								val K_unchecked actor
						inv TrackActions
							val K_unchecked 1
							val K_unchecked smeta
				constant TryAction K_unchecked_function = TryAction_B __assimilated=1
			package R_Process_fn _function
				symbol public misc R_Process
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package R_Process_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol external misc plug_00323 --> /main/template/variables/inp1_var/inp1
					symbol external misc plug_00324 --> /main/template/variables/inp2_var/inp2
					symbol external misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
					local a K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !push
							val K_unchecked inp1
						inv !push
							val K_unchecked inp2
						inv !store
							reference
								val K_unchecked inp1
							val K_unchecked i
						inv !store
							reference
								val K_unchecked inp2
							val K_unchecked j
						inv BeginAction
							val K_unchecked a
							val K_unchecked i
							val K_unchecked j
						inv !pull
							reference
								val K_unchecked inp2
						inv !pull
							reference
								val K_unchecked inp1
				constant R_Process K_unchecked_function = R_Process_B __assimilated=1
			package GVS_Convert_fn _function
				symbol public misc GVS_Convert
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GVS_Convert_B _code
					symbol private misc ac
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol private misc s
					symbol external misc plug_00344 --> /main/template/variables/converted_action_outcome_var/converted_action_outcome
					symbol external misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc AFTER_RB --> /main/template/constants/AFTER_RB_con/AFTER_RB
					local ac K_unchecked
					local n K_unchecked
					local s K_unchecked
					code
						inv !store
							reference
								val K_unchecked converted_action_outcome
							inv BeginAction
								val K_unchecked ac
								val K_unchecked n
								val K_unchecked s
						inv !if
							inv !eq
								val K_unchecked converted_action_outcome
								val K_unchecked 1
							code
								inv FollowRulebook
									val K_unchecked AFTER_RB
									val K_unchecked 0
									val K_unchecked 1
						inv !return
							val K_unchecked 1
				constant GVS_Convert K_unchecked_function = GVS_Convert_B __assimilated=1
			package ConvertToRequest_fn _function
				symbol public misc ConvertToRequest
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ConvertToRequest_B _code
					symbol private misc X
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc AN
					symbol private misc Y
					symbol private misc Z
					symbol external misc WORK_OUT_DETAILS_OF_SPECIFIC_R --> /main/template/functions/WORK_OUT_DETAILS_OF_SPECIFIC_R_fn/WORK_OUT_DETAILS_OF_SPECIFIC_R
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc TryAction --> /main/template/functions/TryAction_fn/TryAction
					local X K_unchecked
					local AN K_unchecked
					local Y K_unchecked
					local Z K_unchecked
					code
						inv WORK_OUT_DETAILS_OF_SPECIFIC_R
						inv !ifelse
							inv !eq
								val K_unchecked X
								val K_unchecked player
							code
								inv TryAction
									val K_unchecked 0
									val K_unchecked X
									val K_unchecked AN
									val K_unchecked Y
									val K_unchecked Z
							code
								inv TryAction
									val K_unchecked 1
									val K_unchecked X
									val K_unchecked AN
									val K_unchecked Y
									val K_unchecked Z
						inv !return
							val K_unchecked 1
				constant ConvertToRequest K_unchecked_function = ConvertToRequest_B __assimilated=1
			package ConvertToGoingWithPush_fn _function
				symbol public misc ConvertToGoingWithPush
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ConvertToGoingWithPush_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc oldrm
					symbol private misc newrm
					symbol private misc infl
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc IndirectlyContains --> /main/template/functions/IndirectlyContains_fn/IndirectlyContains
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00345 --> /main/template/variables/move_pushing_var/move_pushing
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
					symbol external misc plug_00239 --> /main/connectors/plug_00239
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc TryAction --> /main/template/functions/TryAction_fn/TryAction
					symbol external misc plug_00346 --> /main/connectors/plug_00346
					symbol external misc RulebookSucceeds --> /main/template/functions/RulebookSucceeds_fn/RulebookSucceeds
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					local i K_unchecked
					local oldrm K_unchecked
					local newrm K_unchecked
					local infl K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							val K_unchecked noun
						inv !if
							inv !eq
								inv IndirectlyContains
									val K_unchecked noun
									val K_unchecked actor
								val K_unchecked 0
							code
								inv !move
									val K_unchecked i
									val K_unchecked actor
								inv !store
									reference
										val K_unchecked infl
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked move_pushing
							val K_unchecked i
						inv !store
							reference
								val K_unchecked oldrm
							inv LocationOf
								val K_unchecked noun
						inv BeginAction
							val K_unchecked plug_00239
							val K_unchecked second
						inv !store
							reference
								val K_unchecked newrm
							inv LocationOf
								val K_unchecked actor
						inv !store
							reference
								val K_unchecked move_pushing
							val K_unchecked 0
						inv !move
							val K_unchecked i
							val K_unchecked newrm
						inv !ifelse
							inv !ne
								val K_unchecked newrm
								val K_unchecked oldrm
							code
								inv !if
									inv IndirectlyContains
										val K_unchecked i
										val K_unchecked player
									code
										inv TryAction
											val K_unchecked 0
											val K_unchecked player
											val K_unchecked plug_00346
											val K_unchecked 0
											val K_unchecked 0
								inv RulebookSucceeds
							code
								inv RulebookFails
						inv !return
							val K_unchecked 1
				constant ConvertToGoingWithPush K_unchecked_function = ConvertToGoingWithPush_B __assimilated=1
			package ImplicitTake_fn _function
				symbol public misc ImplicitTake
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ImplicitTake_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ks
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00347 --> /main/connectors/plug_00347
					symbol external misc TestVisibility --> /main/template/functions/TestVisibility_fn/TestVisibility
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					symbol external misc plug_00348 --> /main/template/variables/keep_silent_var/keep_silent
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc TryAction --> /main/template/functions/TryAction_fn/TryAction
					symbol external misc plug_00254 --> /main/connectors/plug_00254
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					symbol external misc AdjustParagraphPoint --> /main/template/functions/AdjustParagraphPoint_fn/AdjustParagraphPoint
					local obj K_unchecked
					local ks K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked actor
								val K_unchecked player
							code
								inv plug_00347
									val K_unchecked 65
									val K_unchecked obj
							code
								inv !if
									inv TestVisibility
										val K_unchecked player
										val K_unchecked actor
									code
										inv plug_00347
											val K_unchecked 66
											val K_unchecked obj
											val K_unchecked actor
						inv ClearParagraphing
							val K_unchecked 3
						inv !push
							val K_unchecked keep_silent
						inv !store
							reference
								val K_unchecked keep_silent
							val K_unchecked 1
						inv !push
							val K_unchecked say__p
						inv !push
							val K_unchecked say__pc
						inv ClearParagraphing
							val K_unchecked 4
						inv !ifelse
							val K_unchecked act_requester
							code
								inv TryAction
									val K_unchecked 1
									val K_unchecked actor
									val K_unchecked plug_00254
									val K_unchecked obj
									val K_unchecked 0
							code
								inv TryAction
									val K_unchecked 0
									val K_unchecked actor
									val K_unchecked plug_00254
									val K_unchecked obj
									val K_unchecked 0
						inv DivideParagraphPoint
						inv !pull
							reference
								val K_unchecked say__pc
						inv !pull
							reference
								val K_unchecked say__p
						inv AdjustParagraphPoint
						inv !pull
							reference
								val K_unchecked keep_silent
						inv !if
							inv !in
								val K_unchecked obj
								val K_unchecked actor
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ImplicitTake K_unchecked_function = ImplicitTake_B __assimilated=1
			package LookAfterGoing_fn _function
				symbol public misc LookAfterGoing
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LookAfterGoing_B _code
					symbol external misc GoingLookBreak --> /main/template/functions/GoingLookBreak_fn/GoingLookBreak
					symbol external misc AbbreviatedRoomDescription --> /main/template/functions/AbbreviatedRoomDescription_fn/AbbreviatedRoomDescription
					code
						inv GoingLookBreak
						inv AbbreviatedRoomDescription
				constant LookAfterGoing K_unchecked_function = LookAfterGoing_B __assimilated=1
			package AbbreviatedRoomDescription_fn _function
				symbol public misc AbbreviatedRoomDescription
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AbbreviatedRoomDescription_B _code
					symbol private misc prior_action
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc pos
					symbol private misc frame_id
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00346 --> /main/connectors/plug_00346
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_VARIABLES_CREATOR --> /main/template/constants/AD_VARIABLES_CREATOR_con/AD_VARIABLES_CREATOR
					symbol external misc AD_VARIABLES_ID --> /main/template/constants/AD_VARIABLES_ID_con/AD_VARIABLES_ID
					symbol external misc Mstack_Create_Frame --> /main/template/functions/Mstack_Create_Frame_fn/Mstack_Create_Frame
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc SETTING_ACTION_VARIABLES_RB --> /main/template/constants/SETTING_ACTION_VARIABLES_RB_con/SETTING_ACTION_VARIABLES_RB
					symbol external misc MStack --> /main/template/arrays/MStack_arr/MStack
					symbol external misc MstVO --> /main/template/functions/MstVO_fn/MstVO
					symbol external misc plug_00349 --> /main/connectors/plug_00349
					symbol external misc Mstack_Destroy_Frame --> /main/template/functions/Mstack_Destroy_Frame_fn/Mstack_Destroy_Frame
					local prior_action K_unchecked
					local pos K_unchecked
					local frame_id K_unchecked
					code
						inv !store
							reference
								val K_unchecked prior_action
							val K_unchecked action
						inv !store
							reference
								val K_unchecked action
							val K_unchecked plug_00346
						inv !store
							reference
								val K_unchecked pos
							inv FindAction
								val K_unchecked plug_00346
						inv !if
							inv !and
								val K_unchecked pos
								inv !lookup
									val K_unchecked plug_00338
									inv !plus
										val K_unchecked pos
										val K_unchecked AD_VARIABLES_CREATOR
							code
								inv !store
									reference
										val K_unchecked frame_id
									inv !lookup
										val K_unchecked plug_00338
										inv !plus
											val K_unchecked pos
											val K_unchecked AD_VARIABLES_ID
								inv Mstack_Create_Frame
									inv !lookup
										val K_unchecked plug_00338
										inv !plus
											val K_unchecked pos
											val K_unchecked AD_VARIABLES_CREATOR
									val K_unchecked frame_id
								inv FollowRulebook
									val K_unchecked SETTING_ACTION_VARIABLES_RB
								inv !store
									reference
										inv !lookup
											val K_unchecked MStack
											inv MstVO
												val K_unchecked frame_id
												val K_unchecked 0
									val K_unchecked prior_action
								inv !store
									reference
										inv !lookup
											val K_unchecked MStack
											inv MstVO
												val K_unchecked frame_id
												val K_unchecked 1
									val K_unchecked 1
						inv plug_00349
						inv !if
							val K_unchecked frame_id
							code
								inv Mstack_Destroy_Frame
									inv !lookup
										val K_unchecked plug_00338
										inv !plus
											val K_unchecked pos
											val K_unchecked AD_VARIABLES_CREATOR
									val K_unchecked frame_id
						inv !store
							reference
								val K_unchecked action
							val K_unchecked prior_action
				constant AbbreviatedRoomDescription K_unchecked_function = AbbreviatedRoomDescription_B __assimilated=1
			package BeginAction_fn _function
				symbol public misc BeginAction
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BeginAction_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol private misc s
					symbol private misc moi
					symbol private misc notrack
					symbol private misc rv
					symbol external misc ChronologyPoint --> /main/template/functions/ChronologyPoint_fn/ChronologyPoint
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00350 --> /main/connectors/plug_00350
					symbol external misc plug_00351 --> /main/template/variables/multiple_object_item_var/multiple_object_item
					symbol external misc ActionPrimitive --> /main/template/functions/ActionPrimitive_fn/ActionPrimitive
					symbol external misc TrackActions --> /main/template/functions/TrackActions_fn/TrackActions
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					local a K_unchecked
					local n K_unchecked
					local s K_unchecked
					local moi K_unchecked
					local notrack K_unchecked
					local rv K_unchecked
					code
						inv ChronologyPoint
						inv !push
							val K_unchecked action
						inv !push
							val K_unchecked noun
						inv !push
							val K_unchecked second
						inv !push
							val K_unchecked plug_00350
						inv !push
							val K_unchecked multiple_object_item
						inv !store
							reference
								val K_unchecked action
							val K_unchecked a
						inv !store
							reference
								val K_unchecked noun
							val K_unchecked n
						inv !store
							reference
								val K_unchecked second
							val K_unchecked s
						inv !store
							reference
								val K_unchecked plug_00350
							val K_unchecked noun
						inv !store
							reference
								val K_unchecked multiple_object_item
							val K_unchecked moi
						inv !if
							inv !lt
								val K_unchecked action
								val K_unchecked 4096
							code
								inv !store
									reference
										val K_unchecked rv
									inv ActionPrimitive
						inv !pull
							reference
								val K_unchecked multiple_object_item
						inv !pull
							reference
								val K_unchecked plug_00350
						inv !pull
							reference
								val K_unchecked second
						inv !pull
							reference
								val K_unchecked noun
						inv !pull
							reference
								val K_unchecked action
						inv !if
							inv !eq
								val K_unchecked notrack
								val K_unchecked 0
							code
								inv TrackActions
									val K_unchecked 1
									val K_unchecked meta
						inv !return
							val K_unchecked rv
				constant BeginAction K_unchecked_function = BeginAction_B __assimilated=1
			package ActionPrimitive_fn _function
				symbol public misc ActionPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActionPrimitive_B _code
					symbol private misc rv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p1
					symbol private misc p2
					symbol private misc p3
					symbol private misc p4
					symbol private misc p5
					symbol private misc frame_id
					symbol external misc MStack_CreateRBVars --> /main/template/functions/MStack_CreateRBVars_fn/MStack_CreateRBVars
					symbol external misc ACTION_PROCESSING_RB --> /main/template/constants/ACTION_PROCESSING_RB_con/ACTION_PROCESSING_RB
					symbol external misc plug_00348 --> /main/template/variables/keep_silent_var/keep_silent
					symbol external misc plug_00246 --> /main/template/variables/multiflag_var/multiflag
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					symbol external misc plug_00352 --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_VARIABLES_CREATOR --> /main/template/constants/AD_VARIABLES_CREATOR_con/AD_VARIABLES_CREATOR
					symbol external misc AD_VARIABLES_ID --> /main/template/constants/AD_VARIABLES_ID_con/AD_VARIABLES_ID
					symbol external misc Mstack_Create_Frame --> /main/template/functions/Mstack_Create_Frame_fn/Mstack_Create_Frame
					symbol external misc ActionVariablesNotTypeSafe --> /main/template/functions/ActionVariablesNotTypeSafe_fn/ActionVariablesNotTypeSafe
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00326 --> /main/connectors/plug_00326
					symbol external misc Mstack_Destroy_Frame --> /main/template/functions/Mstack_Destroy_Frame_fn/Mstack_Destroy_Frame
					symbol external misc MStack_DestroyRBVars --> /main/template/functions/MStack_DestroyRBVars_fn/MStack_DestroyRBVars
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc SETTING_ACTION_VARIABLES_RB --> /main/template/constants/SETTING_ACTION_VARIABLES_RB_con/SETTING_ACTION_VARIABLES_RB
					symbol external misc TrackActions --> /main/template/functions/TrackActions_fn/TrackActions
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
					symbol external misc DESCEND_TO_SPECIFIC_ACTION_R --> /main/template/functions/DESCEND_TO_SPECIFIC_ACTION_R_fn/DESCEND_TO_SPECIFIC_ACTION_R
					symbol external misc RulebookOutcome --> /main/template/functions/RulebookOutcome_fn/RulebookOutcome
					symbol external misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
					symbol external misc UpdateActionBitmap --> /main/template/functions/UpdateActionBitmap_fn/UpdateActionBitmap
					local rv K_unchecked
					local p1 K_unchecked
					local p2 K_unchecked
					local p3 K_unchecked
					local p4 K_unchecked
					local p5 K_unchecked
					local frame_id K_unchecked
					code
						inv MStack_CreateRBVars
							val K_unchecked ACTION_PROCESSING_RB
						inv !if
							inv !and
								inv !eq
									val K_unchecked keep_silent
									val K_unchecked 0
								inv !eq
									val K_unchecked multiflag
									val K_unchecked 0
							code
								inv DivideParagraphPoint
						inv !store
							reference
								val K_unchecked reason_the_action_failed
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked frame_id
							val K_unchecked -1
						inv !store
							reference
								val K_unchecked p1
							inv FindAction
								val K_unchecked action
						inv !if
							inv !and
								val K_unchecked p1
								inv !lookup
									val K_unchecked plug_00338
									inv !plus
										val K_unchecked p1
										val K_unchecked AD_VARIABLES_CREATOR
							code
								inv !store
									reference
										val K_unchecked frame_id
									inv !lookup
										val K_unchecked plug_00338
										inv !plus
											val K_unchecked p1
											val K_unchecked AD_VARIABLES_ID
								inv Mstack_Create_Frame
									inv !lookup
										val K_unchecked plug_00338
										inv !plus
											val K_unchecked p1
											val K_unchecked AD_VARIABLES_CREATOR
									val K_unchecked frame_id
						inv !if
							inv ActionVariablesNotTypeSafe
							code
								inv !if
									inv !ne
										val K_unchecked actor
										val K_unchecked player
									code
										inv plug_00326
											val K_unchecked 75
										inv !print
											val K_unchecked "\n"
								inv !if
									inv !ne
										val K_unchecked frame_id
										val K_unchecked -1
									code
										inv Mstack_Destroy_Frame
											inv !lookup
												val K_unchecked plug_00338
												inv !plus
													val K_unchecked p1
													val K_unchecked AD_VARIABLES_CREATOR
											val K_unchecked frame_id
								inv MStack_DestroyRBVars
									val K_unchecked ACTION_PROCESSING_RB
								inv !return
									val K_unchecked 1
						inv FollowRulebook
							val K_unchecked SETTING_ACTION_VARIABLES_RB
						inv TrackActions
							val K_unchecked 0
							val K_unchecked meta
						inv !ifelse
							inv !and
								val K_unchecked meta
								inv !ne
									val K_unchecked actor
									val K_unchecked player
							code
								inv plug_00326
									val K_unchecked 65
									val K_unchecked actor
								inv !print
									val K_unchecked "\n"
								inv !store
									reference
										val K_unchecked rv
									val K_unchecked RS_FAILS
							code
								inv !ifelse
									val K_unchecked meta
									code
										inv DESCEND_TO_SPECIFIC_ACTION_R
										inv !store
											reference
												val K_unchecked rv
											inv RulebookOutcome
									code
										inv FollowRulebook
											val K_unchecked ACTION_PROCESSING_RB
										inv !store
											reference
												val K_unchecked rv
											inv RulebookOutcome
						inv !if
							inv !eq
								val K_unchecked rv
								val K_unchecked RS_SUCCEEDS
							code
								inv UpdateActionBitmap
						inv !if
							inv !ne
								val K_unchecked frame_id
								val K_unchecked -1
							code
								inv !store
									reference
										val K_unchecked p1
									inv FindAction
										val K_unchecked action
								inv Mstack_Destroy_Frame
									inv !lookup
										val K_unchecked plug_00338
										inv !plus
											val K_unchecked p1
											val K_unchecked AD_VARIABLES_CREATOR
									val K_unchecked frame_id
						inv MStack_DestroyRBVars
							val K_unchecked ACTION_PROCESSING_RB
						inv !if
							inv !and
								inv !eq
									val K_unchecked keep_silent
									val K_unchecked 0
								inv !eq
									val K_unchecked multiflag
									val K_unchecked 0
							code
								inv DivideParagraphPoint
						inv !if
							inv !eq
								val K_unchecked rv
								val K_unchecked RS_SUCCEEDS
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ActionPrimitive K_unchecked_function = ActionPrimitive_B __assimilated=1
			package ACTION_PROCESSING_INTERNAL_R_fn _function
				symbol public misc ACTION_PROCESSING_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ACTION_PROCESSING_INTERNAL_R_B _code
					code
				constant ACTION_PROCESSING_INTERNAL_R K_unchecked_function = ACTION_PROCESSING_INTERNAL_R_B __assimilated=1
			package ActionVariablesNotTypeSafe_fn _function
				symbol public misc ActionVariablesNotTypeSafe
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActionVariablesNotTypeSafe_B _code
					symbol private misc mask
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc noun_kova
					symbol private misc second_kova
					symbol private misc at
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
					symbol external misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
					symbol external misc plug_00343 --> /main/connectors/plug_00343
					symbol external misc plug_00341 --> /main/connectors/plug_00341
					symbol external misc plug_00323 --> /main/template/variables/inp1_var/inp1
					symbol external misc plug_00324 --> /main/template/variables/inp2_var/inp2
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc plug_00260 --> /main/template/variables/consult_from_var/consult_from
					symbol external misc plug_00261 --> /main/template/variables/consult_words_var/consult_words
					symbol external misc AD_REQUIREMENTS --> /main/template/constants/AD_REQUIREMENTS_con/AD_REQUIREMENTS
					symbol external misc OUT_OF_WORLD_ABIT --> /main/template/constants/OUT_OF_WORLD_ABIT_con/OUT_OF_WORLD_ABIT
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00326 --> /main/connectors/plug_00326
					symbol external misc NEED_NOUN_ABIT --> /main/template/constants/NEED_NOUN_ABIT_con/NEED_NOUN_ABIT
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc SUPPLYING_A_MISSING_NOUN_ACT --> /main/template/constants/SUPPLYING_A_MISSING_NOUN_ACT_con/SUPPLYING_A_MISSING_NOUN_ACT
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc NEED_SECOND_ABIT --> /main/template/constants/NEED_SECOND_ABIT_con/NEED_SECOND_ABIT
					symbol external misc SUPPLYING_A_MISSING_SECOND_ACT --> /main/template/constants/SUPPLYING_A_MISSING_SECOND_ACT_con/SUPPLYING_A_MISSING_SECOND_ACT
					local mask K_unchecked
					local noun_kova K_unchecked
					local second_kova K_unchecked
					local at K_unchecked
					code
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								val K_unchecked -1
						inv !if
							inv !eq
								val K_unchecked at
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked noun_kova
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_NOUN_KOV
						inv !store
							reference
								val K_unchecked second_kova
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_SECOND_KOV
						inv !if
							inv !eq
								val K_unchecked noun_kova
								inv !alternative
									val K_unchecked plug_00343
									val K_unchecked plug_00341
							code
								inv !if
									inv !ne
										val K_unchecked inp1
										val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked inp2
											val K_unchecked inp1
										inv !store
											reference
												val K_unchecked second
											val K_unchecked noun
								inv !store
									reference
										val K_unchecked parsed_number
									inv !plus
										inv !times
											val K_unchecked 100
											val K_unchecked consult_from
										val K_unchecked consult_words
								inv !store
									reference
										val K_unchecked inp1
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked second_kova
								inv !alternative
									val K_unchecked plug_00343
									val K_unchecked plug_00341
							code
								inv !store
									reference
										val K_unchecked parsed_number
									inv !plus
										inv !times
											val K_unchecked 100
											val K_unchecked consult_from
										val K_unchecked consult_words
								inv !store
									reference
										val K_unchecked inp2
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked second
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked mask
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_REQUIREMENTS
						inv !if
							inv !bitwiseand
								val K_unchecked mask
								val K_unchecked OUT_OF_WORLD_ABIT
							code
								inv !store
									reference
										val K_unchecked meta
									val K_unchecked 1
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked meta
							val K_unchecked 0
						inv !ifelse
							inv !eq
								val K_unchecked inp1
								val K_unchecked 1
							code
								inv !if
									inv !eq
										val K_unchecked noun_kova
										val K_unchecked plug_00340
									code
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00326
													val K_unchecked 66
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
							code
								inv !if
									inv !ne
										val K_unchecked noun_kova
										val K_unchecked plug_00340
									code
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00326
													val K_unchecked 67
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
								inv !if
									inv !and
										inv !bitwiseand
											val K_unchecked mask
											val K_unchecked NEED_NOUN_ABIT
										inv !eq
											val K_unchecked noun
											val K_unchecked 0
									code
										inv !push
											val K_unchecked act_requester
										inv !store
											reference
												val K_unchecked act_requester
											val K_unchecked 0
										inv CarryOutActivity
											val K_unchecked SUPPLYING_A_MISSING_NOUN_ACT
										inv !pull
											reference
												val K_unchecked act_requester
										inv !if
											inv !eq
												val K_unchecked noun
												val K_unchecked 0
											code
												inv !if
													val K_unchecked say__p
													code
														inv !return
															val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked actor
														val K_unchecked player
													code
														inv plug_00326
															val K_unchecked 68
														inv !print
															val K_unchecked "\n"
												inv !return
													val K_unchecked 1
								inv !if
									inv !and
										inv !eq
											inv !bitwiseand
												val K_unchecked mask
												val K_unchecked NEED_NOUN_ABIT
											val K_unchecked 0
										inv !ne
											val K_unchecked noun
											val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00326
													val K_unchecked 69
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked inp2
								val K_unchecked 1
							code
								inv !if
									inv !eq
										val K_unchecked second_kova
										val K_unchecked plug_00340
									code
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00326
													val K_unchecked 70
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
							code
								inv !if
									inv !ne
										val K_unchecked second_kova
										val K_unchecked plug_00340
									code
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00326
													val K_unchecked 71
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
								inv !if
									inv !and
										inv !bitwiseand
											val K_unchecked mask
											val K_unchecked NEED_SECOND_ABIT
										inv !eq
											val K_unchecked second
											val K_unchecked 0
									code
										inv !push
											val K_unchecked act_requester
										inv !store
											reference
												val K_unchecked act_requester
											val K_unchecked 0
										inv CarryOutActivity
											val K_unchecked SUPPLYING_A_MISSING_SECOND_ACT
										inv !pull
											reference
												val K_unchecked act_requester
										inv !if
											inv !eq
												val K_unchecked second
												val K_unchecked 0
											code
												inv !if
													val K_unchecked say__p
													code
														inv !return
															val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked actor
														val K_unchecked player
													code
														inv plug_00326
															val K_unchecked 72
														inv !print
															val K_unchecked "\n"
												inv !return
													val K_unchecked 1
								inv !if
									inv !and
										inv !eq
											inv !bitwiseand
												val K_unchecked mask
												val K_unchecked NEED_SECOND_ABIT
											val K_unchecked 0
										inv !ne
											val K_unchecked second
											val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked actor
												val K_unchecked player
											code
												inv plug_00326
													val K_unchecked 73
												inv !print
													val K_unchecked "\n"
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ActionVariablesNotTypeSafe K_unchecked_function = ActionVariablesNotTypeSafe_B __assimilated=1
			package BASIC_VISIBILITY_R_fn _function
				symbol public misc BASIC_VISIBILITY_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BASIC_VISIBILITY_R_B _code
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc NeedLightForAction --> /main/template/functions/NeedLightForAction_fn/NeedLightForAction
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc VISIBLE_RB --> /main/template/constants/VISIBLE_RB_con/VISIBLE_RB
					symbol external misc RulebookSucceeded --> /main/template/functions/RulebookSucceeded_fn/RulebookSucceeded
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc REFUSAL_TO_ACT_IN_DARK_ACT --> /main/template/constants/REFUSAL_TO_ACT_IN_DARK_ACT_con/REFUSAL_TO_ACT_IN_DARK_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc plug_00353 --> /main/connectors/plug_00353
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					symbol external misc plug_00352 --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
					symbol external misc BASIC_VISIBILITY_R --> /main/template/functions/BASIC_VISIBILITY_R_fn/BASIC_VISIBILITY_R
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					code
						inv !if
							val K_unchecked act_requester
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !and
									inv !and
										inv NeedLightForAction
										inv !eq
											val K_unchecked actor
											val K_unchecked player
									inv FollowRulebook
										val K_unchecked VISIBLE_RB
								inv RulebookSucceeded
							code
								inv BeginActivity
									val K_unchecked REFUSAL_TO_ACT_IN_DARK_ACT
								inv !if
									inv !eq
										inv ForActivity
											val K_unchecked REFUSAL_TO_ACT_IN_DARK_ACT
										val K_unchecked 0
									code
										inv plug_00353
											val K_unchecked 65
										inv !print
											val K_unchecked "\n"
								inv EndActivity
									val K_unchecked REFUSAL_TO_ACT_IN_DARK_ACT
								inv !store
									reference
										val K_unchecked reason_the_action_failed
									val K_unchecked BASIC_VISIBILITY_R
								inv RulebookFails
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant BASIC_VISIBILITY_R K_unchecked_function = BASIC_VISIBILITY_R_B __assimilated=1
			package BASIC_ACCESSIBILITY_R_fn _function
				symbol public misc BASIC_ACCESSIBILITY_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BASIC_ACCESSIBILITY_R_B _code
					symbol private misc mask
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_REQUIREMENTS --> /main/template/constants/AD_REQUIREMENTS_con/AD_REQUIREMENTS
					symbol external misc TOUCH_NOUN_ABIT --> /main/template/constants/TOUCH_NOUN_ABIT_con/TOUCH_NOUN_ABIT
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00323 --> /main/template/variables/inp1_var/inp1
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					symbol external misc plug_00352 --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
					symbol external misc BASIC_ACCESSIBILITY_R --> /main/template/functions/BASIC_ACCESSIBILITY_R_fn/BASIC_ACCESSIBILITY_R
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00354 --> /main/connectors/plug_00354
					symbol external misc ObjectIsUntouchable --> /main/template/functions/ObjectIsUntouchable_fn/ObjectIsUntouchable
					symbol external misc TOUCH_SECOND_ABIT --> /main/template/constants/TOUCH_SECOND_ABIT_con/TOUCH_SECOND_ABIT
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00324 --> /main/template/variables/inp2_var/inp2
					local mask K_unchecked
					local at K_unchecked
					code
						inv !if
							val K_unchecked act_requester
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								val K_unchecked -1
						inv !if
							inv !eq
								val K_unchecked at
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked mask
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_REQUIREMENTS
						inv !if
							inv !and
								inv !and
									inv !bitwiseand
										val K_unchecked mask
										val K_unchecked TOUCH_NOUN_ABIT
									val K_unchecked noun
								inv !ne
									val K_unchecked inp1
									val K_unchecked 1
							code
								inv !if
									inv !ofclass
										val K_unchecked noun
										val K_unchecked plug_00241
									code
										inv RulebookFails
										inv !store
											reference
												val K_unchecked reason_the_action_failed
											val K_unchecked BASIC_ACCESSIBILITY_R
										inv !if
											inv !ne
												val K_unchecked actor
												val K_unchecked player
											code
												inv !return
													val K_unchecked 1
										inv plug_00354
											val K_unchecked 65
										inv !print
											val K_unchecked "\n"
										inv RulebookFails
										inv !store
											reference
												val K_unchecked reason_the_action_failed
											val K_unchecked BASIC_ACCESSIBILITY_R
										inv !return
											val K_unchecked 1
								inv !if
									inv ObjectIsUntouchable
										val K_unchecked noun
										inv !ne
											val K_unchecked actor
											val K_unchecked player
										val K_unchecked actor
									code
										inv RulebookFails
										inv !store
											reference
												val K_unchecked reason_the_action_failed
											val K_unchecked BASIC_ACCESSIBILITY_R
										inv !return
											val K_unchecked 1
						inv !if
							inv !and
								inv !and
									inv !bitwiseand
										val K_unchecked mask
										val K_unchecked TOUCH_SECOND_ABIT
									val K_unchecked second
								inv !ne
									val K_unchecked inp2
									val K_unchecked 1
							code
								inv !if
									inv !ofclass
										val K_unchecked second
										val K_unchecked plug_00241
									code
										inv RulebookFails
										inv !store
											reference
												val K_unchecked reason_the_action_failed
											val K_unchecked BASIC_ACCESSIBILITY_R
										inv !if
											inv !ne
												val K_unchecked actor
												val K_unchecked player
											code
												inv !return
													val K_unchecked 1
										inv plug_00354
											val K_unchecked 65
										inv !print
											val K_unchecked "\n"
										inv RulebookFails
										inv !store
											reference
												val K_unchecked reason_the_action_failed
											val K_unchecked BASIC_ACCESSIBILITY_R
										inv !return
											val K_unchecked 1
								inv !if
									inv ObjectIsUntouchable
										val K_unchecked second
										inv !ne
											val K_unchecked actor
											val K_unchecked player
										val K_unchecked actor
									code
										inv RulebookFails
										inv !store
											reference
												val K_unchecked reason_the_action_failed
											val K_unchecked BASIC_ACCESSIBILITY_R
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant BASIC_ACCESSIBILITY_R K_unchecked_function = BASIC_ACCESSIBILITY_R_B __assimilated=1
			package CARRYING_REQUIREMENTS_R_fn _function
				symbol public misc CARRYING_REQUIREMENTS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CARRYING_REQUIREMENTS_R_B _code
					symbol private misc mask
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_REQUIREMENTS --> /main/template/constants/AD_REQUIREMENTS_con/AD_REQUIREMENTS
					symbol external misc TOUCH_NOUN_ABIT --> /main/template/constants/TOUCH_NOUN_ABIT_con/TOUCH_NOUN_ABIT
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00323 --> /main/template/variables/inp1_var/inp1
					symbol external misc CARRY_NOUN_ABIT --> /main/template/constants/CARRY_NOUN_ABIT_con/CARRY_NOUN_ABIT
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc IMPLICITLY_TAKING_ACT --> /main/template/constants/IMPLICITLY_TAKING_ACT_con/IMPLICITLY_TAKING_ACT
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					symbol external misc plug_00352 --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
					symbol external misc CARRYING_REQUIREMENTS_R --> /main/template/functions/CARRYING_REQUIREMENTS_R_fn/CARRYING_REQUIREMENTS_R
					symbol external misc TOUCH_SECOND_ABIT --> /main/template/constants/TOUCH_SECOND_ABIT_con/TOUCH_SECOND_ABIT
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00324 --> /main/template/variables/inp2_var/inp2
					symbol external misc CARRY_SECOND_ABIT --> /main/template/constants/CARRY_SECOND_ABIT_con/CARRY_SECOND_ABIT
					local mask K_unchecked
					local at K_unchecked
					code
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								val K_unchecked -1
						inv !if
							inv !eq
								val K_unchecked at
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked mask
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_REQUIREMENTS
						inv !if
							inv !and
								inv !and
									inv !bitwiseand
										val K_unchecked mask
										val K_unchecked TOUCH_NOUN_ABIT
									val K_unchecked noun
								inv !ne
									val K_unchecked inp1
									val K_unchecked 1
							code
								inv !if
									inv !and
										inv !bitwiseand
											val K_unchecked mask
											val K_unchecked CARRY_NOUN_ABIT
										inv !notin
											val K_unchecked noun
											val K_unchecked actor
									code
										inv CarryOutActivity
											val K_unchecked IMPLICITLY_TAKING_ACT
											val K_unchecked noun
										inv !if
											inv !notin
												val K_unchecked noun
												val K_unchecked actor
											code
												inv RulebookFails
												inv !store
													reference
														val K_unchecked reason_the_action_failed
													val K_unchecked CARRYING_REQUIREMENTS_R
												inv !return
													val K_unchecked 1
						inv !if
							inv !and
								inv !and
									inv !bitwiseand
										val K_unchecked mask
										val K_unchecked TOUCH_SECOND_ABIT
									val K_unchecked second
								inv !ne
									val K_unchecked inp2
									val K_unchecked 1
							code
								inv !if
									inv !and
										inv !bitwiseand
											val K_unchecked mask
											val K_unchecked CARRY_SECOND_ABIT
										inv !notin
											val K_unchecked second
											val K_unchecked actor
									code
										inv CarryOutActivity
											val K_unchecked IMPLICITLY_TAKING_ACT
											val K_unchecked second
										inv !if
											inv !notin
												val K_unchecked second
												val K_unchecked actor
											code
												inv RulebookFails
												inv !store
													reference
														val K_unchecked reason_the_action_failed
													val K_unchecked CARRYING_REQUIREMENTS_R
												inv !return
													val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CARRYING_REQUIREMENTS_R K_unchecked_function = CARRYING_REQUIREMENTS_R_B __assimilated=1
			package STANDARD_IMPLICIT_TAKING_R_fn _function
				symbol public misc STANDARD_IMPLICIT_TAKING_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STANDARD_IMPLICIT_TAKING_R_B _code
					symbol external misc ImplicitTake --> /main/template/functions/ImplicitTake_fn/ImplicitTake
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv ImplicitTake
							val K_unchecked parameter_value
						inv !return
							val K_unchecked 0
				constant STANDARD_IMPLICIT_TAKING_R K_unchecked_function = STANDARD_IMPLICIT_TAKING_R_B __assimilated=1
			package REQUESTED_ACTIONS_REQUIRE_R_fn _function
				symbol public misc REQUESTED_ACTIONS_REQUIRE_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REQUESTED_ACTIONS_REQUIRE_R_B _code
					symbol private misc rv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc PERSUADE_RB --> /main/template/constants/PERSUADE_RB_con/PERSUADE_RB
					symbol external misc RulebookSucceeded --> /main/template/functions/RulebookSucceeded_fn/RulebookSucceeded
					symbol external misc plug_00305 --> /main/template/variables/deadflag_var/deadflag
					symbol external misc plug_00355 --> /main/connectors/plug_00355
					symbol external misc ActRulebookFails --> /main/template/functions/ActRulebookFails_fn/ActRulebookFails
					local rv K_unchecked
					code
						inv !if
							inv !and
								inv !ne
									val K_unchecked actor
									val K_unchecked player
								val K_unchecked act_requester
							code
								inv !push
									val K_unchecked say__p
								inv !store
									reference
										val K_unchecked say__p
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked rv
									inv FollowRulebook
										val K_unchecked PERSUADE_RB
								inv !if
									inv !eq
										inv RulebookSucceeded
										val K_unchecked 0
									code
										inv !if
											inv !and
												inv !eq
													val K_unchecked deadflag
													val K_unchecked 0
												inv !eq
													val K_unchecked say__p
													val K_unchecked 0
											code
												inv plug_00355
													val K_unchecked 65
													val K_unchecked actor
												inv !print
													val K_unchecked "\n"
										inv ActRulebookFails
											val K_unchecked rv
										inv !return
											val K_unchecked 1
								inv !pull
									reference
										val K_unchecked say__p
						inv !return
							val K_unchecked 0
				constant REQUESTED_ACTIONS_REQUIRE_R K_unchecked_function = REQUESTED_ACTIONS_REQUIRE_R_B __assimilated=1
			package CARRY_OUT_REQUESTED_ACTIONS_R_fn _function
				symbol public misc CARRY_OUT_REQUESTED_ACTIONS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CARRY_OUT_REQUESTED_ACTIONS_R_B _code
					symbol private misc rv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc plug_00305 --> /main/template/variables/deadflag_var/deadflag
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc UNSUCCESSFUL_ATTEMPT_RB --> /main/template/constants/UNSUCCESSFUL_ATTEMPT_RB_con/UNSUCCESSFUL_ATTEMPT_RB
					symbol external misc plug_00356 --> /main/connectors/plug_00356
					symbol external misc AFTER_RB --> /main/template/constants/AFTER_RB_con/AFTER_RB
					symbol external misc ActRulebookSucceeds --> /main/template/functions/ActRulebookSucceeds_fn/ActRulebookSucceeds
					local rv K_unchecked
					code
						inv !if
							inv !and
								inv !ne
									val K_unchecked actor
									val K_unchecked player
								val K_unchecked act_requester
							code
								inv !push
									val K_unchecked act_requester
								inv !store
									reference
										val K_unchecked act_requester
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked rv
									inv BeginAction
										val K_unchecked action
										val K_unchecked noun
										val K_unchecked second
								inv !if
									inv !and
										inv !or
											val K_unchecked meta
											inv !eq
												val K_unchecked rv
												val K_unchecked 0
										inv !eq
											val K_unchecked deadflag
											val K_unchecked 0
									code
										inv !if
											inv !eq
												inv FollowRulebook
													val K_unchecked UNSUCCESSFUL_ATTEMPT_RB
												val K_unchecked 0
											code
												inv plug_00356
													val K_unchecked 65
													val K_unchecked actor
												inv !print
													val K_unchecked "\n"
								inv !pull
									reference
										val K_unchecked act_requester
								inv FollowRulebook
									val K_unchecked AFTER_RB
								inv ActRulebookSucceeds
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CARRY_OUT_REQUESTED_ACTIONS_R K_unchecked_function = CARRY_OUT_REQUESTED_ACTIONS_R_B __assimilated=1
			package GenericVerbSub_fn _function
				symbol public misc GenericVerbSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GenericVerbSub_B _code
					symbol private misc ch
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc co
					symbol private misc re
					symbol private misc vis
					symbol private misc rv
					symbol external misc plug_00344 --> /main/template/variables/converted_action_outcome_var/converted_action_outcome
					symbol external misc Details_of_Specific_Action --> /main/template/arrays/Details_of_Specific_Action_arr/Details_of_Specific_Action
					symbol external misc plug_00222 --> /main/template/variables/meta_var/meta
					symbol external misc plug_00348 --> /main/template/variables/keep_silent_var/keep_silent
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc SPECIFIC_ACTION_PROCESSING_RB --> /main/template/constants/SPECIFIC_ACTION_PROCESSING_RB_con/SPECIFIC_ACTION_PROCESSING_RB
					symbol external misc RulebookFailed --> /main/template/functions/RulebookFailed_fn/RulebookFailed
					symbol external misc ActRulebookSucceeds --> /main/template/functions/ActRulebookSucceeds_fn/ActRulebookSucceeds
					local ch K_unchecked
					local co K_unchecked
					local re K_unchecked
					local vis K_unchecked
					local rv K_unchecked
					code
						inv !push
							val K_unchecked converted_action_outcome
						inv !store
							reference
								val K_unchecked converted_action_outcome
							val K_unchecked -1
						inv !store
							reference
								inv !lookup
									val K_unchecked Details_of_Specific_Action
									val K_unchecked 0
							val K_unchecked 1
						inv !if
							val K_unchecked meta
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked Details_of_Specific_Action
											val K_unchecked 0
									val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked Details_of_Specific_Action
									val K_unchecked 1
							val K_unchecked keep_silent
						inv !store
							reference
								inv !lookup
									val K_unchecked Details_of_Specific_Action
									val K_unchecked 2
							val K_unchecked ch
						inv !store
							reference
								inv !lookup
									val K_unchecked Details_of_Specific_Action
									val K_unchecked 3
							val K_unchecked co
						inv !store
							reference
								inv !lookup
									val K_unchecked Details_of_Specific_Action
									val K_unchecked 4
							val K_unchecked re
						inv FollowRulebook
							val K_unchecked SPECIFIC_ACTION_PROCESSING_RB
							val K_unchecked 0
							val K_unchecked 1
						inv !if
							inv !and
								inv RulebookFailed
								inv !eq
									val K_unchecked converted_action_outcome
									val K_unchecked 1
							code
								inv ActRulebookSucceeds
						inv !pull
							reference
								val K_unchecked converted_action_outcome
						inv !return
							val K_unchecked 1
				constant GenericVerbSub K_unchecked_function = GenericVerbSub_B __assimilated=1
			package WORK_OUT_DETAILS_OF_SPECIFIC_R_fn _function
				symbol public misc WORK_OUT_DETAILS_OF_SPECIFIC_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WORK_OUT_DETAILS_OF_SPECIFIC_R_B _code
					symbol external misc MStack --> /main/template/arrays/MStack_arr/MStack
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc MstVO --> /main/template/functions/MstVO_fn/MstVO
					symbol external misc SPECIFIC_ACTION_PROCESSING_RB --> /main/template/constants/SPECIFIC_ACTION_PROCESSING_RB_con/SPECIFIC_ACTION_PROCESSING_RB
					symbol external misc Details_of_Specific_Action --> /main/template/arrays/Details_of_Specific_Action_arr/Details_of_Specific_Action
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked MStack
									inv MstVO
										val K_unchecked SPECIFIC_ACTION_PROCESSING_RB
										val K_unchecked 0
							inv !lookup
								val K_unchecked Details_of_Specific_Action
								val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked MStack
									inv MstVO
										val K_unchecked SPECIFIC_ACTION_PROCESSING_RB
										val K_unchecked 1
							inv !lookup
								val K_unchecked Details_of_Specific_Action
								val K_unchecked 1
						inv !store
							reference
								inv !lookup
									val K_unchecked MStack
									inv MstVO
										val K_unchecked SPECIFIC_ACTION_PROCESSING_RB
										val K_unchecked 2
							inv !lookup
								val K_unchecked Details_of_Specific_Action
								val K_unchecked 2
						inv !store
							reference
								inv !lookup
									val K_unchecked MStack
									inv MstVO
										val K_unchecked SPECIFIC_ACTION_PROCESSING_RB
										val K_unchecked 3
							inv !lookup
								val K_unchecked Details_of_Specific_Action
								val K_unchecked 3
						inv !store
							reference
								inv !lookup
									val K_unchecked MStack
									inv MstVO
										val K_unchecked SPECIFIC_ACTION_PROCESSING_RB
										val K_unchecked 4
							inv !lookup
								val K_unchecked Details_of_Specific_Action
								val K_unchecked 4
						inv !return
							val K_unchecked 0
				constant WORK_OUT_DETAILS_OF_SPECIFIC_R K_unchecked_function = WORK_OUT_DETAILS_OF_SPECIFIC_R_B __assimilated=1
			package TestActionBitmap_fn _function
				symbol public misc TestActionBitmap
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestActionBitmap_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc act
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc bitmap
					symbol external misc plug_00357 --> /main/connectors/plug_00357
					symbol external misc plug_00358 --> /main/connectors/plug_00358
					symbol external misc ActionCount --> /main/template/constants/ActionCount_con/ActionCount
					symbol external misc plug_00359 --> /main/connectors/plug_00359
					local obj K_unchecked
					local act K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local bitmap K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked bitmap
									val K_unchecked plug_00357
							code
								inv !if
									inv !not
										inv !provides
											val K_unchecked obj
											val K_unchecked plug_00358
									code
										inv !return
											val K_unchecked 0
								inv !store
									reference
										val K_unchecked bitmap
									inv !propertyaddress
										val K_unchecked obj
										val K_unchecked plug_00358
						inv !if
							inv !eq
								val K_unchecked act
								val K_unchecked -1
							code
								inv !return
									inv !ne
										inv !bitwiseand
											inv !lookupbyte
												val K_unchecked bitmap
												val K_unchecked 0
											val K_unchecked 1
										val K_unchecked 0
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked i
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked k
									val K_unchecked 2
							inv !lt
								val K_unchecked i
								val K_unchecked ActionCount
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										val K_unchecked act
										inv !lookup
											val K_unchecked plug_00359
											val K_unchecked i
									code
										inv !return
											inv !ne
												inv !bitwiseand
													inv !lookupbyte
														val K_unchecked bitmap
														val K_unchecked j
													val K_unchecked k
												val K_unchecked 0
								inv !store
									reference
										val K_unchecked k
									inv !times
										val K_unchecked k
										val K_unchecked 2
								inv !if
									inv !eq
										val K_unchecked k
										val K_unchecked 256
									code
										inv !store
											reference
												val K_unchecked k
											val K_unchecked 1
										inv !postincrement
											reference
												val K_unchecked j
						inv !return
							val K_unchecked 0
				constant TestActionBitmap K_unchecked_function = TestActionBitmap_B __assimilated=1
			package UpdateActionBitmap_fn _function
				symbol public misc UpdateActionBitmap
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package UpdateActionBitmap_B _code
					symbol external misc SetActionBitmap --> /main/template/functions/SetActionBitmap_fn/SetActionBitmap
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00239 --> /main/connectors/plug_00239
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc plug_00360 --> /main/connectors/plug_00360
					code
						inv SetActionBitmap
							val K_unchecked noun
							val K_unchecked action
						inv !if
							inv !eq
								val K_unchecked action
								val K_unchecked plug_00239
							code
								inv SetActionBitmap
									val K_unchecked location
									val K_unchecked plug_00360
				constant UpdateActionBitmap K_unchecked_function = UpdateActionBitmap_B __assimilated=1
			package SetActionBitmap_fn _function
				symbol public misc SetActionBitmap
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetActionBitmap_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc act
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc bitmap
					symbol external misc ActionCount --> /main/template/constants/ActionCount_con/ActionCount
					symbol external misc plug_00359 --> /main/connectors/plug_00359
					symbol external misc plug_00358 --> /main/connectors/plug_00358
					symbol external misc plug_00357 --> /main/connectors/plug_00357
					local obj K_unchecked
					local act K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local bitmap K_unchecked
					code
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked i
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked k
									val K_unchecked 2
							inv !lt
								val K_unchecked i
								val K_unchecked ActionCount
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										val K_unchecked act
										inv !lookup
											val K_unchecked plug_00359
											val K_unchecked i
									code
										inv !if
											inv !provides
												val K_unchecked obj
												val K_unchecked plug_00358
											code
												inv !store
													reference
														val K_unchecked bitmap
													inv !propertyaddress
														val K_unchecked obj
														val K_unchecked plug_00358
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked bitmap
															val K_unchecked 0
													inv !bitwiseor
														inv !lookupbyte
															val K_unchecked bitmap
															val K_unchecked 0
														val K_unchecked 1
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked bitmap
															val K_unchecked j
													inv !bitwiseor
														inv !lookupbyte
															val K_unchecked bitmap
															val K_unchecked j
														val K_unchecked k
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked plug_00357
													val K_unchecked 0
											inv !bitwiseor
												inv !lookupbyte
													val K_unchecked plug_00357
													val K_unchecked 0
												val K_unchecked 1
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked plug_00357
													val K_unchecked j
											inv !bitwiseor
												inv !lookupbyte
													val K_unchecked plug_00357
													val K_unchecked j
												val K_unchecked k
								inv !store
									reference
										val K_unchecked k
									inv !times
										val K_unchecked k
										val K_unchecked 2
								inv !if
									inv !eq
										val K_unchecked k
										val K_unchecked 256
									code
										inv !store
											reference
												val K_unchecked k
											val K_unchecked 1
										inv !postincrement
											reference
												val K_unchecked j
				constant SetActionBitmap K_unchecked_function = SetActionBitmap_B __assimilated=1
			package SayActionName_fn _function
				symbol public misc SayActionName
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SayActionName_B _code
					symbol private misc act
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc DB_Action --> /main/template/functions/DB_Action_fn/DB_Action
					local act K_unchecked
					code
						inv DB_Action
							val K_unchecked 0
							val K_unchecked 0
							val K_unchecked act
							val K_unchecked 0
							val K_unchecked 0
							val K_unchecked 2
				constant SayActionName K_unchecked_function = SayActionName_B __assimilated=1
			package DA_Name_fn _function
				symbol public misc DA_Name
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DA_Name_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					local n K_unchecked
					code
						inv !ifelse
							inv !ofclass
								val K_unchecked n
								val K_unchecked plug_00241
							code
								inv !printname
									val K_unchecked n
							code
								inv !printdef
									val K_unchecked n
				constant DA_Name K_unchecked_function = DA_Name_B __assimilated=1
			package DA_Topic_fn _function
				symbol public misc DA_Topic
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DA_Topic_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc a
					symbol private misc b
					symbol private misc c
					symbol private misc d
					symbol private misc i
					symbol private misc cf
					symbol private misc cw
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc WordLength --> /main/template/functions/WordLength_fn/WordLength
					local x K_unchecked
					local a K_unchecked
					local b K_unchecked
					local c K_unchecked
					local d K_unchecked
					local i K_unchecked
					local cf K_unchecked
					local cw K_unchecked
					code
						inv !store
							reference
								val K_unchecked cw
							inv !modulo
								val K_unchecked x
								val K_unchecked 100
						inv !store
							reference
								val K_unchecked cf
							inv !divide
								val K_unchecked x
								val K_unchecked 100
						inv !print
							val K_unchecked "\""
						inv !for
							inv !store
								reference
									val K_unchecked a
								val K_unchecked cf
							inv !lt
								val K_unchecked d
								val K_unchecked cw
							inv !sequential
								inv !postincrement
									reference
										val K_unchecked d
								inv !postincrement
									reference
										val K_unchecked a
							code
								inv !store
									reference
										val K_unchecked wn
									val K_unchecked a
								inv !store
									reference
										val K_unchecked b
									inv WordAddress
										val K_unchecked a
								inv !store
									reference
										val K_unchecked c
									inv WordLength
										val K_unchecked a
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked b
									inv !lt
										val K_unchecked i
										inv !plus
											val K_unchecked b
											val K_unchecked c
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !printchar
											inv !lookupbyte
												val K_unchecked 0
												val K_unchecked i
								inv !if
									inv !lt
										val K_unchecked d
										inv !minus
											val K_unchecked cw
											val K_unchecked 1
									code
										inv !print
											val K_unchecked " "
						inv !print
							val K_unchecked "\""
				constant DA_Topic K_unchecked_function = DA_Topic_B __assimilated=1
			package DA_Number_fn _function
				symbol public misc DA_Number
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DA_Number_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local n K_unchecked
					code
						inv !printnumber
							val K_unchecked n
				constant DA_Number K_unchecked_function = DA_Number_B __assimilated=1
			package DA_TruthState_fn _function
				symbol public misc DA_TruthState
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DA_TruthState_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local n K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked n
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "false"
							code
								inv !print
									val K_unchecked "true"
				constant DA_TruthState K_unchecked_function = DA_TruthState_B __assimilated=1
			package DB_Action_fn _function
				symbol public misc DB_Action
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DB_Action_B _code
					symbol private misc ac
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc acr
					symbol private misc act
					symbol private misc n
					symbol private misc s
					symbol private misc for_say
					symbol private misc t
					symbol private misc at
					symbol private misc l
					symbol private misc j
					symbol private misc v
					symbol private misc c
					symbol private misc clc
					symbol external misc plug_00361 --> /main/template/variables/debug_rule_nesting_var/debug_rule_nesting
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00362 --> /main/connectors/plug_00362
					symbol external misc plug_00348 --> /main/template/variables/keep_silent_var/keep_silent
					local ac K_unchecked
					local acr K_unchecked
					local act K_unchecked
					local n K_unchecked
					local s K_unchecked
					local for_say K_unchecked
					local t K_unchecked
					local at K_unchecked
					local l K_unchecked
					local j K_unchecked
					local v K_unchecked
					local c K_unchecked
					local clc K_unchecked
					code
						inv !if
							inv !and
								inv !eq
									val K_unchecked for_say
									val K_unchecked 0
								inv !gt
									val K_unchecked debug_rule_nesting
									val K_unchecked 0
							code
								inv !print
									val K_unchecked "("
								inv !printnumber
									val K_unchecked debug_rule_nesting
								inv !print
									val K_unchecked ") "
						inv !if
							inv !and
								inv !ne
									val K_unchecked ac
									val K_unchecked player
								inv !ne
									val K_unchecked for_say
									val K_unchecked 2
							code
								inv !ifelse
									val K_unchecked acr
									code
										inv !print
											val K_unchecked "asking "
										inv !printdef
											val K_unchecked ac
										inv !print
											val K_unchecked " to try "
									code
										inv !printdef
											val K_unchecked ac
										inv !print
											val K_unchecked " "
						inv plug_00362
							val K_unchecked act
							val K_unchecked n
							val K_unchecked s
							val K_unchecked for_say
						inv !if
							inv !and
								val K_unchecked keep_silent
								inv !eq
									val K_unchecked for_say
									val K_unchecked 0
							code
								inv !print
									val K_unchecked " - silently"
				constant DB_Action K_unchecked_function = DB_Action_B __assimilated=1
			package FixInhibitFlag_fn _function
				symbol public misc FixInhibitFlag
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FixInhibitFlag_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc act
					symbol private misc inhibit_rule_debugging
					symbol external misc plug_00363 --> /main/template/variables/activities_sp_var/activities_sp
					symbol external misc activities_stack --> /main/template/arrays/activities_stack_arr/activities_stack
					symbol external misc PRINTING_THE_NAME_ACT --> /main/template/constants/PRINTING_THE_NAME_ACT_con/PRINTING_THE_NAME_ACT
					symbol external misc PRINTING_THE_PLURAL_NAME_ACT --> /main/template/constants/PRINTING_THE_PLURAL_NAME_ACT_con/PRINTING_THE_PLURAL_NAME_ACT
					symbol external misc PRINTING_ROOM_DESC_DETAILS_ACT --> /main/template/constants/PRINTING_ROOM_DESC_DETAILS_ACT_con/PRINTING_ROOM_DESC_DETAILS_ACT
					symbol external misc PRINTING_INVENTORY_DETAILS_ACT --> /main/template/constants/PRINTING_INVENTORY_DETAILS_ACT_con/PRINTING_INVENTORY_DETAILS_ACT
					symbol external misc LISTING_CONTENTS_ACT --> /main/template/constants/LISTING_CONTENTS_ACT_con/LISTING_CONTENTS_ACT
					symbol external misc GROUPING_TOGETHER_ACT --> /main/template/constants/GROUPING_TOGETHER_ACT_con/GROUPING_TOGETHER_ACT
					symbol external misc PRINTING_RESPONSE_ACT --> /main/template/constants/PRINTING_RESPONSE_ACT_con/PRINTING_RESPONSE_ACT
					symbol external misc plug_00364 --> /main/template/variables/inhibit_flag_var/inhibit_flag
					symbol external misc plug_00365 --> /main/template/variables/saved_debug_rules_var/saved_debug_rules
					symbol external misc plug_00366 --> /main/template/variables/debug_rules_var/debug_rules
					local n K_unchecked
					local act K_unchecked
					local inhibit_rule_debugging K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked n
								val K_unchecked 0
							inv !lt
								val K_unchecked n
								val K_unchecked activities_sp
							inv !postincrement
								reference
									val K_unchecked n
							code
								inv !store
									reference
										val K_unchecked act
									inv !lookup
										val K_unchecked activities_stack
										val K_unchecked n
								inv !if
									inv !eq
										val K_unchecked act
										inv !alternative
											inv !alternative
												inv !alternative
													inv !alternative
														inv !alternative
															inv !alternative
																val K_unchecked PRINTING_THE_NAME_ACT
																val K_unchecked PRINTING_THE_PLURAL_NAME_ACT
															val K_unchecked PRINTING_ROOM_DESC_DETAILS_ACT
														val K_unchecked PRINTING_INVENTORY_DETAILS_ACT
													val K_unchecked LISTING_CONTENTS_ACT
												val K_unchecked GROUPING_TOGETHER_ACT
											val K_unchecked PRINTING_RESPONSE_ACT
									code
										inv !store
											reference
												val K_unchecked inhibit_rule_debugging
											val K_unchecked 1
						inv !if
							inv !and
								inv !eq
									val K_unchecked inhibit_flag
									val K_unchecked 0
								val K_unchecked inhibit_rule_debugging
							code
								inv !store
									reference
										val K_unchecked saved_debug_rules
									val K_unchecked debug_rules
								inv !store
									reference
										val K_unchecked debug_rules
									val K_unchecked 0
						inv !if
							inv !and
								val K_unchecked inhibit_flag
								inv !eq
									val K_unchecked inhibit_rule_debugging
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked debug_rules
									val K_unchecked saved_debug_rules
						inv !store
							reference
								val K_unchecked inhibit_flag
							val K_unchecked inhibit_rule_debugging
				constant FixInhibitFlag K_unchecked_function = FixInhibitFlag_B __assimilated=1
			package TestActivity_fn _function
				symbol public misc TestActivity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestActivity_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc desc
					symbol private misc val
					symbol private misc i
					symbol external misc plug_00363 --> /main/template/variables/activities_sp_var/activities_sp
					symbol external misc activities_stack --> /main/template/arrays/activities_stack_arr/activities_stack
					symbol external misc activity_parameters_stack --> /main/template/arrays/activity_parameters_stack_arr/activity_parameters_stack
					local A K_unchecked
					local desc K_unchecked
					local val K_unchecked
					local i K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked activities_sp
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked activities_stack
											val K_unchecked i
										val K_unchecked A
									code
										inv !ifelse
											val K_unchecked desc
											code
												inv !if
													inv !indirect1
														val K_unchecked desc
														inv !lookup
															val K_unchecked activity_parameters_stack
															val K_unchecked i
													code
														inv !return
															val K_unchecked 1
											code
												inv !ifelse
													val K_unchecked val
													code
														inv !if
															inv !eq
																val K_unchecked val
																inv !lookup
																	val K_unchecked activity_parameters_stack
																	val K_unchecked i
															code
																inv !return
																	val K_unchecked 1
													code
														inv !return
															val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant TestActivity K_unchecked_function = TestActivity_B __assimilated=1
			package ActivityEmpty_fn _function
				symbol public misc ActivityEmpty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActivityEmpty_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol external misc plug_00367 --> /main/connectors/plug_00367
					symbol external misc plug_00368 --> /main/connectors/plug_00368
					symbol external misc plug_00369 --> /main/connectors/plug_00369
					symbol external misc plug_00370 --> /main/connectors/plug_00370
					symbol external misc plug_00292 --> /main/connectors/plug_00292
					local A K_unchecked
					local x K_unchecked
					code
						inv !store
							reference
								val K_unchecked x
							inv !lookup
								val K_unchecked plug_00367
								val K_unchecked A
						inv !if
							inv !ne
								inv !lookup
									val K_unchecked plug_00368
									val K_unchecked x
								val K_unchecked plug_00369
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked x
							inv !lookup
								val K_unchecked plug_00370
								val K_unchecked A
						inv !if
							inv !ne
								inv !lookup
									val K_unchecked plug_00368
									val K_unchecked x
								val K_unchecked plug_00369
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked x
							inv !lookup
								val K_unchecked plug_00292
								val K_unchecked A
						inv !if
							inv !ne
								inv !lookup
									val K_unchecked plug_00368
									val K_unchecked x
								val K_unchecked plug_00369
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant ActivityEmpty K_unchecked_function = ActivityEmpty_B __assimilated=1
			package RulebookEmpty_fn _function
				symbol public misc RulebookEmpty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulebookEmpty_B _code
					symbol private misc rb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00368 --> /main/connectors/plug_00368
					symbol external misc plug_00369 --> /main/connectors/plug_00369
					local rb K_unchecked
					code
						inv !if
							inv !ne
								inv !lookup
									val K_unchecked plug_00368
									val K_unchecked rb
								val K_unchecked plug_00369
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant RulebookEmpty K_unchecked_function = RulebookEmpty_B __assimilated=1
			package ProcessActivityRulebook_fn _function
				symbol public misc ProcessActivityRulebook
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ProcessActivityRulebook_B _code
					symbol private misc rulebook
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc parameter
					symbol private misc rv
					symbol external misc plug_00350 --> /main/connectors/plug_00350
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					local rulebook K_unchecked
					local parameter K_unchecked
					local rv K_unchecked
					code
						inv !push
							val K_unchecked plug_00350
						inv !if
							val K_unchecked parameter
							code
								inv !store
									reference
										val K_unchecked plug_00350
									val K_unchecked parameter
						inv !store
							reference
								val K_unchecked rv
							inv FollowRulebook
								val K_unchecked rulebook
								val K_unchecked parameter
								val K_unchecked 1
						inv !pull
							reference
								val K_unchecked plug_00350
						inv !if
							val K_unchecked rv
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ProcessActivityRulebook K_unchecked_function = ProcessActivityRulebook_B __assimilated=1
			package CarryOutActivity_fn _function
				symbol public misc CarryOutActivity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CarryOutActivity_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol private misc rv
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					local A K_unchecked
					local o K_unchecked
					local rv K_unchecked
					code
						inv BeginActivity
							val K_unchecked A
							val K_unchecked o
						inv !store
							reference
								val K_unchecked rv
							inv ForActivity
								val K_unchecked A
								val K_unchecked o
						inv EndActivity
							val K_unchecked A
							val K_unchecked o
						inv !return
							val K_unchecked rv
				constant CarryOutActivity K_unchecked_function = CarryOutActivity_B __assimilated=1
			package BeginActivity_fn _function
				symbol public misc BeginActivity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BeginActivity_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol private misc x
					symbol external misc plug_00363 --> /main/template/variables/activities_sp_var/activities_sp
					symbol external misc MAX_NESTED_ACTIVITIES --> /main/template/constants/MAX_NESTED_ACTIVITIES_con/MAX_NESTED_ACTIVITIES
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TOOMANYACTS --> /main/template/constants/RTP_TOOMANYACTS_con/RTP_TOOMANYACTS
					symbol external misc activity_parameters_stack --> /main/template/arrays/activity_parameters_stack_arr/activity_parameters_stack
					symbol external misc activities_stack --> /main/template/arrays/activities_stack_arr/activities_stack
					symbol external misc FixInhibitFlag --> /main/template/functions/FixInhibitFlag_fn/FixInhibitFlag
					symbol external misc MStack_CreateAVVars --> /main/template/functions/MStack_CreateAVVars_fn/MStack_CreateAVVars
					symbol external misc plug_00371 --> /main/connectors/plug_00371
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc ProcessActivityRulebook --> /main/template/functions/ProcessActivityRulebook_fn/ProcessActivityRulebook
					symbol external misc plug_00367 --> /main/connectors/plug_00367
					local A K_unchecked
					local o K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked activities_sp
								val K_unchecked MAX_NESTED_ACTIVITIES
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_TOOMANYACTS
						inv !store
							reference
								inv !lookup
									val K_unchecked activity_parameters_stack
									val K_unchecked activities_sp
							val K_unchecked o
						inv !store
							reference
								inv !lookup
									val K_unchecked activities_stack
									inv !postincrement
										reference
											val K_unchecked activities_sp
							val K_unchecked A
						inv FixInhibitFlag
						inv MStack_CreateAVVars
							val K_unchecked A
						inv !if
							inv !lookupbyte
								val K_unchecked plug_00371
								val K_unchecked A
							code
								inv !store
									reference
										val K_unchecked x
									val K_unchecked action
								inv !store
									reference
										val K_unchecked action
									val K_unchecked action_to_be
						inv !store
							reference
								val K_unchecked o
							inv ProcessActivityRulebook
								inv !lookup
									val K_unchecked plug_00367
									val K_unchecked A
								val K_unchecked o
						inv !if
							inv !lookupbyte
								val K_unchecked plug_00371
								val K_unchecked A
							code
								inv !store
									reference
										val K_unchecked action
									val K_unchecked x
						inv !return
							val K_unchecked o
				constant BeginActivity K_unchecked_function = BeginActivity_B __assimilated=1
			package ForActivity_fn _function
				symbol public misc ForActivity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ForActivity_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol private misc x
					symbol external misc plug_00371 --> /main/connectors/plug_00371
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc ProcessActivityRulebook --> /main/template/functions/ProcessActivityRulebook_fn/ProcessActivityRulebook
					symbol external misc plug_00370 --> /main/connectors/plug_00370
					local A K_unchecked
					local o K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !lookupbyte
								val K_unchecked plug_00371
								val K_unchecked A
							code
								inv !store
									reference
										val K_unchecked x
									val K_unchecked action
								inv !store
									reference
										val K_unchecked action
									val K_unchecked action_to_be
						inv !store
							reference
								val K_unchecked o
							inv ProcessActivityRulebook
								inv !lookup
									val K_unchecked plug_00370
									val K_unchecked A
								val K_unchecked o
						inv !if
							inv !lookupbyte
								val K_unchecked plug_00371
								val K_unchecked A
							code
								inv !store
									reference
										val K_unchecked action
									val K_unchecked x
						inv !return
							val K_unchecked o
				constant ForActivity K_unchecked_function = ForActivity_B __assimilated=1
			package EndActivity_fn _function
				symbol public misc EndActivity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package EndActivity_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol private misc rv
					symbol private misc x
					symbol external misc plug_00363 --> /main/template/variables/activities_sp_var/activities_sp
					symbol external misc activities_stack --> /main/template/arrays/activities_stack_arr/activities_stack
					symbol external misc plug_00371 --> /main/connectors/plug_00371
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc ProcessActivityRulebook --> /main/template/functions/ProcessActivityRulebook_fn/ProcessActivityRulebook
					symbol external misc plug_00292 --> /main/connectors/plug_00292
					symbol external misc FixInhibitFlag --> /main/template/functions/FixInhibitFlag_fn/FixInhibitFlag
					symbol external misc MStack_DestroyAVVars --> /main/template/functions/MStack_DestroyAVVars_fn/MStack_DestroyAVVars
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_CANTABANDON --> /main/template/constants/RTP_CANTABANDON_con/RTP_CANTABANDON
					local A K_unchecked
					local o K_unchecked
					local rv K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !and
								inv !gt
									val K_unchecked activities_sp
									val K_unchecked 0
								inv !eq
									inv !lookup
										val K_unchecked activities_stack
										inv !minus
											val K_unchecked activities_sp
											val K_unchecked 1
									val K_unchecked A
							code
								inv !if
									inv !lookupbyte
										val K_unchecked plug_00371
										val K_unchecked A
									code
										inv !store
											reference
												val K_unchecked x
											val K_unchecked action
										inv !store
											reference
												val K_unchecked action
											val K_unchecked action_to_be
								inv !store
									reference
										val K_unchecked rv
									inv ProcessActivityRulebook
										inv !lookup
											val K_unchecked plug_00292
											val K_unchecked A
										val K_unchecked o
								inv !if
									inv !lookupbyte
										val K_unchecked plug_00371
										val K_unchecked A
									code
										inv !store
											reference
												val K_unchecked action
											val K_unchecked x
								inv !postdecrement
									reference
										val K_unchecked activities_sp
								inv FixInhibitFlag
								inv MStack_DestroyAVVars
									val K_unchecked A
								inv !return
									val K_unchecked rv
						inv !return
							inv RunTimeProblem
								val K_unchecked RTP_CANTABANDON
				constant EndActivity K_unchecked_function = EndActivity_B __assimilated=1
			package AbandonActivity_fn _function
				symbol public misc AbandonActivity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AbandonActivity_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol external misc plug_00363 --> /main/template/variables/activities_sp_var/activities_sp
					symbol external misc activities_stack --> /main/template/arrays/activities_stack_arr/activities_stack
					symbol external misc FixInhibitFlag --> /main/template/functions/FixInhibitFlag_fn/FixInhibitFlag
					symbol external misc MStack_DestroyAVVars --> /main/template/functions/MStack_DestroyAVVars_fn/MStack_DestroyAVVars
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_CANTEND --> /main/template/constants/RTP_CANTEND_con/RTP_CANTEND
					local A K_unchecked
					local o K_unchecked
					code
						inv !if
							inv !and
								inv !gt
									val K_unchecked activities_sp
									val K_unchecked 0
								inv !eq
									inv !lookup
										val K_unchecked activities_stack
										inv !minus
											val K_unchecked activities_sp
											val K_unchecked 1
									val K_unchecked A
							code
								inv !postdecrement
									reference
										val K_unchecked activities_sp
								inv FixInhibitFlag
								inv MStack_DestroyAVVars
									val K_unchecked A
								inv !return
									val K_unchecked 1
						inv !return
							inv RunTimeProblem
								val K_unchecked RTP_CANTEND
				constant AbandonActivity K_unchecked_function = AbandonActivity_B __assimilated=1
			package DisplayFigure_fn _function
				symbol public misc DisplayFigure
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DisplayFigure_B _code
					symbol private misc resource_ID
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc one_time
					symbol external misc ResourceUsageFlags --> /main/template/arrays/ResourceUsageFlags_arr/ResourceUsageFlags
					symbol external misc VM_Picture --> /main/template/functions/VM_Picture_fn/VM_Picture
					local resource_ID K_unchecked
					local one_time K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked one_time
								inv !lookupbyte
									val K_unchecked ResourceUsageFlags
									val K_unchecked resource_ID
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked ResourceUsageFlags
									val K_unchecked resource_ID
							val K_unchecked 1
						inv !print
							val K_unchecked "\n"
						inv VM_Picture
							val K_unchecked resource_ID
						inv !print
							val K_unchecked "\n"
				constant DisplayFigure K_unchecked_function = DisplayFigure_B __assimilated=1
			package PlaySound_fn _function
				symbol public misc PlaySound
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PlaySound_B _code
					symbol private misc resource_ID
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc one_time
					symbol external misc ResourceUsageFlags --> /main/template/arrays/ResourceUsageFlags_arr/ResourceUsageFlags
					symbol external misc VM_SoundEffect --> /main/template/functions/VM_SoundEffect_fn/VM_SoundEffect
					local resource_ID K_unchecked
					local one_time K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked resource_ID
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								val K_unchecked one_time
								inv !lookupbyte
									val K_unchecked ResourceUsageFlags
									val K_unchecked resource_ID
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked ResourceUsageFlags
									val K_unchecked resource_ID
							val K_unchecked 1
						inv VM_SoundEffect
							val K_unchecked resource_ID
				constant PlaySound K_unchecked_function = PlaySound_B __assimilated=1
			package FileIO_GetC_fn _function
				symbol public misc FileIO_GetC
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FileIO_GetC_B _code
					symbol private misc extf
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local extf K_unchecked
					code
						inv !return
							inv !unaryminus
								val K_unchecked 1
				constant FileIO_GetC K_unchecked_function = FileIO_GetC_B __assimilated=1
			package Mstack_Create_Frame_fn _function
				symbol public misc Mstack_Create_Frame
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Mstack_Create_Frame_B _code
					symbol private misc creator
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc id
					symbol private misc extent
					symbol external misc plug_00372 --> /main/template/variables/MStack_Top_var/MStack_Top
					symbol external misc MAX_MSTACK_FRAME --> /main/template/constants/MAX_MSTACK_FRAME_con/MAX_MSTACK_FRAME
					symbol external misc MSTACK_SIZE --> /main/template/constants/MSTACK_SIZE_con/MSTACK_SIZE
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_MSTACKMEMORY --> /main/template/constants/RTP_MSTACKMEMORY_con/RTP_MSTACKMEMORY
					symbol external misc Mstack_Backtrace --> /main/template/functions/Mstack_Backtrace_fn/Mstack_Backtrace
					symbol external misc MStack --> /main/template/arrays/MStack_arr/MStack
					local creator K_unchecked
					local id K_unchecked
					local extent K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked creator
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked extent
							inv !callmessage2
								val K_unchecked creator
								inv !plus
									val K_unchecked MStack_Top
									val K_unchecked 2
								val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked extent
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !ge
								inv !plus
									val K_unchecked MStack_Top
									val K_unchecked MAX_MSTACK_FRAME
								inv !plus
									val K_unchecked MSTACK_SIZE
									val K_unchecked 2
							code
								inv RunTimeProblem
									val K_unchecked RTP_MSTACKMEMORY
									val K_unchecked MSTACK_SIZE
								inv Mstack_Backtrace
								inv !return
									val K_unchecked 0
						inv !postincrement
							reference
								val K_unchecked MStack_Top
						inv !store
							reference
								inv !lookup
									val K_unchecked MStack
									val K_unchecked MStack_Top
							val K_unchecked id
						inv !postincrement
							reference
								val K_unchecked MStack_Top
						inv !store
							reference
								val K_unchecked MStack_Top
							inv !plus
								val K_unchecked MStack_Top
								val K_unchecked extent
						inv !store
							reference
								inv !lookup
									val K_unchecked MStack
									val K_unchecked MStack_Top
							inv !unaryminus
								inv !plus
									val K_unchecked extent
									val K_unchecked 2
						inv !return
							val K_unchecked 1
				constant Mstack_Create_Frame K_unchecked_function = Mstack_Create_Frame_B __assimilated=1
			package Mstack_Destroy_Frame_fn _function
				symbol public misc Mstack_Destroy_Frame
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Mstack_Destroy_Frame_B _code
					symbol private misc creator
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc id
					symbol private misc pos
					symbol external misc Mstack_Seek_Frame --> /main/template/functions/Mstack_Seek_Frame_fn/Mstack_Seek_Frame
					symbol external misc plug_00372 --> /main/template/variables/MStack_Top_var/MStack_Top
					local creator K_unchecked
					local id K_unchecked
					local pos K_unchecked
					code
						inv !store
							reference
								val K_unchecked pos
							inv Mstack_Seek_Frame
								val K_unchecked id
						inv !if
							inv !eq
								val K_unchecked pos
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked MStack_Top
							inv !minus
								val K_unchecked pos
								val K_unchecked 2
						inv !if
							val K_unchecked creator
							code
								inv !callmessage2
									val K_unchecked creator
									val K_unchecked pos
									inv !unaryminus
										val K_unchecked 1
						inv !return
							val K_unchecked 1
				constant Mstack_Destroy_Frame K_unchecked_function = Mstack_Destroy_Frame_B __assimilated=1
			package Mstack_Seek_Frame_fn _function
				symbol public misc Mstack_Seek_Frame
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Mstack_Seek_Frame_B _code
					symbol private misc id
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc pos
					symbol external misc plug_00372 --> /main/template/variables/MStack_Top_var/MStack_Top
					symbol external misc MStack --> /main/template/arrays/MStack_arr/MStack
					symbol external misc plug_00373 --> /main/template/variables/MStack_Frame_Extent_var/MStack_Frame_Extent
					local id K_unchecked
					local pos K_unchecked
					code
						inv !store
							reference
								val K_unchecked pos
							val K_unchecked MStack_Top
						inv !while
							inv !and
								inv !gt
									val K_unchecked pos
									val K_unchecked 0
								inv !ne
									inv !lookup
										val K_unchecked MStack
										val K_unchecked pos
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked MStack_Frame_Extent
									inv !lookup
										val K_unchecked MStack
										val K_unchecked pos
								inv !store
									reference
										val K_unchecked pos
									inv !plus
										val K_unchecked pos
										val K_unchecked MStack_Frame_Extent
								inv !store
									reference
										val K_unchecked MStack_Frame_Extent
									inv !minus
										val K_unchecked -2
										val K_unchecked MStack_Frame_Extent
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked MStack
											inv !plus
												val K_unchecked pos
												val K_unchecked 1
										val K_unchecked id
									code
										inv !return
											inv !plus
												val K_unchecked pos
												val K_unchecked 2
						inv !store
							reference
								val K_unchecked MStack_Frame_Extent
							val K_unchecked 0
						inv !return
							val K_unchecked 0
				constant Mstack_Seek_Frame K_unchecked_function = Mstack_Seek_Frame_B __assimilated=1
			package Mstack_Backtrace_fn _function
				symbol public misc Mstack_Backtrace
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Mstack_Backtrace_B _code
					symbol private misc pos
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc k
					symbol external misc plug_00372 --> /main/template/variables/MStack_Top_var/MStack_Top
					symbol external misc MStack --> /main/template/arrays/MStack_arr/MStack
					symbol external misc plug_00373 --> /main/template/variables/MStack_Frame_Extent_var/MStack_Frame_Extent
					local pos K_unchecked
					local k K_unchecked
					code
						inv !print
							val K_unchecked "Mstack backtrace: size "
						inv !printnumber
							inv !plus
								val K_unchecked MStack_Top
								val K_unchecked 1
						inv !print
							val K_unchecked " words\n"
						inv !store
							reference
								val K_unchecked pos
							val K_unchecked MStack_Top
						inv !while
							inv !ne
								inv !lookup
									val K_unchecked MStack
									val K_unchecked pos
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked MStack_Frame_Extent
									inv !lookup
										val K_unchecked MStack
										val K_unchecked pos
								inv !store
									reference
										val K_unchecked pos
									inv !plus
										val K_unchecked pos
										val K_unchecked MStack_Frame_Extent
								inv !store
									reference
										val K_unchecked MStack_Frame_Extent
									inv !minus
										val K_unchecked -2
										val K_unchecked MStack_Frame_Extent
								inv !print
									val K_unchecked "Block at "
								inv !printnumber
									inv !plus
										val K_unchecked pos
										val K_unchecked 2
								inv !print
									val K_unchecked " owner ID "
								inv !printnumber
									inv !lookup
										val K_unchecked MStack
										inv !plus
											val K_unchecked pos
											val K_unchecked 1
								inv !print
									val K_unchecked " size "
								inv !printnumber
									val K_unchecked MStack_Frame_Extent
								inv !print
									val K_unchecked "\n"
								inv !for
									inv !store
										reference
											val K_unchecked k
										val K_unchecked 0
									inv !lt
										val K_unchecked k
										val K_unchecked MStack_Frame_Extent
									inv !postincrement
										reference
											val K_unchecked k
									code
										inv !printnumber
											inv !lookup
												val K_unchecked MStack
												inv !plus
													inv !plus
														val K_unchecked pos
														val K_unchecked 2
													val K_unchecked k
										inv !print
											val K_unchecked " "
								inv !print
									val K_unchecked "\n"
				constant Mstack_Backtrace K_unchecked_function = Mstack_Backtrace_B __assimilated=1
			package MstVO_fn _function
				symbol public misc MstVO
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MstVO_B _code
					symbol private misc id
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc off
					symbol private misc pos
					symbol external misc Mstack_Seek_Frame --> /main/template/functions/Mstack_Seek_Frame_fn/Mstack_Seek_Frame
					symbol external misc plug_00373 --> /main/template/variables/MStack_Frame_Extent_var/MStack_Frame_Extent
					local id K_unchecked
					local off K_unchecked
					local pos K_unchecked
					code
						inv !store
							reference
								val K_unchecked pos
							inv Mstack_Seek_Frame
								val K_unchecked id
						inv !if
							inv !eq
								val K_unchecked pos
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "Variable unavailable for this action, activity or rulebook: "
								inv !print
									val K_unchecked "internal ID number "
								inv !printnumber
									val K_unchecked id
								inv !print
									val K_unchecked "/"
								inv !printnumber
									val K_unchecked off
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !lt
									val K_unchecked off
									val K_unchecked 0
								inv !ge
									val K_unchecked off
									val K_unchecked MStack_Frame_Extent
							code
								inv !print
									val K_unchecked "Variable stack offset wrong: "
								inv !printnumber
									val K_unchecked id
								inv !print
									val K_unchecked "/"
								inv !printnumber
									val K_unchecked off
								inv !print
									val K_unchecked " at "
								inv !printnumber
									val K_unchecked pos
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 0
						inv !return
							inv !plus
								val K_unchecked pos
								val K_unchecked off
				constant MstVO K_unchecked_function = MstVO_B __assimilated=1
			package MstVON_fn _function
				symbol public misc MstVON
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MstVON_B _code
					symbol private misc id
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc off
					symbol private misc pos
					symbol external misc Mstack_Seek_Frame --> /main/template/functions/Mstack_Seek_Frame_fn/Mstack_Seek_Frame
					symbol external misc plug_00373 --> /main/template/variables/MStack_Frame_Extent_var/MStack_Frame_Extent
					local id K_unchecked
					local off K_unchecked
					local pos K_unchecked
					code
						inv !store
							reference
								val K_unchecked pos
							inv Mstack_Seek_Frame
								val K_unchecked id
						inv !if
							inv !eq
								val K_unchecked pos
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !lt
									val K_unchecked off
									val K_unchecked 0
								inv !ge
									val K_unchecked off
									val K_unchecked MStack_Frame_Extent
							code
								inv !print
									val K_unchecked "Variable stack offset wrong: "
								inv !printnumber
									val K_unchecked id
								inv !print
									val K_unchecked "/"
								inv !printnumber
									val K_unchecked off
								inv !print
									val K_unchecked " at "
								inv !printnumber
									val K_unchecked pos
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 0
						inv !return
							inv !plus
								val K_unchecked pos
								val K_unchecked off
				constant MstVON K_unchecked_function = MstVON_B __assimilated=1
			package MStack_CreateRBVars_fn _function
				symbol public misc MStack_CreateRBVars
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MStack_CreateRBVars_B _code
					symbol private misc rb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc cr
					symbol external misc plug_00375 --> /main/connectors/plug_00375
					symbol external misc Mstack_Create_Frame --> /main/template/functions/Mstack_Create_Frame_fn/Mstack_Create_Frame
					local rb K_unchecked
					local cr K_unchecked
					code
						inv !store
							reference
								val K_unchecked cr
							inv !lookup
								val K_unchecked plug_00375
								val K_unchecked rb
						inv !if
							val K_unchecked cr
							code
								inv Mstack_Create_Frame
									val K_unchecked cr
									val K_unchecked rb
				constant MStack_CreateRBVars K_unchecked_function = MStack_CreateRBVars_B __assimilated=1
			package MStack_DestroyRBVars_fn _function
				symbol public misc MStack_DestroyRBVars
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MStack_DestroyRBVars_B _code
					symbol private misc rb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc cr
					symbol external misc plug_00375 --> /main/connectors/plug_00375
					symbol external misc Mstack_Destroy_Frame --> /main/template/functions/Mstack_Destroy_Frame_fn/Mstack_Destroy_Frame
					local rb K_unchecked
					local cr K_unchecked
					code
						inv !store
							reference
								val K_unchecked cr
							inv !lookup
								val K_unchecked plug_00375
								val K_unchecked rb
						inv !if
							val K_unchecked cr
							code
								inv Mstack_Destroy_Frame
									val K_unchecked cr
									val K_unchecked rb
				constant MStack_DestroyRBVars K_unchecked_function = MStack_DestroyRBVars_B __assimilated=1
			package MStack_CreateAVVars_fn _function
				symbol public misc MStack_CreateAVVars
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MStack_CreateAVVars_B _code
					symbol private misc av
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc cr
					symbol external misc plug_00376 --> /main/connectors/plug_00376
					symbol external misc Mstack_Create_Frame --> /main/template/functions/Mstack_Create_Frame_fn/Mstack_Create_Frame
					local av K_unchecked
					local cr K_unchecked
					code
						inv !store
							reference
								val K_unchecked cr
							inv !lookup
								val K_unchecked plug_00376
								val K_unchecked av
						inv !if
							inv !eq
								val K_unchecked cr
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv Mstack_Create_Frame
							val K_unchecked cr
							inv !plus
								val K_unchecked av
								val K_unchecked 10000
				constant MStack_CreateAVVars K_unchecked_function = MStack_CreateAVVars_B __assimilated=1
			package MStack_DestroyAVVars_fn _function
				symbol public misc MStack_DestroyAVVars
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MStack_DestroyAVVars_B _code
					symbol private misc av
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc cr
					symbol external misc plug_00376 --> /main/connectors/plug_00376
					symbol external misc Mstack_Destroy_Frame --> /main/template/functions/Mstack_Destroy_Frame_fn/Mstack_Destroy_Frame
					local av K_unchecked
					local cr K_unchecked
					code
						inv !store
							reference
								val K_unchecked cr
							inv !lookup
								val K_unchecked plug_00376
								val K_unchecked av
						inv !if
							inv !eq
								val K_unchecked cr
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv Mstack_Destroy_Frame
							val K_unchecked cr
							inv !plus
								val K_unchecked av
								val K_unchecked 10000
				constant MStack_DestroyAVVars K_unchecked_function = MStack_DestroyAVVars_B __assimilated=1
			package Perform_Undo_fn _function
				symbol public misc Perform_Undo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Perform_Undo_B _code
					symbol external misc plug_00308 --> /main/template/variables/IterationsOfTurnSequence_var/IterationsOfTurnSequence
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00219 --> /main/connectors/plug_00219
					symbol external misc plug_00218 --> /main/template/variables/undo_flag_var/undo_flag
					symbol external misc VM_Undo --> /main/template/functions/VM_Undo_fn/VM_Undo
					code
						inv !if
							inv !eq
								val K_unchecked IterationsOfTurnSequence
								val K_unchecked 0
							code
								inv plug_00219
									val K_unchecked 66
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked undo_flag
								val K_unchecked 0
							code
								inv plug_00219
									val K_unchecked 67
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked undo_flag
								val K_unchecked 1
							code
								inv plug_00219
									val K_unchecked 68
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								inv VM_Undo
								val K_unchecked 0
							code
								inv plug_00219
									val K_unchecked 70
								inv !print
									val K_unchecked "\n"
				constant Perform_Undo K_unchecked_function = Perform_Undo_B __assimilated=1
			package ANNOUNCE_SCORE_R_fn _function
				symbol public misc ANNOUNCE_SCORE_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ANNOUNCE_SCORE_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00377 --> /main/connectors/plug_00377
					symbol external misc PrintRank --> /main/template/functions/PrintRank_fn/PrintRank
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv plug_00377
							val K_unchecked 65
						inv PrintRank
				constant ANNOUNCE_SCORE_R K_unchecked_function = ANNOUNCE_SCORE_R_B __assimilated=1
			package SWITCH_SCORE_NOTIFY_ON_R_fn _function
				symbol public misc SWITCH_SCORE_NOTIFY_ON_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SWITCH_SCORE_NOTIFY_ON_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00378 --> /main/template/variables/notify_mode_var/notify_mode
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked notify_mode
							val K_unchecked 1
				constant SWITCH_SCORE_NOTIFY_ON_R K_unchecked_function = SWITCH_SCORE_NOTIFY_ON_R_B __assimilated=1
			package REP_SWITCH_NOTIFY_ON_R_fn _function
				symbol public misc REP_SWITCH_NOTIFY_ON_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REP_SWITCH_NOTIFY_ON_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00379 --> /main/connectors/plug_00379
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv plug_00379
							val K_unchecked 65
						inv !print
							val K_unchecked "\n"
				constant REP_SWITCH_NOTIFY_ON_R K_unchecked_function = REP_SWITCH_NOTIFY_ON_R_B __assimilated=1
			package SWITCH_SCORE_NOTIFY_OFF_R_fn _function
				symbol public misc SWITCH_SCORE_NOTIFY_OFF_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SWITCH_SCORE_NOTIFY_OFF_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00378 --> /main/template/variables/notify_mode_var/notify_mode
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked notify_mode
							val K_unchecked 0
				constant SWITCH_SCORE_NOTIFY_OFF_R K_unchecked_function = SWITCH_SCORE_NOTIFY_OFF_R_B __assimilated=1
			package REP_SWITCH_NOTIFY_OFF_R_fn _function
				symbol public misc REP_SWITCH_NOTIFY_OFF_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REP_SWITCH_NOTIFY_OFF_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00380 --> /main/connectors/plug_00380
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv plug_00380
							val K_unchecked 65
						inv !print
							val K_unchecked "\n"
				constant REP_SWITCH_NOTIFY_OFF_R K_unchecked_function = REP_SWITCH_NOTIFY_OFF_R_B __assimilated=1
			package PREFER_SOMETIMES_ABBREVIATED_R_fn _function
				symbol public misc PREFER_SOMETIMES_ABBREVIATED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PREFER_SOMETIMES_ABBREVIATED_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00381 --> /main/template/variables/lookmode_var/lookmode
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked lookmode
							val K_unchecked 1
				constant PREFER_SOMETIMES_ABBREVIATED_R K_unchecked_function = PREFER_SOMETIMES_ABBREVIATED_R_B __assimilated=1
			package REP_PREFER_SOMETIMES_ABBR_R_fn _function
				symbol public misc REP_PREFER_SOMETIMES_ABBR_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REP_PREFER_SOMETIMES_ABBR_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00382 --> /main/connectors/plug_00382
					symbol external misc plug_00383 --> /main/connectors/plug_00383
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv TEXT_TY_Say
							val K_unchecked plug_00382
						inv plug_00383
							val K_unchecked 65
						inv !print
							val K_unchecked "\n"
				constant REP_PREFER_SOMETIMES_ABBR_R K_unchecked_function = REP_PREFER_SOMETIMES_ABBR_R_B __assimilated=1
			package PREFER_UNABBREVIATED_R_fn _function
				symbol public misc PREFER_UNABBREVIATED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PREFER_UNABBREVIATED_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00381 --> /main/template/variables/lookmode_var/lookmode
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked lookmode
							val K_unchecked 2
				constant PREFER_UNABBREVIATED_R K_unchecked_function = PREFER_UNABBREVIATED_R_B __assimilated=1
			package REP_PREFER_UNABBREVIATED_R_fn _function
				symbol public misc REP_PREFER_UNABBREVIATED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REP_PREFER_UNABBREVIATED_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00382 --> /main/connectors/plug_00382
					symbol external misc plug_00384 --> /main/connectors/plug_00384
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv TEXT_TY_Say
							val K_unchecked plug_00382
						inv plug_00384
							val K_unchecked 65
						inv !print
							val K_unchecked "\n"
				constant REP_PREFER_UNABBREVIATED_R K_unchecked_function = REP_PREFER_UNABBREVIATED_R_B __assimilated=1
			package PREFER_ABBREVIATED_R_fn _function
				symbol public misc PREFER_ABBREVIATED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PREFER_ABBREVIATED_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00381 --> /main/template/variables/lookmode_var/lookmode
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked lookmode
							val K_unchecked 3
				constant PREFER_ABBREVIATED_R K_unchecked_function = PREFER_ABBREVIATED_R_B __assimilated=1
			package REP_PREFER_ABBREVIATED_R_fn _function
				symbol public misc REP_PREFER_ABBREVIATED_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REP_PREFER_ABBREVIATED_R_B _code
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00382 --> /main/connectors/plug_00382
					symbol external misc plug_00385 --> /main/connectors/plug_00385
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv TEXT_TY_Say
							val K_unchecked plug_00382
						inv plug_00385
							val K_unchecked 65
						inv !print
							val K_unchecked "\n"
				constant REP_PREFER_ABBREVIATED_R K_unchecked_function = REP_PREFER_ABBREVIATED_R_B __assimilated=1
			package ANNOUNCE_PRONOUN_MEANINGS_R_fn _function
				symbol public misc ANNOUNCE_PRONOUN_MEANINGS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ANNOUNCE_PRONOUN_MEANINGS_R_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol private misc c
					symbol private misc d
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00386 --> /main/connectors/plug_00386
					symbol external misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
					symbol external misc plug_00318 --> /main/connectors/plug_00318
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc ME1__WD --> /main/template/constants/ME1__WD_con/ME1__WD
					local x K_unchecked
					local y K_unchecked
					local c K_unchecked
					local d K_unchecked
					code
						inv !if
							inv !ne
								val K_unchecked actor
								val K_unchecked player
							code
								inv !return
									val K_unchecked 0
						inv plug_00386
							val K_unchecked 65
						inv !store
							reference
								val K_unchecked c
							inv !divide
								inv !lookup
									val K_unchecked LanguagePronouns
									val K_unchecked 0
								val K_unchecked 3
						inv !if
							inv !ne
								val K_unchecked player
								val K_unchecked plug_00318
							code
								inv !postincrement
									reference
										val K_unchecked c
						inv !if
							inv !eq
								val K_unchecked c
								val K_unchecked 0
							code
								inv plug_00386
									val K_unchecked 68
								inv !return
									val K_unchecked 1
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked x
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked d
									val K_unchecked 0
							inv !le
								val K_unchecked x
								inv !lookup
									val K_unchecked LanguagePronouns
									val K_unchecked 0
							inv !store
								reference
									val K_unchecked x
								inv !plus
									val K_unchecked x
									val K_unchecked 3
							code
								inv !print
									val K_unchecked "\""
								inv !printaddress
									inv !lookup
										val K_unchecked LanguagePronouns
										val K_unchecked x
								inv !print
									val K_unchecked "\" "
								inv !store
									reference
										val K_unchecked y
									inv !lookup
										val K_unchecked LanguagePronouns
										inv !plus
											val K_unchecked x
											val K_unchecked 2
								inv !ifelse
									inv !eq
										val K_unchecked y
										val K_unchecked plug_00232
									code
										inv plug_00386
											val K_unchecked 67
									code
										inv plug_00386
											val K_unchecked 66
										inv !printdef
											val K_unchecked y
								inv !postincrement
									reference
										val K_unchecked d
								inv !if
									inv !lt
										val K_unchecked d
										inv !minus
											val K_unchecked c
											val K_unchecked 1
									code
										inv !print
											val K_unchecked ", "
								inv !if
									inv !eq
										val K_unchecked d
										inv !minus
											val K_unchecked c
											val K_unchecked 1
									code
										inv plug_00165
											val K_unchecked 67
						inv !if
							inv !ne
								val K_unchecked player
								val K_unchecked plug_00318
							code
								inv !print
									val K_unchecked "\""
								inv !printaddress
									val K_unchecked ME1__WD
								inv !print
									val K_unchecked "\" "
								inv plug_00386
									val K_unchecked 66
								inv !store
									reference
										val K_unchecked c
									val K_unchecked player
								inv !store
									reference
										val K_unchecked player
									val K_unchecked plug_00318
								inv !printdef
									val K_unchecked c
								inv !store
									reference
										val K_unchecked player
									val K_unchecked c
						inv !printret
							val K_unchecked "."
				constant ANNOUNCE_PRONOUN_MEANINGS_R K_unchecked_function = ANNOUNCE_PRONOUN_MEANINGS_R_B __assimilated=1
			package ClearParagraphing_fn _function
				symbol public misc ClearParagraphing
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ClearParagraphing_B _code
					symbol private misc r
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					local r K_unchecked
					code
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked say__pc
							val K_unchecked 0
				constant ClearParagraphing K_unchecked_function = ClearParagraphing_B __assimilated=1
			package DivideParagraphPoint_fn _function
				symbol public misc DivideParagraphPoint
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DivideParagraphPoint_B _code
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc PARA_COMPLETED --> /main/template/constants/PARA_COMPLETED_con/PARA_COMPLETED
					symbol external misc plug_00388 --> /main/template/variables/say__pc_save_var/say__pc_save
					symbol external misc PARA_PROMPTSKIP --> /main/template/constants/PARA_PROMPTSKIP_con/PARA_PROMPTSKIP
					symbol external misc PARA_SUPPRESSPROMPTSKIP --> /main/template/constants/PARA_SUPPRESSPROMPTSKIP_con/PARA_SUPPRESSPROMPTSKIP
					symbol external misc PARA_CONTENTEXPECTED --> /main/template/constants/PARA_CONTENTEXPECTED_con/PARA_CONTENTEXPECTED
					code
						inv !if
							val K_unchecked say__p
							code
								inv !print
									val K_unchecked "\n"
								inv !store
									reference
										val K_unchecked say__p
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked say__pc
									inv !bitwiseor
										val K_unchecked say__pc
										val K_unchecked PARA_COMPLETED
								inv !store
									reference
										val K_unchecked say__pc_save
									val K_unchecked 1
								inv !if
									inv !bitwiseand
										val K_unchecked say__pc
										val K_unchecked PARA_PROMPTSKIP
									code
										inv !store
											reference
												val K_unchecked say__pc
											inv !minus
												val K_unchecked say__pc
												val K_unchecked PARA_PROMPTSKIP
								inv !if
									inv !bitwiseand
										val K_unchecked say__pc
										val K_unchecked PARA_SUPPRESSPROMPTSKIP
									code
										inv !store
											reference
												val K_unchecked say__pc
											inv !minus
												val K_unchecked say__pc
												val K_unchecked PARA_SUPPRESSPROMPTSKIP
						inv !store
							reference
								val K_unchecked say__pc
							inv !bitwiseor
								val K_unchecked say__pc
								val K_unchecked PARA_CONTENTEXPECTED
						inv !store
							reference
								val K_unchecked say__pc_save
							inv !bitwiseand
								val K_unchecked say__pc
								val K_unchecked PARA_COMPLETED
				constant DivideParagraphPoint K_unchecked_function = DivideParagraphPoint_B __assimilated=1
			package AdjustParagraphPoint_fn _function
				symbol public misc AdjustParagraphPoint
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AdjustParagraphPoint_B _code
					symbol external misc plug_00388 --> /main/template/variables/say__pc_save_var/say__pc_save
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc PARA_COMPLETED --> /main/template/constants/PARA_COMPLETED_con/PARA_COMPLETED
					code
						inv !if
							val K_unchecked say__pc_save
							code
								inv !store
									reference
										val K_unchecked say__pc
									inv !bitwiseor
										val K_unchecked say__pc
										val K_unchecked PARA_COMPLETED
				constant AdjustParagraphPoint K_unchecked_function = AdjustParagraphPoint_B __assimilated=1
			package ParaContent_fn _function
				symbol public misc ParaContent
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ParaContent_B _code
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc PARA_CONTENTEXPECTED --> /main/template/constants/PARA_CONTENTEXPECTED_con/PARA_CONTENTEXPECTED
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !if
							inv !bitwiseand
								val K_unchecked say__pc
								val K_unchecked PARA_CONTENTEXPECTED
							code
								inv !store
									reference
										val K_unchecked say__pc
									inv !minus
										val K_unchecked say__pc
										val K_unchecked PARA_CONTENTEXPECTED
								inv !store
									reference
										val K_unchecked say__p
									val K_unchecked 1
				constant ParaContent K_unchecked_function = ParaContent_B __assimilated=1
			package GoingLookBreak_fn _function
				symbol public misc GoingLookBreak
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GoingLookBreak_B _code
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc PARA_COMPLETED --> /main/template/constants/PARA_COMPLETED_con/PARA_COMPLETED
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					code
						inv !if
							inv !eq
								inv !bitwiseand
									val K_unchecked say__pc
									val K_unchecked PARA_COMPLETED
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "\n"
						inv ClearParagraphing
							val K_unchecked 10
				constant GoingLookBreak K_unchecked_function = GoingLookBreak_B __assimilated=1
			package CommandClarificationBreak_fn _function
				symbol public misc CommandClarificationBreak
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CommandClarificationBreak_B _code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					code
						inv !print
							val K_unchecked "\n"
						inv ClearParagraphing
							val K_unchecked 11
				constant CommandClarificationBreak K_unchecked_function = CommandClarificationBreak_B __assimilated=1
			package RunParagraphOn_fn _function
				symbol public misc RunParagraphOn
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RunParagraphOn_B _code
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc PARA_PROMPTSKIP --> /main/template/constants/PARA_PROMPTSKIP_con/PARA_PROMPTSKIP
					symbol external misc PARA_SUPPRESSPROMPTSKIP --> /main/template/constants/PARA_SUPPRESSPROMPTSKIP_con/PARA_SUPPRESSPROMPTSKIP
					code
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked say__pc
							inv !bitwiseor
								val K_unchecked say__pc
								val K_unchecked PARA_PROMPTSKIP
						inv !store
							reference
								val K_unchecked say__pc
							inv !bitwiseor
								val K_unchecked say__pc
								val K_unchecked PARA_SUPPRESSPROMPTSKIP
				constant RunParagraphOn K_unchecked_function = RunParagraphOn_B __assimilated=1
			package SpecialLookSpacingBreak_fn _function
				symbol public misc SpecialLookSpacingBreak
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SpecialLookSpacingBreak_B _code
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc PARA_PROMPTSKIP --> /main/template/constants/PARA_PROMPTSKIP_con/PARA_PROMPTSKIP
					code
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked say__pc
							inv !bitwiseor
								val K_unchecked say__pc
								val K_unchecked PARA_PROMPTSKIP
				constant SpecialLookSpacingBreak K_unchecked_function = SpecialLookSpacingBreak_B __assimilated=1
			package EnsureBreakBeforePrompt_fn _function
				symbol public misc EnsureBreakBeforePrompt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package EnsureBreakBeforePrompt_B _code
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc PARA_PROMPTSKIP --> /main/template/constants/PARA_PROMPTSKIP_con/PARA_PROMPTSKIP
					symbol external misc PARA_SUPPRESSPROMPTSKIP --> /main/template/constants/PARA_SUPPRESSPROMPTSKIP_con/PARA_SUPPRESSPROMPTSKIP
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					code
						inv !if
							inv !or
								val K_unchecked say__p
								inv !and
									inv !bitwiseand
										val K_unchecked say__pc
										val K_unchecked PARA_PROMPTSKIP
									inv !eq
										inv !bitwiseand
											val K_unchecked say__pc
											val K_unchecked PARA_SUPPRESSPROMPTSKIP
										val K_unchecked 0
							code
								inv !print
									val K_unchecked "\n"
						inv ClearParagraphing
							val K_unchecked 12
				constant EnsureBreakBeforePrompt K_unchecked_function = EnsureBreakBeforePrompt_B __assimilated=1
			package PrintSingleParagraph_fn _function
				symbol public misc PrintSingleParagraph
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintSingleParagraph_B _code
					symbol private misc matter
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc PARA_NORULEBOOKBREAKS --> /main/template/constants/PARA_NORULEBOOKBREAKS_con/PARA_NORULEBOOKBREAKS
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					local matter K_unchecked
					code
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked say__pc
							inv !bitwiseor
								val K_unchecked say__pc
								val K_unchecked PARA_NORULEBOOKBREAKS
						inv TEXT_TY_Say
							val K_unchecked matter
						inv DivideParagraphPoint
							val K_unchecked 13
						inv !store
							reference
								val K_unchecked say__pc
							val K_unchecked 0
				constant PrintSingleParagraph K_unchecked_function = PrintSingleParagraph_B __assimilated=1
			package STextSubstitution_fn _function
				symbol public misc STextSubstitution
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STextSubstitution_B _code
					symbol external misc plug_00389 --> /main/template/variables/say__n_var/say__n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !if
							inv !ne
								val K_unchecked say__n
								val K_unchecked 1
							code
								inv !print
									val K_unchecked "s"
				constant STextSubstitution K_unchecked_function = STextSubstitution_B __assimilated=1
			package PrintPrompt_fn _function
				symbol public misc PrintPrompt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintPrompt_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RunTimeProblemShow --> /main/template/functions/RunTimeProblemShow_fn/RunTimeProblemShow
					symbol external misc ClearRTP --> /main/template/functions/ClearRTP_fn/ClearRTP
					symbol external misc EnsureBreakBeforePrompt --> /main/template/functions/EnsureBreakBeforePrompt_fn/EnsureBreakBeforePrompt
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00390 --> /main/connectors/plug_00390
					symbol external misc ClearBoxedText --> /main/template/functions/ClearBoxedText_fn/ClearBoxedText
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					local i K_unchecked
					code
						inv RunTimeProblemShow
						inv ClearRTP
						inv !styleroman
						inv EnsureBreakBeforePrompt
						inv TEXT_TY_Say
							inv plug_00390
						inv ClearBoxedText
						inv ClearParagraphing
							val K_unchecked 14
				constant PrintPrompt K_unchecked_function = PrintPrompt_B __assimilated=1
			package DisplayBoxedQuotation_fn _function
				symbol public misc DisplayBoxedQuotation
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DisplayBoxedQuotation_B _code
					symbol private misc Q
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00391 --> /main/template/variables/pending_boxed_quotation_var/pending_boxed_quotation
					local Q K_unchecked
					code
						inv !store
							reference
								val K_unchecked pending_boxed_quotation
							val K_unchecked Q
				constant DisplayBoxedQuotation K_unchecked_function = DisplayBoxedQuotation_B __assimilated=1
			package ClearBoxedText_fn _function
				symbol public misc ClearBoxedText
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ClearBoxedText_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00391 --> /main/template/variables/pending_boxed_quotation_var/pending_boxed_quotation
					symbol external misc Runtime_Quotations_Displayed --> /main/template/arrays/Runtime_Quotations_Displayed_arr/Runtime_Quotations_Displayed
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					local i K_unchecked
					code
						inv !if
							val K_unchecked pending_boxed_quotation
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lookup
										val K_unchecked Runtime_Quotations_Displayed
										val K_unchecked i
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked Runtime_Quotations_Displayed
													val K_unchecked i
												val K_unchecked pending_boxed_quotation
											code
												inv !store
													reference
														val K_unchecked pending_boxed_quotation
													val K_unchecked 0
												inv !return
													val K_unchecked 1
								inv !store
									reference
										inv !lookup
											val K_unchecked Runtime_Quotations_Displayed
											val K_unchecked i
									val K_unchecked pending_boxed_quotation
								inv ClearParagraphing
									val K_unchecked 15
								inv pending_boxed_quotation
								inv ClearParagraphing
									val K_unchecked 16
								inv !store
									reference
										val K_unchecked pending_boxed_quotation
									val K_unchecked 0
				constant ClearBoxedText K_unchecked_function = ClearBoxedText_B __assimilated=1
			package NotifyTheScore_fn _function
				symbol public misc NotifyTheScore
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NotifyTheScore_B _code
					symbol private misc d
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00378 --> /main/template/variables/notify_mode_var/notify_mode
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					symbol external misc VM_Style --> /main/template/functions/VM_Style_fn/VM_Style
					symbol external misc NOTE_VMSTY --> /main/template/constants/NOTE_VMSTY_con/NOTE_VMSTY
					symbol external misc plug_00210 --> /main/template/variables/score_var/score
					symbol external misc plug_00392 --> /main/template/variables/last_score_var/last_score
					symbol external misc plug_00377 --> /main/connectors/plug_00377
					symbol external misc NORMAL_VMSTY --> /main/template/constants/NORMAL_VMSTY_con/NORMAL_VMSTY
					local d K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked notify_mode
								val K_unchecked 1
							code
								inv DivideParagraphPoint
								inv VM_Style
									val K_unchecked NOTE_VMSTY
								inv !store
									reference
										val K_unchecked d
									inv !minus
										val K_unchecked score
										val K_unchecked last_score
								inv !ifelse
									inv !gt
										val K_unchecked d
										val K_unchecked 0
									code
										inv plug_00377
											val K_unchecked 68
											val K_unchecked d
									code
										inv !if
											inv !lt
												val K_unchecked d
												val K_unchecked 0
											code
												inv plug_00377
													val K_unchecked 69
													inv !unaryminus
														val K_unchecked d
								inv !print
									val K_unchecked "\n"
								inv VM_Style
									val K_unchecked NORMAL_VMSTY
				constant NotifyTheScore K_unchecked_function = NotifyTheScore_B __assimilated=1
			package DrawStatusLine_fn _function
				symbol public misc DrawStatusLine
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DrawStatusLine_B _code
					symbol private misc width
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc posb
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc CONSTRUCTING_STATUS_LINE_ACT --> /main/template/constants/CONSTRUCTING_STATUS_LINE_ACT_con/CONSTRUCTING_STATUS_LINE_ACT
					symbol external misc VM_StatusLineHeight --> /main/template/functions/VM_StatusLineHeight_fn/VM_StatusLineHeight
					symbol external misc VM_MoveCursorInStatusLine --> /main/template/functions/VM_MoveCursorInStatusLine_fn/VM_MoveCursorInStatusLine
					symbol external misc plug_00120 --> /main/template/variables/statuswin_current_var/statuswin_current
					symbol external misc VM_ScreenWidth --> /main/template/functions/VM_ScreenWidth_fn/VM_ScreenWidth
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00393 --> /main/template/variables/left_hand_status_line_var/left_hand_status_line
					symbol external misc plug_00394 --> /main/template/variables/right_hand_status_line_var/right_hand_status_line
					symbol external misc VM_MainWindow --> /main/template/functions/VM_MainWindow_fn/VM_MainWindow
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					local width K_unchecked
					local posb K_unchecked
					code
						inv !push
							val K_unchecked say__p
						inv !push
							val K_unchecked say__pc
						inv BeginActivity
							val K_unchecked CONSTRUCTING_STATUS_LINE_ACT
						inv VM_StatusLineHeight
							val K_unchecked 1
						inv VM_MoveCursorInStatusLine
							val K_unchecked 1
							val K_unchecked 1
						inv !if
							val K_unchecked statuswin_current
							code
								inv !store
									reference
										val K_unchecked width
									inv VM_ScreenWidth
								inv !store
									reference
										val K_unchecked posb
									inv !minus
										val K_unchecked width
										val K_unchecked 15
								inv !spaces
									val K_unchecked width
								inv ClearParagraphing
									val K_unchecked 17
								inv !if
									inv !eq
										inv ForActivity
											val K_unchecked CONSTRUCTING_STATUS_LINE_ACT
										val K_unchecked 0
									code
										inv VM_MoveCursorInStatusLine
											val K_unchecked 1
											val K_unchecked 2
										inv TEXT_TY_Say
											val K_unchecked left_hand_status_line
										inv VM_MoveCursorInStatusLine
											val K_unchecked 1
											val K_unchecked posb
										inv TEXT_TY_Say
											val K_unchecked right_hand_status_line
								inv VM_MoveCursorInStatusLine
									val K_unchecked 1
									val K_unchecked 1
								inv VM_MainWindow
						inv ClearParagraphing
							val K_unchecked 18
						inv EndActivity
							val K_unchecked CONSTRUCTING_STATUS_LINE_ACT
						inv !pull
							reference
								val K_unchecked say__pc
						inv !pull
							reference
								val K_unchecked say__p
				constant DrawStatusLine K_unchecked_function = DrawStatusLine_B __assimilated=1
			package SL_Score_Moves_fn _function
				symbol public misc SL_Score_Moves
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SL_Score_Moves_B _code
					symbol external misc plug_00311 --> /main/template/variables/not_yet_in_play_var/not_yet_in_play
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !if
							val K_unchecked not_yet_in_play
							code
								inv !return
									val K_unchecked 1
				constant SL_Score_Moves K_unchecked_function = SL_Score_Moves_B __assimilated=1
			package SL_Location_fn _function
				symbol public misc SL_Location
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SL_Location_B _code
					symbol private misc even_before
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00311 --> /main/template/variables/not_yet_in_play_var/not_yet_in_play
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc PRINTING_NAME_OF_DARK_ROOM_ACT --> /main/template/constants/PRINTING_NAME_OF_DARK_ROOM_ACT_con/PRINTING_NAME_OF_DARK_ROOM_ACT
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc plug_00395 --> /main/connectors/plug_00395
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					symbol external misc FindVisibilityLevels --> /main/template/functions/FindVisibilityLevels_fn/FindVisibilityLevels
					symbol external misc plug_00151 --> /main/template/variables/visibility_ceiling_var/visibility_ceiling
					local even_before K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked not_yet_in_play
								inv !eq
									val K_unchecked even_before
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked location
								val K_unchecked thedark
							code
								inv BeginActivity
									val K_unchecked PRINTING_NAME_OF_DARK_ROOM_ACT
								inv !if
									inv !eq
										inv ForActivity
											val K_unchecked PRINTING_NAME_OF_DARK_ROOM_ACT
										val K_unchecked 0
									code
										inv plug_00395
											val K_unchecked 65
								inv EndActivity
									val K_unchecked PRINTING_NAME_OF_DARK_ROOM_ACT
							code
								inv FindVisibilityLevels
								inv !ifelse
									inv !eq
										val K_unchecked visibility_ceiling
										val K_unchecked location
									code
										inv !printname
											val K_unchecked location
									code
										inv !printcdef
											val K_unchecked visibility_ceiling
				constant SL_Location K_unchecked_function = SL_Location_B __assimilated=1
			package DARKNESS_NAME_INTERNAL_R_fn _function
				symbol public misc DARKNESS_NAME_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DARKNESS_NAME_INTERNAL_R_B _code
					code
				constant DARKNESS_NAME_INTERNAL_R K_unchecked_function = DARKNESS_NAME_INTERNAL_R_B __assimilated=1
			package Banner_fn _function
				symbol public misc Banner
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Banner_B _code
					symbol external misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
					symbol external misc PRINTING_BANNER_TEXT_ACT --> /main/template/constants/PRINTING_BANNER_TEXT_ACT_con/PRINTING_BANNER_TEXT_ACT
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
					symbol external misc VM_Style --> /main/template/functions/VM_Style_fn/VM_Style
					symbol external misc HEADER_VMSTY --> /main/template/constants/HEADER_VMSTY_con/HEADER_VMSTY
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00382 --> /main/connectors/plug_00382
					symbol external misc NORMAL_VMSTY --> /main/template/constants/NORMAL_VMSTY_con/NORMAL_VMSTY
					symbol external misc plug_00397 --> /main/connectors/plug_00397
					symbol external misc VM_Describe_Release --> /main/template/functions/VM_Describe_Release_fn/VM_Describe_Release
					symbol external misc PrintI6Text --> /main/template/functions/PrintI6Text_fn/PrintI6Text
					symbol external misc plug_00398 --> /main/connectors/plug_00398
					symbol external misc LibRelease --> /main/template/constants/LibRelease_con/LibRelease
					symbol external misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
					code
						inv BeginActivity
							val K_unchecked PRINTING_BANNER_TEXT_ACT
						inv !if
							inv !eq
								inv ForActivity
									val K_unchecked PRINTING_BANNER_TEXT_ACT
								val K_unchecked 0
							code
								inv VM_Style
									val K_unchecked HEADER_VMSTY
								inv TEXT_TY_Say
									val K_unchecked plug_00382
								inv VM_Style
									val K_unchecked NORMAL_VMSTY
								inv !print
									val K_unchecked "\n"
								inv TEXT_TY_Say
									val K_unchecked plug_00397
								inv !print
									val K_unchecked "\n"
								inv VM_Describe_Release
								inv !print
									val K_unchecked " / Inform 7 build "
								inv PrintI6Text
									val K_unchecked plug_00398
								inv !print
									val K_unchecked " "
								inv !print
									val K_unchecked "(I6/v"
								inv !inversion
								inv !print
									val K_unchecked " lib "
								inv PrintI6Text
									val K_unchecked LibRelease
								inv !print
									val K_unchecked ") "
								inv !print
									val K_unchecked "S"
								inv !print
									val K_unchecked "\n"
						inv EndActivity
							val K_unchecked PRINTING_BANNER_TEXT_ACT
				constant Banner K_unchecked_function = Banner_B __assimilated=1
			package DecimalNumber_fn _function
				symbol public misc DecimalNumber
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DecimalNumber_B _code
					symbol private misc num
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local num K_unchecked
					code
						inv !printnumber
							val K_unchecked num
				constant DecimalNumber K_unchecked_function = DecimalNumber_B __assimilated=1
			package EnglishNumber_fn _function
				symbol public misc EnglishNumber
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package EnglishNumber_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc LanguageNumber --> /main/template/functions/LanguageNumber_fn/LanguageNumber
					local n K_unchecked
					code
						inv LanguageNumber
							val K_unchecked n
				constant EnglishNumber K_unchecked_function = EnglishNumber_B __assimilated=1
			package PrintI6Text_fn _function
				symbol public misc PrintI6Text
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintI6Text_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc String --> /main/veneer/String
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc EMPTY_TEXT_PACKED --> /main/template/constants/EMPTY_TEXT_PACKED_con/EMPTY_TEXT_PACKED
					local x K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked x
								val K_unchecked String
							code
								inv !printstring
									val K_unchecked x
						inv !if
							inv !ofclass
								val K_unchecked x
								val K_unchecked Routine
							code
								inv !return
									inv !indirect0
										val K_unchecked x
						inv !if
							inv !eq
								val K_unchecked x
								val K_unchecked EMPTY_TEXT_PACKED
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant PrintI6Text K_unchecked_function = PrintI6Text_B __assimilated=1
			package I7_String_fn _function
				symbol public misc I7_String
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_String_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					local x K_unchecked
					code
						inv TEXT_TY_Say
							val K_unchecked x
				constant I7_String K_unchecked_function = I7_String_B __assimilated=1
			package PrintOrRun_fn _function
				symbol public misc PrintOrRun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintOrRun_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc prop
					symbol private misc no_break
					symbol private misc pv
					symbol private misc st
					symbol private misc routine_return_value
					symbol external misc plug_00350 --> /main/connectors/plug_00350
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					local obj K_unchecked
					local prop K_unchecked
					local no_break K_unchecked
					local pv K_unchecked
					local st K_unchecked
					local routine_return_value K_unchecked
					code
						inv !push
							val K_unchecked plug_00350
						inv !store
							reference
								val K_unchecked plug_00350
							val K_unchecked obj
						inv !ifelse
							inv !eq
								val K_unchecked prop
								val K_unchecked 0
							code
								inv !printname
									val K_unchecked prop
								inv !store
									reference
										val K_unchecked routine_return_value
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked routine_return_value
									inv TEXT_TY_Say
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked prop
						inv !pull
							reference
								val K_unchecked plug_00350
						inv !if
							val K_unchecked routine_return_value
							code
								inv !store
									reference
										val K_unchecked say__p
									val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked no_break
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "\n"
										inv DivideParagraphPoint
						inv !return
							val K_unchecked routine_return_value
				constant PrintOrRun K_unchecked_function = PrintOrRun_B __assimilated=1
			package CPrintOrRun_fn _function
				symbol public misc CPrintOrRun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CPrintOrRun_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc prop
					symbol private misc v
					symbol private misc length
					symbol private misc i
					symbol external misc String --> /main/veneer/String
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc VM_PrintToBuffer --> /main/template/functions/VM_PrintToBuffer_fn/VM_PrintToBuffer
					symbol external misc StorageForShortName --> /main/template/arrays/StorageForShortName_arr/StorageForShortName
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc RunTimeError --> /main/template/functions/RunTimeError_fn/RunTimeError
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc VM_LowerToUpperCase --> /main/template/functions/VM_LowerToUpperCase_fn/VM_LowerToUpperCase
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					local obj K_unchecked
					local prop K_unchecked
					local v K_unchecked
					local length K_unchecked
					local i K_unchecked
					code
						inv !ifelse
							inv !or
								inv !ofclass
									val K_unchecked obj
									inv !alternative
										val K_unchecked String
										val K_unchecked Routine
								inv !eq
									val K_unchecked prop
									val K_unchecked 0
							code
								inv VM_PrintToBuffer
									val K_unchecked StorageForShortName
									val K_unchecked 160
									val K_unchecked obj
							code
								inv !if
									inv !eq
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked prop
										val K_unchecked plug_00232
									code
										inv !return
											val K_unchecked 0
								inv !ifelse
									inv !eq
										inv metaclass
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked prop
										inv !alternative
											val K_unchecked Routine
											val K_unchecked String
									code
										inv VM_PrintToBuffer
											val K_unchecked StorageForShortName
											val K_unchecked 160
											val K_unchecked obj
											val K_unchecked prop
									code
										inv !return
											inv RunTimeError
												val K_unchecked 2
												val K_unchecked obj
												val K_unchecked prop
						inv !store
							reference
								val K_unchecked length
							inv !lookup
								val K_unchecked StorageForShortName
								val K_unchecked 0
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked StorageForShortName
									val K_unchecked plug_00139
							inv VM_LowerToUpperCase
								inv !lookupbyte
									val K_unchecked StorageForShortName
									val K_unchecked plug_00139
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked plug_00139
							inv !lt
								val K_unchecked i
								inv !plus
									val K_unchecked length
									val K_unchecked plug_00139
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !printchar
									inv !lookupbyte
										val K_unchecked StorageForShortName
										val K_unchecked i
						inv !if
							inv !gt
								val K_unchecked i
								val K_unchecked plug_00139
							code
								inv !store
									reference
										val K_unchecked say__p
									val K_unchecked 1
						inv !return
							val K_unchecked 1
				constant CPrintOrRun K_unchecked_function = CPrintOrRun_B __assimilated=1
			package Cap_fn _function
				symbol public misc Cap
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Cap_B _code
					symbol private misc str
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc nocaps
					symbol external misc CPrintOrRun --> /main/template/functions/CPrintOrRun_fn/CPrintOrRun
					local str K_unchecked
					local nocaps K_unchecked
					code
						inv !ifelse
							val K_unchecked nocaps
							code
								inv !printstring
									val K_unchecked str
							code
								inv CPrintOrRun
									val K_unchecked str
									val K_unchecked 0
				constant Cap K_unchecked_function = Cap_B __assimilated=1
			package PSN___fn _function
				symbol public misc PSN__
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PSN___B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc String --> /main/veneer/String
					symbol external misc RegardingSingleObject --> /main/template/functions/RegardingSingleObject_fn/RegardingSingleObject
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc PRINTING_THE_NAME_ACT --> /main/template/constants/PRINTING_THE_NAME_ACT_con/PRINTING_THE_NAME_ACT
					local o K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked o
								val K_unchecked 0
							code
								inv plug_00165
									val K_unchecked 89
								inv !return
									val K_unchecked 1
						inv !switch
							inv metaclass
								val K_unchecked o
							code
								inv !case
									val K_unchecked Routine
									code
										inv !print
											val K_unchecked "<routine "
										inv !printnumber
											val K_unchecked o
										inv !print
											val K_unchecked ">"
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked String
									code
										inv !print
											val K_unchecked "<string \""
										inv !printstring
											val K_unchecked o
										inv !print
											val K_unchecked "\">"
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked 0
									code
										inv !print
											val K_unchecked "<illegal object number "
										inv !printnumber
											val K_unchecked o
										inv !print
											val K_unchecked ">"
										inv !return
											val K_unchecked 1
						inv RegardingSingleObject
							val K_unchecked o
						inv CarryOutActivity
							val K_unchecked PRINTING_THE_NAME_ACT
							val K_unchecked o
				constant PSN__ K_unchecked_function = PSN___B __assimilated=1
			package STANDARD_NAME_PRINTING_R_fn _function
				symbol public misc STANDARD_NAME_PRINTING_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STANDARD_NAME_PRINTING_R_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc String --> /main/veneer/String
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00400 --> /main/template/variables/caps_mode_var/caps_mode
					symbol external misc plug_00401 --> /main/connectors/plug_00401
					symbol external misc short_name_indef --> /main/template/properties/short_name_indef_prop/short_name_indef
					symbol external misc PrintOrRun --> /main/template/functions/PrintOrRun_fn/PrintOrRun
					symbol external misc cap_short_name --> /main/template/constants/cap_short_name_con/cap_short_name
					symbol external misc short_name --> /main/template/properties/short_name_prop/short_name
					local obj K_unchecked
					code
						inv !store
							reference
								val K_unchecked obj
							val K_unchecked parameter_value
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv plug_00165
									val K_unchecked 89
								inv !return
									val K_unchecked 1
						inv !switch
							inv metaclass
								val K_unchecked obj
							code
								inv !case
									val K_unchecked Routine
									code
										inv !print
											val K_unchecked "<routine "
										inv !printnumber
											val K_unchecked obj
										inv !print
											val K_unchecked ">"
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked String
									code
										inv !print
											val K_unchecked "<string \""
										inv !printstring
											val K_unchecked obj
										inv !print
											val K_unchecked "\">"
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked 0
									code
										inv !print
											val K_unchecked "<illegal object number "
										inv !printnumber
											val K_unchecked obj
										inv !print
											val K_unchecked ">"
										inv !return
											val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked player
							code
								inv !ifelse
									inv !and
										inv !eq
											val K_unchecked indef_mode
											val K_unchecked plug_00232
										val K_unchecked caps_mode
									code
										inv plug_00401
											val K_unchecked 65
									code
										inv plug_00401
											val K_unchecked 66
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !and
									val K_unchecked indef_mode
									inv !ne
										inv !propertyaddress
											val K_unchecked obj
											val K_unchecked short_name_indef
										val K_unchecked 0
								inv !ne
									inv PrintOrRun
										val K_unchecked obj
										val K_unchecked short_name_indef
										val K_unchecked 1
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !and
									val K_unchecked caps_mode
									inv !ne
										inv !propertyaddress
											val K_unchecked obj
											val K_unchecked cap_short_name
										val K_unchecked 0
								inv !ne
									inv PrintOrRun
										val K_unchecked obj
										val K_unchecked cap_short_name
										val K_unchecked 1
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked caps_mode
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !ne
									inv !propertyaddress
										val K_unchecked obj
										val K_unchecked short_name
									val K_unchecked 0
								inv !ne
									inv PrintOrRun
										val K_unchecked obj
										val K_unchecked short_name
										val K_unchecked 1
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !printobj
							val K_unchecked obj
				constant STANDARD_NAME_PRINTING_R K_unchecked_function = STANDARD_NAME_PRINTING_R_B __assimilated=1
			package STANDARD_RESPONSE_ISSUING_R_fn _function
				symbol public misc STANDARD_RESPONSE_ISSUING_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STANDARD_RESPONSE_ISSUING_R_B _code
					symbol external misc RegardingSingleObject --> /main/template/functions/RegardingSingleObject_fn/RegardingSingleObject
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc ResponseTexts --> /main/veneer/ResponseTexts
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					code
						inv RegardingSingleObject
						inv TEXT_TY_Say
							inv !lookup
								val K_unchecked ResponseTexts
								inv !minus
									val K_unchecked parameter_value
									val K_unchecked 1
				constant STANDARD_RESPONSE_ISSUING_R K_unchecked_function = STANDARD_RESPONSE_ISSUING_R_B __assimilated=1
			package PRINT_PROTAGONIST_INTERNAL_R_fn _function
				symbol public misc PRINT_PROTAGONIST_INTERNAL_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PRINT_PROTAGONIST_INTERNAL_R_B _code
					code
				constant PRINT_PROTAGONIST_INTERNAL_R K_unchecked_function = PRINT_PROTAGONIST_INTERNAL_R_B __assimilated=1
			package PrefaceByArticle_fn _function
				symbol public misc PrefaceByArticle
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrefaceByArticle_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc acode
					symbol private misc pluralise
					symbol private misc capitalise
					symbol private misc i
					symbol private misc artform
					symbol private misc findout
					symbol private misc artval
					symbol external misc articles --> /main/template/properties/articles_prop/articles
					symbol external misc plug_00402 --> /main/template/variables/short_name_case_var/short_name_case
					symbol external misc LanguageCases --> /main/template/constants/LanguageCases_con/LanguageCases
					symbol external misc Cap --> /main/template/functions/Cap_fn/Cap
					symbol external misc PSN__ --> /main/template/functions/PSN___fn/PSN__
					symbol external misc GetGNAOfObject --> /main/template/functions/GetGNAOfObject_fn/GetGNAOfObject
					symbol external misc LanguageGNAsToArticles --> /main/template/arrays/LanguageGNAsToArticles_arr/LanguageGNAsToArticles
					symbol external misc LanguageArticles --> /main/template/arrays/LanguageArticles_arr/LanguageArticles
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc LanguageContractionForms --> /main/template/constants/LanguageContractionForms_con/LanguageContractionForms
					symbol external misc plug_00293 --> /main/connectors/plug_00293
					symbol external misc StorageForShortName --> /main/template/arrays/StorageForShortName_arr/StorageForShortName
					symbol external misc EnglishNumber --> /main/template/functions/EnglishNumber_fn/EnglishNumber
					symbol external misc LanguageContraction --> /main/template/functions/LanguageContraction_fn/LanguageContraction
					local obj K_unchecked
					local acode K_unchecked
					local pluralise K_unchecked
					local capitalise K_unchecked
					local i K_unchecked
					local artform K_unchecked
					local findout K_unchecked
					local artval K_unchecked
					code
						inv !if
							inv !provides
								val K_unchecked obj
								val K_unchecked articles
							code
								inv !store
									reference
										val K_unchecked artval
									inv !lookup
										inv !propertyaddress
											val K_unchecked obj
											val K_unchecked articles
										inv !plus
											val K_unchecked acode
											inv !times
												val K_unchecked short_name_case
												val K_unchecked LanguageCases
								inv !ifelse
									val K_unchecked capitalise
									code
										inv Cap
											val K_unchecked artval
										inv !print
											val K_unchecked " "
									code
										inv !printstring
											val K_unchecked artval
										inv !print
											val K_unchecked " "
								inv !if
									val K_unchecked pluralise
									code
										inv !return
											val K_unchecked 1
								inv PSN__
									val K_unchecked obj
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked i
							inv GetGNAOfObject
								val K_unchecked obj
						inv !if
							val K_unchecked pluralise
							code
								inv !if
									inv !or
										inv !lt
											val K_unchecked i
											val K_unchecked 3
										inv !and
											inv !ge
												val K_unchecked i
												val K_unchecked 6
											inv !lt
												val K_unchecked i
												val K_unchecked 9
									code
										inv !store
											reference
												val K_unchecked i
											inv !plus
												val K_unchecked i
												val K_unchecked 3
						inv !store
							reference
								val K_unchecked i
							inv !lookup
								val K_unchecked LanguageGNAsToArticles
								val K_unchecked i
						inv !store
							reference
								val K_unchecked artform
							inv !plus
								val K_unchecked LanguageArticles
								inv !times
									inv !times
										inv !times
											val K_unchecked 3
											val K_unchecked plug_00139
										val K_unchecked LanguageContractionForms
									inv !plus
										val K_unchecked short_name_case
										inv !times
											val K_unchecked i
											val K_unchecked LanguageCases
						inv !if
							inv !ne
								inv !lookup
									val K_unchecked artform
									val K_unchecked acode
								inv !lookup
									val K_unchecked artform
									inv !plus
										val K_unchecked acode
										val K_unchecked 3
							code
								inv !store
									reference
										val K_unchecked findout
									val K_unchecked 1
						inv !if
							val K_unchecked findout
							code
								inv !ifelse
									val K_unchecked pluralise
									code
										inv plug_00293
											val K_unchecked StorageForShortName
											val K_unchecked 160
											val K_unchecked EnglishNumber
											val K_unchecked pluralise
									code
										inv plug_00293
											val K_unchecked StorageForShortName
											val K_unchecked 160
											val K_unchecked PSN__
											val K_unchecked obj
								inv !store
									reference
										val K_unchecked acode
									inv !plus
										val K_unchecked acode
										inv !times
											val K_unchecked 3
											inv LanguageContraction
												val K_unchecked StorageForShortName
						inv Cap
							inv !lookup
								val K_unchecked artform
								val K_unchecked acode
							inv !not
								val K_unchecked capitalise
						inv !if
							val K_unchecked pluralise
							code
								inv !return
									val K_unchecked 1
						inv PSN__
							val K_unchecked obj
				constant PrefaceByArticle K_unchecked_function = PrefaceByArticle_B __assimilated=1
			package IndefArt_fn _function
				symbol public misc IndefArt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IndefArt_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc proper --> /main/template/properties/proper_prop/proper
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc PSN__ --> /main/template/functions/PSN___fn/PSN__
					symbol external misc article --> /main/template/properties/article_prop/article
					symbol external misc TEXT_TY_Compare --> /main/template/functions/TEXT_TY_Compare_fn/TEXT_TY_Compare
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc PrintOrRun --> /main/template/functions/PrintOrRun_fn/PrintOrRun
					symbol external misc PrefaceByArticle --> /main/template/functions/PrefaceByArticle_fn/PrefaceByArticle
					local obj K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv plug_00165
									val K_unchecked 89
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked i
							val K_unchecked indef_mode
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked 1
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked proper
							code
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked plug_00232
								inv PSN__
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked i
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !provides
									val K_unchecked obj
									val K_unchecked article
								inv !ne
									inv TEXT_TY_Compare
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked article
										val K_unchecked EMPTY_TEXT_VALUE
									val K_unchecked 0
							code
								inv PrintOrRun
									val K_unchecked obj
									val K_unchecked article
									val K_unchecked 1
								inv !print
									val K_unchecked " "
								inv PSN__
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked i
								inv !return
									val K_unchecked 1
						inv PrefaceByArticle
							val K_unchecked obj
							val K_unchecked 2
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked i
				constant IndefArt K_unchecked_function = IndefArt_B __assimilated=1
			package CIndefArt_fn _function
				symbol public misc CIndefArt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CIndefArt_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc proper --> /main/template/properties/proper_prop/proper
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00400 --> /main/template/variables/caps_mode_var/caps_mode
					symbol external misc PSN__ --> /main/template/functions/PSN___fn/PSN__
					symbol external misc article --> /main/template/properties/article_prop/article
					symbol external misc TEXT_TY_Compare --> /main/template/functions/TEXT_TY_Compare_fn/TEXT_TY_Compare
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc TEXT_TY_Say_Capitalised --> /main/template/functions/TEXT_TY_Say_Capitalised_fn/TEXT_TY_Say_Capitalised
					symbol external misc PrefaceByArticle --> /main/template/functions/PrefaceByArticle_fn/PrefaceByArticle
					local obj K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv plug_00165
									val K_unchecked 88
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked i
							val K_unchecked indef_mode
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked 1
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked proper
							code
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked plug_00232
								inv !store
									reference
										val K_unchecked caps_mode
									val K_unchecked 1
								inv PSN__
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked i
								inv !store
									reference
										val K_unchecked caps_mode
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !provides
									val K_unchecked obj
									val K_unchecked article
								inv !ne
									inv TEXT_TY_Compare
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked article
										val K_unchecked EMPTY_TEXT_VALUE
									val K_unchecked 0
							code
								inv TEXT_TY_Say_Capitalised
									inv !propertyvalue
										val K_unchecked obj
										val K_unchecked article
								inv !print
									val K_unchecked " "
								inv PSN__
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked i
								inv !return
									val K_unchecked 1
						inv PrefaceByArticle
							val K_unchecked obj
							val K_unchecked 2
							val K_unchecked 0
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked i
				constant CIndefArt K_unchecked_function = CIndefArt_B __assimilated=1
			package DefArt_fn _function
				symbol public misc DefArt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DefArt_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc Object --> /main/veneer/Object
					symbol external misc proper --> /main/template/properties/proper_prop/proper
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc PSN__ --> /main/template/functions/PSN___fn/PSN__
					symbol external misc PrefaceByArticle --> /main/template/functions/PrefaceByArticle_fn/PrefaceByArticle
					local obj K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							val K_unchecked indef_mode
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked 0
						inv !if
							inv !or
								inv !not
									inv !ofclass
										val K_unchecked obj
										val K_unchecked Object
								inv !has
									val K_unchecked obj
									val K_unchecked proper
							code
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked plug_00232
								inv PSN__
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked i
								inv !return
									val K_unchecked 1
						inv PrefaceByArticle
							val K_unchecked obj
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked i
				constant DefArt K_unchecked_function = DefArt_B __assimilated=1
			package CDefArt_fn _function
				symbol public misc CDefArt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CDefArt_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc Object --> /main/veneer/Object
					symbol external misc proper --> /main/template/properties/proper_prop/proper
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00400 --> /main/template/variables/caps_mode_var/caps_mode
					symbol external misc PSN__ --> /main/template/functions/PSN___fn/PSN__
					symbol external misc PrefaceByArticle --> /main/template/functions/PrefaceByArticle_fn/PrefaceByArticle
					local obj K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							val K_unchecked indef_mode
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked 0
						inv !if
							inv !and
								inv !ofclass
									val K_unchecked obj
									val K_unchecked Object
								inv !or
									inv !has
										val K_unchecked obj
										val K_unchecked proper
									inv !eq
										val K_unchecked obj
										val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked plug_00232
								inv !store
									reference
										val K_unchecked caps_mode
									val K_unchecked 1
								inv PSN__
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked i
								inv !store
									reference
										val K_unchecked caps_mode
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !if
							inv !or
								inv !not
									inv !ofclass
										val K_unchecked obj
										val K_unchecked Object
								inv !has
									val K_unchecked obj
									val K_unchecked proper
							code
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked plug_00232
								inv PSN__
									val K_unchecked obj
								inv !store
									reference
										val K_unchecked indef_mode
									val K_unchecked i
								inv !return
									val K_unchecked 1
						inv PrefaceByArticle
							val K_unchecked obj
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked i
				constant CDefArt K_unchecked_function = CDefArt_B __assimilated=1
			package PrintShortName_fn _function
				symbol public misc PrintShortName
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintShortName_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol external misc plug_00236 --> /main/template/variables/indef_mode_var/indef_mode
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc PSN__ --> /main/template/functions/PSN___fn/PSN__
					local obj K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							val K_unchecked indef_mode
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked plug_00232
						inv PSN__
							val K_unchecked obj
						inv !store
							reference
								val K_unchecked indef_mode
							val K_unchecked i
				constant PrintShortName K_unchecked_function = PrintShortName_B __assimilated=1
			package I7_SOO_PAR_fn _function
				symbol public misc I7_SOO_PAR
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_PAR_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					symbol external misc random --> /main/veneer/random
					local oldval K_unchecked
					local count K_unchecked
					code
						inv !if
							inv !le
								val K_unchecked count
								val K_unchecked 1
							code
								inv !return
									val K_unchecked count
						inv !return
							inv random
								val K_unchecked count
				constant I7_SOO_PAR K_unchecked_function = I7_SOO_PAR_B __assimilated=1
			package I7_SOO_RAN_fn _function
				symbol public misc I7_SOO_RAN
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_RAN_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					symbol private misc v
					symbol external misc random --> /main/veneer/random
					local oldval K_unchecked
					local count K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !le
								val K_unchecked count
								val K_unchecked 1
							code
								inv !return
									val K_unchecked count
						inv !store
							reference
								val K_unchecked v
							val K_unchecked oldval
						inv !while
							inv !eq
								val K_unchecked v
								val K_unchecked oldval
							code
								inv !store
									reference
										val K_unchecked v
									inv random
										val K_unchecked count
						inv !return
							val K_unchecked v
				constant I7_SOO_RAN K_unchecked_function = I7_SOO_RAN_B __assimilated=1
			package I7_SOO_STI_fn _function
				symbol public misc I7_SOO_STI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_STI_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					symbol private misc v
					symbol external misc I7_SOO_PAR --> /main/template/functions/I7_SOO_PAR_fn/I7_SOO_PAR
					local oldval K_unchecked
					local count K_unchecked
					local v K_unchecked
					code
						inv !if
							val K_unchecked oldval
							code
								inv !return
									val K_unchecked oldval
						inv !return
							inv I7_SOO_PAR
								val K_unchecked oldval
								val K_unchecked count
				constant I7_SOO_STI K_unchecked_function = I7_SOO_STI_B __assimilated=1
			package I7_SOO_CYC_fn _function
				symbol public misc I7_SOO_CYC
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_CYC_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					local oldval K_unchecked
					local count K_unchecked
					code
						inv !postincrement
							reference
								val K_unchecked oldval
						inv !if
							inv !gt
								val K_unchecked oldval
								val K_unchecked count
							code
								inv !store
									reference
										val K_unchecked oldval
									val K_unchecked 1
						inv !return
							val K_unchecked oldval
				constant I7_SOO_CYC K_unchecked_function = I7_SOO_CYC_B __assimilated=1
			package I7_SOO_STOP_fn _function
				symbol public misc I7_SOO_STOP
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_STOP_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					local oldval K_unchecked
					local count K_unchecked
					code
						inv !postincrement
							reference
								val K_unchecked oldval
						inv !if
							inv !gt
								val K_unchecked oldval
								val K_unchecked count
							code
								inv !store
									reference
										val K_unchecked oldval
									val K_unchecked count
						inv !return
							val K_unchecked oldval
				constant I7_SOO_STOP K_unchecked_function = I7_SOO_STOP_B __assimilated=1
			package I7_SOO_TAP_fn _function
				symbol public misc I7_SOO_TAP
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_TAP_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					symbol private misc tn
					symbol private misc rn
					symbol private misc c
					symbol external misc random --> /main/veneer/random
					local oldval K_unchecked
					local count K_unchecked
					local tn K_unchecked
					local rn K_unchecked
					local c K_unchecked
					code
						inv !if
							inv !le
								val K_unchecked count
								val K_unchecked 1
							code
								inv !return
									val K_unchecked count
						inv !store
							reference
								val K_unchecked tn
							inv !divide
								inv !times
									val K_unchecked count
									inv !plus
										val K_unchecked count
										val K_unchecked 1
								val K_unchecked 2
						inv !store
							reference
								val K_unchecked rn
							inv random
								val K_unchecked tn
						inv !for
							inv !store
								reference
									val K_unchecked c
								val K_unchecked 1
							inv !le
								val K_unchecked c
								val K_unchecked count
							inv !postincrement
								reference
									val K_unchecked c
							code
								inv !store
									reference
										val K_unchecked rn
									inv !minus
										val K_unchecked rn
										val K_unchecked c
								inv !if
									inv !le
										val K_unchecked rn
										val K_unchecked 0
									code
										inv !return
											inv !plus
												inv !minus
													val K_unchecked count
													val K_unchecked c
												val K_unchecked 1
				constant I7_SOO_TAP K_unchecked_function = I7_SOO_TAP_B __assimilated=1
			package I7_SOO_TRAN_fn _function
				symbol public misc I7_SOO_TRAN
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_TRAN_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					symbol external misc I7_SOO_RAN --> /main/template/functions/I7_SOO_RAN_fn/I7_SOO_RAN
					local oldval K_unchecked
					local count K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked oldval
								val K_unchecked count
							code
								inv !return
									inv !plus
										val K_unchecked oldval
										val K_unchecked 1
						inv !return
							inv !plus
								inv !plus
									val K_unchecked count
									val K_unchecked 1
								inv I7_SOO_RAN
									inv !modulo
										val K_unchecked oldval
										inv !plus
											val K_unchecked count
											val K_unchecked 1
									val K_unchecked count
				constant I7_SOO_TRAN K_unchecked_function = I7_SOO_TRAN_B __assimilated=1
			package I7_SOO_TPAR_fn _function
				symbol public misc I7_SOO_TPAR
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_TPAR_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					symbol external misc I7_SOO_PAR --> /main/template/functions/I7_SOO_PAR_fn/I7_SOO_PAR
					local oldval K_unchecked
					local count K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked oldval
								val K_unchecked count
							code
								inv !return
									inv !plus
										val K_unchecked oldval
										val K_unchecked 1
						inv !return
							inv !plus
								inv !plus
									val K_unchecked count
									val K_unchecked 1
								inv I7_SOO_PAR
									inv !modulo
										val K_unchecked oldval
										inv !plus
											val K_unchecked count
											val K_unchecked 1
									val K_unchecked count
				constant I7_SOO_TPAR K_unchecked_function = I7_SOO_TPAR_B __assimilated=1
			package I7_SOO_SHU_fn _function
				symbol public misc I7_SOO_SHU
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package I7_SOO_SHU_B _code
					symbol private misc oldval
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc count
					symbol private misc sd
					symbol private misc ct
					symbol private misc v
					symbol private misc i
					symbol private misc j
					symbol private misc s
					symbol private misc ssd
					symbol private misc scope
					symbol private misc cc
					symbol private misc base
					symbol external misc I7_SOO_PAR --> /main/template/functions/I7_SOO_PAR_fn/I7_SOO_PAR
					symbol external misc plug_00403 --> /main/connectors/plug_00403
					symbol external misc random --> /main/veneer/random
					symbol external misc I7_SOO_SHUF --> /main/template/arrays/I7_SOO_SHUF_arr/I7_SOO_SHUF
					local oldval K_unchecked
					local count K_unchecked
					local sd K_unchecked
					local ct K_unchecked
					local v K_unchecked
					local i K_unchecked
					local j K_unchecked
					local s K_unchecked
					local ssd K_unchecked
					local scope K_unchecked
					local cc K_unchecked
					local base K_unchecked
					code
						inv !store
							reference
								val K_unchecked base
							inv !plus
								val K_unchecked count
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked v
							inv !modulo
								val K_unchecked oldval
								val K_unchecked base
						inv !store
							reference
								val K_unchecked oldval
							inv !divide
								val K_unchecked oldval
								val K_unchecked base
						inv !store
							reference
								val K_unchecked ct
							inv !modulo
								val K_unchecked oldval
								val K_unchecked base
						inv !store
							reference
								val K_unchecked sd
							inv !divide
								val K_unchecked oldval
								val K_unchecked base
						inv !if
							inv !gt
								val K_unchecked count
								val K_unchecked 32
							code
								inv !return
									inv I7_SOO_PAR
										val K_unchecked oldval
										val K_unchecked count
						inv !ifelse
							inv !le
								val K_unchecked count
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked v
									val K_unchecked count
							code
								inv !store
									reference
										val K_unchecked cc
									inv !times
										val K_unchecked base
										val K_unchecked base
								inv !store
									reference
										val K_unchecked scope
									inv !divide
										inv !minus
											val K_unchecked plug_00403
											val K_unchecked 1
										val K_unchecked cc
								inv !if
									inv !eq
										val K_unchecked sd
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked sd
											inv random
												val K_unchecked scope
										inv !store
											reference
												val K_unchecked ct
											val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked count
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked I7_SOO_SHUF
													val K_unchecked i
											val K_unchecked i
								inv !store
									reference
										val K_unchecked ssd
									val K_unchecked sd
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !minus
											val K_unchecked count
											val K_unchecked 1
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked j
											inv !plus
												inv !modulo
													val K_unchecked sd
													inv !minus
														val K_unchecked count
														val K_unchecked i
												val K_unchecked i
										inv !store
											reference
												val K_unchecked sd
											inv !plus
												inv !times
													val K_unchecked sd
													val K_unchecked 31973
												val K_unchecked 17
										inv !if
											inv !lt
												val K_unchecked sd
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked sd
													inv !unaryminus
														val K_unchecked sd
										inv !store
											reference
												val K_unchecked s
											inv !lookupbyte
												val K_unchecked I7_SOO_SHUF
												val K_unchecked j
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked I7_SOO_SHUF
													val K_unchecked j
											inv !lookupbyte
												val K_unchecked I7_SOO_SHUF
												val K_unchecked i
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked I7_SOO_SHUF
													val K_unchecked i
											val K_unchecked s
								inv !store
									reference
										val K_unchecked v
									inv !plus
										inv !lookupbyte
											val K_unchecked I7_SOO_SHUF
											val K_unchecked ct
										val K_unchecked 1
								inv !postincrement
									reference
										val K_unchecked ct
								inv !if
									inv !ge
										val K_unchecked ct
										val K_unchecked count
									code
										inv !store
											reference
												val K_unchecked ct
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked ssd
											val K_unchecked 0
						inv !return
							inv !plus
								inv !plus
									val K_unchecked v
									inv !times
										val K_unchecked ct
										val K_unchecked base
								inv !times
									inv !times
										val K_unchecked ssd
										val K_unchecked base
									val K_unchecked base
				constant I7_SOO_SHU K_unchecked_function = I7_SOO_SHU_B __assimilated=1
			package RELATION_TY_EquivalenceAdjective_fn _function
				symbol public misc RELATION_TY_EquivalenceAdjective
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_EquivalenceAdjective_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc perms
					symbol private misc state
					symbol private misc handler
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00404 --> /main/connectors/plug_00404
					symbol external misc plug_00405 --> /main/connectors/plug_00405
					symbol external misc RlnSetF --> /main/template/functions/RlnSetF_fn/RlnSetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
					local rel K_unchecked
					local set K_unchecked
					local perms K_unchecked
					local state K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked perms
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_PERMISSIONS
						inv !if
							inv !bitwiseand
								val K_unchecked perms
								val K_unchecked plug_00404
							code
								inv !store
									reference
										val K_unchecked state
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked set
								val K_unchecked 0
							code
								inv !return
									val K_unchecked state
						inv !if
							inv !and
								val K_unchecked set
								inv !eq
									val K_unchecked state
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked perms
									inv !plus
										val K_unchecked perms
										val K_unchecked plug_00404
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked perms
											val K_unchecked plug_00405
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked perms
											inv !plus
												val K_unchecked perms
												val K_unchecked plug_00405
						inv !if
							inv !and
								inv !eq
									val K_unchecked set
									val K_unchecked 0
								val K_unchecked state
							code
								inv !store
									reference
										val K_unchecked perms
									inv !minus
										val K_unchecked perms
										val K_unchecked plug_00404
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00405
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00405
						inv RlnSetF
							val K_unchecked rel
							val K_unchecked RR_PERMISSIONS
							val K_unchecked perms
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_HANDLER
						inv !if
							inv !eq
								inv !indirect3
									val K_unchecked handler
									val K_unchecked rel
									val K_unchecked RELS_SET_VALENCY
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked VALENCY_MASK
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "*** Can't change this to an equivalence relation ***"
				constant RELATION_TY_EquivalenceAdjective K_unchecked_function = RELATION_TY_EquivalenceAdjective_B __assimilated=1
			package RELATION_TY_SymmetricAdjective_fn _function
				symbol public misc RELATION_TY_SymmetricAdjective
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_SymmetricAdjective_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc perms
					symbol private misc state
					symbol private misc handler
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00405 --> /main/connectors/plug_00405
					symbol external misc RlnSetF --> /main/template/functions/RlnSetF_fn/RlnSetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
					local rel K_unchecked
					local set K_unchecked
					local perms K_unchecked
					local state K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked perms
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_PERMISSIONS
						inv !if
							inv !bitwiseand
								val K_unchecked perms
								val K_unchecked plug_00405
							code
								inv !store
									reference
										val K_unchecked state
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked set
								val K_unchecked 0
							code
								inv !return
									val K_unchecked state
						inv !if
							inv !and
								val K_unchecked set
								inv !eq
									val K_unchecked state
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked perms
									inv !plus
										val K_unchecked perms
										val K_unchecked plug_00405
						inv !if
							inv !and
								inv !eq
									val K_unchecked set
									val K_unchecked 0
								val K_unchecked state
							code
								inv !store
									reference
										val K_unchecked perms
									inv !minus
										val K_unchecked perms
										val K_unchecked plug_00405
						inv RlnSetF
							val K_unchecked rel
							val K_unchecked RR_PERMISSIONS
							val K_unchecked perms
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_HANDLER
						inv !if
							inv !eq
								inv !indirect3
									val K_unchecked handler
									val K_unchecked rel
									val K_unchecked RELS_SET_VALENCY
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked VALENCY_MASK
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "*** Can't change this to a symmetric relation ***"
				constant RELATION_TY_SymmetricAdjective K_unchecked_function = RELATION_TY_SymmetricAdjective_B __assimilated=1
			package RELATION_TY_OToOAdjective_fn _function
				symbol public misc RELATION_TY_OToOAdjective
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_OToOAdjective_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc perms
					symbol private misc state
					symbol private misc handler
					symbol private misc i
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00406 --> /main/connectors/plug_00406
					symbol external misc plug_00407 --> /main/connectors/plug_00407
					symbol external misc plug_00404 --> /main/connectors/plug_00404
					symbol external misc RlnSetF --> /main/template/functions/RlnSetF_fn/RlnSetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
					local rel K_unchecked
					local set K_unchecked
					local perms K_unchecked
					local state K_unchecked
					local handler K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked perms
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_PERMISSIONS
						inv !if
							inv !eq
								inv !bitwiseand
									val K_unchecked perms
									inv !plus
										val K_unchecked plug_00406
										val K_unchecked plug_00407
								inv !plus
									val K_unchecked plug_00406
									val K_unchecked plug_00407
							code
								inv !store
									reference
										val K_unchecked state
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked set
								val K_unchecked 0
							code
								inv !return
									val K_unchecked state
						inv !if
							inv !and
								val K_unchecked set
								inv !eq
									val K_unchecked state
									val K_unchecked 0
							code
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked perms
											val K_unchecked plug_00406
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked perms
											inv !plus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked perms
											val K_unchecked plug_00407
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked perms
											inv !plus
												val K_unchecked perms
												val K_unchecked plug_00407
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00404
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00404
						inv !if
							inv !and
								inv !eq
									val K_unchecked set
									val K_unchecked 0
								val K_unchecked state
							code
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00406
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00407
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00407
						inv RlnSetF
							val K_unchecked rel
							val K_unchecked RR_PERMISSIONS
							val K_unchecked perms
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_HANDLER
						inv !if
							inv !eq
								inv !indirect3
									val K_unchecked handler
									val K_unchecked rel
									val K_unchecked RELS_SET_VALENCY
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked VALENCY_MASK
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "*** Can't change this to a one-to-one relation ***"
				constant RELATION_TY_OToOAdjective K_unchecked_function = RELATION_TY_OToOAdjective_B __assimilated=1
			package RELATION_TY_OToVAdjective_fn _function
				symbol public misc RELATION_TY_OToVAdjective
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_OToVAdjective_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc perms
					symbol private misc state
					symbol private misc handler
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00406 --> /main/connectors/plug_00406
					symbol external misc plug_00407 --> /main/connectors/plug_00407
					symbol external misc plug_00405 --> /main/connectors/plug_00405
					symbol external misc plug_00404 --> /main/connectors/plug_00404
					symbol external misc RlnSetF --> /main/template/functions/RlnSetF_fn/RlnSetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
					local rel K_unchecked
					local set K_unchecked
					local perms K_unchecked
					local state K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked perms
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_PERMISSIONS
						inv !if
							inv !eq
								inv !bitwiseand
									val K_unchecked perms
									inv !plus
										val K_unchecked plug_00406
										val K_unchecked plug_00407
								val K_unchecked plug_00406
							code
								inv !store
									reference
										val K_unchecked state
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked set
								val K_unchecked 0
							code
								inv !return
									val K_unchecked state
						inv !if
							inv !and
								val K_unchecked set
								inv !eq
									val K_unchecked state
									val K_unchecked 0
							code
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked perms
											val K_unchecked plug_00406
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked perms
											inv !plus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00407
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00407
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00405
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00405
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00404
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00404
						inv !if
							inv !and
								inv !eq
									val K_unchecked set
									val K_unchecked 0
								val K_unchecked state
							code
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00406
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00407
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00407
						inv RlnSetF
							val K_unchecked rel
							val K_unchecked RR_PERMISSIONS
							val K_unchecked perms
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_HANDLER
						inv !if
							inv !eq
								inv !indirect3
									val K_unchecked handler
									val K_unchecked rel
									val K_unchecked RELS_SET_VALENCY
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked VALENCY_MASK
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "*** Can't change this to a one-to-various relation ***"
				constant RELATION_TY_OToVAdjective K_unchecked_function = RELATION_TY_OToVAdjective_B __assimilated=1
			package RELATION_TY_VToOAdjective_fn _function
				symbol public misc RELATION_TY_VToOAdjective
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_VToOAdjective_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc perms
					symbol private misc state
					symbol private misc handler
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00406 --> /main/connectors/plug_00406
					symbol external misc plug_00407 --> /main/connectors/plug_00407
					symbol external misc plug_00405 --> /main/connectors/plug_00405
					symbol external misc plug_00404 --> /main/connectors/plug_00404
					symbol external misc RlnSetF --> /main/template/functions/RlnSetF_fn/RlnSetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
					local rel K_unchecked
					local set K_unchecked
					local perms K_unchecked
					local state K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked perms
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_PERMISSIONS
						inv !if
							inv !eq
								inv !bitwiseand
									val K_unchecked perms
									inv !plus
										val K_unchecked plug_00406
										val K_unchecked plug_00407
								val K_unchecked plug_00407
							code
								inv !store
									reference
										val K_unchecked state
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked set
								val K_unchecked 0
							code
								inv !return
									val K_unchecked state
						inv !if
							inv !and
								val K_unchecked set
								inv !eq
									val K_unchecked state
									val K_unchecked 0
							code
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00406
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked perms
											val K_unchecked plug_00407
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked perms
											inv !plus
												val K_unchecked perms
												val K_unchecked plug_00407
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00405
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00405
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00404
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00404
						inv !if
							inv !and
								inv !eq
									val K_unchecked set
									val K_unchecked 0
								val K_unchecked state
							code
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00406
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00407
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00407
						inv RlnSetF
							val K_unchecked rel
							val K_unchecked RR_PERMISSIONS
							val K_unchecked perms
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_HANDLER
						inv !if
							inv !eq
								inv !indirect3
									val K_unchecked handler
									val K_unchecked rel
									val K_unchecked RELS_SET_VALENCY
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked VALENCY_MASK
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "*** Can't change this to a various-to-one relation ***"
				constant RELATION_TY_VToOAdjective K_unchecked_function = RELATION_TY_VToOAdjective_B __assimilated=1
			package RELATION_TY_VToVAdjective_fn _function
				symbol public misc RELATION_TY_VToVAdjective
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_VToVAdjective_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc perms
					symbol private misc state
					symbol private misc handler
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00406 --> /main/connectors/plug_00406
					symbol external misc plug_00407 --> /main/connectors/plug_00407
					symbol external misc RlnSetF --> /main/template/functions/RlnSetF_fn/RlnSetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
					local rel K_unchecked
					local set K_unchecked
					local perms K_unchecked
					local state K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked perms
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_PERMISSIONS
						inv !if
							inv !eq
								inv !bitwiseand
									val K_unchecked perms
									inv !plus
										val K_unchecked plug_00406
										val K_unchecked plug_00407
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked state
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked set
								val K_unchecked 0
							code
								inv !return
									val K_unchecked state
						inv !if
							inv !and
								val K_unchecked set
								inv !eq
									val K_unchecked state
									val K_unchecked 0
							code
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00406
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked plug_00407
									code
										inv !store
											reference
												val K_unchecked perms
											inv !minus
												val K_unchecked perms
												val K_unchecked plug_00407
						inv !if
							inv !and
								inv !eq
									val K_unchecked set
									val K_unchecked 0
								val K_unchecked state
							code
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked perms
											val K_unchecked plug_00406
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked perms
											inv !plus
												val K_unchecked perms
												val K_unchecked plug_00406
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked perms
											val K_unchecked plug_00407
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked perms
											inv !plus
												val K_unchecked perms
												val K_unchecked plug_00407
						inv RlnSetF
							val K_unchecked rel
							val K_unchecked RR_PERMISSIONS
							val K_unchecked perms
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_HANDLER
						inv !if
							inv !eq
								inv !indirect3
									val K_unchecked handler
									val K_unchecked rel
									val K_unchecked RELS_SET_VALENCY
									inv !bitwiseand
										val K_unchecked perms
										val K_unchecked VALENCY_MASK
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "*** Can't change this to a various-to-various relation ***"
				constant RELATION_TY_VToVAdjective K_unchecked_function = RELATION_TY_VToVAdjective_B __assimilated=1
			package Relation_Now1to1_fn _function
				symbol public misc Relation_Now1to1
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_Now1to1_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation_property
					symbol private misc obj2
					symbol private misc ol
					symbol external misc plug_00408 --> /main/connectors/plug_00408
					local obj1 K_unchecked
					local relation_property K_unchecked
					local obj2 K_unchecked
					local ol K_unchecked
					code
						inv !if
							val K_unchecked obj2
							code
								inv !objectloop
									reference
										val K_unchecked ol
									val K_unchecked plug_00408
									inv !provides
										val K_unchecked ol
										val K_unchecked relation_property
									code
										inv !if
											inv !eq
												inv !propertyvalue
													val K_unchecked ol
													val K_unchecked relation_property
												val K_unchecked obj2
											code
												inv !store
													reference
														inv !propertyvalue
															val K_unchecked ol
															val K_unchecked relation_property
													val K_unchecked 0
						inv !if
							val K_unchecked obj1
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj1
											val K_unchecked relation_property
									val K_unchecked obj2
				constant Relation_Now1to1 K_unchecked_function = Relation_Now1to1_B __assimilated=1
			package Relation_NowN1toV_fn _function
				symbol public misc Relation_NowN1toV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowN1toV_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation_property
					symbol private misc obj2
					local obj1 K_unchecked
					local relation_property K_unchecked
					local obj2 K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked obj1
								inv !eq
									inv !propertyvalue
										val K_unchecked obj1
										val K_unchecked relation_property
									val K_unchecked obj2
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj1
											val K_unchecked relation_property
									val K_unchecked 0
				constant Relation_NowN1toV K_unchecked_function = Relation_NowN1toV_B __assimilated=1
			package Relation_Now1to1V_fn _function
				symbol public misc Relation_Now1to1V
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_Now1to1V_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj2
					symbol private misc KOV
					symbol private misc relation_property
					symbol private misc ol
					symbol private misc N
					symbol external misc plug_00409 --> /main/connectors/plug_00409
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					local obj1 K_unchecked
					local obj2 K_unchecked
					local KOV K_unchecked
					local relation_property K_unchecked
					local ol K_unchecked
					local N K_unchecked
					code
						inv !if
							val K_unchecked obj2
							code
								inv !store
									reference
										val K_unchecked N
									inv plug_00409
										val K_unchecked KOV
								inv !for
									inv !store
										reference
											val K_unchecked ol
										val K_unchecked 1
									inv !le
										val K_unchecked ol
										val K_unchecked N
									inv !postincrement
										reference
											val K_unchecked ol
									code
										inv !if
											inv !eq
												inv GProperty
													val K_unchecked KOV
													val K_unchecked ol
													val K_unchecked relation_property
												val K_unchecked obj2
											code
												inv WriteGProperty
													val K_unchecked KOV
													val K_unchecked ol
													val K_unchecked relation_property
													val K_unchecked 0
						inv !if
							val K_unchecked obj1
							code
								inv WriteGProperty
									val K_unchecked KOV
									val K_unchecked obj1
									val K_unchecked relation_property
									val K_unchecked obj2
				constant Relation_Now1to1V K_unchecked_function = Relation_Now1to1V_B __assimilated=1
			package Relation_NowN1toVV_fn _function
				symbol public misc Relation_NowN1toVV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowN1toVV_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj2
					symbol private misc KOV
					symbol private misc relation_property
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					local obj1 K_unchecked
					local obj2 K_unchecked
					local KOV K_unchecked
					local relation_property K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked obj1
								inv !eq
									inv GProperty
										val K_unchecked KOV
										val K_unchecked obj1
										val K_unchecked relation_property
									val K_unchecked obj2
							code
								inv WriteGProperty
									val K_unchecked KOV
									val K_unchecked obj1
									val K_unchecked relation_property
									val K_unchecked 0
				constant Relation_NowN1toVV K_unchecked_function = Relation_NowN1toVV_B __assimilated=1
			package Relation_NowS1to1_fn _function
				symbol public misc Relation_NowS1to1
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowS1to1_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation_property
					symbol private misc obj2
					symbol external misc Object --> /main/veneer/Object
					local obj1 K_unchecked
					local relation_property K_unchecked
					local obj2 K_unchecked
					code
						inv !if
							inv !and
								inv !and
									inv !and
										inv !ofclass
											val K_unchecked obj1
											val K_unchecked Object
										inv !provides
											val K_unchecked obj1
											val K_unchecked relation_property
									inv !ofclass
										val K_unchecked obj2
										val K_unchecked Object
								inv !provides
									val K_unchecked obj2
									val K_unchecked relation_property
							code
								inv !if
									inv !propertyvalue
										val K_unchecked obj1
										val K_unchecked relation_property
									code
										inv !store
											reference
												inv !propertyvalue
													inv !propertyvalue
														val K_unchecked obj1
														val K_unchecked relation_property
													val K_unchecked relation_property
											val K_unchecked 0
								inv !if
									inv !propertyvalue
										val K_unchecked obj2
										val K_unchecked relation_property
									code
										inv !store
											reference
												inv !propertyvalue
													inv !propertyvalue
														val K_unchecked obj2
														val K_unchecked relation_property
													val K_unchecked relation_property
											val K_unchecked 0
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj1
											val K_unchecked relation_property
									val K_unchecked obj2
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj2
											val K_unchecked relation_property
									val K_unchecked obj1
				constant Relation_NowS1to1 K_unchecked_function = Relation_NowS1to1_B __assimilated=1
			package Relation_NowSN1to1_fn _function
				symbol public misc Relation_NowSN1to1
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowSN1to1_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation_property
					symbol private misc obj2
					symbol external misc Object --> /main/veneer/Object
					local obj1 K_unchecked
					local relation_property K_unchecked
					local obj2 K_unchecked
					code
						inv !if
							inv !and
								inv !and
									inv !and
										inv !and
											inv !ofclass
												val K_unchecked obj1
												val K_unchecked Object
											inv !provides
												val K_unchecked obj1
												val K_unchecked relation_property
										inv !ofclass
											val K_unchecked obj2
											val K_unchecked Object
									inv !provides
										val K_unchecked obj2
										val K_unchecked relation_property
								inv !eq
									inv !propertyvalue
										val K_unchecked obj1
										val K_unchecked relation_property
									val K_unchecked obj2
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj1
											val K_unchecked relation_property
									val K_unchecked 0
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj2
											val K_unchecked relation_property
									val K_unchecked 0
				constant Relation_NowSN1to1 K_unchecked_function = Relation_NowSN1to1_B __assimilated=1
			package Relation_NowS1to1V_fn _function
				symbol public misc Relation_NowS1to1V
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowS1to1V_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj2
					symbol private misc KOV
					symbol private misc relation_property
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					local obj1 K_unchecked
					local obj2 K_unchecked
					local KOV K_unchecked
					local relation_property K_unchecked
					code
						inv !if
							inv GProperty
								val K_unchecked KOV
								val K_unchecked obj1
								val K_unchecked relation_property
							code
								inv WriteGProperty
									val K_unchecked KOV
									inv GProperty
										val K_unchecked KOV
										val K_unchecked obj1
										val K_unchecked relation_property
									val K_unchecked relation_property
									val K_unchecked 0
						inv !if
							inv GProperty
								val K_unchecked KOV
								val K_unchecked obj2
								val K_unchecked relation_property
							code
								inv WriteGProperty
									val K_unchecked KOV
									inv GProperty
										val K_unchecked KOV
										val K_unchecked obj2
										val K_unchecked relation_property
									val K_unchecked relation_property
									val K_unchecked 0
						inv WriteGProperty
							val K_unchecked KOV
							val K_unchecked obj1
							val K_unchecked relation_property
							val K_unchecked obj2
						inv WriteGProperty
							val K_unchecked KOV
							val K_unchecked obj2
							val K_unchecked relation_property
							val K_unchecked obj1
				constant Relation_NowS1to1V K_unchecked_function = Relation_NowS1to1V_B __assimilated=1
			package Relation_NowSN1to1V_fn _function
				symbol public misc Relation_NowSN1to1V
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowSN1to1V_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj2
					symbol private misc KOV
					symbol private misc relation_property
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					local obj1 K_unchecked
					local obj2 K_unchecked
					local KOV K_unchecked
					local relation_property K_unchecked
					code
						inv !if
							inv !eq
								inv GProperty
									val K_unchecked KOV
									val K_unchecked obj1
									val K_unchecked relation_property
								val K_unchecked obj2
							code
								inv WriteGProperty
									val K_unchecked KOV
									val K_unchecked obj1
									val K_unchecked relation_property
									val K_unchecked 0
								inv WriteGProperty
									val K_unchecked KOV
									val K_unchecked obj2
									val K_unchecked relation_property
									val K_unchecked 0
				constant Relation_NowSN1to1V K_unchecked_function = Relation_NowSN1to1V_B __assimilated=1
			package Relation_NowVtoV_fn _function
				symbol public misc Relation_NowVtoV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowVtoV_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation
					symbol private misc obj2
					symbol private misc sym
					symbol private misc pr
					symbol private misc pr2
					symbol private misc i1
					symbol private misc i2
					symbol private misc vtov_structure
					symbol external misc Relation_NowVtoV --> /main/template/functions/Relation_NowVtoV_fn/Relation_NowVtoV
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
					symbol external misc VTOVS_RIGHT_INDEX_PROP --> /main/template/constants/VTOVS_RIGHT_INDEX_PROP_con/VTOVS_RIGHT_INDEX_PROP
					symbol external misc VTOVS_CACHE_BROKEN --> /main/template/constants/VTOVS_CACHE_BROKEN_con/VTOVS_CACHE_BROKEN
					symbol external misc Object --> /main/veneer/Object
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_IMPREL --> /main/template/constants/RTP_IMPREL_con/RTP_IMPREL
					symbol external misc VTOVS_RIGHT_DOMAIN_SIZE --> /main/template/constants/VTOVS_RIGHT_DOMAIN_SIZE_con/VTOVS_RIGHT_DOMAIN_SIZE
					symbol external misc IncreasingPowersOfTwo_TB --> /main/template/arrays/IncreasingPowersOfTwo_TB_arr/IncreasingPowersOfTwo_TB
					local obj1 K_unchecked
					local relation K_unchecked
					local obj2 K_unchecked
					local sym K_unchecked
					local pr K_unchecked
					local pr2 K_unchecked
					local i1 K_unchecked
					local i2 K_unchecked
					local vtov_structure K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked sym
								inv !ne
									val K_unchecked obj2
									val K_unchecked obj1
							code
								inv Relation_NowVtoV
									val K_unchecked obj2
									val K_unchecked relation
									val K_unchecked obj1
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked vtov_structure
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked pr
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_INDEX_PROP
						inv !store
							reference
								val K_unchecked pr2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_INDEX_PROP
						inv !store
							reference
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked VTOVS_CACHE_BROKEN
							val K_unchecked 1
						inv !ifelse
							val K_unchecked pr
							code
								inv !ifelse
									inv !and
										inv !ofclass
											val K_unchecked obj1
											val K_unchecked Object
										inv !provides
											val K_unchecked obj1
											val K_unchecked pr
									code
										inv !store
											reference
												val K_unchecked i1
											inv !propertyvalue
												val K_unchecked obj1
												val K_unchecked pr
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_IMPREL
												val K_unchecked obj1
												val K_unchecked relation
							code
								inv !store
									reference
										val K_unchecked i1
									inv !minus
										val K_unchecked obj1
										val K_unchecked 1
						inv !ifelse
							val K_unchecked pr2
							code
								inv !ifelse
									inv !and
										inv !ofclass
											val K_unchecked obj2
											val K_unchecked Object
										inv !provides
											val K_unchecked obj2
											val K_unchecked pr2
									code
										inv !store
											reference
												val K_unchecked i2
											inv !propertyvalue
												val K_unchecked obj2
												val K_unchecked pr2
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_IMPREL
												val K_unchecked obj2
												val K_unchecked relation
							code
								inv !store
									reference
										val K_unchecked i2
									inv !minus
										val K_unchecked obj2
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked pr
							inv !plus
								inv !times
									val K_unchecked i1
									inv !lookup
										val K_unchecked vtov_structure
										val K_unchecked VTOVS_RIGHT_DOMAIN_SIZE
								val K_unchecked i2
						inv !store
							reference
								val K_unchecked i1
							inv !lookup
								val K_unchecked IncreasingPowersOfTwo_TB
								inv !modulo
									val K_unchecked pr
									val K_unchecked 16
						inv !store
							reference
								val K_unchecked pr
							inv !plus
								inv !divide
									val K_unchecked pr
									val K_unchecked 16
								val K_unchecked 8
						inv !store
							reference
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked pr
							inv !bitwiseor
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked pr
								val K_unchecked i1
				constant Relation_NowVtoV K_unchecked_function = Relation_NowVtoV_B __assimilated=1
			package Relation_NowNVtoV_fn _function
				symbol public misc Relation_NowNVtoV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowNVtoV_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation
					symbol private misc obj2
					symbol private misc sym
					symbol private misc pr
					symbol private misc pr2
					symbol private misc i1
					symbol private misc i2
					symbol private misc vtov_structure
					symbol external misc Relation_NowNVtoV --> /main/template/functions/Relation_NowNVtoV_fn/Relation_NowNVtoV
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
					symbol external misc VTOVS_RIGHT_INDEX_PROP --> /main/template/constants/VTOVS_RIGHT_INDEX_PROP_con/VTOVS_RIGHT_INDEX_PROP
					symbol external misc VTOVS_CACHE_BROKEN --> /main/template/constants/VTOVS_CACHE_BROKEN_con/VTOVS_CACHE_BROKEN
					symbol external misc Object --> /main/veneer/Object
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_IMPREL --> /main/template/constants/RTP_IMPREL_con/RTP_IMPREL
					symbol external misc VTOVS_RIGHT_DOMAIN_SIZE --> /main/template/constants/VTOVS_RIGHT_DOMAIN_SIZE_con/VTOVS_RIGHT_DOMAIN_SIZE
					symbol external misc IncreasingPowersOfTwo_TB --> /main/template/arrays/IncreasingPowersOfTwo_TB_arr/IncreasingPowersOfTwo_TB
					local obj1 K_unchecked
					local relation K_unchecked
					local obj2 K_unchecked
					local sym K_unchecked
					local pr K_unchecked
					local pr2 K_unchecked
					local i1 K_unchecked
					local i2 K_unchecked
					local vtov_structure K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked sym
								inv !ne
									val K_unchecked obj2
									val K_unchecked obj1
							code
								inv Relation_NowNVtoV
									val K_unchecked obj2
									val K_unchecked relation
									val K_unchecked obj1
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked vtov_structure
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked pr
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_INDEX_PROP
						inv !store
							reference
								val K_unchecked pr2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_INDEX_PROP
						inv !store
							reference
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked VTOVS_CACHE_BROKEN
							val K_unchecked 1
						inv !ifelse
							val K_unchecked pr
							code
								inv !ifelse
									inv !and
										inv !ofclass
											val K_unchecked obj1
											val K_unchecked Object
										inv !provides
											val K_unchecked obj1
											val K_unchecked pr
									code
										inv !store
											reference
												val K_unchecked i1
											inv !propertyvalue
												val K_unchecked obj1
												val K_unchecked pr
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_IMPREL
												val K_unchecked obj1
												val K_unchecked relation
							code
								inv !store
									reference
										val K_unchecked i1
									inv !minus
										val K_unchecked obj1
										val K_unchecked 1
						inv !ifelse
							val K_unchecked pr2
							code
								inv !ifelse
									inv !and
										inv !ofclass
											val K_unchecked obj2
											val K_unchecked Object
										inv !provides
											val K_unchecked obj2
											val K_unchecked pr2
									code
										inv !store
											reference
												val K_unchecked i2
											inv !propertyvalue
												val K_unchecked obj2
												val K_unchecked pr2
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_IMPREL
												val K_unchecked obj2
												val K_unchecked relation
							code
								inv !store
									reference
										val K_unchecked i2
									inv !minus
										val K_unchecked obj2
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked pr
							inv !plus
								inv !times
									val K_unchecked i1
									inv !lookup
										val K_unchecked vtov_structure
										val K_unchecked VTOVS_RIGHT_DOMAIN_SIZE
								val K_unchecked i2
						inv !store
							reference
								val K_unchecked i1
							inv !lookup
								val K_unchecked IncreasingPowersOfTwo_TB
								inv !modulo
									val K_unchecked pr
									val K_unchecked 16
						inv !store
							reference
								val K_unchecked pr
							inv !plus
								inv !divide
									val K_unchecked pr
									val K_unchecked 16
								val K_unchecked 8
						inv !if
							inv !bitwiseand
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked pr
								val K_unchecked i1
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked vtov_structure
											val K_unchecked pr
									inv !minus
										inv !lookup
											val K_unchecked vtov_structure
											val K_unchecked pr
										val K_unchecked i1
				constant Relation_NowNVtoV K_unchecked_function = Relation_NowNVtoV_B __assimilated=1
			package Relation_TestVtoV_fn _function
				symbol public misc Relation_TestVtoV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_TestVtoV_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation
					symbol private misc obj2
					symbol private misc sym
					symbol private misc pr
					symbol private misc pr2
					symbol private misc i1
					symbol private misc i2
					symbol private misc vtov_structure
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
					symbol external misc VTOVS_RIGHT_INDEX_PROP --> /main/template/constants/VTOVS_RIGHT_INDEX_PROP_con/VTOVS_RIGHT_INDEX_PROP
					symbol external misc Object --> /main/veneer/Object
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_IMPREL --> /main/template/constants/RTP_IMPREL_con/RTP_IMPREL
					symbol external misc VTOVS_RIGHT_DOMAIN_SIZE --> /main/template/constants/VTOVS_RIGHT_DOMAIN_SIZE_con/VTOVS_RIGHT_DOMAIN_SIZE
					symbol external misc IncreasingPowersOfTwo_TB --> /main/template/arrays/IncreasingPowersOfTwo_TB_arr/IncreasingPowersOfTwo_TB
					local obj1 K_unchecked
					local relation K_unchecked
					local obj2 K_unchecked
					local sym K_unchecked
					local pr K_unchecked
					local pr2 K_unchecked
					local i1 K_unchecked
					local i2 K_unchecked
					local vtov_structure K_unchecked
					code
						inv !store
							reference
								val K_unchecked vtov_structure
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked pr
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_INDEX_PROP
						inv !store
							reference
								val K_unchecked pr2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_INDEX_PROP
						inv !if
							inv !and
								val K_unchecked sym
								inv !gt
									val K_unchecked obj2
									val K_unchecked obj1
							code
								inv !store
									reference
										val K_unchecked sym
									val K_unchecked obj1
								inv !store
									reference
										val K_unchecked obj1
									val K_unchecked obj2
								inv !store
									reference
										val K_unchecked obj2
									val K_unchecked sym
						inv !ifelse
							val K_unchecked pr
							code
								inv !ifelse
									inv !and
										inv !ofclass
											val K_unchecked obj1
											val K_unchecked Object
										inv !provides
											val K_unchecked obj1
											val K_unchecked pr
									code
										inv !store
											reference
												val K_unchecked i1
											inv !propertyvalue
												val K_unchecked obj1
												val K_unchecked pr
									code
										inv RunTimeProblem
											val K_unchecked RTP_IMPREL
											val K_unchecked obj1
											val K_unchecked relation
										inv !return
											val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked i1
									inv !minus
										val K_unchecked obj1
										val K_unchecked 1
						inv !ifelse
							val K_unchecked pr2
							code
								inv !ifelse
									inv !and
										inv !ofclass
											val K_unchecked obj2
											val K_unchecked Object
										inv !provides
											val K_unchecked obj2
											val K_unchecked pr2
									code
										inv !store
											reference
												val K_unchecked i2
											inv !propertyvalue
												val K_unchecked obj2
												val K_unchecked pr2
									code
										inv RunTimeProblem
											val K_unchecked RTP_IMPREL
											val K_unchecked obj2
											val K_unchecked relation
										inv !return
											val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked i2
									inv !minus
										val K_unchecked obj2
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked pr
							inv !plus
								inv !times
									val K_unchecked i1
									inv !lookup
										val K_unchecked vtov_structure
										val K_unchecked VTOVS_RIGHT_DOMAIN_SIZE
								val K_unchecked i2
						inv !store
							reference
								val K_unchecked i1
							inv !lookup
								val K_unchecked IncreasingPowersOfTwo_TB
								inv !modulo
									val K_unchecked pr
									val K_unchecked 16
						inv !store
							reference
								val K_unchecked pr
							inv !plus
								inv !divide
									val K_unchecked pr
									val K_unchecked 16
								val K_unchecked 8
						inv !if
							inv !bitwiseand
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked pr
								val K_unchecked i1
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant Relation_TestVtoV K_unchecked_function = Relation_TestVtoV_B __assimilated=1
			package Relation_NowEquiv_fn _function
				symbol public misc Relation_NowEquiv
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowEquiv_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation_property
					symbol private misc obj2
					symbol private misc big
					symbol private misc little
					symbol external misc plug_00410 --> /main/connectors/plug_00410
					local obj1 K_unchecked
					local relation_property K_unchecked
					local obj2 K_unchecked
					local big K_unchecked
					local little K_unchecked
					code
						inv !store
							reference
								val K_unchecked big
							inv !propertyvalue
								val K_unchecked obj1
								val K_unchecked relation_property
						inv !store
							reference
								val K_unchecked little
							inv !propertyvalue
								val K_unchecked obj2
								val K_unchecked relation_property
						inv !if
							inv !eq
								val K_unchecked big
								val K_unchecked little
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked big
								val K_unchecked little
							code
								inv !store
									reference
										val K_unchecked little
									inv !propertyvalue
										val K_unchecked obj1
										val K_unchecked relation_property
								inv !store
									reference
										val K_unchecked big
									inv !propertyvalue
										val K_unchecked obj2
										val K_unchecked relation_property
						inv !objectloop
							reference
								val K_unchecked obj1
							val K_unchecked plug_00410
							inv !provides
								val K_unchecked obj1
								val K_unchecked relation_property
							code
								inv !if
									inv !eq
										inv !propertyvalue
											val K_unchecked obj1
											val K_unchecked relation_property
										val K_unchecked big
									code
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked obj1
													val K_unchecked relation_property
											val K_unchecked little
				constant Relation_NowEquiv K_unchecked_function = Relation_NowEquiv_B __assimilated=1
			package Relation_NowNEquiv_fn _function
				symbol public misc Relation_NowNEquiv
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowNEquiv_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation_property
					symbol private misc obj2
					symbol private misc old
					symbol private misc new
					symbol external misc plug_00411 --> /main/connectors/plug_00411
					local obj1 K_unchecked
					local relation_property K_unchecked
					local obj2 K_unchecked
					local old K_unchecked
					local new K_unchecked
					code
						inv !store
							reference
								val K_unchecked old
							inv !propertyvalue
								val K_unchecked obj1
								val K_unchecked relation_property
						inv !store
							reference
								val K_unchecked new
							inv !propertyvalue
								val K_unchecked obj2
								val K_unchecked relation_property
						inv !if
							inv !ne
								val K_unchecked old
								val K_unchecked new
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked new
							val K_unchecked 0
						inv !objectloop
							reference
								val K_unchecked obj2
							val K_unchecked plug_00411
							inv !provides
								val K_unchecked obj2
								val K_unchecked relation_property
							code
								inv !if
									inv !gt
										inv !propertyvalue
											val K_unchecked obj2
											val K_unchecked relation_property
										val K_unchecked new
									code
										inv !store
											reference
												val K_unchecked new
											inv !propertyvalue
												val K_unchecked obj2
												val K_unchecked relation_property
						inv !postincrement
							reference
								val K_unchecked new
						inv !store
							reference
								inv !propertyvalue
									val K_unchecked obj1
									val K_unchecked relation_property
							val K_unchecked new
				constant Relation_NowNEquiv K_unchecked_function = Relation_NowNEquiv_B __assimilated=1
			package Relation_NowEquivV_fn _function
				symbol public misc Relation_NowEquivV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowEquivV_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj2
					symbol private misc KOV
					symbol private misc relation_property
					symbol private misc n
					symbol private misc big
					symbol private misc little
					symbol private misc i
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc plug_00409 --> /main/connectors/plug_00409
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					local obj1 K_unchecked
					local obj2 K_unchecked
					local KOV K_unchecked
					local relation_property K_unchecked
					local n K_unchecked
					local big K_unchecked
					local little K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked big
							inv GProperty
								val K_unchecked KOV
								val K_unchecked obj1
								val K_unchecked relation_property
						inv !store
							reference
								val K_unchecked little
							inv GProperty
								val K_unchecked KOV
								val K_unchecked obj2
								val K_unchecked relation_property
						inv !if
							inv !eq
								val K_unchecked big
								val K_unchecked little
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !lt
								val K_unchecked big
								val K_unchecked little
							code
								inv !store
									reference
										val K_unchecked little
									inv GProperty
										val K_unchecked KOV
										val K_unchecked obj1
										val K_unchecked relation_property
								inv !store
									reference
										val K_unchecked big
									inv GProperty
										val K_unchecked KOV
										val K_unchecked obj2
										val K_unchecked relation_property
						inv !store
							reference
								val K_unchecked n
							inv plug_00409
								val K_unchecked KOV
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked n
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										inv GProperty
											val K_unchecked KOV
											val K_unchecked i
											val K_unchecked relation_property
										val K_unchecked big
									code
										inv WriteGProperty
											val K_unchecked KOV
											val K_unchecked i
											val K_unchecked relation_property
											val K_unchecked little
				constant Relation_NowEquivV K_unchecked_function = Relation_NowEquivV_B __assimilated=1
			package Relation_NowNEquivV_fn _function
				symbol public misc Relation_NowNEquivV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_NowNEquivV_B _code
					symbol private misc obj1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc obj2
					symbol private misc KOV
					symbol private misc relation_property
					symbol private misc n
					symbol private misc old
					symbol private misc new
					symbol private misc i
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc plug_00409 --> /main/connectors/plug_00409
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					local obj1 K_unchecked
					local obj2 K_unchecked
					local KOV K_unchecked
					local relation_property K_unchecked
					local n K_unchecked
					local old K_unchecked
					local new K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked old
							inv GProperty
								val K_unchecked KOV
								val K_unchecked obj1
								val K_unchecked relation_property
						inv !store
							reference
								val K_unchecked new
							inv GProperty
								val K_unchecked KOV
								val K_unchecked obj2
								val K_unchecked relation_property
						inv !if
							inv !ne
								val K_unchecked old
								val K_unchecked new
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked new
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked n
							inv plug_00409
								val K_unchecked KOV
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked n
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !gt
										inv GProperty
											val K_unchecked KOV
											val K_unchecked i
											val K_unchecked relation_property
										val K_unchecked new
									code
										inv !store
											reference
												val K_unchecked new
											inv GProperty
												val K_unchecked KOV
												val K_unchecked i
												val K_unchecked relation_property
						inv !postincrement
							reference
								val K_unchecked new
						inv WriteGProperty
							val K_unchecked KOV
							val K_unchecked obj1
							val K_unchecked relation_property
							val K_unchecked new
				constant Relation_NowNEquivV K_unchecked_function = Relation_NowNEquivV_B __assimilated=1
			package Relation_ShowVtoV_fn _function
				symbol public misc Relation_ShowVtoV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_ShowVtoV_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sym
					symbol private misc x
					symbol private misc obj1
					symbol private misc obj2
					symbol private misc pr
					symbol private misc pr2
					symbol private misc proutine1
					symbol private misc proutine2
					symbol private misc vtov_structure
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
					symbol external misc VTOVS_RIGHT_INDEX_PROP --> /main/template/constants/VTOVS_RIGHT_INDEX_PROP_con/VTOVS_RIGHT_INDEX_PROP
					symbol external misc VTOVS_LEFT_PRINTING_ROUTINE --> /main/template/constants/VTOVS_LEFT_PRINTING_ROUTINE_con/VTOVS_LEFT_PRINTING_ROUTINE
					symbol external misc VTOVS_RIGHT_PRINTING_ROUTINE --> /main/template/constants/VTOVS_RIGHT_PRINTING_ROUTINE_con/VTOVS_RIGHT_PRINTING_ROUTINE
					symbol external misc plug_00412 --> /main/connectors/plug_00412
					symbol external misc plug_00413 --> /main/connectors/plug_00413
					symbol external misc Relation_TestVtoV --> /main/template/functions/Relation_TestVtoV_fn/Relation_TestVtoV
					symbol external misc RR_DESCRIPTION --> /main/template/constants/RR_DESCRIPTION_con/RR_DESCRIPTION
					symbol external misc plug_00414 --> /main/connectors/plug_00414
					symbol external misc VTOVS_RIGHT_DOMAIN_SIZE --> /main/template/constants/VTOVS_RIGHT_DOMAIN_SIZE_con/VTOVS_RIGHT_DOMAIN_SIZE
					symbol external misc plug_00415 --> /main/connectors/plug_00415
					local relation K_unchecked
					local sym K_unchecked
					local x K_unchecked
					local obj1 K_unchecked
					local obj2 K_unchecked
					local pr K_unchecked
					local pr2 K_unchecked
					local proutine1 K_unchecked
					local proutine2 K_unchecked
					local vtov_structure K_unchecked
					code
						inv !store
							reference
								val K_unchecked vtov_structure
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked pr
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_INDEX_PROP
						inv !store
							reference
								val K_unchecked pr2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_INDEX_PROP
						inv !store
							reference
								val K_unchecked proutine1
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_PRINTING_ROUTINE
						inv !store
							reference
								val K_unchecked proutine2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_PRINTING_ROUTINE
						inv !if
							inv !and
								val K_unchecked pr
								val K_unchecked pr2
							code
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00412
									inv !provides
										val K_unchecked obj1
										val K_unchecked pr
									code
										inv !objectloop
											reference
												val K_unchecked obj2
											val K_unchecked plug_00413
											inv !provides
												val K_unchecked obj2
												val K_unchecked pr2
											code
												inv !if
													inv !and
														val K_unchecked sym
														inv !gt
															val K_unchecked obj2
															val K_unchecked obj1
													code
														inv !continue
												inv !if
													inv Relation_TestVtoV
														val K_unchecked obj1
														val K_unchecked relation
														val K_unchecked obj2
													code
														inv !if
															inv !eq
																val K_unchecked x
																val K_unchecked 0
															code
																inv !printstring
																	inv RlnGetF
																		val K_unchecked relation
																		val K_unchecked RR_DESCRIPTION
																inv !print
																	val K_unchecked ":\n"
																inv !store
																	reference
																		val K_unchecked x
																	val K_unchecked 1
														inv !print
															val K_unchecked "  "
														inv !printcdef
															val K_unchecked obj1
														inv !ifelse
															val K_unchecked sym
															code
																inv !print
																	val K_unchecked "  <=>  "
															code
																inv !print
																	val K_unchecked "  >=>  "
														inv !printdef
															val K_unchecked obj2
														inv !print
															val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								val K_unchecked pr
								inv !eq
									val K_unchecked pr2
									val K_unchecked 0
							code
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00414
									inv !provides
										val K_unchecked obj1
										val K_unchecked pr
									code
										inv !for
											inv !store
												reference
													val K_unchecked obj2
												val K_unchecked 1
											inv !le
												val K_unchecked obj2
												inv !lookup
													val K_unchecked vtov_structure
													val K_unchecked VTOVS_RIGHT_DOMAIN_SIZE
											inv !postincrement
												reference
													val K_unchecked obj2
											code
												inv !if
													inv Relation_TestVtoV
														val K_unchecked obj1
														val K_unchecked relation
														val K_unchecked obj2
													code
														inv !if
															inv !eq
																val K_unchecked x
																val K_unchecked 0
															code
																inv !printstring
																	inv RlnGetF
																		val K_unchecked relation
																		val K_unchecked RR_DESCRIPTION
																inv !print
																	val K_unchecked ":\n"
																inv !store
																	reference
																		val K_unchecked x
																	val K_unchecked 1
														inv !print
															val K_unchecked "  "
														inv !printcdef
															val K_unchecked obj1
														inv !print
															val K_unchecked "  >=>  "
														inv !callmessage1
															val K_unchecked proutine2
															val K_unchecked obj2
														inv !print
															val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !eq
									val K_unchecked pr
									val K_unchecked 0
								val K_unchecked pr2
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										inv !lookup
											val K_unchecked vtov_structure
											val K_unchecked 2
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv !objectloop
											reference
												val K_unchecked obj2
											val K_unchecked plug_00415
											inv !provides
												val K_unchecked obj2
												val K_unchecked pr2
											code
												inv !if
													inv Relation_TestVtoV
														val K_unchecked obj1
														val K_unchecked relation
														val K_unchecked obj2
													code
														inv !if
															inv !eq
																val K_unchecked x
																val K_unchecked 0
															code
																inv !printstring
																	inv RlnGetF
																		val K_unchecked relation
																		val K_unchecked RR_DESCRIPTION
																inv !print
																	val K_unchecked ":\n"
																inv !store
																	reference
																		val K_unchecked x
																	val K_unchecked 1
														inv !print
															val K_unchecked "  "
														inv !callmessage1
															val K_unchecked proutine1
															val K_unchecked obj1
														inv !print
															val K_unchecked "  >=>  "
														inv !printdef
															val K_unchecked obj2
														inv !print
															val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked obj1
								val K_unchecked 1
							inv !le
								val K_unchecked obj1
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked 2
							inv !postincrement
								reference
									val K_unchecked obj1
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj2
										val K_unchecked 1
									inv !le
										val K_unchecked obj2
										inv !lookup
											val K_unchecked vtov_structure
											val K_unchecked VTOVS_RIGHT_DOMAIN_SIZE
									inv !postincrement
										reference
											val K_unchecked obj2
									code
										inv !if
											inv Relation_TestVtoV
												val K_unchecked obj1
												val K_unchecked relation
												val K_unchecked obj2
											code
												inv !if
													inv !eq
														val K_unchecked x
														val K_unchecked 0
													code
														inv !printstring
															inv RlnGetF
																val K_unchecked relation
																val K_unchecked RR_DESCRIPTION
														inv !print
															val K_unchecked ":\n"
														inv !store
															reference
																val K_unchecked x
															val K_unchecked 1
												inv !print
													val K_unchecked "  "
												inv !callmessage1
													val K_unchecked proutine1
													val K_unchecked obj1
												inv !print
													val K_unchecked "  >=>  "
												inv !callmessage1
													val K_unchecked proutine2
													val K_unchecked obj2
												inv !print
													val K_unchecked "\n"
				constant Relation_ShowVtoV K_unchecked_function = Relation_ShowVtoV_B __assimilated=1
			package Relation_ShowOtoO_fn _function
				symbol public misc Relation_ShowOtoO
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_ShowOtoO_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sym
					symbol private misc x
					symbol private misc relation_property
					symbol private misc t
					symbol private misc N
					symbol private misc obj1
					symbol private misc obj2
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RR_KIND --> /main/template/constants/RR_KIND_con/RR_KIND
					symbol external misc plug_00409 --> /main/connectors/plug_00409
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc plug_00416 --> /main/connectors/plug_00416
					symbol external misc RR_DESCRIPTION --> /main/template/constants/RR_DESCRIPTION_con/RR_DESCRIPTION
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					local relation K_unchecked
					local sym K_unchecked
					local x K_unchecked
					local relation_property K_unchecked
					local t K_unchecked
					local N K_unchecked
					local obj1 K_unchecked
					local obj2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked relation_property
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked t
							inv KindBaseTerm
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_KIND
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked N
							inv plug_00409
								val K_unchecked t
						inv !ifelse
							inv !eq
								val K_unchecked t
								val K_unchecked plug_00340
							code
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00416
									inv !provides
										val K_unchecked obj1
										val K_unchecked relation_property
									code
										inv !store
											reference
												val K_unchecked obj2
											inv !propertyvalue
												val K_unchecked obj1
												val K_unchecked relation_property
										inv !if
											inv !and
												val K_unchecked sym
												inv !lt
													val K_unchecked obj2
													val K_unchecked obj1
											code
												inv !continue
										inv !if
											inv !eq
												val K_unchecked obj2
												val K_unchecked 0
											code
												inv !continue
										inv !if
											inv !eq
												val K_unchecked x
												val K_unchecked 0
											code
												inv !printstring
													inv RlnGetF
														val K_unchecked relation
														val K_unchecked RR_DESCRIPTION
												inv !print
													val K_unchecked ":\n"
												inv !store
													reference
														val K_unchecked x
													val K_unchecked 1
										inv !print
											val K_unchecked "  "
										inv !printcdef
											val K_unchecked obj1
										inv !ifelse
											val K_unchecked sym
											code
												inv !print
													val K_unchecked "  ==  "
											code
												inv !print
													val K_unchecked "  >=>  "
										inv !printdef
											val K_unchecked obj2
										inv !print
											val K_unchecked "\n"
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										val K_unchecked N
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv !store
											reference
												val K_unchecked obj2
											inv GProperty
												val K_unchecked t
												val K_unchecked obj1
												val K_unchecked relation_property
										inv !if
											inv !and
												val K_unchecked sym
												inv !lt
													val K_unchecked obj2
													val K_unchecked obj1
											code
												inv !continue
										inv !if
											inv !eq
												val K_unchecked obj2
												val K_unchecked 0
											code
												inv !continue
										inv !if
											inv !eq
												val K_unchecked x
												val K_unchecked 0
											code
												inv !printstring
													inv RlnGetF
														val K_unchecked relation
														val K_unchecked RR_DESCRIPTION
												inv !print
													val K_unchecked ":\n"
												inv !store
													reference
														val K_unchecked x
													val K_unchecked 1
										inv !print
											val K_unchecked "  "
										inv plug_00417
											val K_unchecked t
											val K_unchecked obj1
										inv !ifelse
											val K_unchecked sym
											code
												inv !print
													val K_unchecked "  ==  "
											code
												inv !print
													val K_unchecked "  >=>  "
										inv plug_00417
											val K_unchecked t
											val K_unchecked obj2
										inv !print
											val K_unchecked "\n"
				constant Relation_ShowOtoO K_unchecked_function = Relation_ShowOtoO_B __assimilated=1
			package Relation_RShowOtoO_fn _function
				symbol public misc Relation_RShowOtoO
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_RShowOtoO_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sym
					symbol private misc x
					symbol private misc relation_property
					symbol private misc obj1
					symbol private misc obj2
					symbol private misc t1
					symbol private misc t2
					symbol private misc N1
					symbol private misc N2
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RR_KIND --> /main/template/constants/RR_KIND_con/RR_KIND
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc plug_00418 --> /main/connectors/plug_00418
					symbol external misc plug_00419 --> /main/connectors/plug_00419
					symbol external misc RR_DESCRIPTION --> /main/template/constants/RR_DESCRIPTION_con/RR_DESCRIPTION
					symbol external misc plug_00409 --> /main/connectors/plug_00409
					symbol external misc plug_00420 --> /main/connectors/plug_00420
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc plug_00421 --> /main/connectors/plug_00421
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					local relation K_unchecked
					local sym K_unchecked
					local x K_unchecked
					local relation_property K_unchecked
					local obj1 K_unchecked
					local obj2 K_unchecked
					local t1 K_unchecked
					local t2 K_unchecked
					local N1 K_unchecked
					local N2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked relation_property
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked t1
							inv KindBaseTerm
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_KIND
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked t2
							inv KindBaseTerm
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_KIND
								val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked t2
								val K_unchecked plug_00340
							code
								inv !ifelse
									inv !eq
										val K_unchecked t1
										val K_unchecked plug_00340
									code
										inv !objectloop
											reference
												val K_unchecked obj1
											val K_unchecked plug_00418
											val K_unchecked obj1
											code
												inv !objectloop
													reference
														val K_unchecked obj2
													val K_unchecked plug_00419
													inv !provides
														val K_unchecked obj2
														val K_unchecked relation_property
													code
														inv !if
															inv !ne
																inv !propertyvalue
																	val K_unchecked obj2
																	val K_unchecked relation_property
																val K_unchecked obj1
															code
																inv !continue
														inv !if
															inv !eq
																val K_unchecked x
																val K_unchecked 0
															code
																inv !printstring
																	inv RlnGetF
																		val K_unchecked relation
																		val K_unchecked RR_DESCRIPTION
																inv !print
																	val K_unchecked ":\n"
																inv !store
																	reference
																		val K_unchecked x
																	val K_unchecked 1
														inv !print
															val K_unchecked "  "
														inv !printcdef
															val K_unchecked obj1
														inv !print
															val K_unchecked "  >=>  "
														inv !printdef
															val K_unchecked obj2
														inv !print
															val K_unchecked "\n"
									code
										inv !store
											reference
												val K_unchecked N1
											inv plug_00409
												val K_unchecked t1
										inv !for
											inv !store
												reference
													val K_unchecked obj1
												val K_unchecked 1
											inv !le
												val K_unchecked obj1
												val K_unchecked N1
											inv !postincrement
												reference
													val K_unchecked obj1
											code
												inv !objectloop
													reference
														val K_unchecked obj2
													val K_unchecked plug_00420
													inv !provides
														val K_unchecked obj2
														val K_unchecked relation_property
													code
														inv !if
															inv !ne
																inv !propertyvalue
																	val K_unchecked obj2
																	val K_unchecked relation_property
																val K_unchecked obj1
															code
																inv !continue
														inv !if
															inv !eq
																val K_unchecked x
																val K_unchecked 0
															code
																inv !printstring
																	inv RlnGetF
																		val K_unchecked relation
																		val K_unchecked RR_DESCRIPTION
																inv !print
																	val K_unchecked ":\n"
																inv !store
																	reference
																		val K_unchecked x
																	val K_unchecked 1
														inv !print
															val K_unchecked "  "
														inv plug_00417
															val K_unchecked t1
															val K_unchecked obj1
														inv !print
															val K_unchecked "  >=>  "
														inv !printdef
															val K_unchecked obj2
														inv !print
															val K_unchecked "\n"
							code
								inv !store
									reference
										val K_unchecked N2
									inv plug_00409
										val K_unchecked t2
								inv !ifelse
									inv !eq
										val K_unchecked t1
										val K_unchecked plug_00340
									code
										inv !objectloop
											reference
												val K_unchecked obj1
											val K_unchecked plug_00421
											val K_unchecked obj1
											code
												inv !for
													inv !store
														reference
															val K_unchecked obj2
														val K_unchecked 1
													inv !le
														val K_unchecked obj2
														val K_unchecked N2
													inv !postincrement
														reference
															val K_unchecked obj2
													code
														inv !if
															inv !ne
																inv GProperty
																	val K_unchecked t2
																	val K_unchecked obj2
																	val K_unchecked relation_property
																val K_unchecked obj1
															code
																inv !continue
														inv !if
															inv !eq
																val K_unchecked x
																val K_unchecked 0
															code
																inv !printstring
																	inv RlnGetF
																		val K_unchecked relation
																		val K_unchecked RR_DESCRIPTION
																inv !print
																	val K_unchecked ":\n"
																inv !store
																	reference
																		val K_unchecked x
																	val K_unchecked 1
														inv !print
															val K_unchecked "  "
														inv !printcdef
															val K_unchecked obj1
														inv !print
															val K_unchecked "  >=>  "
														inv plug_00417
															val K_unchecked t2
															val K_unchecked obj2
														inv !print
															val K_unchecked "\n"
									code
										inv !store
											reference
												val K_unchecked N1
											inv plug_00409
												val K_unchecked t1
										inv !for
											inv !store
												reference
													val K_unchecked obj1
												val K_unchecked 1
											inv !le
												val K_unchecked obj1
												val K_unchecked N1
											inv !postincrement
												reference
													val K_unchecked obj1
											code
												inv !for
													inv !store
														reference
															val K_unchecked obj2
														val K_unchecked 1
													inv !le
														val K_unchecked obj2
														val K_unchecked N2
													inv !postincrement
														reference
															val K_unchecked obj2
													code
														inv !if
															inv !ne
																inv GProperty
																	val K_unchecked t2
																	val K_unchecked obj2
																	val K_unchecked relation_property
																val K_unchecked obj1
															code
																inv !continue
														inv !if
															inv !eq
																val K_unchecked x
																val K_unchecked 0
															code
																inv !printstring
																	inv RlnGetF
																		val K_unchecked relation
																		val K_unchecked RR_DESCRIPTION
																inv !print
																	val K_unchecked ":\n"
																inv !store
																	reference
																		val K_unchecked x
																	val K_unchecked 1
														inv !print
															val K_unchecked "  "
														inv plug_00417
															val K_unchecked t1
															val K_unchecked obj1
														inv !print
															val K_unchecked "  >=>  "
														inv plug_00417
															val K_unchecked t2
															val K_unchecked obj2
														inv !print
															val K_unchecked "\n"
				constant Relation_RShowOtoO K_unchecked_function = Relation_RShowOtoO_B __assimilated=1
			package RSE_Flip_fn _function
				symbol public misc RSE_Flip
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RSE_Flip_B _code
					symbol private misc KOV
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc v
					symbol private misc relation_property
					symbol private misc x
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					local KOV K_unchecked
					local v K_unchecked
					local relation_property K_unchecked
					local x K_unchecked
					code
						inv !store
							reference
								val K_unchecked x
							inv GProperty
								val K_unchecked KOV
								val K_unchecked v
								val K_unchecked relation_property
						inv !store
							reference
								val K_unchecked x
							inv !unaryminus
								val K_unchecked x
						inv WriteGProperty
							val K_unchecked KOV
							val K_unchecked v
							val K_unchecked relation_property
							val K_unchecked x
				constant RSE_Flip K_unchecked_function = RSE_Flip_B __assimilated=1
			package RSE_Set_fn _function
				symbol public misc RSE_Set
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RSE_Set_B _code
					symbol private misc KOV
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc v
					symbol private misc relation_property
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					local KOV K_unchecked
					local v K_unchecked
					local relation_property K_unchecked
					code
						inv !if
							inv !lt
								inv GProperty
									val K_unchecked KOV
									val K_unchecked v
									val K_unchecked relation_property
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant RSE_Set K_unchecked_function = RSE_Set_B __assimilated=1
			package Relation_ShowEquiv_fn _function
				symbol public misc Relation_ShowEquiv
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_ShowEquiv_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc relation_property
					symbol private misc obj1
					symbol private misc obj2
					symbol private misc v
					symbol private misc c
					symbol private misc d
					symbol private misc somegroups
					symbol private misc t
					symbol private misc N
					symbol private misc x
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_DESCRIPTION --> /main/template/constants/RR_DESCRIPTION_con/RR_DESCRIPTION
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RR_KIND --> /main/template/constants/RR_KIND_con/RR_KIND
					symbol external misc plug_00409 --> /main/connectors/plug_00409
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc plug_00422 --> /main/connectors/plug_00422
					symbol external misc plug_00423 --> /main/connectors/plug_00423
					symbol external misc plug_00424 --> /main/connectors/plug_00424
					symbol external misc workflag2 --> /main/template/properties/workflag2_prop/workflag2
					symbol external misc plug_00425 --> /main/connectors/plug_00425
					symbol external misc WriteListOfMarkedObjects --> /main/template/functions/WriteListOfMarkedObjects_fn/WriteListOfMarkedObjects
					symbol external misc ENGLISH_BIT --> /main/template/constants/ENGLISH_BIT_con/ENGLISH_BIT
					symbol external misc plug_00426 --> /main/connectors/plug_00426
					symbol external misc plug_00427 --> /main/connectors/plug_00427
					symbol external misc plug_00428 --> /main/connectors/plug_00428
					symbol external misc RSE_Flip --> /main/template/functions/RSE_Flip_fn/RSE_Flip
					symbol external misc RSE_Set --> /main/template/functions/RSE_Set_fn/RSE_Set
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					symbol external misc plug_00429 --> /main/connectors/plug_00429
					local relation K_unchecked
					local relation_property K_unchecked
					local obj1 K_unchecked
					local obj2 K_unchecked
					local v K_unchecked
					local c K_unchecked
					local d K_unchecked
					local somegroups K_unchecked
					local t K_unchecked
					local N K_unchecked
					local x K_unchecked
					code
						inv !printstring
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_DESCRIPTION
						inv !print
							val K_unchecked ":\n"
						inv !store
							reference
								val K_unchecked relation_property
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked t
							inv KindBaseTerm
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_KIND
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked N
							inv plug_00409
								val K_unchecked t
						inv !ifelse
							inv !eq
								val K_unchecked t
								val K_unchecked plug_00340
							code
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00422
									inv !provides
										val K_unchecked obj1
										val K_unchecked relation_property
									code
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked obj1
													val K_unchecked relation_property
											inv !unaryminus
												inv !propertyvalue
													val K_unchecked obj1
													val K_unchecked relation_property
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00423
									inv !provides
										val K_unchecked obj1
										val K_unchecked relation_property
									code
										inv !if
											inv !lt
												inv !propertyvalue
													val K_unchecked obj1
													val K_unchecked relation_property
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked v
													inv !propertyvalue
														val K_unchecked obj1
														val K_unchecked relation_property
												inv !store
													reference
														val K_unchecked c
													val K_unchecked 0
												inv !objectloop
													reference
														val K_unchecked obj2
													val K_unchecked plug_00424
													inv !has
														val K_unchecked obj2
														val K_unchecked workflag2
													code
														inv !take
															val K_unchecked obj2
															val K_unchecked workflag2
												inv !objectloop
													reference
														val K_unchecked obj2
													val K_unchecked plug_00425
													inv !provides
														val K_unchecked obj2
														val K_unchecked relation_property
													code
														inv !if
															inv !eq
																inv !propertyvalue
																	val K_unchecked obj2
																	val K_unchecked relation_property
																val K_unchecked v
															code
																inv !give
																	val K_unchecked obj2
																	val K_unchecked workflag2
																inv !store
																	reference
																		inv !propertyvalue
																			val K_unchecked obj2
																			val K_unchecked relation_property
																	inv !unaryminus
																		val K_unchecked v
																inv !postincrement
																	reference
																		val K_unchecked c
												inv !ifelse
													inv !gt
														val K_unchecked c
														val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked somegroups
															val K_unchecked 1
														inv !print
															val K_unchecked "  { "
														inv WriteListOfMarkedObjects
															val K_unchecked ENGLISH_BIT
														inv !print
															val K_unchecked " }\n"
													code
														inv !store
															reference
																inv !propertyvalue
																	val K_unchecked obj1
																	val K_unchecked relation_property
															val K_unchecked v
								inv !objectloop
									reference
										val K_unchecked obj2
									val K_unchecked plug_00426
									inv !has
										val K_unchecked obj2
										val K_unchecked workflag2
									code
										inv !take
											val K_unchecked obj2
											val K_unchecked workflag2
								inv !store
									reference
										val K_unchecked c
									val K_unchecked 0
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00427
									inv !provides
										val K_unchecked obj1
										val K_unchecked relation_property
									code
										inv !if
											inv !lt
												inv !propertyvalue
													val K_unchecked obj1
													val K_unchecked relation_property
												val K_unchecked 0
											code
												inv !postincrement
													reference
														val K_unchecked c
												inv !give
													val K_unchecked obj1
													val K_unchecked workflag2
								inv !if
									inv !eq
										val K_unchecked c
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 1
								inv !ifelse
									val K_unchecked somegroups
									code
										inv !print
											val K_unchecked "  and "
									code
										inv !print
											val K_unchecked "  "
								inv !ifelse
									inv !lt
										val K_unchecked c
										val K_unchecked 4
									code
										inv WriteListOfMarkedObjects
											val K_unchecked ENGLISH_BIT
										inv !print
											val K_unchecked " in"
									code
										inv !printnumber
											val K_unchecked c
								inv !if
									inv !eq
										val K_unchecked c
										val K_unchecked 1
									code
										inv !print
											val K_unchecked " a"
								inv !print
									val K_unchecked " single-member group"
								inv !if
									inv !gt
										val K_unchecked c
										val K_unchecked 1
									code
										inv !print
											val K_unchecked "s"
								inv !print
									val K_unchecked "\n"
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00428
									inv !provides
										val K_unchecked obj1
										val K_unchecked relation_property
									code
										inv !if
											inv !lt
												inv !propertyvalue
													val K_unchecked obj1
													val K_unchecked relation_property
												val K_unchecked 0
											code
												inv !store
													reference
														inv !propertyvalue
															val K_unchecked obj1
															val K_unchecked relation_property
													inv !unaryminus
														inv !propertyvalue
															val K_unchecked obj1
															val K_unchecked relation_property
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										val K_unchecked N
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv RSE_Flip
											val K_unchecked t
											val K_unchecked obj1
											val K_unchecked relation_property
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										val K_unchecked N
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv !if
											inv RSE_Set
												val K_unchecked t
												val K_unchecked obj1
												val K_unchecked relation_property
											code
												inv !store
													reference
														val K_unchecked v
													inv GProperty
														val K_unchecked t
														val K_unchecked obj1
														val K_unchecked relation_property
												inv !store
													reference
														val K_unchecked c
													val K_unchecked 0
												inv !for
													inv !store
														reference
															val K_unchecked obj2
														val K_unchecked 1
													inv !le
														val K_unchecked obj2
														val K_unchecked N
													inv !postincrement
														reference
															val K_unchecked obj2
													code
														inv !if
															inv !eq
																inv GProperty
																	val K_unchecked t
																	val K_unchecked obj2
																	val K_unchecked relation_property
																val K_unchecked v
															code
																inv !postincrement
																	reference
																		val K_unchecked c
												inv !ifelse
													inv !gt
														val K_unchecked c
														val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked somegroups
															val K_unchecked 1
														inv !print
															val K_unchecked "  {"
														inv !store
															reference
																val K_unchecked d
															val K_unchecked 0
														inv !for
															inv !store
																reference
																	val K_unchecked obj2
																val K_unchecked 1
															inv !le
																val K_unchecked obj2
																val K_unchecked N
															inv !postincrement
																reference
																	val K_unchecked obj2
															code
																inv !if
																	inv !eq
																		inv GProperty
																			val K_unchecked t
																			val K_unchecked obj2
																			val K_unchecked relation_property
																		val K_unchecked v
																	code
																		inv !print
																			val K_unchecked " "
																		inv plug_00417
																			val K_unchecked t
																			val K_unchecked obj2
																		inv !if
																			inv !lt
																				val K_unchecked d
																				inv !minus
																					val K_unchecked c
																					val K_unchecked 1
																			code
																				inv !print
																					val K_unchecked ","
																		inv !print
																			val K_unchecked " "
																		inv RSE_Flip
																			val K_unchecked t
																			val K_unchecked obj2
																			val K_unchecked relation_property
																		inv !postincrement
																			reference
																				val K_unchecked d
														inv !print
															val K_unchecked "}\n"
													code
														inv WriteGProperty
															val K_unchecked t
															val K_unchecked obj1
															val K_unchecked relation_property
															val K_unchecked v
								inv !objectloop
									reference
										val K_unchecked obj2
									val K_unchecked plug_00429
									inv !has
										val K_unchecked obj2
										val K_unchecked workflag2
									code
										inv !take
											val K_unchecked obj2
											val K_unchecked workflag2
								inv !store
									reference
										val K_unchecked c
									val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										val K_unchecked N
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv !if
											inv RSE_Set
												val K_unchecked t
												val K_unchecked obj1
												val K_unchecked relation_property
											code
												inv !postincrement
													reference
														val K_unchecked c
								inv !if
									inv !eq
										val K_unchecked c
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 1
								inv !ifelse
									val K_unchecked somegroups
									code
										inv !print
											val K_unchecked "  and "
									code
										inv !print
											val K_unchecked "  "
								inv !ifelse
									inv !eq
										val K_unchecked c
										val K_unchecked 1
									code
										inv !print
											val K_unchecked "a"
									code
										inv !printnumber
											val K_unchecked c
								inv !print
									val K_unchecked " single-member group"
								inv !if
									inv !gt
										val K_unchecked c
										val K_unchecked 1
									code
										inv !print
											val K_unchecked "s"
								inv !print
									val K_unchecked "\n"
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										val K_unchecked N
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv !if
											inv RSE_Set
												val K_unchecked t
												val K_unchecked obj1
												val K_unchecked relation_property
											code
												inv RSE_Flip
													val K_unchecked t
													val K_unchecked obj1
													val K_unchecked relation_property
				constant Relation_ShowEquiv K_unchecked_function = Relation_ShowEquiv_B __assimilated=1
			package Relation_EmptyOtoO_fn _function
				symbol public misc Relation_EmptyOtoO
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_EmptyOtoO_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sym
					symbol private misc clear
					symbol private misc relation_property
					symbol private misc obj1
					symbol private misc obj2
					symbol private misc t1
					symbol private misc t2
					symbol private misc N1
					symbol private misc N2
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RR_KIND --> /main/template/constants/RR_KIND_con/RR_KIND
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc plug_00430 --> /main/connectors/plug_00430
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					symbol external misc plug_00431 --> /main/connectors/plug_00431
					local relation K_unchecked
					local sym K_unchecked
					local clear K_unchecked
					local relation_property K_unchecked
					local obj1 K_unchecked
					local obj2 K_unchecked
					local t1 K_unchecked
					local t2 K_unchecked
					local N1 K_unchecked
					local N2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked relation_property
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked t1
							inv KindBaseTerm
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_KIND
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked t2
							inv KindBaseTerm
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_KIND
								val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked t2
								val K_unchecked plug_00340
							code
								inv !objectloop
									reference
										val K_unchecked obj2
									val K_unchecked plug_00430
									inv !provides
										val K_unchecked obj2
										val K_unchecked relation_property
									code
										inv !store
											reference
												val K_unchecked obj1
											inv !propertyvalue
												val K_unchecked obj2
												val K_unchecked relation_property
										inv !if
											val K_unchecked obj1
											code
												inv !ifelse
													val K_unchecked clear
													code
														inv !store
															reference
																inv !propertyvalue
																	val K_unchecked obj2
																	val K_unchecked relation_property
															val K_unchecked 0
													code
														inv !return
															val K_unchecked 0
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj2
										val K_unchecked 1
									inv !le
										val K_unchecked obj2
										val K_unchecked N2
									inv !postincrement
										reference
											val K_unchecked obj2
									code
										inv !store
											reference
												val K_unchecked obj1
											inv GProperty
												val K_unchecked t2
												val K_unchecked obj2
												val K_unchecked relation_property
										inv !if
											val K_unchecked obj1
											code
												inv !ifelse
													val K_unchecked clear
													code
														inv WriteGProperty
															val K_unchecked t2
															val K_unchecked obj2
															val K_unchecked relation_property
															val K_unchecked 0
													code
														inv !return
															val K_unchecked 0
						inv !if
							inv !ne
								val K_unchecked t1
								val K_unchecked t2
							code
								inv !ifelse
									inv !eq
										val K_unchecked t1
										val K_unchecked plug_00340
									code
										inv !objectloop
											reference
												val K_unchecked obj1
											val K_unchecked plug_00431
											inv !provides
												val K_unchecked obj1
												val K_unchecked relation_property
											code
												inv !store
													reference
														val K_unchecked obj2
													inv !propertyvalue
														val K_unchecked obj1
														val K_unchecked relation_property
												inv !if
													val K_unchecked obj2
													code
														inv !ifelse
															val K_unchecked clear
															code
																inv !store
																	reference
																		inv !propertyvalue
																			val K_unchecked obj1
																			val K_unchecked relation_property
																	val K_unchecked 0
															code
																inv !return
																	val K_unchecked 0
									code
										inv !for
											inv !store
												reference
													val K_unchecked obj1
												val K_unchecked 1
											inv !le
												val K_unchecked obj1
												val K_unchecked N2
											inv !postincrement
												reference
													val K_unchecked obj1
											code
												inv !store
													reference
														val K_unchecked obj2
													inv GProperty
														val K_unchecked t1
														val K_unchecked obj1
														val K_unchecked relation_property
												inv !if
													val K_unchecked obj2
													code
														inv !ifelse
															val K_unchecked clear
															code
																inv WriteGProperty
																	val K_unchecked t1
																	val K_unchecked obj1
																	val K_unchecked relation_property
																	val K_unchecked 0
															code
																inv !return
																	val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant Relation_EmptyOtoO K_unchecked_function = Relation_EmptyOtoO_B __assimilated=1
			package Relation_EmptyEquiv_fn _function
				symbol public misc Relation_EmptyEquiv
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_EmptyEquiv_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sym
					symbol private misc clear
					symbol private misc relation_property
					symbol private misc obj1
					symbol private misc obj2
					symbol private misc t
					symbol private misc N
					symbol private misc v
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RR_KIND --> /main/template/constants/RR_KIND_con/RR_KIND
					symbol external misc plug_00409 --> /main/connectors/plug_00409
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc plug_00432 --> /main/connectors/plug_00432
					symbol external misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
					symbol external misc plug_00433 --> /main/connectors/plug_00433
					symbol external misc plug_00434 --> /main/connectors/plug_00434
					symbol external misc GProperty --> /main/template/functions/GProperty_fn/GProperty
					local relation K_unchecked
					local sym K_unchecked
					local clear K_unchecked
					local relation_property K_unchecked
					local obj1 K_unchecked
					local obj2 K_unchecked
					local t K_unchecked
					local N K_unchecked
					local v K_unchecked
					code
						inv !store
							reference
								val K_unchecked relation_property
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked t
							inv KindBaseTerm
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_KIND
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked N
							inv plug_00409
								val K_unchecked t
						inv !if
							val K_unchecked clear
							code
								inv !store
									reference
										val K_unchecked v
									val K_unchecked 1
								inv !ifelse
									inv !eq
										val K_unchecked t
										val K_unchecked plug_00340
									code
										inv !objectloop
											reference
												val K_unchecked obj1
											val K_unchecked plug_00432
											inv !provides
												val K_unchecked obj1
												val K_unchecked relation_property
											code
												inv !store
													reference
														inv !propertyvalue
															val K_unchecked obj1
															val K_unchecked relation_property
													inv !postincrement
														reference
															val K_unchecked v
									code
										inv !for
											inv !store
												reference
													val K_unchecked obj1
												val K_unchecked 1
											inv !le
												val K_unchecked obj1
												val K_unchecked N
											inv !postincrement
												reference
													val K_unchecked obj1
											code
												inv WriteGProperty
													val K_unchecked t
													val K_unchecked obj1
													val K_unchecked relation_property
													inv !postincrement
														reference
															val K_unchecked v
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked t
								val K_unchecked plug_00340
							code
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00433
									inv !provides
										val K_unchecked obj1
										val K_unchecked relation_property
									code
										inv !objectloop
											reference
												val K_unchecked obj2
											val K_unchecked plug_00434
											inv !provides
												val K_unchecked obj2
												val K_unchecked relation_property
											code
												inv !if
													inv !and
														inv !lt
															val K_unchecked obj1
															val K_unchecked obj2
														inv !eq
															inv !propertyvalue
																val K_unchecked obj1
																val K_unchecked relation_property
															inv !propertyvalue
																val K_unchecked obj2
																val K_unchecked relation_property
													code
														inv !return
															val K_unchecked 0
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										val K_unchecked N
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv !for
											inv !store
												reference
													val K_unchecked obj2
												inv !plus
													val K_unchecked obj1
													val K_unchecked 1
											inv !le
												val K_unchecked obj1
												val K_unchecked N
											inv !postincrement
												reference
													val K_unchecked obj1
											code
												inv !if
													inv !eq
														inv GProperty
															val K_unchecked t
															val K_unchecked obj1
															val K_unchecked relation_property
														inv GProperty
															val K_unchecked t
															val K_unchecked obj2
															val K_unchecked relation_property
													code
														inv !return
															val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant Relation_EmptyEquiv K_unchecked_function = Relation_EmptyEquiv_B __assimilated=1
			package Relation_EmptyVtoV_fn _function
				symbol public misc Relation_EmptyVtoV
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Relation_EmptyVtoV_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sym
					symbol private misc clear
					symbol private misc vtov_structure
					symbol private misc obj1
					symbol private misc obj2
					symbol private misc pr
					symbol private misc pr2
					symbol private misc proutine1
					symbol private misc proutine2
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
					symbol external misc VTOVS_RIGHT_INDEX_PROP --> /main/template/constants/VTOVS_RIGHT_INDEX_PROP_con/VTOVS_RIGHT_INDEX_PROP
					symbol external misc VTOVS_LEFT_PRINTING_ROUTINE --> /main/template/constants/VTOVS_LEFT_PRINTING_ROUTINE_con/VTOVS_LEFT_PRINTING_ROUTINE
					symbol external misc VTOVS_RIGHT_PRINTING_ROUTINE --> /main/template/constants/VTOVS_RIGHT_PRINTING_ROUTINE_con/VTOVS_RIGHT_PRINTING_ROUTINE
					symbol external misc plug_00435 --> /main/connectors/plug_00435
					symbol external misc plug_00436 --> /main/connectors/plug_00436
					symbol external misc Relation_TestVtoV --> /main/template/functions/Relation_TestVtoV_fn/Relation_TestVtoV
					symbol external misc Relation_NowNVtoV --> /main/template/functions/Relation_NowNVtoV_fn/Relation_NowNVtoV
					symbol external misc plug_00437 --> /main/connectors/plug_00437
					symbol external misc VTOVS_RIGHT_DOMAIN_SIZE --> /main/template/constants/VTOVS_RIGHT_DOMAIN_SIZE_con/VTOVS_RIGHT_DOMAIN_SIZE
					symbol external misc plug_00438 --> /main/connectors/plug_00438
					local relation K_unchecked
					local sym K_unchecked
					local clear K_unchecked
					local vtov_structure K_unchecked
					local obj1 K_unchecked
					local obj2 K_unchecked
					local pr K_unchecked
					local pr2 K_unchecked
					local proutine1 K_unchecked
					local proutine2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked vtov_structure
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !store
							reference
								val K_unchecked pr
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_INDEX_PROP
						inv !store
							reference
								val K_unchecked pr2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_INDEX_PROP
						inv !store
							reference
								val K_unchecked proutine1
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_PRINTING_ROUTINE
						inv !store
							reference
								val K_unchecked proutine2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_PRINTING_ROUTINE
						inv !if
							inv !and
								val K_unchecked pr
								val K_unchecked pr2
							code
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00435
									inv !provides
										val K_unchecked obj1
										val K_unchecked pr
									code
										inv !objectloop
											reference
												val K_unchecked obj2
											val K_unchecked plug_00436
											inv !provides
												val K_unchecked obj2
												val K_unchecked pr2
											code
												inv !if
													inv !and
														val K_unchecked sym
														inv !gt
															val K_unchecked obj2
															val K_unchecked obj1
													code
														inv !continue
												inv !if
													inv Relation_TestVtoV
														val K_unchecked obj1
														val K_unchecked relation
														val K_unchecked obj2
													code
														inv !ifelse
															val K_unchecked clear
															code
																inv Relation_NowNVtoV
																	val K_unchecked obj1
																	val K_unchecked relation
																	val K_unchecked obj2
																	val K_unchecked sym
															code
																inv !return
																	val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								val K_unchecked pr
								inv !eq
									val K_unchecked pr2
									val K_unchecked 0
							code
								inv !objectloop
									reference
										val K_unchecked obj1
									val K_unchecked plug_00437
									inv !provides
										val K_unchecked obj1
										val K_unchecked pr
									code
										inv !for
											inv !store
												reference
													val K_unchecked obj2
												val K_unchecked 1
											inv !le
												val K_unchecked obj2
												inv !lookup
													val K_unchecked vtov_structure
													val K_unchecked VTOVS_RIGHT_DOMAIN_SIZE
											inv !postincrement
												reference
													val K_unchecked obj2
											code
												inv !if
													inv Relation_TestVtoV
														val K_unchecked obj1
														val K_unchecked relation
														val K_unchecked obj2
													code
														inv !ifelse
															val K_unchecked clear
															code
																inv Relation_NowNVtoV
																	val K_unchecked obj1
																	val K_unchecked relation
																	val K_unchecked obj2
																	val K_unchecked sym
															code
																inv !return
																	val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !if
							inv !and
								inv !eq
									val K_unchecked pr
									val K_unchecked 0
								val K_unchecked pr2
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj1
										val K_unchecked 1
									inv !le
										val K_unchecked obj1
										inv !lookup
											val K_unchecked vtov_structure
											val K_unchecked 2
									inv !postincrement
										reference
											val K_unchecked obj1
									code
										inv !objectloop
											reference
												val K_unchecked obj2
											val K_unchecked plug_00438
											inv !provides
												val K_unchecked obj2
												val K_unchecked pr2
											code
												inv !if
													inv Relation_TestVtoV
														val K_unchecked obj1
														val K_unchecked relation
														val K_unchecked obj2
													code
														inv !ifelse
															val K_unchecked clear
															code
																inv Relation_NowNVtoV
																	val K_unchecked obj1
																	val K_unchecked relation
																	val K_unchecked obj2
																	val K_unchecked sym
															code
																inv !return
																	val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked obj1
								val K_unchecked 1
							inv !le
								val K_unchecked obj1
								inv !lookup
									val K_unchecked vtov_structure
									val K_unchecked 2
							inv !postincrement
								reference
									val K_unchecked obj1
							code
								inv !for
									inv !store
										reference
											val K_unchecked obj2
										val K_unchecked 1
									inv !le
										val K_unchecked obj2
										inv !lookup
											val K_unchecked vtov_structure
											val K_unchecked VTOVS_RIGHT_DOMAIN_SIZE
									inv !postincrement
										reference
											val K_unchecked obj2
									code
										inv !if
											inv Relation_TestVtoV
												val K_unchecked obj1
												val K_unchecked relation
												val K_unchecked obj2
											code
												inv !if
													inv Relation_TestVtoV
														val K_unchecked obj1
														val K_unchecked relation
														val K_unchecked obj2
													code
														inv !ifelse
															val K_unchecked clear
															code
																inv Relation_NowNVtoV
																	val K_unchecked obj1
																	val K_unchecked relation
																	val K_unchecked obj2
																	val K_unchecked sym
															code
																inv !return
																	val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant Relation_EmptyVtoV K_unchecked_function = Relation_EmptyVtoV_B __assimilated=1
			package SignalMapChange_fn _function
				symbol public misc SignalMapChange
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SignalMapChange_B _code
					symbol external misc plug_00439 --> /main/template/variables/map_has_changed_var/map_has_changed
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !store
							reference
								val K_unchecked map_has_changed
							val K_unchecked 1
				constant SignalMapChange K_unchecked_function = SignalMapChange_B __assimilated=1
			package MapRouteTo_fn _function
				symbol public misc MapRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MapRouteTo_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc filter
					symbol private misc use_doors
					symbol private misc count
					symbol private misc oy
					symbol private misc oyi
					symbol private misc ds
					symbol external misc plug_00441 --> /main/template/variables/last_filter_var/last_filter
					symbol external misc plug_00442 --> /main/template/variables/last_use_doors_var/last_use_doors
					symbol external misc plug_00439 --> /main/template/variables/map_has_changed_var/map_has_changed
					symbol external misc plug_00443 --> /main/connectors/plug_00443
					symbol external misc mark_as_room --> /main/template/properties/mark_as_room_prop/mark_as_room
					symbol external misc room_index --> /main/template/properties/room_index_prop/room_index
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc openable --> /main/template/properties/openable_prop/openable
					symbol external misc locked --> /main/template/properties/locked_prop/locked
					symbol external misc DoorRoutingViable --> /main/template/arrays/DoorRoutingViable_arr/DoorRoutingViable
					symbol external misc SlowCountRouteTo --> /main/template/functions/SlowCountRouteTo_fn/SlowCountRouteTo
					symbol external misc SlowRouteTo --> /main/template/functions/SlowRouteTo_fn/SlowRouteTo
					local from K_unchecked
					local to K_unchecked
					local filter K_unchecked
					local use_doors K_unchecked
					local count K_unchecked
					local oy K_unchecked
					local oyi K_unchecked
					local ds K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked to
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked to
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								val K_unchecked filter
								inv !eq
									inv !indirect1
										val K_unchecked filter
										val K_unchecked from
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								val K_unchecked filter
								inv !eq
									inv !indirect1
										val K_unchecked filter
										val K_unchecked to
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !ne
									val K_unchecked last_filter
									val K_unchecked filter
								inv !ne
									val K_unchecked last_use_doors
									val K_unchecked use_doors
							code
								inv !store
									reference
										val K_unchecked map_has_changed
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked oyi
							val K_unchecked 0
						inv !objectloop
							reference
								val K_unchecked oy
							val K_unchecked plug_00443
							inv !has
								val K_unchecked oy
								val K_unchecked mark_as_room
							code
								inv !ifelse
									inv !or
										inv !eq
											val K_unchecked filter
											val K_unchecked 0
										inv !indirect1
											val K_unchecked filter
											val K_unchecked oy
									code
										inv !if
											inv !eq
												inv !propertyvalue
													val K_unchecked oy
													val K_unchecked room_index
												val K_unchecked -1
											code
												inv !store
													reference
														val K_unchecked map_has_changed
													val K_unchecked 1
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked oy
													val K_unchecked room_index
											inv !postincrement
												reference
													val K_unchecked oyi
									code
										inv !if
											inv !ge
												inv !propertyvalue
													val K_unchecked oy
													val K_unchecked room_index
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked map_has_changed
													val K_unchecked 1
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked oy
													val K_unchecked room_index
											val K_unchecked -1
						inv !store
							reference
								val K_unchecked oyi
							val K_unchecked 0
						inv !objectloop
							reference
								val K_unchecked oy
							val K_unchecked plug_00153
							inv !ofclass
								val K_unchecked oy
								val K_unchecked plug_00153
							code
								inv !store
									reference
										val K_unchecked ds
									val K_unchecked 0
								inv !if
									inv !or
										inv !or
											inv !bitwiseand
												val K_unchecked use_doors
												val K_unchecked 2
											inv !has
												val K_unchecked oy
												val K_unchecked open
										inv !and
											inv !has
												val K_unchecked oy
												val K_unchecked openable
											inv !hasnt
												val K_unchecked oy
												val K_unchecked locked
									code
										inv !store
											reference
												val K_unchecked ds
											val K_unchecked 1
								inv !if
									inv !ne
										inv !lookupbyte
											val K_unchecked DoorRoutingViable
											val K_unchecked oyi
										val K_unchecked ds
									code
										inv !store
											reference
												val K_unchecked map_has_changed
											val K_unchecked 1
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked DoorRoutingViable
											val K_unchecked oyi
									val K_unchecked ds
								inv !postincrement
									reference
										val K_unchecked oyi
						inv !if
							val K_unchecked map_has_changed
							code
								inv !store
									reference
										val K_unchecked map_has_changed
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked last_filter
									val K_unchecked filter
								inv !store
									reference
										val K_unchecked last_use_doors
									val K_unchecked use_doors
						inv !if
							val K_unchecked count
							code
								inv !return
									inv SlowCountRouteTo
										val K_unchecked from
										val K_unchecked to
										val K_unchecked filter
										val K_unchecked use_doors
						inv !return
							inv SlowRouteTo
								val K_unchecked from
								val K_unchecked to
								val K_unchecked filter
								val K_unchecked use_doors
				constant MapRouteTo K_unchecked_function = MapRouteTo_B __assimilated=1
			package SlowRouteTo_fn _function
				symbol public misc SlowRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SlowRouteTo_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc filter
					symbol private misc use_doors
					symbol private misc obj
					symbol private misc dir
					symbol private misc in_direction
					symbol private misc progressed
					symbol private misc sl
					symbol private misc through_door
					symbol external misc plug_00444 --> /main/connectors/plug_00444
					symbol external misc mark_as_room --> /main/template/properties/mark_as_room_prop/mark_as_room
					symbol external misc vector --> /main/template/properties/vector_prop/vector
					symbol external misc plug_00445 --> /main/connectors/plug_00445
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					symbol external misc plug_00446 --> /main/connectors/plug_00446
					symbol external misc IK1_Count --> /main/template/properties/IK1_Count_prop/IK1_Count
					symbol external misc plug_00447 --> /main/connectors/plug_00447
					symbol external misc IK3_Count --> /main/template/properties/IK3_Count_prop/IK3_Count
					symbol external misc plug_00196 --> /main/connectors/plug_00196
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc openable --> /main/template/properties/openable_prop/openable
					symbol external misc locked --> /main/template/properties/locked_prop/locked
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc door_to --> /main/template/properties/door_to_prop/door_to
					symbol external misc plug_00448 --> /main/connectors/plug_00448
					local from K_unchecked
					local to K_unchecked
					local filter K_unchecked
					local use_doors K_unchecked
					local obj K_unchecked
					local dir K_unchecked
					local in_direction K_unchecked
					local progressed K_unchecked
					local sl K_unchecked
					local through_door K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked to
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked to
							code
								inv !return
									val K_unchecked 0
						inv !objectloop
							reference
								val K_unchecked obj
							val K_unchecked plug_00444
							inv !has
								val K_unchecked obj
								val K_unchecked mark_as_room
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked vector
									val K_unchecked 0
						inv !store
							reference
								inv !propertyvalue
									val K_unchecked to
									val K_unchecked vector
							val K_unchecked 1
						inv !while
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked progressed
									val K_unchecked 0
								inv !objectloop
									reference
										val K_unchecked obj
									val K_unchecked plug_00445
									inv !has
										val K_unchecked obj
										val K_unchecked mark_as_room
									code
										inv !if
											inv !or
												inv !eq
													val K_unchecked filter
													val K_unchecked 0
												inv !indirect1
													val K_unchecked filter
													val K_unchecked obj
											code
												inv !if
													inv !eq
														inv !propertyvalue
															val K_unchecked obj
															val K_unchecked vector
														val K_unchecked 0
													code
														inv !objectloop
															reference
																val K_unchecked dir
															val K_unchecked plug_00241
															inv !ofclass
																val K_unchecked dir
																val K_unchecked plug_00241
															code
																inv !store
																	reference
																		val K_unchecked in_direction
																	inv !lookup
																		val K_unchecked plug_00446
																		inv !plus
																			inv !times
																				inv !propertyvalue
																					val K_unchecked obj
																					val K_unchecked IK1_Count
																				val K_unchecked plug_00447
																			inv !propertyvalue
																				val K_unchecked dir
																				val K_unchecked IK3_Count
																inv !if
																	inv !eq
																		val K_unchecked in_direction
																		val K_unchecked 0
																	code
																		inv !continue
																inv !if
																	inv !and
																		inv !and
																			inv !and
																				val K_unchecked in_direction
																				inv !has
																					val K_unchecked in_direction
																					val K_unchecked mark_as_room
																			inv !gt
																				inv !propertyvalue
																					val K_unchecked in_direction
																					val K_unchecked vector
																				val K_unchecked 0
																		inv !or
																			inv !eq
																				val K_unchecked filter
																				val K_unchecked 0
																			inv !indirect1
																				val K_unchecked filter
																				val K_unchecked in_direction
																	code
																		inv !store
																			reference
																				inv !propertyvalue
																					val K_unchecked obj
																					val K_unchecked vector
																			inv !bitwiseor
																				val K_unchecked dir
																				val K_unchecked plug_00196
																		inv !store
																			reference
																				val K_unchecked progressed
																			val K_unchecked 1
																		inv !continue
																inv !if
																	inv !and
																		inv !and
																			val K_unchecked use_doors
																			inv !ofclass
																				val K_unchecked in_direction
																				val K_unchecked plug_00153
																		inv !or
																			inv !or
																				inv !bitwiseand
																					val K_unchecked use_doors
																					val K_unchecked 2
																				inv !has
																					val K_unchecked in_direction
																					val K_unchecked open
																			inv !and
																				inv !has
																					val K_unchecked in_direction
																					val K_unchecked openable
																				inv !hasnt
																					val K_unchecked in_direction
																					val K_unchecked locked
																	code
																		inv !store
																			reference
																				val K_unchecked sl
																			val K_unchecked location
																		inv !store
																			reference
																				val K_unchecked location
																			val K_unchecked obj
																		inv !store
																			reference
																				val K_unchecked through_door
																			inv !message0
																				val K_unchecked in_direction
																				val K_unchecked door_to
																		inv !store
																			reference
																				val K_unchecked location
																			val K_unchecked sl
																		inv !if
																			inv !and
																				inv !and
																					inv !and
																						val K_unchecked through_door
																						inv !has
																							val K_unchecked through_door
																							val K_unchecked mark_as_room
																					inv !gt
																						inv !propertyvalue
																							val K_unchecked through_door
																							val K_unchecked vector
																						val K_unchecked 0
																				inv !or
																					inv !eq
																						val K_unchecked filter
																						val K_unchecked 0
																					inv !indirect1
																						val K_unchecked filter
																						val K_unchecked through_door
																			code
																				inv !store
																					reference
																						inv !propertyvalue
																							val K_unchecked obj
																							val K_unchecked vector
																					inv !bitwiseor
																						val K_unchecked dir
																						val K_unchecked plug_00196
																				inv !store
																					reference
																						val K_unchecked progressed
																					val K_unchecked 1
																				inv !continue
								inv !objectloop
									reference
										val K_unchecked obj
									val K_unchecked plug_00448
									inv !has
										val K_unchecked obj
										val K_unchecked mark_as_room
									code
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked vector
											inv !bitwiseand
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked vector
												inv !bitwisenot
													val K_unchecked plug_00196
								inv !if
									inv !propertyvalue
										val K_unchecked from
										val K_unchecked vector
									code
										inv !return
											inv !propertyvalue
												val K_unchecked from
												val K_unchecked vector
								inv !if
									inv !eq
										val K_unchecked progressed
										val K_unchecked 0
									code
										inv !return
											inv !propertyvalue
												val K_unchecked from
												val K_unchecked vector
				constant SlowRouteTo K_unchecked_function = SlowRouteTo_B __assimilated=1
			package SlowCountRouteTo_fn _function
				symbol public misc SlowCountRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SlowCountRouteTo_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc filter
					symbol private misc use_doors
					symbol private misc obj
					symbol private misc i
					symbol external misc mark_as_room --> /main/template/properties/mark_as_room_prop/mark_as_room
					symbol external misc MapRouteTo --> /main/template/functions/MapRouteTo_fn/MapRouteTo
					symbol external misc NUM_ROOMS --> /main/template/constants/NUM_ROOMS_con/NUM_ROOMS
					symbol external misc MapConnection --> /main/template/functions/MapConnection_fn/MapConnection
					symbol external misc vector --> /main/template/properties/vector_prop/vector
					local from K_unchecked
					local to K_unchecked
					local filter K_unchecked
					local use_doors K_unchecked
					local obj K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked to
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked to
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !has
									val K_unchecked from
									val K_unchecked mark_as_room
								inv !has
									val K_unchecked to
									val K_unchecked mark_as_room
							code
								inv !store
									reference
										val K_unchecked obj
									inv MapRouteTo
										val K_unchecked from
										val K_unchecked to
										val K_unchecked filter
										val K_unchecked use_doors
								inv !if
									inv !eq
										val K_unchecked obj
										val K_unchecked 0
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !store
									reference
										val K_unchecked i
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked obj
									val K_unchecked from
								inv !while
									inv !and
										inv !ne
											val K_unchecked obj
											val K_unchecked to
										inv !lt
											val K_unchecked i
											val K_unchecked NUM_ROOMS
									code
										inv !postincrement
											reference
												val K_unchecked i
										inv !store
											reference
												val K_unchecked obj
											inv MapConnection
												val K_unchecked obj
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked vector
								inv !return
									val K_unchecked i
						inv !return
							inv !unaryminus
								val K_unchecked 1
				constant SlowCountRouteTo K_unchecked_function = SlowCountRouteTo_B __assimilated=1
			package RelationRouteTo_fn _function
				symbol public misc RelationRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RelationRouteTo_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc count
					symbol private misc handler
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00449 --> /main/connectors/plug_00449
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_ROUTELESS --> /main/template/constants/RTP_ROUTELESS_con/RTP_ROUTELESS
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc plug_00450 --> /main/connectors/plug_00450
					local relation K_unchecked
					local from K_unchecked
					local to K_unchecked
					local count K_unchecked
					local handler K_unchecked
					code
						inv !ifelse
							val K_unchecked count
							code
								inv !if
									inv !eq
										val K_unchecked from
										val K_unchecked 0
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked to
										val K_unchecked 0
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked relation
										val K_unchecked 0
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
							code
								inv !if
									inv !eq
										val K_unchecked from
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked to
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked relation
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked to
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								inv !bitwiseand
									inv RlnGetF
										val K_unchecked relation
										val K_unchecked RR_PERMISSIONS
									val K_unchecked plug_00449
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_ROUTELESS
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_STORAGE
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_HANDLER
						inv !if
							val K_unchecked count
							code
								inv !return
									inv !indirect4
										val K_unchecked handler
										val K_unchecked relation
										val K_unchecked plug_00450
										val K_unchecked from
										val K_unchecked to
						inv !return
							inv !indirect4
								val K_unchecked handler
								val K_unchecked relation
								val K_unchecked plug_00449
								val K_unchecked from
								val K_unchecked to
				constant RelationRouteTo K_unchecked_function = RelationRouteTo_B __assimilated=1
			package RelFollowVector_fn _function
				symbol public misc RelFollowVector
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RelFollowVector_B _code
					symbol private misc rv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc obj
					symbol private misc i
					symbol external misc MAX_ROUTE_LENGTH --> /main/template/constants/MAX_ROUTE_LENGTH_con/MAX_ROUTE_LENGTH
					symbol external misc vector --> /main/template/properties/vector_prop/vector
					local rv K_unchecked
					local from K_unchecked
					local to K_unchecked
					local obj K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked rv
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked i
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked obj
							val K_unchecked from
						inv !while
							inv !and
								inv !ne
									val K_unchecked obj
									val K_unchecked to
								inv !le
									val K_unchecked i
									val K_unchecked MAX_ROUTE_LENGTH
							code
								inv !postincrement
									reference
										val K_unchecked i
								inv !store
									reference
										val K_unchecked obj
									inv !propertyvalue
										val K_unchecked obj
										val K_unchecked vector
						inv !return
							val K_unchecked i
				constant RelFollowVector K_unchecked_function = RelFollowVector_B __assimilated=1
			package OtoVRelRouteTo_fn _function
				symbol public misc OtoVRelRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package OtoVRelRouteTo_B _code
					symbol private misc relation_property
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc previous
					symbol external misc vector --> /main/template/properties/vector_prop/vector
					local relation_property K_unchecked
					local from K_unchecked
					local to K_unchecked
					local previous K_unchecked
					code
						inv !while
							inv !and
								inv !and
									val K_unchecked to
									inv !provides
										val K_unchecked to
										val K_unchecked relation_property
								inv !propertyvalue
									val K_unchecked to
									val K_unchecked relation_property
							code
								inv !store
									reference
										val K_unchecked previous
									inv !propertyvalue
										val K_unchecked to
										val K_unchecked relation_property
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked previous
											val K_unchecked vector
									val K_unchecked to
								inv !if
									inv !eq
										val K_unchecked previous
										val K_unchecked from
									code
										inv !return
											val K_unchecked to
								inv !store
									reference
										val K_unchecked to
									val K_unchecked previous
						inv !return
							val K_unchecked 0
				constant OtoVRelRouteTo K_unchecked_function = OtoVRelRouteTo_B __assimilated=1
			package VtoORelRouteTo_fn _function
				symbol public misc VtoORelRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VtoORelRouteTo_B _code
					symbol private misc relation_property
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc next
					symbol private misc start
					symbol external misc vector --> /main/template/properties/vector_prop/vector
					local relation_property K_unchecked
					local from K_unchecked
					local to K_unchecked
					local next K_unchecked
					local start K_unchecked
					code
						inv !store
							reference
								val K_unchecked start
							val K_unchecked from
						inv !while
							inv !and
								inv !and
									val K_unchecked from
									inv !provides
										val K_unchecked from
										val K_unchecked relation_property
								inv !propertyvalue
									val K_unchecked from
									val K_unchecked relation_property
							code
								inv !store
									reference
										val K_unchecked next
									inv !propertyvalue
										val K_unchecked from
										val K_unchecked relation_property
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked from
											val K_unchecked vector
									val K_unchecked next
								inv !if
									inv !eq
										val K_unchecked next
										val K_unchecked to
									code
										inv !return
											inv !propertyvalue
												val K_unchecked start
												val K_unchecked vector
								inv !store
									reference
										val K_unchecked from
									val K_unchecked next
						inv !return
							val K_unchecked 0
				constant VtoORelRouteTo K_unchecked_function = VtoORelRouteTo_B __assimilated=1
			package VtoVRelRouteTo_fn _function
				symbol public misc VtoVRelRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package VtoVRelRouteTo_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc count
					symbol private misc obj
					symbol private misc obj2
					symbol private misc related
					symbol private misc progressed
					symbol private misc left_ix
					symbol private misc pr2
					symbol private misc i
					symbol private misc vtov_structure
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc VTOVS_CACHE --> /main/template/constants/VTOVS_CACHE_con/VTOVS_CACHE
					symbol external misc FastVtoVRelRouteTo --> /main/template/functions/FastVtoVRelRouteTo_fn/FastVtoVRelRouteTo
					symbol external misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
					symbol external misc VTOVS_RIGHT_INDEX_PROP --> /main/template/constants/VTOVS_RIGHT_INDEX_PROP_con/VTOVS_RIGHT_INDEX_PROP
					symbol external misc Object --> /main/veneer/Object
					symbol external misc vector --> /main/template/properties/vector_prop/vector
					symbol external misc Relation_TestVtoV --> /main/template/functions/Relation_TestVtoV_fn/Relation_TestVtoV
					symbol external misc plug_00196 --> /main/connectors/plug_00196
					symbol external misc MAX_ROUTE_LENGTH --> /main/template/constants/MAX_ROUTE_LENGTH_con/MAX_ROUTE_LENGTH
					local relation K_unchecked
					local from K_unchecked
					local to K_unchecked
					local count K_unchecked
					local obj K_unchecked
					local obj2 K_unchecked
					local related K_unchecked
					local progressed K_unchecked
					local left_ix K_unchecked
					local pr2 K_unchecked
					local i K_unchecked
					local vtov_structure K_unchecked
					code
						inv !store
							reference
								val K_unchecked vtov_structure
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_STORAGE
						inv !if
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_CACHE
							code
								inv !return
									inv FastVtoVRelRouteTo
										val K_unchecked relation
										val K_unchecked from
										val K_unchecked to
										val K_unchecked count
						inv !store
							reference
								val K_unchecked left_ix
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_LEFT_INDEX_PROP
						inv !store
							reference
								val K_unchecked pr2
							inv !lookup
								val K_unchecked vtov_structure
								val K_unchecked VTOVS_RIGHT_INDEX_PROP
						inv !objectloop
							reference
								val K_unchecked obj
							val K_unchecked Object
							inv !and
								inv !ofclass
									val K_unchecked obj
									val K_unchecked Object
								inv !provides
									val K_unchecked obj
									val K_unchecked vector
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked vector
									val K_unchecked 0
						inv !store
							reference
								inv !propertyvalue
									val K_unchecked to
									val K_unchecked vector
							val K_unchecked 1
						inv !while
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked progressed
									val K_unchecked 0
								inv !objectloop
									reference
										val K_unchecked obj
									val K_unchecked Object
									inv !and
										inv !ofclass
											val K_unchecked obj
											val K_unchecked Object
										inv !provides
											val K_unchecked obj
											val K_unchecked left_ix
									code
										inv !if
											inv !eq
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked vector
												val K_unchecked 0
											code
												inv !objectloop
													reference
														val K_unchecked obj2
													val K_unchecked Object
													inv !and
														inv !and
															inv !ofclass
																val K_unchecked obj2
																val K_unchecked Object
															inv !provides
																val K_unchecked obj2
																val K_unchecked pr2
														inv !gt
															inv !propertyvalue
																val K_unchecked obj2
																val K_unchecked vector
															val K_unchecked 0
													code
														inv !if
															inv Relation_TestVtoV
																val K_unchecked obj
																val K_unchecked relation
																val K_unchecked obj2
															code
																inv !store
																	reference
																		inv !propertyvalue
																			val K_unchecked obj
																			val K_unchecked vector
																	inv !bitwiseor
																		val K_unchecked obj2
																		val K_unchecked plug_00196
																inv !store
																	reference
																		val K_unchecked progressed
																	val K_unchecked 1
																inv !continue
								inv !objectloop
									reference
										val K_unchecked obj
									val K_unchecked Object
									inv !and
										inv !ofclass
											val K_unchecked obj
											val K_unchecked Object
										inv !provides
											val K_unchecked obj
											val K_unchecked left_ix
									code
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked vector
											inv !bitwiseand
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked vector
												inv !bitwisenot
													val K_unchecked plug_00196
								inv !if
									inv !propertyvalue
										val K_unchecked from
										val K_unchecked vector
									code
										inv !break
								inv !if
									inv !eq
										val K_unchecked progressed
										val K_unchecked 0
									code
										inv !break
						inv !if
							val K_unchecked count
							code
								inv !if
									inv !eq
										inv !propertyvalue
											val K_unchecked from
											val K_unchecked vector
										val K_unchecked 0
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !store
									reference
										val K_unchecked i
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked obj
									val K_unchecked from
								inv !while
									inv !and
										inv !ne
											val K_unchecked obj
											val K_unchecked to
										inv !le
											val K_unchecked i
											val K_unchecked MAX_ROUTE_LENGTH
									code
										inv !postincrement
											reference
												val K_unchecked i
										inv !store
											reference
												val K_unchecked obj
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked vector
								inv !return
									val K_unchecked i
						inv !return
							inv !propertyvalue
								val K_unchecked from
								val K_unchecked vector
				constant VtoVRelRouteTo K_unchecked_function = VtoVRelRouteTo_B __assimilated=1
			package FastVtoVRelRouteTo_fn _function
				symbol public misc FastVtoVRelRouteTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FastVtoVRelRouteTo_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc count
					symbol private misc domainsize
					symbol private misc cache
					symbol private misc cache2
					symbol private misc left_ix
					symbol private misc ox
					symbol private misc oy
					symbol private misc oj
					symbol private misc offset
					symbol private misc axy
					symbol private misc axj
					symbol private misc ayj
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
					symbol external misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
					symbol external misc VTOVS_CACHE --> /main/template/constants/VTOVS_CACHE_con/VTOVS_CACHE
					symbol external misc VTOVS_CACHE_BROKEN --> /main/template/constants/VTOVS_CACHE_BROKEN_con/VTOVS_CACHE_BROKEN
					symbol external misc plug_00451 --> /main/connectors/plug_00451
					symbol external misc plug_00452 --> /main/connectors/plug_00452
					symbol external misc Relation_TestVtoV --> /main/template/functions/Relation_TestVtoV_fn/Relation_TestVtoV
					symbol external misc plug_00453 --> /main/connectors/plug_00453
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00454 --> /main/connectors/plug_00454
					symbol external misc plug_00455 --> /main/connectors/plug_00455
					local relation K_unchecked
					local from K_unchecked
					local to K_unchecked
					local count K_unchecked
					local domainsize K_unchecked
					local cache K_unchecked
					local cache2 K_unchecked
					local left_ix K_unchecked
					local ox K_unchecked
					local oy K_unchecked
					local oj K_unchecked
					local offset K_unchecked
					local axy K_unchecked
					local axj K_unchecked
					local ayj K_unchecked
					code
						inv !store
							reference
								val K_unchecked domainsize
							inv !lookup
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_STORAGE
								val K_unchecked 2
						inv !store
							reference
								val K_unchecked left_ix
							inv !lookup
								inv RlnGetF
									val K_unchecked relation
									val K_unchecked RR_STORAGE
								val K_unchecked VTOVS_LEFT_INDEX_PROP
						inv !if
							inv !and
								inv !provides
									val K_unchecked from
									val K_unchecked left_ix
								inv !provides
									val K_unchecked to
									val K_unchecked left_ix
							code
								inv !ifelse
									inv !lt
										val K_unchecked domainsize
										val K_unchecked 256
									code
										inv !store
											reference
												val K_unchecked cache
											inv !lookup
												inv RlnGetF
													val K_unchecked relation
													val K_unchecked RR_STORAGE
												val K_unchecked VTOVS_CACHE
										inv !store
											reference
												val K_unchecked cache2
											inv !plus
												val K_unchecked cache
												inv !times
													val K_unchecked domainsize
													val K_unchecked domainsize
										inv !if
											inv !eq
												inv !lookup
													inv RlnGetF
														val K_unchecked relation
														val K_unchecked RR_STORAGE
													val K_unchecked VTOVS_CACHE_BROKEN
												val K_unchecked 1
											code
												inv !store
													reference
														inv !lookup
															inv RlnGetF
																val K_unchecked relation
																val K_unchecked RR_STORAGE
															val K_unchecked VTOVS_CACHE_BROKEN
													val K_unchecked 0
												inv !objectloop
													reference
														val K_unchecked oy
													val K_unchecked plug_00451
													inv !provides
														val K_unchecked oy
														val K_unchecked left_ix
													code
														inv !objectloop
															reference
																val K_unchecked ox
															val K_unchecked plug_00452
															inv !provides
																val K_unchecked ox
																val K_unchecked left_ix
															code
																inv !ifelse
																	inv Relation_TestVtoV
																		val K_unchecked oy
																		val K_unchecked relation
																		val K_unchecked ox
																	code
																		inv !store
																			reference
																				val K_unchecked offset
																			inv !plus
																				inv !times
																					inv !propertyvalue
																						val K_unchecked oy
																						val K_unchecked left_ix
																					val K_unchecked domainsize
																				inv !propertyvalue
																					val K_unchecked ox
																					val K_unchecked left_ix
																		inv !store
																			reference
																				inv !lookupbyte
																					val K_unchecked cache
																					val K_unchecked offset
																			val K_unchecked 1
																		inv !store
																			reference
																				inv !lookupbyte
																					val K_unchecked cache2
																					val K_unchecked offset
																			inv !propertyvalue
																				val K_unchecked ox
																				val K_unchecked left_ix
																	code
																		inv !store
																			reference
																				val K_unchecked offset
																			inv !plus
																				inv !times
																					inv !propertyvalue
																						val K_unchecked oy
																						val K_unchecked left_ix
																					val K_unchecked domainsize
																				inv !propertyvalue
																					val K_unchecked ox
																					val K_unchecked left_ix
																		inv !store
																			reference
																				inv !lookupbyte
																					val K_unchecked cache
																					val K_unchecked offset
																			val K_unchecked 0
																		inv !store
																			reference
																				inv !lookupbyte
																					val K_unchecked cache2
																					val K_unchecked offset
																			val K_unchecked 255
												inv !for
													inv !store
														reference
															val K_unchecked oy
														val K_unchecked 0
													inv !lt
														val K_unchecked oy
														val K_unchecked domainsize
													inv !postincrement
														reference
															val K_unchecked oy
													code
														inv !for
															inv !store
																reference
																	val K_unchecked ox
																val K_unchecked 0
															inv !lt
																val K_unchecked ox
																val K_unchecked domainsize
															inv !postincrement
																reference
																	val K_unchecked ox
															code
																inv !store
																	reference
																		val K_unchecked axy
																	inv !lookupbyte
																		val K_unchecked cache
																		inv !plus
																			inv !times
																				val K_unchecked ox
																				val K_unchecked domainsize
																			val K_unchecked oy
																inv !if
																	inv !gt
																		val K_unchecked axy
																		val K_unchecked 0
																	code
																		inv !for
																			inv !store
																				reference
																					val K_unchecked oj
																				val K_unchecked 0
																			inv !lt
																				val K_unchecked oj
																				val K_unchecked domainsize
																			inv !postincrement
																				reference
																					val K_unchecked oj
																			code
																				inv !store
																					reference
																						val K_unchecked ayj
																					inv !lookupbyte
																						val K_unchecked cache
																						inv !plus
																							inv !times
																								val K_unchecked oy
																								val K_unchecked domainsize
																							val K_unchecked oj
																				inv !if
																					inv !gt
																						val K_unchecked ayj
																						val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked offset
																							inv !plus
																								inv !times
																									val K_unchecked ox
																									val K_unchecked domainsize
																								val K_unchecked oj
																						inv !store
																							reference
																								val K_unchecked axj
																							inv !lookupbyte
																								val K_unchecked cache
																								val K_unchecked offset
																						inv !if
																							inv !or
																								inv !eq
																									val K_unchecked axj
																									val K_unchecked 0
																								inv !lt
																									inv !plus
																										val K_unchecked axy
																										val K_unchecked ayj
																									val K_unchecked axj
																							code
																								inv !store
																									reference
																										inv !lookupbyte
																											val K_unchecked cache
																											val K_unchecked offset
																									inv !plus
																										val K_unchecked axy
																										val K_unchecked ayj
																								inv !store
																									reference
																										inv !lookupbyte
																											val K_unchecked cache2
																											val K_unchecked offset
																									inv !lookupbyte
																										val K_unchecked cache2
																										inv !plus
																											inv !times
																												val K_unchecked ox
																												val K_unchecked domainsize
																											val K_unchecked oy
										inv !if
											val K_unchecked count
											code
												inv !store
													reference
														val K_unchecked count
													inv !lookupbyte
														val K_unchecked cache
														inv !plus
															inv !times
																inv !propertyvalue
																	val K_unchecked from
																	val K_unchecked left_ix
																val K_unchecked domainsize
															inv !propertyvalue
																val K_unchecked to
																val K_unchecked left_ix
												inv !if
													inv !eq
														val K_unchecked count
														val K_unchecked 0
													code
														inv !return
															inv !unaryminus
																val K_unchecked 1
												inv !return
													val K_unchecked count
										inv !store
											reference
												val K_unchecked oy
											inv !lookupbyte
												val K_unchecked cache2
												inv !plus
													inv !times
														inv !propertyvalue
															val K_unchecked from
															val K_unchecked left_ix
														val K_unchecked domainsize
													inv !propertyvalue
														val K_unchecked to
														val K_unchecked left_ix
										inv !if
											inv !lt
												val K_unchecked oy
												val K_unchecked 255
											code
												inv !objectloop
													reference
														val K_unchecked ox
													val K_unchecked plug_00453
													inv !provides
														val K_unchecked ox
														val K_unchecked left_ix
													code
														inv !if
															inv !eq
																inv !propertyvalue
																	val K_unchecked ox
																	val K_unchecked left_ix
																val K_unchecked oy
															code
																inv !return
																	val K_unchecked ox
										inv !return
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked cache
											inv !lookup
												inv RlnGetF
													val K_unchecked relation
													val K_unchecked RR_STORAGE
												val K_unchecked VTOVS_CACHE
										inv !store
											reference
												val K_unchecked cache2
											inv !plus
												val K_unchecked cache
												inv !times
													inv !times
														val K_unchecked plug_00139
														val K_unchecked domainsize
													val K_unchecked domainsize
										inv !if
											inv !eq
												inv !lookup
													inv RlnGetF
														val K_unchecked relation
														val K_unchecked RR_STORAGE
													val K_unchecked VTOVS_CACHE_BROKEN
												val K_unchecked 1
											code
												inv !store
													reference
														inv !lookup
															inv RlnGetF
																val K_unchecked relation
																val K_unchecked RR_STORAGE
															val K_unchecked VTOVS_CACHE_BROKEN
													val K_unchecked 0
												inv !objectloop
													reference
														val K_unchecked oy
													val K_unchecked plug_00454
													inv !provides
														val K_unchecked oy
														val K_unchecked left_ix
													code
														inv !objectloop
															reference
																val K_unchecked ox
															val K_unchecked plug_00455
															inv !provides
																val K_unchecked ox
																val K_unchecked left_ix
															code
																inv !ifelse
																	inv Relation_TestVtoV
																		val K_unchecked oy
																		val K_unchecked relation
																		val K_unchecked ox
																	code
																		inv !store
																			reference
																				val K_unchecked offset
																			inv !plus
																				inv !times
																					inv !propertyvalue
																						val K_unchecked oy
																						val K_unchecked left_ix
																					val K_unchecked domainsize
																				inv !propertyvalue
																					val K_unchecked ox
																					val K_unchecked left_ix
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked cache
																					val K_unchecked offset
																			val K_unchecked 1
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked cache2
																					val K_unchecked offset
																			val K_unchecked ox
																	code
																		inv !store
																			reference
																				val K_unchecked offset
																			inv !plus
																				inv !times
																					inv !propertyvalue
																						val K_unchecked oy
																						val K_unchecked left_ix
																					val K_unchecked domainsize
																				inv !propertyvalue
																					val K_unchecked ox
																					val K_unchecked left_ix
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked cache
																					val K_unchecked offset
																			val K_unchecked 0
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked cache2
																					val K_unchecked offset
																			val K_unchecked 0
												inv !for
													inv !store
														reference
															val K_unchecked oy
														val K_unchecked 0
													inv !lt
														val K_unchecked oy
														val K_unchecked domainsize
													inv !postincrement
														reference
															val K_unchecked oy
													code
														inv !for
															inv !store
																reference
																	val K_unchecked ox
																val K_unchecked 0
															inv !lt
																val K_unchecked ox
																val K_unchecked domainsize
															inv !postincrement
																reference
																	val K_unchecked ox
															code
																inv !store
																	reference
																		val K_unchecked axy
																	inv !lookup
																		val K_unchecked cache
																		inv !plus
																			inv !times
																				val K_unchecked ox
																				val K_unchecked domainsize
																			val K_unchecked oy
																inv !if
																	inv !gt
																		val K_unchecked axy
																		val K_unchecked 0
																	code
																		inv !for
																			inv !store
																				reference
																					val K_unchecked oj
																				val K_unchecked 0
																			inv !lt
																				val K_unchecked oj
																				val K_unchecked domainsize
																			inv !postincrement
																				reference
																					val K_unchecked oj
																			code
																				inv !store
																					reference
																						val K_unchecked ayj
																					inv !lookup
																						val K_unchecked cache
																						inv !plus
																							inv !times
																								val K_unchecked oy
																								val K_unchecked domainsize
																							val K_unchecked oj
																				inv !if
																					inv !gt
																						val K_unchecked ayj
																						val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked offset
																							inv !plus
																								inv !times
																									val K_unchecked ox
																									val K_unchecked domainsize
																								val K_unchecked oj
																						inv !store
																							reference
																								val K_unchecked axj
																							inv !lookup
																								val K_unchecked cache
																								val K_unchecked offset
																						inv !if
																							inv !or
																								inv !eq
																									val K_unchecked axj
																									val K_unchecked 0
																								inv !lt
																									inv !plus
																										val K_unchecked axy
																										val K_unchecked ayj
																									val K_unchecked axj
																							code
																								inv !store
																									reference
																										inv !lookup
																											val K_unchecked cache
																											val K_unchecked offset
																									inv !plus
																										val K_unchecked axy
																										val K_unchecked ayj
																								inv !store
																									reference
																										inv !lookup
																											val K_unchecked cache2
																											val K_unchecked offset
																									inv !lookup
																										val K_unchecked cache2
																										inv !plus
																											inv !times
																												val K_unchecked ox
																												val K_unchecked domainsize
																											val K_unchecked oy
										inv !if
											val K_unchecked count
											code
												inv !store
													reference
														val K_unchecked count
													inv !lookup
														val K_unchecked cache
														inv !plus
															inv !times
																inv !propertyvalue
																	val K_unchecked from
																	val K_unchecked left_ix
																val K_unchecked domainsize
															inv !propertyvalue
																val K_unchecked to
																val K_unchecked left_ix
												inv !if
													inv !eq
														val K_unchecked count
														val K_unchecked 0
													code
														inv !return
															inv !unaryminus
																val K_unchecked 1
												inv !return
													val K_unchecked count
										inv !return
											inv !lookup
												val K_unchecked cache2
												inv !plus
													inv !times
														inv !propertyvalue
															val K_unchecked from
															val K_unchecked left_ix
														val K_unchecked domainsize
													inv !propertyvalue
														val K_unchecked to
														val K_unchecked left_ix
						inv !if
							val K_unchecked count
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant FastVtoVRelRouteTo K_unchecked_function = FastVtoVRelRouteTo_B __assimilated=1
			package RunTimeProblem_fn _function
				symbol public misc RunTimeProblem
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RunTimeProblem_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc par1
					symbol private misc par2
					symbol private misc par3
					symbol private misc ln
					symbol private misc file
					symbol external misc RTP_Buffer --> /main/template/arrays/RTP_Buffer_arr/RTP_Buffer
					symbol external misc RunTimeProblemShow --> /main/template/functions/RunTimeProblemShow_fn/RunTimeProblemShow
					local n K_unchecked
					local par1 K_unchecked
					local par2 K_unchecked
					local par3 K_unchecked
					local ln K_unchecked
					local file K_unchecked
					code
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked RTP_Buffer
									val K_unchecked 0
								val K_unchecked -1
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked RTP_Buffer
											val K_unchecked 0
									val K_unchecked n
								inv !store
									reference
										inv !lookup
											val K_unchecked RTP_Buffer
											val K_unchecked 1
									val K_unchecked par1
								inv !store
									reference
										inv !lookup
											val K_unchecked RTP_Buffer
											val K_unchecked 2
									val K_unchecked par2
								inv !store
									reference
										inv !lookup
											val K_unchecked RTP_Buffer
											val K_unchecked 3
									val K_unchecked par3
								inv !store
									reference
										inv !lookup
											val K_unchecked RTP_Buffer
											val K_unchecked 4
									val K_unchecked ln
								inv !store
									reference
										inv !lookup
											val K_unchecked RTP_Buffer
											val K_unchecked 5
									val K_unchecked file
						inv RunTimeProblemShow
				constant RunTimeProblem K_unchecked_function = RunTimeProblem_B __assimilated=1
			package ClearRTP_fn _function
				symbol public misc ClearRTP
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ClearRTP_B _code
					symbol external misc RTP_Buffer --> /main/template/arrays/RTP_Buffer_arr/RTP_Buffer
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked RTP_Buffer
									val K_unchecked 0
							val K_unchecked -1
						inv !store
							reference
								inv !lookup
									val K_unchecked RTP_Buffer
									val K_unchecked 6
							val K_unchecked 0
				constant ClearRTP K_unchecked_function = ClearRTP_B __assimilated=1
			package SuspendRTP_fn _function
				symbol public misc SuspendRTP
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SuspendRTP_B _code
					symbol external misc RTP_Buffer --> /main/template/arrays/RTP_Buffer_arr/RTP_Buffer
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked RTP_Buffer
									val K_unchecked 6
							val K_unchecked 1
				constant SuspendRTP K_unchecked_function = SuspendRTP_B __assimilated=1
			package ResumeRTP_fn _function
				symbol public misc ResumeRTP
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ResumeRTP_B _code
					symbol external misc RTP_Buffer --> /main/template/arrays/RTP_Buffer_arr/RTP_Buffer
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked RTP_Buffer
									val K_unchecked 6
							val K_unchecked 0
				constant ResumeRTP K_unchecked_function = ResumeRTP_B __assimilated=1
			package RunTimeProblemShow_fn _function
				symbol public misc RunTimeProblemShow
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RunTimeProblemShow_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc par1
					symbol private misc par2
					symbol private misc par3
					symbol private misc ln
					symbol private misc file
					symbol private misc i
					symbol private misc c
					symbol external misc RTP_Buffer --> /main/template/arrays/RTP_Buffer_arr/RTP_Buffer
					symbol external misc plug_00456 --> /main/connectors/plug_00456
					symbol external misc RTP_BACKDROP --> /main/template/constants/RTP_BACKDROP_con/RTP_BACKDROP
					symbol external misc RTP_CANTCHANGE --> /main/template/constants/RTP_CANTCHANGE_con/RTP_CANTCHANGE
					symbol external misc RTP_NOEXIT --> /main/template/constants/RTP_NOEXIT_con/RTP_NOEXIT
					symbol external misc RTP_EXITDOOR --> /main/template/constants/RTP_EXITDOOR_con/RTP_EXITDOOR
					symbol external misc RTP_IMPREL --> /main/template/constants/RTP_IMPREL_con/RTP_IMPREL
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_DESCRIPTION --> /main/template/constants/RR_DESCRIPTION_con/RR_DESCRIPTION
					symbol external misc RTP_TOOMANYRULEBOOKS --> /main/template/constants/RTP_TOOMANYRULEBOOKS_con/RTP_TOOMANYRULEBOOKS
					symbol external misc RTP_TOOMANYEVENTS --> /main/template/constants/RTP_TOOMANYEVENTS_con/RTP_TOOMANYEVENTS
					symbol external misc RTP_BADPROPERTY --> /main/template/constants/RTP_BADPROPERTY_con/RTP_BADPROPERTY
					symbol external misc RTP_UNPROVIDED --> /main/template/constants/RTP_UNPROVIDED_con/RTP_UNPROVIDED
					symbol external misc RTP_UNSET --> /main/template/constants/RTP_UNSET_con/RTP_UNSET
					symbol external misc RTP_TOOMANYACTS --> /main/template/constants/RTP_TOOMANYACTS_con/RTP_TOOMANYACTS
					symbol external misc RTP_CANTABANDON --> /main/template/constants/RTP_CANTABANDON_con/RTP_CANTABANDON
					symbol external misc RTP_CANTEND --> /main/template/constants/RTP_CANTEND_con/RTP_CANTEND
					symbol external misc RTP_CANTMOVENOTHING --> /main/template/constants/RTP_CANTMOVENOTHING_con/RTP_CANTMOVENOTHING
					symbol external misc RTP_CANTREMOVENOTHING --> /main/template/constants/RTP_CANTREMOVENOTHING_con/RTP_CANTREMOVENOTHING
					symbol external misc RTP_DIVZERO --> /main/template/constants/RTP_DIVZERO_con/RTP_DIVZERO
					symbol external misc RTP_BADVALUEPROPERTY --> /main/template/constants/RTP_BADVALUEPROPERTY_con/RTP_BADVALUEPROPERTY
					symbol external misc RTP_NOTBACKDROP --> /main/template/constants/RTP_NOTBACKDROP_con/RTP_NOTBACKDROP
					symbol external misc RTP_TABLE_NOCOL --> /main/template/constants/RTP_TABLE_NOCOL_con/RTP_TABLE_NOCOL
					symbol external misc plug_00457 --> /main/connectors/plug_00457
					symbol external misc RTP_TABLE_NOCORR --> /main/template/constants/RTP_TABLE_NOCORR_con/RTP_TABLE_NOCORR
					symbol external misc RTP_TABLE_NOROW --> /main/template/constants/RTP_TABLE_NOROW_con/RTP_TABLE_NOROW
					symbol external misc RTP_TABLE_NOENTRY --> /main/template/constants/RTP_TABLE_NOENTRY_con/RTP_TABLE_NOENTRY
					symbol external misc RTP_TABLE_NOTABLE --> /main/template/constants/RTP_TABLE_NOTABLE_con/RTP_TABLE_NOTABLE
					symbol external misc RTP_TABLE_NOTABLE2 --> /main/template/constants/RTP_TABLE_NOTABLE2_con/RTP_TABLE_NOTABLE2
					symbol external misc RTP_TABLE_NOMOREBLANKS --> /main/template/constants/RTP_TABLE_NOMOREBLANKS_con/RTP_TABLE_NOMOREBLANKS
					symbol external misc RTP_TABLE_NOROWS --> /main/template/constants/RTP_TABLE_NOROWS_con/RTP_TABLE_NOROWS
					symbol external misc RTP_TABLE_CANTRUNTHROUGH --> /main/template/constants/RTP_TABLE_CANTRUNTHROUGH_con/RTP_TABLE_CANTRUNTHROUGH
					symbol external misc RTP_TABLE_CANTSORT --> /main/template/constants/RTP_TABLE_CANTSORT_con/RTP_TABLE_CANTSORT
					symbol external misc RTP_TABLE_CANTSAVE --> /main/template/constants/RTP_TABLE_CANTSAVE_con/RTP_TABLE_CANTSAVE
					symbol external misc RTP_TABLE_WONTFIT --> /main/template/constants/RTP_TABLE_WONTFIT_con/RTP_TABLE_WONTFIT
					symbol external misc RTP_TABLE_BADFILE --> /main/template/constants/RTP_TABLE_BADFILE_con/RTP_TABLE_BADFILE
					symbol external misc RTP_NOTINAROOM --> /main/template/constants/RTP_NOTINAROOM_con/RTP_NOTINAROOM
					symbol external misc RTP_BADTOPIC --> /main/template/constants/RTP_BADTOPIC_con/RTP_BADTOPIC
					symbol external misc RTP_ROUTELESS --> /main/template/constants/RTP_ROUTELESS_con/RTP_ROUTELESS
					symbol external misc RTP_PROPOFNOTHING --> /main/template/constants/RTP_PROPOFNOTHING_con/RTP_PROPOFNOTHING
					symbol external misc PrintPropertyName --> /main/template/functions/PrintPropertyName_fn/PrintPropertyName
					symbol external misc RTP_DECIDEONWRONGKIND --> /main/template/constants/RTP_DECIDEONWRONGKIND_con/RTP_DECIDEONWRONGKIND
					symbol external misc RTP_DECIDEONNOTHING --> /main/template/constants/RTP_DECIDEONNOTHING_con/RTP_DECIDEONNOTHING
					symbol external misc RTP_LOWLEVELERROR --> /main/template/constants/RTP_LOWLEVELERROR_con/RTP_LOWLEVELERROR
					symbol external misc RTP_DONTIGNORETURNSEQUENCE --> /main/template/constants/RTP_DONTIGNORETURNSEQUENCE_con/RTP_DONTIGNORETURNSEQUENCE
					symbol external misc RTP_SAYINVALIDSNIPPET --> /main/template/constants/RTP_SAYINVALIDSNIPPET_con/RTP_SAYINVALIDSNIPPET
					symbol external misc RTP_SPLICEINVALIDSNIPPET --> /main/template/constants/RTP_SPLICEINVALIDSNIPPET_con/RTP_SPLICEINVALIDSNIPPET
					symbol external misc RTP_INCLUDEINVALIDSNIPPET --> /main/template/constants/RTP_INCLUDEINVALIDSNIPPET_con/RTP_INCLUDEINVALIDSNIPPET
					symbol external misc RTP_LISTWRITERMEMORY --> /main/template/constants/RTP_LISTWRITERMEMORY_con/RTP_LISTWRITERMEMORY
					symbol external misc RTP_CANTREMOVEPLAYER --> /main/template/constants/RTP_CANTREMOVEPLAYER_con/RTP_CANTREMOVEPLAYER
					symbol external misc RTP_CANTBEOFFSTAGE --> /main/template/constants/RTP_CANTBEOFFSTAGE_con/RTP_CANTBEOFFSTAGE
					symbol external misc RTP_CANTREMOVEDOORS --> /main/template/constants/RTP_CANTREMOVEDOORS_con/RTP_CANTREMOVEDOORS
					symbol external misc RTP_CANTCHANGEOFFSTAGE --> /main/template/constants/RTP_CANTCHANGEOFFSTAGE_con/RTP_CANTCHANGEOFFSTAGE
					symbol external misc RTP_MSTACKMEMORY --> /main/template/constants/RTP_MSTACKMEMORY_con/RTP_MSTACKMEMORY
					symbol external misc RTP_TYPECHECK --> /main/template/constants/RTP_TYPECHECK_con/RTP_TYPECHECK
					symbol external misc RTP_FILEIOERROR --> /main/template/constants/RTP_FILEIOERROR_con/RTP_FILEIOERROR
					symbol external misc RTP_HEAPERROR --> /main/template/constants/RTP_HEAPERROR_con/RTP_HEAPERROR
					symbol external misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
					symbol external misc RTP_LISTSIZENEGATIVE --> /main/template/constants/RTP_LISTSIZENEGATIVE_con/RTP_LISTSIZENEGATIVE
					symbol external misc RTP_REGEXPSYNTAXERROR --> /main/template/constants/RTP_REGEXPSYNTAXERROR_con/RTP_REGEXPSYNTAXERROR
					symbol external misc RTP_NOGLULXUNICODE --> /main/template/constants/RTP_NOGLULXUNICODE_con/RTP_NOGLULXUNICODE
					symbol external misc RTP_BACKDROPONLY --> /main/template/constants/RTP_BACKDROPONLY_con/RTP_BACKDROPONLY
					symbol external misc RTP_NOTTHING --> /main/template/constants/RTP_NOTTHING_con/RTP_NOTTHING
					symbol external misc RTP_SCENEHASNTSTARTED --> /main/template/constants/RTP_SCENEHASNTSTARTED_con/RTP_SCENEHASNTSTARTED
					symbol external misc plug_00458 --> /main/connectors/plug_00458
					symbol external misc RTP_SCENEHASNTENDED --> /main/template/constants/RTP_SCENEHASNTENDED_con/RTP_SCENEHASNTENDED
					symbol external misc RTP_NEGATIVEROOT --> /main/template/constants/RTP_NEGATIVEROOT_con/RTP_NEGATIVEROOT
					symbol external misc RTP_CANTITERATE --> /main/template/constants/RTP_CANTITERATE_con/RTP_CANTITERATE
					symbol external misc RTP_WRONGASSIGNEDKIND --> /main/template/constants/RTP_WRONGASSIGNEDKIND_con/RTP_WRONGASSIGNEDKIND
					symbol external misc RTP_RELKINDVIOLATION --> /main/template/constants/RTP_RELKINDVIOLATION_con/RTP_RELKINDVIOLATION
					symbol external misc RTP_CANTMAKEPART --> /main/template/constants/RTP_CANTMAKEPART_con/RTP_CANTMAKEPART
					symbol external misc RTP_TEXTTOKENTOOHARD --> /main/template/constants/RTP_TEXTTOKENTOOHARD_con/RTP_TEXTTOKENTOOHARD
					symbol external misc RTP_RELATIONCHANGEIMPOSSIBLE --> /main/template/constants/RTP_RELATIONCHANGEIMPOSSIBLE_con/RTP_RELATIONCHANGEIMPOSSIBLE
					symbol external misc RTP_RELMINIMAL --> /main/template/constants/RTP_RELMINIMAL_con/RTP_RELMINIMAL
					symbol external misc RTP_REGIONSNOTADJACENT --> /main/template/constants/RTP_REGIONSNOTADJACENT_con/RTP_REGIONSNOTADJACENT
					local n K_unchecked
					local par1 K_unchecked
					local par2 K_unchecked
					local par3 K_unchecked
					local ln K_unchecked
					local file K_unchecked
					local i K_unchecked
					local c K_unchecked
					code
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked RTP_Buffer
									val K_unchecked 0
								inv !alternative
									val K_unchecked -1
									val K_unchecked -2
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !lookup
								val K_unchecked RTP_Buffer
								val K_unchecked 6
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked n
							inv !lookup
								val K_unchecked RTP_Buffer
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked par1
							inv !lookup
								val K_unchecked RTP_Buffer
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked par2
							inv !lookup
								val K_unchecked RTP_Buffer
								val K_unchecked 2
						inv !store
							reference
								val K_unchecked par3
							inv !lookup
								val K_unchecked RTP_Buffer
								val K_unchecked 3
						inv !store
							reference
								val K_unchecked ln
							inv !lookup
								val K_unchecked RTP_Buffer
								val K_unchecked 4
						inv !store
							reference
								val K_unchecked file
							inv !lookup
								val K_unchecked RTP_Buffer
								val K_unchecked 5
						inv !store
							reference
								inv !lookup
									val K_unchecked RTP_Buffer
									val K_unchecked 0
							val K_unchecked -2
						inv !print
							val K_unchecked "\n"
						inv !print
							val K_unchecked "*** Run-time problem P"
						inv !printnumber
							val K_unchecked n
						inv !if
							val K_unchecked ln
							code
								inv !print
									val K_unchecked " (at paragraph "
								inv !printnumber
									val K_unchecked ln
								inv !print
									val K_unchecked " in "
								inv !ifelse
									inv !eq
										val K_unchecked file
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "the source text"
									code
										inv plug_00456
											val K_unchecked file
								inv !print
									val K_unchecked ")"
						inv !print
							val K_unchecked ": "
						inv !switch
							val K_unchecked n
							code
								inv !case
									val K_unchecked RTP_BACKDROP
									code
										inv !print
											val K_unchecked "Tried to move "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked " (a backdrop) to "
										inv !printdef
											val K_unchecked par2
										inv !print
											val K_unchecked ", which is not a region.\n"
								inv !case
									val K_unchecked RTP_CANTCHANGE
									code
										inv !print
											val K_unchecked "Tried to change player to "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked ", which is not a person.\n"
								inv !case
									val K_unchecked RTP_NOEXIT
									code
										inv !print
											val K_unchecked "Tried to change "
										inv !printdef
											val K_unchecked par2
										inv !print
											val K_unchecked " exit of "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked ", but it didn't seem to have such an exit to change.\n"
								inv !case
									val K_unchecked RTP_EXITDOOR
									code
										inv !print
											val K_unchecked "Tried to change "
										inv !printdef
											val K_unchecked par2
										inv !print
											val K_unchecked " exit of "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked ", but it led to a door, not a room.\n"
								inv !case
									val K_unchecked RTP_IMPREL
									code
										inv !print
											val K_unchecked "Tried to access an inappropriate relation for "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked ", violating '"
										inv !printstring
											inv RlnGetF
												val K_unchecked par2
												val K_unchecked RR_DESCRIPTION
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TOOMANYRULEBOOKS
									code
										inv !print
											val K_unchecked "Too many rulebooks in simultaneous use.\n"
								inv !case
									val K_unchecked RTP_TOOMANYEVENTS
									code
										inv !print
											val K_unchecked "Too many timed events are going on at once.\n"
								inv !case
									val K_unchecked RTP_BADPROPERTY
									code
										inv !print
											val K_unchecked "Tried to access non-existent property for "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked ".\n"
								inv !case
									val K_unchecked RTP_UNPROVIDED
									code
										inv !print
											val K_unchecked "Since "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked " is not allowed the property \""
										inv !printstring
											val K_unchecked par2
										inv !print
											val K_unchecked "\", it is against the rules to try to use it.\n"
								inv !case
									val K_unchecked RTP_UNSET
									code
										inv !print
											val K_unchecked "Although "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked " is allowed to have the property \""
										inv !printstring
											val K_unchecked par2
										inv !print
											val K_unchecked "\", no value was ever given, so it can't now be used.\n"
								inv !case
									val K_unchecked RTP_TOOMANYACTS
									code
										inv !print
											val K_unchecked "Too many activities are going on at once.\n"
								inv !case
									val K_unchecked RTP_CANTABANDON
									code
										inv !print
											val K_unchecked "Tried to abandon an activity which wasn't going on.\n"
								inv !case
									val K_unchecked RTP_CANTEND
									code
										inv !print
											val K_unchecked "Tried to end an activity which wasn't going on.\n"
								inv !case
									val K_unchecked RTP_CANTMOVENOTHING
									code
										inv !print
											val K_unchecked "You can't move nothing.\n"
								inv !case
									val K_unchecked RTP_CANTREMOVENOTHING
									code
										inv !print
											val K_unchecked "You can't remove nothing from play.\n"
								inv !case
									val K_unchecked RTP_DIVZERO
									code
										inv !print
											val K_unchecked "You can't divide by zero.\n"
								inv !case
									val K_unchecked RTP_BADVALUEPROPERTY
									code
										inv !print
											val K_unchecked "Tried to access property for a value which didn't fit: "
										inv !print
											val K_unchecked "if this were a number it would be "
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked ".\n"
								inv !case
									val K_unchecked RTP_NOTBACKDROP
									code
										inv !print
											val K_unchecked "Tried to move "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked " (not a backdrop) to "
										inv !printdef
											val K_unchecked par2
										inv !print
											val K_unchecked ", which is a region.\n"
								inv !case
									val K_unchecked RTP_TABLE_NOCOL
									code
										inv !print
											val K_unchecked "Attempt to look up a non-existent column in the table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_NOCORR
									code
										inv !print
											val K_unchecked "Attempt to look up a non-existent correspondence in the table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_NOROW
									code
										inv !print
											val K_unchecked "Attempt to look up a non-existent row in the table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_NOENTRY
									code
										inv !print
											val K_unchecked "Attempt to look up a non-existent entry at column "
										inv !printnumber
											val K_unchecked par2
										inv !print
											val K_unchecked ", row "
										inv !printnumber
											val K_unchecked par3
										inv !print
											val K_unchecked " of the table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_NOTABLE
									code
										inv !print
											val K_unchecked "Attempt to blank out a row from a non-existent table (value "
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked ").\n"
								inv !case
									val K_unchecked RTP_TABLE_NOTABLE2
									code
										inv !print
											val K_unchecked "Attempt to access an entry from a non-existent table.\n"
								inv !case
									val K_unchecked RTP_TABLE_NOMOREBLANKS
									code
										inv !print
											val K_unchecked "Attempt to choose a blank row in a table with none left: table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_NOROWS
									code
										inv !print
											val K_unchecked "Attempt to choose a random row in an entirely blank table: table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_CANTRUNTHROUGH
									code
										inv !print
											val K_unchecked "Attempt to repeat through a table in a tricky column order: table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_CANTSORT
									code
										inv !print
											val K_unchecked "Attempt to sort a table whose ordering must remain fixed: table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_CANTSAVE
									code
										inv !print
											val K_unchecked "Attempt to save a table to a file whose data is unstable: table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_WONTFIT
									code
										inv !print
											val K_unchecked "File being read has too many rows or columns to fit into table: table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_TABLE_BADFILE
									code
										inv !print
											val K_unchecked "File being read is not a previously saved table: table '"
										inv plug_00457
											val K_unchecked par1
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_NOTINAROOM
									code
										inv !print
											val K_unchecked "Attempt to test if the current location is '"
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked "', which is not a room or region.\n"
								inv !case
									val K_unchecked RTP_BADTOPIC
									code
										inv !print
											val K_unchecked "Attempt to see if a snippet of text matches something which is not a topic.\n"
								inv !case
									val K_unchecked RTP_ROUTELESS
									code
										inv !print
											val K_unchecked "Attempt to find route or count steps through an implicit relation.\n"
								inv !case
									val K_unchecked RTP_PROPOFNOTHING
									code
										inv !print
											val K_unchecked "Attempt to use a property of the 'nothing' non-object: property "
										inv PrintPropertyName
											val K_unchecked par2
										inv !print
											val K_unchecked "\n"
								inv !case
									val K_unchecked RTP_DECIDEONWRONGKIND
									code
										inv !print
											val K_unchecked "Attempt to 'decide on V' where V is the wrong kind of object.\n"
								inv !case
									val K_unchecked RTP_DECIDEONNOTHING
									code
										inv !print
											val K_unchecked "Attempt to 'decide on nothing'.\n"
								inv !case
									val K_unchecked RTP_LOWLEVELERROR
									code
										inv !print
											val K_unchecked "Low level error.\n"
								inv !case
									val K_unchecked RTP_DONTIGNORETURNSEQUENCE
									code
										inv !print
											val K_unchecked "Attempt to ignore the turn sequence rules.\n"
								inv !case
									val K_unchecked RTP_SAYINVALIDSNIPPET
									code
										inv !print
											val K_unchecked "Attempt to say a snippet value which is currently invalid: words "
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked " to "
										inv !printnumber
											val K_unchecked par2
										inv !print
											val K_unchecked ".\n"
								inv !case
									val K_unchecked RTP_SPLICEINVALIDSNIPPET
									code
										inv !print
											val K_unchecked "Attempt to splice a snippet value which is currently invalid: words "
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked " to "
										inv !printnumber
											val K_unchecked par2
										inv !print
											val K_unchecked ".\n"
								inv !case
									val K_unchecked RTP_INCLUDEINVALIDSNIPPET
									code
										inv !print
											val K_unchecked "Attempt to match a snippet value which is currently invalid: words "
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked " to "
										inv !printnumber
											val K_unchecked par2
										inv !print
											val K_unchecked ".\n"
								inv !case
									val K_unchecked RTP_LISTWRITERMEMORY
									code
										inv !print
											val K_unchecked "The list-writer has run out of memory.\n"
								inv !case
									val K_unchecked RTP_CANTREMOVEPLAYER
									code
										inv !print
											val K_unchecked "Attempt to remove the player from play.\n"
								inv !case
									val K_unchecked RTP_CANTBEOFFSTAGE
									code
										inv !print
											val K_unchecked "Attempt to move the player off-stage.\n"
								inv !case
									val K_unchecked RTP_CANTREMOVEDOORS
									code
										inv !print
											val K_unchecked "Attempt to remove a door from play.\n"
								inv !case
									val K_unchecked RTP_CANTCHANGEOFFSTAGE
									code
										inv !print
											val K_unchecked "Attempt to change the player to a person off-stage.\n"
								inv !case
									val K_unchecked RTP_MSTACKMEMORY
									code
										inv !print
											val K_unchecked "The memory stack is exhausted.\n"
								inv !case
									val K_unchecked RTP_TYPECHECK
									code
										inv !print
											val K_unchecked "Phrase applied to an incompatible kind of value.\n"
								inv !case
									val K_unchecked RTP_FILEIOERROR
									code
										inv !print
											val K_unchecked "Error handling external file.\n"
								inv !case
									val K_unchecked RTP_HEAPERROR
									code
										inv !print
											val K_unchecked "Memory allocation proved impossible.\n"
								inv !case
									val K_unchecked RTP_LISTRANGEERROR
									code
										inv !print
											val K_unchecked "Attempt to use list item which does not exist.\n"
								inv !case
									val K_unchecked RTP_LISTSIZENEGATIVE
									code
										inv !print
											val K_unchecked "Attempt to resize list to "
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked " entries - there must "
										inv !print
											val K_unchecked "always be 0 or more.\n"
								inv !case
									val K_unchecked RTP_REGEXPSYNTAXERROR
									code
										inv !print
											val K_unchecked "Syntax error in regular expression.\n"
								inv !case
									val K_unchecked RTP_NOGLULXUNICODE
									code
										inv !print
											val K_unchecked "This interpreter does not support Unicode.\n"
								inv !case
									val K_unchecked RTP_BACKDROPONLY
									code
										inv !print
											val K_unchecked "Only backdrops can be moved to multiple places.\n"
								inv !case
									val K_unchecked RTP_NOTTHING
									code
										inv !print
											val K_unchecked "Tried to move "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked " (not a thing) to "
										inv !printdef
											val K_unchecked par2
										inv !print
											val K_unchecked ", but only things can move around.\n"
								inv !case
									val K_unchecked RTP_SCENEHASNTSTARTED
									code
										inv !print
											val K_unchecked "The scene "
										inv plug_00458
											val K_unchecked par1
										inv !print
											val K_unchecked " hasn't started, so you can't ask when it did.\n"
								inv !case
									val K_unchecked RTP_SCENEHASNTENDED
									code
										inv !print
											val K_unchecked "The scene "
										inv plug_00458
											val K_unchecked par1
										inv !print
											val K_unchecked " hasn't ended, so you can't ask when it did.\n"
								inv !case
									val K_unchecked RTP_NEGATIVEROOT
									code
										inv !print
											val K_unchecked "You can't take the square root of a negative number.\n"
								inv !case
									val K_unchecked RTP_CANTITERATE
									code
										inv !print
											val K_unchecked "You can't implicitly repeat through the values of this kind: "
										inv !print
											val K_unchecked "a problem arising from a description which started out here - \""
										inv !printstring
											val K_unchecked par1
										inv !print
											val K_unchecked "\".\n"
								inv !case
									val K_unchecked RTP_WRONGASSIGNEDKIND
									code
										inv !print
											val K_unchecked "Attempt to set a variable to the wrong kind of object: "
										inv !print
											val K_unchecked "you wrote '"
										inv !printstring
											val K_unchecked par2
										inv !print
											val K_unchecked "', which sets the value to "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked " - but that doesn't have the kind '"
										inv !printstring
											val K_unchecked par3
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_RELKINDVIOLATION
									code
										inv !print
											val K_unchecked "Tried to change a relation for objects with the wrong kinds: "
										inv !printstring
											inv RlnGetF
												val K_unchecked par3
												val K_unchecked RR_DESCRIPTION
										inv !print
											val K_unchecked ", but you tried to "
										inv !print
											val K_unchecked "relate (or unrelate) "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked " to "
										inv !printdef
											val K_unchecked par2
										inv !print
											val K_unchecked ".\n"
								inv !case
									val K_unchecked RTP_CANTMAKEPART
									code
										inv !print
											val K_unchecked "Tried to make the player part of something: "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked ".\n"
								inv !case
									val K_unchecked RTP_TEXTTOKENTOOHARD
									code
										inv !print
											val K_unchecked "This use of '[text]' is too complicated.\n"
								inv !case
									val K_unchecked RTP_RELATIONCHANGEIMPOSSIBLE
									code
										inv !print
											val K_unchecked "This change of the relation's nature is impossible in play.\n"
								inv !case
									val K_unchecked RTP_RELMINIMAL
									code
										inv !print
											val K_unchecked "This operation can't be done with the relation '"
										inv !printstring
											inv RlnGetF
												val K_unchecked par3
												val K_unchecked RR_DESCRIPTION
										inv !print
											val K_unchecked "'.\n"
								inv !case
									val K_unchecked RTP_REGIONSNOTADJACENT
									code
										inv !print
											val K_unchecked "You can't test whether something is adjacent to a region: "
										inv !print
											val K_unchecked "such as, in this case, "
										inv !printdef
											val K_unchecked par1
										inv !print
											val K_unchecked ".\n"
						inv !print
							val K_unchecked "\n"
				constant RunTimeProblemShow K_unchecked_function = RunTimeProblemShow_B __assimilated=1
			package RunTimeError_fn _function
				symbol public misc RunTimeError
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RunTimeError_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p1
					symbol private misc p2
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LOWLEVELERROR --> /main/template/constants/RTP_LOWLEVELERROR_con/RTP_LOWLEVELERROR
					local n K_unchecked
					local p1 K_unchecked
					local p2 K_unchecked
					code
						inv !print
							val K_unchecked "** Library error "
						inv !printnumber
							val K_unchecked n
						inv !print
							val K_unchecked " ("
						inv !printnumber
							val K_unchecked p1
						inv !print
							val K_unchecked ","
						inv !printnumber
							val K_unchecked p2
						inv !print
							val K_unchecked ") **\n"
						inv RunTimeProblem
							val K_unchecked RTP_LOWLEVELERROR
				constant RunTimeError K_unchecked_function = RunTimeError_B __assimilated=1
			package ArgumentTypeFailed_fn _function
				symbol public misc ArgumentTypeFailed
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ArgumentTypeFailed_B _code
					symbol private misc line
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc file
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TYPECHECK --> /main/template/constants/RTP_TYPECHECK_con/RTP_TYPECHECK
					local line K_unchecked
					local file K_unchecked
					code
						inv RunTimeProblem
							val K_unchecked RTP_TYPECHECK
							val K_unchecked 0
							val K_unchecked 0
							val K_unchecked 0
							val K_unchecked line
							val K_unchecked file
				constant ArgumentTypeFailed K_unchecked_function = ArgumentTypeFailed_B __assimilated=1
			package CheckKindReturned_fn _function
				symbol public misc CheckKindReturned
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CheckKindReturned_B _code
					symbol private misc V
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc K
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_DECIDEONNOTHING --> /main/template/constants/RTP_DECIDEONNOTHING_con/RTP_DECIDEONNOTHING
					symbol external misc RTP_DECIDEONWRONGKIND --> /main/template/constants/RTP_DECIDEONWRONGKIND_con/RTP_DECIDEONWRONGKIND
					local V K_unchecked
					local K K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked V
								val K_unchecked K
							code
								inv !return
									val K_unchecked V
						inv !ifelse
							inv !eq
								val K_unchecked V
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_DECIDEONNOTHING
							code
								inv RunTimeProblem
									val K_unchecked RTP_DECIDEONWRONGKIND
						inv !return
							val K_unchecked V
				constant CheckKindReturned K_unchecked_function = CheckKindReturned_B __assimilated=1
			package WhetherProvides_fn _function
				symbol public misc WhetherProvides
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WhetherProvides_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc either_or
					symbol private misc p
					symbol private misc issue_rtp
					symbol private misc off
					symbol private misc i
					symbol private misc textual
					symbol private misc a
					symbol private misc l
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Object --> /main/veneer/Object
					symbol external misc FBNA_PROP_NUMBER --> /main/veneer/FBNA_PROP_NUMBER
					symbol external misc attributed_property_offsets --> /main/template/arrays/attributed_property_offsets_arr/attributed_property_offsets
					symbol external misc valued_property_offsets --> /main/template/arrays/valued_property_offsets_arr/valued_property_offsets
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_BADPROPERTY --> /main/template/constants/RTP_BADPROPERTY_con/RTP_BADPROPERTY
					symbol external misc property_metadata --> /main/veneer/property_metadata
					symbol external misc ScanPropertyMetadata --> /main/template/functions/ScanPropertyMetadata_fn/ScanPropertyMetadata
					symbol private label .PermissionFound
					symbol external misc KD_Count --> /main/template/properties/KD_Count_prop/KD_Count
					symbol external misc KindHierarchy --> /main/veneer/KindHierarchy
					symbol external misc RTP_UNPROVIDED --> /main/template/constants/RTP_UNPROVIDED_con/RTP_UNPROVIDED
					symbol external misc RTP_UNSET --> /main/template/constants/RTP_UNSET_con/RTP_UNSET
					local obj K_unchecked
					local either_or K_unchecked
					local p K_unchecked
					local issue_rtp K_unchecked
					local off K_unchecked
					local i K_unchecked
					local textual K_unchecked
					local a K_unchecked
					local l K_unchecked
					code
						inv !if
							inv !ne
								inv metaclass
									val K_unchecked obj
								val K_unchecked Object
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !lt
								val K_unchecked p
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked p
									inv !bitwisenot
										val K_unchecked p
						inv !ifelse
							val K_unchecked either_or
							code
								inv !ifelse
									inv !lt
										val K_unchecked p
										val K_unchecked FBNA_PROP_NUMBER
									code
										inv !store
											reference
												val K_unchecked off
											inv !lookup
												val K_unchecked attributed_property_offsets
												val K_unchecked p
									code
										inv !store
											reference
												val K_unchecked off
											inv !lookup
												val K_unchecked valued_property_offsets
												val K_unchecked p
							code
								inv !store
									reference
										val K_unchecked off
									inv !lookup
										val K_unchecked valued_property_offsets
										val K_unchecked p
						inv !if
							inv !lt
								val K_unchecked off
								val K_unchecked 0
							code
								inv !if
									val K_unchecked issue_rtp
									code
										inv RunTimeProblem
											val K_unchecked RTP_BADPROPERTY
											val K_unchecked obj
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked textual
							inv !lookup
								val K_unchecked property_metadata
								val K_unchecked off
						inv !postincrement
							reference
								val K_unchecked off
						inv !if
							inv ScanPropertyMetadata
								val K_unchecked obj
								val K_unchecked off
							code
								inv !jump
									lab .PermissionFound
						inv !if
							inv !provides
								val K_unchecked obj
								val K_unchecked KD_Count
							code
								inv !store
									reference
										val K_unchecked l
									inv !propertyvalue
										val K_unchecked obj
										val K_unchecked KD_Count
								inv !while
									inv !gt
										val K_unchecked l
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked a
											inv !times
												val K_unchecked l
												val K_unchecked 2
										inv !if
											inv ScanPropertyMetadata
												inv !lookup
													val K_unchecked KindHierarchy
													val K_unchecked a
												val K_unchecked off
											code
												inv !jump
													lab .PermissionFound
										inv !store
											reference
												val K_unchecked l
											inv !lookup
												val K_unchecked KindHierarchy
												inv !plus
													val K_unchecked a
													val K_unchecked 1
						inv !if
							val K_unchecked issue_rtp
							code
								inv RunTimeProblem
									val K_unchecked RTP_UNPROVIDED
									val K_unchecked obj
									val K_unchecked textual
						inv !return
							val K_unchecked 0
						.PermissionFound
						inv !if
							val K_unchecked either_or
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !provides
								val K_unchecked obj
								val K_unchecked p
							code
								inv !return
									val K_unchecked 1
						inv !if
							val K_unchecked issue_rtp
							code
								inv RunTimeProblem
									val K_unchecked RTP_UNSET
									val K_unchecked obj
									val K_unchecked textual
						inv !return
							val K_unchecked 0
				constant WhetherProvides K_unchecked_function = WhetherProvides_B __assimilated=1
			package PrintPropertyName_fn _function
				symbol public misc PrintPropertyName
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintPropertyName_B _code
					symbol private misc p
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc off
					symbol private misc textual
					symbol external misc valued_property_offsets --> /main/template/arrays/valued_property_offsets_arr/valued_property_offsets
					symbol external misc property_metadata --> /main/veneer/property_metadata
					local p K_unchecked
					local off K_unchecked
					local textual K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked p
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked p
									inv !bitwisenot
										val K_unchecked p
						inv !store
							reference
								val K_unchecked off
							inv !lookup
								val K_unchecked valued_property_offsets
								val K_unchecked p
						inv !store
							reference
								val K_unchecked textual
							inv !lookup
								val K_unchecked property_metadata
								val K_unchecked off
						inv !printstring
							val K_unchecked textual
				constant PrintPropertyName K_unchecked_function = PrintPropertyName_B __assimilated=1
			package ScanPropertyMetadata_fn _function
				symbol public misc ScanPropertyMetadata
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScanPropertyMetadata_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc off
					symbol private misc i
					symbol external misc property_metadata --> /main/veneer/property_metadata
					local obj K_unchecked
					local off K_unchecked
					local i K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked off
							inv !ge
								inv !lookup
									val K_unchecked property_metadata
									val K_unchecked i
								val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										val K_unchecked obj
										inv !lookup
											val K_unchecked property_metadata
											val K_unchecked i
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ScanPropertyMetadata K_unchecked_function = ScanPropertyMetadata_B __assimilated=1
			package GetEitherOrProperty_fn _function
				symbol public misc GetEitherOrProperty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GetEitherOrProperty_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol external misc WhetherProvides --> /main/template/functions/WhetherProvides_fn/WhetherProvides
					symbol external misc FBNA_PROP_NUMBER --> /main/veneer/FBNA_PROP_NUMBER
					local o K_unchecked
					local p K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked o
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !lt
								val K_unchecked p
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked p
									inv !bitwisenot
										val K_unchecked p
						inv !if
							inv WhetherProvides
								val K_unchecked o
								val K_unchecked 1
								val K_unchecked p
								val K_unchecked 0
							code
								inv !if
									inv !lt
										val K_unchecked p
										val K_unchecked FBNA_PROP_NUMBER
									code
										inv !if
											inv !has
												val K_unchecked o
												val K_unchecked p
											code
												inv !return
													val K_unchecked 1
										inv !return
											val K_unchecked 0
								inv !if
									inv !and
										inv !provides
											val K_unchecked o
											val K_unchecked p
										inv !propertyvalue
											val K_unchecked o
											val K_unchecked p
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant GetEitherOrProperty K_unchecked_function = GetEitherOrProperty_B __assimilated=1
			package SetEitherOrProperty_fn _function
				symbol public misc SetEitherOrProperty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetEitherOrProperty_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol private misc negate
					symbol private misc adj
					symbol external misc WhetherProvides --> /main/template/functions/WhetherProvides_fn/WhetherProvides
					symbol external misc FBNA_PROP_NUMBER --> /main/veneer/FBNA_PROP_NUMBER
					local o K_unchecked
					local p K_unchecked
					local negate K_unchecked
					local adj K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked p
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked p
									inv !bitwisenot
										val K_unchecked p
								inv !store
									reference
										val K_unchecked negate
									inv !bitwisenot
										val K_unchecked negate
						inv !ifelse
							val K_unchecked adj
							code
								inv !indirect1
									val K_unchecked adj
									val K_unchecked o
							code
								inv !if
									inv WhetherProvides
										val K_unchecked o
										val K_unchecked 1
										val K_unchecked p
										val K_unchecked 1
									code
										inv !ifelse
											val K_unchecked negate
											code
												inv !ifelse
													inv !lt
														val K_unchecked p
														val K_unchecked FBNA_PROP_NUMBER
													code
														inv !take
															val K_unchecked o
															val K_unchecked p
													code
														inv !store
															reference
																inv !propertyvalue
																	val K_unchecked o
																	val K_unchecked p
															val K_unchecked 0
											code
												inv !ifelse
													inv !lt
														val K_unchecked p
														val K_unchecked FBNA_PROP_NUMBER
													code
														inv !give
															val K_unchecked o
															val K_unchecked p
													code
														inv !store
															reference
																inv !propertyvalue
																	val K_unchecked o
																	val K_unchecked p
															val K_unchecked 1
				constant SetEitherOrProperty K_unchecked_function = SetEitherOrProperty_B __assimilated=1
			package GProperty_fn _function
				symbol public misc GProperty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GProperty_B _code
					symbol private misc K
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc V
					symbol private misc pr
					symbol private misc obj
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc value_property_holders --> /main/veneer/value_property_holders
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_PROPOFNOTHING --> /main/template/constants/RTP_PROPOFNOTHING_con/RTP_PROPOFNOTHING
					symbol external misc door_to --> /main/template/properties/door_to_prop/door_to
					symbol external misc WhetherProvides --> /main/template/functions/WhetherProvides_fn/WhetherProvides
					symbol external misc plug_00459 --> /main/connectors/plug_00459
					symbol external misc value_range --> /main/veneer/value_range
					symbol external misc RTP_BADVALUEPROPERTY --> /main/template/constants/RTP_BADVALUEPROPERTY_con/RTP_BADVALUEPROPERTY
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					local K K_unchecked
					local V K_unchecked
					local pr K_unchecked
					local obj K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked K
								val K_unchecked plug_00340
							code
								inv !store
									reference
										val K_unchecked obj
									val K_unchecked V
							code
								inv !store
									reference
										val K_unchecked obj
									inv !lookup
										val K_unchecked value_property_holders
										val K_unchecked K
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_PROPOFNOTHING
									val K_unchecked obj
									val K_unchecked pr
								inv !return
									val K_unchecked 0
						inv !ifelse
							inv !provides
								val K_unchecked obj
								val K_unchecked pr
							code
								inv !if
									inv !eq
										val K_unchecked K
										val K_unchecked plug_00340
									code
										inv !if
											inv !eq
												val K_unchecked pr
												val K_unchecked door_to
											code
												inv !return
													inv !message0
														val K_unchecked obj
														val K_unchecked pr
										inv !if
											inv WhetherProvides
												val K_unchecked V
												val K_unchecked 0
												val K_unchecked pr
												val K_unchecked 1
											code
												inv !return
													inv !propertyvalue
														val K_unchecked obj
														val K_unchecked pr
										inv !return
											val K_unchecked 0
								inv !if
									inv !ofclass
										val K_unchecked obj
										val K_unchecked plug_00459
									code
										inv WhetherProvides
											val K_unchecked V
											val K_unchecked 0
											val K_unchecked pr
											val K_unchecked 1
								inv !if
									inv !or
										inv !lt
											val K_unchecked V
											val K_unchecked 1
										inv !gt
											val K_unchecked V
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked value_range
									code
										inv RunTimeProblem
											val K_unchecked RTP_BADVALUEPROPERTY
										inv !return
											val K_unchecked 0
								inv !return
									inv !lookup
										inv !propertyvalue
											val K_unchecked obj
											val K_unchecked pr
										inv !plus
											val K_unchecked V
											val K_unchecked COL_HSIZE
							code
								inv !if
									inv !ofclass
										val K_unchecked obj
										val K_unchecked plug_00459
									code
										inv WhetherProvides
											val K_unchecked V
											val K_unchecked 0
											val K_unchecked pr
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant GProperty K_unchecked_function = GProperty_B __assimilated=1
			package WriteGProperty_fn _function
				symbol public misc WriteGProperty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteGProperty_B _code
					symbol private misc K
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc V
					symbol private misc pr
					symbol private misc val
					symbol private misc obj
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc value_property_holders --> /main/veneer/value_property_holders
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_PROPOFNOTHING --> /main/template/constants/RTP_PROPOFNOTHING_con/RTP_PROPOFNOTHING
					symbol external misc WhetherProvides --> /main/template/functions/WhetherProvides_fn/WhetherProvides
					symbol external misc value_range --> /main/veneer/value_range
					symbol external misc RTP_BADVALUEPROPERTY --> /main/template/constants/RTP_BADVALUEPROPERTY_con/RTP_BADVALUEPROPERTY
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					local K K_unchecked
					local V K_unchecked
					local pr K_unchecked
					local val K_unchecked
					local obj K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked K
								val K_unchecked plug_00340
							code
								inv !store
									reference
										val K_unchecked obj
									val K_unchecked V
							code
								inv !store
									reference
										val K_unchecked obj
									inv !lookup
										val K_unchecked value_property_holders
										val K_unchecked K
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_PROPOFNOTHING
									val K_unchecked obj
									val K_unchecked pr
								inv !return
									val K_unchecked 0
						inv !ifelse
							inv !eq
								val K_unchecked K
								val K_unchecked plug_00340
							code
								inv !if
									inv WhetherProvides
										val K_unchecked V
										val K_unchecked 0
										val K_unchecked pr
										val K_unchecked 1
									code
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked pr
											val K_unchecked val
							code
								inv !if
									inv !or
										inv !lt
											val K_unchecked V
											val K_unchecked 1
										inv !gt
											val K_unchecked V
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked value_range
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_BADVALUEPROPERTY
								inv !if
									inv !provides
										val K_unchecked obj
										val K_unchecked pr
									code
										inv !store
											reference
												inv !lookup
													inv !propertyvalue
														val K_unchecked obj
														val K_unchecked pr
													inv !plus
														val K_unchecked V
														val K_unchecked COL_HSIZE
											val K_unchecked val
				constant WriteGProperty K_unchecked_function = WriteGProperty_B __assimilated=1
			package PROPERTY_TY_Say_fn _function
				symbol public misc PROPERTY_TY_Say
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PROPERTY_TY_Say_B _code
					symbol private misc v
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local v K_unchecked
					code
						inv !print
							val K_unchecked "property "
						inv !printnumber
							val K_unchecked v
				constant PROPERTY_TY_Say K_unchecked_function = PROPERTY_TY_Say_B __assimilated=1
			package RecordRuleOutcome_fn _function
				symbol public misc RecordRuleOutcome
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RecordRuleOutcome_B _code
					symbol private misc usage
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc rule1
					symbol private misc rule2
					symbol external misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
					symbol external misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
					symbol external misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					local usage K_unchecked
					local rule1 K_unchecked
					local rule2 K_unchecked
					code
						inv !if
							inv !and
								inv !eq
									inv !lookup
										val K_unchecked latest_rule_result
										val K_unchecked 0
									inv !alternative
										val K_unchecked RS_SUCCEEDS
										val K_unchecked RS_FAILS
								inv plug_00460
									inv !lookup
										val K_unchecked latest_rule_result
										val K_unchecked 1
							code
								inv BlkValueFree
									inv !lookup
										val K_unchecked latest_rule_result
										val K_unchecked 2
						inv !if
							inv !and
								inv !eq
									val K_unchecked usage
									inv !alternative
										val K_unchecked RS_SUCCEEDS
										val K_unchecked RS_FAILS
								inv plug_00460
									val K_unchecked rule1
							code
								inv !store
									reference
										val K_unchecked rule2
									inv BlkValueCopy
										inv BlkValueCreate
											val K_unchecked rule1
										val K_unchecked rule2
						inv !store
							reference
								inv !lookup
									val K_unchecked latest_rule_result
									val K_unchecked 0
							val K_unchecked usage
						inv !store
							reference
								inv !lookup
									val K_unchecked latest_rule_result
									val K_unchecked 1
							val K_unchecked rule1
						inv !store
							reference
								inv !lookup
									val K_unchecked latest_rule_result
									val K_unchecked 2
							val K_unchecked rule2
				constant RecordRuleOutcome K_unchecked_function = RecordRuleOutcome_B __assimilated=1
			package FollowRulebook_fn _function
				symbol public misc FollowRulebook
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FollowRulebook_B _code
					symbol private misc rulebook
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc parameter
					symbol private misc no_paragraph_skips
					symbol private misc rv
					symbol private misc ss
					symbol private misc spv
					symbol external misc plug_00350 --> /main/connectors/plug_00350
					symbol external misc Protect_I7_Arrays --> /main/template/arrays/Protect_I7_Arrays_arr/Protect_I7_Arrays
					symbol external misc plug_00461 --> /main/template/variables/parameter_object_var/parameter_object
					symbol external misc plug_00160 --> /main/template/variables/parameter_value_var/parameter_value
					symbol external misc plug_00462 --> /main/template/variables/debugging_rules_var/debugging_rules
					symbol external misc DebugRulebooks --> /main/template/functions/DebugRulebooks_fn/DebugRulebooks
					symbol external misc plug_00463 --> /main/template/variables/process_rulebook_count_var/process_rulebook_count
					symbol external misc plug_00464 --> /main/connectors/plug_00464
					symbol external misc plug_00368 --> /main/connectors/plug_00368
					symbol external misc plug_00369 --> /main/connectors/plug_00369
					symbol external misc ACTION_PROCESSING_RB --> /main/template/constants/ACTION_PROCESSING_RB_con/ACTION_PROCESSING_RB
					symbol external misc MStack_CreateRBVars --> /main/template/functions/MStack_CreateRBVars_fn/MStack_CreateRBVars
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc RulebookParBreak --> /main/template/functions/RulebookParBreak_fn/RulebookParBreak
					symbol external misc MStack_DestroyRBVars --> /main/template/functions/MStack_DestroyRBVars_fn/MStack_DestroyRBVars
					symbol external misc indirect --> /main/veneer/indirect
					symbol external misc plug_00352 --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
					symbol external misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
					symbol external misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
					symbol external misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
					symbol external misc RS_NEITHER --> /main/template/constants/RS_NEITHER_con/RS_NEITHER
					local rulebook K_unchecked
					local parameter K_unchecked
					local no_paragraph_skips K_unchecked
					local rv K_unchecked
					local ss K_unchecked
					local spv K_unchecked
					code
						inv !store
							reference
								val K_unchecked ss
							val K_unchecked plug_00350
						inv !if
							inv !or
								inv !ne
									inv !lookup
										val K_unchecked Protect_I7_Arrays
										val K_unchecked 0
									val K_unchecked 16339
								inv !ne
									inv !lookup
										val K_unchecked Protect_I7_Arrays
										val K_unchecked 1
									val K_unchecked 12345
							code
								inv !print
									val K_unchecked " *** Fatal programming error: I7 arrays corrupted ***\n\n"
								inv @quit
						inv !if
							val K_unchecked parameter
							code
								inv !store
									reference
										val K_unchecked plug_00350
									val K_unchecked parameter
								inv !store
									reference
										val K_unchecked parameter_object
									val K_unchecked parameter
						inv !store
							reference
								val K_unchecked spv
							val K_unchecked parameter_value
						inv !store
							reference
								val K_unchecked parameter_value
							val K_unchecked parameter
						inv !store
							reference
								val K_unchecked parameter
							val K_unchecked debugging_rules
						inv !if
							val K_unchecked debugging_rules
							code
								inv DebugRulebooks
									val K_unchecked rulebook
									val K_unchecked parameter
								inv !store
									reference
										val K_unchecked process_rulebook_count
									inv !plus
										val K_unchecked process_rulebook_count
										val K_unchecked debugging_rules
						inv !ifelse
							inv !and
								inv !ge
									val K_unchecked rulebook
									val K_unchecked 0
								inv !lt
									val K_unchecked rulebook
									val K_unchecked plug_00464
							code
								inv !store
									reference
										val K_unchecked rv
									inv !lookup
										val K_unchecked plug_00368
										val K_unchecked rulebook
								inv !ifelse
									inv !ne
										val K_unchecked rv
										val K_unchecked plug_00369
									code
										inv !if
											inv !ne
												val K_unchecked rulebook
												val K_unchecked ACTION_PROCESSING_RB
											code
												inv MStack_CreateRBVars
													val K_unchecked rulebook
										inv !if
											val K_unchecked say__p
											code
												inv RulebookParBreak
													val K_unchecked no_paragraph_skips
										inv !store
											reference
												val K_unchecked rv
											inv !indirect1
												val K_unchecked rv
												val K_unchecked no_paragraph_skips
										inv !if
											inv !ne
												val K_unchecked rulebook
												val K_unchecked ACTION_PROCESSING_RB
											code
												inv MStack_DestroyRBVars
													val K_unchecked rulebook
									code
										inv !store
											reference
												val K_unchecked rv
											val K_unchecked 0
							code
								inv !if
									val K_unchecked say__p
									code
										inv RulebookParBreak
											val K_unchecked no_paragraph_skips
								inv !store
									reference
										val K_unchecked rv
									inv indirect
										val K_unchecked rulebook
								inv !ifelse
									inv !eq
										val K_unchecked rv
										val K_unchecked 2
									code
										inv !store
											reference
												val K_unchecked rv
											val K_unchecked reason_the_action_failed
									code
										inv !if
											val K_unchecked rv
											code
												inv !store
													reference
														val K_unchecked rv
													val K_unchecked rulebook
						inv !ifelse
							val K_unchecked rv
							code
								inv !if
									val K_unchecked debugging_rules
									code
										inv !store
											reference
												val K_unchecked process_rulebook_count
											inv !minus
												val K_unchecked process_rulebook_count
												val K_unchecked debugging_rules
										inv !if
											inv !lt
												val K_unchecked process_rulebook_count
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked process_rulebook_count
													val K_unchecked 0
										inv !spaces
											inv !times
												val K_unchecked 2
												val K_unchecked process_rulebook_count
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked latest_rule_result
													val K_unchecked 0
												val K_unchecked RS_SUCCEEDS
											code
												inv !print
													val K_unchecked "[stopped: success]\n"
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked latest_rule_result
													val K_unchecked 0
												val K_unchecked RS_FAILS
											code
												inv !print
													val K_unchecked "[stopped: fail]\n"
							code
								inv !if
									val K_unchecked debugging_rules
									code
										inv !store
											reference
												val K_unchecked process_rulebook_count
											inv !minus
												val K_unchecked process_rulebook_count
												val K_unchecked debugging_rules
								inv !store
									reference
										inv !lookup
											val K_unchecked latest_rule_result
											val K_unchecked 0
									val K_unchecked RS_NEITHER
						inv !store
							reference
								val K_unchecked debugging_rules
							val K_unchecked parameter
						inv !store
							reference
								val K_unchecked plug_00350
							val K_unchecked ss
						inv !store
							reference
								val K_unchecked parameter_value
							val K_unchecked spv
						inv !return
							val K_unchecked rv
				constant FollowRulebook K_unchecked_function = FollowRulebook_B __assimilated=1
			package RulebookParBreak_fn _function
				symbol public misc RulebookParBreak
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulebookParBreak_B _code
					symbol private misc no_paragraph_skips
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc PARA_NORULEBOOKBREAKS --> /main/template/constants/PARA_NORULEBOOKBREAKS_con/PARA_NORULEBOOKBREAKS
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					local no_paragraph_skips K_unchecked
					code
						inv !if
							inv !and
								inv !eq
									val K_unchecked no_paragraph_skips
									val K_unchecked 0
								inv !eq
									inv !bitwiseand
										val K_unchecked say__pc
										val K_unchecked PARA_NORULEBOOKBREAKS
									val K_unchecked 0
							code
								inv DivideParagraphPoint
				constant RulebookParBreak K_unchecked_function = RulebookParBreak_B __assimilated=1
			package ActRulebookSucceeds_fn _function
				symbol public misc ActRulebookSucceeds
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActRulebookSucceeds_B _code
					symbol private misc rule_id
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00352 --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
					symbol external misc RulebookSucceeds --> /main/template/functions/RulebookSucceeds_fn/RulebookSucceeds
					local rule_id K_unchecked
					code
						inv !if
							val K_unchecked rule_id
							code
								inv !store
									reference
										val K_unchecked reason_the_action_failed
									val K_unchecked rule_id
						inv RulebookSucceeds
				constant ActRulebookSucceeds K_unchecked_function = ActRulebookSucceeds_B __assimilated=1
			package ActRulebookFails_fn _function
				symbol public misc ActRulebookFails
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActRulebookFails_B _code
					symbol private misc rule_id
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00352 --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
					symbol external misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
					local rule_id K_unchecked
					code
						inv !if
							val K_unchecked rule_id
							code
								inv !store
									reference
										val K_unchecked reason_the_action_failed
									val K_unchecked rule_id
						inv RulebookFails
				constant ActRulebookFails K_unchecked_function = ActRulebookFails_B __assimilated=1
			package RulebookSucceeds_fn _function
				symbol public misc RulebookSucceeds
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulebookSucceeds_B _code
					symbol private misc weak_kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc value
					symbol external misc RecordRuleOutcome --> /main/template/functions/RecordRuleOutcome_fn/RecordRuleOutcome
					symbol external misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
					local weak_kind K_unchecked
					local value K_unchecked
					code
						inv RecordRuleOutcome
							val K_unchecked RS_SUCCEEDS
							val K_unchecked weak_kind
							val K_unchecked value
				constant RulebookSucceeds K_unchecked_function = RulebookSucceeds_B __assimilated=1
			package RulebookFails_fn _function
				symbol public misc RulebookFails
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulebookFails_B _code
					symbol private misc weak_kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc value
					symbol external misc RecordRuleOutcome --> /main/template/functions/RecordRuleOutcome_fn/RecordRuleOutcome
					symbol external misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
					local weak_kind K_unchecked
					local value K_unchecked
					code
						inv RecordRuleOutcome
							val K_unchecked RS_FAILS
							val K_unchecked weak_kind
							val K_unchecked value
				constant RulebookFails K_unchecked_function = RulebookFails_B __assimilated=1
			package RuleHasNoOutcome_fn _function
				symbol public misc RuleHasNoOutcome
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RuleHasNoOutcome_B _code
					symbol external misc RecordRuleOutcome --> /main/template/functions/RecordRuleOutcome_fn/RecordRuleOutcome
					symbol external misc RS_NEITHER --> /main/template/constants/RS_NEITHER_con/RS_NEITHER
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv RecordRuleOutcome
							val K_unchecked RS_NEITHER
							val K_unchecked 0
							val K_unchecked 0
				constant RuleHasNoOutcome K_unchecked_function = RuleHasNoOutcome_B __assimilated=1
			package SetRulebookOutcome_fn _function
				symbol public misc SetRulebookOutcome
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetRulebookOutcome_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
					local a K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked latest_rule_result
									val K_unchecked 0
							val K_unchecked a
				constant SetRulebookOutcome K_unchecked_function = SetRulebookOutcome_B __assimilated=1
			package RulebookOutcome_fn _function
				symbol public misc RulebookOutcome
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulebookOutcome_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
					symbol external misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
					symbol external misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
					symbol external misc RS_NEITHER --> /main/template/constants/RS_NEITHER_con/RS_NEITHER
					local a K_unchecked
					code
						inv !store
							reference
								val K_unchecked a
							inv !lookup
								val K_unchecked latest_rule_result
								val K_unchecked 0
						inv !if
							inv !or
								inv !eq
									val K_unchecked a
									val K_unchecked RS_FAILS
								inv !eq
									val K_unchecked a
									val K_unchecked RS_SUCCEEDS
							code
								inv !return
									val K_unchecked a
						inv !return
							val K_unchecked RS_NEITHER
				constant RulebookOutcome K_unchecked_function = RulebookOutcome_B __assimilated=1
			package RulebookFailed_fn _function
				symbol public misc RulebookFailed
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulebookFailed_B _code
					symbol external misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
					code
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked latest_rule_result
									val K_unchecked 0
								val K_unchecked RS_FAILS
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant RulebookFailed K_unchecked_function = RulebookFailed_B __assimilated=1
			package RulebookSucceeded_fn _function
				symbol public misc RulebookSucceeded
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulebookSucceeded_B _code
					symbol external misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
					code
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked latest_rule_result
									val K_unchecked 0
								val K_unchecked RS_SUCCEEDS
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant RulebookSucceeded K_unchecked_function = RulebookSucceeded_B __assimilated=1
			package ResultOfRule_fn _function
				symbol public misc ResultOfRule
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ResultOfRule_B _code
					symbol private misc RB
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc V
					symbol private misc F
					symbol private misc K
					symbol private misc a
					symbol external misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
					symbol external misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
					symbol external misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
					symbol external misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
					symbol external misc plug_00465 --> /main/connectors/plug_00465
					local RB K_unchecked
					local V K_unchecked
					local F K_unchecked
					local K K_unchecked
					local a K_unchecked
					code
						inv !if
							val K_unchecked RB
							code
								inv FollowRulebook
									val K_unchecked RB
									val K_unchecked V
									val K_unchecked F
						inv !store
							reference
								val K_unchecked a
							inv !lookup
								val K_unchecked latest_rule_result
								val K_unchecked 0
						inv !if
							inv !or
								inv !eq
									val K_unchecked a
									val K_unchecked RS_FAILS
								inv !eq
									val K_unchecked a
									val K_unchecked RS_SUCCEEDS
							code
								inv !store
									reference
										val K_unchecked a
									inv !lookup
										val K_unchecked latest_rule_result
										val K_unchecked 1
								inv !if
									val K_unchecked a
									code
										inv !return
											inv !lookup
												val K_unchecked latest_rule_result
												val K_unchecked 2
						inv !if
							val K_unchecked K
							code
								inv !return
									inv plug_00465
										val K_unchecked K
						inv !return
							val K_unchecked 0
				constant ResultOfRule K_unchecked_function = ResultOfRule_B __assimilated=1
			package RULEBOOK_TY_to_RULE_TY_fn _function
				symbol public misc RULEBOOK_TY_to_RULE_TY
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RULEBOOK_TY_to_RULE_TY_B _code
					symbol private misc r
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local r K_unchecked
					code
						inv !return
							val K_unchecked r
				constant RULEBOOK_TY_to_RULE_TY K_unchecked_function = RULEBOOK_TY_to_RULE_TY_B __assimilated=1
			package DebugRulebooks_fn _function
				symbol public misc DebugRulebooks
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DebugRulebooks_B _code
					symbol private misc subs
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc parameter
					symbol private misc i
					symbol external misc plug_00463 --> /main/template/variables/process_rulebook_count_var/process_rulebook_count
					symbol external misc plug_00466 --> /main/connectors/plug_00466
					local subs K_unchecked
					local parameter K_unchecked
					local i K_unchecked
					code
						inv !spaces
							inv !times
								val K_unchecked 2
								val K_unchecked process_rulebook_count
						inv !print
							val K_unchecked "["
						inv plug_00466
							val K_unchecked subs
						inv !if
							val K_unchecked parameter
							code
								inv !print
									val K_unchecked " / on O"
								inv !printnumber
									val K_unchecked parameter
						inv !print
							val K_unchecked "]\n"
				constant DebugRulebooks K_unchecked_function = DebugRulebooks_B __assimilated=1
			package DB_Rule_fn _function
				symbol public misc DB_Rule
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DB_Rule_B _code
					symbol private misc R
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc N
					symbol private misc blocked
					symbol external misc plug_00466 --> /main/connectors/plug_00466
					local R K_unchecked
					local N K_unchecked
					local blocked K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked R
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !print
							val K_unchecked "[Rule \""
						inv plug_00466
							val K_unchecked R
						inv !print
							val K_unchecked "\" "
						inv !if
							inv !eq
								val K_unchecked blocked
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "applies.]"
						inv !print
							val K_unchecked "does not apply (wrong "
						inv !if
							inv !eq
								val K_unchecked blocked
								val K_unchecked 1
							code
								inv !print
									val K_unchecked "scene"
						inv !if
							inv !eq
								val K_unchecked blocked
								val K_unchecked 2
							code
								inv !print
									val K_unchecked "action"
						inv !if
							inv !eq
								val K_unchecked blocked
								val K_unchecked 3
							code
								inv !print
									val K_unchecked "actor"
						inv !if
							inv !eq
								val K_unchecked blocked
								val K_unchecked 4
							code
								inv !print
									val K_unchecked "context"
						inv !print
							val K_unchecked ").]\n"
				constant DB_Rule K_unchecked_function = DB_Rule_B __assimilated=1
			package SetSortDomain_fn _function
				symbol public misc SetSortDomain
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetSortDomain_B _code
					symbol private misc swapf
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc compf
					symbol external misc plug_00468 --> /main/template/variables/I7S_Swap_var/I7S_Swap
					symbol external misc plug_00469 --> /main/template/variables/I7S_Comp_var/I7S_Comp
					local swapf K_unchecked
					local compf K_unchecked
					code
						inv !store
							reference
								val K_unchecked I7S_Swap
							val K_unchecked swapf
						inv !store
							reference
								val K_unchecked I7S_Comp
							val K_unchecked compf
				constant SetSortDomain K_unchecked_function = SetSortDomain_B __assimilated=1
			package SortArray_fn _function
				symbol public misc SortArray
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SortArray_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc dir
					symbol private misc size
					symbol private misc test_flag
					symbol private misc algorithm
					symbol external misc plug_00470 --> /main/template/variables/I7S_Tab_var/I7S_Tab
					symbol external misc plug_00471 --> /main/template/variables/I7S_Col_var/I7S_Col
					symbol external misc plug_00472 --> /main/template/variables/I7S_Dir_var/I7S_Dir
					symbol external misc SortRange --> /main/template/functions/SortRange_fn/SortRange
					local tab K_unchecked
					local col K_unchecked
					local dir K_unchecked
					local size K_unchecked
					local test_flag K_unchecked
					local algorithm K_unchecked
					code
						inv !store
							reference
								val K_unchecked I7S_Tab
							val K_unchecked tab
						inv !store
							reference
								val K_unchecked I7S_Col
							val K_unchecked col
						inv !store
							reference
								val K_unchecked I7S_Dir
							val K_unchecked dir
						inv SortRange
							val K_unchecked 0
							val K_unchecked size
							val K_unchecked algorithm
				constant SortArray K_unchecked_function = SortArray_B __assimilated=1
			package SortRange_fn _function
				symbol public misc SortRange
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SortRange_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol private misc algorithm
					symbol external misc InPlaceMergeSortAlgorithm --> /main/template/functions/InPlaceMergeSortAlgorithm_fn/InPlaceMergeSortAlgorithm
					local x K_unchecked
					local y K_unchecked
					local algorithm K_unchecked
					code
						inv !if
							inv !lt
								inv !minus
									val K_unchecked y
									val K_unchecked x
								val K_unchecked 2
							code
								inv !return
									val K_unchecked 1
						inv !ifelse
							val K_unchecked algorithm
							code
								inv !indirect2
									val K_unchecked algorithm
									val K_unchecked x
									val K_unchecked y
							code
								inv InPlaceMergeSortAlgorithm
									val K_unchecked x
									val K_unchecked y
				constant SortRange K_unchecked_function = SortRange_B __assimilated=1
			package CompareFields_fn _function
				symbol public misc CompareFields
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CompareFields_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol external misc plug_00472 --> /main/template/variables/I7S_Dir_var/I7S_Dir
					symbol external misc plug_00469 --> /main/template/variables/I7S_Comp_var/I7S_Comp
					symbol external misc plug_00470 --> /main/template/variables/I7S_Tab_var/I7S_Tab
					symbol external misc plug_00471 --> /main/template/variables/I7S_Col_var/I7S_Col
					local x K_unchecked
					local y K_unchecked
					code
						inv !return
							inv !times
								val K_unchecked I7S_Dir
								inv I7S_Comp
									val K_unchecked I7S_Tab
									val K_unchecked I7S_Col
									inv !plus
										val K_unchecked x
										val K_unchecked 1
									inv !plus
										val K_unchecked y
										val K_unchecked 1
									val K_unchecked I7S_Dir
				constant CompareFields K_unchecked_function = CompareFields_B __assimilated=1
			package ExchangeFields_fn _function
				symbol public misc ExchangeFields
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ExchangeFields_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol private misc r
					symbol external misc plug_00468 --> /main/template/variables/I7S_Swap_var/I7S_Swap
					symbol external misc plug_00470 --> /main/template/variables/I7S_Tab_var/I7S_Tab
					local x K_unchecked
					local y K_unchecked
					local r K_unchecked
					code
						inv !store
							reference
								val K_unchecked r
							inv I7S_Swap
								val K_unchecked I7S_Tab
								inv !plus
									val K_unchecked x
									val K_unchecked 1
								inv !plus
									val K_unchecked y
									val K_unchecked 1
						inv !return
							val K_unchecked r
				constant ExchangeFields K_unchecked_function = ExchangeFields_B __assimilated=1
			package OldSortAlgorithm_fn _function
				symbol public misc OldSortAlgorithm
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package OldSortAlgorithm_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc y
					symbol private misc f
					symbol private misc i
					symbol private misc j
					symbol external misc CompareFields --> /main/template/functions/CompareFields_fn/CompareFields
					symbol external misc ExchangeFields --> /main/template/functions/ExchangeFields_fn/ExchangeFields
					local x K_unchecked
					local y K_unchecked
					local f K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !if
							inv !lt
								inv !minus
									val K_unchecked y
									val K_unchecked x
								val K_unchecked 2
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked f
							val K_unchecked 1
						inv !while
							val K_unchecked f
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked x
									inv !lt
										val K_unchecked i
										val K_unchecked y
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !for
											inv !store
												reference
													val K_unchecked j
												inv !plus
													val K_unchecked i
													val K_unchecked 1
											inv !lt
												val K_unchecked j
												val K_unchecked y
											inv !postincrement
												reference
													val K_unchecked j
											code
												inv !if
													inv !gt
														inv CompareFields
															val K_unchecked i
															val K_unchecked j
														val K_unchecked 0
													code
														inv ExchangeFields
															val K_unchecked i
															val K_unchecked j
														inv !store
															reference
																val K_unchecked f
															val K_unchecked 1
														inv !break
				constant OldSortAlgorithm K_unchecked_function = OldSortAlgorithm_B __assimilated=1
			package InsertionSortAlgorithm_fn _function
				symbol public misc InsertionSortAlgorithm
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package InsertionSortAlgorithm_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc i
					symbol private misc j
					symbol external misc CompareFields --> /main/template/functions/CompareFields_fn/CompareFields
					symbol external misc ExchangeFields --> /main/template/functions/ExchangeFields_fn/ExchangeFields
					local from K_unchecked
					local to K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !if
							inv !gt
								val K_unchecked to
								inv !plus
									val K_unchecked from
									val K_unchecked 1
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										inv !plus
											val K_unchecked from
											val K_unchecked 1
									inv !lt
										val K_unchecked i
										val K_unchecked to
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !for
											inv !store
												reference
													val K_unchecked j
												val K_unchecked i
											inv !gt
												val K_unchecked j
												val K_unchecked from
											inv !postdecrement
												reference
													val K_unchecked j
											code
												inv !ifelse
													inv !lt
														inv CompareFields
															val K_unchecked j
															inv !minus
																val K_unchecked j
																val K_unchecked 1
														val K_unchecked 0
													code
														inv ExchangeFields
															val K_unchecked j
															inv !minus
																val K_unchecked j
																val K_unchecked 1
													code
														inv !break
				constant InsertionSortAlgorithm K_unchecked_function = InsertionSortAlgorithm_B __assimilated=1
			package InPlaceMergeSortAlgorithm_fn _function
				symbol public misc InPlaceMergeSortAlgorithm
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package InPlaceMergeSortAlgorithm_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc middle
					symbol external misc InsertionSortAlgorithm --> /main/template/functions/InsertionSortAlgorithm_fn/InsertionSortAlgorithm
					symbol external misc InPlaceMergeSortAlgorithm --> /main/template/functions/InPlaceMergeSortAlgorithm_fn/InPlaceMergeSortAlgorithm
					symbol external misc IPMS_Merge --> /main/template/functions/IPMS_Merge_fn/IPMS_Merge
					local from K_unchecked
					local to K_unchecked
					local middle K_unchecked
					code
						inv !if
							inv !lt
								inv !minus
									val K_unchecked to
									val K_unchecked from
								val K_unchecked 12
							code
								inv !if
									inv !lt
										inv !minus
											val K_unchecked to
											val K_unchecked from
										val K_unchecked 2
									code
										inv !return
											val K_unchecked 1
								inv InsertionSortAlgorithm
									val K_unchecked from
									val K_unchecked to
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked middle
							inv !divide
								inv !plus
									val K_unchecked from
									val K_unchecked to
								val K_unchecked 2
						inv InPlaceMergeSortAlgorithm
							val K_unchecked from
							val K_unchecked middle
						inv InPlaceMergeSortAlgorithm
							val K_unchecked middle
							val K_unchecked to
						inv IPMS_Merge
							val K_unchecked from
							val K_unchecked middle
							val K_unchecked to
							inv !minus
								val K_unchecked middle
								val K_unchecked from
							inv !minus
								val K_unchecked to
								val K_unchecked middle
				constant InPlaceMergeSortAlgorithm K_unchecked_function = InPlaceMergeSortAlgorithm_B __assimilated=1
			package IPMS_Lower_fn _function
				symbol public misc IPMS_Lower
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IPMS_Lower_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc val
					symbol private misc len
					symbol private misc half
					symbol private misc mid
					symbol external misc CompareFields --> /main/template/functions/CompareFields_fn/CompareFields
					local from K_unchecked
					local to K_unchecked
					local val K_unchecked
					local len K_unchecked
					local half K_unchecked
					local mid K_unchecked
					code
						inv !store
							reference
								val K_unchecked len
							inv !minus
								val K_unchecked to
								val K_unchecked from
						inv !while
							inv !gt
								val K_unchecked len
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked half
									inv !divide
										val K_unchecked len
										val K_unchecked 2
								inv !store
									reference
										val K_unchecked mid
									inv !plus
										val K_unchecked from
										val K_unchecked half
								inv !ifelse
									inv !lt
										inv CompareFields
											val K_unchecked mid
											val K_unchecked val
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked from
											inv !plus
												val K_unchecked mid
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked len
											inv !minus
												inv !minus
													val K_unchecked len
													val K_unchecked half
												val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked len
											val K_unchecked half
						inv !return
							val K_unchecked from
				constant IPMS_Lower K_unchecked_function = IPMS_Lower_B __assimilated=1
			package IPMS_Upper_fn _function
				symbol public misc IPMS_Upper
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IPMS_Upper_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc val
					symbol private misc len
					symbol private misc half
					symbol private misc mid
					symbol external misc CompareFields --> /main/template/functions/CompareFields_fn/CompareFields
					local from K_unchecked
					local to K_unchecked
					local val K_unchecked
					local len K_unchecked
					local half K_unchecked
					local mid K_unchecked
					code
						inv !store
							reference
								val K_unchecked len
							inv !minus
								val K_unchecked to
								val K_unchecked from
						inv !while
							inv !gt
								val K_unchecked len
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked half
									inv !divide
										val K_unchecked len
										val K_unchecked 2
								inv !store
									reference
										val K_unchecked mid
									inv !plus
										val K_unchecked from
										val K_unchecked half
								inv !ifelse
									inv !lt
										inv CompareFields
											val K_unchecked val
											val K_unchecked mid
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked len
											val K_unchecked half
									code
										inv !store
											reference
												val K_unchecked from
											inv !plus
												val K_unchecked mid
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked len
											inv !minus
												inv !minus
													val K_unchecked len
													val K_unchecked half
												val K_unchecked 1
						inv !return
							val K_unchecked from
				constant IPMS_Upper K_unchecked_function = IPMS_Upper_B __assimilated=1
			package IPMS_Reverse_fn _function
				symbol public misc IPMS_Reverse
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IPMS_Reverse_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol external misc ExchangeFields --> /main/template/functions/ExchangeFields_fn/ExchangeFields
					local from K_unchecked
					local to K_unchecked
					code
						inv !while
							inv !lt
								val K_unchecked from
								val K_unchecked to
							code
								inv ExchangeFields
									inv !postincrement
										reference
											val K_unchecked from
									inv !postdecrement
										reference
											val K_unchecked to
				constant IPMS_Reverse K_unchecked_function = IPMS_Reverse_B __assimilated=1
			package IPMS_Rotate_fn _function
				symbol public misc IPMS_Rotate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IPMS_Rotate_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc mid
					symbol private misc to
					symbol private misc n
					symbol private misc val
					symbol private misc shift
					symbol private misc p1
					symbol private misc p2
					symbol external misc IPMS_Reverse --> /main/template/functions/IPMS_Reverse_fn/IPMS_Reverse
					local from K_unchecked
					local mid K_unchecked
					local to K_unchecked
					local n K_unchecked
					local val K_unchecked
					local shift K_unchecked
					local p1 K_unchecked
					local p2 K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked from
									val K_unchecked mid
								inv !eq
									val K_unchecked mid
									val K_unchecked to
							code
								inv !return
									val K_unchecked 1
						inv IPMS_Reverse
							val K_unchecked from
							inv !minus
								val K_unchecked mid
								val K_unchecked 1
						inv IPMS_Reverse
							val K_unchecked mid
							inv !minus
								val K_unchecked to
								val K_unchecked 1
						inv IPMS_Reverse
							val K_unchecked from
							inv !minus
								val K_unchecked to
								val K_unchecked 1
				constant IPMS_Rotate K_unchecked_function = IPMS_Rotate_B __assimilated=1
			package IPMS_Merge_fn _function
				symbol public misc IPMS_Merge
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IPMS_Merge_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc pivot
					symbol private misc to
					symbol private misc len1
					symbol private misc len2
					symbol private misc first_cut
					symbol private misc second_cut
					symbol private misc len11
					symbol private misc len22
					symbol private misc new_mid
					symbol external misc CompareFields --> /main/template/functions/CompareFields_fn/CompareFields
					symbol external misc ExchangeFields --> /main/template/functions/ExchangeFields_fn/ExchangeFields
					symbol external misc IPMS_Lower --> /main/template/functions/IPMS_Lower_fn/IPMS_Lower
					symbol external misc IPMS_Upper --> /main/template/functions/IPMS_Upper_fn/IPMS_Upper
					symbol external misc IPMS_Rotate --> /main/template/functions/IPMS_Rotate_fn/IPMS_Rotate
					symbol external misc IPMS_Merge --> /main/template/functions/IPMS_Merge_fn/IPMS_Merge
					local from K_unchecked
					local pivot K_unchecked
					local to K_unchecked
					local len1 K_unchecked
					local len2 K_unchecked
					local first_cut K_unchecked
					local second_cut K_unchecked
					local len11 K_unchecked
					local len22 K_unchecked
					local new_mid K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked len1
									val K_unchecked 0
								inv !eq
									val K_unchecked len2
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								inv !plus
									val K_unchecked len1
									val K_unchecked len2
								val K_unchecked 2
							code
								inv !if
									inv !lt
										inv CompareFields
											val K_unchecked pivot
											val K_unchecked from
										val K_unchecked 0
									code
										inv ExchangeFields
											val K_unchecked pivot
											val K_unchecked from
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !gt
								val K_unchecked len1
								val K_unchecked len2
							code
								inv !store
									reference
										val K_unchecked len11
									inv !divide
										val K_unchecked len1
										val K_unchecked 2
								inv !store
									reference
										val K_unchecked first_cut
									inv !plus
										val K_unchecked from
										val K_unchecked len11
								inv !store
									reference
										val K_unchecked second_cut
									inv IPMS_Lower
										val K_unchecked pivot
										val K_unchecked to
										val K_unchecked first_cut
								inv !store
									reference
										val K_unchecked len22
									inv !minus
										val K_unchecked second_cut
										val K_unchecked pivot
							code
								inv !store
									reference
										val K_unchecked len22
									inv !divide
										val K_unchecked len2
										val K_unchecked 2
								inv !store
									reference
										val K_unchecked second_cut
									inv !plus
										val K_unchecked pivot
										val K_unchecked len22
								inv !store
									reference
										val K_unchecked first_cut
									inv IPMS_Upper
										val K_unchecked from
										val K_unchecked pivot
										val K_unchecked second_cut
								inv !store
									reference
										val K_unchecked len11
									inv !minus
										val K_unchecked first_cut
										val K_unchecked from
						inv IPMS_Rotate
							val K_unchecked first_cut
							val K_unchecked pivot
							val K_unchecked second_cut
						inv !store
							reference
								val K_unchecked new_mid
							inv !plus
								val K_unchecked first_cut
								val K_unchecked len22
						inv IPMS_Merge
							val K_unchecked from
							val K_unchecked first_cut
							val K_unchecked new_mid
							val K_unchecked len11
							val K_unchecked len22
						inv IPMS_Merge
							val K_unchecked new_mid
							val K_unchecked second_cut
							val K_unchecked to
							inv !minus
								val K_unchecked len1
								val K_unchecked len11
							inv !minus
								val K_unchecked len2
								val K_unchecked len22
				constant IPMS_Merge K_unchecked_function = IPMS_Merge_B __assimilated=1
			package TableFindCol_fn _function
				symbol public misc TableFindCol
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableFindCol_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc f
					symbol private misc i
					symbol private misc no_cols
					symbol private misc n
					symbol external misc TB_COLUMN_NUMBER --> /main/template/constants/TB_COLUMN_NUMBER_con/TB_COLUMN_NUMBER
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOCOL --> /main/template/constants/RTP_TABLE_NOCOL_con/RTP_TABLE_NOCOL
					local tab K_unchecked
					local col K_unchecked
					local f K_unchecked
					local i K_unchecked
					local no_cols K_unchecked
					local n K_unchecked
					code
						inv !store
							reference
								val K_unchecked no_cols
							inv !lookup
								val K_unchecked tab
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked no_cols
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !eq
										val K_unchecked col
										inv !bitwiseand
											inv !lookup
												inv !lookup
													val K_unchecked tab
													val K_unchecked i
												val K_unchecked 1
											val K_unchecked TB_COLUMN_NUMBER
									code
										inv !return
											val K_unchecked i
						inv !if
							val K_unchecked f
							code
								inv RunTimeProblem
									val K_unchecked RTP_TABLE_NOCOL
									val K_unchecked tab
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 0
				constant TableFindCol K_unchecked_function = TableFindCol_B __assimilated=1
			package TableRows_fn _function
				symbol public misc TableRows
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableRows_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc first_col
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					local tab K_unchecked
					local first_col K_unchecked
					code
						inv !store
							reference
								val K_unchecked first_col
							inv !lookup
								val K_unchecked tab
								val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked first_col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							inv !minus
								inv !lookup
									val K_unchecked first_col
									val K_unchecked 0
								val K_unchecked COL_HSIZE
				constant TableRows K_unchecked_function = TableRows_B __assimilated=1
			package CheckTableEntryIsBlank_fn _function
				symbol public misc CheckTableEntryIsBlank
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CheckTableEntryIsBlank_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc row
					symbol private misc i
					symbol private misc at
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc TB_COLUMN_NOBLANKBITS --> /main/template/constants/TB_COLUMN_NOBLANKBITS_con/TB_COLUMN_NOBLANKBITS
					symbol external misc plug_00473 --> /main/connectors/plug_00473
					symbol external misc CheckTableEntryIsBlank_LU --> /main/template/arrays/CheckTableEntryIsBlank_LU_arr/CheckTableEntryIsBlank_LU
					local tab K_unchecked
					local col K_unchecked
					local row K_unchecked
					local i K_unchecked
					local at K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
						inv !if
							inv !eq
								val K_unchecked col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !ne
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									inv !plus
										val K_unchecked row
										val K_unchecked COL_HSIZE
								val K_unchecked TABLE_NOVALUE
							code
								inv !print
									val K_unchecked "*** CTEIB on nonblank value "
								inv !printnumber
									val K_unchecked tab
								inv !print
									val K_unchecked " "
								inv !printnumber
									val K_unchecked col
								inv !print
									val K_unchecked " "
								inv !printnumber
									val K_unchecked row
								inv !print
									val K_unchecked " ***\n"
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 1
								val K_unchecked TB_COLUMN_NOBLANKBITS
							code
								inv !return
									val K_unchecked 1
						inv !postdecrement
							reference
								val K_unchecked row
						inv !store
							reference
								val K_unchecked at
							inv !plus
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 2
								inv !divide
									val K_unchecked row
									val K_unchecked 8
						inv !if
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at
								inv !lookupbyte
									val K_unchecked CheckTableEntryIsBlank_LU
									inv !modulo
										val K_unchecked row
										val K_unchecked 8
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CheckTableEntryIsBlank K_unchecked_function = CheckTableEntryIsBlank_B __assimilated=1
			package ForceTableEntryBlank_fn _function
				symbol public misc ForceTableEntryBlank
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ForceTableEntryBlank_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc row
					symbol private misc i
					symbol private misc at
					symbol private misc oldv
					symbol private misc flags
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc TB_COLUMN_NOBLANKBITS --> /main/template/constants/TB_COLUMN_NOBLANKBITS_con/TB_COLUMN_NOBLANKBITS
					symbol external misc plug_00473 --> /main/connectors/plug_00473
					symbol external misc CheckTableEntryIsBlank_LU --> /main/template/arrays/CheckTableEntryIsBlank_LU_arr/CheckTableEntryIsBlank_LU
					local tab K_unchecked
					local col K_unchecked
					local row K_unchecked
					local i K_unchecked
					local at K_unchecked
					local oldv K_unchecked
					local flags K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
						inv !if
							inv !eq
								val K_unchecked col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked flags
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked oldv
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								inv !plus
									val K_unchecked row
									val K_unchecked COL_HSIZE
						inv !if
							inv !and
								inv !bitwiseand
									val K_unchecked flags
									val K_unchecked TB_COLUMN_ALLOCATED
								inv !ne
									val K_unchecked oldv
									inv !alternative
										val K_unchecked 0
										val K_unchecked TABLE_NOVALUE
							code
								inv BlkValueFree
									val K_unchecked oldv
						inv !store
							reference
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									inv !plus
										val K_unchecked row
										val K_unchecked COL_HSIZE
							val K_unchecked TABLE_NOVALUE
						inv !if
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked TB_COLUMN_NOBLANKBITS
							code
								inv !return
									val K_unchecked 1
						inv !postdecrement
							reference
								val K_unchecked row
						inv !store
							reference
								val K_unchecked at
							inv !plus
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 2
								inv !divide
									val K_unchecked row
									val K_unchecked 8
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at
							inv !bitwiseor
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at
								inv !lookupbyte
									val K_unchecked CheckTableEntryIsBlank_LU
									inv !modulo
										val K_unchecked row
										val K_unchecked 8
				constant ForceTableEntryBlank K_unchecked_function = ForceTableEntryBlank_B __assimilated=1
			package ForceTableEntryNonBlank_fn _function
				symbol public misc ForceTableEntryNonBlank
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ForceTableEntryNonBlank_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc row
					symbol private misc i
					symbol private misc at
					symbol private misc oldv
					symbol private misc flags
					symbol private misc tc
					symbol private misc kov
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TB_COLUMN_NOBLANKBITS --> /main/template/constants/TB_COLUMN_NOBLANKBITS_con/TB_COLUMN_NOBLANKBITS
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc plug_00192 --> /main/connectors/plug_00192
					symbol external misc TB_COLUMN_NUMBER --> /main/template/constants/TB_COLUMN_NUMBER_con/TB_COLUMN_NUMBER
					symbol external misc plug_00474 --> /main/connectors/plug_00474
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00473 --> /main/connectors/plug_00473
					symbol external misc CheckTableEntryIsNonBlank_LU --> /main/template/arrays/CheckTableEntryIsNonBlank_LU_arr/CheckTableEntryIsNonBlank_LU
					local tab K_unchecked
					local col K_unchecked
					local row K_unchecked
					local i K_unchecked
					local at K_unchecked
					local oldv K_unchecked
					local flags K_unchecked
					local tc K_unchecked
					local kov K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
						inv !if
							inv !eq
								val K_unchecked col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 1
								val K_unchecked TB_COLUMN_NOBLANKBITS
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked flags
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked oldv
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								inv !plus
									val K_unchecked row
									val K_unchecked COL_HSIZE
						inv !if
							inv !and
								inv !bitwiseand
									val K_unchecked flags
									val K_unchecked TB_COLUMN_ALLOCATED
								inv !eq
									val K_unchecked oldv
									inv !alternative
										val K_unchecked 0
										val K_unchecked TABLE_NOVALUE
							code
								inv !store
									reference
										val K_unchecked kov
									val K_unchecked plug_00192
								inv !store
									reference
										val K_unchecked tc
									inv !bitwiseand
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked col
											val K_unchecked 1
										val K_unchecked TB_COLUMN_NUMBER
								inv !store
									reference
										val K_unchecked kov
									inv plug_00474
										val K_unchecked tc
								inv !if
									inv !ne
										val K_unchecked kov
										val K_unchecked plug_00192
									code
										inv !store
											reference
												inv !lookup
													inv !lookup
														val K_unchecked tab
														val K_unchecked col
													inv !plus
														val K_unchecked row
														val K_unchecked COL_HSIZE
											inv BlkValueCreate
												val K_unchecked kov
						inv !postdecrement
							reference
								val K_unchecked row
						inv !store
							reference
								val K_unchecked at
							inv !plus
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 2
								inv !divide
									val K_unchecked row
									val K_unchecked 8
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at
								inv !lookupbyte
									val K_unchecked CheckTableEntryIsNonBlank_LU
									inv !modulo
										val K_unchecked row
										val K_unchecked 8
				constant ForceTableEntryNonBlank K_unchecked_function = ForceTableEntryNonBlank_B __assimilated=1
			package TableSwapBlankBits_fn _function
				symbol public misc TableSwapBlankBits
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableSwapBlankBits_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc row1
					symbol private misc row2
					symbol private misc col
					symbol private misc at1
					symbol private misc at2
					symbol private misc bit1
					symbol private misc bit2
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TB_COLUMN_NOBLANKBITS --> /main/template/constants/TB_COLUMN_NOBLANKBITS_con/TB_COLUMN_NOBLANKBITS
					symbol external misc plug_00473 --> /main/connectors/plug_00473
					symbol external misc CheckTableEntryIsBlank_LU --> /main/template/arrays/CheckTableEntryIsBlank_LU_arr/CheckTableEntryIsBlank_LU
					symbol external misc CheckTableEntryIsNonBlank_LU --> /main/template/arrays/CheckTableEntryIsNonBlank_LU_arr/CheckTableEntryIsNonBlank_LU
					local tab K_unchecked
					local row1 K_unchecked
					local row2 K_unchecked
					local col K_unchecked
					local at1 K_unchecked
					local at2 K_unchecked
					local bit1 K_unchecked
					local bit2 K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
						inv !if
							inv !eq
								val K_unchecked col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 1
								val K_unchecked TB_COLUMN_NOBLANKBITS
							code
								inv !return
									val K_unchecked 1
						inv !postdecrement
							reference
								val K_unchecked row1
						inv !store
							reference
								val K_unchecked at1
							inv !plus
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 2
								inv !divide
									val K_unchecked row1
									val K_unchecked 8
						inv !postdecrement
							reference
								val K_unchecked row2
						inv !store
							reference
								val K_unchecked at2
							inv !plus
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 2
								inv !divide
									val K_unchecked row2
									val K_unchecked 8
						inv !store
							reference
								val K_unchecked bit1
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at1
								inv !lookupbyte
									val K_unchecked CheckTableEntryIsBlank_LU
									inv !modulo
										val K_unchecked row1
										val K_unchecked 8
						inv !store
							reference
								val K_unchecked bit2
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at2
								inv !lookupbyte
									val K_unchecked CheckTableEntryIsBlank_LU
									inv !modulo
										val K_unchecked row2
										val K_unchecked 8
						inv !if
							val K_unchecked bit1
							code
								inv !store
									reference
										val K_unchecked bit1
									val K_unchecked 1
						inv !if
							val K_unchecked bit2
							code
								inv !store
									reference
										val K_unchecked bit2
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked bit1
								val K_unchecked bit2
							code
								inv !return
									val K_unchecked 1
						inv !ifelse
							val K_unchecked bit1
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at1
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at1
										inv !lookupbyte
											val K_unchecked CheckTableEntryIsNonBlank_LU
											inv !modulo
												val K_unchecked row1
												val K_unchecked 8
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at2
									inv !bitwiseor
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at2
										inv !lookupbyte
											val K_unchecked CheckTableEntryIsBlank_LU
											inv !modulo
												val K_unchecked row2
												val K_unchecked 8
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at1
									inv !bitwiseor
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at1
										inv !lookupbyte
											val K_unchecked CheckTableEntryIsBlank_LU
											inv !modulo
												val K_unchecked row1
												val K_unchecked 8
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at2
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at2
										inv !lookupbyte
											val K_unchecked CheckTableEntryIsNonBlank_LU
											inv !modulo
												val K_unchecked row2
												val K_unchecked 8
				constant TableSwapBlankBits K_unchecked_function = TableSwapBlankBits_B __assimilated=1
			package TableMoveBlankBitsDown_fn _function
				symbol public misc TableMoveBlankBitsDown
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableMoveBlankBitsDown_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc row1
					symbol private misc row2
					symbol private misc col
					symbol private misc at
					symbol private misc atp1
					symbol private misc bit
					symbol private misc rx
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TB_COLUMN_NOBLANKBITS --> /main/template/constants/TB_COLUMN_NOBLANKBITS_con/TB_COLUMN_NOBLANKBITS
					symbol external misc plug_00473 --> /main/connectors/plug_00473
					symbol external misc CheckTableEntryIsBlank_LU --> /main/template/arrays/CheckTableEntryIsBlank_LU_arr/CheckTableEntryIsBlank_LU
					symbol external misc CheckTableEntryIsNonBlank_LU --> /main/template/arrays/CheckTableEntryIsNonBlank_LU_arr/CheckTableEntryIsNonBlank_LU
					local tab K_unchecked
					local row1 K_unchecked
					local row2 K_unchecked
					local col K_unchecked
					local at K_unchecked
					local atp1 K_unchecked
					local bit K_unchecked
					local rx K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
						inv !if
							inv !eq
								val K_unchecked col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 1
								val K_unchecked TB_COLUMN_NOBLANKBITS
							code
								inv !return
									val K_unchecked 1
						inv !postdecrement
							reference
								val K_unchecked row1
						inv !postdecrement
							reference
								val K_unchecked row2
						inv !store
							reference
								val K_unchecked at
							inv !plus
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 2
								inv !divide
									val K_unchecked row1
									val K_unchecked 8
						inv !store
							reference
								val K_unchecked bit
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked plug_00473
									val K_unchecked at
								inv !lookupbyte
									val K_unchecked CheckTableEntryIsBlank_LU
									inv !modulo
										val K_unchecked row1
										val K_unchecked 8
						inv !if
							val K_unchecked bit
							code
								inv !store
									reference
										val K_unchecked bit
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked rx
								val K_unchecked row1
							inv !lt
								val K_unchecked rx
								val K_unchecked row2
							inv !postincrement
								reference
									val K_unchecked rx
							code
								inv !store
									reference
										val K_unchecked atp1
									inv !plus
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked col
											val K_unchecked 2
										inv !divide
											inv !plus
												val K_unchecked rx
												val K_unchecked 1
											val K_unchecked 8
								inv !store
									reference
										val K_unchecked at
									inv !plus
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked col
											val K_unchecked 2
										inv !divide
											val K_unchecked rx
											val K_unchecked 8
								inv !ifelse
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked atp1
										inv !lookupbyte
											val K_unchecked CheckTableEntryIsBlank_LU
											inv !modulo
												inv !plus
													val K_unchecked rx
													val K_unchecked 1
												val K_unchecked 8
									code
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked plug_00473
													val K_unchecked at
											inv !bitwiseor
												inv !lookupbyte
													val K_unchecked plug_00473
													val K_unchecked at
												inv !lookupbyte
													val K_unchecked CheckTableEntryIsBlank_LU
													inv !modulo
														val K_unchecked rx
														val K_unchecked 8
									code
										inv !store
											reference
												inv !lookupbyte
													val K_unchecked plug_00473
													val K_unchecked at
											inv !bitwiseand
												inv !lookupbyte
													val K_unchecked plug_00473
													val K_unchecked at
												inv !lookupbyte
													val K_unchecked CheckTableEntryIsNonBlank_LU
													inv !modulo
														val K_unchecked rx
														val K_unchecked 8
						inv !store
							reference
								val K_unchecked at
							inv !plus
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 2
								inv !divide
									val K_unchecked row2
									val K_unchecked 8
						inv !ifelse
							val K_unchecked bit
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at
									inv !bitwiseor
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at
										inv !lookupbyte
											val K_unchecked CheckTableEntryIsBlank_LU
											inv !modulo
												val K_unchecked row2
												val K_unchecked 8
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked plug_00473
											val K_unchecked at
										inv !lookupbyte
											val K_unchecked CheckTableEntryIsNonBlank_LU
											inv !modulo
												val K_unchecked row2
												val K_unchecked 8
				constant TableMoveBlankBitsDown K_unchecked_function = TableMoveBlankBitsDown_B __assimilated=1
			package TableRowCorr_fn _function
				symbol public misc TableRowCorr
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableRowCorr_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc lookup_value
					symbol private misc lookup_col
					symbol private misc i
					symbol private misc j
					symbol private misc f
					symbol private misc v
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOCORR --> /main/template/constants/RTP_TABLE_NOCORR_con/RTP_TABLE_NOCORR
					local tab K_unchecked
					local col K_unchecked
					local lookup_value K_unchecked
					local lookup_col K_unchecked
					local i K_unchecked
					local j K_unchecked
					local f K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked lookup_col
							inv !lookup
								val K_unchecked tab
								val K_unchecked col
						inv !store
							reference
								val K_unchecked j
							inv !minus
								inv !lookup
									val K_unchecked lookup_col
									val K_unchecked 0
								val K_unchecked COL_HSIZE
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 1
								val K_unchecked TB_COLUMN_ALLOCATED
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 1
						inv !ifelse
							val K_unchecked f
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 1
									inv !le
										val K_unchecked i
										val K_unchecked j
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked v
											inv !lookup
												val K_unchecked lookup_col
												inv !plus
													val K_unchecked i
													val K_unchecked COL_HSIZE
										inv !if
											inv !and
												inv !eq
													val K_unchecked v
													val K_unchecked TABLE_NOVALUE
												inv CheckTableEntryIsBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked i
											code
												inv !continue
										inv !if
											inv !eq
												inv BlkValueCompare
													val K_unchecked v
													val K_unchecked lookup_value
												val K_unchecked 0
											code
												inv !return
													val K_unchecked i
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 1
									inv !le
										val K_unchecked i
										val K_unchecked j
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !and
												inv !eq
													val K_unchecked lookup_value
													val K_unchecked TABLE_NOVALUE
												inv CheckTableEntryIsBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked i
											code
												inv !continue
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked lookup_col
													inv !plus
														val K_unchecked i
														val K_unchecked COL_HSIZE
												val K_unchecked lookup_value
											code
												inv !return
													val K_unchecked i
						inv !return
							inv RunTimeProblem
								val K_unchecked RTP_TABLE_NOCORR
								val K_unchecked tab
				constant TableRowCorr K_unchecked_function = TableRowCorr_B __assimilated=1
			package ExistsTableRowCorr_fn _function
				symbol public misc ExistsTableRowCorr
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ExistsTableRowCorr_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc entry
					symbol private misc i
					symbol private misc k
					symbol private misc v
					symbol private misc f
					symbol private misc kov
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TB_COLUMN_TOPIC --> /main/template/constants/TB_COLUMN_TOPIC_con/TB_COLUMN_TOPIC
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					local tab K_unchecked
					local col K_unchecked
					local entry K_unchecked
					local i K_unchecked
					local k K_unchecked
					local v K_unchecked
					local f K_unchecked
					local kov K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
						inv !if
							inv !eq
								val K_unchecked col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked f
							val K_unchecked 0
						inv !ifelse
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 1
								val K_unchecked TB_COLUMN_TOPIC
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 1
							code
								inv !if
									inv !bitwiseand
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked col
											val K_unchecked 1
										val K_unchecked TB_COLUMN_ALLOCATED
									code
										inv !store
											reference
												val K_unchecked f
											val K_unchecked 2
						inv !store
							reference
								val K_unchecked k
							inv TableRows
								val K_unchecked tab
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked k
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked v
									inv !lookup
										inv !lookup
											val K_unchecked tab
											val K_unchecked col
										inv !plus
											val K_unchecked i
											val K_unchecked COL_HSIZE
								inv !if
									inv !and
										inv !eq
											val K_unchecked v
											val K_unchecked TABLE_NOVALUE
										inv CheckTableEntryIsBlank
											val K_unchecked tab
											val K_unchecked col
											val K_unchecked i
									code
										inv !continue
								inv !switch
									val K_unchecked f
									code
										inv !case
											val K_unchecked 1
											code
												inv !if
													inv !ne
														inv !indirect2
															val K_unchecked v
															inv !divide
																val K_unchecked entry
																val K_unchecked 100
															inv !modulo
																val K_unchecked entry
																val K_unchecked 100
														val K_unchecked GPR_FAIL
													code
														inv !return
															val K_unchecked i
										inv !case
											val K_unchecked 2
											code
												inv !if
													inv !eq
														inv BlkValueCompare
															val K_unchecked v
															val K_unchecked entry
														val K_unchecked 0
													code
														inv !return
															val K_unchecked i
										inv !default
											code
												inv !if
													inv !eq
														val K_unchecked v
														val K_unchecked entry
													code
														inv !return
															val K_unchecked i
						inv !return
							val K_unchecked 0
				constant ExistsTableRowCorr K_unchecked_function = ExistsTableRowCorr_B __assimilated=1
			package TableLookUpCorr_fn _function
				symbol public misc TableLookUpCorr
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableLookUpCorr_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col1
					symbol private misc col2
					symbol private misc lookup_value
					symbol private misc write_flag
					symbol private misc write_value
					symbol private misc cola1
					symbol private misc cola2
					symbol private misc i
					symbol private misc j
					symbol private misc v
					symbol private misc f
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc TB_COLUMN_TOPIC --> /main/template/constants/TB_COLUMN_TOPIC_con/TB_COLUMN_TOPIC
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc ForceTableEntryBlank --> /main/template/functions/ForceTableEntryBlank_fn/ForceTableEntryBlank
					symbol external misc ForceTableEntryNonBlank --> /main/template/functions/ForceTableEntryNonBlank_fn/ForceTableEntryNonBlank
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOCORR --> /main/template/constants/RTP_TABLE_NOCORR_con/RTP_TABLE_NOCORR
					local tab K_unchecked
					local col1 K_unchecked
					local col2 K_unchecked
					local lookup_value K_unchecked
					local write_flag K_unchecked
					local write_value K_unchecked
					local cola1 K_unchecked
					local cola2 K_unchecked
					local i K_unchecked
					local j K_unchecked
					local v K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col1
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col1
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col1
										val K_unchecked 1
						inv !if
							inv !ge
								val K_unchecked col2
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col2
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col2
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked cola1
							inv !lookup
								val K_unchecked tab
								val K_unchecked col1
						inv !store
							reference
								val K_unchecked cola2
							inv !lookup
								val K_unchecked tab
								val K_unchecked col2
						inv !store
							reference
								val K_unchecked j
							inv !lookup
								val K_unchecked cola2
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked f
							val K_unchecked 0
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col2
									val K_unchecked 1
								val K_unchecked TB_COLUMN_ALLOCATED
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col2
									val K_unchecked 1
								val K_unchecked TB_COLUMN_TOPIC
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 2
						inv !for
							inv !store
								reference
									val K_unchecked i
								inv !plus
									val K_unchecked 1
									val K_unchecked COL_HSIZE
							inv !le
								val K_unchecked i
								val K_unchecked j
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked v
									inv !lookup
										val K_unchecked cola2
										val K_unchecked i
								inv !if
									inv !and
										inv !eq
											val K_unchecked v
											val K_unchecked TABLE_NOVALUE
										inv CheckTableEntryIsBlank
											val K_unchecked tab
											val K_unchecked col2
											inv !minus
												val K_unchecked i
												val K_unchecked COL_HSIZE
									code
										inv !continue
								inv !ifelse
									inv !eq
										val K_unchecked f
										val K_unchecked 1
									code
										inv !if
											inv !ne
												inv BlkValueCompare
													val K_unchecked v
													val K_unchecked lookup_value
												val K_unchecked 0
											code
												inv !continue
									code
										inv !ifelse
											inv !eq
												val K_unchecked f
												val K_unchecked 2
											code
												inv !if
													inv !eq
														inv !indirect2
															val K_unchecked v
															inv !divide
																val K_unchecked lookup_value
																val K_unchecked 100
															inv !modulo
																val K_unchecked lookup_value
																val K_unchecked 100
														val K_unchecked GPR_FAIL
													code
														inv !continue
											code
												inv !if
													inv !ne
														val K_unchecked v
														val K_unchecked lookup_value
													code
														inv !continue
								inv !if
									val K_unchecked write_flag
									code
										inv !ifelse
											inv !eq
												val K_unchecked write_flag
												val K_unchecked 4
											code
												inv ForceTableEntryBlank
													val K_unchecked tab
													val K_unchecked col1
													inv !minus
														val K_unchecked i
														val K_unchecked COL_HSIZE
											code
												inv ForceTableEntryNonBlank
													val K_unchecked tab
													val K_unchecked col1
													inv !minus
														val K_unchecked i
														val K_unchecked COL_HSIZE
										inv !switch
											val K_unchecked write_flag
											code
												inv !case
													val K_unchecked 1
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked cola1
																	val K_unchecked i
															val K_unchecked write_value
												inv !case
													val K_unchecked 2
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked cola1
																	val K_unchecked i
															inv !plus
																inv !lookup
																	val K_unchecked cola1
																	val K_unchecked i
																val K_unchecked write_value
												inv !case
													val K_unchecked 3
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked cola1
																	val K_unchecked i
															inv !minus
																inv !lookup
																	val K_unchecked cola1
																	val K_unchecked i
																val K_unchecked write_value
												inv !case
													val K_unchecked 5
													code
														inv !return
															inv !lookup
																val K_unchecked cola1
																val K_unchecked i
										inv !return
											val K_unchecked 0
								inv !store
									reference
										val K_unchecked v
									inv !lookup
										val K_unchecked cola1
										val K_unchecked i
								inv !if
									inv !and
										inv !eq
											val K_unchecked v
											val K_unchecked TABLE_NOVALUE
										inv CheckTableEntryIsBlank
											val K_unchecked tab
											val K_unchecked col1
											inv !minus
												val K_unchecked i
												val K_unchecked COL_HSIZE
									code
										inv !continue
								inv !return
									val K_unchecked v
						inv !return
							inv RunTimeProblem
								val K_unchecked RTP_TABLE_NOCORR
								val K_unchecked tab
				constant TableLookUpCorr K_unchecked_function = TableLookUpCorr_B __assimilated=1
			package ExistsTableLookUpCorr_fn _function
				symbol public misc ExistsTableLookUpCorr
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ExistsTableLookUpCorr_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col1
					symbol private misc col2
					symbol private misc lookup_value
					symbol private misc cola1
					symbol private misc cola2
					symbol private misc i
					symbol private misc j
					symbol private misc f
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc TB_COLUMN_TOPIC --> /main/template/constants/TB_COLUMN_TOPIC_con/TB_COLUMN_TOPIC
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					local tab K_unchecked
					local col1 K_unchecked
					local col2 K_unchecked
					local lookup_value K_unchecked
					local cola1 K_unchecked
					local cola2 K_unchecked
					local i K_unchecked
					local j K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col1
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col1
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col1
										val K_unchecked 0
						inv !if
							inv !ge
								val K_unchecked col2
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col2
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col2
										val K_unchecked 0
						inv !if
							inv !eq
								inv !times
									val K_unchecked col1
									val K_unchecked col2
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked cola1
							inv !lookup
								val K_unchecked tab
								val K_unchecked col1
						inv !store
							reference
								val K_unchecked cola2
							inv !lookup
								val K_unchecked tab
								val K_unchecked col2
						inv !store
							reference
								val K_unchecked j
							inv !lookup
								val K_unchecked cola2
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked f
							val K_unchecked 0
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col2
									val K_unchecked 1
								val K_unchecked TB_COLUMN_ALLOCATED
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col2
									val K_unchecked 1
								val K_unchecked TB_COLUMN_TOPIC
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 2
						inv !for
							inv !store
								reference
									val K_unchecked i
								inv !plus
									val K_unchecked 1
									val K_unchecked COL_HSIZE
							inv !le
								val K_unchecked i
								val K_unchecked j
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked cola1
												val K_unchecked i
											val K_unchecked TABLE_NOVALUE
										inv CheckTableEntryIsBlank
											val K_unchecked tab
											val K_unchecked col1
											inv !minus
												val K_unchecked i
												val K_unchecked COL_HSIZE
									code
										inv !continue
								inv !ifelse
									inv !eq
										val K_unchecked f
										val K_unchecked 1
									code
										inv !if
											inv !ne
												inv BlkValueCompare
													inv !lookup
														val K_unchecked cola2
														val K_unchecked i
													val K_unchecked lookup_value
												val K_unchecked 0
											code
												inv !continue
									code
										inv !ifelse
											inv !eq
												val K_unchecked f
												val K_unchecked 2
											code
												inv !if
													inv !eq
														inv !indirect2
															inv !lookup
																val K_unchecked cola2
																val K_unchecked i
															inv !divide
																val K_unchecked lookup_value
																val K_unchecked 100
															inv !modulo
																val K_unchecked lookup_value
																val K_unchecked 100
														val K_unchecked GPR_FAIL
													code
														inv !continue
											code
												inv !if
													inv !ne
														inv !lookup
															val K_unchecked cola2
															val K_unchecked i
														val K_unchecked lookup_value
													code
														inv !continue
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant ExistsTableLookUpCorr K_unchecked_function = ExistsTableLookUpCorr_B __assimilated=1
			package TableLookUpEntry_fn _function
				symbol public misc TableLookUpEntry
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableLookUpEntry_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc index
					symbol private misc write_flag
					symbol private misc write_value
					symbol private misc v
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOTABLE2 --> /main/template/constants/RTP_TABLE_NOTABLE2_con/RTP_TABLE_NOTABLE2
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc RTP_TABLE_NOROW --> /main/template/constants/RTP_TABLE_NOROW_con/RTP_TABLE_NOROW
					symbol external misc ForceTableEntryNonBlank --> /main/template/functions/ForceTableEntryNonBlank_fn/ForceTableEntryNonBlank
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc ForceTableEntryBlank --> /main/template/functions/ForceTableEntryBlank_fn/ForceTableEntryBlank
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc RTP_TABLE_NOENTRY --> /main/template/constants/RTP_TABLE_NOENTRY_con/RTP_TABLE_NOENTRY
					local tab K_unchecked
					local col K_unchecked
					local index K_unchecked
					local write_flag K_unchecked
					local write_value K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked tab
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_TABLE_NOTABLE2
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked 1
						inv !if
							inv !or
								inv !lt
									val K_unchecked index
									val K_unchecked 1
								inv !gt
									val K_unchecked index
									inv TableRows
										val K_unchecked tab
							code
								inv RunTimeProblem
									val K_unchecked RTP_TABLE_NOROW
									val K_unchecked tab
									val K_unchecked index
								inv !store
									reference
										val K_unchecked index
									val K_unchecked 1
						inv !if
							val K_unchecked write_flag
							code
								inv !switch
									val K_unchecked write_flag
									code
										inv !case
											val K_unchecked 1
											code
												inv ForceTableEntryNonBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked index
												inv !store
													reference
														inv !lookup
															inv !lookup
																val K_unchecked tab
																val K_unchecked col
															inv !plus
																val K_unchecked index
																val K_unchecked COL_HSIZE
													val K_unchecked write_value
										inv !case
											val K_unchecked 2
											code
												inv ForceTableEntryNonBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked index
												inv !store
													reference
														inv !lookup
															inv !lookup
																val K_unchecked tab
																val K_unchecked col
															inv !plus
																val K_unchecked index
																val K_unchecked COL_HSIZE
													inv !plus
														inv !lookup
															inv !lookup
																val K_unchecked tab
																val K_unchecked col
															inv !plus
																val K_unchecked index
																val K_unchecked COL_HSIZE
														val K_unchecked write_value
										inv !case
											val K_unchecked 3
											code
												inv ForceTableEntryNonBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked index
												inv !store
													reference
														inv !lookup
															inv !lookup
																val K_unchecked tab
																val K_unchecked col
															inv !plus
																val K_unchecked index
																val K_unchecked COL_HSIZE
													inv !minus
														inv !lookup
															inv !lookup
																val K_unchecked tab
																val K_unchecked col
															inv !plus
																val K_unchecked index
																val K_unchecked COL_HSIZE
														val K_unchecked write_value
										inv !case
											val K_unchecked 4
											code
												inv ForceTableEntryBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked index
										inv !case
											val K_unchecked 5
											code
												inv ForceTableEntryNonBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked index
												inv !return
													inv !lookup
														inv !lookup
															val K_unchecked tab
															val K_unchecked col
														inv !plus
															val K_unchecked index
															val K_unchecked COL_HSIZE
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked v
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								inv !plus
									val K_unchecked index
									val K_unchecked COL_HSIZE
						inv !if
							inv !and
								inv !eq
									val K_unchecked v
									val K_unchecked TABLE_NOVALUE
								inv CheckTableEntryIsBlank
									val K_unchecked tab
									val K_unchecked col
									val K_unchecked index
							code
								inv RunTimeProblem
									val K_unchecked RTP_TABLE_NOENTRY
									val K_unchecked tab
									val K_unchecked col
									val K_unchecked index
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked v
				constant TableLookUpEntry K_unchecked_function = TableLookUpEntry_B __assimilated=1
			package ExistsTableLookUpEntry_fn _function
				symbol public misc ExistsTableLookUpEntry
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ExistsTableLookUpEntry_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc index
					symbol private misc v
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					local tab K_unchecked
					local col K_unchecked
					local index K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
						inv !if
							inv !eq
								val K_unchecked col
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !lt
									val K_unchecked index
									val K_unchecked 1
								inv !gt
									val K_unchecked index
									inv TableRows
										val K_unchecked tab
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked v
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								inv !plus
									val K_unchecked index
									val K_unchecked COL_HSIZE
						inv !if
							inv !and
								inv !eq
									val K_unchecked v
									val K_unchecked TABLE_NOVALUE
								inv CheckTableEntryIsBlank
									val K_unchecked tab
									val K_unchecked col
									val K_unchecked index
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant ExistsTableLookUpEntry K_unchecked_function = ExistsTableLookUpEntry_B __assimilated=1
			package TableRowIsBlank_fn _function
				symbol public misc TableRowIsBlank
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableRowIsBlank_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc j
					symbol private misc k
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					local tab K_unchecked
					local j K_unchecked
					local k K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								inv !lookup
									val K_unchecked tab
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv !if
									inv !ne
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked k
											inv !plus
												val K_unchecked j
												val K_unchecked COL_HSIZE
										val K_unchecked TABLE_NOVALUE
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !eq
										inv CheckTableEntryIsBlank
											val K_unchecked tab
											val K_unchecked k
											val K_unchecked j
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant TableRowIsBlank K_unchecked_function = TableRowIsBlank_B __assimilated=1
			package TableBlankOutRow_fn _function
				symbol public misc TableBlankOutRow
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableBlankOutRow_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc row
					symbol private misc k
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOTABLE --> /main/template/constants/RTP_TABLE_NOTABLE_con/RTP_TABLE_NOTABLE
					symbol external misc ForceTableEntryBlank --> /main/template/functions/ForceTableEntryBlank_fn/ForceTableEntryBlank
					local tab K_unchecked
					local row K_unchecked
					local k K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked tab
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_TABLE_NOTABLE
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								inv !lookup
									val K_unchecked tab
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv ForceTableEntryBlank
									val K_unchecked tab
									val K_unchecked k
									val K_unchecked row
				constant TableBlankOutRow K_unchecked_function = TableBlankOutRow_B __assimilated=1
			package TableBlankOutColumn_fn _function
				symbol public misc TableBlankOutColumn
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableBlankOutColumn_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc n
					symbol private misc k
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOTABLE --> /main/template/constants/RTP_TABLE_NOTABLE_con/RTP_TABLE_NOTABLE
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc ForceTableEntryBlank --> /main/template/functions/ForceTableEntryBlank_fn/ForceTableEntryBlank
					local tab K_unchecked
					local col K_unchecked
					local n K_unchecked
					local k K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked tab
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_TABLE_NOTABLE
						inv !store
							reference
								val K_unchecked n
							inv TableRows
								val K_unchecked tab
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								val K_unchecked n
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv ForceTableEntryBlank
									val K_unchecked tab
									val K_unchecked col
									val K_unchecked k
				constant TableBlankOutColumn K_unchecked_function = TableBlankOutColumn_B __assimilated=1
			package TableBlankOutAll_fn _function
				symbol public misc TableBlankOutAll
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableBlankOutAll_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol private misc k
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOTABLE --> /main/template/constants/RTP_TABLE_NOTABLE_con/RTP_TABLE_NOTABLE
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableBlankOutRow --> /main/template/functions/TableBlankOutRow_fn/TableBlankOutRow
					local tab K_unchecked
					local n K_unchecked
					local k K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked tab
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_TABLE_NOTABLE
						inv !store
							reference
								val K_unchecked n
							inv TableRows
								val K_unchecked tab
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								val K_unchecked n
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv TableBlankOutRow
									val K_unchecked tab
									val K_unchecked k
				constant TableBlankOutAll K_unchecked_function = TableBlankOutAll_B __assimilated=1
			package TableBlankRows_fn _function
				symbol public misc TableBlankRows
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableBlankRows_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc c
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableRowIsBlank --> /main/template/functions/TableRowIsBlank_fn/TableRowIsBlank
					local tab K_unchecked
					local i K_unchecked
					local j K_unchecked
					local c K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							inv TableRows
								val K_unchecked tab
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 1
							inv !le
								val K_unchecked j
								val K_unchecked i
							inv !postincrement
								reference
									val K_unchecked j
							code
								inv !if
									inv TableRowIsBlank
										val K_unchecked tab
										val K_unchecked j
									code
										inv !postincrement
											reference
												val K_unchecked c
						inv !return
							val K_unchecked c
				constant TableBlankRows K_unchecked_function = TableBlankRows_B __assimilated=1
			package TableFilledRows_fn _function
				symbol public misc TableFilledRows
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableFilledRows_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableBlankRows --> /main/template/functions/TableBlankRows_fn/TableBlankRows
					local tab K_unchecked
					code
						inv !return
							inv !minus
								inv TableRows
									val K_unchecked tab
								inv TableBlankRows
									val K_unchecked tab
				constant TableFilledRows K_unchecked_function = TableFilledRows_B __assimilated=1
			package TableBlankRow_fn _function
				symbol public misc TableBlankRow
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableBlankRow_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableRowIsBlank --> /main/template/functions/TableRowIsBlank_fn/TableRowIsBlank
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOMOREBLANKS --> /main/template/constants/RTP_TABLE_NOMOREBLANKS_con/RTP_TABLE_NOMOREBLANKS
					local tab K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							inv TableRows
								val K_unchecked tab
						inv !for
							inv !store
								reference
									val K_unchecked j
								val K_unchecked 1
							inv !le
								val K_unchecked j
								val K_unchecked i
							inv !postincrement
								reference
									val K_unchecked j
							code
								inv !if
									inv TableRowIsBlank
										val K_unchecked tab
										val K_unchecked j
									code
										inv !return
											val K_unchecked j
						inv RunTimeProblem
							val K_unchecked RTP_TABLE_NOMOREBLANKS
							val K_unchecked tab
						inv !return
							val K_unchecked i
				constant TableBlankRow K_unchecked_function = TableBlankRow_B __assimilated=1
			package TableRandomRow_fn _function
				symbol public misc TableRandomRow
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableRandomRow_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableFilledRows --> /main/template/functions/TableFilledRows_fn/TableFilledRows
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_NOROWS --> /main/template/constants/RTP_TABLE_NOROWS_con/RTP_TABLE_NOROWS
					symbol external misc random --> /main/veneer/random
					symbol external misc TableRowIsBlank --> /main/template/functions/TableRowIsBlank_fn/TableRowIsBlank
					local tab K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					code
						inv !store
							reference
								val K_unchecked i
							inv TableRows
								val K_unchecked tab
						inv !store
							reference
								val K_unchecked j
							inv TableFilledRows
								val K_unchecked tab
						inv !if
							inv !eq
								val K_unchecked j
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_TABLE_NOROWS
										val K_unchecked tab
						inv !if
							inv !gt
								val K_unchecked j
								val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked j
									inv random
										val K_unchecked j
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								val K_unchecked i
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv !if
									inv !eq
										inv TableRowIsBlank
											val K_unchecked tab
											val K_unchecked k
										val K_unchecked 0
									code
										inv !postdecrement
											reference
												val K_unchecked j
								inv !if
									inv !eq
										val K_unchecked j
										val K_unchecked 0
									code
										inv !return
											val K_unchecked k
				constant TableRandomRow K_unchecked_function = TableRandomRow_B __assimilated=1
			package TableSwapRows_fn _function
				symbol public misc TableSwapRows
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableSwapRows_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc l
					symbol private misc v1
					symbol private misc v2
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc TableSwapBlankBits --> /main/template/functions/TableSwapBlankBits_fn/TableSwapBlankBits
					local tab K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local l K_unchecked
					local v1 K_unchecked
					local v2 K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked j
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked l
							inv !lookup
								val K_unchecked tab
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								val K_unchecked l
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv !store
									reference
										val K_unchecked v1
									inv !lookup
										inv !lookup
											val K_unchecked tab
											val K_unchecked k
										inv !plus
											val K_unchecked i
											val K_unchecked COL_HSIZE
								inv !store
									reference
										val K_unchecked v2
									inv !lookup
										inv !lookup
											val K_unchecked tab
											val K_unchecked k
										inv !plus
											val K_unchecked j
											val K_unchecked COL_HSIZE
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked k
											inv !plus
												val K_unchecked i
												val K_unchecked COL_HSIZE
									val K_unchecked v2
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked k
											inv !plus
												val K_unchecked j
												val K_unchecked COL_HSIZE
									val K_unchecked v1
								inv !if
									inv !or
										inv !eq
											val K_unchecked v1
											val K_unchecked TABLE_NOVALUE
										inv !eq
											val K_unchecked v2
											val K_unchecked TABLE_NOVALUE
									code
										inv TableSwapBlankBits
											val K_unchecked tab
											val K_unchecked i
											val K_unchecked j
											val K_unchecked k
				constant TableSwapRows K_unchecked_function = TableSwapRows_B __assimilated=1
			package TableCompareRows_fn _function
				symbol public misc TableCompareRows
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableCompareRows_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc row1
					symbol private misc row2
					symbol private misc dir
					symbol private misc val1
					symbol private misc val2
					symbol private misc bl1
					symbol private misc bl2
					symbol private misc f
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc TableRowIsBlank --> /main/template/functions/TableRowIsBlank_fn/TableRowIsBlank
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc TB_COLUMN_REAL --> /main/template/constants/TB_COLUMN_REAL_con/TB_COLUMN_REAL
					symbol external misc REAL_NUMBER_TY_Compare --> /main/template/functions/REAL_NUMBER_TY_Compare_fn/REAL_NUMBER_TY_Compare
					symbol external misc TB_COLUMN_SIGNED --> /main/template/constants/TB_COLUMN_SIGNED_con/TB_COLUMN_SIGNED
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					local tab K_unchecked
					local col K_unchecked
					local row1 K_unchecked
					local row2 K_unchecked
					local dir K_unchecked
					local val1 K_unchecked
					local val2 K_unchecked
					local bl1 K_unchecked
					local bl2 K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked 0
						inv !store
							reference
								val K_unchecked val1
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								inv !plus
									val K_unchecked row1
									val K_unchecked COL_HSIZE
						inv !store
							reference
								val K_unchecked val2
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								inv !plus
									val K_unchecked row2
									val K_unchecked COL_HSIZE
						inv !if
							inv !eq
								val K_unchecked val1
								val K_unchecked TABLE_NOVALUE
							code
								inv !store
									reference
										val K_unchecked bl1
									inv CheckTableEntryIsBlank
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked row1
						inv !if
							inv !eq
								val K_unchecked val2
								val K_unchecked TABLE_NOVALUE
							code
								inv !store
									reference
										val K_unchecked bl2
									inv CheckTableEntryIsBlank
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked row2
						inv !if
							inv !and
								inv !eq
									val K_unchecked val1
									val K_unchecked val2
								inv !eq
									val K_unchecked bl1
									val K_unchecked bl2
							code
								inv !if
									inv !ne
										val K_unchecked val1
										val K_unchecked TABLE_NOVALUE
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked bl1
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv TableRowIsBlank
										val K_unchecked tab
										val K_unchecked row1
									code
										inv !if
											inv TableRowIsBlank
												val K_unchecked tab
												val K_unchecked row2
											code
												inv !return
													val K_unchecked 0
										inv !return
											inv !unaryminus
												inv !times
													val K_unchecked 1
													val K_unchecked dir
								inv !if
									inv TableRowIsBlank
										val K_unchecked tab
										val K_unchecked row2
									code
										inv !return
											val K_unchecked dir
								inv !return
									val K_unchecked 0
						inv !if
							val K_unchecked bl1
							code
								inv !return
									val K_unchecked dir
						inv !if
							val K_unchecked bl2
							code
								inv !return
									inv !unaryminus
										inv !times
											val K_unchecked 1
											val K_unchecked dir
						inv !store
							reference
								val K_unchecked f
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked f
								val K_unchecked TB_COLUMN_ALLOCATED
							code
								inv !if
									inv !lt
										inv BlkValueCompare
											val K_unchecked val2
											val K_unchecked val1
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 1
								inv !return
									inv !unaryminus
										val K_unchecked 1
							code
								inv !ifelse
									inv !bitwiseand
										val K_unchecked f
										val K_unchecked TB_COLUMN_REAL
									code
										inv !if
											inv !gt
												inv REAL_NUMBER_TY_Compare
													val K_unchecked val1
													val K_unchecked val2
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv !return
											inv !unaryminus
												val K_unchecked 1
									code
										inv !ifelse
											inv !bitwiseand
												val K_unchecked f
												val K_unchecked TB_COLUMN_SIGNED
											code
												inv !if
													inv !gt
														val K_unchecked val1
														val K_unchecked val2
													code
														inv !return
															val K_unchecked 1
												inv !return
													inv !unaryminus
														val K_unchecked 1
											code
												inv !if
													inv !gt
														inv UnsignedCompare
															val K_unchecked val1
															val K_unchecked val2
														val K_unchecked 0
													code
														inv !return
															val K_unchecked 1
												inv !return
													inv !unaryminus
														val K_unchecked 1
				constant TableCompareRows K_unchecked_function = TableCompareRows_B __assimilated=1
			package TableMoveRowDown_fn _function
				symbol public misc TableMoveRowDown
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableMoveRowDown_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc r1
					symbol private misc r2
					symbol private misc rx
					symbol private misc k
					symbol private misc l
					symbol private misc m
					symbol private misc v
					symbol private misc f
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc TableMoveBlankBitsDown --> /main/template/functions/TableMoveBlankBitsDown_fn/TableMoveBlankBitsDown
					local tab K_unchecked
					local r1 K_unchecked
					local r2 K_unchecked
					local rx K_unchecked
					local k K_unchecked
					local l K_unchecked
					local m K_unchecked
					local v K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked r1
								val K_unchecked r2
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked l
							inv !lookup
								val K_unchecked tab
								val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked k
								val K_unchecked 1
							inv !le
								val K_unchecked k
								val K_unchecked l
							inv !postincrement
								reference
									val K_unchecked k
							code
								inv !store
									reference
										val K_unchecked f
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked m
									inv !lookup
										inv !lookup
											val K_unchecked tab
											val K_unchecked k
										inv !plus
											val K_unchecked r1
											val K_unchecked COL_HSIZE
								inv !if
									inv !eq
										val K_unchecked m
										val K_unchecked TABLE_NOVALUE
									code
										inv !store
											reference
												val K_unchecked f
											val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked rx
										val K_unchecked r1
									inv !lt
										val K_unchecked rx
										val K_unchecked r2
									inv !postincrement
										reference
											val K_unchecked rx
									code
										inv !store
											reference
												val K_unchecked v
											inv !lookup
												inv !lookup
													val K_unchecked tab
													val K_unchecked k
												inv !plus
													inv !plus
														val K_unchecked rx
														val K_unchecked COL_HSIZE
													val K_unchecked 1
										inv !store
											reference
												inv !lookup
													inv !lookup
														val K_unchecked tab
														val K_unchecked k
													inv !plus
														val K_unchecked rx
														val K_unchecked COL_HSIZE
											val K_unchecked v
										inv !if
											inv !eq
												val K_unchecked v
												val K_unchecked TABLE_NOVALUE
											code
												inv !store
													reference
														val K_unchecked f
													val K_unchecked 1
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked k
											inv !plus
												val K_unchecked r2
												val K_unchecked COL_HSIZE
									val K_unchecked m
								inv !if
									val K_unchecked f
									code
										inv TableMoveBlankBitsDown
											val K_unchecked tab
											val K_unchecked r1
											val K_unchecked r2
											val K_unchecked k
				constant TableMoveRowDown K_unchecked_function = TableMoveRowDown_B __assimilated=1
			package TableShuffle_fn _function
				symbol public misc TableShuffle
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableShuffle_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc to
					symbol external misc TableMoveBlanksToBack --> /main/template/functions/TableMoveBlanksToBack_fn/TableMoveBlanksToBack
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableFilledRows --> /main/template/functions/TableFilledRows_fn/TableFilledRows
					symbol external misc TableSwapRows --> /main/template/functions/TableSwapRows_fn/TableSwapRows
					symbol external misc random --> /main/veneer/random
					local tab K_unchecked
					local i K_unchecked
					local to K_unchecked
					code
						inv TableMoveBlanksToBack
							val K_unchecked tab
							val K_unchecked 1
							inv TableRows
								val K_unchecked tab
						inv !store
							reference
								val K_unchecked to
							inv TableFilledRows
								val K_unchecked tab
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 2
							inv !le
								val K_unchecked i
								val K_unchecked to
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv TableSwapRows
									val K_unchecked tab
									val K_unchecked i
									inv random
										val K_unchecked i
				constant TableShuffle K_unchecked_function = TableShuffle_B __assimilated=1
			package TableNextRow_fn _function
				symbol public misc TableNextRow
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableNextRow_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc row
					symbol private misc dir
					symbol private misc i
					symbol private misc k
					symbol private misc val
					symbol private misc v
					symbol private misc dv
					symbol private misc min_dv
					symbol private misc min_at
					symbol private misc signed_arithmetic
					symbol private misc f
					symbol private misc blk
					symbol private misc z
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
					symbol external misc TB_COLUMN_SIGNED --> /main/template/constants/TB_COLUMN_SIGNED_con/TB_COLUMN_SIGNED
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					local tab K_unchecked
					local col K_unchecked
					local row K_unchecked
					local dir K_unchecked
					local i K_unchecked
					local k K_unchecked
					local val K_unchecked
					local v K_unchecked
					local dv K_unchecked
					local min_dv K_unchecked
					local min_at K_unchecked
					local signed_arithmetic K_unchecked
					local f K_unchecked
					local blk K_unchecked
					local z K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked 0
						inv !store
							reference
								val K_unchecked f
							inv !lookup
								inv !lookup
									val K_unchecked tab
									val K_unchecked col
								val K_unchecked 1
						inv !if
							inv !bitwiseand
								val K_unchecked f
								val K_unchecked TB_COLUMN_ALLOCATED
							code
								inv !store
									reference
										val K_unchecked blk
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked signed_arithmetic
							inv !bitwiseand
								val K_unchecked f
								val K_unchecked TB_COLUMN_SIGNED
						inv !ifelse
							inv !eq
								val K_unchecked row
								val K_unchecked 0
							code
								inv !ifelse
									val K_unchecked signed_arithmetic
									code
										inv !ifelse
											inv !eq
												val K_unchecked dir
												val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked val
													val K_unchecked -2147483648
											code
												inv !store
													reference
														val K_unchecked val
													val K_unchecked 2147483647
									code
										inv !ifelse
											inv !eq
												val K_unchecked dir
												val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked val
													val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked val
													val K_unchecked -1
							code
								inv !store
									reference
										val K_unchecked val
									inv !lookup
										inv !lookup
											val K_unchecked tab
											val K_unchecked col
										inv !plus
											val K_unchecked row
											val K_unchecked COL_HSIZE
						inv !ifelse
							val K_unchecked signed_arithmetic
							code
								inv !store
									reference
										val K_unchecked min_dv
									val K_unchecked 2147483647
							code
								inv !store
									reference
										val K_unchecked min_dv
									val K_unchecked -1
						inv !store
							reference
								val K_unchecked k
							inv TableRows
								val K_unchecked tab
						inv !ifelse
							inv !eq
								val K_unchecked dir
								val K_unchecked 1
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 1
									inv !le
										val K_unchecked i
										val K_unchecked k
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked v
											inv !lookup
												inv !lookup
													val K_unchecked tab
													val K_unchecked col
												inv !plus
													val K_unchecked i
													val K_unchecked COL_HSIZE
										inv !if
											inv !and
												inv !eq
													val K_unchecked v
													val K_unchecked TABLE_NOVALUE
												inv CheckTableEntryIsBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked i
											code
												inv !continue
										inv !ifelse
											val K_unchecked blk
											code
												inv !store
													reference
														val K_unchecked dv
													val K_unchecked v
												inv !ifelse
													inv !eq
														val K_unchecked row
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked z
															val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked z
															inv BlkValueCompare
																val K_unchecked v
																val K_unchecked val
												inv !store
													reference
														val K_unchecked f
													inv !and
														inv !or
															inv !gt
																val K_unchecked z
																val K_unchecked 0
															inv !and
																inv !eq
																	val K_unchecked z
																	val K_unchecked 0
																inv !gt
																	val K_unchecked i
																	val K_unchecked row
														inv !or
															inv !eq
																val K_unchecked min_at
																val K_unchecked 0
															inv !lt
																inv BlkValueCompare
																	val K_unchecked v
																	val K_unchecked min_dv
																val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked dv
													inv !times
														val K_unchecked dir
														val K_unchecked v
												inv !ifelse
													val K_unchecked signed_arithmetic
													code
														inv !store
															reference
																val K_unchecked f
															inv !and
																inv !or
																	inv !gt
																		val K_unchecked dv
																		inv !times
																			val K_unchecked dir
																			val K_unchecked val
																	inv !and
																		inv !eq
																			val K_unchecked v
																			val K_unchecked val
																		inv !gt
																			val K_unchecked i
																			val K_unchecked row
																inv !lt
																	val K_unchecked dv
																	val K_unchecked min_dv
													code
														inv !store
															reference
																val K_unchecked f
															inv !and
																inv !or
																	inv !gt
																		inv UnsignedCompare
																			val K_unchecked dv
																			inv !times
																				val K_unchecked dir
																				val K_unchecked val
																		val K_unchecked 0
																	inv !and
																		inv !eq
																			val K_unchecked v
																			val K_unchecked val
																		inv !gt
																			val K_unchecked i
																			val K_unchecked row
																inv !lt
																	inv UnsignedCompare
																		val K_unchecked dv
																		val K_unchecked min_dv
																	val K_unchecked 0
										inv !if
											val K_unchecked f
											code
												inv !store
													reference
														val K_unchecked min_dv
													val K_unchecked dv
												inv !store
													reference
														val K_unchecked min_at
													val K_unchecked i
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked k
									inv !ge
										val K_unchecked i
										val K_unchecked 1
									inv !postdecrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked v
											inv !lookup
												inv !lookup
													val K_unchecked tab
													val K_unchecked col
												inv !plus
													val K_unchecked i
													val K_unchecked COL_HSIZE
										inv !if
											inv !and
												inv !eq
													val K_unchecked v
													val K_unchecked TABLE_NOVALUE
												inv CheckTableEntryIsBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked i
											code
												inv !continue
										inv !ifelse
											val K_unchecked blk
											code
												inv !store
													reference
														val K_unchecked dv
													val K_unchecked v
												inv !ifelse
													inv !eq
														val K_unchecked row
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked z
															val K_unchecked -1
													code
														inv !store
															reference
																val K_unchecked z
															inv BlkValueCompare
																val K_unchecked v
																val K_unchecked val
												inv !store
													reference
														val K_unchecked f
													inv !and
														inv !or
															inv !lt
																val K_unchecked z
																val K_unchecked 0
															inv !and
																inv !eq
																	val K_unchecked z
																	val K_unchecked 0
																inv !lt
																	val K_unchecked i
																	val K_unchecked row
														inv !or
															inv !eq
																val K_unchecked min_at
																val K_unchecked 0
															inv !gt
																inv BlkValueCompare
																	val K_unchecked v
																	val K_unchecked min_dv
																val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked dv
													inv !times
														val K_unchecked dir
														val K_unchecked v
												inv !ifelse
													val K_unchecked signed_arithmetic
													code
														inv !store
															reference
																val K_unchecked f
															inv !and
																inv !or
																	inv !gt
																		val K_unchecked dv
																		inv !times
																			val K_unchecked dir
																			val K_unchecked val
																	inv !and
																		inv !eq
																			val K_unchecked v
																			val K_unchecked val
																		inv !lt
																			val K_unchecked i
																			val K_unchecked row
																inv !lt
																	val K_unchecked dv
																	val K_unchecked min_dv
													code
														inv !store
															reference
																val K_unchecked f
															inv !and
																inv !or
																	inv !gt
																		inv UnsignedCompare
																			val K_unchecked dv
																			inv !times
																				val K_unchecked dir
																				val K_unchecked val
																		val K_unchecked 0
																	inv !and
																		inv !eq
																			val K_unchecked v
																			val K_unchecked val
																		inv !lt
																			val K_unchecked i
																			val K_unchecked row
																inv !lt
																	inv UnsignedCompare
																		val K_unchecked dv
																		val K_unchecked min_dv
																	val K_unchecked 0
										inv !if
											val K_unchecked f
											code
												inv !store
													reference
														val K_unchecked min_dv
													val K_unchecked dv
												inv !store
													reference
														val K_unchecked min_at
													val K_unchecked i
						inv !return
							val K_unchecked min_at
				constant TableNextRow K_unchecked_function = TableNextRow_B __assimilated=1
			package TableMoveBlanksToBack_fn _function
				symbol public misc TableMoveBlanksToBack
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableMoveBlanksToBack_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc fromrow
					symbol private misc torow
					symbol private misc i
					symbol private misc fbl
					symbol private misc lnbl
					symbol private misc blc
					symbol external misc TableRowIsBlank --> /main/template/functions/TableRowIsBlank_fn/TableRowIsBlank
					symbol external misc TableMoveRowDown --> /main/template/functions/TableMoveRowDown_fn/TableMoveRowDown
					symbol external misc TableMoveBlanksToBack --> /main/template/functions/TableMoveBlanksToBack_fn/TableMoveBlanksToBack
					local tab K_unchecked
					local fromrow K_unchecked
					local torow K_unchecked
					local i K_unchecked
					local fbl K_unchecked
					local lnbl K_unchecked
					local blc K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked torow
								val K_unchecked fromrow
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked fbl
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked lnbl
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked fromrow
							inv !le
								val K_unchecked i
								val K_unchecked torow
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !ifelse
									inv TableRowIsBlank
										val K_unchecked tab
										val K_unchecked i
									code
										inv !if
											inv !eq
												val K_unchecked fbl
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked fbl
													val K_unchecked i
										inv !postincrement
											reference
												val K_unchecked blc
									code
										inv !store
											reference
												val K_unchecked lnbl
											val K_unchecked i
						inv !if
							inv !and
								inv !and
									inv !gt
										val K_unchecked fbl
										val K_unchecked 0
									inv !gt
										val K_unchecked lnbl
										val K_unchecked 0
								inv !lt
									val K_unchecked fbl
									val K_unchecked lnbl
							code
								inv TableMoveRowDown
									val K_unchecked tab
									val K_unchecked fbl
									val K_unchecked lnbl
								inv TableMoveBlanksToBack
									val K_unchecked tab
									val K_unchecked fbl
									inv !minus
										val K_unchecked lnbl
										val K_unchecked 1
						inv !return
							inv !minus
								val K_unchecked torow
								val K_unchecked blc
				constant TableMoveBlanksToBack K_unchecked_function = TableMoveBlanksToBack_B __assimilated=1
			package TableSort_fn _function
				symbol public misc TableSort
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableSort_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc dir
					symbol private misc test_flag
					symbol private misc algorithm
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc f
					symbol external misc TB_COLUMN_DONTSORTME --> /main/template/constants/TB_COLUMN_DONTSORTME_con/TB_COLUMN_DONTSORTME
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_TABLE_CANTSORT --> /main/template/constants/RTP_TABLE_CANTSORT_con/RTP_TABLE_CANTSORT
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableMoveBlanksToBack --> /main/template/functions/TableMoveBlanksToBack_fn/TableMoveBlanksToBack
					symbol external misc TableColumnDebug --> /main/template/functions/TableColumnDebug_fn/TableColumnDebug
					symbol external misc SetSortDomain --> /main/template/functions/SetSortDomain_fn/SetSortDomain
					symbol external misc TableSwapRows --> /main/template/functions/TableSwapRows_fn/TableSwapRows
					symbol external misc TableCompareRows --> /main/template/functions/TableCompareRows_fn/TableCompareRows
					symbol external misc SortArray --> /main/template/functions/SortArray_fn/SortArray
					local tab K_unchecked
					local col K_unchecked
					local dir K_unchecked
					local test_flag K_unchecked
					local algorithm K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local f K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								inv !lookup
									val K_unchecked tab
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked j
									inv !lookup
										val K_unchecked tab
										val K_unchecked i
								inv !if
									inv !bitwiseand
										inv !lookup
											val K_unchecked j
											val K_unchecked 1
										val K_unchecked TB_COLUMN_DONTSORTME
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_TABLE_CANTSORT
												val K_unchecked tab
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked 0
						inv !store
							reference
								val K_unchecked k
							inv TableRows
								val K_unchecked tab
						inv !store
							reference
								val K_unchecked k
							inv TableMoveBlanksToBack
								val K_unchecked tab
								val K_unchecked 1
								val K_unchecked k
						inv !if
							val K_unchecked test_flag
							code
								inv !print
									val K_unchecked "After moving blanks to back:\n"
								inv TableColumnDebug
									val K_unchecked tab
									val K_unchecked col
						inv SetSortDomain
							val K_unchecked TableSwapRows
							val K_unchecked TableCompareRows
						inv SortArray
							val K_unchecked tab
							val K_unchecked col
							val K_unchecked dir
							val K_unchecked k
							val K_unchecked test_flag
							val K_unchecked algorithm
						inv !if
							val K_unchecked test_flag
							code
								inv !print
									val K_unchecked "Final state:\n"
								inv TableColumnDebug
									val K_unchecked tab
									val K_unchecked col
				constant TableSort K_unchecked_function = TableSort_B __assimilated=1
			package TablePrint_fn _function
				symbol public misc TablePrint
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TablePrint_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc row
					symbol private misc col
					symbol private misc v
					symbol private misc tc
					symbol private misc kov
					symbol external misc TB_COLUMN_CANEXCHANGE --> /main/template/constants/TB_COLUMN_CANEXCHANGE_con/TB_COLUMN_CANEXCHANGE
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableMoveBlanksToBack --> /main/template/functions/TableMoveBlanksToBack_fn/TableMoveBlanksToBack
					symbol external misc plug_00457 --> /main/connectors/plug_00457
					symbol external misc TB_COLUMN_NUMBER --> /main/template/constants/TB_COLUMN_NUMBER_con/TB_COLUMN_NUMBER
					symbol external misc KindAtomic --> /main/template/functions/KindAtomic_fn/KindAtomic
					symbol external misc plug_00474 --> /main/connectors/plug_00474
					symbol external misc plug_00192 --> /main/connectors/plug_00192
					symbol external misc plug_00475 --> /main/connectors/plug_00475
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc BlkValueWriteToFile --> /main/template/functions/BlkValueWriteToFile_fn/BlkValueWriteToFile
					local tab K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local row K_unchecked
					local col K_unchecked
					local v K_unchecked
					local tc K_unchecked
					local kov K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								inv !lookup
									val K_unchecked tab
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked j
									inv !lookup
										val K_unchecked tab
										val K_unchecked i
								inv !if
									inv !eq
										inv !bitwiseand
											inv !lookup
												val K_unchecked j
												val K_unchecked 1
											val K_unchecked TB_COLUMN_CANEXCHANGE
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 1
						inv !store
							reference
								val K_unchecked k
							inv TableRows
								val K_unchecked tab
						inv !store
							reference
								val K_unchecked k
							inv TableMoveBlanksToBack
								val K_unchecked tab
								val K_unchecked 1
								val K_unchecked k
						inv !print
							val K_unchecked "! "
						inv plug_00457
							val K_unchecked tab
						inv !print
							val K_unchecked " ("
						inv !printnumber
							val K_unchecked k
						inv !print
							val K_unchecked ")\n"
						inv !for
							inv !store
								reference
									val K_unchecked row
								val K_unchecked 1
							inv !le
								val K_unchecked row
								val K_unchecked k
							inv !postincrement
								reference
									val K_unchecked row
							code
								inv !for
									inv !store
										reference
											val K_unchecked col
										val K_unchecked 1
									inv !le
										val K_unchecked col
										inv !lookup
											val K_unchecked tab
											val K_unchecked 0
									inv !postincrement
										reference
											val K_unchecked col
									code
										inv !store
											reference
												val K_unchecked tc
											inv !bitwiseand
												inv !lookup
													inv !lookup
														val K_unchecked tab
														val K_unchecked col
													val K_unchecked 1
												val K_unchecked TB_COLUMN_NUMBER
										inv !store
											reference
												val K_unchecked kov
											inv KindAtomic
												inv plug_00474
													val K_unchecked tc
										inv !if
											inv !eq
												val K_unchecked kov
												val K_unchecked plug_00192
											code
												inv !store
													reference
														val K_unchecked kov
													val K_unchecked plug_00475
										inv !store
											reference
												val K_unchecked v
											inv !lookup
												inv !lookup
													val K_unchecked tab
													val K_unchecked col
												inv !plus
													val K_unchecked row
													val K_unchecked COL_HSIZE
										inv !ifelse
											inv !and
												inv !eq
													val K_unchecked v
													val K_unchecked TABLE_NOVALUE
												inv CheckTableEntryIsBlank
													val K_unchecked tab
													val K_unchecked col
													val K_unchecked row
											code
												inv !print
													val K_unchecked "-- "
											code
												inv !if
													inv !eq
														inv BlkValueWriteToFile
															val K_unchecked v
															val K_unchecked kov
														val K_unchecked 0
													code
														inv !printnumber
															val K_unchecked v
												inv !print
													val K_unchecked " "
								inv !print
									val K_unchecked "\n"
						inv !return
							val K_unchecked 0
				constant TablePrint K_unchecked_function = TablePrint_B __assimilated=1
			package PrintRank_fn _function
				symbol public misc PrintRank
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintRank_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc j
					symbol private misc v
					local i K_unchecked
					local j K_unchecked
					local v K_unchecked
					code
						inv !printret
							val K_unchecked "."
				constant PrintRank K_unchecked_function = PrintRank_B __assimilated=1
			package TableColumnDebug_fn _function
				symbol public misc TableColumnDebug
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableColumnDebug_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc k
					symbol private misc i
					symbol private misc v
					symbol private misc tc
					symbol private misc kov
					symbol external misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TB_COLUMN_NUMBER --> /main/template/constants/TB_COLUMN_NUMBER_con/TB_COLUMN_NUMBER
					symbol external misc plug_00474 --> /main/connectors/plug_00474
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					local tab K_unchecked
					local col K_unchecked
					local k K_unchecked
					local i K_unchecked
					local v K_unchecked
					local tc K_unchecked
					local kov K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked col
								val K_unchecked 100
							code
								inv !store
									reference
										val K_unchecked col
									inv TableFindCol
										val K_unchecked tab
										val K_unchecked col
										val K_unchecked 0
						inv !store
							reference
								val K_unchecked k
							inv TableRows
								val K_unchecked tab
						inv !store
							reference
								val K_unchecked tc
							inv !bitwiseand
								inv !lookup
									inv !lookup
										val K_unchecked tab
										val K_unchecked col
									val K_unchecked 1
								val K_unchecked TB_COLUMN_NUMBER
						inv !store
							reference
								val K_unchecked kov
							inv plug_00474
								val K_unchecked tc
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked k
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !gt
										val K_unchecked i
										val K_unchecked 1
									code
										inv !print
											val K_unchecked ", "
								inv !store
									reference
										val K_unchecked v
									inv !lookup
										inv !lookup
											val K_unchecked tab
											val K_unchecked col
										inv !plus
											val K_unchecked i
											val K_unchecked COL_HSIZE
								inv !ifelse
									inv !and
										inv !eq
											val K_unchecked v
											val K_unchecked TABLE_NOVALUE
										inv CheckTableEntryIsBlank
											val K_unchecked tab
											val K_unchecked col
											val K_unchecked i
									code
										inv !print
											val K_unchecked "--"
									code
										inv plug_00417
											val K_unchecked kov
											val K_unchecked v
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
				constant TableColumnDebug K_unchecked_function = TableColumnDebug_B __assimilated=1
			package TableRowDebug_fn _function
				symbol public misc TableRowDebug
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableRowDebug_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc col
					symbol private misc k
					symbol private misc v
					symbol private misc tc
					symbol private misc kov
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TB_COLUMN_NUMBER --> /main/template/constants/TB_COLUMN_NUMBER_con/TB_COLUMN_NUMBER
					symbol external misc plug_00474 --> /main/connectors/plug_00474
					symbol external misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
					symbol external misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
					symbol external misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					local tab K_unchecked
					local i K_unchecked
					local col K_unchecked
					local k K_unchecked
					local v K_unchecked
					local tc K_unchecked
					local kov K_unchecked
					code
						inv !store
							reference
								val K_unchecked k
							inv TableRows
								val K_unchecked tab
						inv !if
							inv !or
								inv !lt
									val K_unchecked i
									val K_unchecked 1
								inv !gt
									val K_unchecked i
									val K_unchecked k
							code
								inv !printret
									val K_unchecked "No such row"
						inv !print
							val K_unchecked "(row "
						inv !printnumber
							val K_unchecked i
						inv !print
							val K_unchecked ")  |"
						inv !for
							inv !store
								reference
									val K_unchecked col
								val K_unchecked 1
							inv !le
								val K_unchecked col
								inv !lookup
									val K_unchecked tab
									val K_unchecked 0
							inv !postincrement
								reference
									val K_unchecked col
							code
								inv !print
									val K_unchecked " "
								inv !store
									reference
										val K_unchecked tc
									inv !bitwiseand
										inv !lookup
											inv !lookup
												val K_unchecked tab
												val K_unchecked col
											val K_unchecked 1
										val K_unchecked TB_COLUMN_NUMBER
								inv !store
									reference
										val K_unchecked kov
									inv plug_00474
										val K_unchecked tc
								inv !store
									reference
										val K_unchecked v
									inv !lookup
										inv !lookup
											val K_unchecked tab
											val K_unchecked col
										inv !plus
											val K_unchecked i
											val K_unchecked COL_HSIZE
								inv !ifelse
									inv !and
										inv !eq
											val K_unchecked v
											val K_unchecked TABLE_NOVALUE
										inv CheckTableEntryIsBlank
											val K_unchecked tab
											val K_unchecked col
											val K_unchecked i
									code
										inv !print
											val K_unchecked "-- "
									code
										inv plug_00417
											val K_unchecked kov
											val K_unchecked v
										inv !print
											val K_unchecked " |"
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
				constant TableRowDebug K_unchecked_function = TableRowDebug_B __assimilated=1
			package TableDebug_fn _function
				symbol public misc TableDebug
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TableDebug_B _code
					symbol private misc tab
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc k
					symbol external misc plug_00457 --> /main/connectors/plug_00457
					symbol external misc TableRows --> /main/template/functions/TableRows_fn/TableRows
					symbol external misc TableRowDebug --> /main/template/functions/TableRowDebug_fn/TableRowDebug
					local tab K_unchecked
					local i K_unchecked
					local k K_unchecked
					code
						inv plug_00457
							val K_unchecked tab
						inv !print
							val K_unchecked "\n"
						inv !store
							reference
								val K_unchecked k
							inv TableRows
								val K_unchecked tab
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked k
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv TableRowDebug
									val K_unchecked tab
									val K_unchecked i
								inv !print
									val K_unchecked "\n"
				constant TableDebug K_unchecked_function = TableDebug_B __assimilated=1
			package HolderOf_fn _function
				symbol public misc HolderOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HolderOf_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00312 --> /main/connectors/plug_00312
					symbol external misc plug_00321 --> /main/connectors/plug_00321
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc parent --> /main/veneer/parent
					local o K_unchecked
					code
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked plug_00312
									val K_unchecked plug_00321
								val K_unchecked 0
							code
								inv !return
									val K_unchecked thedark
						inv !if
							inv !and
								val K_unchecked o
								inv !propertyvalue
									val K_unchecked o
									val K_unchecked component_parent
							code
								inv !return
									inv !propertyvalue
										val K_unchecked o
										val K_unchecked component_parent
						inv !if
							inv !and
								val K_unchecked o
								inv parent
									val K_unchecked o
							code
								inv !return
									inv parent
										val K_unchecked o
						inv !return
							val K_unchecked 0
				constant HolderOf K_unchecked_function = HolderOf_B __assimilated=1
			package ParentOf_fn _function
				symbol public misc ParentOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ParentOf_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc parent --> /main/veneer/parent
					local o K_unchecked
					code
						inv !if
							val K_unchecked o
							code
								inv !store
									reference
										val K_unchecked o
									inv parent
										val K_unchecked o
						inv !return
							val K_unchecked o
				constant ParentOf K_unchecked_function = ParentOf_B __assimilated=1
			package CoreOf_fn _function
				symbol public misc CoreOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CoreOf_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					local o K_unchecked
					code
						inv !while
							inv !and
								inv !and
									val K_unchecked o
									inv !provides
										val K_unchecked o
										val K_unchecked component_parent
								inv !propertyvalue
									val K_unchecked o
									val K_unchecked component_parent
							code
								inv !store
									reference
										val K_unchecked o
									inv !propertyvalue
										val K_unchecked o
										val K_unchecked component_parent
						inv !return
							val K_unchecked o
				constant CoreOf K_unchecked_function = CoreOf_B __assimilated=1
			package CoreOfParentOfCoreOf_fn _function
				symbol public misc CoreOfParentOfCoreOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CoreOfParentOfCoreOf_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc parent --> /main/veneer/parent
					local o K_unchecked
					code
						inv !while
							inv !and
								inv !and
									val K_unchecked o
									inv !provides
										val K_unchecked o
										val K_unchecked component_parent
								inv !propertyvalue
									val K_unchecked o
									val K_unchecked component_parent
							code
								inv !store
									reference
										val K_unchecked o
									inv !propertyvalue
										val K_unchecked o
										val K_unchecked component_parent
						inv !if
							val K_unchecked o
							code
								inv !store
									reference
										val K_unchecked o
									inv parent
										val K_unchecked o
						inv !while
							inv !and
								inv !and
									val K_unchecked o
									inv !provides
										val K_unchecked o
										val K_unchecked component_parent
								inv !propertyvalue
									val K_unchecked o
									val K_unchecked component_parent
							code
								inv !store
									reference
										val K_unchecked o
									inv !propertyvalue
										val K_unchecked o
										val K_unchecked component_parent
						inv !return
							val K_unchecked o
				constant CoreOfParentOfCoreOf K_unchecked_function = CoreOfParentOfCoreOf_B __assimilated=1
			package LocationOf_fn _function
				symbol public misc LocationOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LocationOf_B _code
					symbol private misc o
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00138 --> /main/connectors/plug_00138
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc FrontSideOfDoor --> /main/template/functions/FrontSideOfDoor_fn/FrontSideOfDoor
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc BackdropLocation --> /main/template/functions/BackdropLocation_fn/BackdropLocation
					symbol external misc CoreOfParentOfCoreOf --> /main/template/functions/CoreOfParentOfCoreOf_fn/CoreOfParentOfCoreOf
					local o K_unchecked
					code
						inv !if
							inv !not
								inv !ofclass
									val K_unchecked o
									inv !alternative
										val K_unchecked plug_00137
										val K_unchecked plug_00138
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !ofclass
								val K_unchecked o
								val K_unchecked plug_00153
							code
								inv !if
									inv !eq
										inv parent
											val K_unchecked o
										val K_unchecked real_location
									code
										inv !return
											val K_unchecked real_location
								inv !return
									inv FrontSideOfDoor
										val K_unchecked o
						inv !if
							inv !ofclass
								val K_unchecked o
								val K_unchecked plug_00154
							code
								inv !return
									inv BackdropLocation
										val K_unchecked o
						inv !while
							val K_unchecked o
							code
								inv !if
									inv !ofclass
										val K_unchecked o
										val K_unchecked plug_00137
									code
										inv !return
											val K_unchecked o
								inv !store
									reference
										val K_unchecked o
									inv CoreOfParentOfCoreOf
										val K_unchecked o
						inv !return
							val K_unchecked 0
				constant LocationOf K_unchecked_function = LocationOf_B __assimilated=1
			package CommonAncestor_fn _function
				symbol public misc CommonAncestor
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CommonAncestor_B _code
					symbol private misc o1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o2
					symbol private misc i
					symbol private misc j
					symbol external misc CoreOf --> /main/template/functions/CoreOf_fn/CoreOf
					symbol external misc CoreOfParentOfCoreOf --> /main/template/functions/CoreOfParentOfCoreOf_fn/CoreOfParentOfCoreOf
					local o1 K_unchecked
					local o2 K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !store
							reference
								val K_unchecked o1
							inv CoreOf
								val K_unchecked o1
						inv !store
							reference
								val K_unchecked o2
							inv CoreOf
								val K_unchecked o2
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked o1
							val K_unchecked i
							inv !store
								reference
									val K_unchecked i
								inv CoreOfParentOfCoreOf
									val K_unchecked i
							code
								inv !for
									inv !store
										reference
											val K_unchecked j
										val K_unchecked o2
									val K_unchecked j
									inv !store
										reference
											val K_unchecked j
										inv CoreOfParentOfCoreOf
											val K_unchecked j
									code
										inv !if
											inv !eq
												val K_unchecked j
												val K_unchecked i
											code
												inv !return
													val K_unchecked j
						inv !return
							val K_unchecked 0
				constant CommonAncestor K_unchecked_function = CommonAncestor_B __assimilated=1
			package IndirectlyContains_fn _function
				symbol public misc IndirectlyContains
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IndirectlyContains_B _code
					symbol private misc o1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o2
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc FrontSideOfDoor --> /main/template/functions/FrontSideOfDoor_fn/FrontSideOfDoor
					symbol external misc BackSideOfDoor --> /main/template/functions/BackSideOfDoor_fn/BackSideOfDoor
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc HolderOf --> /main/template/functions/HolderOf_fn/HolderOf
					symbol external misc thedark --> /main/template/constants/thedark_con/thedark
					local o1 K_unchecked
					local o2 K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked o1
									val K_unchecked 0
								inv !eq
									val K_unchecked o2
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !ofclass
									val K_unchecked o1
									val K_unchecked plug_00137
								inv !ofclass
									val K_unchecked o2
									val K_unchecked plug_00153
							code
								inv !if
									inv !eq
										val K_unchecked o1
										inv FrontSideOfDoor
											val K_unchecked o2
									code
										inv !return
											val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked o1
										inv BackSideOfDoor
											val K_unchecked o2
									code
										inv !return
											val K_unchecked 1
								inv !return
									val K_unchecked 0
						inv !if
							inv !ofclass
								val K_unchecked o2
								val K_unchecked plug_00154
							code
								inv !return
									val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked o2
								inv HolderOf
									val K_unchecked o2
							inv !and
								val K_unchecked o2
								inv !ne
									val K_unchecked o2
									val K_unchecked thedark
							inv !store
								reference
									val K_unchecked o2
								inv HolderOf
									val K_unchecked o2
							code
								inv !if
									inv !eq
										val K_unchecked o2
										val K_unchecked o1
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant IndirectlyContains K_unchecked_function = IndirectlyContains_B __assimilated=1
			package WhetherIn_fn _function
				symbol public misc WhetherIn
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WhetherIn_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc enterable --> /main/template/properties/enterable_prop/enterable
					symbol external misc IndirectlyContains --> /main/template/functions/IndirectlyContains_fn/IndirectlyContains
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00477 --> /main/connectors/plug_00477
					symbol external misc TestRegionalContainment --> /main/template/functions/TestRegionalContainment_fn/TestRegionalContainment
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_NOTINAROOM --> /main/template/constants/RTP_NOTINAROOM_con/RTP_NOTINAROOM
					local obj K_unchecked
					code
						inv !if
							inv !has
								val K_unchecked obj
								val K_unchecked enterable
							code
								inv !if
									inv IndirectlyContains
										val K_unchecked obj
										val K_unchecked player
									code
										inv !return
											val K_unchecked 1
								inv !return
									val K_unchecked 0
						inv !if
							inv !ofclass
								val K_unchecked obj
								val K_unchecked plug_00477
							code
								inv !return
									inv TestRegionalContainment
										val K_unchecked real_location
										val K_unchecked obj
						inv !if
							inv !ofclass
								val K_unchecked obj
								val K_unchecked plug_00137
							code
								inv !if
									inv !eq
										val K_unchecked obj
										val K_unchecked real_location
									code
										inv !return
											val K_unchecked 1
								inv !return
									val K_unchecked 0
						inv RunTimeProblem
							val K_unchecked RTP_NOTINAROOM
							val K_unchecked obj
						inv !return
							val K_unchecked 0
				constant WhetherIn K_unchecked_function = WhetherIn_B __assimilated=1
			package ContainerOf_fn _function
				symbol public misc ContainerOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ContainerOf_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc map_region --> /main/template/properties/map_region_prop/map_region
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00159 --> /main/connectors/plug_00159
					symbol external misc plug_00477 --> /main/connectors/plug_00477
					local A K_unchecked
					local p K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked A
								val K_unchecked plug_00137
							code
								inv !return
									inv !propertyvalue
										val K_unchecked A
										val K_unchecked map_region
						inv !store
							reference
								val K_unchecked p
							inv parent
								val K_unchecked A
						inv !if
							inv !eq
								val K_unchecked p
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !ofclass
								val K_unchecked p
								val K_unchecked plug_00159
							code
								inv !return
									val K_unchecked p
						inv !if
							inv !ofclass
								val K_unchecked p
								val K_unchecked plug_00137
							code
								inv !return
									val K_unchecked p
						inv !if
							inv !ofclass
								val K_unchecked p
								val K_unchecked plug_00477
							code
								inv !return
									val K_unchecked p
						inv !return
							val K_unchecked 0
				constant ContainerOf K_unchecked_function = ContainerOf_B __assimilated=1
			package TestContainmentRange_fn _function
				symbol public misc TestContainmentRange
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestContainmentRange_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc e
					symbol private misc f
					symbol external misc plug_00477 --> /main/connectors/plug_00477
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc map_region --> /main/template/properties/map_region_prop/map_region
					symbol external misc plug_00159 --> /main/connectors/plug_00159
					symbol external misc child --> /main/veneer/child
					symbol external misc sibling --> /main/veneer/sibling
					local obj K_unchecked
					local e K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked obj
								val K_unchecked plug_00477
							code
								inv !objectloop
									reference
										val K_unchecked f
									val K_unchecked plug_00137
									inv !and
										inv !ofclass
											val K_unchecked f
											val K_unchecked plug_00137
										inv !eq
											inv !propertyvalue
												val K_unchecked f
												val K_unchecked map_region
											val K_unchecked obj
									code
										inv !if
											inv !gt
												val K_unchecked f
												val K_unchecked e
											code
												inv !return
													val K_unchecked f
								inv !return
									val K_unchecked 0
						inv !if
							inv !ofclass
								val K_unchecked obj
								inv !alternative
									val K_unchecked plug_00159
									val K_unchecked plug_00137
							code
								inv !if
									inv !eq
										val K_unchecked e
										val K_unchecked 0
									code
										inv !return
											inv child
												val K_unchecked obj
								inv !return
									inv sibling
										val K_unchecked e
						inv !return
							val K_unchecked 0
				constant TestContainmentRange K_unchecked_function = TestContainmentRange_B __assimilated=1
			package SupporterOf_fn _function
				symbol public misc SupporterOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SupporterOf_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00177 --> /main/connectors/plug_00177
					local obj K_unchecked
					local p K_unchecked
					code
						inv !store
							reference
								val K_unchecked p
							inv parent
								val K_unchecked obj
						inv !if
							inv !eq
								val K_unchecked p
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !ofclass
								val K_unchecked p
								val K_unchecked plug_00177
							code
								inv !return
									val K_unchecked p
						inv !return
							val K_unchecked 0
				constant SupporterOf K_unchecked_function = SupporterOf_B __assimilated=1
			package CarrierOf_fn _function
				symbol public misc CarrierOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CarrierOf_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00296 --> /main/connectors/plug_00296
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					local obj K_unchecked
					local p K_unchecked
					code
						inv !store
							reference
								val K_unchecked p
							inv parent
								val K_unchecked obj
						inv !if
							inv !and
								inv !and
									val K_unchecked p
									inv !ofclass
										val K_unchecked p
										val K_unchecked plug_00296
								inv !hasnt
									val K_unchecked obj
									val K_unchecked worn
							code
								inv !return
									val K_unchecked p
						inv !return
							val K_unchecked 0
				constant CarrierOf K_unchecked_function = CarrierOf_B __assimilated=1
			package WearerOf_fn _function
				symbol public misc WearerOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WearerOf_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00296 --> /main/connectors/plug_00296
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					local obj K_unchecked
					local p K_unchecked
					code
						inv !store
							reference
								val K_unchecked p
							inv parent
								val K_unchecked obj
						inv !if
							inv !and
								inv !and
									val K_unchecked p
									inv !ofclass
										val K_unchecked p
										val K_unchecked plug_00296
								inv !has
									val K_unchecked obj
									val K_unchecked worn
							code
								inv !return
									val K_unchecked p
						inv !return
							val K_unchecked 0
				constant WearerOf K_unchecked_function = WearerOf_B __assimilated=1
			package OwnerOf_fn _function
				symbol public misc OwnerOf
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package OwnerOf_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00296 --> /main/connectors/plug_00296
					local obj K_unchecked
					local p K_unchecked
					code
						inv !store
							reference
								val K_unchecked p
							inv parent
								val K_unchecked obj
						inv !if
							inv !and
								val K_unchecked p
								inv !ofclass
									val K_unchecked p
									val K_unchecked plug_00296
							code
								inv !return
									val K_unchecked p
						inv !return
							val K_unchecked 0
				constant OwnerOf K_unchecked_function = OwnerOf_B __assimilated=1
			package MakePart_fn _function
				symbol public misc MakePart
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MakePart_B _code
					symbol private misc P
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc Of
					symbol private misc First
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_CANTMAKEPART --> /main/template/constants/RTP_CANTMAKEPART_con/RTP_CANTMAKEPART
					symbol external misc parent --> /main/veneer/parent
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc DetachPart --> /main/template/functions/DetachPart_fn/DetachPart
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc component_child --> /main/template/properties/component_child_prop/component_child
					symbol external misc component_sibling --> /main/template/properties/component_sibling_prop/component_sibling
					local P K_unchecked
					local Of K_unchecked
					local First K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked P
								val K_unchecked player
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTMAKEPART
										val K_unchecked Of
						inv !if
							inv parent
								val K_unchecked P
							code
								inv !remove
									val K_unchecked P
						inv !take
							val K_unchecked P
							val K_unchecked worn
						inv !if
							inv !eq
								val K_unchecked Of
								val K_unchecked 0
							code
								inv DetachPart
									val K_unchecked P
								inv !return
									val K_unchecked 1
						inv !if
							inv !propertyvalue
								val K_unchecked P
								val K_unchecked component_parent
							code
								inv DetachPart
									val K_unchecked P
						inv !store
							reference
								inv !propertyvalue
									val K_unchecked P
									val K_unchecked component_parent
							val K_unchecked Of
						inv !store
							reference
								val K_unchecked First
							inv !propertyvalue
								val K_unchecked Of
								val K_unchecked component_child
						inv !store
							reference
								inv !propertyvalue
									val K_unchecked Of
									val K_unchecked component_child
							val K_unchecked P
						inv !store
							reference
								inv !propertyvalue
									val K_unchecked P
									val K_unchecked component_sibling
							val K_unchecked First
				constant MakePart K_unchecked_function = MakePart_B __assimilated=1
			package DetachPart_fn _function
				symbol public misc DetachPart
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DetachPart_B _code
					symbol private misc P
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc From
					symbol private misc Daddy
					symbol private misc O
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc component_sibling --> /main/template/properties/component_sibling_prop/component_sibling
					symbol external misc component_child --> /main/template/properties/component_child_prop/component_child
					local P K_unchecked
					local From K_unchecked
					local Daddy K_unchecked
					local O K_unchecked
					code
						inv !store
							reference
								val K_unchecked Daddy
							inv !propertyvalue
								val K_unchecked P
								val K_unchecked component_parent
						inv !store
							reference
								inv !propertyvalue
									val K_unchecked P
									val K_unchecked component_parent
							val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked Daddy
								val K_unchecked 0
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked P
											val K_unchecked component_sibling
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								inv !propertyvalue
									val K_unchecked Daddy
									val K_unchecked component_child
								val K_unchecked P
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked Daddy
											val K_unchecked component_child
									inv !propertyvalue
										val K_unchecked P
										val K_unchecked component_sibling
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked P
											val K_unchecked component_sibling
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked O
								inv !propertyvalue
									val K_unchecked Daddy
									val K_unchecked component_child
							val K_unchecked O
							inv !store
								reference
									val K_unchecked O
								inv !propertyvalue
									val K_unchecked O
									val K_unchecked component_sibling
							code
								inv !if
									inv !eq
										inv !propertyvalue
											val K_unchecked O
											val K_unchecked component_sibling
										val K_unchecked P
									code
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked O
													val K_unchecked component_sibling
											inv !propertyvalue
												val K_unchecked P
												val K_unchecked component_sibling
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked P
													val K_unchecked component_sibling
											val K_unchecked 0
										inv !return
											val K_unchecked 1
				constant DetachPart K_unchecked_function = DetachPart_B __assimilated=1
			package MoveObject_fn _function
				symbol public misc MoveObject
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MoveObject_B _code
					symbol private misc F
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc T
					symbol private misc opt
					symbol private misc going_mode
					symbol private misc was
					symbol private misc L
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_CANTMOVENOTHING --> /main/template/constants/RTP_CANTMOVENOTHING_con/RTP_CANTMOVENOTHING
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc plug_00477 --> /main/connectors/plug_00477
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					symbol external misc found_in --> /main/template/properties/found_in_prop/found_in
					symbol external misc regional_found_in --> /main/template/properties/regional_found_in_prop/regional_found_in
					symbol external misc TestRegionalContainment --> /main/template/functions/TestRegionalContainment_fn/TestRegionalContainment
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc FoundEverywhere --> /main/template/functions/FoundEverywhere_fn/FoundEverywhere
					symbol external misc RTP_BACKDROP --> /main/template/constants/RTP_BACKDROP_con/RTP_BACKDROP
					symbol external misc RTP_NOTBACKDROP --> /main/template/constants/RTP_NOTBACKDROP_con/RTP_NOTBACKDROP
					symbol external misc RTP_BACKDROPONLY --> /main/template/constants/RTP_BACKDROPONLY_con/RTP_BACKDROPONLY
					symbol external misc plug_00138 --> /main/connectors/plug_00138
					symbol external misc RTP_NOTTHING --> /main/template/constants/RTP_NOTTHING_con/RTP_NOTTHING
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc DetachPart --> /main/template/functions/DetachPart_fn/DetachPart
					symbol external misc PlayerTo --> /main/template/functions/PlayerTo_fn/PlayerTo
					symbol external misc IndirectlyContains --> /main/template/functions/IndirectlyContains_fn/IndirectlyContains
					symbol external misc RTP_CANTBEOFFSTAGE --> /main/template/constants/RTP_CANTBEOFFSTAGE_con/RTP_CANTBEOFFSTAGE
					symbol external misc parent --> /main/veneer/parent
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					local F K_unchecked
					local T K_unchecked
					local opt K_unchecked
					local going_mode K_unchecked
					local was K_unchecked
					local L K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked F
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTMOVENOTHING
						inv !if
							inv !ofclass
								val K_unchecked F
								val K_unchecked plug_00154
							code
								inv !if
									inv !ofclass
										val K_unchecked T
										val K_unchecked plug_00477
									code
										inv !take
											val K_unchecked F
											val K_unchecked absent
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked F
													val K_unchecked found_in
											inv !propertyvalue
												val K_unchecked T
												val K_unchecked regional_found_in
										inv !ifelse
											inv TestRegionalContainment
												inv LocationOf
													val K_unchecked player
												val K_unchecked T
											code
												inv !move
													val K_unchecked F
													inv LocationOf
														val K_unchecked player
											code
												inv !remove
													val K_unchecked F
										inv !return
											val K_unchecked 1
								inv !if
									inv !eq
										val K_unchecked T
										val K_unchecked FoundEverywhere
									code
										inv !take
											val K_unchecked F
											val K_unchecked absent
										inv !store
											reference
												inv !propertyvalue
													val K_unchecked F
													val K_unchecked found_in
											val K_unchecked FoundEverywhere
										inv !return
											val K_unchecked 1
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_BACKDROP
										val K_unchecked F
										val K_unchecked T
						inv !if
							inv !ofclass
								val K_unchecked T
								val K_unchecked plug_00477
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_NOTBACKDROP
										val K_unchecked F
										val K_unchecked T
						inv !if
							inv !eq
								val K_unchecked T
								val K_unchecked FoundEverywhere
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_BACKDROPONLY
										val K_unchecked F
						inv !if
							inv !not
								inv !ofclass
									val K_unchecked F
									val K_unchecked plug_00138
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_NOTTHING
										val K_unchecked F
										val K_unchecked T
						inv !if
							inv !has
								val K_unchecked F
								val K_unchecked worn
							code
								inv !take
									val K_unchecked F
									val K_unchecked worn
								inv !if
									inv !in
										val K_unchecked F
										val K_unchecked T
									code
										inv !return
											val K_unchecked 1
						inv DetachPart
							val K_unchecked F
						inv !if
							inv !eq
								val K_unchecked going_mode
								val K_unchecked 0
							code
								inv !if
									inv !eq
										val K_unchecked F
										val K_unchecked player
									code
										inv PlayerTo
											val K_unchecked T
											val K_unchecked opt
										inv !return
											val K_unchecked 1
								inv !if
									inv IndirectlyContains
										val K_unchecked F
										val K_unchecked player
									code
										inv !store
											reference
												val K_unchecked L
											inv LocationOf
												val K_unchecked T
										inv !if
											inv !eq
												val K_unchecked L
												val K_unchecked 0
											code
												inv !return
													inv RunTimeProblem
														val K_unchecked RTP_CANTBEOFFSTAGE
										inv !if
											inv !ne
												inv LocationOf
													val K_unchecked player
												val K_unchecked L
											code
												inv !store
													reference
														val K_unchecked was
													inv parent
														val K_unchecked player
												inv !move
													val K_unchecked player
													val K_unchecked real_location
												inv !move
													val K_unchecked F
													val K_unchecked T
												inv PlayerTo
													val K_unchecked was
													val K_unchecked 1
												inv !return
													val K_unchecked 1
						inv !move
							val K_unchecked F
							val K_unchecked T
				constant MoveObject K_unchecked_function = MoveObject_B __assimilated=1
			package RemoveFromPlay_fn _function
				symbol public misc RemoveFromPlay
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RemoveFromPlay_B _code
					symbol private misc F
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_CANTREMOVENOTHING --> /main/template/constants/RTP_CANTREMOVENOTHING_con/RTP_CANTREMOVENOTHING
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc RTP_CANTREMOVEPLAYER --> /main/template/constants/RTP_CANTREMOVEPLAYER_con/RTP_CANTREMOVEPLAYER
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc RTP_CANTREMOVEDOORS --> /main/template/constants/RTP_CANTREMOVEDOORS_con/RTP_CANTREMOVEDOORS
					symbol external misc IndirectlyContains --> /main/template/functions/IndirectlyContains_fn/IndirectlyContains
					symbol external misc RTP_CANTBEOFFSTAGE --> /main/template/constants/RTP_CANTBEOFFSTAGE_con/RTP_CANTBEOFFSTAGE
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc DetachPart --> /main/template/functions/DetachPart_fn/DetachPart
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					local F K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked F
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTREMOVENOTHING
						inv !if
							inv !eq
								val K_unchecked F
								val K_unchecked player
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTREMOVEPLAYER
						inv !if
							inv !ofclass
								val K_unchecked F
								val K_unchecked plug_00153
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTREMOVEDOORS
						inv !if
							inv IndirectlyContains
								val K_unchecked F
								val K_unchecked player
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTBEOFFSTAGE
						inv !take
							val K_unchecked F
							val K_unchecked worn
						inv DetachPart
							val K_unchecked F
						inv !if
							inv !ofclass
								val K_unchecked F
								val K_unchecked plug_00154
							code
								inv !give
									val K_unchecked F
									val K_unchecked absent
						inv !remove
							val K_unchecked F
				constant RemoveFromPlay K_unchecked_function = RemoveFromPlay_B __assimilated=1
			package OnStage_fn _function
				symbol public misc OnStage
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package OnStage_B _code
					symbol private misc O
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc x
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc metaclass --> /main/veneer/metaclass
					symbol external misc Object --> /main/veneer/Object
					symbol external misc plug_00477 --> /main/connectors/plug_00477
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc parent --> /main/veneer/parent
					symbol external misc OnStage --> /main/template/functions/OnStage_fn/OnStage
					symbol external misc RemoveFromPlay --> /main/template/functions/RemoveFromPlay_fn/RemoveFromPlay
					symbol external misc MoveObject --> /main/template/functions/MoveObject_fn/MoveObject
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					local O K_unchecked
					local set K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked O
								val K_unchecked plug_00137
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !lt
								val K_unchecked set
								val K_unchecked 0
							code
								inv !while
									inv !eq
										inv metaclass
											val K_unchecked O
										val K_unchecked Object
									code
										inv !if
											inv !ofclass
												val K_unchecked O
												val K_unchecked plug_00137
											code
												inv !return
													val K_unchecked 1
										inv !if
											inv !ofclass
												val K_unchecked O
												val K_unchecked plug_00477
											code
												inv !return
													val K_unchecked 0
										inv !if
											inv !ofclass
												val K_unchecked O
												val K_unchecked plug_00153
											code
												inv !return
													val K_unchecked 1
										inv !if
											inv !ofclass
												val K_unchecked O
												val K_unchecked plug_00154
											code
												inv !if
													inv !has
														val K_unchecked O
														val K_unchecked absent
													code
														inv !return
															val K_unchecked 0
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked x
											inv !propertyvalue
												val K_unchecked O
												val K_unchecked component_parent
										inv !if
											val K_unchecked x
											code
												inv !store
													reference
														val K_unchecked O
													val K_unchecked x
												inv !continue
										inv !store
											reference
												val K_unchecked x
											inv parent
												val K_unchecked O
										inv !if
											val K_unchecked x
											code
												inv !store
													reference
														val K_unchecked O
													val K_unchecked x
												inv !continue
										inv !return
											val K_unchecked 0
						inv !store
							reference
								val K_unchecked x
							inv OnStage
								val K_unchecked O
								inv !unaryminus
									val K_unchecked 1
						inv !if
							inv !and
								val K_unchecked x
								inv !eq
									val K_unchecked set
									val K_unchecked 0
							code
								inv RemoveFromPlay
									val K_unchecked O
						inv !if
							inv !and
								inv !eq
									val K_unchecked x
									val K_unchecked 0
								val K_unchecked set
							code
								inv MoveObject
									val K_unchecked O
									val K_unchecked real_location
						inv !return
							val K_unchecked 0
				constant OnStage K_unchecked_function = OnStage_B __assimilated=1
			package PlayerTo_fn _function
				symbol public misc PlayerTo
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PlayerTo_B _code
					symbol private misc newplace
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc flag
					symbol private misc L
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_CANTBEOFFSTAGE --> /main/template/constants/RTP_CANTBEOFFSTAGE_con/RTP_CANTBEOFFSTAGE
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc MoveFloatingObjects --> /main/template/functions/MoveFloatingObjects_fn/MoveFloatingObjects
					symbol external misc SilentlyConsiderLight --> /main/template/functions/SilentlyConsiderLight_fn/SilentlyConsiderLight
					symbol external misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
					symbol external misc R_Process --> /main/template/functions/R_Process_fn/R_Process
					symbol external misc plug_00346 --> /main/connectors/plug_00346
					symbol external misc visited --> /main/template/properties/visited_prop/visited
					symbol external misc AbbreviatedRoomDescription --> /main/template/functions/AbbreviatedRoomDescription_fn/AbbreviatedRoomDescription
					local newplace K_unchecked
					local flag K_unchecked
					local L K_unchecked
					code
						inv !store
							reference
								val K_unchecked L
							inv LocationOf
								val K_unchecked newplace
						inv !if
							inv !eq
								val K_unchecked L
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTBEOFFSTAGE
						inv !push
							val K_unchecked actor
						inv !store
							reference
								val K_unchecked actor
							val K_unchecked player
						inv !move
							val K_unchecked player
							val K_unchecked newplace
						inv !store
							reference
								val K_unchecked location
							val K_unchecked L
						inv !store
							reference
								val K_unchecked real_location
							val K_unchecked location
						inv MoveFloatingObjects
						inv SilentlyConsiderLight
						inv DivideParagraphPoint
						inv !if
							inv !eq
								val K_unchecked flag
								val K_unchecked 0
							code
								inv R_Process
									val K_unchecked plug_00346
						inv !if
							inv !eq
								val K_unchecked flag
								val K_unchecked 1
							code
								inv !give
									val K_unchecked location
									val K_unchecked visited
						inv !if
							inv !eq
								val K_unchecked flag
								val K_unchecked 2
							code
								inv AbbreviatedRoomDescription
						inv !pull
							reference
								val K_unchecked actor
				constant PlayerTo K_unchecked_function = PlayerTo_B __assimilated=1
			package MoveDuringGoing_fn _function
				symbol public misc MoveDuringGoing
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MoveDuringGoing_B _code
					symbol private misc F
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc T
					symbol external misc MoveObject --> /main/template/functions/MoveObject_fn/MoveObject
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					local F K_unchecked
					local T K_unchecked
					code
						inv MoveObject
							val K_unchecked F
							val K_unchecked T
							val K_unchecked 0
							val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked actor
								val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked location
									inv LocationOf
										val K_unchecked player
								inv !store
									reference
										val K_unchecked real_location
									val K_unchecked location
				constant MoveDuringGoing K_unchecked_function = MoveDuringGoing_B __assimilated=1
			package FoundEverywhere_fn _function
				symbol public misc FoundEverywhere
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FoundEverywhere_B _code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							val K_unchecked 1
				constant FoundEverywhere K_unchecked_function = FoundEverywhere_B __assimilated=1
			package BackdropEverywhere_fn _function
				symbol public misc BackdropEverywhere
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BackdropEverywhere_B _code
					symbol private misc O
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					symbol external misc found_in --> /main/template/properties/found_in_prop/found_in
					symbol external misc FoundEverywhere --> /main/template/functions/FoundEverywhere_fn/FoundEverywhere
					local O K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked O
								val K_unchecked plug_00154
							code
								inv !if
									inv !has
										val K_unchecked O
										val K_unchecked absent
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !eq
										inv !propertyvalue
											val K_unchecked O
											val K_unchecked found_in
										val K_unchecked FoundEverywhere
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant BackdropEverywhere K_unchecked_function = BackdropEverywhere_B __assimilated=1
			package ChangePlayer_fn _function
				symbol public misc ChangePlayer
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ChangePlayer_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc flag
					symbol external misc plug_00296 --> /main/connectors/plug_00296
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_CANTCHANGE --> /main/template/constants/RTP_CANTCHANGE_con/RTP_CANTCHANGE
					symbol external misc OnStage --> /main/template/functions/OnStage_fn/OnStage
					symbol external misc RTP_CANTCHANGEOFFSTAGE --> /main/template/constants/RTP_CANTCHANGEOFFSTAGE_con/RTP_CANTCHANGEOFFSTAGE
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc RTP_CANTMAKEPART --> /main/template/constants/RTP_CANTMAKEPART_con/RTP_CANTMAKEPART
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc concealed --> /main/template/properties/concealed_prop/concealed
					symbol external misc remove_proper --> /main/template/properties/remove_proper_prop/remove_proper
					symbol external misc proper --> /main/template/properties/proper_prop/proper
					symbol external misc plug_00318 --> /main/connectors/plug_00318
					symbol external misc saved_short_name --> /main/veneer/saved_short_name
					symbol external misc short_name --> /main/template/properties/short_name_prop/short_name
					symbol external misc plug_00401 --> /main/connectors/plug_00401
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc MoveFloatingObjects --> /main/template/functions/MoveFloatingObjects_fn/MoveFloatingObjects
					symbol external misc SilentlyConsiderLight --> /main/template/functions/SilentlyConsiderLight_fn/SilentlyConsiderLight
					local obj K_unchecked
					local flag K_unchecked
					code
						inv !if
							inv !not
								inv !ofclass
									val K_unchecked obj
									val K_unchecked plug_00296
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTCHANGE
										val K_unchecked obj
						inv !if
							inv !not
								inv OnStage
									val K_unchecked obj
									inv !unaryminus
										val K_unchecked 1
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTCHANGEOFFSTAGE
										val K_unchecked obj
						inv !if
							inv !propertyvalue
								val K_unchecked obj
								val K_unchecked component_parent
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_CANTMAKEPART
										val K_unchecked obj
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked player
							code
								inv !return
									val K_unchecked 1
						inv !take
							val K_unchecked player
							val K_unchecked concealed
						inv !if
							inv !has
								val K_unchecked player
								val K_unchecked remove_proper
							code
								inv !take
									val K_unchecked player
									val K_unchecked proper
						inv !if
							inv !eq
								val K_unchecked player
								val K_unchecked plug_00318
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked player
											val K_unchecked saved_short_name
									inv !propertyvalue
										val K_unchecked player
										val K_unchecked short_name
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked player
											val K_unchecked short_name
									inv plug_00401
										val K_unchecked 99
						inv !store
							reference
								val K_unchecked player
							val K_unchecked obj
						inv !if
							inv !eq
								val K_unchecked player
								val K_unchecked plug_00318
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked player
											val K_unchecked short_name
									inv !propertyvalue
										val K_unchecked player
										val K_unchecked saved_short_name
						inv !if
							inv !hasnt
								val K_unchecked player
								val K_unchecked proper
							code
								inv !give
									val K_unchecked player
									val K_unchecked remove_proper
						inv !give
							val K_unchecked player
							val K_unchecked concealed
						inv !give
							val K_unchecked player
							val K_unchecked proper
						inv !store
							reference
								val K_unchecked location
							inv LocationOf
								val K_unchecked player
						inv !store
							reference
								val K_unchecked real_location
							val K_unchecked location
						inv MoveFloatingObjects
						inv SilentlyConsiderLight
				constant ChangePlayer K_unchecked_function = ChangePlayer_B __assimilated=1
			package MoveFloatingObjects_fn _function
				symbol public misc MoveFloatingObjects
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MoveFloatingObjects_B _code
					symbol private misc toroom
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc k
					symbol private misc l
					symbol private misc m
					symbol private misc address
					symbol private misc flag
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc plug_00478 --> /main/connectors/plug_00478
					symbol external misc found_in --> /main/template/properties/found_in_prop/found_in
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					symbol external misc ZRegion --> /main/template/functions/ZRegion_fn/ZRegion
					symbol private label .TestPropositionally
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc parent --> /main/veneer/parent
					symbol external misc door_to --> /main/template/properties/door_to_prop/door_to
					local toroom K_unchecked
					local i K_unchecked
					local k K_unchecked
					local l K_unchecked
					local m K_unchecked
					local address K_unchecked
					local flag K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked toroom
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked toroom
									val K_unchecked real_location
						inv !if
							inv !eq
								val K_unchecked toroom
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !objectloop
							reference
								val K_unchecked i
							val K_unchecked plug_00478
							val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked address
									inv !propertyaddress
										val K_unchecked i
										val K_unchecked found_in
								inv !if
									inv !and
										inv !ne
											val K_unchecked address
											val K_unchecked 0
										inv !hasnt
											val K_unchecked i
											val K_unchecked absent
									code
										inv !ifelse
											inv !eq
												inv ZRegion
													inv !lookup
														val K_unchecked address
														val K_unchecked 0
												val K_unchecked 2
											code
												inv !store
													reference
														val K_unchecked m
													inv !lookup
														val K_unchecked address
														val K_unchecked 0
												.TestPropositionally
												inv !ifelse
													inv !ne
														inv !callmessage1
															val K_unchecked m
															val K_unchecked toroom
														val K_unchecked 0
													code
														inv !move
															val K_unchecked i
															val K_unchecked toroom
													code
														inv !if
															inv !in
																val K_unchecked i
																val K_unchecked toroom
															code
																inv !remove
																	val K_unchecked i
											code
												inv !store
													reference
														val K_unchecked k
													inv !propertylength
														val K_unchecked i
														val K_unchecked found_in
												inv !for
													inv !store
														reference
															val K_unchecked l
														val K_unchecked 0
													inv !lt
														val K_unchecked l
														inv !divide
															val K_unchecked k
															val K_unchecked plug_00139
													inv !postincrement
														reference
															val K_unchecked l
													code
														inv !store
															reference
																val K_unchecked m
															inv !lookup
																val K_unchecked address
																val K_unchecked l
														inv !if
															inv !eq
																inv ZRegion
																	val K_unchecked m
																val K_unchecked 2
															code
																inv !jump
																	lab .TestPropositionally
														inv !if
															inv !or
																inv !eq
																	val K_unchecked m
																	val K_unchecked toroom
																inv !in
																	val K_unchecked m
																	val K_unchecked toroom
															code
																inv !if
																	inv !notin
																		val K_unchecked i
																		val K_unchecked toroom
																	code
																		inv !move
																			val K_unchecked i
																			val K_unchecked toroom
																inv !store
																	reference
																		val K_unchecked flag
																	val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked flag
														val K_unchecked 0
													code
														inv !if
															inv !in
																val K_unchecked i
																val K_unchecked toroom
															code
																inv !remove
																	val K_unchecked i
										inv !if
											inv !and
												inv !ofclass
													val K_unchecked i
													val K_unchecked plug_00153
												inv !eq
													inv parent
														val K_unchecked i
													val K_unchecked 0
											code
												inv !move
													val K_unchecked i
													inv !callmessage0
														inv !propertyvalue
															val K_unchecked i
															val K_unchecked door_to
				constant MoveFloatingObjects K_unchecked_function = MoveFloatingObjects_B __assimilated=1
			package MoveBackdrop_fn _function
				symbol public misc MoveBackdrop
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MoveBackdrop_B _code
					symbol private misc bd
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc D
					symbol private misc x
					symbol private misc address
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_BACKDROPONLY --> /main/template/constants/RTP_BACKDROPONLY_con/RTP_BACKDROPONLY
					symbol external misc found_in --> /main/template/properties/found_in_prop/found_in
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					symbol external misc MoveFloatingObjects --> /main/template/functions/MoveFloatingObjects_fn/MoveFloatingObjects
					local bd K_unchecked
					local D K_unchecked
					local x K_unchecked
					local address K_unchecked
					code
						inv !if
							inv !not
								inv !ofclass
									val K_unchecked bd
									val K_unchecked plug_00154
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_BACKDROPONLY
										val K_unchecked bd
						inv !ifelse
							inv !gt
								inv !propertylength
									val K_unchecked bd
									val K_unchecked found_in
								val K_unchecked plug_00139
							code
								inv !store
									reference
										val K_unchecked address
									inv !propertyaddress
										val K_unchecked bd
										val K_unchecked found_in
								inv !store
									reference
										inv !lookup
											val K_unchecked address
											val K_unchecked 0
									val K_unchecked D
							code
								inv !store
									reference
										inv !propertyvalue
											val K_unchecked bd
											val K_unchecked found_in
									val K_unchecked D
						inv !take
							val K_unchecked bd
							val K_unchecked absent
						inv MoveFloatingObjects
				constant MoveBackdrop K_unchecked_function = MoveBackdrop_B __assimilated=1
			package BackdropLocation_fn _function
				symbol public misc BackdropLocation
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BackdropLocation_B _code
					symbol private misc O
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc target
					symbol private misc address
					symbol private misc m
					symbol private misc x
					symbol private misc i
					symbol private misc k
					symbol private misc l
					symbol private misc r
					symbol private misc sl
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc parent --> /main/veneer/parent
					symbol external misc found_in --> /main/template/properties/found_in_prop/found_in
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc ZRegion --> /main/template/functions/ZRegion_fn/ZRegion
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00477 --> /main/connectors/plug_00477
					symbol external misc TestRegionalContainment --> /main/template/functions/TestRegionalContainment_fn/TestRegionalContainment
					local O K_unchecked
					local target K_unchecked
					local address K_unchecked
					local m K_unchecked
					local x K_unchecked
					local i K_unchecked
					local k K_unchecked
					local l K_unchecked
					local r K_unchecked
					local sl K_unchecked
					code
						inv !if
							inv !has
								val K_unchecked O
								val K_unchecked absent
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								inv !eq
									val K_unchecked target
									inv !alternative
										val K_unchecked 0
										val K_unchecked real_location
								inv !eq
									inv parent
										val K_unchecked O
									val K_unchecked real_location
							code
								inv !return
									val K_unchecked real_location
						inv !store
							reference
								val K_unchecked address
							inv !propertyaddress
								val K_unchecked O
								val K_unchecked found_in
						inv !if
							inv !ne
								val K_unchecked address
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked k
									inv !propertylength
										val K_unchecked O
										val K_unchecked found_in
								inv !for
									inv !store
										reference
											val K_unchecked l
										val K_unchecked 0
									inv !lt
										val K_unchecked l
										inv !divide
											val K_unchecked k
											val K_unchecked plug_00139
									inv !postincrement
										reference
											val K_unchecked l
									code
										inv !store
											reference
												val K_unchecked m
											inv !lookup
												val K_unchecked address
												val K_unchecked l
										inv !ifelse
											inv !eq
												inv ZRegion
													val K_unchecked m
												val K_unchecked 2
											code
												inv !store
													reference
														val K_unchecked sl
													val K_unchecked location
												inv !ifelse
													val K_unchecked target
													code
														inv !store
															reference
																val K_unchecked location
															val K_unchecked target
														inv !store
															reference
																val K_unchecked r
															inv !callmessage0
																val K_unchecked m
														inv !if
															inv !ne
																val K_unchecked r
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked location
																	val K_unchecked sl
																inv !return
																	val K_unchecked target
													code
														inv !objectloop
															reference
																val K_unchecked x
															val K_unchecked plug_00137
															inv !ofclass
																val K_unchecked x
																val K_unchecked plug_00137
															code
																inv !store
																	reference
																		val K_unchecked location
																	val K_unchecked x
																inv !store
																	reference
																		val K_unchecked r
																	inv !callmessage0
																		val K_unchecked m
																inv !if
																	inv !ne
																		val K_unchecked r
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked location
																			val K_unchecked sl
																		inv !return
																			val K_unchecked x
												inv !store
													reference
														val K_unchecked location
													val K_unchecked sl
											code
												inv !ifelse
													inv !ofclass
														val K_unchecked m
														val K_unchecked plug_00477
													code
														inv !objectloop
															reference
																val K_unchecked x
															val K_unchecked plug_00137
															inv !ofclass
																val K_unchecked x
																val K_unchecked plug_00137
															code
																inv !if
																	inv TestRegionalContainment
																		val K_unchecked x
																		val K_unchecked m
																	code
																		inv !if
																			inv !eq
																				val K_unchecked target
																				inv !alternative
																					val K_unchecked 0
																					val K_unchecked x
																			code
																				inv !return
																					val K_unchecked x
													code
														inv !if
															inv !eq
																val K_unchecked target
																inv !alternative
																	val K_unchecked 0
																	val K_unchecked m
															code
																inv !return
																	val K_unchecked m
						inv !return
							val K_unchecked 0
				constant BackdropLocation K_unchecked_function = BackdropLocation_B __assimilated=1
			package WearObject_fn _function
				symbol public misc WearObject
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WearObject_B _code
					symbol private misc X
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc P
					symbol private misc opt
					symbol external misc MoveObject --> /main/template/functions/MoveObject_fn/MoveObject
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					local X K_unchecked
					local P K_unchecked
					local opt K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked X
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !notin
								val K_unchecked X
								val K_unchecked P
							code
								inv MoveObject
									val K_unchecked X
									val K_unchecked P
									val K_unchecked opt
						inv !give
							val K_unchecked X
							val K_unchecked worn
				constant WearObject K_unchecked_function = WearObject_B __assimilated=1
			package MapConnection_fn _function
				symbol public misc MapConnection
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package MapConnection_B _code
					symbol private misc from_room
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc dir
					symbol private misc in_direction
					symbol private misc through_door
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					symbol external misc plug_00446 --> /main/connectors/plug_00446
					symbol external misc IK1_Count --> /main/template/properties/IK1_Count_prop/IK1_Count
					symbol external misc plug_00447 --> /main/connectors/plug_00447
					symbol external misc IK3_Count --> /main/template/properties/IK3_Count_prop/IK3_Count
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc door_to --> /main/template/properties/door_to_prop/door_to
					local from_room K_unchecked
					local dir K_unchecked
					local in_direction K_unchecked
					local through_door K_unchecked
					code
						inv !if
							inv !and
								inv !ofclass
									val K_unchecked from_room
									val K_unchecked plug_00137
								inv !ofclass
									val K_unchecked dir
									val K_unchecked plug_00241
							code
								inv !store
									reference
										val K_unchecked in_direction
									inv !lookup
										val K_unchecked plug_00446
										inv !plus
											inv !times
												inv !propertyvalue
													val K_unchecked from_room
													val K_unchecked IK1_Count
												val K_unchecked plug_00447
											inv !propertyvalue
												val K_unchecked dir
												val K_unchecked IK3_Count
								inv !if
									inv !ofclass
										val K_unchecked in_direction
										val K_unchecked plug_00137
									code
										inv !return
											val K_unchecked in_direction
								inv !if
									inv !ofclass
										val K_unchecked in_direction
										val K_unchecked plug_00153
									code
										inv !push
											val K_unchecked location
										inv !store
											reference
												val K_unchecked location
											val K_unchecked from_room
										inv !store
											reference
												val K_unchecked through_door
											inv !message0
												val K_unchecked in_direction
												val K_unchecked door_to
										inv !pull
											reference
												val K_unchecked location
										inv !if
											inv !ofclass
												val K_unchecked through_door
												val K_unchecked plug_00137
											code
												inv !return
													val K_unchecked through_door
						inv !return
							val K_unchecked 0
				constant MapConnection K_unchecked_function = MapConnection_B __assimilated=1
			package DoorFrom_fn _function
				symbol public misc DoorFrom
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DoorFrom_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc dir
					symbol private misc rv
					symbol external misc RoomOrDoorFrom --> /main/template/functions/RoomOrDoorFrom_fn/RoomOrDoorFrom
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					local obj K_unchecked
					local dir K_unchecked
					local rv K_unchecked
					code
						inv !store
							reference
								val K_unchecked rv
							inv RoomOrDoorFrom
								val K_unchecked obj
								val K_unchecked dir
						inv !if
							inv !ofclass
								val K_unchecked rv
								val K_unchecked plug_00153
							code
								inv !return
									val K_unchecked rv
						inv !return
							val K_unchecked 0
				constant DoorFrom K_unchecked_function = DoorFrom_B __assimilated=1
			package RoomOrDoorFrom_fn _function
				symbol public misc RoomOrDoorFrom
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RoomOrDoorFrom_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc dir
					symbol private misc use_doors
					symbol private misc in_direction
					symbol private misc sl
					symbol private misc through_door
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00241 --> /main/connectors/plug_00241
					symbol external misc plug_00446 --> /main/connectors/plug_00446
					symbol external misc IK1_Count --> /main/template/properties/IK1_Count_prop/IK1_Count
					symbol external misc plug_00447 --> /main/connectors/plug_00447
					symbol external misc IK3_Count --> /main/template/properties/IK3_Count_prop/IK3_Count
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					local obj K_unchecked
					local dir K_unchecked
					local use_doors K_unchecked
					local in_direction K_unchecked
					local sl K_unchecked
					local through_door K_unchecked
					code
						inv !if
							inv !and
								inv !ofclass
									val K_unchecked obj
									val K_unchecked plug_00137
								inv !ofclass
									val K_unchecked dir
									val K_unchecked plug_00241
							code
								inv !store
									reference
										val K_unchecked in_direction
									inv !lookup
										val K_unchecked plug_00446
										inv !plus
											inv !times
												inv !propertyvalue
													val K_unchecked obj
													val K_unchecked IK1_Count
												val K_unchecked plug_00447
											inv !propertyvalue
												val K_unchecked dir
												val K_unchecked IK3_Count
								inv !if
									inv !ofclass
										val K_unchecked in_direction
										inv !alternative
											val K_unchecked plug_00137
											val K_unchecked plug_00153
									code
										inv !return
											val K_unchecked in_direction
						inv !return
							val K_unchecked 0
				constant RoomOrDoorFrom K_unchecked_function = RoomOrDoorFrom_B __assimilated=1
			package AssertMapConnection_fn _function
				symbol public misc AssertMapConnection
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AssertMapConnection_B _code
					symbol private misc r1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc dir
					symbol private misc r2
					symbol private misc in_direction
					symbol external misc SignalMapChange --> /main/template/functions/SignalMapChange_fn/SignalMapChange
					symbol external misc plug_00446 --> /main/connectors/plug_00446
					symbol external misc IK1_Count --> /main/template/properties/IK1_Count_prop/IK1_Count
					symbol external misc plug_00447 --> /main/connectors/plug_00447
					symbol external misc IK3_Count --> /main/template/properties/IK3_Count_prop/IK3_Count
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_EXITDOOR --> /main/template/constants/RTP_EXITDOOR_con/RTP_EXITDOOR
					symbol external misc RTP_NOEXIT --> /main/template/constants/RTP_NOEXIT_con/RTP_NOEXIT
					local r1 K_unchecked
					local dir K_unchecked
					local r2 K_unchecked
					local in_direction K_unchecked
					code
						inv SignalMapChange
						inv !store
							reference
								val K_unchecked in_direction
							inv !lookup
								val K_unchecked plug_00446
								inv !plus
									inv !times
										inv !propertyvalue
											val K_unchecked r1
											val K_unchecked IK1_Count
										val K_unchecked plug_00447
									inv !propertyvalue
										val K_unchecked dir
										val K_unchecked IK3_Count
						inv !if
							inv !or
								inv !eq
									val K_unchecked in_direction
									val K_unchecked 0
								inv !ofclass
									val K_unchecked in_direction
									val K_unchecked plug_00137
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked plug_00446
											inv !plus
												inv !times
													inv !propertyvalue
														val K_unchecked r1
														val K_unchecked IK1_Count
													val K_unchecked plug_00447
												inv !propertyvalue
													val K_unchecked dir
													val K_unchecked IK3_Count
									val K_unchecked r2
								inv !return
									val K_unchecked 1
						inv !if
							inv !ofclass
								val K_unchecked in_direction
								val K_unchecked plug_00153
							code
								inv RunTimeProblem
									val K_unchecked RTP_EXITDOOR
									val K_unchecked r1
									val K_unchecked dir
								inv !return
									val K_unchecked 1
						inv RunTimeProblem
							val K_unchecked RTP_NOEXIT
							val K_unchecked r1
							val K_unchecked dir
				constant AssertMapConnection K_unchecked_function = AssertMapConnection_B __assimilated=1
			package AssertMapUnconnection_fn _function
				symbol public misc AssertMapUnconnection
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AssertMapUnconnection_B _code
					symbol private misc r1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc dir
					symbol private misc r2
					symbol private misc in_direction
					symbol external misc SignalMapChange --> /main/template/functions/SignalMapChange_fn/SignalMapChange
					symbol external misc plug_00446 --> /main/connectors/plug_00446
					symbol external misc IK1_Count --> /main/template/properties/IK1_Count_prop/IK1_Count
					symbol external misc plug_00447 --> /main/connectors/plug_00447
					symbol external misc IK3_Count --> /main/template/properties/IK3_Count_prop/IK3_Count
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_EXITDOOR --> /main/template/constants/RTP_EXITDOOR_con/RTP_EXITDOOR
					local r1 K_unchecked
					local dir K_unchecked
					local r2 K_unchecked
					local in_direction K_unchecked
					code
						inv SignalMapChange
						inv !store
							reference
								val K_unchecked in_direction
							inv !lookup
								val K_unchecked plug_00446
								inv !plus
									inv !times
										inv !propertyvalue
											val K_unchecked r1
											val K_unchecked IK1_Count
										val K_unchecked plug_00447
									inv !propertyvalue
										val K_unchecked dir
										val K_unchecked IK3_Count
						inv !if
							inv !ofclass
								val K_unchecked r1
								val K_unchecked plug_00153
							code
								inv RunTimeProblem
									val K_unchecked RTP_EXITDOOR
									val K_unchecked r1
									val K_unchecked dir
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked in_direction
								val K_unchecked r2
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked plug_00446
											inv !plus
												inv !times
													inv !propertyvalue
														val K_unchecked r1
														val K_unchecked IK1_Count
													val K_unchecked plug_00447
												inv !propertyvalue
													val K_unchecked dir
													val K_unchecked IK3_Count
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant AssertMapUnconnection K_unchecked_function = AssertMapUnconnection_B __assimilated=1
			package TestAdjacency_fn _function
				symbol public misc TestAdjacency
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestAdjacency_B _code
					symbol private misc R1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc R2
					symbol private misc i
					symbol private misc row
					symbol external misc plug_00477 --> /main/connectors/plug_00477
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_REGIONSNOTADJACENT --> /main/template/constants/RTP_REGIONSNOTADJACENT_con/RTP_REGIONSNOTADJACENT
					symbol external misc IK1_Count --> /main/template/properties/IK1_Count_prop/IK1_Count
					symbol external misc plug_00447 --> /main/connectors/plug_00447
					symbol external misc plug_00446 --> /main/connectors/plug_00446
					local R1 K_unchecked
					local R2 K_unchecked
					local i K_unchecked
					local row K_unchecked
					code
						inv !ifelse
							inv !ofclass
								val K_unchecked R1
								val K_unchecked plug_00477
							code
								inv RunTimeProblem
									val K_unchecked RTP_REGIONSNOTADJACENT
									val K_unchecked R1
							code
								inv !if
									inv !ofclass
										val K_unchecked R2
										val K_unchecked plug_00477
									code
										inv RunTimeProblem
											val K_unchecked RTP_REGIONSNOTADJACENT
											val K_unchecked R2
						inv !store
							reference
								val K_unchecked row
							inv !times
								inv !propertyvalue
									val K_unchecked R1
									val K_unchecked IK1_Count
								val K_unchecked plug_00447
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked plug_00447
							inv !sequential
								inv !postincrement
									reference
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked row
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked plug_00446
											val K_unchecked row
										val K_unchecked R2
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant TestAdjacency K_unchecked_function = TestAdjacency_B __assimilated=1
			package TestRegionalContainment_fn _function
				symbol public misc TestRegionalContainment
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestRegionalContainment_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc region
					symbol private misc o
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc absent --> /main/template/properties/absent_prop/absent
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc TestRegionalContainment --> /main/template/functions/TestRegionalContainment_fn/TestRegionalContainment
					symbol external misc BackdropLocation --> /main/template/functions/BackdropLocation_fn/BackdropLocation
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc map_region --> /main/template/properties/map_region_prop/map_region
					symbol external misc parent --> /main/veneer/parent
					local obj K_unchecked
					local region K_unchecked
					local o K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked obj
									val K_unchecked 0
								inv !eq
									val K_unchecked region
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !ofclass
								val K_unchecked obj
								inv !alternative
									val K_unchecked plug_00154
									val K_unchecked plug_00153
							code
								inv !if
									inv !has
										val K_unchecked obj
										val K_unchecked absent
									code
										inv !return
											val K_unchecked 0
								inv !objectloop
									reference
										val K_unchecked o
									val K_unchecked plug_00137
									inv !ofclass
										val K_unchecked o
										val K_unchecked plug_00137
									code
										inv !if
											inv TestRegionalContainment
												val K_unchecked o
												val K_unchecked region
											code
												inv !if
													inv BackdropLocation
														val K_unchecked obj
														val K_unchecked o
													code
														inv !return
															val K_unchecked 1
								inv !return
									val K_unchecked 0
						inv !if
							inv !not
								inv !ofclass
									val K_unchecked obj
									val K_unchecked plug_00137
							code
								inv !store
									reference
										val K_unchecked obj
									inv LocationOf
										val K_unchecked obj
						inv !if
							inv !eq
								val K_unchecked obj
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked o
							inv !propertyvalue
								val K_unchecked obj
								val K_unchecked map_region
						inv !while
							val K_unchecked o
							code
								inv !if
									inv !eq
										val K_unchecked o
										val K_unchecked region
									code
										inv !return
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked o
									inv parent
										val K_unchecked o
						inv !return
							val K_unchecked 0
				constant TestRegionalContainment K_unchecked_function = TestRegionalContainment_B __assimilated=1
			package FrontSideOfDoor_fn _function
				symbol public misc FrontSideOfDoor
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FrontSideOfDoor_B _code
					symbol private misc D
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc found_in --> /main/template/properties/found_in_prop/found_in
					symbol external misc parent --> /main/veneer/parent
					local D K_unchecked
					code
						inv !if
							inv !not
								inv !ofclass
									val K_unchecked D
									val K_unchecked plug_00153
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !provides
								val K_unchecked D
								val K_unchecked found_in
							code
								inv !return
									inv !lookup
										inv !propertyaddress
											val K_unchecked D
											val K_unchecked found_in
										val K_unchecked 0
						inv !return
							inv parent
								val K_unchecked D
				constant FrontSideOfDoor K_unchecked_function = FrontSideOfDoor_B __assimilated=1
			package BackSideOfDoor_fn _function
				symbol public misc BackSideOfDoor
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BackSideOfDoor_B _code
					symbol private misc D
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc found_in --> /main/template/properties/found_in_prop/found_in
					local D K_unchecked
					code
						inv !if
							inv !not
								inv !ofclass
									val K_unchecked D
									val K_unchecked plug_00153
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !provides
								val K_unchecked D
								val K_unchecked found_in
							code
								inv !return
									inv !lookup
										inv !propertyaddress
											val K_unchecked D
											val K_unchecked found_in
										val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant BackSideOfDoor K_unchecked_function = BackSideOfDoor_B __assimilated=1
			package OtherSideOfDoor_fn _function
				symbol public misc OtherSideOfDoor
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package OtherSideOfDoor_B _code
					symbol private misc D
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_room
					symbol private misc rv
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc door_to --> /main/template/properties/door_to_prop/door_to
					local D K_unchecked
					local from_room K_unchecked
					local rv K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked D
								val K_unchecked plug_00153
							code
								inv !push
									val K_unchecked location
								inv !store
									reference
										val K_unchecked location
									inv LocationOf
										val K_unchecked from_room
								inv !store
									reference
										val K_unchecked rv
									inv !message0
										val K_unchecked D
										val K_unchecked door_to
								inv !pull
									reference
										val K_unchecked location
						inv !return
							val K_unchecked rv
				constant OtherSideOfDoor K_unchecked_function = OtherSideOfDoor_B __assimilated=1
			package DirectionDoorLeadsIn_fn _function
				symbol public misc DirectionDoorLeadsIn
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DirectionDoorLeadsIn_B _code
					symbol private misc D
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_room
					symbol private misc rv
					symbol private misc dir
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00148 --> /main/template/variables/location_var/location
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc door_dir --> /main/template/properties/door_dir_prop/door_dir
					local D K_unchecked
					local from_room K_unchecked
					local rv K_unchecked
					local dir K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked D
								val K_unchecked plug_00153
							code
								inv !push
									val K_unchecked location
								inv !store
									reference
										val K_unchecked location
									inv LocationOf
										val K_unchecked from_room
								inv !store
									reference
										val K_unchecked rv
									inv !message0
										val K_unchecked D
										val K_unchecked door_dir
								inv !pull
									reference
										val K_unchecked location
						inv !return
							val K_unchecked rv
				constant DirectionDoorLeadsIn K_unchecked_function = DirectionDoorLeadsIn_B __assimilated=1
			package TestVisibility_fn _function
				symbol public misc TestVisibility
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestVisibility_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc B
					symbol external misc OffersLight --> /main/template/functions/OffersLight_fn/OffersLight
					symbol external misc parent --> /main/veneer/parent
					symbol external misc CoreOf --> /main/template/functions/CoreOf_fn/CoreOf
					symbol external misc plug_00479 --> /main/template/variables/suppress_scope_loops_var/suppress_scope_loops
					symbol external misc TestScope --> /main/template/functions/TestScope_fn/TestScope
					local A K_unchecked
					local B K_unchecked
					code
						inv !if
							inv !not
								inv OffersLight
									inv parent
										inv CoreOf
											val K_unchecked A
							code
								inv !return
									val K_unchecked 0
						inv !if
							val K_unchecked suppress_scope_loops
							code
								inv !return
									val K_unchecked 1
						inv !return
							inv TestScope
								val K_unchecked B
								val K_unchecked A
				constant TestVisibility K_unchecked_function = TestVisibility_B __assimilated=1
			package TestTouchability_fn _function
				symbol public misc TestTouchability
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestTouchability_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc B
					symbol private misc rv
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00154 --> /main/connectors/plug_00154
					symbol external misc MoveFloatingObjects --> /main/template/functions/MoveFloatingObjects_fn/MoveFloatingObjects
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc TestScope --> /main/template/functions/TestScope_fn/TestScope
					symbol external misc ObjectIsUntouchable --> /main/template/functions/ObjectIsUntouchable_fn/ObjectIsUntouchable
					local A K_unchecked
					local B K_unchecked
					local rv K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked A
								inv !alternative
									val K_unchecked plug_00153
									val K_unchecked plug_00154
							code
								inv MoveFloatingObjects
									inv LocationOf
										val K_unchecked B
						inv !if
							inv !ofclass
								val K_unchecked B
								inv !alternative
									val K_unchecked plug_00153
									val K_unchecked plug_00154
							code
								inv MoveFloatingObjects
									inv LocationOf
										val K_unchecked A
						inv !ifelse
							inv !eq
								inv TestScope
									val K_unchecked B
									val K_unchecked A
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked rv
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked rv
									inv ObjectIsUntouchable
										val K_unchecked B
										val K_unchecked 1
										val K_unchecked A
						inv !if
							inv !ofclass
								val K_unchecked A
								inv !alternative
									val K_unchecked plug_00153
									val K_unchecked plug_00154
							code
								inv MoveFloatingObjects
						inv !if
							val K_unchecked rv
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant TestTouchability K_unchecked_function = TestTouchability_B __assimilated=1
			package TestConcealment_fn _function
				symbol public misc TestConcealment
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TestConcealment_B _code
					symbol private misc A
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc B
					symbol external misc plug_00138 --> /main/connectors/plug_00138
					symbol external misc plug_00480 --> /main/template/variables/particular_possession_var/particular_possession
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc DECIDING_CONCEALED_POSSESS_ACT --> /main/template/constants/DECIDING_CONCEALED_POSSESS_ACT_con/DECIDING_CONCEALED_POSSESS_ACT
					local A K_unchecked
					local B K_unchecked
					code
						inv !if
							inv !and
								inv !ofclass
									val K_unchecked A
									val K_unchecked plug_00138
								inv !ofclass
									val K_unchecked B
									val K_unchecked plug_00138
							code
								inv !store
									reference
										val K_unchecked particular_possession
									val K_unchecked B
								inv !if
									inv CarryOutActivity
										val K_unchecked DECIDING_CONCEALED_POSSESS_ACT
										val K_unchecked A
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant TestConcealment K_unchecked_function = TestConcealment_B __assimilated=1
			package DECIMAL_TOKEN_fn _function
				symbol public misc DECIMAL_TOKEN
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DECIMAL_TOKEN_B _code
					symbol private misc wnc
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc wna
					symbol private misc r
					symbol private misc n
					symbol private misc wa
					symbol private misc wl
					symbol private misc sign
					symbol private misc base
					symbol private misc digit
					symbol private misc digit_count
					symbol private misc original_wn
					symbol private misc group_wn
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00481 --> /main/connectors/plug_00481
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc ParseTokenStopped --> /main/template/functions/ParseTokenStopped_fn/ParseTokenStopped
					symbol external misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
					symbol external misc NUMBER_TOKEN --> /main/template/constants/NUMBER_TOKEN_con/NUMBER_TOKEN
					symbol external misc GPR_NUMBER --> /main/template/constants/GPR_NUMBER_con/GPR_NUMBER
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc WordLength --> /main/template/functions/WordLength_fn/WordLength
					local wnc K_unchecked
					local wna K_unchecked
					local r K_unchecked
					local n K_unchecked
					local wa K_unchecked
					local wl K_unchecked
					local sign K_unchecked
					local base K_unchecked
					local digit K_unchecked
					local digit_count K_unchecked
					local original_wn K_unchecked
					local group_wn K_unchecked
					code
						inv !store
							reference
								val K_unchecked wnc
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked original_wn
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked group_wn
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked r
							inv plug_00481
						inv !if
							inv !ne
								val K_unchecked r
								val K_unchecked GPR_FAIL
							code
								inv !return
									val K_unchecked r
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked wnc
						inv !store
							reference
								val K_unchecked r
							inv ParseTokenStopped
								val K_unchecked ELEMENTARY_TT
								val K_unchecked NUMBER_TOKEN
						inv !if
							inv !and
								inv !eq
									val K_unchecked r
									val K_unchecked GPR_NUMBER
								inv !ne
									val K_unchecked parsed_number
									val K_unchecked 10000
							code
								inv !return
									val K_unchecked r
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked wnc
						inv !store
							reference
								val K_unchecked wa
							inv WordAddress
								val K_unchecked wn
						inv !store
							reference
								val K_unchecked wl
							inv WordLength
								val K_unchecked wn
						inv !store
							reference
								val K_unchecked sign
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked base
							val K_unchecked 10
						inv !store
							reference
								val K_unchecked digit_count
							val K_unchecked 0
						inv !if
							inv !ne
								inv !lookupbyte
									val K_unchecked wa
									val K_unchecked 0
								inv !alternative
									inv !alternative
										inv !alternative
											inv !alternative
												inv !alternative
													inv !alternative
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			val K_unchecked 45
																			val K_unchecked 36
																		val K_unchecked 48
																	val K_unchecked 49
																val K_unchecked 50
															val K_unchecked 51
														val K_unchecked 52
													val K_unchecked 53
												val K_unchecked 54
											val K_unchecked 55
										val K_unchecked 56
									val K_unchecked 57
							code
								inv !return
									val K_unchecked GPR_FAIL
						inv !if
							inv !eq
								inv !lookupbyte
									val K_unchecked wa
									val K_unchecked 0
								val K_unchecked 45
							code
								inv !store
									reference
										val K_unchecked sign
									val K_unchecked -1
								inv !postdecrement
									reference
										val K_unchecked wl
								inv !postincrement
									reference
										val K_unchecked wa
						inv !if
							inv !eq
								val K_unchecked wl
								val K_unchecked 0
							code
								inv !return
									val K_unchecked GPR_FAIL
						inv !store
							reference
								val K_unchecked n
							val K_unchecked 0
						inv !while
							inv !gt
								val K_unchecked wl
								val K_unchecked 0
							code
								inv !ifelse
									inv !ge
										inv !lookupbyte
											val K_unchecked wa
											val K_unchecked 0
										val K_unchecked 97
									code
										inv !store
											reference
												val K_unchecked digit
											inv !plus
												inv !minus
													inv !lookupbyte
														val K_unchecked wa
														val K_unchecked 0
													val K_unchecked 97
												val K_unchecked 10
									code
										inv !store
											reference
												val K_unchecked digit
											inv !minus
												inv !lookupbyte
													val K_unchecked wa
													val K_unchecked 0
												val K_unchecked 48
								inv !postincrement
									reference
										val K_unchecked digit_count
								inv !switch
									val K_unchecked base
									code
										inv !case
											val K_unchecked 2
											code
												inv !if
													inv !eq
														val K_unchecked digit_count
														val K_unchecked 17
													code
														inv !return
															val K_unchecked GPR_FAIL
										inv !case
											val K_unchecked 10
											code
												inv !if
													inv !eq
														val K_unchecked digit_count
														val K_unchecked 11
													code
														inv !return
															val K_unchecked GPR_FAIL
												inv !if
													inv !eq
														val K_unchecked digit_count
														val K_unchecked 10
													code
														inv !if
															inv !gt
																val K_unchecked n
																val K_unchecked 214748364
															code
																inv !return
																	val K_unchecked GPR_FAIL
														inv !if
															inv !eq
																val K_unchecked n
																val K_unchecked 214748364
															code
																inv !if
																	inv !and
																		inv !eq
																			val K_unchecked sign
																			val K_unchecked 1
																		inv !gt
																			val K_unchecked digit
																			val K_unchecked 7
																	code
																		inv !return
																			val K_unchecked GPR_FAIL
																inv !if
																	inv !and
																		inv !eq
																			val K_unchecked sign
																			val K_unchecked -1
																		inv !gt
																			val K_unchecked digit
																			val K_unchecked 8
																	code
																		inv !return
																			val K_unchecked GPR_FAIL
										inv !case
											val K_unchecked 16
											code
												inv !if
													inv !eq
														val K_unchecked digit_count
														val K_unchecked 5
													code
														inv !return
															val K_unchecked GPR_FAIL
								inv !ifelse
									inv !and
										inv !ge
											val K_unchecked digit
											val K_unchecked 0
										inv !lt
											val K_unchecked digit
											val K_unchecked base
									code
										inv !store
											reference
												val K_unchecked n
											inv !plus
												inv !times
													val K_unchecked base
													val K_unchecked n
												val K_unchecked digit
									code
										inv !return
											val K_unchecked GPR_FAIL
								inv !postdecrement
									reference
										val K_unchecked wl
								inv !postincrement
									reference
										val K_unchecked wa
						inv !store
							reference
								val K_unchecked parsed_number
							inv !times
								val K_unchecked n
								val K_unchecked sign
						inv !postincrement
							reference
								val K_unchecked wn
						inv !return
							val K_unchecked GPR_NUMBER
				constant DECIMAL_TOKEN K_unchecked_function = DECIMAL_TOKEN_B __assimilated=1
			package TRUTH_STATE_TOKEN_fn _function
				symbol public misc TRUTH_STATE_TOKEN
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TRUTH_STATE_TOKEN_B _code
					symbol private misc original_wn
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc wd
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00482 --> /main/connectors/plug_00482
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc GPR_NUMBER --> /main/template/constants/GPR_NUMBER_con/GPR_NUMBER
					local original_wn K_unchecked
					local wd K_unchecked
					code
						inv !store
							reference
								val K_unchecked original_wn
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked wd
							inv plug_00482
						inv !if
							inv !ne
								val K_unchecked wd
								val K_unchecked GPR_FAIL
							code
								inv !return
									val K_unchecked wd
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked original_wn
						inv !store
							reference
								val K_unchecked wd
							inv NextWordStopped
						inv !if
							inv !eq
								val K_unchecked wd
								val K_unchecked dw'true'
							code
								inv !store
									reference
										val K_unchecked parsed_number
									val K_unchecked 1
								inv !return
									val K_unchecked GPR_NUMBER
						inv !if
							inv !eq
								val K_unchecked wd
								val K_unchecked dw'false'
							code
								inv !store
									reference
										val K_unchecked parsed_number
									val K_unchecked 0
								inv !return
									val K_unchecked GPR_NUMBER
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked original_wn
						inv !return
							val K_unchecked GPR_FAIL
				constant TRUTH_STATE_TOKEN K_unchecked_function = TRUTH_STATE_TOKEN_B __assimilated=1
			package NUMBER_TY_Abs_fn _function
				symbol public misc NUMBER_TY_Abs
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NUMBER_TY_Abs_B _code
					symbol private misc x
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked x
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked x
						inv !return
							val K_unchecked x
				constant NUMBER_TY_Abs K_unchecked_function = NUMBER_TY_Abs_B __assimilated=1
			package REAL_NUMBER_TY_Say_fn _function
				symbol public misc REAL_NUMBER_TY_Say
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REAL_NUMBER_TY_Say_B _code
					symbol private misc real
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local real K_unchecked
					code
						inv !printnumber
							val K_unchecked real
				constant REAL_NUMBER_TY_Say K_unchecked_function = REAL_NUMBER_TY_Say_B __assimilated=1
			package REAL_NUMBER_TY_Compare_fn _function
				symbol public misc REAL_NUMBER_TY_Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package REAL_NUMBER_TY_Compare_B _code
					symbol private misc r1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc r2
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					local r1 K_unchecked
					local r2 K_unchecked
					code
						inv !return
							inv UnsignedCompare
								val K_unchecked r1
								val K_unchecked r2
				constant REAL_NUMBER_TY_Compare K_unchecked_function = REAL_NUMBER_TY_Compare_B __assimilated=1
			package RoundOffTime_fn _function
				symbol public misc RoundOffTime
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RoundOffTime_B _code
					symbol private misc t1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc t2
					local t1 K_unchecked
					local t2 K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked t1
								val K_unchecked 0
							code
								inv !return
									inv !times
										inv !divide
											inv !plus
												val K_unchecked t1
												inv !divide
													val K_unchecked t2
													val K_unchecked 2
											val K_unchecked t2
										val K_unchecked t2
						inv !return
							inv !unaryminus
								inv !times
									inv !divide
										inv !plus
											inv !unaryminus
												val K_unchecked t1
											inv !divide
												val K_unchecked t2
												val K_unchecked 2
										val K_unchecked t2
									val K_unchecked t2
				constant RoundOffTime K_unchecked_function = RoundOffTime_B __assimilated=1
			package NUMBER_TY_to_TIME_TY_fn _function
				symbol public misc NUMBER_TY_to_TIME_TY
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package NUMBER_TY_to_TIME_TY_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local n K_unchecked
					code
						inv !store
							reference
								val K_unchecked n
							inv !modulo
								val K_unchecked n
								val K_unchecked 1440
						inv !if
							inv !lt
								val K_unchecked n
								val K_unchecked 0
							code
								inv !return
									inv !plus
										val K_unchecked n
										val K_unchecked 1440
						inv !return
							val K_unchecked n
				constant NUMBER_TY_to_TIME_TY K_unchecked_function = NUMBER_TY_to_TIME_TY_B __assimilated=1
			package SquareRoot_fn _function
				symbol public misc SquareRoot
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SquareRoot_B _code
					symbol private misc num
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc op
					symbol private misc res
					symbol private misc one
					symbol private misc n
					symbol private misc x
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_NEGATIVEROOT --> /main/template/constants/RTP_NEGATIVEROOT_con/RTP_NEGATIVEROOT
					symbol external misc plug_00483 --> /main/connectors/plug_00483
					local num K_unchecked
					local op K_unchecked
					local res K_unchecked
					local one K_unchecked
					local n K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked num
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_NEGATIVEROOT
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked op
							val K_unchecked num
						inv !if
							inv !lt
								val K_unchecked num
								val K_unchecked 0
							code
								inv RunTimeProblem
									val K_unchecked RTP_NEGATIVEROOT
								inv !return
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked one
								val K_unchecked plug_00483
							inv !gt
								val K_unchecked one
								val K_unchecked op
							inv !store
								reference
									val K_unchecked one
								inv !divide
									val K_unchecked one
									val K_unchecked 4
							code
						inv !while
							inv !ne
								val K_unchecked one
								val K_unchecked 0
							code
								inv !ifelse
									inv !ge
										val K_unchecked op
										inv !plus
											val K_unchecked res
											val K_unchecked one
									code
										inv !store
											reference
												val K_unchecked op
											inv !minus
												inv !minus
													val K_unchecked op
													val K_unchecked res
												val K_unchecked one
										inv !store
											reference
												val K_unchecked res
											inv !plus
												inv !divide
													val K_unchecked res
													val K_unchecked 2
												val K_unchecked one
									code
										inv !store
											reference
												val K_unchecked res
											inv !divide
												val K_unchecked res
												val K_unchecked 2
								inv !store
									reference
										val K_unchecked one
									inv !divide
										val K_unchecked one
										val K_unchecked 4
						inv !return
							val K_unchecked res
				constant SquareRoot K_unchecked_function = SquareRoot_B __assimilated=1
			package CubeRoot_fn _function
				symbol public misc CubeRoot
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CubeRoot_B _code
					symbol private misc num
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc neg
					symbol private misc x
					symbol private misc y
					symbol private misc n
					symbol external misc SquareRoot --> /main/template/functions/SquareRoot_fn/SquareRoot
					local num K_unchecked
					local neg K_unchecked
					local x K_unchecked
					local y K_unchecked
					local n K_unchecked
					code
						inv !ifelse
							inv !lt
								val K_unchecked num
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked x
									inv !unaryminus
										inv SquareRoot
											inv !unaryminus
												val K_unchecked num
							code
								inv !store
									reference
										val K_unchecked x
									inv SquareRoot
										val K_unchecked num
						inv !for
							inv !store
								reference
									val K_unchecked n
								val K_unchecked 0
							inv !and
								inv !ne
									val K_unchecked y
									val K_unchecked x
								inv !lt
									inv !postincrement
										reference
											val K_unchecked n
									val K_unchecked 100
							inv !sequential
								inv !store
									reference
										val K_unchecked y
									val K_unchecked x
								inv !store
									reference
										val K_unchecked x
									inv !divide
										inv !plus
											inv !times
												val K_unchecked 2
												val K_unchecked x
											inv !divide
												inv !divide
													val K_unchecked num
													val K_unchecked x
												val K_unchecked x
										val K_unchecked 3
							code
						inv !return
							val K_unchecked x
				constant CubeRoot K_unchecked_function = CubeRoot_B __assimilated=1
			package PrintTimeOfDay_fn _function
				symbol public misc PrintTimeOfDay
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintTimeOfDay_B _code
					symbol private misc t
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc h
					symbol private misc aop
					symbol external misc TWELVE_HOURS --> /main/template/constants/TWELVE_HOURS_con/TWELVE_HOURS
					symbol external misc ONE_HOUR --> /main/template/constants/ONE_HOUR_con/ONE_HOUR
					local t K_unchecked
					local h K_unchecked
					local aop K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked t
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "<no time>"
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !ge
								val K_unchecked t
								val K_unchecked TWELVE_HOURS
							code
								inv !store
									reference
										val K_unchecked aop
									val K_unchecked "pm"
								inv !store
									reference
										val K_unchecked t
									inv !minus
										val K_unchecked t
										val K_unchecked TWELVE_HOURS
							code
								inv !store
									reference
										val K_unchecked aop
									val K_unchecked "am"
						inv !store
							reference
								val K_unchecked h
							inv !divide
								val K_unchecked t
								val K_unchecked ONE_HOUR
						inv !if
							inv !eq
								val K_unchecked h
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked h
									val K_unchecked 12
						inv !printnumber
							val K_unchecked h
						inv !print
							val K_unchecked ":"
						inv !if
							inv !lt
								inv !modulo
									val K_unchecked t
									val K_unchecked ONE_HOUR
								val K_unchecked 10
							code
								inv !print
									val K_unchecked "0"
						inv !printnumber
							inv !modulo
								val K_unchecked t
								val K_unchecked ONE_HOUR
						inv !print
							val K_unchecked " "
						inv !printstring
							val K_unchecked aop
				constant PrintTimeOfDay K_unchecked_function = PrintTimeOfDay_B __assimilated=1
			package PrintTimeOfDayEnglish_fn _function
				symbol public misc PrintTimeOfDayEnglish
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintTimeOfDayEnglish_B _code
					symbol private misc t
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc h
					symbol private misc m
					symbol private misc dir
					symbol private misc aop
					symbol external misc ONE_HOUR --> /main/template/constants/ONE_HOUR_con/ONE_HOUR
					symbol external misc HALF_HOUR --> /main/template/constants/HALF_HOUR_con/HALF_HOUR
					symbol external misc QUARTER_HOUR --> /main/template/constants/QUARTER_HOUR_con/QUARTER_HOUR
					local t K_unchecked
					local h K_unchecked
					local m K_unchecked
					local dir K_unchecked
					local aop K_unchecked
					code
						inv !store
							reference
								val K_unchecked h
							inv !modulo
								inv !divide
									val K_unchecked t
									val K_unchecked ONE_HOUR
								val K_unchecked 12
						inv !store
							reference
								val K_unchecked m
							inv !modulo
								val K_unchecked t
								val K_unchecked ONE_HOUR
						inv !if
							inv !eq
								val K_unchecked h
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked h
									val K_unchecked 12
						inv !if
							inv !eq
								val K_unchecked m
								val K_unchecked 0
							code
								inv !printnlnumber
									val K_unchecked h
								inv !print
									val K_unchecked " o'clock"
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked dir
							val K_unchecked "past"
						inv !if
							inv !gt
								val K_unchecked m
								val K_unchecked HALF_HOUR
							code
								inv !store
									reference
										val K_unchecked m
									inv !minus
										val K_unchecked ONE_HOUR
										val K_unchecked m
								inv !store
									reference
										val K_unchecked h
									inv !modulo
										inv !plus
											val K_unchecked h
											val K_unchecked 1
										val K_unchecked 12
								inv !if
									inv !eq
										val K_unchecked h
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked h
											val K_unchecked 12
								inv !store
									reference
										val K_unchecked dir
									val K_unchecked "to"
						inv !switch
							val K_unchecked m
							code
								inv !case
									val K_unchecked QUARTER_HOUR
									code
										inv !print
											val K_unchecked "quarter"
								inv !case
									val K_unchecked HALF_HOUR
									code
										inv !print
											val K_unchecked "half"
								inv !default
									code
										inv !printnlnumber
											val K_unchecked m
										inv !if
											inv !ne
												inv !modulo
													val K_unchecked m
													val K_unchecked 5
												val K_unchecked 0
											code
												inv !ifelse
													inv !eq
														val K_unchecked m
														val K_unchecked 1
													code
														inv !print
															val K_unchecked " minute"
													code
														inv !print
															val K_unchecked " minutes"
						inv !print
							val K_unchecked " "
						inv !printstring
							val K_unchecked dir
						inv !print
							val K_unchecked " "
						inv !printnlnumber
							val K_unchecked h
				constant PrintTimeOfDayEnglish K_unchecked_function = PrintTimeOfDayEnglish_B __assimilated=1
			package TIME_TOKEN_fn _function
				symbol public misc TIME_TOKEN
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TIME_TOKEN_B _code
					symbol private misc first_word
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc second_word
					symbol private misc at
					symbol private misc length
					symbol private misc flag
					symbol private misc illegal_char
					symbol private misc offhour
					symbol private misc hr
					symbol private misc mn
					symbol private misc i
					symbol private misc original_wn
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc plug_00484 --> /main/connectors/plug_00484
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc GPR_NUMBER --> /main/template/constants/GPR_NUMBER_con/GPR_NUMBER
					symbol external misc TWELVE_HOURS --> /main/template/constants/TWELVE_HOURS_con/TWELVE_HOURS
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc WordLength --> /main/template/functions/WordLength_fn/WordLength
					symbol external misc HoursMinsWordToTime --> /main/template/functions/HoursMinsWordToTime_fn/HoursMinsWordToTime
					symbol external misc HALF_HOUR --> /main/template/constants/HALF_HOUR_con/HALF_HOUR
					symbol external misc QUARTER_HOUR --> /main/template/constants/QUARTER_HOUR_con/QUARTER_HOUR
					symbol external misc TryNumber --> /main/template/functions/TryNumber_fn/TryNumber
					symbol external misc ONE_HOUR --> /main/template/constants/ONE_HOUR_con/ONE_HOUR
					local first_word K_unchecked
					local second_word K_unchecked
					local at K_unchecked
					local length K_unchecked
					local flag K_unchecked
					local illegal_char K_unchecked
					local offhour K_unchecked
					local hr K_unchecked
					local mn K_unchecked
					local i K_unchecked
					local original_wn K_unchecked
					code
						inv !store
							reference
								val K_unchecked original_wn
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked i
							inv plug_00484
						inv !if
							inv !ne
								val K_unchecked i
								val K_unchecked GPR_FAIL
							code
								inv !return
									val K_unchecked i
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked original_wn
						inv !store
							reference
								val K_unchecked first_word
							inv NextWordStopped
						inv !switch
							val K_unchecked first_word
							code
								inv !case
									val K_unchecked dw'midnight'
									code
										inv !store
											reference
												val K_unchecked parsed_number
											val K_unchecked 0
										inv !return
											val K_unchecked GPR_NUMBER
								inv !case
									inv !alternativecase
										val K_unchecked dw'midday'
										val K_unchecked dw'noon'
									code
										inv !store
											reference
												val K_unchecked parsed_number
											val K_unchecked TWELVE_HOURS
										inv !return
											val K_unchecked GPR_NUMBER
						inv !store
							reference
								val K_unchecked at
							inv WordAddress
								inv !minus
									val K_unchecked wn
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked length
							inv WordLength
								inv !minus
									val K_unchecked wn
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked length
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !switch
									inv !lookupbyte
										val K_unchecked at
										val K_unchecked i
									code
										inv !case
											val K_unchecked 58
											code
												inv !ifelse
													inv !and
														inv !and
															inv !eq
																val K_unchecked flag
																val K_unchecked 0
															inv !gt
																val K_unchecked i
																val K_unchecked 0
														inv !lt
															val K_unchecked i
															inv !minus
																val K_unchecked length
																val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked flag
															val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked illegal_char
															val K_unchecked 1
										inv !case
											inv !alternativecase
												inv !alternativecase
													inv !alternativecase
														inv !alternativecase
															inv !alternativecase
																inv !alternativecase
																	inv !alternativecase
																		inv !alternativecase
																			inv !alternativecase
																				val K_unchecked 48
																				val K_unchecked 49
																			val K_unchecked 50
																		val K_unchecked 51
																	val K_unchecked 52
																val K_unchecked 53
															val K_unchecked 54
														val K_unchecked 55
													val K_unchecked 56
												val K_unchecked 57
											code
										inv !default
											code
												inv !store
													reference
														val K_unchecked illegal_char
													val K_unchecked 1
						inv !if
							inv !or
								inv !or
									inv !lt
										val K_unchecked length
										val K_unchecked 3
									inv !gt
										val K_unchecked length
										val K_unchecked 5
								val K_unchecked illegal_char
							code
								inv !store
									reference
										val K_unchecked flag
									val K_unchecked 0
						inv !if
							val K_unchecked flag
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !ne
										inv !lookupbyte
											val K_unchecked at
											val K_unchecked i
										val K_unchecked 58
									inv !sequential
										inv !postincrement
											reference
												val K_unchecked i
										inv !store
											reference
												val K_unchecked hr
											inv !times
												val K_unchecked hr
												val K_unchecked 10
									code
										inv !store
											reference
												val K_unchecked hr
											inv !minus
												inv !plus
													val K_unchecked hr
													inv !lookupbyte
														val K_unchecked at
														val K_unchecked i
												val K_unchecked 48
								inv !store
									reference
										val K_unchecked hr
									inv !divide
										val K_unchecked hr
										val K_unchecked 10
								inv !for
									inv !postincrement
										reference
											val K_unchecked i
									inv !lt
										val K_unchecked i
										val K_unchecked length
									inv !sequential
										inv !postincrement
											reference
												val K_unchecked i
										inv !store
											reference
												val K_unchecked mn
											inv !times
												val K_unchecked mn
												val K_unchecked 10
									code
										inv !store
											reference
												val K_unchecked mn
											inv !minus
												inv !plus
													val K_unchecked mn
													inv !lookupbyte
														val K_unchecked at
														val K_unchecked i
												val K_unchecked 48
								inv !store
									reference
										val K_unchecked mn
									inv !divide
										val K_unchecked mn
										val K_unchecked 10
								inv !store
									reference
										val K_unchecked second_word
									inv NextWordStopped
								inv !store
									reference
										val K_unchecked parsed_number
									inv HoursMinsWordToTime
										val K_unchecked hr
										val K_unchecked mn
										val K_unchecked second_word
								inv !if
									inv !eq
										val K_unchecked parsed_number
										val K_unchecked -1
									code
										inv !return
											val K_unchecked GPR_FAIL
								inv !if
									inv !ne
										val K_unchecked second_word
										inv !alternative
											val K_unchecked dw'pm'
											val K_unchecked dw'am'
									code
										inv !postdecrement
											reference
												val K_unchecked wn
								inv !return
									val K_unchecked GPR_NUMBER
						inv !store
							reference
								val K_unchecked offhour
							val K_unchecked -1
						inv !if
							inv !eq
								val K_unchecked first_word
								val K_unchecked dw'half'
							code
								inv !store
									reference
										val K_unchecked offhour
									val K_unchecked HALF_HOUR
						inv !if
							inv !eq
								val K_unchecked first_word
								val K_unchecked dw'quarter'
							code
								inv !store
									reference
										val K_unchecked offhour
									val K_unchecked QUARTER_HOUR
						inv !if
							inv !lt
								val K_unchecked offhour
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked offhour
									inv TryNumber
										inv !minus
											val K_unchecked wn
											val K_unchecked 1
						inv !if
							inv !or
								inv !lt
									val K_unchecked offhour
									val K_unchecked 0
								inv !ge
									val K_unchecked offhour
									val K_unchecked ONE_HOUR
							code
								inv !return
									val K_unchecked GPR_FAIL
						inv !store
							reference
								val K_unchecked second_word
							inv NextWordStopped
						inv !switch
							val K_unchecked second_word
							code
								inv !case
									inv !alternativecase
										inv !alternativecase
											inv !alternativecase
												val K_unchecked dw'o^clock'
												val K_unchecked dw'am'
											val K_unchecked dw'pm'
										inv !unaryminus
											val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked hr
											val K_unchecked offhour
										inv !if
											inv !gt
												val K_unchecked hr
												val K_unchecked 12
											code
												inv !return
													val K_unchecked GPR_FAIL
								inv !case
									inv !alternativecase
										val K_unchecked dw'to'
										val K_unchecked dw'past'
									code
										inv !store
											reference
												val K_unchecked mn
											val K_unchecked offhour
										inv !store
											reference
												val K_unchecked hr
											inv TryNumber
												val K_unchecked wn
										inv !if
											inv !le
												val K_unchecked hr
												val K_unchecked 0
											code
												inv !switch
													inv NextWordStopped
													code
														inv !case
															inv !alternativecase
																val K_unchecked dw'noon'
																val K_unchecked dw'midday'
															code
																inv !store
																	reference
																		val K_unchecked hr
																	val K_unchecked 12
														inv !case
															val K_unchecked dw'midnight'
															code
																inv !store
																	reference
																		val K_unchecked hr
																	val K_unchecked 0
														inv !default
															code
																inv !return
																	val K_unchecked GPR_FAIL
										inv !if
											inv !ge
												val K_unchecked hr
												val K_unchecked 13
											code
												inv !return
													val K_unchecked GPR_FAIL
										inv !if
											inv !eq
												val K_unchecked second_word
												val K_unchecked dw'to'
											code
												inv !store
													reference
														val K_unchecked mn
													inv !minus
														val K_unchecked ONE_HOUR
														val K_unchecked mn
												inv !postdecrement
													reference
														val K_unchecked hr
												inv !if
													inv !lt
														val K_unchecked hr
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked hr
															val K_unchecked 23
										inv !postincrement
											reference
												val K_unchecked wn
										inv !store
											reference
												val K_unchecked second_word
											inv NextWordStopped
								inv !default
									code
										inv !store
											reference
												val K_unchecked hr
											val K_unchecked offhour
										inv !store
											reference
												val K_unchecked mn
											inv TryNumber
												inv !predecrement
													reference
														val K_unchecked wn
										inv !if
											inv !or
												inv !lt
													val K_unchecked mn
													val K_unchecked 0
												inv !ge
													val K_unchecked mn
													val K_unchecked ONE_HOUR
											code
												inv !return
													val K_unchecked GPR_FAIL
										inv !postincrement
											reference
												val K_unchecked wn
										inv !store
											reference
												val K_unchecked second_word
											inv NextWordStopped
						inv !store
							reference
								val K_unchecked parsed_number
							inv HoursMinsWordToTime
								val K_unchecked hr
								val K_unchecked mn
								val K_unchecked second_word
						inv !if
							inv !lt
								val K_unchecked parsed_number
								val K_unchecked 0
							code
								inv !return
									val K_unchecked GPR_FAIL
						inv !if
							inv !ne
								val K_unchecked second_word
								inv !alternative
									inv !alternative
										val K_unchecked dw'pm'
										val K_unchecked dw'am'
									val K_unchecked dw'o^clock'
							code
								inv !postdecrement
									reference
										val K_unchecked wn
						inv !return
							val K_unchecked GPR_NUMBER
				constant TIME_TOKEN K_unchecked_function = TIME_TOKEN_B __assimilated=1
			package HoursMinsWordToTime_fn _function
				symbol public misc HoursMinsWordToTime
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HoursMinsWordToTime_B _code
					symbol private misc hour
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc minute
					symbol private misc word
					symbol private misc x
					symbol external misc ONE_HOUR --> /main/template/constants/ONE_HOUR_con/ONE_HOUR
					symbol external misc TWELVE_HOURS --> /main/template/constants/TWELVE_HOURS_con/TWELVE_HOURS
					local hour K_unchecked
					local minute K_unchecked
					local word K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !ge
								val K_unchecked hour
								val K_unchecked 24
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !if
							inv !ge
								val K_unchecked minute
								val K_unchecked ONE_HOUR
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked x
							inv !plus
								inv !times
									val K_unchecked hour
									val K_unchecked ONE_HOUR
								val K_unchecked minute
						inv !if
							inv !ge
								val K_unchecked hour
								val K_unchecked 13
							code
								inv !return
									val K_unchecked x
						inv !store
							reference
								val K_unchecked x
							inv !modulo
								val K_unchecked x
								val K_unchecked TWELVE_HOURS
						inv !if
							inv !eq
								val K_unchecked word
								val K_unchecked dw'pm'
							code
								inv !store
									reference
										val K_unchecked x
									inv !plus
										val K_unchecked x
										val K_unchecked TWELVE_HOURS
						inv !if
							inv !and
								inv !ne
									val K_unchecked word
									inv !alternative
										val K_unchecked dw'am'
										val K_unchecked dw'pm'
								inv !eq
									val K_unchecked hour
									val K_unchecked 12
							code
								inv !store
									reference
										val K_unchecked x
									inv !plus
										val K_unchecked x
										val K_unchecked TWELVE_HOURS
						inv !return
							val K_unchecked x
				constant HoursMinsWordToTime K_unchecked_function = HoursMinsWordToTime_B __assimilated=1
			package RELATIVE_TIME_TOKEN_fn _function
				symbol public misc RELATIVE_TIME_TOKEN
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATIVE_TIME_TOKEN_B _code
					symbol private misc first_word
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc second_word
					symbol private misc offhour
					symbol private misc mult
					symbol private misc mn
					symbol private misc original_wn
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc TryNumber --> /main/template/functions/TryNumber_fn/TryNumber
					symbol external misc HALF_HOUR --> /main/template/constants/HALF_HOUR_con/HALF_HOUR
					symbol external misc QUARTER_HOUR --> /main/template/constants/QUARTER_HOUR_con/QUARTER_HOUR
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc GPR_NUMBER --> /main/template/constants/GPR_NUMBER_con/GPR_NUMBER
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					local first_word K_unchecked
					local second_word K_unchecked
					local offhour K_unchecked
					local mult K_unchecked
					local mn K_unchecked
					local original_wn K_unchecked
					code
						inv !store
							reference
								val K_unchecked original_wn
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked original_wn
						inv !store
							reference
								val K_unchecked first_word
							inv NextWordStopped
						inv !postdecrement
							reference
								val K_unchecked wn
						inv !ifelse
							inv !eq
								val K_unchecked first_word
								inv !alternative
									val K_unchecked dw'an'
									val K_unchecked dw'a//'
							code
								inv !store
									reference
										val K_unchecked mn
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked mn
									inv TryNumber
										val K_unchecked wn
						inv !if
							inv !eq
								val K_unchecked mn
								val K_unchecked -1000
							code
								inv !store
									reference
										val K_unchecked first_word
									inv NextWordStopped
								inv !if
									inv !eq
										val K_unchecked first_word
										val K_unchecked dw'half'
									code
										inv !store
											reference
												val K_unchecked offhour
											val K_unchecked HALF_HOUR
								inv !if
									inv !eq
										val K_unchecked first_word
										val K_unchecked dw'quarter'
									code
										inv !store
											reference
												val K_unchecked offhour
											val K_unchecked QUARTER_HOUR
								inv !if
									inv !gt
										val K_unchecked offhour
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked second_word
											inv NextWordStopped
										inv !if
											inv !eq
												val K_unchecked second_word
												val K_unchecked dw'of'
											code
												inv !store
													reference
														val K_unchecked second_word
													inv NextWordStopped
										inv !if
											inv !eq
												val K_unchecked second_word
												val K_unchecked dw'an'
											code
												inv !store
													reference
														val K_unchecked second_word
													inv NextWordStopped
										inv !if
											inv !eq
												val K_unchecked second_word
												val K_unchecked dw'hour'
											code
												inv !store
													reference
														val K_unchecked parsed_number
													val K_unchecked offhour
												inv !return
													val K_unchecked GPR_NUMBER
								inv !return
									val K_unchecked GPR_FAIL
						inv !postincrement
							reference
								val K_unchecked wn
						inv !store
							reference
								val K_unchecked first_word
							inv NextWordStopped
						inv !switch
							val K_unchecked first_word
							code
								inv !case
									inv !alternativecase
										val K_unchecked dw'minutes'
										val K_unchecked dw'minute'
									code
										inv !store
											reference
												val K_unchecked mult
											val K_unchecked 1
								inv !case
									inv !alternativecase
										val K_unchecked dw'hours'
										val K_unchecked dw'hour'
									code
										inv !store
											reference
												val K_unchecked mult
											val K_unchecked 60
								inv !default
									code
										inv !return
											val K_unchecked GPR_FAIL
						inv !store
							reference
								val K_unchecked parsed_number
							inv !times
								val K_unchecked mn
								val K_unchecked mult
						inv !if
							inv !eq
								val K_unchecked mult
								val K_unchecked 60
							code
								inv !store
									reference
										val K_unchecked mn
									inv TryNumber
										val K_unchecked wn
								inv !if
									inv !ne
										val K_unchecked mn
										val K_unchecked -1000
									code
										inv !postincrement
											reference
												val K_unchecked wn
										inv !store
											reference
												val K_unchecked first_word
											inv NextWordStopped
										inv !ifelse
											inv !eq
												val K_unchecked first_word
												inv !alternative
													val K_unchecked dw'minutes'
													val K_unchecked dw'minute'
											code
												inv !store
													reference
														val K_unchecked parsed_number
													inv !plus
														val K_unchecked parsed_number
														val K_unchecked mn
											code
												inv !store
													reference
														val K_unchecked wn
													inv !minus
														val K_unchecked wn
														val K_unchecked 2
						inv !return
							val K_unchecked GPR_NUMBER
				constant RELATIVE_TIME_TOKEN K_unchecked_function = RELATIVE_TIME_TOKEN_B __assimilated=1
			package SCENE_CHANGE_MACHINERY_R_fn _function
				symbol public misc SCENE_CHANGE_MACHINERY_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SCENE_CHANGE_MACHINERY_R_B _code
					symbol external misc plug_00485 --> /main/connectors/plug_00485
					code
						inv plug_00485
				constant SCENE_CHANGE_MACHINERY_R K_unchecked_function = SCENE_CHANGE_MACHINERY_R_B __assimilated=1
			package DuringSceneMatching_fn _function
				symbol public misc DuringSceneMatching
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DuringSceneMatching_B _code
					symbol private misc prop
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sc
					symbol external misc NUMBER_SCENES_CREATED --> /main/template/constants/NUMBER_SCENES_CREATED_con/NUMBER_SCENES_CREATED
					symbol external misc scene_status --> /main/template/arrays/scene_status_arr/scene_status
					local prop K_unchecked
					local sc K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked sc
								val K_unchecked 0
							inv !lt
								val K_unchecked sc
								val K_unchecked NUMBER_SCENES_CREATED
							inv !postincrement
								reference
									val K_unchecked sc
							code
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked scene_status
												val K_unchecked sc
											val K_unchecked 1
										inv !indirect1
											val K_unchecked prop
											inv !plus
												val K_unchecked sc
												val K_unchecked 1
									code
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant DuringSceneMatching K_unchecked_function = DuringSceneMatching_B __assimilated=1
			package SceneUtility_fn _function
				symbol public misc SceneUtility
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SceneUtility_B _code
					symbol private misc sc
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol external misc scene_endings --> /main/template/arrays/scene_endings_arr/scene_endings
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_SCENEHASNTSTARTED --> /main/template/constants/RTP_SCENEHASNTSTARTED_con/RTP_SCENEHASNTSTARTED
					symbol external misc RTP_SCENEHASNTENDED --> /main/template/constants/RTP_SCENEHASNTENDED_con/RTP_SCENEHASNTENDED
					symbol external misc plug_00314 --> /main/template/variables/the_time_var/the_time
					symbol external misc scene_started --> /main/template/arrays/scene_started_arr/scene_started
					symbol external misc TWENTY_FOUR_HOURS --> /main/template/constants/TWENTY_FOUR_HOURS_con/TWENTY_FOUR_HOURS
					symbol external misc scene_ended --> /main/template/arrays/scene_ended_arr/scene_ended
					local sc K_unchecked
					local task K_unchecked
					code
						inv !if
							inv !le
								val K_unchecked sc
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !ifelse
							inv !eq
								val K_unchecked task
								inv !alternative
									val K_unchecked 1
									val K_unchecked 2
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked scene_endings
											inv !minus
												val K_unchecked sc
												val K_unchecked 1
										val K_unchecked 0
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_SCENEHASNTSTARTED
												val K_unchecked sc
							code
								inv !if
									inv !le
										inv !lookup
											val K_unchecked scene_endings
											inv !minus
												val K_unchecked sc
												val K_unchecked 1
										val K_unchecked 1
									code
										inv !return
											inv RunTimeProblem
												val K_unchecked RTP_SCENEHASNTENDED
												val K_unchecked sc
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked 1
									code
										inv !return
											inv !modulo
												inv !minus
													val K_unchecked the_time
													inv !lookup
														val K_unchecked scene_started
														inv !minus
															val K_unchecked sc
															val K_unchecked 1
												val K_unchecked TWENTY_FOUR_HOURS
								inv !case
									val K_unchecked 2
									code
										inv !return
											inv !lookup
												val K_unchecked scene_started
												inv !minus
													val K_unchecked sc
													val K_unchecked 1
								inv !case
									val K_unchecked 3
									code
										inv !return
											inv !modulo
												inv !minus
													val K_unchecked the_time
													inv !lookup
														val K_unchecked scene_ended
														inv !minus
															val K_unchecked sc
															val K_unchecked 1
												val K_unchecked TWENTY_FOUR_HOURS
								inv !case
									val K_unchecked 4
									code
										inv !return
											inv !lookup
												val K_unchecked scene_ended
												inv !minus
													val K_unchecked sc
													val K_unchecked 1
				constant SceneUtility K_unchecked_function = SceneUtility_B __assimilated=1
			package XAbstractSub_fn _function
				symbol public misc XAbstractSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package XAbstractSub_B _code
					symbol external misc XTestMove --> /main/template/functions/XTestMove_fn/XTestMove
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					code
						inv !if
							inv XTestMove
								val K_unchecked noun
								val K_unchecked second
							code
								inv !return
									val K_unchecked 1
						inv !move
							val K_unchecked noun
							val K_unchecked second
						inv !printret
							val K_unchecked "[Abstracted.]"
				constant XAbstractSub K_unchecked_function = XAbstractSub_B __assimilated=1
			package XTestMove_fn _function
				symbol public misc XTestMove
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package XTestMove_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc dest
					symbol external misc InformLibrary --> /main/template/constants/InformLibrary_con/InformLibrary
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc CoreOfParentOfCoreOf --> /main/template/functions/CoreOfParentOfCoreOf_fn/CoreOfParentOfCoreOf
					local obj K_unchecked
					local dest K_unchecked
					code
						inv !if
							inv !le
								val K_unchecked obj
								val K_unchecked InformLibrary
							code
								inv !print
									val K_unchecked "[Can't move "
								inv !printname
									val K_unchecked obj
								inv !print
									val K_unchecked ": it's a system object.]"
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !if
							inv !propertyvalue
								val K_unchecked obj
								val K_unchecked component_parent
							code
								inv !print
									val K_unchecked "[Can't move "
								inv !printname
									val K_unchecked obj
								inv !print
									val K_unchecked ": it's part of "
								inv !printdef
									inv !propertyvalue
										val K_unchecked obj
										val K_unchecked component_parent
								inv !print
									val K_unchecked ".]"
								inv !print
									val K_unchecked "\n"
								inv !return
									val K_unchecked 1
						inv !while
							val K_unchecked dest
							code
								inv !if
									inv !eq
										val K_unchecked dest
										val K_unchecked obj
									code
										inv !print
											val K_unchecked "[Can't move "
										inv !printname
											val K_unchecked obj
										inv !print
											val K_unchecked ": it would contain itself.]"
										inv !print
											val K_unchecked "\n"
										inv !return
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked dest
									inv CoreOfParentOfCoreOf
										val K_unchecked dest
						inv !return
							val K_unchecked 0
				constant XTestMove K_unchecked_function = XTestMove_B __assimilated=1
			package ActionsOnSub_fn _function
				symbol public misc ActionsOnSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActionsOnSub_B _code
					symbol external misc plug_00486 --> /main/template/variables/trace_actions_var/trace_actions
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked trace_actions
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "Actions listing on."
				constant ActionsOnSub K_unchecked_function = ActionsOnSub_B __assimilated=1
			package ActionsOffSub_fn _function
				symbol public misc ActionsOffSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ActionsOffSub_B _code
					symbol external misc plug_00486 --> /main/template/variables/trace_actions_var/trace_actions
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked trace_actions
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "Actions listing off."
				constant ActionsOffSub K_unchecked_function = ActionsOffSub_B __assimilated=1
			package GonearSub_fn _function
				symbol public misc GonearSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GonearSub_B _code
					symbol external misc PlayerTo --> /main/template/functions/PlayerTo_fn/PlayerTo
					symbol external misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv PlayerTo
							inv LocationOf
								val K_unchecked noun
				constant GonearSub K_unchecked_function = GonearSub_B __assimilated=1
			package XPurloinSub_fn _function
				symbol public misc XPurloinSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package XPurloinSub_B _code
					symbol external misc XTestMove --> /main/template/functions/XTestMove_fn/XTestMove
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc moved --> /main/template/properties/moved_prop/moved
					symbol external misc concealed --> /main/template/properties/concealed_prop/concealed
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !if
							inv XTestMove
								val K_unchecked noun
								val K_unchecked player
							code
								inv !return
									val K_unchecked 1
						inv !move
							val K_unchecked noun
							val K_unchecked player
						inv !give
							val K_unchecked noun
							val K_unchecked moved
						inv !take
							val K_unchecked noun
							val K_unchecked concealed
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "[Purloined.]"
				constant XPurloinSub K_unchecked_function = XPurloinSub_B __assimilated=1
			package PredictableSub_fn _function
				symbol public misc PredictableSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PredictableSub_B _code
					symbol external misc VM_Seed_RNG --> /main/template/functions/VM_Seed_RNG_fn/VM_Seed_RNG
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv VM_Seed_RNG
							val K_unchecked -100
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "[Random number generator now predictable.]"
				constant PredictableSub K_unchecked_function = PredictableSub_B __assimilated=1
			package ShowRelationsSub_fn _function
				symbol public misc ShowRelationsSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowRelationsSub_B _code
					symbol external misc plug_00487 --> /main/connectors/plug_00487
					symbol external misc ShowOneRelation --> /main/template/functions/ShowOneRelation_fn/ShowOneRelation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv plug_00487
							val K_unchecked ShowOneRelation
				constant ShowRelationsSub K_unchecked_function = ShowRelationsSub_B __assimilated=1
			package ShowOneRelation_fn _function
				symbol public misc ShowOneRelation
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowOneRelation_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
					symbol external misc plug_00488 --> /main/connectors/plug_00488
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					local rel K_unchecked
					code
						inv !if
							inv !bitwiseand
								inv RlnGetF
									val K_unchecked rel
									val K_unchecked RR_PERMISSIONS
								val K_unchecked plug_00488
							code
								inv !indirect2
									inv RlnGetF
										val K_unchecked rel
										val K_unchecked RR_HANDLER
									val K_unchecked rel
									val K_unchecked plug_00488
				constant ShowOneRelation K_unchecked_function = ShowOneRelation_B __assimilated=1
			package ShowResponsesSub_fn _function
				symbol public misc ShowResponsesSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowResponsesSub_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc reg
					symbol private misc wd
					symbol private misc set_mode
					symbol external misc NO_RESPONSES --> /main/veneer/NO_RESPONSES
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc TryNumber --> /main/template/functions/TryNumber_fn/TryNumber
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00489 --> /main/connectors/plug_00489
					symbol external misc EMPTY_TEXT_PACKED --> /main/template/constants/EMPTY_TEXT_PACKED_con/EMPTY_TEXT_PACKED
					symbol external misc ShowResponsesRange --> /main/template/functions/ShowResponsesRange_fn/ShowResponsesRange
					local a K_unchecked
					local i K_unchecked
					local j K_unchecked
					local reg K_unchecked
					local wd K_unchecked
					local set_mode K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked NO_RESPONSES
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "There are no lettered responses."
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked 2
						inv !ifelse
							inv !eq
								inv NextWordStopped
								val K_unchecked dw'now'
							code
								inv !store
									reference
										val K_unchecked set_mode
									val K_unchecked 1
							code
								inv !postdecrement
									reference
										val K_unchecked wn
						inv !ifelse
							inv !eq
								inv NextWordStopped
								val K_unchecked dw'set'
							code
								inv !store
									reference
										val K_unchecked set_mode
									val K_unchecked 2
							code
								inv !postdecrement
									reference
										val K_unchecked wn
						inv !store
							reference
								val K_unchecked wd
							inv NextWordStopped
						inv !postdecrement
							reference
								val K_unchecked wn
						inv !ifelse
							inv !eq
								val K_unchecked wd
								val K_unchecked dw'all'
							code
								inv !store
									reference
										val K_unchecked reg
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked reg
									val K_unchecked -1
								inv !if
									inv !ne
										val K_unchecked wd
										val K_unchecked -1
									code
										inv !store
											reference
												val K_unchecked reg
											inv TryNumber
												val K_unchecked wn
								inv !if
									inv !lt
										val K_unchecked reg
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked say__p
											val K_unchecked 1
										inv !print
											val K_unchecked ">--> The following sets of responses are available:\n"
										inv !print
											val K_unchecked "    RESPONSES ALL\n"
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked a
									val K_unchecked 0
								inv !sequential
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 1
									inv !store
										reference
											val K_unchecked j
										val K_unchecked 0
							inv !lookup
								val K_unchecked plug_00489
								val K_unchecked a
							inv !sequential
								inv !store
									reference
										val K_unchecked a
									inv !plus
										val K_unchecked a
										val K_unchecked 3
								inv !postincrement
									reference
										val K_unchecked i
							code
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked plug_00489
											val K_unchecked a
										val K_unchecked EMPTY_TEXT_PACKED
									code
										inv !postincrement
											reference
												val K_unchecked j
								inv !if
									inv !or
										inv !eq
											val K_unchecked reg
											val K_unchecked 0
										inv !eq
											val K_unchecked reg
											val K_unchecked j
									code
										inv !if
											inv !ne
												inv !lookup
													val K_unchecked plug_00489
													val K_unchecked a
												val K_unchecked EMPTY_TEXT_PACKED
											code
												inv !ifelse
													val K_unchecked set_mode
													code
														inv !print
															val K_unchecked "["
														inv !printstring
															inv !lookup
																val K_unchecked plug_00489
																val K_unchecked a
														inv !print
															val K_unchecked "]\n"
													code
														inv !printstring
															inv !lookup
																val K_unchecked plug_00489
																val K_unchecked a
														inv !print
															val K_unchecked ":\n"
										inv ShowResponsesRange
											inv !lookup
												val K_unchecked plug_00489
												inv !plus
													val K_unchecked a
													val K_unchecked 1
											inv !lookup
												val K_unchecked plug_00489
												inv !plus
													val K_unchecked a
													val K_unchecked 2
											val K_unchecked set_mode
								inv !if
									inv !lt
										val K_unchecked reg
										val K_unchecked 0
									code
										inv !if
											inv !ne
												inv !lookup
													val K_unchecked plug_00489
													val K_unchecked a
												val K_unchecked EMPTY_TEXT_PACKED
											code
												inv !print
													val K_unchecked "    RESPONSES "
												inv !printnumber
													val K_unchecked j
												inv !print
													val K_unchecked ": "
												inv !printstring
													inv !lookup
														val K_unchecked plug_00489
														val K_unchecked a
												inv !print
													val K_unchecked "\n"
				constant ShowResponsesSub K_unchecked_function = ShowResponsesSub_B __assimilated=1
			package ShowResponsesRange_fn _function
				symbol public misc ShowResponsesRange
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowResponsesRange_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc set_mode
					symbol private misc i
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00490 --> /main/connectors/plug_00490
					symbol external misc plug_00491 --> /main/template/variables/suppress_text_substitution_var/suppress_text_substitution
					symbol external misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
					symbol external misc PRINTING_RESPONSE_ACT --> /main/template/constants/PRINTING_RESPONSE_ACT_con/PRINTING_RESPONSE_ACT
					local from K_unchecked
					local to K_unchecked
					local set_mode K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked from
							inv !le
								val K_unchecked i
								val K_unchecked to
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !switch
									val K_unchecked set_mode
									code
										inv !case
											val K_unchecked 1
											code
												inv !print
													val K_unchecked "now "
										inv !case
											val K_unchecked 2
											code
										inv !case
											val K_unchecked 0
											code
												inv !print
													val K_unchecked "    "
								inv plug_00490
									val K_unchecked i
								inv !switch
									val K_unchecked set_mode
									code
										inv !case
											val K_unchecked 1
											code
												inv !print
													val K_unchecked " is "
										inv !case
											val K_unchecked 2
											code
												inv !print
													val K_unchecked " is "
										inv !case
											val K_unchecked 0
											code
												inv !print
													val K_unchecked ": "
								inv !store
									reference
										val K_unchecked suppress_text_substitution
									val K_unchecked 1
								inv CarryOutActivity
									val K_unchecked PRINTING_RESPONSE_ACT
									val K_unchecked i
								inv !store
									reference
										val K_unchecked suppress_text_substitution
									val K_unchecked 0
								inv !switch
									val K_unchecked set_mode
									code
										inv !case
											val K_unchecked 1
											code
												inv !print
													val K_unchecked ";"
										inv !case
											val K_unchecked 2
											code
												inv !print
													val K_unchecked "."
								inv !print
									val K_unchecked "\n"
				constant ShowResponsesRange K_unchecked_function = ShowResponsesRange_B __assimilated=1
			package RulesOnSub_fn _function
				symbol public misc RulesOnSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulesOnSub_B _code
					symbol external misc plug_00366 --> /main/template/variables/debug_rules_var/debug_rules
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked debug_rules
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "Rules tracing now switched on. Type \"rules off\" to switch it off again, or \"rules all\" to include even rules which do not apply."
				constant RulesOnSub K_unchecked_function = RulesOnSub_B __assimilated=1
			package RulesAllSub_fn _function
				symbol public misc RulesAllSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulesAllSub_B _code
					symbol external misc plug_00366 --> /main/template/variables/debug_rules_var/debug_rules
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked debug_rules
							val K_unchecked 2
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "Rules tracing now switched to \"all\". Type \"rules off\" to switch it off again."
				constant RulesAllSub K_unchecked_function = RulesAllSub_B __assimilated=1
			package RulesOffSub_fn _function
				symbol public misc RulesOffSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RulesOffSub_B _code
					symbol external misc plug_00366 --> /main/template/variables/debug_rules_var/debug_rules
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked debug_rules
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "Rules tracing now switched off. Type \"rules\" to switch it on again."
				constant RulesOffSub K_unchecked_function = RulesOffSub_B __assimilated=1
			package ScenesOnSub_fn _function
				symbol public misc ScenesOnSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScenesOnSub_B _code
					symbol external misc plug_00492 --> /main/template/variables/debug_scenes_var/debug_scenes
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00493 --> /main/connectors/plug_00493
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked debug_scenes
							val K_unchecked 1
						inv plug_00493
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "(Scene monitoring now switched on. Type \"scenes off\" to switch it off again.)"
				constant ScenesOnSub K_unchecked_function = ScenesOnSub_B __assimilated=1
			package ScenesOffSub_fn _function
				symbol public misc ScenesOffSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScenesOffSub_B _code
					symbol external misc plug_00492 --> /main/template/variables/debug_scenes_var/debug_scenes
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked debug_scenes
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "(Scene monitoring now switched off. Type \"scenes\" to switch it on again.)"
				constant ScenesOffSub K_unchecked_function = ScenesOffSub_B __assimilated=1
			package ScopeSub_fn _function
				symbol public misc ScopeSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ScopeSub_B _code
					symbol external misc plug_00494 --> /main/template/variables/x_scope_count_var/x_scope_count
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc LoopOverScope --> /main/template/functions/LoopOverScope_fn/LoopOverScope
					symbol external misc Print_ScL --> /main/template/functions/Print_ScL_fn/Print_ScL
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					code
						inv !store
							reference
								val K_unchecked x_scope_count
							val K_unchecked 0
						inv LoopOverScope
							val K_unchecked Print_ScL
							val K_unchecked noun
						inv !if
							inv !eq
								val K_unchecked x_scope_count
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "Nothing is in scope."
				constant ScopeSub K_unchecked_function = ScopeSub_B __assimilated=1
			package Print_ScL_fn _function
				symbol public misc Print_ScL
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Print_ScL_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00494 --> /main/template/variables/x_scope_count_var/x_scope_count
					local obj K_unchecked
					code
						inv !printnumber
							inv !preincrement
								reference
									val K_unchecked x_scope_count
						inv !print
							val K_unchecked ": "
						inv !printindef
							val K_unchecked obj
						inv !print
							val K_unchecked " ("
						inv !printnumber
							val K_unchecked obj
						inv !print
							val K_unchecked ")"
						inv !print
							val K_unchecked "\n"
						inv !return
							val K_unchecked 1
				constant Print_ScL K_unchecked_function = Print_ScL_B __assimilated=1
			package ShowHeapSub_fn _function
				symbol public misc ShowHeapSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowHeapSub_B _code
					symbol external misc HeapDebug --> /main/template/functions/HeapDebug_fn/HeapDebug
					code
						inv HeapDebug
				constant ShowHeapSub K_unchecked_function = ShowHeapSub_B __assimilated=1
			package ShowMeSub_fn _function
				symbol public misc ShowMeSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowMeSub_B _code
					symbol private misc t_0
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00149 --> /main/template/variables/real_location_var/real_location
					symbol external misc ShowMeRecursively --> /main/template/functions/ShowMeRecursively_fn/ShowMeRecursively
					symbol external misc plug_00138 --> /main/connectors/plug_00138
					symbol external misc ShowRLocation --> /main/template/functions/ShowRLocation_fn/ShowRLocation
					symbol external misc plug_00495 --> /main/connectors/plug_00495
					local t_0 K_unchecked
					code
						inv !store
							reference
								val K_unchecked t_0
							val K_unchecked noun
						inv !if
							inv !eq
								val K_unchecked noun
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked real_location
						inv !if
							inv ShowMeRecursively
								val K_unchecked noun
								val K_unchecked 0
								inv !eq
									val K_unchecked noun
									val K_unchecked real_location
							code
								inv !if
									inv !eq
										val K_unchecked noun
										val K_unchecked real_location
									code
										inv !print
											val K_unchecked "* denotes things which are not in scope\n"
						inv !if
							inv !ofclass
								val K_unchecked t_0
								val K_unchecked plug_00138
							code
								inv !print
									val K_unchecked "location:"
								inv ShowRLocation
									val K_unchecked noun
									val K_unchecked 1
								inv !print
									val K_unchecked "\n"
						inv plug_00495
							val K_unchecked t_0
				constant ShowMeSub K_unchecked_function = ShowMeSub_B __assimilated=1
			package ShowRLocation_fn _function
				symbol public misc ShowRLocation
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowRLocation_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc top
					symbol external misc plug_00137 --> /main/connectors/plug_00137
					symbol external misc parent --> /main/veneer/parent
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc animate --> /main/template/properties/animate_prop/animate
					symbol external misc container --> /main/template/properties/container_prop/container
					symbol external misc supporter --> /main/template/properties/supporter_prop/supporter
					symbol external misc ShowRLocation --> /main/template/functions/ShowRLocation_fn/ShowRLocation
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					local obj K_unchecked
					local top K_unchecked
					code
						inv !if
							inv !ofclass
								val K_unchecked obj
								val K_unchecked plug_00137
							code
								inv !return
									val K_unchecked 1
						inv !print
							val K_unchecked " "
						inv !ifelse
							inv parent
								val K_unchecked obj
							code
								inv !ifelse
									inv !has
										val K_unchecked obj
										val K_unchecked worn
									code
										inv !print
											val K_unchecked "worn by "
									code
										inv !if
											inv !has
												inv parent
													val K_unchecked obj
												val K_unchecked animate
											code
												inv !print
													val K_unchecked "carried by "
										inv !if
											inv !has
												inv parent
													val K_unchecked obj
												val K_unchecked container
											code
												inv !print
													val K_unchecked "in "
										inv !if
											inv !ofclass
												inv parent
													val K_unchecked obj
												val K_unchecked plug_00137
											code
												inv !print
													val K_unchecked "in "
										inv !if
											inv !has
												inv parent
													val K_unchecked obj
												val K_unchecked supporter
											code
												inv !print
													val K_unchecked "on "
								inv !printdef
									inv parent
										val K_unchecked obj
								inv ShowRLocation
									inv parent
										val K_unchecked obj
							code
								inv !ifelse
									inv !propertyvalue
										val K_unchecked obj
										val K_unchecked component_parent
									code
										inv !if
											inv !eq
												val K_unchecked top
												val K_unchecked 0
											code
												inv !print
													val K_unchecked ", which is "
										inv !print
											val K_unchecked "part of "
										inv !printdef
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_parent
										inv ShowRLocation
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_parent
									code
										inv !print
											val K_unchecked "out of play"
				constant ShowRLocation K_unchecked_function = ShowRLocation_B __assimilated=1
			package ShowMeRecursively_fn _function
				symbol public misc ShowMeRecursively
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowMeRecursively_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc depth
					symbol private misc f
					symbol private misc c
					symbol private misc i
					symbol private misc k
					symbol external misc TestScope --> /main/template/functions/TestScope_fn/TestScope
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc component_parent --> /main/template/properties/component_parent_prop/component_parent
					symbol external misc worn --> /main/template/properties/worn_prop/worn
					symbol external misc KD_Count --> /main/template/properties/KD_Count_prop/KD_Count
					symbol external misc KindHierarchy --> /main/veneer/KindHierarchy
					symbol external misc plug_00138 --> /main/connectors/plug_00138
					symbol external misc plug_00153 --> /main/connectors/plug_00153
					symbol external misc plug_00159 --> /main/connectors/plug_00159
					symbol external misc transparent --> /main/template/properties/transparent_prop/transparent
					symbol external misc locked --> /main/template/properties/locked_prop/locked
					symbol external misc open --> /main/template/properties/open_prop/open
					symbol external misc plug_00496 --> /main/connectors/plug_00496
					symbol external misc component_child --> /main/template/properties/component_child_prop/component_child
					symbol external misc ShowMeRecursively --> /main/template/functions/ShowMeRecursively_fn/ShowMeRecursively
					symbol external misc component_sibling --> /main/template/properties/component_sibling_prop/component_sibling
					symbol external misc child --> /main/veneer/child
					symbol external misc sibling --> /main/veneer/sibling
					local obj K_unchecked
					local depth K_unchecked
					local f K_unchecked
					local c K_unchecked
					local i K_unchecked
					local k K_unchecked
					code
						inv !spaces
							inv !times
								val K_unchecked 2
								val K_unchecked depth
						inv !if
							inv !and
								inv !and
									val K_unchecked f
									inv !gt
										val K_unchecked depth
										val K_unchecked 0
								inv !eq
									inv TestScope
										val K_unchecked obj
										val K_unchecked player
									val K_unchecked 0
							code
								inv !print
									val K_unchecked "*"
								inv !store
									reference
										val K_unchecked c
									val K_unchecked 1
						inv !printname
							val K_unchecked obj
						inv !if
							inv !gt
								val K_unchecked depth
								val K_unchecked 0
							code
								inv !if
									inv !propertyvalue
										val K_unchecked obj
										val K_unchecked component_parent
									code
										inv !print
											val K_unchecked " (part of "
										inv !printname
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_parent
										inv !print
											val K_unchecked ")"
								inv !if
									inv !has
										val K_unchecked obj
										val K_unchecked worn
									code
										inv !print
											val K_unchecked " (worn)"
						inv !if
							inv !provides
								val K_unchecked obj
								val K_unchecked KD_Count
							code
								inv !store
									reference
										val K_unchecked k
									inv !lookup
										val K_unchecked KindHierarchy
										inv !times
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked KD_Count
											val K_unchecked 2
								inv !if
									inv !or
										inv !ne
											val K_unchecked k
											val K_unchecked plug_00138
										inv !eq
											val K_unchecked depth
											val K_unchecked 0
									code
										inv !print
											val K_unchecked " - "
										inv !if
											inv !eq
												val K_unchecked k
												inv !alternative
													val K_unchecked plug_00153
													val K_unchecked plug_00159
											code
												inv !if
													inv !has
														val K_unchecked obj
														val K_unchecked transparent
													code
														inv !print
															val K_unchecked "transparent "
												inv !ifelse
													inv !has
														val K_unchecked obj
														val K_unchecked locked
													code
														inv !print
															val K_unchecked "locked "
													code
														inv !ifelse
															inv !has
																val K_unchecked obj
																val K_unchecked open
															code
																inv !print
																	val K_unchecked "open "
															code
																inv !print
																	val K_unchecked "closed "
										inv plug_00496
											val K_unchecked k
						inv !print
							val K_unchecked "\n"
						inv !if
							inv !propertyvalue
								val K_unchecked obj
								val K_unchecked component_child
							code
								inv !store
									reference
										val K_unchecked c
									inv !bitwiseor
										val K_unchecked c
										inv ShowMeRecursively
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_child
											inv !plus
												val K_unchecked depth
												val K_unchecked 2
											val K_unchecked f
						inv !if
							inv !and
								inv !gt
									val K_unchecked depth
									val K_unchecked 0
								inv !propertyvalue
									val K_unchecked obj
									val K_unchecked component_sibling
							code
								inv !store
									reference
										val K_unchecked c
									inv !bitwiseor
										val K_unchecked c
										inv ShowMeRecursively
											inv !propertyvalue
												val K_unchecked obj
												val K_unchecked component_sibling
											val K_unchecked depth
											val K_unchecked f
						inv !if
							inv child
								val K_unchecked obj
							code
								inv !store
									reference
										val K_unchecked c
									inv !bitwiseor
										val K_unchecked c
										inv ShowMeRecursively
											inv child
												val K_unchecked obj
											inv !plus
												val K_unchecked depth
												val K_unchecked 2
											val K_unchecked f
						inv !if
							inv !and
								inv !gt
									val K_unchecked depth
									val K_unchecked 0
								inv sibling
									val K_unchecked obj
							code
								inv !store
									reference
										val K_unchecked c
									inv !bitwiseor
										val K_unchecked c
										inv ShowMeRecursively
											inv sibling
												val K_unchecked obj
											val K_unchecked depth
											val K_unchecked f
						inv !return
							val K_unchecked c
				constant ShowMeRecursively K_unchecked_function = ShowMeRecursively_B __assimilated=1
			package AllowInShowme_fn _function
				symbol public misc AllowInShowme
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package AllowInShowme_B _code
					symbol private misc pr
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc workflag --> /main/template/properties/workflag_prop/workflag
					symbol external misc concealed --> /main/template/properties/concealed_prop/concealed
					symbol external misc mentioned --> /main/template/properties/mentioned_prop/mentioned
					local pr K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked pr
								inv !alternative
									inv !alternative
										val K_unchecked workflag
										val K_unchecked concealed
									val K_unchecked mentioned
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant AllowInShowme K_unchecked_function = AllowInShowme_B __assimilated=1
			package ShowVerbSub_fn _function
				symbol public misc ShowVerbSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ShowVerbSub_B _code
					symbol private misc address
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc lines
					symbol private misc meta
					symbol private misc i
					symbol private misc x
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc #dict_par1 --> /main/veneer/#dict_par1
					symbol external misc DictionaryWordToVerbNum --> /main/template/functions/DictionaryWordToVerbNum_fn/DictionaryWordToVerbNum
					symbol external misc VM_CommandTableAddress --> /main/template/functions/VM_CommandTableAddress_fn/VM_CommandTableAddress
					symbol external misc VM_PrintCommandWords --> /main/template/functions/VM_PrintCommandWords_fn/VM_PrintCommandWords
					symbol external misc UnpackGrammarLine --> /main/template/functions/UnpackGrammarLine_fn/UnpackGrammarLine
					symbol external misc DebugGrammarLine --> /main/template/functions/DebugGrammarLine_fn/DebugGrammarLine
					symbol external misc ParaContent --> /main/template/functions/ParaContent_fn/ParaContent
					local address K_unchecked
					local lines K_unchecked
					local meta K_unchecked
					local i K_unchecked
					local x K_unchecked
					code
						inv !store
							reference
								val K_unchecked wn
							val K_unchecked 2
						inv !store
							reference
								val K_unchecked x
							inv NextWordStopped
						inv !if
							inv !or
								inv !eq
									val K_unchecked x
									val K_unchecked 0
								inv !eq
									inv !bitwiseand
										inv !lookupbyte
											val K_unchecked x
											val K_unchecked #dict_par1
										val K_unchecked 1
									val K_unchecked 0
							code
								inv !printret
									val K_unchecked "Try typing \"showverb\" and then the name of a verb."
						inv !store
							reference
								val K_unchecked meta
							inv !divide
								inv !bitwiseand
									inv !lookupbyte
										val K_unchecked x
										val K_unchecked #dict_par1
									val K_unchecked 2
								val K_unchecked 2
						inv !store
							reference
								val K_unchecked i
							inv DictionaryWordToVerbNum
								val K_unchecked x
						inv !store
							reference
								val K_unchecked address
							inv VM_CommandTableAddress
								val K_unchecked i
						inv !store
							reference
								val K_unchecked lines
							inv !lookupbyte
								val K_unchecked address
								val K_unchecked 0
						inv !postincrement
							reference
								val K_unchecked address
						inv !print
							val K_unchecked "Verb "
						inv !if
							val K_unchecked meta
							code
								inv !print
									val K_unchecked "meta "
						inv VM_PrintCommandWords
							val K_unchecked i
						inv !print
							val K_unchecked "\n"
						inv !if
							inv !eq
								val K_unchecked lines
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "has no grammar lines.\n"
						inv !for
							val K_unchecked 1
							inv !gt
								val K_unchecked lines
								val K_unchecked 0
							inv !postdecrement
								reference
									val K_unchecked lines
							code
								inv !store
									reference
										val K_unchecked address
									inv UnpackGrammarLine
										val K_unchecked address
								inv !print
									val K_unchecked "    "
								inv DebugGrammarLine
								inv !print
									val K_unchecked "\n"
						inv ParaContent
				constant ShowVerbSub K_unchecked_function = ShowVerbSub_B __assimilated=1
			package DebugGrammarLine_fn _function
				symbol public misc DebugGrammarLine
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DebugGrammarLine_B _code
					symbol private misc pcount
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc line_token --> /main/template/arrays/line_token_arr/line_token
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc DebugToken --> /main/template/functions/DebugToken_fn/DebugToken
					symbol external misc DebugAction --> /main/template/functions/DebugAction_fn/DebugAction
					symbol external misc plug_00201 --> /main/template/variables/action_to_be_var/action_to_be
					symbol external misc plug_00202 --> /main/template/variables/action_reversed_var/action_reversed
					local pcount K_unchecked
					code
						inv !print
							val K_unchecked " * "
						inv !for
							val K_unchecked 1
							inv !ne
								inv !lookup
									val K_unchecked line_token
									val K_unchecked pcount
								val K_unchecked ENDIT_TOKEN
							inv !postincrement
								reference
									val K_unchecked pcount
							code
								inv !if
									inv !bitwiseand
										inv !lookupbyte
											inv !lookup
												val K_unchecked line_token
												val K_unchecked pcount
											val K_unchecked 0
										val K_unchecked 16
									code
										inv !print
											val K_unchecked "/ "
								inv DebugToken
									inv !lookup
										val K_unchecked line_token
										val K_unchecked pcount
								inv !print
									val K_unchecked " "
						inv !print
							val K_unchecked "-> "
						inv DebugAction
							val K_unchecked action_to_be
						inv !if
							val K_unchecked action_reversed
							code
								inv !print
									val K_unchecked " reverse"
				constant DebugGrammarLine K_unchecked_function = DebugGrammarLine_B __assimilated=1
			package DebugToken_fn _function
				symbol public misc DebugToken
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DebugToken_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc AnalyseToken --> /main/template/functions/AnalyseToken_fn/AnalyseToken
					symbol external misc plug_00204 --> /main/template/variables/found_ttype_var/found_ttype
					symbol external misc ILLEGAL_TT --> /main/template/constants/ILLEGAL_TT_con/ILLEGAL_TT
					symbol external misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
					symbol external misc plug_00205 --> /main/template/variables/found_tdata_var/found_tdata
					symbol external misc NOUN_TOKEN --> /main/template/constants/NOUN_TOKEN_con/NOUN_TOKEN
					symbol external misc HELD_TOKEN --> /main/template/constants/HELD_TOKEN_con/HELD_TOKEN
					symbol external misc MULTI_TOKEN --> /main/template/constants/MULTI_TOKEN_con/MULTI_TOKEN
					symbol external misc MULTIHELD_TOKEN --> /main/template/constants/MULTIHELD_TOKEN_con/MULTIHELD_TOKEN
					symbol external misc MULTIEXCEPT_TOKEN --> /main/template/constants/MULTIEXCEPT_TOKEN_con/MULTIEXCEPT_TOKEN
					symbol external misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
					symbol external misc CREATURE_TOKEN --> /main/template/constants/CREATURE_TOKEN_con/CREATURE_TOKEN
					symbol external misc SPECIAL_TOKEN --> /main/template/constants/SPECIAL_TOKEN_con/SPECIAL_TOKEN
					symbol external misc NUMBER_TOKEN --> /main/template/constants/NUMBER_TOKEN_con/NUMBER_TOKEN
					symbol external misc TOPIC_TOKEN --> /main/template/constants/TOPIC_TOKEN_con/TOPIC_TOKEN
					symbol external misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
					symbol external misc PREPOSITION_TT --> /main/template/constants/PREPOSITION_TT_con/PREPOSITION_TT
					symbol external misc ROUTINE_FILTER_TT --> /main/template/constants/ROUTINE_FILTER_TT_con/ROUTINE_FILTER_TT
					symbol external misc ATTR_FILTER_TT --> /main/template/constants/ATTR_FILTER_TT_con/ATTR_FILTER_TT
					symbol external misc DebugAttribute --> /main/template/functions/DebugAttribute_fn/DebugAttribute
					symbol external misc SCOPE_TT --> /main/template/constants/SCOPE_TT_con/SCOPE_TT
					symbol external misc GPR_TT --> /main/template/constants/GPR_TT_con/GPR_TT
					local token K_unchecked
					code
						inv AnalyseToken
							val K_unchecked token
						inv !switch
							val K_unchecked found_ttype
							code
								inv !case
									val K_unchecked ILLEGAL_TT
									code
										inv !print
											val K_unchecked "<illegal token number "
										inv !printnumber
											val K_unchecked token
										inv !print
											val K_unchecked ">"
								inv !case
									val K_unchecked ELEMENTARY_TT
									code
										inv !switch
											val K_unchecked found_tdata
											code
												inv !case
													val K_unchecked NOUN_TOKEN
													code
														inv !print
															val K_unchecked "noun"
												inv !case
													val K_unchecked HELD_TOKEN
													code
														inv !print
															val K_unchecked "held"
												inv !case
													val K_unchecked MULTI_TOKEN
													code
														inv !print
															val K_unchecked "multi"
												inv !case
													val K_unchecked MULTIHELD_TOKEN
													code
														inv !print
															val K_unchecked "multiheld"
												inv !case
													val K_unchecked MULTIEXCEPT_TOKEN
													code
														inv !print
															val K_unchecked "multiexcept"
												inv !case
													val K_unchecked MULTIINSIDE_TOKEN
													code
														inv !print
															val K_unchecked "multiinside"
												inv !case
													val K_unchecked CREATURE_TOKEN
													code
														inv !print
															val K_unchecked "creature"
												inv !case
													val K_unchecked SPECIAL_TOKEN
													code
														inv !print
															val K_unchecked "special"
												inv !case
													val K_unchecked NUMBER_TOKEN
													code
														inv !print
															val K_unchecked "number"
												inv !case
													val K_unchecked TOPIC_TOKEN
													code
														inv !print
															val K_unchecked "topic"
												inv !case
													val K_unchecked ENDIT_TOKEN
													code
														inv !print
															val K_unchecked "END"
								inv !case
									val K_unchecked PREPOSITION_TT
									code
										inv !print
											val K_unchecked "'"
										inv !printaddress
											val K_unchecked found_tdata
										inv !print
											val K_unchecked "'"
								inv !case
									val K_unchecked ROUTINE_FILTER_TT
									code
										inv !print
											val K_unchecked "noun=Routine("
										inv !printnumber
											val K_unchecked found_tdata
										inv !print
											val K_unchecked ")"
								inv !case
									val K_unchecked ATTR_FILTER_TT
									code
										inv DebugAttribute
											val K_unchecked found_tdata
								inv !case
									val K_unchecked SCOPE_TT
									code
										inv !print
											val K_unchecked "scope=Routine("
										inv !printnumber
											val K_unchecked found_tdata
										inv !print
											val K_unchecked ")"
								inv !case
									val K_unchecked GPR_TT
									code
										inv !print
											val K_unchecked "Routine("
										inv !printnumber
											val K_unchecked found_tdata
										inv !print
											val K_unchecked ")"
				constant DebugToken K_unchecked_function = DebugToken_B __assimilated=1
			package TraceOnSub_fn _function
				symbol public misc TraceOnSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TraceOnSub_B _code
					symbol external misc plug_00281 --> /main/template/variables/parser_trace_var/parser_trace
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked parser_trace
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "[Trace on.]"
				constant TraceOnSub K_unchecked_function = TraceOnSub_B __assimilated=1
			package TraceLevelSub_fn _function
				symbol public misc TraceLevelSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TraceLevelSub_B _code
					symbol external misc plug_00281 --> /main/template/variables/parser_trace_var/parser_trace
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked parser_trace
							val K_unchecked parsed_number
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !print
							val K_unchecked "[Parser tracing set to level "
						inv !printnumber
							val K_unchecked parser_trace
						inv !print
							val K_unchecked ".]\n"
				constant TraceLevelSub K_unchecked_function = TraceLevelSub_B __assimilated=1
			package TraceOffSub_fn _function
				symbol public misc TraceOffSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TraceOffSub_B _code
					symbol external misc plug_00281 --> /main/template/variables/parser_trace_var/parser_trace
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					code
						inv !store
							reference
								val K_unchecked parser_trace
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked say__p
							val K_unchecked 1
						inv !printret
							val K_unchecked "Trace off."
				constant TraceOffSub K_unchecked_function = TraceOffSub_B __assimilated=1
			package XTreeSub_fn _function
				symbol public misc XTreeSub
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package XTreeSub_B _code
					symbol private misc i
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00497 --> /main/connectors/plug_00497
					symbol external misc Object --> /main/veneer/Object
					symbol external misc parent --> /main/veneer/parent
					symbol external misc XObj --> /main/template/functions/XObj_fn/XObj
					local i K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked noun
								val K_unchecked 0
							code
								inv !objectloop
									reference
										val K_unchecked i
									val K_unchecked plug_00497
									val K_unchecked i
									code
										inv !if
											inv !and
												inv !ofclass
													val K_unchecked i
													val K_unchecked Object
												inv !eq
													inv parent
														val K_unchecked i
													val K_unchecked 0
											code
												inv XObj
													val K_unchecked i
							code
								inv XObj
									val K_unchecked noun
									val K_unchecked 1
				constant XTreeSub K_unchecked_function = XTreeSub_B __assimilated=1
			package XObj_fn _function
				symbol public misc XObj
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package XObj_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc f
					symbol external misc parent --> /main/veneer/parent
					symbol external misc child --> /main/veneer/child
					symbol external misc Class --> /main/veneer/Class
					symbol external misc WriteListFrom --> /main/template/functions/WriteListFrom_fn/WriteListFrom
					symbol external misc NEWLINE_BIT --> /main/template/constants/NEWLINE_BIT_con/NEWLINE_BIT
					symbol external misc INDENT_BIT --> /main/template/constants/INDENT_BIT_con/INDENT_BIT
					symbol external misc ALWAYS_BIT --> /main/template/constants/ALWAYS_BIT_con/ALWAYS_BIT
					symbol external misc NOARTICLE_BIT --> /main/template/constants/NOARTICLE_BIT_con/NOARTICLE_BIT
					symbol external misc FULLINV_BIT --> /main/template/constants/FULLINV_BIT_con/FULLINV_BIT
					local obj K_unchecked
					local f K_unchecked
					code
						inv !ifelse
							inv !eq
								inv parent
									val K_unchecked obj
								val K_unchecked 0
							code
								inv !printname
									val K_unchecked obj
							code
								inv !printindef
									val K_unchecked obj
						inv !print
							val K_unchecked " ("
						inv !printnumber
							val K_unchecked obj
						inv !print
							val K_unchecked ") "
						inv !if
							inv !and
								inv !eq
									val K_unchecked f
									val K_unchecked 1
								inv !ne
									inv parent
										val K_unchecked obj
									val K_unchecked 0
							code
								inv !print
									val K_unchecked "(in "
								inv !printname
									inv parent
										val K_unchecked obj
								inv !print
									val K_unchecked " "
								inv !printnumber
									inv parent
										val K_unchecked obj
								inv !print
									val K_unchecked ")"
						inv !print
							val K_unchecked "\n"
						inv !if
							inv !eq
								inv child
									val K_unchecked obj
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked obj
								val K_unchecked Class
							code
								inv WriteListFrom
									inv child
										val K_unchecked obj
									inv !plus
										inv !plus
											inv !plus
												val K_unchecked NEWLINE_BIT
												val K_unchecked INDENT_BIT
											val K_unchecked ALWAYS_BIT
										val K_unchecked NOARTICLE_BIT
									val K_unchecked 1
							code
								inv WriteListFrom
									inv child
										val K_unchecked obj
									inv !plus
										inv !plus
											inv !plus
												val K_unchecked NEWLINE_BIT
												val K_unchecked INDENT_BIT
											val K_unchecked ALWAYS_BIT
										val K_unchecked FULLINV_BIT
									val K_unchecked 1
				constant XObj K_unchecked_function = XObj_B __assimilated=1
			package testcommandnoun_fn _function
				symbol public misc testcommandnoun
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package testcommandnoun_B _code
					symbol private misc obj
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o2
					symbol external misc plug_00269 --> /main/template/variables/scope_stage_var/scope_stage
					symbol external misc plug_00498 --> /main/connectors/plug_00498
					symbol external misc Object --> /main/veneer/Object
					symbol external misc KD_Count --> /main/template/properties/KD_Count_prop/KD_Count
					symbol external misc PlaceInScope --> /main/template/functions/PlaceInScope_fn/PlaceInScope
					local obj K_unchecked
					local o2 K_unchecked
					code
						inv !switch
							val K_unchecked scope_stage
							code
								inv !case
									val K_unchecked 1
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked 2
									code
										inv !objectloop
											reference
												val K_unchecked obj
											val K_unchecked plug_00498
											val K_unchecked obj
											code
												inv !if
													inv !and
														inv !ofclass
															val K_unchecked obj
															val K_unchecked Object
														inv !provides
															val K_unchecked obj
															val K_unchecked KD_Count
													code
														inv PlaceInScope
															val K_unchecked obj
															val K_unchecked 1
								inv !case
									val K_unchecked 3
									code
										inv !print
											val K_unchecked "There seems to be no such object anywhere in the model world.\n"
				constant testcommandnoun K_unchecked_function = testcommandnoun_B __assimilated=1 __scope_filter=1
			package ChronologyPoint_fn _function
				symbol public misc ChronologyPoint
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ChronologyPoint_B _code
					symbol private misc pt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00499 --> /main/connectors/plug_00499
					symbol external misc past_chronological_record --> /main/template/arrays/past_chronological_record_arr/past_chronological_record
					symbol external misc present_chronological_record --> /main/template/arrays/present_chronological_record_arr/present_chronological_record
					local pt K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked pt
								val K_unchecked 0
							inv !lt
								val K_unchecked pt
								val K_unchecked plug_00499
							inv !postincrement
								reference
									val K_unchecked pt
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked past_chronological_record
											val K_unchecked pt
									inv !lookup
										val K_unchecked present_chronological_record
										val K_unchecked pt
				constant ChronologyPoint K_unchecked_function = ChronologyPoint_B __assimilated=1
			package UPDATE_CHRONOLOGICAL_RECORDS_R_fn _function
				symbol public misc UPDATE_CHRONOLOGICAL_RECORDS_R
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package UPDATE_CHRONOLOGICAL_RECORDS_R_B _code
					symbol private misc pt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00499 --> /main/connectors/plug_00499
					symbol external misc plug_00500 --> /main/connectors/plug_00500
					symbol external misc ChronologyPoint --> /main/template/functions/ChronologyPoint_fn/ChronologyPoint
					local pt K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked pt
								val K_unchecked 0
							inv !lt
								val K_unchecked pt
								val K_unchecked plug_00499
							inv !postincrement
								reference
									val K_unchecked pt
							code
								inv plug_00500
									val K_unchecked 0
									val K_unchecked pt
									val K_unchecked 1
									inv !unaryminus
										val K_unchecked 1
						inv ChronologyPoint
						inv !return
							val K_unchecked 0
				constant UPDATE_CHRONOLOGICAL_RECORDS_R K_unchecked_function = UPDATE_CHRONOLOGICAL_RECORDS_R_B __assimilated=1
			package TrackActions_fn _function
				symbol public misc TrackActions
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TrackActions_B _code
					symbol private misc readjust
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc oow
					symbol private misc i
					symbol external misc plug_00501 --> /main/connectors/plug_00501
					symbol external misc TimesActionHasHappened --> /main/template/arrays/TimesActionHasHappened_arr/TimesActionHasHappened
					symbol external misc LastTurnActionHappenedOn --> /main/template/arrays/LastTurnActionHappenedOn_arr/LastTurnActionHappenedOn
					symbol external misc plug_00212 --> /main/template/variables/turns_var/turns
					symbol external misc ActionCurrentlyHappeningFlag --> /main/template/arrays/ActionCurrentlyHappeningFlag_arr/ActionCurrentlyHappeningFlag
					symbol external misc plug_00348 --> /main/template/variables/keep_silent_var/keep_silent
					symbol external misc TurnsActionHasBeenHappening --> /main/template/arrays/TurnsActionHasBeenHappening_arr/TurnsActionHasBeenHappening
					local readjust K_unchecked
					local oow K_unchecked
					local i K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lookup
								val K_unchecked plug_00501
								val K_unchecked i
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !ifelse
									inv !callmessage0
										inv !lookup
											val K_unchecked plug_00501
											val K_unchecked i
									code
										inv !if
											val K_unchecked readjust
											code
												inv !continue
										inv !postincrement
											reference
												inv !lookup
													val K_unchecked TimesActionHasHappened
													val K_unchecked i
										inv !if
											inv !ne
												inv !lookup
													val K_unchecked LastTurnActionHappenedOn
													val K_unchecked i
												inv !plus
													val K_unchecked turns
													val K_unchecked 5
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked LastTurnActionHappenedOn
															val K_unchecked i
													inv !plus
														val K_unchecked turns
														val K_unchecked 5
												inv !store
													reference
														inv !lookupbyte
															val K_unchecked ActionCurrentlyHappeningFlag
															val K_unchecked i
													val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked keep_silent
														val K_unchecked 0
													code
														inv !postincrement
															reference
																inv !lookup
																	val K_unchecked TurnsActionHasBeenHappening
																	val K_unchecked i
									code
										inv !if
											inv !eq
												val K_unchecked oow
												val K_unchecked 0
											code
												inv !if
													inv !eq
														val K_unchecked keep_silent
														val K_unchecked 0
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked TurnsActionHasBeenHappening
																	val K_unchecked i
															val K_unchecked 0
												inv !if
													inv !ne
														inv !lookup
															val K_unchecked LastTurnActionHappenedOn
															val K_unchecked i
														inv !plus
															val K_unchecked turns
															val K_unchecked 5
													code
														inv !store
															reference
																inv !lookupbyte
																	val K_unchecked ActionCurrentlyHappeningFlag
																	val K_unchecked i
															val K_unchecked 0
				constant TrackActions K_unchecked_function = TrackActions_B __assimilated=1
			package UnknownVerb_fn _function
				symbol public misc UnknownVerb
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package UnknownVerb_B _code
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !return
							val K_unchecked 0
				constant UnknownVerb K_unchecked_function = UnknownVerb_B __assimilated=1
			package PrintVerb_fn _function
				symbol public misc PrintVerb
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package PrintVerb_B _code
					symbol private misc v
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local v K_unchecked
					code
						inv !return
							val K_unchecked 0
				constant PrintVerb K_unchecked_function = PrintVerb_B __assimilated=1
			package HeapInitialise_fn _function
				symbol public misc HeapInitialise
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HeapInitialise_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc bsize
					symbol private misc blk2
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc plug_00403 --> /main/connectors/plug_00403
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00502 --> /main/connectors/plug_00502
					local n K_unchecked
					local bsize K_unchecked
					local blk2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked blk2
							inv !plus
								val K_unchecked Flex_Heap
								val K_unchecked 16
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked Flex_Heap
									val K_unchecked BLK_HEADER_N
							val K_unchecked 4
						inv !store
							reference
								inv !lookup
									val K_unchecked Flex_Heap
									val K_unchecked BLK_HEADER_KOV
							val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked Flex_Heap
									val K_unchecked BLK_HEADER_RCOUNT
							val K_unchecked plug_00403
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked Flex_Heap
									val K_unchecked BLK_HEADER_FLAGS
							val K_unchecked BLK_FLAG_MULTIPLE
						inv !store
							reference
								inv !lookup
									val K_unchecked Flex_Heap
									val K_unchecked BLK_NEXT
							val K_unchecked blk2
						inv !store
							reference
								inv !lookup
									val K_unchecked Flex_Heap
									val K_unchecked BLK_PREV
							val K_unchecked plug_00232
						inv !for
							inv !store
								reference
									val K_unchecked bsize
								val K_unchecked 1
							inv !lt
								val K_unchecked bsize
								val K_unchecked plug_00502
							inv !store
								reference
									val K_unchecked bsize
								inv !times
									val K_unchecked bsize
									val K_unchecked 2
							code
								inv !postincrement
									reference
										val K_unchecked n
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked blk2
									val K_unchecked BLK_HEADER_N
							val K_unchecked n
						inv !store
							reference
								inv !lookup
									val K_unchecked blk2
									val K_unchecked BLK_HEADER_KOV
							val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked blk2
									val K_unchecked BLK_HEADER_RCOUNT
							val K_unchecked 0
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked blk2
									val K_unchecked BLK_HEADER_FLAGS
							val K_unchecked BLK_FLAG_MULTIPLE
						inv !store
							reference
								inv !lookup
									val K_unchecked blk2
									val K_unchecked BLK_NEXT
							val K_unchecked plug_00232
						inv !store
							reference
								inv !lookup
									val K_unchecked blk2
									val K_unchecked BLK_PREV
							val K_unchecked Flex_Heap
				constant HeapInitialise K_unchecked_function = HeapInitialise_B __assimilated=1
			package HeapNetFreeSpace_fn _function
				symbol public misc HeapNetFreeSpace
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HeapNetFreeSpace_B _code
					symbol private misc multiple
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txb
					symbol private misc asize
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					local multiple K_unchecked
					local txb K_unchecked
					local asize K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked txb
								inv !lookup
									val K_unchecked Flex_Heap
									val K_unchecked BLK_NEXT
							inv !ne
								val K_unchecked txb
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked txb
								inv !lookup
									val K_unchecked txb
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked asize
									inv !plus
										val K_unchecked asize
										inv FlexSize
											val K_unchecked txb
								inv !ifelse
									val K_unchecked multiple
									code
										inv !store
											reference
												val K_unchecked asize
											inv !minus
												val K_unchecked asize
												val K_unchecked BLK_DATA_MULTI_OFFSET
									code
										inv !store
											reference
												val K_unchecked asize
											inv !minus
												val K_unchecked asize
												val K_unchecked BLK_DATA_OFFSET
						inv !return
							val K_unchecked asize
				constant HeapNetFreeSpace K_unchecked_function = HeapNetFreeSpace_B __assimilated=1
			package HeapMakeSpace_fn _function
				symbol public misc HeapMakeSpace
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HeapMakeSpace_B _code
					symbol private misc size
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc multiple
					symbol private misc newblocksize
					symbol private misc newblock
					symbol private misc B
					symbol private misc n
					symbol external misc HeapNetFreeSpace --> /main/template/functions/HeapNetFreeSpace_fn/HeapNetFreeSpace
					symbol external misc HeapLargestFreeBlock --> /main/template/functions/HeapLargestFreeBlock_fn/HeapLargestFreeBlock
					symbol external misc SMALLEST_BLK_WORTH_ALLOCATING --> /main/template/constants/SMALLEST_BLK_WORTH_ALLOCATING_con/SMALLEST_BLK_WORTH_ALLOCATING
					symbol external misc VM_AllocateMemory --> /main/template/functions/VM_AllocateMemory_fn/VM_AllocateMemory
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol private label .Linked
					local size K_unchecked
					local multiple K_unchecked
					local newblocksize K_unchecked
					local newblock K_unchecked
					local B K_unchecked
					local n K_unchecked
					code
						inv !for
							val K_unchecked 1
							val K_unchecked 1
							val K_unchecked 1
							code
								inv !ifelse
									val K_unchecked multiple
									code
										inv !if
											inv !ge
												inv HeapNetFreeSpace
													val K_unchecked multiple
												val K_unchecked size
											code
												inv !return
													val K_unchecked 1
									code
										inv !if
											inv !ge
												inv HeapLargestFreeBlock
													val K_unchecked 0
												val K_unchecked size
											code
												inv !return
													val K_unchecked 1
								inv !store
									reference
										val K_unchecked newblocksize
									val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked n
										val K_unchecked 0
									inv !or
										inv !lt
											val K_unchecked n
											val K_unchecked SMALLEST_BLK_WORTH_ALLOCATING
										inv !lt
											val K_unchecked newblocksize
											val K_unchecked size
									inv !postincrement
										reference
											val K_unchecked n
									code
										inv !store
											reference
												val K_unchecked newblocksize
											inv !times
												val K_unchecked newblocksize
												val K_unchecked 2
								inv !while
									inv !lt
										val K_unchecked newblocksize
										inv !plus
											val K_unchecked size
											val K_unchecked 16
									code
										inv !store
											reference
												val K_unchecked newblocksize
											inv !times
												val K_unchecked newblocksize
												val K_unchecked 2
								inv !store
									reference
										val K_unchecked newblock
									inv VM_AllocateMemory
										val K_unchecked newblocksize
								inv !if
									inv !eq
										val K_unchecked newblock
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked newblock
											val K_unchecked BLK_HEADER_N
									val K_unchecked n
								inv !store
									reference
										inv !lookup
											val K_unchecked newblock
											val K_unchecked BLK_HEADER_KOV
									val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked newblock
											val K_unchecked BLK_HEADER_RCOUNT
									val K_unchecked 0
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked newblock
											val K_unchecked BLK_HEADER_FLAGS
									val K_unchecked BLK_FLAG_MULTIPLE
								inv !store
									reference
										inv !lookup
											val K_unchecked newblock
											val K_unchecked BLK_NEXT
									val K_unchecked plug_00232
								inv !store
									reference
										inv !lookup
											val K_unchecked newblock
											val K_unchecked BLK_PREV
									val K_unchecked plug_00232
								inv !for
									inv !store
										reference
											val K_unchecked B
										inv !lookup
											val K_unchecked Flex_Heap
											val K_unchecked BLK_NEXT
									inv !ne
										val K_unchecked B
										val K_unchecked plug_00232
									inv !store
										reference
											val K_unchecked B
										inv !lookup
											val K_unchecked B
											val K_unchecked BLK_NEXT
									code
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked B
													val K_unchecked BLK_NEXT
												val K_unchecked plug_00232
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked B
															val K_unchecked BLK_NEXT
													val K_unchecked newblock
												inv !store
													reference
														inv !lookup
															val K_unchecked newblock
															val K_unchecked BLK_PREV
													val K_unchecked B
												inv !jump
													lab .Linked
								inv !store
									reference
										inv !lookup
											val K_unchecked Flex_Heap
											val K_unchecked BLK_NEXT
									val K_unchecked newblock
								inv !store
									reference
										inv !lookup
											val K_unchecked newblock
											val K_unchecked BLK_PREV
									val K_unchecked Flex_Heap
								.Linked
						inv !return
							val K_unchecked 1
				constant HeapMakeSpace K_unchecked_function = HeapMakeSpace_B __assimilated=1
			package HeapLargestFreeBlock_fn _function
				symbol public misc HeapLargestFreeBlock
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HeapLargestFreeBlock_B _code
					symbol private misc multiple
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txb
					symbol private misc asize
					symbol private misc best
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					local multiple K_unchecked
					local txb K_unchecked
					local asize K_unchecked
					local best K_unchecked
					code
						inv !store
							reference
								val K_unchecked best
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked txb
								inv !lookup
									val K_unchecked Flex_Heap
									val K_unchecked BLK_NEXT
							inv !ne
								val K_unchecked txb
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked txb
								inv !lookup
									val K_unchecked txb
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked asize
									inv FlexSize
										val K_unchecked txb
								inv !ifelse
									val K_unchecked multiple
									code
										inv !store
											reference
												val K_unchecked asize
											inv !minus
												val K_unchecked asize
												val K_unchecked BLK_DATA_MULTI_OFFSET
									code
										inv !store
											reference
												val K_unchecked asize
											inv !minus
												val K_unchecked asize
												val K_unchecked BLK_DATA_OFFSET
								inv !if
									inv !gt
										val K_unchecked asize
										val K_unchecked best
									code
										inv !store
											reference
												val K_unchecked best
											val K_unchecked asize
						inv !return
							val K_unchecked best
				constant HeapLargestFreeBlock K_unchecked_function = HeapLargestFreeBlock_B __assimilated=1
			package HeapDebug_fn _function
				symbol public misc HeapDebug
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HeapDebug_B _code
					symbol private misc full
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00502 --> /main/connectors/plug_00502
					symbol external misc HeapNetFreeSpace --> /main/template/functions/HeapNetFreeSpace_fn/HeapNetFreeSpace
					symbol external misc FlexDebugDecomposition --> /main/template/functions/FlexDebugDecomposition_fn/FlexDebugDecomposition
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc FlexDebug --> /main/template/functions/FlexDebug_fn/FlexDebug
					local full K_unchecked
					code
						inv !ifelse
							val K_unchecked full
							code
								inv !print
									val K_unchecked "Managing a heap of initially "
								inv !printnumber
									inv !plus
										val K_unchecked plug_00502
										val K_unchecked 16
								inv !print
									val K_unchecked " bytes.\n"
								inv !printnumber
									inv HeapNetFreeSpace
										val K_unchecked 0
								inv !print
									val K_unchecked " bytes currently free.\n"
								inv !print
									val K_unchecked "Free space decomposition: "
								inv FlexDebugDecomposition
									val K_unchecked Flex_Heap
								inv !print
									val K_unchecked "Free space map: "
								inv FlexDebug
									val K_unchecked Flex_Heap
							code
								inv !printnumber
									inv HeapNetFreeSpace
										val K_unchecked 0
								inv !print
									val K_unchecked " of "
								inv !printnumber
									inv !plus
										val K_unchecked plug_00502
										val K_unchecked 16
								inv !print
									val K_unchecked " bytes free.\n"
				constant HeapDebug K_unchecked_function = HeapDebug_B __assimilated=1
			package FlexAllocate_fn _function
				symbol public misc FlexAllocate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexAllocate_B _code
					symbol private misc size
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kov
					symbol private misc flags
					symbol private misc dsize
					symbol private misc n
					symbol private misc m
					symbol private misc free_block
					symbol private misc min_m
					symbol private misc max_m
					symbol private misc smallest_oversized_block
					symbol private misc secondhalf
					symbol private misc i
					symbol private misc hsize
					symbol private misc head
					symbol private misc tail
					symbol external misc HeapMakeSpace --> /main/template/functions/HeapMakeSpace_fn/HeapMakeSpace
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc FlexError --> /main/template/functions/FlexError_fn/FlexError
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol private label .CorrectSizeFound
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc KindAtomic --> /main/template/functions/KindAtomic_fn/KindAtomic
					local size K_unchecked
					local kov K_unchecked
					local flags K_unchecked
					local dsize K_unchecked
					local n K_unchecked
					local m K_unchecked
					local free_block K_unchecked
					local min_m K_unchecked
					local max_m K_unchecked
					local smallest_oversized_block K_unchecked
					local secondhalf K_unchecked
					local i K_unchecked
					local hsize K_unchecked
					local head K_unchecked
					local tail K_unchecked
					code
						inv !if
							inv !eq
								inv HeapMakeSpace
									val K_unchecked size
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_MULTIPLE
								val K_unchecked 0
							code
								inv FlexError
									val K_unchecked "ran out"
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										val K_unchecked hsize
									val K_unchecked BLK_DATA_MULTI_OFFSET
							code
								inv !store
									reference
										val K_unchecked hsize
									val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								val K_unchecked n
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked dsize
								val K_unchecked 1
							inv !or
								inv !lt
									val K_unchecked dsize
									inv !plus
										val K_unchecked hsize
										val K_unchecked size
								inv !lt
									val K_unchecked n
									inv !plus
										val K_unchecked 3
										inv !divide
											val K_unchecked plug_00139
											val K_unchecked 2
							inv !store
								reference
									val K_unchecked dsize
								inv !times
									val K_unchecked dsize
									val K_unchecked 2
							code
								inv !postincrement
									reference
										val K_unchecked n
						inv !store
							reference
								val K_unchecked min_m
							val K_unchecked 10000
						inv !store
							reference
								val K_unchecked max_m
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked free_block
								inv !lookup
									val K_unchecked Flex_Heap
									val K_unchecked BLK_NEXT
							inv !ne
								val K_unchecked free_block
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked free_block
								inv !lookup
									val K_unchecked free_block
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked m
									inv !lookupbyte
										val K_unchecked free_block
										val K_unchecked BLK_HEADER_N
								inv !if
									inv !eq
										val K_unchecked m
										val K_unchecked n
									code
										inv !jump
											lab .CorrectSizeFound
								inv !if
									inv !gt
										val K_unchecked m
										val K_unchecked n
									code
										inv !if
											inv !gt
												val K_unchecked min_m
												val K_unchecked m
											code
												inv !store
													reference
														val K_unchecked min_m
													val K_unchecked m
												inv !store
													reference
														val K_unchecked smallest_oversized_block
													val K_unchecked free_block
								inv !if
									inv !lt
										val K_unchecked m
										val K_unchecked n
									code
										inv !if
											inv !lt
												val K_unchecked max_m
												val K_unchecked m
											code
												inv !store
													reference
														val K_unchecked max_m
													val K_unchecked m
						inv !if
							inv !eq
								val K_unchecked min_m
								val K_unchecked 10000
							code
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked flags
											val K_unchecked BLK_FLAG_MULTIPLE
										val K_unchecked 0
									code
										inv FlexError
											val K_unchecked "too fragmented"
								inv !for
									inv !store
										reference
											val K_unchecked dsize
										val K_unchecked 1
									inv !gt
										val K_unchecked max_m
										val K_unchecked 0
									inv !store
										reference
											val K_unchecked dsize
										inv !times
											val K_unchecked dsize
											val K_unchecked 2
									code
										inv !postdecrement
											reference
												val K_unchecked max_m
								inv !store
									reference
										val K_unchecked head
									inv FlexAllocate
										inv !minus
											val K_unchecked dsize
											val K_unchecked hsize
										val K_unchecked kov
										val K_unchecked flags
								inv !if
									inv !eq
										val K_unchecked head
										val K_unchecked 0
									code
										inv FlexError
											val K_unchecked "for head block not available"
								inv !store
									reference
										val K_unchecked tail
									inv FlexAllocate
										inv !minus
											val K_unchecked size
											inv !minus
												val K_unchecked dsize
												val K_unchecked hsize
										val K_unchecked kov
										val K_unchecked flags
								inv !if
									inv !eq
										val K_unchecked tail
										val K_unchecked 0
									code
										inv FlexError
											val K_unchecked "for tail block not available"
								inv !store
									reference
										inv !lookup
											val K_unchecked head
											val K_unchecked BLK_NEXT
									val K_unchecked tail
								inv !store
									reference
										inv !lookup
											val K_unchecked tail
											val K_unchecked BLK_PREV
									val K_unchecked head
								inv !return
									val K_unchecked head
						inv !for
							inv !sequential
								inv !store
									reference
										val K_unchecked dsize
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked m
									val K_unchecked 1
							inv !le
								val K_unchecked m
								val K_unchecked min_m
							inv !store
								reference
									val K_unchecked dsize
								inv !times
									val K_unchecked dsize
									val K_unchecked 2
							code
								inv !postincrement
									reference
										val K_unchecked m
						inv !store
							reference
								val K_unchecked free_block
							val K_unchecked smallest_oversized_block
						inv !while
							inv !gt
								val K_unchecked min_m
								val K_unchecked n
							code
								inv !store
									reference
										val K_unchecked dsize
									inv !divide
										val K_unchecked dsize
										val K_unchecked 2
								inv !store
									reference
										val K_unchecked secondhalf
									inv !plus
										val K_unchecked free_block
										val K_unchecked dsize
								inv !store
									reference
										inv !lookup
											val K_unchecked secondhalf
											val K_unchecked BLK_NEXT
									inv !lookup
										val K_unchecked free_block
										val K_unchecked BLK_NEXT
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked secondhalf
											val K_unchecked BLK_NEXT
										val K_unchecked plug_00232
									code
										inv !store
											reference
												inv !lookup
													inv !lookup
														val K_unchecked secondhalf
														val K_unchecked BLK_NEXT
													val K_unchecked BLK_PREV
											val K_unchecked secondhalf
								inv !store
									reference
										inv !lookup
											val K_unchecked secondhalf
											val K_unchecked BLK_PREV
									val K_unchecked free_block
								inv !store
									reference
										inv !lookup
											val K_unchecked free_block
											val K_unchecked BLK_NEXT
									val K_unchecked secondhalf
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked free_block
											val K_unchecked BLK_HEADER_N
									inv !minus
										inv !lookupbyte
											val K_unchecked free_block
											val K_unchecked BLK_HEADER_N
										val K_unchecked 1
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked secondhalf
											val K_unchecked BLK_HEADER_N
									inv !lookupbyte
										val K_unchecked free_block
										val K_unchecked BLK_HEADER_N
								inv !store
									reference
										inv !lookup
											val K_unchecked secondhalf
											val K_unchecked BLK_HEADER_KOV
									inv !lookup
										val K_unchecked free_block
										val K_unchecked BLK_HEADER_KOV
								inv !store
									reference
										inv !lookup
											val K_unchecked secondhalf
											val K_unchecked BLK_HEADER_RCOUNT
									val K_unchecked 0
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked secondhalf
											val K_unchecked BLK_HEADER_FLAGS
									inv !lookupbyte
										val K_unchecked free_block
										val K_unchecked BLK_HEADER_FLAGS
								inv !postdecrement
									reference
										val K_unchecked min_m
						.CorrectSizeFound
						inv !ifelse
							inv !eq
								inv !lookup
									val K_unchecked free_block
									val K_unchecked BLK_NEXT
								val K_unchecked plug_00232
							code
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked free_block
												val K_unchecked BLK_PREV
											val K_unchecked BLK_NEXT
									val K_unchecked plug_00232
							code
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked free_block
												val K_unchecked BLK_PREV
											val K_unchecked BLK_NEXT
									inv !lookup
										val K_unchecked free_block
										val K_unchecked BLK_NEXT
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked free_block
												val K_unchecked BLK_NEXT
											val K_unchecked BLK_PREV
									inv !lookup
										val K_unchecked free_block
										val K_unchecked BLK_PREV
						inv !store
							reference
								inv !lookup
									val K_unchecked free_block
									val K_unchecked BLK_HEADER_KOV
							inv KindAtomic
								val K_unchecked kov
						inv !store
							reference
								inv !lookup
									val K_unchecked free_block
									val K_unchecked BLK_HEADER_RCOUNT
							val K_unchecked 1
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked free_block
									val K_unchecked BLK_HEADER_FLAGS
							val K_unchecked flags
						inv !if
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked free_block
											val K_unchecked BLK_NEXT
									val K_unchecked plug_00232
								inv !store
									reference
										inv !lookup
											val K_unchecked free_block
											val K_unchecked BLK_PREV
									val K_unchecked plug_00232
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked hsize
							inv !lt
								val K_unchecked i
								val K_unchecked dsize
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked free_block
											val K_unchecked i
									val K_unchecked 0
						inv !return
							val K_unchecked free_block
				constant FlexAllocate K_unchecked_function = FlexAllocate_B __assimilated=1
			package FlexError_fn _function
				symbol public misc FlexError
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexError_B _code
					symbol private misc reason
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_HEAPERROR --> /main/template/constants/RTP_HEAPERROR_con/RTP_HEAPERROR
					local reason K_unchecked
					code
						inv !print
							val K_unchecked "*** Memory "
						inv !printstring
							val K_unchecked reason
						inv !print
							val K_unchecked " ***\n"
						inv RunTimeProblem
							val K_unchecked RTP_HEAPERROR
						inv @quit
				constant FlexError K_unchecked_function = FlexError_B __assimilated=1
			package FlexMergeInternal_fn _function
				symbol public misc FlexMergeInternal
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexMergeInternal_B _code
					symbol private misc block
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc first
					symbol private misc last
					symbol private misc pv
					symbol private misc nx
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc FlexRecutInternal --> /main/template/functions/FlexRecutInternal_fn/FlexRecutInternal
					local block K_unchecked
					local first K_unchecked
					local last K_unchecked
					local pv K_unchecked
					local nx K_unchecked
					code
						inv !store
							reference
								val K_unchecked first
							val K_unchecked block
						inv !store
							reference
								val K_unchecked last
							val K_unchecked block
						inv !while
							inv !eq
								inv !lookup
									val K_unchecked last
									val K_unchecked BLK_NEXT
								inv !plus
									val K_unchecked last
									inv FlexSize
										val K_unchecked last
							code
								inv !store
									reference
										val K_unchecked last
									inv !lookup
										val K_unchecked last
										val K_unchecked BLK_NEXT
						inv !while
							inv !and
								inv !eq
									inv !plus
										inv !lookup
											val K_unchecked first
											val K_unchecked BLK_PREV
										inv FlexSize
											inv !lookup
												val K_unchecked first
												val K_unchecked BLK_PREV
									val K_unchecked first
								inv !ne
									inv !lookup
										val K_unchecked first
										val K_unchecked BLK_PREV
									val K_unchecked Flex_Heap
							code
								inv !store
									reference
										val K_unchecked first
									inv !lookup
										val K_unchecked first
										val K_unchecked BLK_PREV
						inv !store
							reference
								val K_unchecked pv
							inv !lookup
								val K_unchecked first
								val K_unchecked BLK_PREV
						inv !store
							reference
								val K_unchecked nx
							inv !lookup
								val K_unchecked last
								val K_unchecked BLK_NEXT
						inv !if
							inv FlexRecutInternal
								val K_unchecked first
								val K_unchecked last
							code
				constant FlexMergeInternal K_unchecked_function = FlexMergeInternal_B __assimilated=1
			package FlexRecutInternal_fn _function
				symbol public misc FlexRecutInternal
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexRecutInternal_B _code
					symbol private misc first
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc last
					symbol private misc tsize
					symbol private misc backsize
					symbol private misc mfrom
					symbol private misc mto
					symbol private misc bnext
					symbol private misc backend
					symbol private misc n
					symbol private misc dsize
					symbol private misc fine_so_far
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					local first K_unchecked
					local last K_unchecked
					local tsize K_unchecked
					local backsize K_unchecked
					local mfrom K_unchecked
					local mto K_unchecked
					local bnext K_unchecked
					local backend K_unchecked
					local n K_unchecked
					local dsize K_unchecked
					local fine_so_far K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked first
								val K_unchecked last
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked mfrom
							val K_unchecked first
						inv !store
							reference
								val K_unchecked mto
							inv !plus
								val K_unchecked last
								inv FlexSize
									val K_unchecked last
						inv !store
							reference
								val K_unchecked bnext
							inv !lookup
								val K_unchecked last
								val K_unchecked BLK_NEXT
						inv !store
							reference
								val K_unchecked fine_so_far
							val K_unchecked 1
						inv !for
							val K_unchecked 1
							inv !gt
								val K_unchecked mto
								val K_unchecked mfrom
							inv !store
								reference
									val K_unchecked mto
								inv !minus
									val K_unchecked mto
									val K_unchecked backsize
							code
								inv !for
									inv !sequential
										inv !store
											reference
												val K_unchecked n
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked backsize
											val K_unchecked 1
									inv !le
										inv !times
											val K_unchecked backsize
											val K_unchecked 2
										inv !minus
											val K_unchecked mto
											val K_unchecked mfrom
									inv !postincrement
										reference
											val K_unchecked n
									code
										inv !store
											reference
												val K_unchecked backsize
											inv !times
												val K_unchecked backsize
												val K_unchecked 2
								inv !if
									inv !and
										val K_unchecked fine_so_far
										inv !eq
											val K_unchecked backsize
											inv FlexSize
												val K_unchecked last
									code
										inv !store
											reference
												val K_unchecked bnext
											val K_unchecked last
										inv !store
											reference
												val K_unchecked last
											inv !lookup
												val K_unchecked last
												val K_unchecked BLK_PREV
										inv !store
											reference
												inv !lookup
													val K_unchecked bnext
													val K_unchecked BLK_PREV
											val K_unchecked last
										inv !store
											reference
												inv !lookup
													val K_unchecked last
													val K_unchecked BLK_NEXT
											val K_unchecked bnext
										inv !continue
								inv !store
									reference
										val K_unchecked fine_so_far
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked backend
									inv !minus
										val K_unchecked mto
										val K_unchecked backsize
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked backend
											val K_unchecked BLK_HEADER_N
									val K_unchecked n
								inv !store
									reference
										inv !lookup
											val K_unchecked backend
											val K_unchecked BLK_HEADER_KOV
									val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked backend
											val K_unchecked BLK_HEADER_RCOUNT
									val K_unchecked 0
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked backend
											val K_unchecked BLK_HEADER_FLAGS
									val K_unchecked BLK_FLAG_MULTIPLE
								inv !store
									reference
										inv !lookup
											val K_unchecked backend
											val K_unchecked BLK_NEXT
									val K_unchecked bnext
								inv !if
									inv !ne
										val K_unchecked bnext
										val K_unchecked plug_00232
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked bnext
													val K_unchecked BLK_PREV
											val K_unchecked backend
										inv !store
											reference
												val K_unchecked bnext
											val K_unchecked backend
						inv !if
							val K_unchecked fine_so_far
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant FlexRecutInternal K_unchecked_function = FlexRecutInternal_B __assimilated=1
			package FlexFree_fn _function
				symbol public misc FlexFree
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexFree_B _code
					symbol private misc block
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc fromtxb
					symbol private misc ptxb
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_RESIDENT --> /main/template/constants/BLK_FLAG_RESIDENT_con/BLK_FLAG_RESIDENT
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc FlexFreeSingleBlockInternal --> /main/template/functions/FlexFreeSingleBlockInternal_fn/FlexFreeSingleBlockInternal
					local block K_unchecked
					local fromtxb K_unchecked
					local ptxb K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked block
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked block
									val K_unchecked BLK_HEADER_FLAGS
								val K_unchecked BLK_FLAG_RESIDENT
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked block
									val K_unchecked BLK_HEADER_N
								val K_unchecked 128
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !bitwiseand
								inv !lookupbyte
									val K_unchecked block
									val K_unchecked BLK_HEADER_FLAGS
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked block
											val K_unchecked BLK_PREV
										val K_unchecked plug_00232
									code
										inv !store
											reference
												inv !lookup
													inv !lookup
														val K_unchecked block
														val K_unchecked BLK_PREV
													val K_unchecked BLK_NEXT
											val K_unchecked plug_00232
								inv !store
									reference
										val K_unchecked fromtxb
									val K_unchecked block
								inv !for
									val K_unchecked 1
									inv !ne
										inv !lookup
											val K_unchecked block
											val K_unchecked BLK_NEXT
										val K_unchecked plug_00232
									inv !store
										reference
											val K_unchecked block
										inv !lookup
											val K_unchecked block
											val K_unchecked BLK_NEXT
									code
								inv !while
									inv !ne
										val K_unchecked block
										val K_unchecked fromtxb
									code
										inv !store
											reference
												val K_unchecked ptxb
											inv !lookup
												val K_unchecked block
												val K_unchecked BLK_PREV
										inv FlexFreeSingleBlockInternal
											val K_unchecked block
										inv !store
											reference
												val K_unchecked block
											val K_unchecked ptxb
						inv FlexFreeSingleBlockInternal
							val K_unchecked block
				constant FlexFree K_unchecked_function = FlexFree_B __assimilated=1
			package FlexFreeSingleBlockInternal_fn _function
				symbol public misc FlexFreeSingleBlockInternal
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexFreeSingleBlockInternal_B _code
					symbol private misc block
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc free
					symbol private misc nx
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc FlexMergeInternal --> /main/template/functions/FlexMergeInternal_fn/FlexMergeInternal
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					local block K_unchecked
					local free K_unchecked
					local nx K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked block
									val K_unchecked BLK_HEADER_KOV
							val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked block
									val K_unchecked BLK_HEADER_RCOUNT
							val K_unchecked 0
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked block
									val K_unchecked BLK_HEADER_FLAGS
							val K_unchecked BLK_FLAG_MULTIPLE
						inv !for
							inv !store
								reference
									val K_unchecked free
								val K_unchecked Flex_Heap
							inv !ne
								val K_unchecked free
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked free
								inv !lookup
									val K_unchecked free
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked nx
									inv !lookup
										val K_unchecked free
										val K_unchecked BLK_NEXT
								inv !if
									inv !eq
										val K_unchecked nx
										val K_unchecked plug_00232
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked free
													val K_unchecked BLK_NEXT
											val K_unchecked block
										inv !store
											reference
												inv !lookup
													val K_unchecked block
													val K_unchecked BLK_PREV
											val K_unchecked free
										inv !store
											reference
												inv !lookup
													val K_unchecked block
													val K_unchecked BLK_NEXT
											val K_unchecked plug_00232
										inv FlexMergeInternal
											val K_unchecked block
										inv !return
											val K_unchecked 1
								inv !if
									inv !eq
										inv UnsignedCompare
											val K_unchecked nx
											val K_unchecked block
										val K_unchecked 1
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked free
													val K_unchecked BLK_NEXT
											val K_unchecked block
										inv !store
											reference
												inv !lookup
													val K_unchecked block
													val K_unchecked BLK_PREV
											val K_unchecked free
										inv !store
											reference
												inv !lookup
													val K_unchecked block
													val K_unchecked BLK_NEXT
											val K_unchecked nx
										inv !store
											reference
												inv !lookup
													val K_unchecked nx
													val K_unchecked BLK_PREV
											val K_unchecked block
										inv FlexMergeInternal
											val K_unchecked block
										inv !return
											val K_unchecked 1
				constant FlexFreeSingleBlockInternal K_unchecked_function = FlexFreeSingleBlockInternal_B __assimilated=1
			package FlexResize_fn _function
				symbol public misc FlexResize
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexResize_B _code
					symbol private misc block
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc req
					symbol private misc newsize
					symbol private misc dsize
					symbol private misc newblk
					symbol private misc kov
					symbol private misc n
					symbol private misc i
					symbol private misc otxb
					symbol private misc flags
					symbol external misc FlexError --> /main/template/functions/FlexError_fn/FlexError
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
					symbol external misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
					local block K_unchecked
					local req K_unchecked
					local newsize K_unchecked
					local dsize K_unchecked
					local newblk K_unchecked
					local kov K_unchecked
					local n K_unchecked
					local i K_unchecked
					local otxb K_unchecked
					local flags K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked block
								val K_unchecked 0
							code
								inv FlexError
									val K_unchecked "failed resizing null block"
						inv !store
							reference
								val K_unchecked kov
							inv !lookup
								val K_unchecked block
								val K_unchecked BLK_HEADER_KOV
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked block
								val K_unchecked BLK_HEADER_FLAGS
						inv !if
							inv !eq
								inv !bitwiseand
									val K_unchecked flags
									val K_unchecked BLK_FLAG_MULTIPLE
								val K_unchecked 0
							code
								inv FlexError
									val K_unchecked "failed resizing inextensible block"
						inv !store
							reference
								val K_unchecked otxb
							val K_unchecked block
						inv !store
							reference
								val K_unchecked newsize
							val K_unchecked req
						inv !for
							val K_unchecked 1
							val K_unchecked 1
							inv !store
								reference
									val K_unchecked block
								inv !lookup
									val K_unchecked block
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked n
									inv !lookupbyte
										val K_unchecked block
										val K_unchecked BLK_HEADER_N
								inv !for
									inv !store
										reference
											val K_unchecked dsize
										val K_unchecked 1
									inv !gt
										val K_unchecked n
										val K_unchecked 0
									inv !postdecrement
										reference
											val K_unchecked n
									code
										inv !store
											reference
												val K_unchecked dsize
											inv !times
												val K_unchecked dsize
												val K_unchecked 2
								inv !store
									reference
										val K_unchecked i
									inv !minus
										val K_unchecked dsize
										val K_unchecked BLK_DATA_MULTI_OFFSET
								inv !store
									reference
										val K_unchecked newsize
									inv !minus
										val K_unchecked newsize
										val K_unchecked i
								inv !if
									inv !gt
										val K_unchecked newsize
										val K_unchecked 0
									code
										inv !if
											inv !ne
												inv !lookup
													val K_unchecked block
													val K_unchecked BLK_NEXT
												val K_unchecked plug_00232
											code
												inv !continue
										inv !store
											reference
												val K_unchecked newblk
											inv FlexAllocate
												val K_unchecked newsize
												val K_unchecked kov
												val K_unchecked flags
										inv !if
											inv !eq
												val K_unchecked newblk
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 0
										inv !store
											reference
												inv !lookup
													val K_unchecked block
													val K_unchecked BLK_NEXT
											val K_unchecked newblk
										inv !store
											reference
												inv !lookup
													val K_unchecked newblk
													val K_unchecked BLK_PREV
											val K_unchecked block
										inv !return
											val K_unchecked 1
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked block
											val K_unchecked BLK_NEXT
										val K_unchecked plug_00232
									code
										inv FlexFree
											inv !lookup
												val K_unchecked block
												val K_unchecked BLK_NEXT
										inv !store
											reference
												inv !lookup
													val K_unchecked block
													val K_unchecked BLK_NEXT
											val K_unchecked plug_00232
								inv !return
									val K_unchecked 1
				constant FlexResize K_unchecked_function = FlexResize_B __assimilated=1
			package FlexSize_fn _function
				symbol public misc FlexSize
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexSize_B _code
					symbol private misc txb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc bsize
					symbol private misc n
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					local txb K_unchecked
					local bsize K_unchecked
					local n K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txb
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked bsize
								val K_unchecked 1
							inv !lt
								val K_unchecked n
								inv !lookupbyte
									val K_unchecked txb
									val K_unchecked BLK_HEADER_N
							inv !store
								reference
									val K_unchecked bsize
								inv !times
									val K_unchecked bsize
									val K_unchecked 2
							code
								inv !postincrement
									reference
										val K_unchecked n
						inv !return
							val K_unchecked bsize
				constant FlexSize K_unchecked_function = FlexSize_B __assimilated=1
			package FlexTotalSize_fn _function
				symbol public misc FlexTotalSize
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexTotalSize_B _code
					symbol private misc txb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc size_in_bytes
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					local txb K_unchecked
					local size_in_bytes K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txb
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookupbyte
										val K_unchecked txb
										val K_unchecked BLK_HEADER_FLAGS
									val K_unchecked BLK_FLAG_MULTIPLE
								val K_unchecked 0
							code
								inv !return
									inv !minus
										inv FlexSize
											val K_unchecked txb
										val K_unchecked BLK_DATA_OFFSET
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked txb
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked txb
								inv !lookup
									val K_unchecked txb
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked size_in_bytes
									inv !minus
										inv !plus
											val K_unchecked size_in_bytes
											inv FlexSize
												val K_unchecked txb
										val K_unchecked BLK_DATA_MULTI_OFFSET
						inv !return
							val K_unchecked size_in_bytes
				constant FlexTotalSize K_unchecked_function = FlexTotalSize_B __assimilated=1
			package FlexDebug_fn _function
				symbol public misc FlexDebug
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexDebug_B _code
					symbol private misc txb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol private misc k
					symbol private misc i
					symbol private misc bsize
					symbol private misc tot
					symbol private misc dtot
					symbol private misc kov
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					local txb K_unchecked
					local n K_unchecked
					local k K_unchecked
					local i K_unchecked
					local bsize K_unchecked
					local tot K_unchecked
					local dtot K_unchecked
					local kov K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txb
								val K_unchecked 0
							code
								inv !printret
									val K_unchecked "Block never created."
						inv !store
							reference
								val K_unchecked kov
							inv !lookup
								val K_unchecked txb
								val K_unchecked BLK_HEADER_KOV
						inv !print
							val K_unchecked "Block "
						inv !printnumber
							val K_unchecked txb
						inv !print
							val K_unchecked " (kov "
						inv !printnumber
							val K_unchecked kov
						inv !print
							val K_unchecked "): "
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked txb
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked txb
								inv !lookup
									val K_unchecked txb
									val K_unchecked BLK_NEXT
							code
								inv !if
									inv !eq
										inv !postincrement
											reference
												val K_unchecked k
										val K_unchecked 100
									code
										inv !printret
											val K_unchecked " ... and so on."
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked txb
											val K_unchecked BLK_HEADER_KOV
										val K_unchecked kov
									code
										inv !print
											val K_unchecked "*Wrong kov="
										inv !printnumber
											inv !lookup
												val K_unchecked txb
												val K_unchecked BLK_HEADER_KOV
										inv !print
											val K_unchecked "* "
								inv !store
									reference
										val K_unchecked n
									inv !lookupbyte
										val K_unchecked txb
										val K_unchecked BLK_HEADER_N
								inv !for
									inv !store
										reference
											val K_unchecked bsize
										val K_unchecked 1
									inv !gt
										val K_unchecked n
										val K_unchecked 0
									inv !postdecrement
										reference
											val K_unchecked n
									code
										inv !store
											reference
												val K_unchecked bsize
											inv !times
												val K_unchecked bsize
												val K_unchecked 2
								inv !store
									reference
										val K_unchecked i
									inv !minus
										val K_unchecked bsize
										val K_unchecked BLK_DATA_OFFSET
								inv !store
									reference
										val K_unchecked dtot
									inv !plus
										val K_unchecked dtot
										val K_unchecked i
								inv !store
									reference
										val K_unchecked tot
									inv !plus
										val K_unchecked tot
										val K_unchecked bsize
								inv !printnumber
									val K_unchecked txb
								inv !print
									val K_unchecked "("
								inv !printnumber
									val K_unchecked bsize
								inv !print
									val K_unchecked ") > "
						inv !printnumber
							val K_unchecked dtot
						inv !print
							val K_unchecked " data in "
						inv !printnumber
							val K_unchecked tot
						inv !print
							val K_unchecked " bytes\n"
				constant FlexDebug K_unchecked_function = FlexDebug_B __assimilated=1
			package FlexDebugDecomposition_fn _function
				symbol public misc FlexDebugDecomposition
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package FlexDebugDecomposition_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc to
					symbol private misc txb
					symbol private misc pf
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					local from K_unchecked
					local to K_unchecked
					local txb K_unchecked
					local pf K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked to
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked to
									val K_unchecked plug_00232
						inv !for
							inv !store
								reference
									val K_unchecked txb
								val K_unchecked from
							inv !and
								inv !ne
									val K_unchecked txb
									val K_unchecked to
								inv !ne
									val K_unchecked txb
									val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked txb
								inv !lookup
									val K_unchecked txb
									val K_unchecked BLK_NEXT
							code
								inv !if
									val K_unchecked pf
									code
										inv !print
											val K_unchecked "+"
								inv !printnumber
									inv FlexSize
										val K_unchecked txb
								inv !store
									reference
										val K_unchecked pf
									val K_unchecked 1
						inv !print
							val K_unchecked "\n"
				constant FlexDebugDecomposition K_unchecked_function = FlexDebugDecomposition_B __assimilated=1
			package BlkValueGetLongBlock_fn _function
				symbol public misc BlkValueGetLongBlock
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueGetLongBlock_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_BVBITMAP --> /main/template/constants/BLK_BVBITMAP_con/BLK_BVBITMAP
					symbol external misc BLK_BVBITMAP_LONGBLOCK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCK_con/BLK_BVBITMAP_LONGBLOCK
					local bv K_unchecked
					local o K_unchecked
					code
						inv !if
							val K_unchecked bv
							code
								inv !store
									reference
										val K_unchecked o
									inv !lookup
										val K_unchecked bv
										val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked o
										val K_unchecked 0
									code
										inv !return
											inv !plus
												val K_unchecked bv
												val K_unchecked plug_00139
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked o
											val K_unchecked BLK_BVBITMAP
										val K_unchecked o
									code
										inv !if
											inv !bitwiseand
												val K_unchecked o
												val K_unchecked BLK_BVBITMAP_LONGBLOCK
											code
												inv !return
													inv !lookup
														val K_unchecked bv
														val K_unchecked 1
										inv !return
											val K_unchecked 0
								inv !return
									val K_unchecked o
						inv !return
							val K_unchecked bv
				constant BlkValueGetLongBlock K_unchecked_function = BlkValueGetLongBlock_B __assimilated=1
			package BlkValueWeakKind_fn _function
				symbol public misc BlkValueWeakKind
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueWeakKind_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc o
					symbol external misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
					symbol external misc BLK_BVBITMAP --> /main/template/constants/BLK_BVBITMAP_con/BLK_BVBITMAP
					symbol external misc BLK_BVBITMAP_TEXT --> /main/template/constants/BLK_BVBITMAP_TEXT_con/BLK_BVBITMAP_TEXT
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc plug_00504 --> /main/connectors/plug_00504
					local bv K_unchecked
					local o K_unchecked
					code
						inv !if
							val K_unchecked bv
							code
								inv !store
									reference
										val K_unchecked o
									inv !lookup
										val K_unchecked bv
										val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked o
										val K_unchecked 0
									code
										inv !return
											inv !lookup
												val K_unchecked bv
												inv !plus
													val K_unchecked BLK_HEADER_KOV
													val K_unchecked 1
								inv !if
									inv !eq
										inv !bitwiseand
											val K_unchecked o
											val K_unchecked BLK_BVBITMAP
										val K_unchecked o
									code
										inv !if
											inv !bitwiseand
												val K_unchecked o
												val K_unchecked BLK_BVBITMAP_TEXT
											code
												inv !return
													val K_unchecked plug_00342
										inv !store
											reference
												val K_unchecked o
											inv !lookup
												val K_unchecked bv
												val K_unchecked 1
								inv !return
									inv !lookup
										val K_unchecked o
										val K_unchecked BLK_HEADER_KOV
						inv !return
							val K_unchecked plug_00504
				constant BlkValueWeakKind K_unchecked_function = BlkValueWeakKind_B __assimilated=1
			package BlkValueGetRefCountPrimitive_fn _function
				symbol public misc BlkValueGetRefCountPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueGetRefCountPrimitive_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc long_block
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc RC_INFINITY --> /main/template/constants/RC_INFINITY_con/RC_INFINITY
					local bv K_unchecked
					local long_block K_unchecked
					code
						inv !store
							reference
								val K_unchecked long_block
							inv BlkValueGetLongBlock
								val K_unchecked bv
						inv !if
							val K_unchecked long_block
							code
								inv !return
									inv !lookup
										val K_unchecked long_block
										val K_unchecked BLK_HEADER_RCOUNT
						inv !return
							val K_unchecked RC_INFINITY
				constant BlkValueGetRefCountPrimitive K_unchecked_function = BlkValueGetRefCountPrimitive_B __assimilated=1
			package BlkValueIncRefCountPrimitive_fn _function
				symbol public misc BlkValueIncRefCountPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueIncRefCountPrimitive_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc long_block
					symbol private misc refc
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc RC_INFINITY --> /main/template/constants/RC_INFINITY_con/RC_INFINITY
					local bv K_unchecked
					local long_block K_unchecked
					local refc K_unchecked
					code
						inv !store
							reference
								val K_unchecked long_block
							inv BlkValueGetLongBlock
								val K_unchecked bv
						inv !if
							val K_unchecked long_block
							code
								inv !store
									reference
										val K_unchecked refc
									inv !lookup
										val K_unchecked long_block
										val K_unchecked BLK_HEADER_RCOUNT
								inv !if
									inv !lt
										val K_unchecked refc
										val K_unchecked RC_INFINITY
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked long_block
													val K_unchecked BLK_HEADER_RCOUNT
											inv !plus
												val K_unchecked refc
												val K_unchecked 1
				constant BlkValueIncRefCountPrimitive K_unchecked_function = BlkValueIncRefCountPrimitive_B __assimilated=1
			package BlkValueDecRefCountPrimitive_fn _function
				symbol public misc BlkValueDecRefCountPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueDecRefCountPrimitive_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc long_block
					symbol private misc refc
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
					symbol external misc RC_INFINITY --> /main/template/constants/RC_INFINITY_con/RC_INFINITY
					symbol external misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
					local bv K_unchecked
					local long_block K_unchecked
					local refc K_unchecked
					code
						inv !store
							reference
								val K_unchecked long_block
							inv BlkValueGetLongBlock
								val K_unchecked bv
						inv !if
							val K_unchecked long_block
							code
								inv !store
									reference
										val K_unchecked refc
									inv !lookup
										val K_unchecked long_block
										val K_unchecked BLK_HEADER_RCOUNT
								inv !if
									inv !lt
										val K_unchecked refc
										val K_unchecked RC_INFINITY
									code
										inv !postdecrement
											reference
												val K_unchecked refc
										inv !if
											inv !lt
												val K_unchecked refc
												val K_unchecked 0
											code
												inv BlkValueError
													val K_unchecked "reference count negative"
										inv !store
											reference
												inv !lookup
													val K_unchecked long_block
													val K_unchecked BLK_HEADER_RCOUNT
											val K_unchecked refc
								inv !return
									val K_unchecked refc
						inv !return
							val K_unchecked RC_INFINITY
				constant BlkValueDecRefCountPrimitive K_unchecked_function = BlkValueDecRefCountPrimitive_B __assimilated=1
			package BlkValueLBCapacity_fn _function
				symbol public misc BlkValueLBCapacity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueLBCapacity_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc long_block
					symbol private misc array_size_in_bytes
					symbol private misc entry_size_in_bytes
					symbol private misc flags
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc FlexTotalSize --> /main/template/functions/FlexTotalSize_fn/FlexTotalSize
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local bv K_unchecked
					local long_block K_unchecked
					local array_size_in_bytes K_unchecked
					local entry_size_in_bytes K_unchecked
					local flags K_unchecked
					code
						inv !store
							reference
								val K_unchecked long_block
							inv BlkValueGetLongBlock
								val K_unchecked bv
						inv !if
							inv !eq
								val K_unchecked long_block
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked array_size_in_bytes
							inv FlexTotalSize
								val K_unchecked long_block
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !store
							reference
								val K_unchecked entry_size_in_bytes
							val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_16_BIT
							code
								inv !store
									reference
										val K_unchecked entry_size_in_bytes
									val K_unchecked 2
							code
								inv !if
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_WORD
									code
										inv !store
											reference
												val K_unchecked entry_size_in_bytes
											val K_unchecked plug_00139
						inv !return
							inv !divide
								val K_unchecked array_size_in_bytes
								val K_unchecked entry_size_in_bytes
				constant BlkValueLBCapacity K_unchecked_function = BlkValueLBCapacity_B __assimilated=1
			package BlkValueSetLBCapacity_fn _function
				symbol public misc BlkValueSetLBCapacity
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueSetLBCapacity_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc new_capacity
					symbol private misc long_block
					symbol private misc flags
					symbol private misc entry_size_in_bytes
					symbol external misc BlkMakeMutable --> /main/template/functions/BlkMakeMutable_fn/BlkMakeMutable
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc FlexResize --> /main/template/functions/FlexResize_fn/FlexResize
					local bv K_unchecked
					local new_capacity K_unchecked
					local long_block K_unchecked
					local flags K_unchecked
					local entry_size_in_bytes K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked bv
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv BlkMakeMutable
							val K_unchecked bv
						inv !store
							reference
								val K_unchecked long_block
							inv BlkValueGetLongBlock
								val K_unchecked bv
						inv !if
							inv !eq
								val K_unchecked long_block
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !store
							reference
								val K_unchecked entry_size_in_bytes
							val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_16_BIT
							code
								inv !store
									reference
										val K_unchecked entry_size_in_bytes
									val K_unchecked 2
							code
								inv !if
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_WORD
									code
										inv !store
											reference
												val K_unchecked entry_size_in_bytes
											val K_unchecked plug_00139
						inv FlexResize
							val K_unchecked long_block
							inv !times
								val K_unchecked new_capacity
								val K_unchecked entry_size_in_bytes
						inv !return
							val K_unchecked 1
				constant BlkValueSetLBCapacity K_unchecked_function = BlkValueSetLBCapacity_B __assimilated=1
			package BlkValueRead_fn _function
				symbol public misc BlkValueRead
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueRead_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc pos
					symbol private misc do_not_indirect
					symbol private misc long_block
					symbol private misc chunk_size_in_bytes
					symbol private misc header_size_in_bytes
					symbol private misc flags
					symbol private misc entry_size_in_bytes
					symbol private misc seek_byte_position
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					local from K_unchecked
					local pos K_unchecked
					local do_not_indirect K_unchecked
					local long_block K_unchecked
					local chunk_size_in_bytes K_unchecked
					local header_size_in_bytes K_unchecked
					local flags K_unchecked
					local entry_size_in_bytes K_unchecked
					local seek_byte_position K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !ifelse
							val K_unchecked do_not_indirect
							code
								inv !store
									reference
										val K_unchecked long_block
									val K_unchecked from
							code
								inv !store
									reference
										val K_unchecked long_block
									inv BlkValueGetLongBlock
										val K_unchecked from
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !store
							reference
								val K_unchecked entry_size_in_bytes
							val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_16_BIT
							code
								inv !store
									reference
										val K_unchecked entry_size_in_bytes
									val K_unchecked 2
							code
								inv !if
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_WORD
									code
										inv !store
											reference
												val K_unchecked entry_size_in_bytes
											val K_unchecked plug_00139
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										val K_unchecked header_size_in_bytes
									val K_unchecked BLK_DATA_MULTI_OFFSET
							code
								inv !store
									reference
										val K_unchecked header_size_in_bytes
									val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								val K_unchecked seek_byte_position
							inv !times
								val K_unchecked pos
								val K_unchecked entry_size_in_bytes
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked long_block
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked long_block
								inv !lookup
									val K_unchecked long_block
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked chunk_size_in_bytes
									inv !minus
										inv FlexSize
											val K_unchecked long_block
										val K_unchecked header_size_in_bytes
								inv !if
									inv !and
										inv !ge
											val K_unchecked seek_byte_position
											val K_unchecked 0
										inv !lt
											val K_unchecked seek_byte_position
											val K_unchecked chunk_size_in_bytes
									code
										inv !store
											reference
												val K_unchecked long_block
											inv !plus
												inv !plus
													val K_unchecked long_block
													val K_unchecked header_size_in_bytes
												val K_unchecked seek_byte_position
										inv !switch
											val K_unchecked entry_size_in_bytes
											code
												inv !case
													val K_unchecked 1
													code
														inv !return
															inv !lookupbyte
																val K_unchecked long_block
																val K_unchecked 0
												inv !case
													val K_unchecked 2
													code
														inv !return
															inv !plus
																inv !times
																	inv !lookupbyte
																		val K_unchecked long_block
																		val K_unchecked 0
																	val K_unchecked 256
																inv !lookupbyte
																	val K_unchecked long_block
																	val K_unchecked 1
												inv !case
													val K_unchecked 4
													code
														inv !return
															inv !lookup
																val K_unchecked long_block
																val K_unchecked 0
								inv !store
									reference
										val K_unchecked seek_byte_position
									inv !minus
										val K_unchecked seek_byte_position
										val K_unchecked chunk_size_in_bytes
						inv !print
							val K_unchecked "*** BlkValueRead: reading from index out of range: "
						inv !printnumber
							val K_unchecked pos
						inv !print
							val K_unchecked " in "
						inv !printnumber
							val K_unchecked from
						inv !print
							val K_unchecked " ***"
						inv !print
							val K_unchecked "\n"
						inv !return
							val K_unchecked 1
				constant BlkValueRead K_unchecked_function = BlkValueRead_B __assimilated=1
			package BlkValueWrite_fn _function
				symbol public misc BlkValueWrite
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueWrite_B _code
					symbol private misc to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc pos
					symbol private misc val
					symbol private misc do_not_indirect
					symbol private misc long_block
					symbol private misc chunk_size_in_bytes
					symbol private misc header_size_in_bytes
					symbol private misc flags
					symbol private misc entry_size_in_bytes
					symbol private misc seek_byte_position
					symbol external misc BlkMakeMutable --> /main/template/functions/BlkMakeMutable_fn/BlkMakeMutable
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					local to K_unchecked
					local pos K_unchecked
					local val K_unchecked
					local do_not_indirect K_unchecked
					local long_block K_unchecked
					local chunk_size_in_bytes K_unchecked
					local header_size_in_bytes K_unchecked
					local flags K_unchecked
					local entry_size_in_bytes K_unchecked
					local seek_byte_position K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked to
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !ifelse
							val K_unchecked do_not_indirect
							code
								inv !store
									reference
										val K_unchecked long_block
									val K_unchecked to
							code
								inv BlkMakeMutable
									val K_unchecked to
								inv !store
									reference
										val K_unchecked long_block
									inv BlkValueGetLongBlock
										val K_unchecked to
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !store
							reference
								val K_unchecked entry_size_in_bytes
							val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_16_BIT
							code
								inv !store
									reference
										val K_unchecked entry_size_in_bytes
									val K_unchecked 2
							code
								inv !if
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_WORD
									code
										inv !store
											reference
												val K_unchecked entry_size_in_bytes
											val K_unchecked plug_00139
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										val K_unchecked header_size_in_bytes
									val K_unchecked BLK_DATA_MULTI_OFFSET
							code
								inv !store
									reference
										val K_unchecked header_size_in_bytes
									val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								val K_unchecked seek_byte_position
							inv !times
								val K_unchecked pos
								val K_unchecked entry_size_in_bytes
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked long_block
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked long_block
								inv !lookup
									val K_unchecked long_block
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked chunk_size_in_bytes
									inv !minus
										inv FlexSize
											val K_unchecked long_block
										val K_unchecked header_size_in_bytes
								inv !if
									inv !and
										inv !ge
											val K_unchecked seek_byte_position
											val K_unchecked 0
										inv !lt
											val K_unchecked seek_byte_position
											val K_unchecked chunk_size_in_bytes
									code
										inv !store
											reference
												val K_unchecked long_block
											inv !plus
												inv !plus
													val K_unchecked long_block
													val K_unchecked header_size_in_bytes
												val K_unchecked seek_byte_position
										inv !switch
											val K_unchecked entry_size_in_bytes
											code
												inv !case
													val K_unchecked 1
													code
														inv !store
															reference
																inv !lookupbyte
																	val K_unchecked long_block
																	val K_unchecked 0
															val K_unchecked val
												inv !case
													val K_unchecked 2
													code
														inv !store
															reference
																inv !lookupbyte
																	val K_unchecked long_block
																	val K_unchecked 0
															inv !modulo
																inv !divide
																	val K_unchecked val
																	val K_unchecked 256
																val K_unchecked 256
														inv !store
															reference
																inv !lookupbyte
																	val K_unchecked long_block
																	val K_unchecked 1
															inv !modulo
																val K_unchecked val
																val K_unchecked 256
												inv !case
													val K_unchecked 4
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked long_block
																	val K_unchecked 0
															val K_unchecked val
										inv !return
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked seek_byte_position
									inv !minus
										val K_unchecked seek_byte_position
										val K_unchecked chunk_size_in_bytes
						inv !print
							val K_unchecked "*** BlkValueWrite: writing to index out of range: "
						inv !printnumber
							val K_unchecked pos
						inv !print
							val K_unchecked " in "
						inv !printnumber
							val K_unchecked to
						inv !print
							val K_unchecked " ***"
						inv !print
							val K_unchecked "\n"
						inv !return
							val K_unchecked 1
				constant BlkValueWrite K_unchecked_function = BlkValueWrite_B __assimilated=1
			package BlkValueSeekZeroEntry_fn _function
				symbol public misc BlkValueSeekZeroEntry
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueSeekZeroEntry_B _code
					symbol private misc from
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc long_block
					symbol private misc chunk_size_in_bytes
					symbol private misc header_size_in_bytes
					symbol private misc flags
					symbol private misc entry_size_in_bytes
					symbol private misc byte_position
					symbol private misc addr
					symbol private misc from_addr
					symbol private misc to_addr
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					local from K_unchecked
					local long_block K_unchecked
					local chunk_size_in_bytes K_unchecked
					local header_size_in_bytes K_unchecked
					local flags K_unchecked
					local entry_size_in_bytes K_unchecked
					local byte_position K_unchecked
					local addr K_unchecked
					local from_addr K_unchecked
					local to_addr K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked from
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked long_block
							inv BlkValueGetLongBlock
								val K_unchecked from
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !store
							reference
								val K_unchecked entry_size_in_bytes
							val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_16_BIT
							code
								inv !store
									reference
										val K_unchecked entry_size_in_bytes
									val K_unchecked 2
							code
								inv !if
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_WORD
									code
										inv !store
											reference
												val K_unchecked entry_size_in_bytes
											val K_unchecked plug_00139
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										val K_unchecked header_size_in_bytes
									val K_unchecked BLK_DATA_MULTI_OFFSET
							code
								inv !store
									reference
										val K_unchecked header_size_in_bytes
									val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								val K_unchecked byte_position
							val K_unchecked 0
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked long_block
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked long_block
								inv !lookup
									val K_unchecked long_block
									val K_unchecked BLK_NEXT
							code
								inv !store
									reference
										val K_unchecked chunk_size_in_bytes
									inv !minus
										inv FlexSize
											val K_unchecked long_block
										val K_unchecked header_size_in_bytes
								inv !store
									reference
										val K_unchecked from_addr
									inv !plus
										val K_unchecked long_block
										val K_unchecked header_size_in_bytes
								inv !store
									reference
										val K_unchecked to_addr
									inv !plus
										val K_unchecked from_addr
										val K_unchecked chunk_size_in_bytes
								inv !switch
									val K_unchecked entry_size_in_bytes
									code
										inv !case
											val K_unchecked 1
											code
												inv !for
													inv !store
														reference
															val K_unchecked addr
														val K_unchecked from_addr
													inv !lt
														val K_unchecked addr
														val K_unchecked to_addr
													inv !postincrement
														reference
															val K_unchecked addr
													code
														inv !if
															inv !eq
																inv !lookupbyte
																	val K_unchecked addr
																	val K_unchecked 0
																val K_unchecked 0
															code
																inv !return
																	inv !minus
																		inv !plus
																			val K_unchecked byte_position
																			val K_unchecked addr
																		val K_unchecked from_addr
										inv !case
											val K_unchecked 2
											code
												inv !for
													inv !store
														reference
															val K_unchecked addr
														val K_unchecked from_addr
													inv !lt
														val K_unchecked addr
														val K_unchecked to_addr
													inv !store
														reference
															val K_unchecked addr
														inv !plus
															val K_unchecked addr
															val K_unchecked 2
													code
														inv !if
															inv !and
																inv !eq
																	inv !lookupbyte
																		val K_unchecked addr
																		val K_unchecked 0
																	val K_unchecked 0
																inv !eq
																	inv !lookupbyte
																		val K_unchecked addr
																		val K_unchecked 1
																	val K_unchecked 0
															code
																inv !return
																	inv !divide
																		inv !minus
																			inv !plus
																				val K_unchecked byte_position
																				val K_unchecked addr
																			val K_unchecked from_addr
																		val K_unchecked 2
										inv !case
											val K_unchecked 4
											code
												inv !for
													inv !store
														reference
															val K_unchecked addr
														val K_unchecked from_addr
													inv !lt
														val K_unchecked addr
														val K_unchecked to_addr
													inv !store
														reference
															val K_unchecked addr
														inv !plus
															val K_unchecked addr
															val K_unchecked 4
													code
														inv !if
															inv !eq
																inv !lookup
																	val K_unchecked addr
																	val K_unchecked 0
																val K_unchecked 0
															code
																inv !return
																	inv !divide
																		inv !minus
																			inv !plus
																				val K_unchecked byte_position
																				val K_unchecked addr
																			val K_unchecked from_addr
																		val K_unchecked 4
								inv !store
									reference
										val K_unchecked byte_position
									inv !plus
										val K_unchecked byte_position
										val K_unchecked chunk_size_in_bytes
						inv !return
							inv !unaryminus
								val K_unchecked 1
				constant BlkValueSeekZeroEntry K_unchecked_function = BlkValueSeekZeroEntry_B __assimilated=1
			package BlkValueMassCopyEntries_fn _function
				symbol public misc BlkValueMassCopyEntries
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueMassCopyEntries_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol private misc no_entries_to_copy
					symbol private misc from_long_block
					symbol private misc from_addr
					symbol private misc from_bytes_left
					symbol private misc from_header_size_in_bytes
					symbol private misc to_long_block
					symbol private misc to_addr
					symbol private misc to_bytes_left
					symbol private misc to_header_size_in_bytes
					symbol private misc bytes_to_copy
					symbol private misc flags
					symbol private misc entry_size_in_bytes
					symbol private misc min
					symbol external misc BlkMakeMutable --> /main/template/functions/BlkMakeMutable_fn/BlkMakeMutable
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_FLAG_TRUNCMULT --> /main/template/constants/BLK_FLAG_TRUNCMULT_con/BLK_FLAG_TRUNCMULT
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					symbol external misc Memcpy --> /main/template/functions/Memcpy_fn/Memcpy
					local to_bv K_unchecked
					local from_bv K_unchecked
					local no_entries_to_copy K_unchecked
					local from_long_block K_unchecked
					local from_addr K_unchecked
					local from_bytes_left K_unchecked
					local from_header_size_in_bytes K_unchecked
					local to_long_block K_unchecked
					local to_addr K_unchecked
					local to_bytes_left K_unchecked
					local to_header_size_in_bytes K_unchecked
					local bytes_to_copy K_unchecked
					local flags K_unchecked
					local entry_size_in_bytes K_unchecked
					local min K_unchecked
					code
						inv BlkMakeMutable
							val K_unchecked to_bv
						inv !store
							reference
								val K_unchecked from_long_block
							inv BlkValueGetLongBlock
								val K_unchecked from_bv
						inv !store
							reference
								val K_unchecked to_long_block
							inv BlkValueGetLongBlock
								val K_unchecked to_bv
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked from_long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !store
							reference
								val K_unchecked entry_size_in_bytes
							val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_16_BIT
							code
								inv !store
									reference
										val K_unchecked entry_size_in_bytes
									val K_unchecked 2
							code
								inv !if
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_WORD
									code
										inv !store
											reference
												val K_unchecked entry_size_in_bytes
											val K_unchecked plug_00139
						inv !if
							inv !and
								inv !bitwiseand
									val K_unchecked flags
									inv !plus
										val K_unchecked BLK_FLAG_MULTIPLE
										val K_unchecked BLK_FLAG_TRUNCMULT
								inv !eq
									inv BlkValueSetLBCapacity
										val K_unchecked to_bv
										val K_unchecked no_entries_to_copy
									val K_unchecked 0
							code
								inv BlkValueError
									val K_unchecked "copy resizing failed"
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										val K_unchecked from_header_size_in_bytes
									val K_unchecked BLK_DATA_MULTI_OFFSET
							code
								inv !store
									reference
										val K_unchecked from_header_size_in_bytes
									val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked to_long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										val K_unchecked to_header_size_in_bytes
									val K_unchecked BLK_DATA_MULTI_OFFSET
							code
								inv !store
									reference
										val K_unchecked to_header_size_in_bytes
									val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								val K_unchecked from_addr
							inv !plus
								val K_unchecked from_long_block
								val K_unchecked from_header_size_in_bytes
						inv !store
							reference
								val K_unchecked from_bytes_left
							inv !minus
								inv FlexSize
									val K_unchecked from_long_block
								val K_unchecked from_header_size_in_bytes
						inv !store
							reference
								val K_unchecked to_addr
							inv !plus
								val K_unchecked to_long_block
								val K_unchecked to_header_size_in_bytes
						inv !store
							reference
								val K_unchecked to_bytes_left
							inv !minus
								inv FlexSize
									val K_unchecked to_long_block
								val K_unchecked to_header_size_in_bytes
						inv !store
							reference
								val K_unchecked bytes_to_copy
							inv !times
								val K_unchecked entry_size_in_bytes
								val K_unchecked no_entries_to_copy
						inv !while
							val K_unchecked 1
							code
								inv !ifelse
									inv !eq
										val K_unchecked from_bytes_left
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked from_long_block
											inv !lookup
												val K_unchecked from_long_block
												val K_unchecked BLK_NEXT
										inv !if
											inv !eq
												val K_unchecked from_long_block
												val K_unchecked 0
											code
												inv BlkValueError
													val K_unchecked "copy destination exhausted"
										inv !store
											reference
												val K_unchecked from_addr
											inv !plus
												val K_unchecked from_long_block
												val K_unchecked from_header_size_in_bytes
										inv !store
											reference
												val K_unchecked from_bytes_left
											inv !minus
												inv FlexSize
													val K_unchecked from_long_block
												val K_unchecked from_header_size_in_bytes
									code
										inv !ifelse
											inv !eq
												val K_unchecked to_bytes_left
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked to_long_block
													inv !lookup
														val K_unchecked to_long_block
														val K_unchecked BLK_NEXT
												inv !if
													inv !eq
														val K_unchecked to_long_block
														val K_unchecked 0
													code
														inv BlkValueError
															val K_unchecked "copy source exhausted"
												inv !store
													reference
														val K_unchecked to_addr
													inv !plus
														val K_unchecked to_long_block
														val K_unchecked to_header_size_in_bytes
												inv !store
													reference
														val K_unchecked to_bytes_left
													inv !minus
														inv FlexSize
															val K_unchecked to_long_block
														val K_unchecked to_header_size_in_bytes
											code
												inv !store
													reference
														val K_unchecked min
													val K_unchecked from_bytes_left
												inv !if
													inv !lt
														val K_unchecked to_bytes_left
														val K_unchecked min
													code
														inv !store
															reference
																val K_unchecked min
															val K_unchecked to_bytes_left
												inv !if
													inv !le
														val K_unchecked bytes_to_copy
														val K_unchecked min
													code
														inv Memcpy
															val K_unchecked to_addr
															val K_unchecked from_addr
															val K_unchecked bytes_to_copy
														inv !return
															val K_unchecked 1
												inv Memcpy
													val K_unchecked to_addr
													val K_unchecked from_addr
													val K_unchecked min
												inv !store
													reference
														val K_unchecked bytes_to_copy
													inv !minus
														val K_unchecked bytes_to_copy
														val K_unchecked min
												inv !store
													reference
														val K_unchecked from_addr
													inv !plus
														val K_unchecked from_addr
														val K_unchecked min
												inv !store
													reference
														val K_unchecked from_bytes_left
													inv !minus
														val K_unchecked from_bytes_left
														val K_unchecked min
												inv !store
													reference
														val K_unchecked to_addr
													inv !plus
														val K_unchecked to_addr
														val K_unchecked min
												inv !store
													reference
														val K_unchecked to_bytes_left
													inv !minus
														val K_unchecked to_bytes_left
														val K_unchecked min
				constant BlkValueMassCopyEntries K_unchecked_function = BlkValueMassCopyEntries_B __assimilated=1
			package BlkValueMassCopyFromArray_fn _function
				symbol public misc BlkValueMassCopyFromArray
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueMassCopyFromArray_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_array
					symbol private misc from_entry_size
					symbol private misc no_entries_to_copy
					symbol private misc to_long_block
					symbol private misc to_addr
					symbol private misc to_entries_left
					symbol private misc to_header_size
					symbol private misc to_entry_size
					symbol private misc flags
					symbol external misc BlkMakeMutable --> /main/template/functions/BlkMakeMutable_fn/BlkMakeMutable
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
					symbol external misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_FLAG_TRUNCMULT --> /main/template/constants/BLK_FLAG_TRUNCMULT_con/BLK_FLAG_TRUNCMULT
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
					symbol external misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					symbol external misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
					symbol external misc Arrcpy --> /main/template/functions/Arrcpy_fn/Arrcpy
					symbol external misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
					local to_bv K_unchecked
					local from_array K_unchecked
					local from_entry_size K_unchecked
					local no_entries_to_copy K_unchecked
					local to_long_block K_unchecked
					local to_addr K_unchecked
					local to_entries_left K_unchecked
					local to_header_size K_unchecked
					local to_entry_size K_unchecked
					local flags K_unchecked
					code
						inv BlkMakeMutable
							val K_unchecked to_bv
						inv !store
							reference
								val K_unchecked to_long_block
							inv BlkValueGetLongBlock
								val K_unchecked to_bv
						inv !store
							reference
								val K_unchecked flags
							inv !lookupbyte
								val K_unchecked to_long_block
								val K_unchecked BLK_HEADER_FLAGS
						inv !store
							reference
								val K_unchecked to_entry_size
							val K_unchecked 1
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_16_BIT
							code
								inv !store
									reference
										val K_unchecked to_entry_size
									val K_unchecked 2
							code
								inv !if
									inv !bitwiseand
										val K_unchecked flags
										val K_unchecked BLK_FLAG_WORD
									code
										inv !store
											reference
												val K_unchecked to_entry_size
											val K_unchecked plug_00139
						inv !if
							inv !and
								inv !bitwiseand
									val K_unchecked flags
									inv !plus
										val K_unchecked BLK_FLAG_MULTIPLE
										val K_unchecked BLK_FLAG_TRUNCMULT
								inv !eq
									inv BlkValueSetLBCapacity
										val K_unchecked to_bv
										val K_unchecked no_entries_to_copy
									val K_unchecked 0
							code
								inv BlkValueError
									val K_unchecked "copy resizing failed"
						inv !ifelse
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked BLK_FLAG_MULTIPLE
							code
								inv !store
									reference
										val K_unchecked to_header_size
									val K_unchecked BLK_DATA_MULTI_OFFSET
							code
								inv !store
									reference
										val K_unchecked to_header_size
									val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								val K_unchecked to_addr
							inv !plus
								val K_unchecked to_long_block
								val K_unchecked to_header_size
						inv !store
							reference
								val K_unchecked to_entries_left
							inv !divide
								inv !minus
									inv FlexSize
										val K_unchecked to_long_block
									val K_unchecked to_header_size
								val K_unchecked to_entry_size
						inv !while
							inv !gt
								val K_unchecked no_entries_to_copy
								val K_unchecked to_entries_left
							code
								inv Arrcpy
									val K_unchecked to_addr
									val K_unchecked to_entry_size
									val K_unchecked from_array
									val K_unchecked from_entry_size
									val K_unchecked to_entries_left
								inv !store
									reference
										val K_unchecked no_entries_to_copy
									inv !minus
										val K_unchecked no_entries_to_copy
										val K_unchecked to_entries_left
								inv !store
									reference
										val K_unchecked from_array
									inv !plus
										val K_unchecked from_array
										inv !times
											val K_unchecked to_entries_left
											val K_unchecked from_entry_size
								inv !store
									reference
										val K_unchecked to_long_block
									inv !lookup
										val K_unchecked to_long_block
										val K_unchecked BLK_NEXT
								inv !if
									inv !eq
										val K_unchecked to_long_block
										val K_unchecked 0
									code
										inv BlkValueError
											val K_unchecked "copy source exhausted"
								inv !store
									reference
										val K_unchecked to_addr
									inv !plus
										val K_unchecked to_long_block
										val K_unchecked to_header_size
								inv !store
									reference
										val K_unchecked to_entries_left
									inv !divide
										inv !minus
											inv FlexSize
												val K_unchecked to_long_block
											val K_unchecked to_header_size
										val K_unchecked to_entry_size
						inv !if
							inv !gt
								val K_unchecked no_entries_to_copy
								val K_unchecked 0
							code
								inv Arrcpy
									val K_unchecked to_addr
									val K_unchecked to_entry_size
									val K_unchecked from_array
									val K_unchecked from_entry_size
									val K_unchecked no_entries_to_copy
				constant BlkValueMassCopyFromArray K_unchecked_function = BlkValueMassCopyFromArray_B __assimilated=1
			package BlkValueCreate_fn _function
				symbol public misc BlkValueCreate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCreate_B _code
					symbol private misc strong_kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc short_block
					symbol private misc kovs
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc CREATE_KOVS --> /main/template/constants/CREATE_KOVS_con/CREATE_KOVS
					local strong_kind K_unchecked
					local short_block K_unchecked
					local kovs K_unchecked
					code
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								val K_unchecked strong_kind
								val K_unchecked "impossible allocation"
						inv !store
							reference
								val K_unchecked short_block
							inv !indirect3
								val K_unchecked kovs
								val K_unchecked CREATE_KOVS
								val K_unchecked strong_kind
								val K_unchecked short_block
						inv !return
							val K_unchecked short_block
				constant BlkValueCreate K_unchecked_function = BlkValueCreate_B __assimilated=1
			package BlkValueError_fn _function
				symbol public misc BlkValueError
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueError_B _code
					symbol private misc reason
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_HEAPERROR --> /main/template/constants/RTP_HEAPERROR_con/RTP_HEAPERROR
					local reason K_unchecked
					code
						inv !print
							val K_unchecked "*** Value handling failed: "
						inv !printstring
							val K_unchecked reason
						inv !print
							val K_unchecked " ***\n"
						inv RunTimeProblem
							val K_unchecked RTP_HEAPERROR
						inv @quit
				constant BlkValueError K_unchecked_function = BlkValueError_B __assimilated=1
			package BlkValueCreateSB1_fn _function
				symbol public misc BlkValueCreateSB1
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCreateSB1_B _code
					symbol private misc short_block
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc val
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					local short_block K_unchecked
					local val K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked short_block
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked short_block
									inv !plus
										inv FlexAllocate
											val K_unchecked plug_00139
											val K_unchecked 0
											val K_unchecked BLK_FLAG_WORD
										val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								inv !lookup
									val K_unchecked short_block
									val K_unchecked 0
							val K_unchecked val
						inv !return
							val K_unchecked short_block
				constant BlkValueCreateSB1 K_unchecked_function = BlkValueCreateSB1_B __assimilated=1
			package BlkValueCreateSB2_fn _function
				symbol public misc BlkValueCreateSB2
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCreateSB2_B _code
					symbol private misc short_block
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc val1
					symbol private misc val2
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					local short_block K_unchecked
					local val1 K_unchecked
					local val2 K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked short_block
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked short_block
									inv !plus
										inv FlexAllocate
											inv !times
												val K_unchecked 2
												val K_unchecked plug_00139
											val K_unchecked 0
											val K_unchecked BLK_FLAG_WORD
										val K_unchecked BLK_DATA_OFFSET
						inv !store
							reference
								inv !lookup
									val K_unchecked short_block
									val K_unchecked 0
							val K_unchecked val1
						inv !store
							reference
								inv !lookup
									val K_unchecked short_block
									val K_unchecked 1
							val K_unchecked val2
						inv !return
							val K_unchecked short_block
				constant BlkValueCreateSB2 K_unchecked_function = BlkValueCreateSB2_B __assimilated=1
			package StackFramingInitialise_fn _function
				symbol public misc StackFramingInitialise
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package StackFramingInitialise_B _code
					symbol external misc plug_00506 --> /main/template/variables/I7SFRAME_var/I7SFRAME
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc blockv_stack --> /main/template/arrays/blockv_stack_arr/blockv_stack
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLOCKV_STACK_SIZE --> /main/template/constants/BLOCKV_STACK_SIZE_con/BLOCKV_STACK_SIZE
					code
						inv !store
							reference
								val K_unchecked I7SFRAME
							inv !plus
								val K_unchecked blockv_stack
								inv !times
									val K_unchecked plug_00139
									val K_unchecked BLOCKV_STACK_SIZE
				constant StackFramingInitialise K_unchecked_function = StackFramingInitialise_B __assimilated=1
			package StackFrameCreate_fn _function
				symbol public misc StackFrameCreate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package StackFrameCreate_B _code
					symbol private misc size
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc new
					symbol external misc plug_00506 --> /main/template/variables/I7SFRAME_var/I7SFRAME
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc blockv_stack --> /main/template/arrays/blockv_stack_arr/blockv_stack
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_HEAPERROR --> /main/template/constants/RTP_HEAPERROR_con/RTP_HEAPERROR
					local size K_unchecked
					local new K_unchecked
					code
						inv !store
							reference
								val K_unchecked new
							inv !minus
								val K_unchecked I7SFRAME
								inv !times
									val K_unchecked plug_00139
									val K_unchecked size
						inv !if
							inv !lt
								val K_unchecked new
								val K_unchecked blockv_stack
							code
								inv RunTimeProblem
									val K_unchecked RTP_HEAPERROR
								inv @quit
						inv !store
							reference
								val K_unchecked I7SFRAME
							val K_unchecked new
				constant StackFrameCreate K_unchecked_function = StackFrameCreate_B __assimilated=1
			package BlkValueCreateOnStack_fn _function
				symbol public misc BlkValueCreateOnStack
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCreateOnStack_B _code
					symbol private misc offset
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc strong_kind
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00506 --> /main/template/variables/I7SFRAME_var/I7SFRAME
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local offset K_unchecked
					local strong_kind K_unchecked
					code
						inv BlkValueCreate
							val K_unchecked strong_kind
							inv !plus
								val K_unchecked I7SFRAME
								inv !times
									val K_unchecked plug_00139
									val K_unchecked offset
				constant BlkValueCreateOnStack K_unchecked_function = BlkValueCreateOnStack_B __assimilated=1
			package BlkValueFreeOnStack_fn _function
				symbol public misc BlkValueFreeOnStack
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueFreeOnStack_B _code
					symbol private misc offset
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc plug_00506 --> /main/template/variables/I7SFRAME_var/I7SFRAME
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local offset K_unchecked
					code
						inv BlkValueFree
							inv !plus
								val K_unchecked I7SFRAME
								inv !times
									val K_unchecked plug_00139
									val K_unchecked offset
				constant BlkValueFreeOnStack K_unchecked_function = BlkValueFreeOnStack_B __assimilated=1
			package BlkValueFree_fn _function
				symbol public misc BlkValueFree
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueFree_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kovs
					symbol private misc d
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc BlkValueDestroyPrimitive --> /main/template/functions/BlkValueDestroyPrimitive_fn/BlkValueDestroyPrimitive
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc plug_00502 --> /main/connectors/plug_00502
					symbol external misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
					symbol external misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
					local bv K_unchecked
					local kovs K_unchecked
					local d K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked bv
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								inv BlkValueWeakKind
									val K_unchecked bv
								val K_unchecked "impossible deallocation"
						inv BlkValueDestroyPrimitive
							val K_unchecked bv
							val K_unchecked kovs
						inv !store
							reference
								val K_unchecked d
							inv !minus
								val K_unchecked bv
								val K_unchecked Flex_Heap
						inv !if
							inv !and
								inv !ge
									val K_unchecked d
									val K_unchecked 0
								inv !lt
									val K_unchecked d
									inv !plus
										val K_unchecked plug_00502
										val K_unchecked 16
							code
								inv FlexFree
									inv !minus
										val K_unchecked bv
										val K_unchecked BLK_DATA_OFFSET
				constant BlkValueFree K_unchecked_function = BlkValueFree_B __assimilated=1
			package BlkValueQuickCopyPrimitive_fn _function
				symbol public misc BlkValueQuickCopyPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueQuickCopyPrimitive_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol private misc kovs
					symbol external misc BlkValueDestroyPrimitive --> /main/template/functions/BlkValueDestroyPrimitive_fn/BlkValueDestroyPrimitive
					symbol external misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
					symbol external misc BlkValueIncRefCountPrimitive --> /main/template/functions/BlkValueIncRefCountPrimitive_fn/BlkValueIncRefCountPrimitive
					local to_bv K_unchecked
					local from_bv K_unchecked
					local kovs K_unchecked
					code
						inv BlkValueDestroyPrimitive
							val K_unchecked to_bv
							val K_unchecked kovs
						inv !indirect3
							val K_unchecked kovs
							val K_unchecked COPYSB_KOVS
							val K_unchecked to_bv
							val K_unchecked from_bv
						inv BlkValueIncRefCountPrimitive
							val K_unchecked from_bv
				constant BlkValueQuickCopyPrimitive K_unchecked_function = BlkValueQuickCopyPrimitive_B __assimilated=1
			package BlkValueCopySB1_fn _function
				symbol public misc BlkValueCopySB1
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCopySB1_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local to_bv K_unchecked
					local from_bv K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked to_bv
									val K_unchecked 0
							inv !lookup
								val K_unchecked from_bv
								val K_unchecked 0
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked to_bv
									val K_unchecked 0
								val K_unchecked 0
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked to_bv
											val K_unchecked 0
									inv !plus
										val K_unchecked from_bv
										val K_unchecked plug_00139
				constant BlkValueCopySB1 K_unchecked_function = BlkValueCopySB1_B __assimilated=1
			package BlkValueCopySB2_fn _function
				symbol public misc BlkValueCopySB2
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCopySB2_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					local to_bv K_unchecked
					local from_bv K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked to_bv
									val K_unchecked 0
							inv !lookup
								val K_unchecked from_bv
								val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked to_bv
									val K_unchecked 1
							inv !lookup
								val K_unchecked from_bv
								val K_unchecked 1
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked to_bv
									val K_unchecked 1
								val K_unchecked 0
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked to_bv
											val K_unchecked 1
									inv !plus
										val K_unchecked from_bv
										inv !times
											val K_unchecked 2
											val K_unchecked plug_00139
				constant BlkValueCopySB2 K_unchecked_function = BlkValueCopySB2_B __assimilated=1
			package BlkValueSlowCopyPrimitive_fn _function
				symbol public misc BlkValueSlowCopyPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueSlowCopyPrimitive_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol private misc kovs
					symbol private misc recycling
					symbol private misc k
					symbol private misc from_long_block
					symbol private misc no_entries_to_copy
					symbol external misc KINDDATA_KOVS --> /main/template/constants/KINDDATA_KOVS_con/KINDDATA_KOVS
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BlkValueRecyclePrimitive --> /main/template/functions/BlkValueRecyclePrimitive_fn/BlkValueRecyclePrimitive
					symbol external misc EXTENT_KOVS --> /main/template/constants/EXTENT_KOVS_con/EXTENT_KOVS
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueMassCopyEntries --> /main/template/functions/BlkValueMassCopyEntries_fn/BlkValueMassCopyEntries
					symbol external misc COPY_KOVS --> /main/template/constants/COPY_KOVS_con/COPY_KOVS
					local to_bv K_unchecked
					local from_bv K_unchecked
					local kovs K_unchecked
					local recycling K_unchecked
					local k K_unchecked
					local from_long_block K_unchecked
					local no_entries_to_copy K_unchecked
					code
						inv !store
							reference
								val K_unchecked k
							inv !indirect3
								val K_unchecked kovs
								val K_unchecked KINDDATA_KOVS
								val K_unchecked to_bv
								val K_unchecked from_bv
						inv !store
							reference
								val K_unchecked from_long_block
							inv BlkValueGetLongBlock
								val K_unchecked from_bv
						inv !if
							val K_unchecked from_long_block
							code
								inv !if
									val K_unchecked recycling
									code
										inv BlkValueRecyclePrimitive
											val K_unchecked to_bv
											val K_unchecked kovs
								inv !store
									reference
										val K_unchecked no_entries_to_copy
									inv !indirect2
										val K_unchecked kovs
										val K_unchecked EXTENT_KOVS
										val K_unchecked from_bv
								inv !if
									inv !eq
										val K_unchecked no_entries_to_copy
										val K_unchecked -1
									code
										inv !store
											reference
												val K_unchecked no_entries_to_copy
											inv BlkValueLBCapacity
												val K_unchecked from_bv
								inv BlkValueMassCopyEntries
									val K_unchecked to_bv
									val K_unchecked from_bv
									val K_unchecked no_entries_to_copy
						inv !indirect4
							val K_unchecked kovs
							val K_unchecked COPY_KOVS
							val K_unchecked to_bv
							val K_unchecked from_bv
							val K_unchecked k
				constant BlkValueSlowCopyPrimitive K_unchecked_function = BlkValueSlowCopyPrimitive_B __assimilated=1
			package BlkValueCopy_fn _function
				symbol public misc BlkValueCopy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCopy_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol private misc to_kind
					symbol private misc from_kind
					symbol private misc kovs
					symbol external misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc COPYQUICK_KOVS --> /main/template/constants/COPYQUICK_KOVS_con/COPYQUICK_KOVS
					symbol external misc BlkValueQuickCopyPrimitive --> /main/template/functions/BlkValueQuickCopyPrimitive_fn/BlkValueQuickCopyPrimitive
					symbol external misc BlkValueSlowCopyPrimitive --> /main/template/functions/BlkValueSlowCopyPrimitive_fn/BlkValueSlowCopyPrimitive
					local to_bv K_unchecked
					local from_bv K_unchecked
					local to_kind K_unchecked
					local from_kind K_unchecked
					local kovs K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked to_bv
								val K_unchecked 0
							code
								inv BlkValueError
									val K_unchecked "copy to null value"
						inv !if
							inv !eq
								val K_unchecked from_bv
								val K_unchecked 0
							code
								inv BlkValueError
									val K_unchecked "copy from null value"
						inv !if
							inv !eq
								val K_unchecked to_bv
								val K_unchecked from_bv
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked to_kind
							inv BlkValueWeakKind
								val K_unchecked to_bv
						inv !store
							reference
								val K_unchecked from_kind
							inv BlkValueWeakKind
								val K_unchecked from_bv
						inv !if
							inv !ne
								val K_unchecked to_kind
								val K_unchecked from_kind
							code
								inv BlkValueError
									val K_unchecked "copy incompatible kinds"
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								val K_unchecked to_kind
								val K_unchecked "impossible copy"
						inv !ifelse
							inv !indirect3
								val K_unchecked kovs
								val K_unchecked COPYQUICK_KOVS
								val K_unchecked to_bv
								val K_unchecked from_bv
							code
								inv BlkValueQuickCopyPrimitive
									val K_unchecked to_bv
									val K_unchecked from_bv
									val K_unchecked kovs
							code
								inv BlkValueSlowCopyPrimitive
									val K_unchecked to_bv
									val K_unchecked from_bv
									val K_unchecked kovs
									val K_unchecked 1
						inv !return
							val K_unchecked to_bv
				constant BlkValueCopy K_unchecked_function = BlkValueCopy_B __assimilated=1
			package BlkValueCopyAZ_fn _function
				symbol public misc BlkValueCopyAZ
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCopyAZ_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					local to_bv K_unchecked
					local from_bv K_unchecked
					code
						inv !if
							val K_unchecked from_bv
							code
								inv !return
									inv BlkValueCopy
										val K_unchecked to_bv
										val K_unchecked from_bv
						inv !return
							val K_unchecked to_bv
				constant BlkValueCopyAZ K_unchecked_function = BlkValueCopyAZ_B __assimilated=1
			package BlkValueDestroyPrimitive_fn _function
				symbol public misc BlkValueDestroyPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueDestroyPrimitive_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kovs
					symbol private misc long_block
					symbol external misc BlkValueDecRefCountPrimitive --> /main/template/functions/BlkValueDecRefCountPrimitive_fn/BlkValueDecRefCountPrimitive
					symbol external misc DESTROY_KOVS --> /main/template/constants/DESTROY_KOVS_con/DESTROY_KOVS
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
					local bv K_unchecked
					local kovs K_unchecked
					local long_block K_unchecked
					code
						inv !if
							inv !eq
								inv BlkValueDecRefCountPrimitive
									val K_unchecked bv
								val K_unchecked 0
							code
								inv !indirect2
									val K_unchecked kovs
									val K_unchecked DESTROY_KOVS
									val K_unchecked bv
								inv !store
									reference
										val K_unchecked long_block
									inv BlkValueGetLongBlock
										val K_unchecked bv
								inv !if
									val K_unchecked long_block
									code
										inv FlexFree
											val K_unchecked long_block
				constant BlkValueDestroyPrimitive K_unchecked_function = BlkValueDestroyPrimitive_B __assimilated=1
			package BlkValueRecyclePrimitive_fn _function
				symbol public misc BlkValueRecyclePrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueRecyclePrimitive_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kovs
					symbol external misc BlkValueDecRefCountPrimitive --> /main/template/functions/BlkValueDecRefCountPrimitive_fn/BlkValueDecRefCountPrimitive
					symbol external misc DESTROY_KOVS --> /main/template/constants/DESTROY_KOVS_con/DESTROY_KOVS
					symbol external misc BlkValueIncRefCountPrimitive --> /main/template/functions/BlkValueIncRefCountPrimitive_fn/BlkValueIncRefCountPrimitive
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					local bv K_unchecked
					local kovs K_unchecked
					code
						inv !ifelse
							inv !eq
								inv BlkValueDecRefCountPrimitive
									val K_unchecked bv
								val K_unchecked 0
							code
								inv !indirect2
									val K_unchecked kovs
									val K_unchecked DESTROY_KOVS
									val K_unchecked bv
								inv BlkValueIncRefCountPrimitive
									val K_unchecked bv
							code
								inv BlkValueCreate
									inv BlkValueWeakKind
										val K_unchecked bv
									val K_unchecked bv
				constant BlkValueRecyclePrimitive K_unchecked_function = BlkValueRecyclePrimitive_B __assimilated=1
			package BlkMakeMutable_fn _function
				symbol public misc BlkMakeMutable
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkMakeMutable_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc block
					symbol private misc bv_kind
					symbol private misc kovs
					symbol private misc sb_size
					symbol external misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
					symbol external misc BlkValueGetRefCountPrimitive --> /main/template/functions/BlkValueGetRefCountPrimitive_fn/BlkValueGetRefCountPrimitive
					symbol external misc BlkValueDecRefCountPrimitive --> /main/template/functions/BlkValueDecRefCountPrimitive_fn/BlkValueDecRefCountPrimitive
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc MAKEMUTABLE_KOVS --> /main/template/constants/MAKEMUTABLE_KOVS_con/MAKEMUTABLE_KOVS
					symbol external misc plug_00506 --> /main/template/variables/I7SFRAME_var/I7SFRAME
					symbol external misc StackFrameCreate --> /main/template/functions/StackFrameCreate_fn/StackFrameCreate
					symbol external misc BlkValueCreateOnStack --> /main/template/functions/BlkValueCreateOnStack_fn/BlkValueCreateOnStack
					symbol external misc COPYKIND_KOVS --> /main/template/constants/COPYKIND_KOVS_con/COPYKIND_KOVS
					symbol external misc BlkValueSlowCopyPrimitive --> /main/template/functions/BlkValueSlowCopyPrimitive_fn/BlkValueSlowCopyPrimitive
					symbol external misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
					local bv K_unchecked
					local block K_unchecked
					local bv_kind K_unchecked
					local kovs K_unchecked
					local sb_size K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked bv
								val K_unchecked 0
							code
								inv BlkValueError
									val K_unchecked "tried to make null block mutable"
						inv !if
							inv !gt
								inv BlkValueGetRefCountPrimitive
									val K_unchecked bv
								val K_unchecked 1
							code
								inv BlkValueDecRefCountPrimitive
									val K_unchecked bv
								inv !store
									reference
										val K_unchecked bv_kind
									inv BlkValueWeakKind
										val K_unchecked bv
								inv !store
									reference
										val K_unchecked kovs
									inv plug_00505
										val K_unchecked bv_kind
										val K_unchecked "impossible mutability"
								inv !store
									reference
										val K_unchecked sb_size
									inv !indirect2
										val K_unchecked kovs
										val K_unchecked MAKEMUTABLE_KOVS
										val K_unchecked bv
								inv !if
									inv !gt
										val K_unchecked sb_size
										val K_unchecked 0
									code
										inv !push
											val K_unchecked I7SFRAME
										inv StackFrameCreate
											val K_unchecked sb_size
										inv BlkValueCreateOnStack
											val K_unchecked 0
											val K_unchecked bv_kind
										inv !indirect3
											val K_unchecked kovs
											val K_unchecked COPYKIND_KOVS
											val K_unchecked I7SFRAME
											val K_unchecked bv
										inv BlkValueSlowCopyPrimitive
											val K_unchecked I7SFRAME
											val K_unchecked bv
											val K_unchecked kovs
											val K_unchecked 0
										inv !indirect3
											val K_unchecked kovs
											val K_unchecked COPYSB_KOVS
											val K_unchecked bv
											val K_unchecked I7SFRAME
										inv !pull
											reference
												val K_unchecked I7SFRAME
				constant BlkMakeMutable K_unchecked_function = BlkMakeMutable_B __assimilated=1
			package BlkValueCast_fn _function
				symbol public misc BlkValueCast
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCast_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc original_kind
					symbol private misc original_value
					symbol private misc kovs
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc CAST_KOVS --> /main/template/constants/CAST_KOVS_con/CAST_KOVS
					local to_bv K_unchecked
					local original_kind K_unchecked
					local original_value K_unchecked
					local kovs K_unchecked
					code
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								inv BlkValueWeakKind
									val K_unchecked to_bv
								val K_unchecked "impossible cast"
						inv !indirect4
							val K_unchecked kovs
							val K_unchecked CAST_KOVS
							val K_unchecked to_bv
							val K_unchecked original_kind
							val K_unchecked original_value
						inv !return
							val K_unchecked to_bv
				constant BlkValueCast K_unchecked_function = BlkValueCast_B __assimilated=1
			package BlkValueCompare_fn _function
				symbol public misc BlkValueCompare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueCompare_B _code
					symbol private misc bv_left
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc bv_right
					symbol private misc kind_left
					symbol private misc kind_right
					symbol private misc kovs
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
					local bv_left K_unchecked
					local bv_right K_unchecked
					local kind_left K_unchecked
					local kind_right K_unchecked
					local kovs K_unchecked
					code
						inv !if
							inv !and
								inv !eq
									val K_unchecked bv_left
									val K_unchecked 0
								inv !eq
									val K_unchecked bv_right
									val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked bv_left
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked bv_right
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked kind_left
							inv BlkValueWeakKind
								val K_unchecked bv_left
						inv !store
							reference
								val K_unchecked kind_right
							inv BlkValueWeakKind
								val K_unchecked bv_right
						inv !if
							inv !ne
								val K_unchecked kind_left
								val K_unchecked kind_right
							code
								inv !return
									inv !minus
										val K_unchecked kind_left
										val K_unchecked kind_right
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								val K_unchecked kind_left
								val K_unchecked "impossible comparison"
						inv !return
							inv !indirect3
								val K_unchecked kovs
								val K_unchecked COMPARE_KOVS
								val K_unchecked bv_left
								val K_unchecked bv_right
				constant BlkValueCompare K_unchecked_function = BlkValueCompare_B __assimilated=1
			package GetHashValue_fn _function
				symbol public misc GetHashValue
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package GetHashValue_B _code
					symbol private misc kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc value
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueHash --> /main/template/functions/BlkValueHash_fn/BlkValueHash
					local kind K_unchecked
					local value K_unchecked
					code
						inv !if
							inv plug_00460
								val K_unchecked kind
							code
								inv !return
									inv BlkValueHash
										val K_unchecked value
						inv !return
							val K_unchecked value
				constant GetHashValue K_unchecked_function = GetHashValue_B __assimilated=1
			package BlkValueHash_fn _function
				symbol public misc BlkValueHash
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueHash_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc bv_kind
					symbol private misc kovs
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
					local bv K_unchecked
					local bv_kind K_unchecked
					local kovs K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked bv
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked bv_kind
							inv BlkValueWeakKind
								val K_unchecked bv
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								val K_unchecked bv_kind
								val K_unchecked "impossible hashing"
						inv !return
							inv !indirect2
								val K_unchecked kovs
								val K_unchecked HASH_KOVS
								val K_unchecked bv
				constant BlkValueHash K_unchecked_function = BlkValueHash_B __assimilated=1
			package BlkValueReadFromFile_fn _function
				symbol public misc BlkValueReadFromFile
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueReadFromFile_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc auxf
					symbol private misc ch
					symbol private misc bv_kind
					symbol private misc kovs
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc READ_FILE_KOVS --> /main/template/constants/READ_FILE_KOVS_con/READ_FILE_KOVS
					local bv K_unchecked
					local auxf K_unchecked
					local ch K_unchecked
					local bv_kind K_unchecked
					local kovs K_unchecked
					code
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								val K_unchecked bv_kind
						inv !if
							val K_unchecked kovs
							code
								inv !return
									inv !indirect4
										val K_unchecked kovs
										val K_unchecked READ_FILE_KOVS
										val K_unchecked bv
										val K_unchecked auxf
										val K_unchecked ch
						inv !return
							val K_unchecked 0
				constant BlkValueReadFromFile K_unchecked_function = BlkValueReadFromFile_B __assimilated=1
			package BlkValueWriteToFile_fn _function
				symbol public misc BlkValueWriteToFile
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueWriteToFile_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc bv_kind
					symbol private misc kovs
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc WRITE_FILE_KOVS --> /main/template/constants/WRITE_FILE_KOVS_con/WRITE_FILE_KOVS
					local bv K_unchecked
					local bv_kind K_unchecked
					local kovs K_unchecked
					code
						inv !store
							reference
								val K_unchecked kovs
							inv plug_00505
								val K_unchecked bv_kind
						inv !if
							val K_unchecked kovs
							code
								inv !return
									inv !indirect2
										val K_unchecked kovs
										val K_unchecked WRITE_FILE_KOVS
										val K_unchecked bv
						inv !return
							val K_unchecked 0
				constant BlkValueWriteToFile K_unchecked_function = BlkValueWriteToFile_B __assimilated=1
			package BlkValueDebug_fn _function
				symbol public misc BlkValueDebug
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkValueDebug_B _code
					symbol private misc bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc flag
					symbol private misc refc
					symbol private misc long_block
					symbol private misc kovs
					symbol external misc BlkDebugAddress --> /main/template/functions/BlkDebugAddress_fn/BlkDebugAddress
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					symbol external misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
					symbol external misc BlkValueGetRefCountPrimitive --> /main/template/functions/BlkValueGetRefCountPrimitive_fn/BlkValueGetRefCountPrimitive
					symbol external misc RC_INFINITY --> /main/template/constants/RC_INFINITY_con/RC_INFINITY
					symbol external misc plug_00505 --> /main/connectors/plug_00505
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc DEBUG_KOVS --> /main/template/constants/DEBUG_KOVS_con/DEBUG_KOVS
					local bv K_unchecked
					local flag K_unchecked
					local refc K_unchecked
					local long_block K_unchecked
					local kovs K_unchecked
					code
						inv !print
							val K_unchecked "(BV"
						inv !if
							val K_unchecked bv
							code
								inv BlkDebugAddress
									val K_unchecked bv
									val K_unchecked flag
								inv !store
									reference
										val K_unchecked long_block
									inv BlkValueGetLongBlock
										val K_unchecked bv
								inv !if
									val K_unchecked long_block
									code
										inv !ifelse
											inv !eq
												inv !lookup
													val K_unchecked bv
													val K_unchecked 0
												val K_unchecked 0
											code
												inv !print
													val K_unchecked "..."
											code
												inv !print
													val K_unchecked "-->"
										inv !print
											val K_unchecked "L"
										inv BlkDebugAddress
											val K_unchecked long_block
											val K_unchecked flag
										inv !print
											val K_unchecked " 2**"
										inv !printnumber
											inv !lookupbyte
												val K_unchecked long_block
												val K_unchecked BLK_HEADER_N
										inv !store
											reference
												val K_unchecked refc
											inv BlkValueGetRefCountPrimitive
												val K_unchecked bv
										inv !ifelse
											inv !eq
												val K_unchecked refc
												val K_unchecked RC_INFINITY
											code
												inv !print
													val K_unchecked " resident"
											code
												inv !print
													val K_unchecked " "
												inv !printnumber
													val K_unchecked refc
												inv !print
													val K_unchecked " ref"
												inv !if
													inv !ne
														val K_unchecked refc
														val K_unchecked 1
													code
														inv !print
															val K_unchecked "s"
								inv !store
									reference
										val K_unchecked kovs
									inv plug_00505
										inv BlkValueWeakKind
											val K_unchecked bv
								inv !if
									val K_unchecked kovs
									code
										inv !indirect2
											val K_unchecked kovs
											val K_unchecked DEBUG_KOVS
											val K_unchecked bv
						inv !print
							val K_unchecked ")"
				constant BlkValueDebug K_unchecked_function = BlkValueDebug_B __assimilated=1
			package BlkDebugAddress_fn _function
				symbol public misc BlkDebugAddress
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkDebugAddress_B _code
					symbol private misc addr
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc flag
					symbol private misc d
					symbol external misc blockv_stack --> /main/template/arrays/blockv_stack_arr/blockv_stack
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc BLOCKV_STACK_SIZE --> /main/template/constants/BLOCKV_STACK_SIZE_con/BLOCKV_STACK_SIZE
					symbol external misc BlkPrintHexadecimal --> /main/template/functions/BlkPrintHexadecimal_fn/BlkPrintHexadecimal
					symbol external misc plug_00506 --> /main/template/variables/I7SFRAME_var/I7SFRAME
					symbol external misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
					symbol external misc plug_00502 --> /main/connectors/plug_00502
					local addr K_unchecked
					local flag K_unchecked
					local d K_unchecked
					code
						inv !if
							val K_unchecked flag
							code
								inv !print
									val K_unchecked "###"
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked d
							inv !minus
								val K_unchecked addr
								val K_unchecked blockv_stack
						inv !if
							inv !and
								inv !ge
									val K_unchecked d
									val K_unchecked 0
								inv !le
									val K_unchecked d
									inv !times
										val K_unchecked plug_00139
										val K_unchecked BLOCKV_STACK_SIZE
							code
								inv !print
									val K_unchecked "s+"
								inv BlkPrintHexadecimal
									val K_unchecked d
								inv !store
									reference
										val K_unchecked d
									inv !minus
										val K_unchecked addr
										val K_unchecked I7SFRAME
								inv !print
									val K_unchecked "=f"
								inv !if
									inv !ge
										val K_unchecked d
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "+"
								inv !printnumber
									val K_unchecked d
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked d
							inv !minus
								val K_unchecked addr
								val K_unchecked Flex_Heap
						inv !if
							inv !and
								inv !ge
									val K_unchecked d
									val K_unchecked 0
								inv !lt
									val K_unchecked d
									inv !plus
										val K_unchecked plug_00502
										val K_unchecked 16
							code
								inv !print
									val K_unchecked "h+"
								inv BlkPrintHexadecimal
									val K_unchecked d
								inv !return
									val K_unchecked 1
						inv BlkPrintHexadecimal
							val K_unchecked addr
				constant BlkDebugAddress K_unchecked_function = BlkDebugAddress_B __assimilated=1
			package BlkPrintHexadecimal_fn _function
				symbol public misc BlkPrintHexadecimal
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkPrintHexadecimal_B _code
					symbol private misc v
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkPrintHexDigit --> /main/template/functions/BlkPrintHexDigit_fn/BlkPrintHexDigit
					local v K_unchecked
					code
						inv BlkPrintHexDigit
							inv !divide
								val K_unchecked v
								val K_unchecked 4096
						inv BlkPrintHexDigit
							inv !divide
								val K_unchecked v
								val K_unchecked 256
						inv BlkPrintHexDigit
							inv !divide
								val K_unchecked v
								val K_unchecked 16
						inv BlkPrintHexDigit
							val K_unchecked v
				constant BlkPrintHexadecimal K_unchecked_function = BlkPrintHexadecimal_B __assimilated=1
			package BlkPrintHexDigit_fn _function
				symbol public misc BlkPrintHexDigit
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package BlkPrintHexDigit_B _code
					symbol private misc v
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local v K_unchecked
					code
						inv !store
							reference
								val K_unchecked v
							inv !bitwiseand
								val K_unchecked v
								val K_unchecked 15
						inv !ifelse
							inv !lt
								val K_unchecked v
								val K_unchecked 10
							code
								inv !printnumber
									val K_unchecked v
							code
								inv !printchar
									inv !minus
										inv !plus
											val K_unchecked 65
											val K_unchecked v
										val K_unchecked 10
				constant BlkPrintHexDigit K_unchecked_function = BlkPrintHexDigit_B __assimilated=1
			package TEXT_TY_Extent_fn _function
				symbol public misc TEXT_TY_Extent
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Extent_B _code
					symbol private misc arg1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol external misc BlkValueSeekZeroEntry --> /main/template/functions/BlkValueSeekZeroEntry_fn/BlkValueSeekZeroEntry
					local arg1 K_unchecked
					local x K_unchecked
					code
						inv !store
							reference
								val K_unchecked x
							inv BlkValueSeekZeroEntry
								val K_unchecked arg1
						inv !if
							inv !lt
								val K_unchecked x
								val K_unchecked 0
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !return
							inv !plus
								val K_unchecked x
								val K_unchecked 1
				constant TEXT_TY_Extent K_unchecked_function = TEXT_TY_Extent_B __assimilated=1
			package CharIsOfCase_fn _function
				symbol public misc CharIsOfCase
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CharIsOfCase_B _code
					symbol private misc c
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc case
					symbol private misc i
					symbol private misc tab
					symbol private misc min
					symbol private misc max
					symbol private misc len
					symbol private misc par
					symbol external misc CharCasingChart0 --> /main/template/arrays/CharCasingChart0_arr/CharCasingChart0
					symbol external misc CharCasingChart1 --> /main/template/arrays/CharCasingChart1_arr/CharCasingChart1
					local c K_unchecked
					local case K_unchecked
					local i K_unchecked
					local tab K_unchecked
					local min K_unchecked
					local max K_unchecked
					local len K_unchecked
					local par K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 65
							code
								inv !return
									val K_unchecked 0
						inv !ifelse
							inv !eq
								val K_unchecked case
								val K_unchecked 0
							code
								inv !if
									inv !and
										inv !ge
											val K_unchecked c
											val K_unchecked 97
										inv !le
											val K_unchecked c
											val K_unchecked 122
									code
										inv !return
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked tab
									val K_unchecked CharCasingChart0
							code
								inv !if
									inv !and
										inv !ge
											val K_unchecked c
											val K_unchecked 65
										inv !le
											val K_unchecked c
											val K_unchecked 90
									code
										inv !return
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked tab
									val K_unchecked CharCasingChart1
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 128
							code
								inv !return
									val K_unchecked 0
						inv !while
							inv !lookup
								val K_unchecked tab
								val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked min
									inv !lookup
										val K_unchecked tab
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked i
								inv !store
									reference
										val K_unchecked len
									inv !lookup
										val K_unchecked tab
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked i
								inv !store
									reference
										val K_unchecked par
									val K_unchecked 0
								inv !if
									inv !lt
										val K_unchecked len
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked par
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked len
											inv !unaryminus
												val K_unchecked len
								inv !if
									inv !lt
										val K_unchecked c
										val K_unchecked min
									code
										inv !return
											val K_unchecked 0
								inv !if
									inv !lt
										val K_unchecked c
										inv !plus
											val K_unchecked min
											val K_unchecked len
									code
										inv !ifelse
											val K_unchecked par
											code
												inv !if
													inv !eq
														inv !modulo
															inv !minus
																val K_unchecked c
																val K_unchecked min
															val K_unchecked 2
														val K_unchecked 0
													code
														inv !return
															val K_unchecked 1
											code
												inv !return
													val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant CharIsOfCase K_unchecked_function = CharIsOfCase_B __assimilated=1
			package CharToCase_fn _function
				symbol public misc CharToCase
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CharToCase_B _code
					symbol private misc c
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc case
					symbol private misc i
					symbol private misc tab
					symbol private misc min
					symbol private misc max
					symbol private misc len
					symbol private misc par
					symbol private misc del
					symbol private misc f
					symbol external misc CharCasingChart0 --> /main/template/arrays/CharCasingChart0_arr/CharCasingChart0
					symbol external misc CharCasingChart1 --> /main/template/arrays/CharCasingChart1_arr/CharCasingChart1
					symbol external misc UNIC_NCT --> /main/template/constants/UNIC_NCT_con/UNIC_NCT
					local c K_unchecked
					local case K_unchecked
					local i K_unchecked
					local tab K_unchecked
					local min K_unchecked
					local max K_unchecked
					local len K_unchecked
					local par K_unchecked
					local del K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 65
							code
								inv !return
									val K_unchecked c
						inv !ifelse
							inv !eq
								val K_unchecked case
								val K_unchecked 1
							code
								inv !if
									inv !and
										inv !ge
											val K_unchecked c
											val K_unchecked 97
										inv !le
											val K_unchecked c
											val K_unchecked 122
									code
										inv !return
											inv !minus
												val K_unchecked c
												val K_unchecked 32
								inv !store
									reference
										val K_unchecked tab
									val K_unchecked CharCasingChart0
							code
								inv !if
									inv !and
										inv !ge
											val K_unchecked c
											val K_unchecked 65
										inv !le
											val K_unchecked c
											val K_unchecked 90
									code
										inv !return
											inv !plus
												val K_unchecked c
												val K_unchecked 32
								inv !store
									reference
										val K_unchecked tab
									val K_unchecked CharCasingChart1
						inv !if
							inv !lt
								val K_unchecked c
								val K_unchecked 128
							code
								inv !return
									val K_unchecked c
						inv !while
							inv !lookup
								val K_unchecked tab
								val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked min
									inv !lookup
										val K_unchecked tab
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked i
								inv !store
									reference
										val K_unchecked len
									inv !lookup
										val K_unchecked tab
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked i
								inv !store
									reference
										val K_unchecked del
									inv !lookup
										val K_unchecked tab
										val K_unchecked i
								inv !postincrement
									reference
										val K_unchecked i
								inv !store
									reference
										val K_unchecked par
									val K_unchecked 0
								inv !if
									inv !lt
										val K_unchecked len
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked par
											val K_unchecked 1
										inv !store
											reference
												val K_unchecked len
											inv !unaryminus
												val K_unchecked len
								inv !if
									inv !lt
										val K_unchecked c
										val K_unchecked min
									code
										inv !return
											val K_unchecked c
								inv !if
									inv !lt
										val K_unchecked c
										inv !plus
											val K_unchecked min
											val K_unchecked len
									code
										inv !store
											reference
												val K_unchecked f
											val K_unchecked 0
										inv !ifelse
											val K_unchecked par
											code
												inv !if
													inv !eq
														inv !modulo
															inv !minus
																val K_unchecked c
																val K_unchecked min
															val K_unchecked 2
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked f
															val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked f
													val K_unchecked 1
										inv !if
											val K_unchecked f
											code
												inv !if
													inv !eq
														val K_unchecked del
														val K_unchecked UNIC_NCT
													code
														inv !return
															val K_unchecked c
												inv !return
													inv !plus
														val K_unchecked c
														val K_unchecked del
						inv !return
							val K_unchecked c
				constant CharToCase K_unchecked_function = CharToCase_B __assimilated=1
			package TEXT_TY_RevCase_fn _function
				symbol public misc TEXT_TY_RevCase
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RevCase_B _code
					symbol private misc ch
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					local ch K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked ch
								val K_unchecked 65
							code
								inv !return
									val K_unchecked ch
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 97
								inv !le
									val K_unchecked ch
									val K_unchecked 122
							code
								inv !return
									inv !plus
										inv !minus
											val K_unchecked ch
											val K_unchecked 97
										val K_unchecked 65
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 65
								inv !le
									val K_unchecked ch
									val K_unchecked 90
							code
								inv !return
									inv !plus
										inv !minus
											val K_unchecked ch
											val K_unchecked 65
										val K_unchecked 97
						inv !if
							inv !lt
								val K_unchecked ch
								val K_unchecked 128
							code
								inv !return
									val K_unchecked ch
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 155
								inv !le
									val K_unchecked ch
									val K_unchecked 157
							code
								inv !return
									inv !plus
										val K_unchecked ch
										val K_unchecked 3
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 158
								inv !le
									val K_unchecked ch
									val K_unchecked 160
							code
								inv !return
									inv !minus
										val K_unchecked ch
										val K_unchecked 3
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 164
								inv !le
									val K_unchecked ch
									val K_unchecked 165
							code
								inv !return
									inv !plus
										val K_unchecked ch
										val K_unchecked 3
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 167
								inv !le
									val K_unchecked ch
									val K_unchecked 168
							code
								inv !return
									inv !minus
										val K_unchecked ch
										val K_unchecked 3
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 169
								inv !le
									val K_unchecked ch
									val K_unchecked 174
							code
								inv !return
									inv !plus
										val K_unchecked ch
										val K_unchecked 6
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 175
								inv !le
									val K_unchecked ch
									val K_unchecked 180
							code
								inv !return
									inv !minus
										val K_unchecked ch
										val K_unchecked 6
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 181
								inv !le
									val K_unchecked ch
									val K_unchecked 185
							code
								inv !return
									inv !plus
										val K_unchecked ch
										val K_unchecked 5
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 186
								inv !le
									val K_unchecked ch
									val K_unchecked 190
							code
								inv !return
									inv !minus
										val K_unchecked ch
										val K_unchecked 5
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 191
								inv !le
									val K_unchecked ch
									val K_unchecked 195
							code
								inv !return
									inv !plus
										val K_unchecked ch
										val K_unchecked 5
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 196
								inv !le
									val K_unchecked ch
									val K_unchecked 200
							code
								inv !return
									inv !minus
										val K_unchecked ch
										val K_unchecked 5
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 201
							code
								inv !return
									val K_unchecked 202
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 202
							code
								inv !return
									val K_unchecked 201
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 203
							code
								inv !return
									val K_unchecked 204
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 204
							code
								inv !return
									val K_unchecked 203
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 205
								inv !le
									val K_unchecked ch
									val K_unchecked 207
							code
								inv !return
									inv !plus
										val K_unchecked ch
										val K_unchecked 3
						inv !if
							inv !and
								inv !ge
									val K_unchecked ch
									val K_unchecked 208
								inv !le
									val K_unchecked ch
									val K_unchecked 210
							code
								inv !return
									inv !minus
										val K_unchecked ch
										val K_unchecked 3
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 211
							code
								inv !return
									val K_unchecked 212
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 212
							code
								inv !return
									val K_unchecked 211
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 213
							code
								inv !return
									val K_unchecked 214
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 214
							code
								inv !return
									val K_unchecked 213
						inv !if
							inv !eq
								val K_unchecked ch
								inv !alternative
									val K_unchecked 215
									val K_unchecked 216
							code
								inv !return
									inv !plus
										val K_unchecked ch
										val K_unchecked 2
						inv !if
							inv !eq
								val K_unchecked ch
								inv !alternative
									val K_unchecked 217
									val K_unchecked 218
							code
								inv !return
									inv !minus
										val K_unchecked ch
										val K_unchecked 2
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 220
							code
								inv !return
									val K_unchecked 221
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 221
							code
								inv !return
									val K_unchecked 220
						inv !return
							val K_unchecked ch
				constant TEXT_TY_RevCase K_unchecked_function = TEXT_TY_RevCase_B __assimilated=1
			package CharTestCases_fn _function
				symbol public misc CharTestCases
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package CharTestCases_B _code
					symbol private misc case
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol external misc CharIsOfCase --> /main/template/functions/CharIsOfCase_fn/CharIsOfCase
					symbol external misc CharToCase --> /main/template/functions/CharToCase_fn/CharToCase
					local case K_unchecked
					local i K_unchecked
					local j K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 32
							inv !lt
								val K_unchecked i
								val K_unchecked 224
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !and
										inv !ge
											val K_unchecked i
											val K_unchecked 127
										inv !lt
											val K_unchecked i
											val K_unchecked 155
									code
										inv !continue
								inv !printnumber
									val K_unchecked i
								inv !print
									val K_unchecked " - "
								inv !printchar
									val K_unchecked i
								inv !print
									val K_unchecked " -"
								inv !if
									inv CharIsOfCase
										val K_unchecked i
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "  lower"
								inv !if
									inv CharIsOfCase
										val K_unchecked i
										val K_unchecked 1
									code
										inv !print
											val K_unchecked "  upper"
								inv !store
									reference
										val K_unchecked j
									inv CharToCase
										val K_unchecked i
										val K_unchecked 0
								inv !if
									inv !ne
										val K_unchecked j
										val K_unchecked i
									code
										inv !print
											val K_unchecked "  tolower: "
										inv !printchar
											val K_unchecked j
								inv !store
									reference
										val K_unchecked j
									inv CharToCase
										val K_unchecked i
										val K_unchecked 1
								inv !if
									inv !ne
										val K_unchecked j
										val K_unchecked i
									code
										inv !print
											val K_unchecked "  toupper: "
										inv !printchar
											val K_unchecked j
								inv !print
									val K_unchecked "\n"
				constant CharTestCases K_unchecked_function = CharTestCases_B __assimilated=1
			package TEXT_TY_Support_fn _function
				symbol public misc TEXT_TY_Support
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Support_B _code
					symbol private misc task
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc arg1
					symbol private misc arg2
					symbol private misc arg3
					symbol external misc CREATE_KOVS --> /main/template/constants/CREATE_KOVS_con/CREATE_KOVS
					symbol external misc TEXT_TY_Create --> /main/template/functions/TEXT_TY_Create_fn/TEXT_TY_Create
					symbol external misc CAST_KOVS --> /main/template/constants/CAST_KOVS_con/CAST_KOVS
					symbol external misc TEXT_TY_Cast --> /main/template/functions/TEXT_TY_Cast_fn/TEXT_TY_Cast
					symbol external misc MAKEMUTABLE_KOVS --> /main/template/constants/MAKEMUTABLE_KOVS_con/MAKEMUTABLE_KOVS
					symbol external misc TEXT_TY_Mutable --> /main/template/functions/TEXT_TY_Mutable_fn/TEXT_TY_Mutable
					symbol external misc COPYQUICK_KOVS --> /main/template/constants/COPYQUICK_KOVS_con/COPYQUICK_KOVS
					symbol external misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
					symbol external misc TEXT_TY_CopySB --> /main/template/functions/TEXT_TY_CopySB_fn/TEXT_TY_CopySB
					symbol external misc KINDDATA_KOVS --> /main/template/constants/KINDDATA_KOVS_con/KINDDATA_KOVS
					symbol external misc EXTENT_KOVS --> /main/template/constants/EXTENT_KOVS_con/EXTENT_KOVS
					symbol external misc TEXT_TY_Extent --> /main/template/functions/TEXT_TY_Extent_fn/TEXT_TY_Extent
					symbol external misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
					symbol external misc TEXT_TY_Compare --> /main/template/functions/TEXT_TY_Compare_fn/TEXT_TY_Compare
					symbol external misc READ_FILE_KOVS --> /main/template/constants/READ_FILE_KOVS_con/READ_FILE_KOVS
					symbol external misc TEXT_TY_ReadFile --> /main/template/functions/TEXT_TY_ReadFile_fn/TEXT_TY_ReadFile
					symbol external misc WRITE_FILE_KOVS --> /main/template/constants/WRITE_FILE_KOVS_con/WRITE_FILE_KOVS
					symbol external misc TEXT_TY_WriteFile --> /main/template/functions/TEXT_TY_WriteFile_fn/TEXT_TY_WriteFile
					symbol external misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
					symbol external misc TEXT_TY_Hash --> /main/template/functions/TEXT_TY_Hash_fn/TEXT_TY_Hash
					symbol external misc DEBUG_KOVS --> /main/template/constants/DEBUG_KOVS_con/DEBUG_KOVS
					symbol external misc TEXT_TY_Debug --> /main/template/functions/TEXT_TY_Debug_fn/TEXT_TY_Debug
					local task K_unchecked
					local arg1 K_unchecked
					local arg2 K_unchecked
					local arg3 K_unchecked
					code
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked CREATE_KOVS
									code
										inv !return
											inv TEXT_TY_Create
												val K_unchecked arg2
								inv !case
									val K_unchecked CAST_KOVS
									code
										inv TEXT_TY_Cast
											val K_unchecked arg1
											val K_unchecked arg2
											val K_unchecked arg3
								inv !case
									val K_unchecked MAKEMUTABLE_KOVS
									code
										inv !return
											inv TEXT_TY_Mutable
												val K_unchecked arg1
								inv !case
									val K_unchecked COPYQUICK_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYSB_KOVS
									code
										inv TEXT_TY_CopySB
											val K_unchecked arg1
											val K_unchecked arg2
								inv !case
									val K_unchecked KINDDATA_KOVS
									code
										inv !return
											val K_unchecked 0
								inv !case
									val K_unchecked EXTENT_KOVS
									code
										inv !return
											inv TEXT_TY_Extent
												val K_unchecked arg1
								inv !case
									val K_unchecked COMPARE_KOVS
									code
										inv !return
											inv TEXT_TY_Compare
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked READ_FILE_KOVS
									code
										inv !if
											inv !eq
												val K_unchecked arg3
												val K_unchecked -1
											code
												inv !return
													val K_unchecked 1
										inv !return
											inv TEXT_TY_ReadFile
												val K_unchecked arg1
												val K_unchecked arg2
												val K_unchecked arg3
								inv !case
									val K_unchecked WRITE_FILE_KOVS
									code
										inv !return
											inv TEXT_TY_WriteFile
												val K_unchecked arg1
								inv !case
									val K_unchecked HASH_KOVS
									code
										inv !return
											inv TEXT_TY_Hash
												val K_unchecked arg1
								inv !case
									val K_unchecked DEBUG_KOVS
									code
										inv TEXT_TY_Debug
											val K_unchecked arg1
						inv !return
							val K_unchecked 0
				constant TEXT_TY_Support K_unchecked_function = TEXT_TY_Support_B __assimilated=1
			package TEXT_TY_Debug_fn _function
				symbol public misc TEXT_TY_Debug
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Debug_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc CONSTANT_PACKED_TEXT_STORAGE --> /main/template/constants/CONSTANT_PACKED_TEXT_STORAGE_con/CONSTANT_PACKED_TEXT_STORAGE
					symbol external misc PrintI6Text --> /main/template/functions/PrintI6Text_fn/PrintI6Text
					symbol external misc CONSTANT_PERISHABLE_TEXT_STORAGE --> /main/template/constants/CONSTANT_PERISHABLE_TEXT_STORAGE_con/CONSTANT_PERISHABLE_TEXT_STORAGE
					symbol external misc PACKED_TEXT_STORAGE --> /main/template/constants/PACKED_TEXT_STORAGE_con/PACKED_TEXT_STORAGE
					symbol external misc UNPACKED_TEXT_STORAGE --> /main/template/constants/UNPACKED_TEXT_STORAGE_con/UNPACKED_TEXT_STORAGE
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					local txt K_unchecked
					code
						inv !switch
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !case
									val K_unchecked CONSTANT_PACKED_TEXT_STORAGE
									code
										inv !print
											val K_unchecked " = cp\""
										inv PrintI6Text
											inv !lookup
												val K_unchecked txt
												val K_unchecked 1
										inv !print
											val K_unchecked "\""
								inv !case
									val K_unchecked CONSTANT_PERISHABLE_TEXT_STORAGE
									code
										inv !print
											val K_unchecked " = cp\""
										inv PrintI6Text
											inv !lookup
												val K_unchecked txt
												val K_unchecked 1
										inv !print
											val K_unchecked "\""
								inv !case
									val K_unchecked PACKED_TEXT_STORAGE
									code
										inv !print
											val K_unchecked " = p\""
										inv PrintI6Text
											inv !lookup
												val K_unchecked txt
												val K_unchecked 1
										inv !print
											val K_unchecked "\""
								inv !case
									val K_unchecked UNPACKED_TEXT_STORAGE
									code
										inv !print
											val K_unchecked " = \""
										inv TEXT_TY_Say
											val K_unchecked txt
										inv !print
											val K_unchecked "\""
								inv !default
									code
										inv !print
											val K_unchecked " broken?"
				constant TEXT_TY_Debug K_unchecked_function = TEXT_TY_Debug_B __assimilated=1
			package TEXT_TY_Create_fn _function
				symbol public misc TEXT_TY_Create
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Create_B _code
					symbol private misc short_block
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol external misc BlkValueCreateSB2 --> /main/template/functions/BlkValueCreateSB2_fn/BlkValueCreateSB2
					symbol external misc PACKED_TEXT_STORAGE --> /main/template/constants/PACKED_TEXT_STORAGE_con/PACKED_TEXT_STORAGE
					symbol external misc EMPTY_TEXT_PACKED --> /main/template/constants/EMPTY_TEXT_PACKED_con/EMPTY_TEXT_PACKED
					local short_block K_unchecked
					local x K_unchecked
					code
						inv !return
							inv BlkValueCreateSB2
								val K_unchecked short_block
								val K_unchecked PACKED_TEXT_STORAGE
								val K_unchecked EMPTY_TEXT_PACKED
				constant TEXT_TY_Create K_unchecked_function = TEXT_TY_Create_B __assimilated=1
			package TEXT_TY_CopySB_fn _function
				symbol public misc TEXT_TY_CopySB
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_CopySB_B _code
					symbol private misc to_bv
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_bv
					symbol external misc BlkValueCopySB2 --> /main/template/functions/BlkValueCopySB2_fn/BlkValueCopySB2
					symbol external misc BLK_BVBITMAP_CONSTANTMASK --> /main/template/constants/BLK_BVBITMAP_CONSTANTMASK_con/BLK_BVBITMAP_CONSTANTMASK
					symbol external misc PACKED_TEXT_STORAGE --> /main/template/constants/PACKED_TEXT_STORAGE_con/PACKED_TEXT_STORAGE
					local to_bv K_unchecked
					local from_bv K_unchecked
					code
						inv BlkValueCopySB2
							val K_unchecked to_bv
							val K_unchecked from_bv
						inv !if
							inv !bitwiseand
								inv !lookup
									val K_unchecked to_bv
									val K_unchecked 0
								val K_unchecked BLK_BVBITMAP_CONSTANTMASK
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked to_bv
											val K_unchecked 0
									val K_unchecked PACKED_TEXT_STORAGE
				constant TEXT_TY_CopySB K_unchecked_function = TEXT_TY_CopySB_B __assimilated=1
			package TEXT_TY_Transmute_fn _function
				symbol public misc TEXT_TY_Transmute
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Transmute_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					local txt K_unchecked
					code
						inv TEXT_TY_Temporarily_Transmute
							val K_unchecked txt
				constant TEXT_TY_Transmute K_unchecked_function = TEXT_TY_Transmute_B __assimilated=1
			package TEXT_TY_Temporarily_Transmute_fn _function
				symbol public misc TEXT_TY_Temporarily_Transmute
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Temporarily_Transmute_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc x
					symbol external misc BLK_BVBITMAP_LONGBLOCKMASK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCKMASK_con/BLK_BVBITMAP_LONGBLOCKMASK
					symbol external misc UNPACKED_TEXT_STORAGE --> /main/template/constants/UNPACKED_TEXT_STORAGE_con/UNPACKED_TEXT_STORAGE
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc TEXT_TY_Storage_Flags --> /main/template/constants/TEXT_TY_Storage_Flags_con/TEXT_TY_Storage_Flags
					symbol external misc EMPTY_TEXT_PACKED --> /main/template/constants/EMPTY_TEXT_PACKED_con/EMPTY_TEXT_PACKED
					symbol external misc TEXT_TY_CastPrimitive --> /main/template/functions/TEXT_TY_CastPrimitive_fn/TEXT_TY_CastPrimitive
					local txt K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked txt
								inv !eq
									inv !bitwiseand
										inv !lookup
											val K_unchecked txt
											val K_unchecked 0
										val K_unchecked BLK_BVBITMAP_LONGBLOCKMASK
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked x
									inv !lookup
										val K_unchecked txt
										val K_unchecked 1
								inv !store
									reference
										inv !lookup
											val K_unchecked txt
											val K_unchecked 0
									val K_unchecked UNPACKED_TEXT_STORAGE
								inv !store
									reference
										inv !lookup
											val K_unchecked txt
											val K_unchecked 1
									inv FlexAllocate
										val K_unchecked 32
										val K_unchecked plug_00342
										val K_unchecked TEXT_TY_Storage_Flags
								inv !if
									inv !ne
										val K_unchecked x
										val K_unchecked EMPTY_TEXT_PACKED
									code
										inv TEXT_TY_CastPrimitive
											val K_unchecked txt
											val K_unchecked 0
											val K_unchecked x
								inv !return
									val K_unchecked x
						inv !return
							val K_unchecked 0
				constant TEXT_TY_Temporarily_Transmute K_unchecked_function = TEXT_TY_Temporarily_Transmute_B __assimilated=1
			package TEXT_TY_Untransmute_fn _function
				symbol public misc TEXT_TY_Untransmute
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Untransmute_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc pk
					symbol private misc cp
					symbol private misc x
					symbol external misc UNPACKED_TEXT_STORAGE --> /main/template/constants/UNPACKED_TEXT_STORAGE_con/UNPACKED_TEXT_STORAGE
					symbol external misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
					local txt K_unchecked
					local pk K_unchecked
					local cp K_unchecked
					local x K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked pk
								inv !eq
									inv !lookup
										val K_unchecked txt
										val K_unchecked 0
									val K_unchecked UNPACKED_TEXT_STORAGE
							code
								inv !store
									reference
										val K_unchecked x
									inv !lookup
										val K_unchecked txt
										val K_unchecked 1
								inv FlexFree
									val K_unchecked x
								inv !store
									reference
										inv !lookup
											val K_unchecked txt
											val K_unchecked 0
									val K_unchecked cp
								inv !store
									reference
										inv !lookup
											val K_unchecked txt
											val K_unchecked 1
									val K_unchecked pk
						inv !return
							val K_unchecked txt
				constant TEXT_TY_Untransmute K_unchecked_function = TEXT_TY_Untransmute_B __assimilated=1
			package TEXT_TY_Mutable_fn _function
				symbol public misc TEXT_TY_Mutable
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Mutable_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BLK_BVBITMAP_LONGBLOCKMASK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCKMASK_con/BLK_BVBITMAP_LONGBLOCKMASK
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					local txt K_unchecked
					code
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookup
										val K_unchecked txt
										val K_unchecked 0
									val K_unchecked BLK_BVBITMAP_LONGBLOCKMASK
								val K_unchecked 0
							code
								inv TEXT_TY_Transmute
									val K_unchecked txt
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 2
				constant TEXT_TY_Mutable K_unchecked_function = TEXT_TY_Mutable_B __assimilated=1
			package TEXT_TY_Cast_fn _function
				symbol public misc TEXT_TY_Cast
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Cast_B _code
					symbol private misc to_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_kind
					symbol private misc from_value
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc plug_00343 --> /main/connectors/plug_00343
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_CastPrimitive --> /main/template/functions/TEXT_TY_CastPrimitive_fn/TEXT_TY_CastPrimitive
					symbol external misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
					local to_txt K_unchecked
					local from_kind K_unchecked
					local from_value K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked from_kind
								val K_unchecked plug_00342
							code
								inv BlkValueCopy
									val K_unchecked to_txt
									val K_unchecked from_value
							code
								inv !ifelse
									inv !eq
										val K_unchecked from_kind
										val K_unchecked plug_00343
									code
										inv TEXT_TY_Transmute
											val K_unchecked to_txt
										inv TEXT_TY_CastPrimitive
											val K_unchecked to_txt
											val K_unchecked 1
											val K_unchecked from_value
									code
										inv BlkValueError
											val K_unchecked "impossible cast to text"
				constant TEXT_TY_Cast K_unchecked_function = TEXT_TY_Cast_B __assimilated=1
			package SNIPPET_TY_to_TEXT_TY_fn _function
				symbol public misc SNIPPET_TY_to_TEXT_TY
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SNIPPET_TY_to_TEXT_TY_B _code
					symbol private misc to_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc snippet
					symbol external misc BlkValueCast --> /main/template/functions/BlkValueCast_fn/BlkValueCast
					symbol external misc plug_00343 --> /main/connectors/plug_00343
					local to_txt K_unchecked
					local snippet K_unchecked
					code
						inv !return
							inv BlkValueCast
								val K_unchecked to_txt
								val K_unchecked plug_00343
								val K_unchecked snippet
				constant SNIPPET_TY_to_TEXT_TY K_unchecked_function = SNIPPET_TY_to_TEXT_TY_B __assimilated=1
			package TEXT_TY_CastPrimitive_fn _function
				symbol public misc TEXT_TY_CastPrimitive
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_CastPrimitive_B _code
					symbol private misc to_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_snippet
					symbol private misc from_value
					symbol private misc len
					symbol private misc news
					symbol private misc buffer
					symbol external misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
					symbol external misc SuspendRTP --> /main/template/functions/SuspendRTP_fn/SuspendRTP
					symbol external misc plug_00507 --> /main/template/variables/RawBufferAddress_var/RawBufferAddress
					symbol external misc plug_00508 --> /main/template/variables/TEXT_TY_CastPrimitiveNesting_var/TEXT_TY_CastPrimitiveNesting
					symbol external misc TEXT_TY_BufferSize --> /main/template/constants/TEXT_TY_BufferSize_con/TEXT_TY_BufferSize
					symbol external misc TEXT_TY_NoBuffers --> /main/template/constants/TEXT_TY_NoBuffers_con/TEXT_TY_NoBuffers
					symbol external misc FlexError --> /main/template/functions/FlexError_fn/FlexError
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc plug_00199 --> /main/template/variables/say__pc_var/say__pc
					symbol external misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
					symbol external misc PrintSnippet --> /main/template/functions/PrintSnippet_fn/PrintSnippet
					symbol external misc PrintI6Text --> /main/template/functions/PrintI6Text_fn/PrintI6Text
					symbol external misc ResumeRTP --> /main/template/functions/ResumeRTP_fn/ResumeRTP
					symbol external misc plug_00509 --> /main/template/variables/RawBufferSize_var/RawBufferSize
					symbol external misc BlkValueMassCopyFromArray --> /main/template/functions/BlkValueMassCopyFromArray_fn/BlkValueMassCopyFromArray
					local to_txt K_unchecked
					local from_snippet K_unchecked
					local from_value K_unchecked
					local len K_unchecked
					local news K_unchecked
					local buffer K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked to_txt
								val K_unchecked 0
							code
								inv BlkValueError
									val K_unchecked "no destination for cast"
						inv SuspendRTP
						inv !store
							reference
								val K_unchecked buffer
							inv !plus
								val K_unchecked RawBufferAddress
								inv !times
									val K_unchecked TEXT_TY_CastPrimitiveNesting
									val K_unchecked TEXT_TY_BufferSize
						inv !postincrement
							reference
								val K_unchecked TEXT_TY_CastPrimitiveNesting
						inv !if
							inv !gt
								val K_unchecked TEXT_TY_CastPrimitiveNesting
								val K_unchecked TEXT_TY_NoBuffers
							code
								inv FlexError
									val K_unchecked "ran out with too many simultaneous text conversions"
						inv !push
							val K_unchecked say__p
						inv !push
							val K_unchecked say__pc
						inv ClearParagraphing
							val K_unchecked 6
						inv @output_stream
							val K_unchecked 3
							val K_unchecked buffer
						inv !if
							val K_unchecked from_value
							code
								inv !ifelse
									val K_unchecked from_snippet
									code
										inv PrintSnippet
											val K_unchecked from_value
									code
										inv PrintI6Text
											val K_unchecked from_value
						inv @output_stream
							val K_unchecked -3
						inv !pull
							reference
								val K_unchecked say__pc
						inv !pull
							reference
								val K_unchecked say__p
						inv ResumeRTP
						inv !store
							reference
								val K_unchecked len
							inv !lookup
								val K_unchecked buffer
								val K_unchecked 0
						inv !if
							inv !gt
								val K_unchecked len
								inv !minus
									val K_unchecked RawBufferSize
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked len
									inv !minus
										val K_unchecked RawBufferSize
										val K_unchecked 1
						inv !store
							reference
								inv !lookupbyte
									val K_unchecked buffer
									inv !plus
										val K_unchecked len
										val K_unchecked 2
							val K_unchecked 0
						inv !postdecrement
							reference
								val K_unchecked TEXT_TY_CastPrimitiveNesting
						inv BlkValueMassCopyFromArray
							val K_unchecked to_txt
							inv !plus
								val K_unchecked buffer
								val K_unchecked 2
							val K_unchecked 1
							inv !plus
								val K_unchecked len
								val K_unchecked 1
				constant TEXT_TY_CastPrimitive K_unchecked_function = TEXT_TY_CastPrimitive_B __assimilated=1
			package TEXT_TY_Compare_fn _function
				symbol public misc TEXT_TY_Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Compare_B _code
					symbol private misc left_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc right_txt
					symbol private misc rv
					symbol external misc plug_00510 --> /main/template/variables/say__comp_var/say__comp
					symbol external misc TEXT_TY_Compare_Inner --> /main/template/functions/TEXT_TY_Compare_Inner_fn/TEXT_TY_Compare_Inner
					local left_txt K_unchecked
					local right_txt K_unchecked
					local rv K_unchecked
					code
						inv !push
							val K_unchecked say__comp
						inv !store
							reference
								val K_unchecked say__comp
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked rv
							inv TEXT_TY_Compare_Inner
								val K_unchecked left_txt
								val K_unchecked right_txt
						inv !pull
							reference
								val K_unchecked say__comp
						inv !return
							val K_unchecked rv
				constant TEXT_TY_Compare K_unchecked_function = TEXT_TY_Compare_B __assimilated=1
			package TEXT_TY_Compare_Inner_fn _function
				symbol public misc TEXT_TY_Compare_Inner
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Compare_Inner_B _code
					symbol private misc left_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc right_txt
					symbol private misc pos
					symbol private misc ch1
					symbol private misc ch2
					symbol private misc capacity_left
					symbol private misc capacity_right
					symbol private misc fl
					symbol private misc fr
					symbol private misc cl
					symbol private misc cr
					symbol private misc cpl
					symbol private misc cpr
					symbol external misc BLK_BVBITMAP_LONGBLOCKMASK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCKMASK_con/BLK_BVBITMAP_LONGBLOCKMASK
					symbol external misc String --> /main/veneer/String
					symbol external misc Routine --> /main/veneer/Routine
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_Compare --> /main/template/functions/TEXT_TY_Compare_fn/TEXT_TY_Compare
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					local left_txt K_unchecked
					local right_txt K_unchecked
					local pos K_unchecked
					local ch1 K_unchecked
					local ch2 K_unchecked
					local capacity_left K_unchecked
					local capacity_right K_unchecked
					local fl K_unchecked
					local fr K_unchecked
					local cl K_unchecked
					local cr K_unchecked
					local cpl K_unchecked
					local cpr K_unchecked
					code
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookup
										val K_unchecked left_txt
										val K_unchecked 0
									val K_unchecked BLK_BVBITMAP_LONGBLOCKMASK
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked fl
									val K_unchecked 1
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookup
										val K_unchecked right_txt
										val K_unchecked 0
									val K_unchecked BLK_BVBITMAP_LONGBLOCKMASK
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked fr
									val K_unchecked 1
						inv !ifelse
							inv !and
								val K_unchecked fl
								val K_unchecked fr
							code
								inv !if
									inv !and
										inv !ofclass
											inv !lookup
												val K_unchecked left_txt
												val K_unchecked 1
											val K_unchecked String
										inv !ofclass
											inv !lookup
												val K_unchecked right_txt
												val K_unchecked 1
											val K_unchecked String
									code
										inv !return
											inv !minus
												inv !lookup
													val K_unchecked left_txt
													val K_unchecked 1
												inv !lookup
													val K_unchecked right_txt
													val K_unchecked 1
								inv !if
									inv !and
										inv !ofclass
											inv !lookup
												val K_unchecked left_txt
												val K_unchecked 1
											val K_unchecked Routine
										inv !ofclass
											inv !lookup
												val K_unchecked right_txt
												val K_unchecked 1
											val K_unchecked Routine
									code
										inv !return
											inv !minus
												inv !lookup
													val K_unchecked left_txt
													val K_unchecked 1
												inv !lookup
													val K_unchecked right_txt
													val K_unchecked 1
								inv !store
									reference
										val K_unchecked cpl
									inv !lookup
										val K_unchecked left_txt
										val K_unchecked 0
								inv !store
									reference
										val K_unchecked cl
									inv TEXT_TY_Temporarily_Transmute
										val K_unchecked left_txt
								inv !store
									reference
										val K_unchecked cpr
									inv !lookup
										val K_unchecked right_txt
										val K_unchecked 0
								inv !store
									reference
										val K_unchecked cr
									inv TEXT_TY_Temporarily_Transmute
										val K_unchecked right_txt
							code
								inv !ifelse
									val K_unchecked fl
									code
										inv !store
											reference
												val K_unchecked cpl
											inv !lookup
												val K_unchecked left_txt
												val K_unchecked 0
										inv !store
											reference
												val K_unchecked cl
											inv TEXT_TY_Temporarily_Transmute
												val K_unchecked left_txt
									code
										inv !if
											val K_unchecked fr
											code
												inv !store
													reference
														val K_unchecked cpr
													inv !lookup
														val K_unchecked right_txt
														val K_unchecked 0
												inv !store
													reference
														val K_unchecked cr
													inv TEXT_TY_Temporarily_Transmute
														val K_unchecked right_txt
						inv !if
							inv !or
								val K_unchecked cl
								val K_unchecked cr
							code
								inv !store
									reference
										val K_unchecked pos
									inv TEXT_TY_Compare
										val K_unchecked left_txt
										val K_unchecked right_txt
								inv TEXT_TY_Untransmute
									val K_unchecked left_txt
									val K_unchecked cl
									val K_unchecked cpl
								inv TEXT_TY_Untransmute
									val K_unchecked right_txt
									val K_unchecked cr
									val K_unchecked cpr
								inv !return
									val K_unchecked pos
						inv !store
							reference
								val K_unchecked capacity_left
							inv BlkValueLBCapacity
								val K_unchecked left_txt
						inv !store
							reference
								val K_unchecked capacity_right
							inv BlkValueLBCapacity
								val K_unchecked right_txt
						inv !for
							inv !store
								reference
									val K_unchecked pos
								val K_unchecked 0
							inv !and
								inv !lt
									val K_unchecked pos
									val K_unchecked capacity_left
								inv !lt
									val K_unchecked pos
									val K_unchecked capacity_right
							inv !postincrement
								reference
									val K_unchecked pos
							code
								inv !store
									reference
										val K_unchecked ch1
									inv BlkValueRead
										val K_unchecked left_txt
										val K_unchecked pos
								inv !store
									reference
										val K_unchecked ch2
									inv BlkValueRead
										val K_unchecked right_txt
										val K_unchecked pos
								inv !if
									inv !ne
										val K_unchecked ch1
										val K_unchecked ch2
									code
										inv !return
											inv !minus
												val K_unchecked ch1
												val K_unchecked ch2
								inv !if
									inv !eq
										val K_unchecked ch1
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked pos
								val K_unchecked capacity_left
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !return
							val K_unchecked 1
				constant TEXT_TY_Compare_Inner K_unchecked_function = TEXT_TY_Compare_Inner_B __assimilated=1
			package TEXT_TY_Distinguish_fn _function
				symbol public misc TEXT_TY_Distinguish
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Distinguish_B _code
					symbol private misc left_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc right_txt
					symbol external misc TEXT_TY_Compare --> /main/template/functions/TEXT_TY_Compare_fn/TEXT_TY_Compare
					local left_txt K_unchecked
					local right_txt K_unchecked
					code
						inv !if
							inv !eq
								inv TEXT_TY_Compare
									val K_unchecked left_txt
									val K_unchecked right_txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant TEXT_TY_Distinguish K_unchecked_function = TEXT_TY_Distinguish_B __assimilated=1
			package TEXT_TY_Hash_fn _function
				symbol public misc TEXT_TY_Hash
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Hash_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc rv
					symbol private misc len
					symbol private misc i
					symbol private misc p
					symbol private misc cp
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local txt K_unchecked
					local rv K_unchecked
					local len K_unchecked
					local i K_unchecked
					local p K_unchecked
					local cp K_unchecked
					code
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked rv
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked len
							inv BlkValueLBCapacity
								val K_unchecked txt
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked rv
									inv !plus
										inv !times
											val K_unchecked rv
											val K_unchecked 33
										inv BlkValueRead
											val K_unchecked txt
											val K_unchecked i
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked p
							val K_unchecked cp
						inv !return
							val K_unchecked rv
				constant TEXT_TY_Hash K_unchecked_function = TEXT_TY_Hash_B __assimilated=1
			package TEXT_TY_Say_fn _function
				symbol public misc TEXT_TY_Say
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Say_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ch
					symbol private misc i
					symbol private misc dsize
					symbol external misc BLK_BVBITMAP_LONGBLOCKMASK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCKMASK_con/BLK_BVBITMAP_LONGBLOCKMASK
					symbol external misc PrintI6Text --> /main/template/functions/PrintI6Text_fn/PrintI6Text
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					local txt K_unchecked
					local ch K_unchecked
					local i K_unchecked
					local dsize K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookup
										val K_unchecked txt
										val K_unchecked 0
									val K_unchecked BLK_BVBITMAP_LONGBLOCKMASK
								val K_unchecked 0
							code
								inv !return
									inv PrintI6Text
										inv !lookup
											val K_unchecked txt
											val K_unchecked 1
						inv !store
							reference
								val K_unchecked dsize
							inv BlkValueLBCapacity
								val K_unchecked txt
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked dsize
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked ch
									inv BlkValueRead
										val K_unchecked txt
										val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked ch
										val K_unchecked 0
									code
										inv !break
								inv @streamunichar
									val K_unchecked ch
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant TEXT_TY_Say K_unchecked_function = TEXT_TY_Say_B __assimilated=1
			package TEXT_TY_Say_Capitalised_fn _function
				symbol public misc TEXT_TY_Say_Capitalised
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Say_Capitalised_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc mod
					symbol private misc rc
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc TEXT_TY_SubstitutedForm --> /main/template/functions/TEXT_TY_SubstitutedForm_fn/TEXT_TY_SubstitutedForm
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc CharToCase --> /main/template/functions/CharToCase_fn/CharToCase
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc plug_00134 --> /main/template/variables/say__p_var/say__p
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					local txt K_unchecked
					local mod K_unchecked
					local rc K_unchecked
					code
						inv !store
							reference
								val K_unchecked mod
							inv BlkValueCreate
								val K_unchecked plug_00342
						inv TEXT_TY_SubstitutedForm
							val K_unchecked mod
							val K_unchecked txt
						inv !if
							inv !gt
								inv TEXT_TY_CharacterLength
									val K_unchecked mod
								val K_unchecked 0
							code
								inv BlkValueWrite
									val K_unchecked mod
									val K_unchecked 0
									inv CharToCase
										inv BlkValueRead
											val K_unchecked mod
											val K_unchecked 0
										val K_unchecked 1
								inv TEXT_TY_Say
									val K_unchecked mod
								inv !store
									reference
										val K_unchecked rc
									val K_unchecked 1
								inv !store
									reference
										val K_unchecked say__p
									val K_unchecked 1
						inv BlkValueFree
							val K_unchecked mod
						inv !return
							val K_unchecked rc
				constant TEXT_TY_Say_Capitalised K_unchecked_function = TEXT_TY_Say_Capitalised_B __assimilated=1
			package TEXT_TY_WriteFile_fn _function
				symbol public misc TEXT_TY_WriteFile
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_WriteFile_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc len
					symbol private misc pos
					symbol private misc ch
					symbol private misc p
					symbol private misc cp
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local txt K_unchecked
					local len K_unchecked
					local pos K_unchecked
					local ch K_unchecked
					local p K_unchecked
					local cp K_unchecked
					code
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked len
							inv BlkValueLBCapacity
								val K_unchecked txt
						inv !print
							val K_unchecked "S"
						inv !for
							inv !store
								reference
									val K_unchecked pos
								val K_unchecked 0
							inv !le
								val K_unchecked pos
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked pos
							code
								inv !ifelse
									inv !eq
										val K_unchecked pos
										val K_unchecked len
									code
										inv !store
											reference
												val K_unchecked ch
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked ch
											inv BlkValueRead
												val K_unchecked txt
												val K_unchecked pos
								inv !ifelse
									inv !eq
										val K_unchecked ch
										val K_unchecked 0
									code
										inv !print
											val K_unchecked "0;"
										inv !break
									code
										inv !printnumber
											val K_unchecked ch
										inv !print
											val K_unchecked ","
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked p
							val K_unchecked cp
				constant TEXT_TY_WriteFile K_unchecked_function = TEXT_TY_WriteFile_B __assimilated=1
			package TEXT_TY_ReadFile_fn _function
				symbol public misc TEXT_TY_ReadFile
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ReadFile_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc auxf
					symbol private misc ch
					symbol private misc i
					symbol private misc v
					symbol private misc dg
					symbol private misc pos
					symbol private misc tsize
					symbol private misc p
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc FileIO_GetC --> /main/template/functions/FileIO_GetC_fn/FileIO_GetC
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local txt K_unchecked
					local auxf K_unchecked
					local ch K_unchecked
					local i K_unchecked
					local v K_unchecked
					local dg K_unchecked
					local pos K_unchecked
					local tsize K_unchecked
					local p K_unchecked
					code
						inv TEXT_TY_Transmute
							val K_unchecked txt
						inv !store
							reference
								val K_unchecked tsize
							inv BlkValueLBCapacity
								val K_unchecked txt
						inv !while
							inv !ne
								val K_unchecked ch
								inv !alternative
									inv !alternative
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked 32
													val K_unchecked 9
												val K_unchecked 10
											val K_unchecked 13
										val K_unchecked 0
									val K_unchecked -1
							code
								inv !store
									reference
										val K_unchecked ch
									inv FileIO_GetC
										val K_unchecked auxf
								inv !ifelse
									inv !eq
										val K_unchecked ch
										inv !alternative
											val K_unchecked 44
											val K_unchecked 59
									code
										inv !if
											inv !ge
												inv !plus
													val K_unchecked pos
													val K_unchecked 1
												val K_unchecked tsize
											code
												inv !if
													inv !eq
														inv BlkValueSetLBCapacity
															val K_unchecked txt
															inv !times
																val K_unchecked 2
																val K_unchecked pos
														val K_unchecked 0
													code
														inv !break
												inv !store
													reference
														val K_unchecked tsize
													inv BlkValueLBCapacity
														val K_unchecked txt
										inv BlkValueWrite
											val K_unchecked txt
											inv !postincrement
												reference
													val K_unchecked pos
											val K_unchecked v
										inv !store
											reference
												val K_unchecked v
											val K_unchecked 0
										inv !if
											inv !eq
												val K_unchecked ch
												val K_unchecked 59
											code
												inv !break
									code
										inv !store
											reference
												val K_unchecked dg
											inv !minus
												val K_unchecked ch
												val K_unchecked 48
										inv !store
											reference
												val K_unchecked v
											inv !plus
												inv !times
													val K_unchecked v
													val K_unchecked 10
												val K_unchecked dg
						inv BlkValueWrite
							val K_unchecked txt
							val K_unchecked pos
							val K_unchecked 0
						inv !return
							val K_unchecked txt
				constant TEXT_TY_ReadFile K_unchecked_function = TEXT_TY_ReadFile_B __assimilated=1
			package TEXT_TY_SubstitutedForm_fn _function
				symbol public misc TEXT_TY_SubstitutedForm
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_SubstitutedForm_B _code
					symbol private misc to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					local to K_unchecked
					local txt K_unchecked
					code
						inv !if
							val K_unchecked txt
							code
								inv BlkValueCopy
									val K_unchecked to
									val K_unchecked txt
								inv TEXT_TY_Transmute
									val K_unchecked to
						inv !return
							val K_unchecked to
				constant TEXT_TY_SubstitutedForm K_unchecked_function = TEXT_TY_SubstitutedForm_B __assimilated=1
			package TEXT_TY_IsSubstituted_fn _function
				symbol public misc TEXT_TY_IsSubstituted
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_IsSubstituted_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BLK_BVBITMAP_LONGBLOCKMASK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCKMASK_con/BLK_BVBITMAP_LONGBLOCKMASK
					symbol external misc Routine --> /main/veneer/Routine
					local txt K_unchecked
					code
						inv !if
							inv !and
								inv !and
									val K_unchecked txt
									inv !eq
										inv !bitwiseand
											inv !lookup
												val K_unchecked txt
												val K_unchecked 0
											val K_unchecked BLK_BVBITMAP_LONGBLOCKMASK
										val K_unchecked 0
								inv !ofclass
									inv !lookup
										val K_unchecked txt
										val K_unchecked 1
									val K_unchecked Routine
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant TEXT_TY_IsSubstituted K_unchecked_function = TEXT_TY_IsSubstituted_B __assimilated=1
			package TEXT_TY_ExpandIfPerishable_fn _function
				symbol public misc TEXT_TY_ExpandIfPerishable
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ExpandIfPerishable_B _code
					symbol private misc to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol external misc CONSTANT_PERISHABLE_TEXT_STORAGE --> /main/template/constants/CONSTANT_PERISHABLE_TEXT_STORAGE_con/CONSTANT_PERISHABLE_TEXT_STORAGE
					symbol external misc TEXT_TY_SubstitutedForm --> /main/template/functions/TEXT_TY_SubstitutedForm_fn/TEXT_TY_SubstitutedForm
					local to K_unchecked
					local from K_unchecked
					code
						inv !if
							inv !and
								val K_unchecked from
								inv !eq
									inv !lookup
										val K_unchecked from
										val K_unchecked 0
									val K_unchecked CONSTANT_PERISHABLE_TEXT_STORAGE
							code
								inv !return
									inv TEXT_TY_SubstitutedForm
										val K_unchecked to
										val K_unchecked from
						inv !return
							val K_unchecked from
				constant TEXT_TY_ExpandIfPerishable K_unchecked_function = TEXT_TY_ExpandIfPerishable_B __assimilated=1
			package TEXT_TY_ROGPR_fn _function
				symbol public misc TEXT_TY_ROGPR
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ROGPR_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc p
					symbol private misc cp
					symbol private misc r
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_ROGPRI --> /main/template/functions/TEXT_TY_ROGPRI_fn/TEXT_TY_ROGPRI
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local txt K_unchecked
					local p K_unchecked
					local cp K_unchecked
					local r K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked GPR_FAIL
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked r
							inv TEXT_TY_ROGPRI
								val K_unchecked txt
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked p
							val K_unchecked cp
						inv !return
							val K_unchecked r
				constant TEXT_TY_ROGPR K_unchecked_function = TEXT_TY_ROGPR_B __assimilated=1
			package TEXT_TY_ROGPRI_fn _function
				symbol public misc TEXT_TY_ROGPRI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ROGPRI_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc pos
					symbol private misc len
					symbol private misc wa
					symbol private misc wl
					symbol private misc wpos
					symbol private misc bdm
					symbol private misc ch
					symbol private misc own
					symbol external misc plug_00198 --> /main/template/variables/wn_var/wn
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
					symbol external misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
					symbol external misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
					symbol external misc WordLength --> /main/template/functions/WordLength_fn/WordLength
					symbol external misc TEXT_TY_RevCase --> /main/template/functions/TEXT_TY_RevCase_fn/TEXT_TY_RevCase
					symbol external misc GPR_PREPOSITION --> /main/template/constants/GPR_PREPOSITION_con/GPR_PREPOSITION
					local txt K_unchecked
					local pos K_unchecked
					local len K_unchecked
					local wa K_unchecked
					local wl K_unchecked
					local wpos K_unchecked
					local bdm K_unchecked
					local ch K_unchecked
					local own K_unchecked
					code
						inv !store
							reference
								val K_unchecked bdm
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked own
							val K_unchecked wn
						inv !store
							reference
								val K_unchecked len
							inv BlkValueLBCapacity
								val K_unchecked txt
						inv !for
							inv !store
								reference
									val K_unchecked pos
								val K_unchecked 0
							inv !le
								val K_unchecked pos
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked pos
							code
								inv !ifelse
									inv !eq
										val K_unchecked pos
										val K_unchecked len
									code
										inv !store
											reference
												val K_unchecked ch
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked ch
											inv BlkValueRead
												val K_unchecked txt
												val K_unchecked pos
								inv !ifelse
									inv !eq
										val K_unchecked ch
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked 32
													val K_unchecked 9
												val K_unchecked 10
											val K_unchecked 0
									code
										inv !if
											val K_unchecked bdm
											code
												inv !continue
										inv !store
											reference
												val K_unchecked bdm
											val K_unchecked 1
										inv !if
											inv !ne
												val K_unchecked wpos
												val K_unchecked wl
											code
												inv !return
													val K_unchecked GPR_FAIL
										inv !if
											inv !eq
												val K_unchecked ch
												val K_unchecked 0
											code
												inv !break
									code
										inv !if
											val K_unchecked bdm
											code
												inv !store
													reference
														val K_unchecked bdm
													val K_unchecked 0
												inv !if
													inv !eq
														inv NextWordStopped
														val K_unchecked -1
													code
														inv !return
															val K_unchecked GPR_FAIL
												inv !store
													reference
														val K_unchecked wa
													inv WordAddress
														inv !minus
															val K_unchecked wn
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked wl
													inv WordLength
														inv !minus
															val K_unchecked wn
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked wpos
													val K_unchecked 0
										inv !if
											inv !ne
												inv !lookupbyte
													val K_unchecked wa
													val K_unchecked wpos
												inv !alternative
													val K_unchecked ch
													inv TEXT_TY_RevCase
														val K_unchecked ch
											code
												inv !return
													val K_unchecked GPR_FAIL
										inv !postincrement
											reference
												val K_unchecked wpos
						inv !if
							inv !eq
								val K_unchecked wn
								val K_unchecked own
							code
								inv !return
									val K_unchecked GPR_FAIL
						inv !return
							val K_unchecked GPR_PREPOSITION
				constant TEXT_TY_ROGPRI K_unchecked_function = TEXT_TY_ROGPRI_B __assimilated=1
			package TEXT_TY_BlobAccess_fn _function
				symbol public misc TEXT_TY_BlobAccess
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_BlobAccess_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc blobtype
					symbol private misc ctxt
					symbol private misc wanted
					symbol private misc rtxt
					symbol private misc p1
					symbol private misc p2
					symbol private misc cp1
					symbol private misc cp2
					symbol private misc r
					symbol external misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_BlobAccessI --> /main/template/functions/TEXT_TY_BlobAccessI_fn/TEXT_TY_BlobAccessI
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local txt K_unchecked
					local blobtype K_unchecked
					local ctxt K_unchecked
					local wanted K_unchecked
					local rtxt K_unchecked
					local p1 K_unchecked
					local p2 K_unchecked
					local cp1 K_unchecked
					local cp2 K_unchecked
					local r K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked blobtype
								val K_unchecked CHR_BLOB
							code
								inv !return
									inv TEXT_TY_CharacterLength
										val K_unchecked txt
						inv !store
							reference
								val K_unchecked cp1
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p1
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked cp2
							inv !lookup
								val K_unchecked rtxt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p2
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked rtxt
						inv TEXT_TY_Transmute
							val K_unchecked ctxt
						inv !store
							reference
								val K_unchecked r
							inv TEXT_TY_BlobAccessI
								val K_unchecked txt
								val K_unchecked blobtype
								val K_unchecked ctxt
								val K_unchecked wanted
								val K_unchecked rtxt
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked p1
							val K_unchecked cp1
						inv TEXT_TY_Untransmute
							val K_unchecked rtxt
							val K_unchecked p2
							val K_unchecked cp2
						inv !return
							val K_unchecked r
				constant TEXT_TY_BlobAccess K_unchecked_function = TEXT_TY_BlobAccess_B __assimilated=1
			package TEXT_TY_BlobAccessI_fn _function
				symbol public misc TEXT_TY_BlobAccessI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_BlobAccessI_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc blobtype
					symbol private misc ctxt
					symbol private misc wanted
					symbol private misc rtxt
					symbol private misc brm
					symbol private misc oldbrm
					symbol private misc ch
					symbol private misc i
					symbol private misc dsize
					symbol private misc csize
					symbol private misc blobcount
					symbol private misc gp
					symbol private misc cl
					symbol private misc j
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc WS_BRM --> /main/template/constants/WS_BRM_con/WS_BRM
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc PARA_BLOB --> /main/template/constants/PARA_BLOB_con/PARA_BLOB
					symbol external misc LINE_BLOB --> /main/template/constants/LINE_BLOB_con/LINE_BLOB
					symbol external misc WORD_BLOB --> /main/template/constants/WORD_BLOB_con/WORD_BLOB
					symbol external misc PWORD_BLOB --> /main/template/constants/PWORD_BLOB_con/PWORD_BLOB
					symbol external misc UWORD_BLOB --> /main/template/constants/UWORD_BLOB_con/UWORD_BLOB
					symbol external misc ACCEPTED_BRM --> /main/template/constants/ACCEPTED_BRM_con/ACCEPTED_BRM
					symbol external misc SKIPPED_BRM --> /main/template/constants/SKIPPED_BRM_con/SKIPPED_BRM
					symbol external misc ACCEPTEDP_BRM --> /main/template/constants/ACCEPTEDP_BRM_con/ACCEPTEDP_BRM
					symbol external misc ACCEPTEDN_BRM --> /main/template/constants/ACCEPTEDN_BRM_con/ACCEPTEDN_BRM
					symbol external misc ACCEPTEDPN_BRM --> /main/template/constants/ACCEPTEDPN_BRM_con/ACCEPTEDPN_BRM
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc TEXT_TY_Concatenate --> /main/template/functions/TEXT_TY_Concatenate_fn/TEXT_TY_Concatenate
					symbol external misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					local txt K_unchecked
					local blobtype K_unchecked
					local ctxt K_unchecked
					local wanted K_unchecked
					local rtxt K_unchecked
					local brm K_unchecked
					local oldbrm K_unchecked
					local ch K_unchecked
					local i K_unchecked
					local dsize K_unchecked
					local csize K_unchecked
					local blobcount K_unchecked
					local gp K_unchecked
					local cl K_unchecked
					local j K_unchecked
					code
						inv !store
							reference
								val K_unchecked dsize
							inv BlkValueLBCapacity
								val K_unchecked txt
						inv !ifelse
							val K_unchecked ctxt
							code
								inv !store
									reference
										val K_unchecked csize
									inv BlkValueLBCapacity
										val K_unchecked ctxt
							code
								inv !if
									val K_unchecked rtxt
									code
										inv !printret
											val K_unchecked "*** rtxt without ctxt ***"
						inv !store
							reference
								val K_unchecked brm
							val K_unchecked WS_BRM
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked dsize
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked ch
									inv BlkValueRead
										val K_unchecked txt
										val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked ch
										val K_unchecked 0
									code
										inv !break
								inv !store
									reference
										val K_unchecked oldbrm
									val K_unchecked brm
								inv !ifelse
									inv !eq
										val K_unchecked ch
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked 10
													val K_unchecked 13
												val K_unchecked 32
											val K_unchecked 9
									code
										inv !if
											inv !ne
												val K_unchecked oldbrm
												val K_unchecked WS_BRM
											code
												inv !store
													reference
														val K_unchecked gp
													val K_unchecked 0
												inv !for
													inv !store
														reference
															val K_unchecked j
														val K_unchecked i
													inv !lt
														val K_unchecked j
														val K_unchecked dsize
													inv !postincrement
														reference
															val K_unchecked j
													code
														inv !store
															reference
																val K_unchecked ch
															inv BlkValueRead
																val K_unchecked txt
																val K_unchecked j
														inv !if
															inv !eq
																val K_unchecked ch
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked brm
																	val K_unchecked WS_BRM
																inv !break
														inv !if
															inv !eq
																val K_unchecked ch
																inv !alternative
																	val K_unchecked 10
																	val K_unchecked 13
															code
																inv !postincrement
																	reference
																		val K_unchecked gp
																inv !continue
														inv !if
															inv !ne
																val K_unchecked ch
																inv !alternative
																	val K_unchecked 32
																	val K_unchecked 9
															code
																inv !break
												inv !store
													reference
														val K_unchecked ch
													inv BlkValueRead
														val K_unchecked txt
														val K_unchecked i
												inv !if
													inv !eq
														val K_unchecked j
														val K_unchecked dsize
													code
														inv !store
															reference
																val K_unchecked brm
															val K_unchecked WS_BRM
												inv !switch
													val K_unchecked blobtype
													code
														inv !case
															val K_unchecked PARA_BLOB
															code
																inv !if
																	inv !ge
																		val K_unchecked gp
																		val K_unchecked 2
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked WS_BRM
														inv !case
															val K_unchecked LINE_BLOB
															code
																inv !if
																	inv !ge
																		val K_unchecked gp
																		val K_unchecked 1
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked WS_BRM
														inv !default
															code
																inv !store
																	reference
																		val K_unchecked brm
																	val K_unchecked WS_BRM
									code
										inv !store
											reference
												val K_unchecked gp
											val K_unchecked 0
										inv !if
											inv !and
												inv !eq
													val K_unchecked blobtype
													inv !alternative
														inv !alternative
															val K_unchecked WORD_BLOB
															val K_unchecked PWORD_BLOB
														val K_unchecked UWORD_BLOB
												inv !eq
													val K_unchecked ch
													inv !alternative
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											val K_unchecked 46
																											val K_unchecked 44
																										val K_unchecked 33
																									val K_unchecked 63
																								val K_unchecked 45
																							val K_unchecked 47
																						val K_unchecked 34
																					val K_unchecked 58
																				val K_unchecked 59
																			val K_unchecked 40
																		val K_unchecked 41
																	val K_unchecked 91
																val K_unchecked 93
															val K_unchecked 123
														val K_unchecked 125
											code
												inv !store
													reference
														val K_unchecked gp
													val K_unchecked 1
										inv !switch
											val K_unchecked oldbrm
											code
												inv !case
													val K_unchecked WS_BRM
													code
														inv !store
															reference
																val K_unchecked brm
															val K_unchecked ACCEPTED_BRM
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked WORD_BLOB
															code
																inv !if
																	val K_unchecked gp
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked SKIPPED_BRM
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked PWORD_BLOB
															code
																inv !if
																	val K_unchecked gp
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked ACCEPTEDP_BRM
												inv !case
													val K_unchecked SKIPPED_BRM
													code
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked WORD_BLOB
															code
																inv !if
																	inv !eq
																		val K_unchecked gp
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked ACCEPTED_BRM
												inv !case
													val K_unchecked ACCEPTED_BRM
													code
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked WORD_BLOB
															code
																inv !if
																	val K_unchecked gp
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked SKIPPED_BRM
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked PWORD_BLOB
															code
																inv !if
																	val K_unchecked gp
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked ACCEPTEDP_BRM
												inv !case
													val K_unchecked ACCEPTEDP_BRM
													code
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked PWORD_BLOB
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked gp
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked ACCEPTED_BRM
																	code
																		inv !if
																			inv !and
																				inv !eq
																					val K_unchecked ch
																					inv BlkValueRead
																						val K_unchecked txt
																						inv !minus
																							val K_unchecked i
																							val K_unchecked 1
																				inv !eq
																					val K_unchecked ch
																					inv !alternative
																						val K_unchecked 45
																						val K_unchecked 46
																			code
																				inv !postdecrement
																					reference
																						val K_unchecked blobcount
																		inv !postincrement
																			reference
																				val K_unchecked blobcount
												inv !case
													val K_unchecked ACCEPTEDN_BRM
													code
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked WORD_BLOB
															code
																inv !if
																	val K_unchecked gp
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked SKIPPED_BRM
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked PWORD_BLOB
															code
																inv !if
																	val K_unchecked gp
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked ACCEPTEDP_BRM
												inv !case
													val K_unchecked ACCEPTEDPN_BRM
													code
														inv !if
															inv !eq
																val K_unchecked blobtype
																val K_unchecked PWORD_BLOB
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked gp
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked brm
																			val K_unchecked ACCEPTED_BRM
																	code
																		inv !if
																			inv !and
																				inv !eq
																					val K_unchecked ch
																					inv BlkValueRead
																						val K_unchecked txt
																						inv !minus
																							val K_unchecked i
																							val K_unchecked 1
																				inv !eq
																					val K_unchecked ch
																					inv !alternative
																						val K_unchecked 45
																						val K_unchecked 46
																			code
																				inv !postdecrement
																					reference
																						val K_unchecked blobcount
																		inv !postincrement
																			reference
																				val K_unchecked blobcount
								inv !ifelse
									inv !eq
										val K_unchecked brm
										inv !alternative
											val K_unchecked ACCEPTED_BRM
											val K_unchecked ACCEPTEDP_BRM
									code
										inv !if
											inv !ne
												val K_unchecked oldbrm
												val K_unchecked brm
											code
												inv !postincrement
													reference
														val K_unchecked blobcount
										inv !ifelse
											inv !and
												val K_unchecked ctxt
												inv !eq
													val K_unchecked blobcount
													val K_unchecked wanted
											code
												inv !ifelse
													val K_unchecked rtxt
													code
														inv BlkValueWrite
															val K_unchecked ctxt
															val K_unchecked cl
															val K_unchecked 0
														inv TEXT_TY_Concatenate
															val K_unchecked ctxt
															val K_unchecked rtxt
															val K_unchecked CHR_BLOB
														inv !store
															reference
																val K_unchecked csize
															inv BlkValueLBCapacity
																val K_unchecked ctxt
														inv !store
															reference
																val K_unchecked cl
															inv TEXT_TY_CharacterLength
																val K_unchecked ctxt
														inv !if
															inv !eq
																val K_unchecked brm
																val K_unchecked ACCEPTED_BRM
															code
																inv !store
																	reference
																		val K_unchecked brm
																	val K_unchecked ACCEPTEDN_BRM
														inv !if
															inv !eq
																val K_unchecked brm
																val K_unchecked ACCEPTEDP_BRM
															code
																inv !store
																	reference
																		val K_unchecked brm
																	val K_unchecked ACCEPTEDPN_BRM
													code
														inv !if
															inv !ge
																inv !plus
																	val K_unchecked cl
																	val K_unchecked 1
																val K_unchecked csize
															code
																inv !if
																	inv !eq
																		inv BlkValueSetLBCapacity
																			val K_unchecked ctxt
																			inv !times
																				val K_unchecked 2
																				val K_unchecked cl
																		val K_unchecked 0
																	code
																		inv !break
																inv !store
																	reference
																		val K_unchecked csize
																	inv BlkValueLBCapacity
																		val K_unchecked ctxt
														inv BlkValueWrite
															val K_unchecked ctxt
															inv !postincrement
																reference
																	val K_unchecked cl
															val K_unchecked ch
											code
												inv !if
													val K_unchecked rtxt
													code
														inv !if
															inv !ge
																inv !plus
																	val K_unchecked cl
																	val K_unchecked 1
																val K_unchecked csize
															code
																inv !if
																	inv !eq
																		inv BlkValueSetLBCapacity
																			val K_unchecked ctxt
																			inv !times
																				val K_unchecked 2
																				val K_unchecked cl
																		val K_unchecked 0
																	code
																		inv !break
																inv !store
																	reference
																		val K_unchecked csize
																	inv BlkValueLBCapacity
																		val K_unchecked ctxt
														inv BlkValueWrite
															val K_unchecked ctxt
															inv !postincrement
																reference
																	val K_unchecked cl
															val K_unchecked ch
									code
										inv !if
											inv !and
												val K_unchecked rtxt
												inv !ne
													val K_unchecked brm
													inv !alternative
														val K_unchecked ACCEPTEDN_BRM
														val K_unchecked ACCEPTEDPN_BRM
											code
												inv !if
													inv !ge
														inv !plus
															val K_unchecked cl
															val K_unchecked 1
														val K_unchecked csize
													code
														inv !if
															inv !eq
																inv BlkValueSetLBCapacity
																	val K_unchecked ctxt
																	inv !times
																		val K_unchecked 2
																		val K_unchecked cl
																val K_unchecked 0
															code
																inv !break
														inv !store
															reference
																val K_unchecked csize
															inv BlkValueLBCapacity
																val K_unchecked ctxt
												inv BlkValueWrite
													val K_unchecked ctxt
													inv !postincrement
														reference
															val K_unchecked cl
													val K_unchecked ch
						inv !if
							val K_unchecked ctxt
							code
								inv BlkValueWrite
									val K_unchecked ctxt
									inv !postincrement
										reference
											val K_unchecked cl
									val K_unchecked 0
						inv !return
							val K_unchecked blobcount
				constant TEXT_TY_BlobAccessI K_unchecked_function = TEXT_TY_BlobAccessI_B __assimilated=1
			package TEXT_TY_GetBlob_fn _function
				symbol public misc TEXT_TY_GetBlob
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_GetBlob_B _code
					symbol private misc ctxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc wanted
					symbol private misc blobtype
					symbol external misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
					symbol external misc TEXT_TY_GetCharacter --> /main/template/functions/TEXT_TY_GetCharacter_fn/TEXT_TY_GetCharacter
					symbol external misc TEXT_TY_BlobAccess --> /main/template/functions/TEXT_TY_BlobAccess_fn/TEXT_TY_BlobAccess
					local ctxt K_unchecked
					local txt K_unchecked
					local wanted K_unchecked
					local blobtype K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								val K_unchecked blobtype
								val K_unchecked CHR_BLOB
							code
								inv !return
									inv TEXT_TY_GetCharacter
										val K_unchecked ctxt
										val K_unchecked txt
										val K_unchecked wanted
						inv TEXT_TY_BlobAccess
							val K_unchecked txt
							val K_unchecked blobtype
							val K_unchecked ctxt
							val K_unchecked wanted
						inv !return
							val K_unchecked ctxt
				constant TEXT_TY_GetBlob K_unchecked_function = TEXT_TY_GetBlob_B __assimilated=1
			package TEXT_TY_ReplaceBlob_fn _function
				symbol public misc TEXT_TY_ReplaceBlob
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ReplaceBlob_B _code
					symbol private misc blobtype
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc wanted
					symbol private misc rtxt
					symbol private misc ctxt
					symbol private misc ilen
					symbol private misc rlen
					symbol private misc i
					symbol private misc p
					symbol private misc cp
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc TEXT_TY_BlobAccess --> /main/template/functions/TEXT_TY_BlobAccess_fn/TEXT_TY_BlobAccess
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local blobtype K_unchecked
					local txt K_unchecked
					local wanted K_unchecked
					local rtxt K_unchecked
					local ctxt K_unchecked
					local ilen K_unchecked
					local rlen K_unchecked
					local i K_unchecked
					local p K_unchecked
					local cp K_unchecked
					code
						inv TEXT_TY_Transmute
							val K_unchecked txt
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked rtxt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked rtxt
						inv !ifelse
							inv !eq
								val K_unchecked blobtype
								val K_unchecked CHR_BLOB
							code
								inv !store
									reference
										val K_unchecked ilen
									inv TEXT_TY_CharacterLength
										val K_unchecked txt
								inv !store
									reference
										val K_unchecked rlen
									inv TEXT_TY_CharacterLength
										val K_unchecked rtxt
								inv !postdecrement
									reference
										val K_unchecked wanted
								inv !if
									inv !and
										inv !ge
											val K_unchecked wanted
											val K_unchecked 0
										inv !lt
											val K_unchecked wanted
											val K_unchecked ilen
									code
										inv !ifelse
											inv !eq
												val K_unchecked rlen
												val K_unchecked 1
											code
												inv BlkValueWrite
													val K_unchecked txt
													val K_unchecked wanted
													inv BlkValueRead
														val K_unchecked rtxt
														val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked ctxt
													inv BlkValueCreate
														val K_unchecked plug_00342
												inv TEXT_TY_Transmute
													val K_unchecked ctxt
												inv !if
													inv BlkValueSetLBCapacity
														val K_unchecked ctxt
														inv !plus
															inv !plus
																val K_unchecked ilen
																val K_unchecked rlen
															val K_unchecked 1
													code
														inv !for
															inv !store
																reference
																	val K_unchecked i
																val K_unchecked 0
															inv !lt
																val K_unchecked i
																val K_unchecked wanted
															inv !postincrement
																reference
																	val K_unchecked i
															code
																inv BlkValueWrite
																	val K_unchecked ctxt
																	val K_unchecked i
																	inv BlkValueRead
																		val K_unchecked txt
																		val K_unchecked i
														inv !for
															inv !store
																reference
																	val K_unchecked i
																val K_unchecked 0
															inv !lt
																val K_unchecked i
																val K_unchecked rlen
															inv !postincrement
																reference
																	val K_unchecked i
															code
																inv BlkValueWrite
																	val K_unchecked ctxt
																	inv !plus
																		val K_unchecked wanted
																		val K_unchecked i
																	inv BlkValueRead
																		val K_unchecked rtxt
																		val K_unchecked i
														inv !for
															inv !store
																reference
																	val K_unchecked i
																inv !plus
																	val K_unchecked wanted
																	val K_unchecked 1
															inv !lt
																val K_unchecked i
																val K_unchecked ilen
															inv !postincrement
																reference
																	val K_unchecked i
															code
																inv BlkValueWrite
																	val K_unchecked ctxt
																	inv !minus
																		inv !plus
																			val K_unchecked rlen
																			val K_unchecked i
																		val K_unchecked 1
																	inv BlkValueRead
																		val K_unchecked txt
																		val K_unchecked i
														inv BlkValueWrite
															val K_unchecked ctxt
															inv !plus
																val K_unchecked rlen
																val K_unchecked ilen
															val K_unchecked 0
														inv BlkValueCopy
															val K_unchecked txt
															val K_unchecked ctxt
												inv BlkValueFree
													val K_unchecked ctxt
							code
								inv !store
									reference
										val K_unchecked ctxt
									inv BlkValueCreate
										val K_unchecked plug_00342
								inv TEXT_TY_BlobAccess
									val K_unchecked txt
									val K_unchecked blobtype
									val K_unchecked ctxt
									val K_unchecked wanted
									val K_unchecked rtxt
								inv BlkValueCopy
									val K_unchecked txt
									val K_unchecked ctxt
								inv BlkValueFree
									val K_unchecked ctxt
						inv TEXT_TY_Untransmute
							val K_unchecked rtxt
							val K_unchecked p
							val K_unchecked cp
				constant TEXT_TY_ReplaceBlob K_unchecked_function = TEXT_TY_ReplaceBlob_B __assimilated=1
			package TEXT_TY_ReplaceText_fn _function
				symbol public misc TEXT_TY_ReplaceText
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ReplaceText_B _code
					symbol private misc blobtype
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc ftxt
					symbol private misc rtxt
					symbol private misc r
					symbol private misc p1
					symbol private misc p2
					symbol private misc cp1
					symbol private misc cp2
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_ReplaceTextI --> /main/template/functions/TEXT_TY_ReplaceTextI_fn/TEXT_TY_ReplaceTextI
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local blobtype K_unchecked
					local txt K_unchecked
					local ftxt K_unchecked
					local rtxt K_unchecked
					local r K_unchecked
					local p1 K_unchecked
					local p2 K_unchecked
					local cp1 K_unchecked
					local cp2 K_unchecked
					code
						inv TEXT_TY_Transmute
							val K_unchecked txt
						inv !store
							reference
								val K_unchecked cp1
							inv !lookup
								val K_unchecked ftxt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p1
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked ftxt
						inv !store
							reference
								val K_unchecked cp2
							inv !lookup
								val K_unchecked rtxt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p2
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked rtxt
						inv !store
							reference
								val K_unchecked r
							inv TEXT_TY_ReplaceTextI
								val K_unchecked blobtype
								val K_unchecked txt
								val K_unchecked ftxt
								val K_unchecked rtxt
						inv TEXT_TY_Untransmute
							val K_unchecked ftxt
							val K_unchecked p1
							val K_unchecked cp1
						inv TEXT_TY_Untransmute
							val K_unchecked rtxt
							val K_unchecked p2
							val K_unchecked cp2
						inv !return
							val K_unchecked r
				constant TEXT_TY_ReplaceText K_unchecked_function = TEXT_TY_ReplaceText_B __assimilated=1
			package TEXT_TY_ReplaceTextI_fn _function
				symbol public misc TEXT_TY_ReplaceTextI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ReplaceTextI_B _code
					symbol private misc blobtype
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc ftxt
					symbol private misc rtxt
					symbol private misc ctxt
					symbol private misc csize
					symbol private misc ilen
					symbol private misc flen
					symbol private misc i
					symbol private misc cl
					symbol private misc mpos
					symbol private misc ch
					symbol private misc chm
					symbol private misc whitespace
					symbol private misc punctuation
					symbol external misc REGEXP_BLOB --> /main/template/constants/REGEXP_BLOB_con/REGEXP_BLOB
					symbol external misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
					symbol external misc TEXT_TY_Replace_RE --> /main/template/functions/TEXT_TY_Replace_RE_fn/TEXT_TY_Replace_RE
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol private label .MoreMatching
					symbol external misc WORD_BLOB --> /main/template/constants/WORD_BLOB_con/WORD_BLOB
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc TEXT_TY_Concatenate --> /main/template/functions/TEXT_TY_Concatenate_fn/TEXT_TY_Concatenate
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					local blobtype K_unchecked
					local txt K_unchecked
					local ftxt K_unchecked
					local rtxt K_unchecked
					local ctxt K_unchecked
					local csize K_unchecked
					local ilen K_unchecked
					local flen K_unchecked
					local i K_unchecked
					local cl K_unchecked
					local mpos K_unchecked
					local ch K_unchecked
					local chm K_unchecked
					local whitespace K_unchecked
					local punctuation K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked blobtype
								inv !alternative
									val K_unchecked REGEXP_BLOB
									val K_unchecked CHR_BLOB
							code
								inv !return
									inv TEXT_TY_Replace_RE
										val K_unchecked blobtype
										val K_unchecked txt
										val K_unchecked ftxt
										val K_unchecked rtxt
						inv !store
							reference
								val K_unchecked ilen
							inv TEXT_TY_CharacterLength
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked flen
							inv TEXT_TY_CharacterLength
								val K_unchecked ftxt
						inv !store
							reference
								val K_unchecked ctxt
							inv BlkValueCreate
								val K_unchecked plug_00342
						inv TEXT_TY_Transmute
							val K_unchecked ctxt
						inv !store
							reference
								val K_unchecked csize
							inv BlkValueLBCapacity
								val K_unchecked ctxt
						inv !store
							reference
								val K_unchecked mpos
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked whitespace
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked punctuation
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !le
								val K_unchecked i
								val K_unchecked ilen
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked ch
									inv BlkValueRead
										val K_unchecked txt
										val K_unchecked i
								.MoreMatching
								inv !store
									reference
										val K_unchecked chm
									inv BlkValueRead
										val K_unchecked ftxt
										inv !postincrement
											reference
												val K_unchecked mpos
								inv !if
									inv !eq
										val K_unchecked mpos
										val K_unchecked 1
									code
										inv !switch
											val K_unchecked blobtype
											code
												inv !case
													val K_unchecked WORD_BLOB
													code
														inv !if
															inv !and
																inv !eq
																	val K_unchecked whitespace
																	val K_unchecked 0
																inv !eq
																	val K_unchecked punctuation
																	val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked chm
																	val K_unchecked -1
								inv !store
									reference
										val K_unchecked whitespace
									val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked ch
										inv !alternative
											inv !alternative
												inv !alternative
													val K_unchecked 10
													val K_unchecked 13
												val K_unchecked 32
											val K_unchecked 9
									code
										inv !store
											reference
												val K_unchecked whitespace
											val K_unchecked 1
								inv !store
									reference
										val K_unchecked punctuation
									val K_unchecked 0
								inv !if
									inv !eq
										val K_unchecked ch
										inv !alternative
											inv !alternative
												inv !alternative
													inv !alternative
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								val K_unchecked 46
																								val K_unchecked 44
																							val K_unchecked 33
																						val K_unchecked 63
																					val K_unchecked 45
																				val K_unchecked 47
																			val K_unchecked 34
																		val K_unchecked 58
																	val K_unchecked 59
																val K_unchecked 40
															val K_unchecked 41
														val K_unchecked 91
													val K_unchecked 93
												val K_unchecked 123
											val K_unchecked 125
									code
										inv !if
											inv !eq
												val K_unchecked blobtype
												val K_unchecked WORD_BLOB
											code
												inv !store
													reference
														val K_unchecked chm
													val K_unchecked -1
										inv !store
											reference
												val K_unchecked punctuation
											val K_unchecked 1
								inv !ifelse
									inv !eq
										val K_unchecked ch
										val K_unchecked chm
									code
										inv !if
											inv !eq
												val K_unchecked mpos
												val K_unchecked flen
											code
												inv !ifelse
													inv !eq
														val K_unchecked i
														val K_unchecked ilen
													code
														inv !store
															reference
																val K_unchecked chm
															val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked chm
															inv BlkValueRead
																val K_unchecked txt
																inv !plus
																	val K_unchecked i
																	val K_unchecked 1
												inv !if
													inv !or
														inv !or
															inv !eq
																val K_unchecked blobtype
																val K_unchecked CHR_BLOB
															inv !eq
																val K_unchecked chm
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				val K_unchecked 0
																				val K_unchecked 10
																			val K_unchecked 13
																		val K_unchecked 32
																	val K_unchecked 9
														inv !eq
															val K_unchecked chm
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													val K_unchecked 46
																													val K_unchecked 44
																												val K_unchecked 33
																											val K_unchecked 63
																										val K_unchecked 45
																									val K_unchecked 47
																								val K_unchecked 34
																							val K_unchecked 58
																						val K_unchecked 59
																					val K_unchecked 40
																				val K_unchecked 41
																			val K_unchecked 91
																		val K_unchecked 93
																	val K_unchecked 123
																val K_unchecked 125
													code
														inv !store
															reference
																val K_unchecked mpos
															val K_unchecked 0
														inv !store
															reference
																val K_unchecked cl
															inv !minus
																val K_unchecked cl
																inv !minus
																	val K_unchecked flen
																	val K_unchecked 1
														inv BlkValueWrite
															val K_unchecked ctxt
															val K_unchecked cl
															val K_unchecked 0
														inv TEXT_TY_Concatenate
															val K_unchecked ctxt
															val K_unchecked rtxt
															val K_unchecked CHR_BLOB
														inv !store
															reference
																val K_unchecked csize
															inv BlkValueLBCapacity
																val K_unchecked ctxt
														inv !store
															reference
																val K_unchecked cl
															inv TEXT_TY_CharacterLength
																val K_unchecked ctxt
														inv !continue
									code
										inv !store
											reference
												val K_unchecked mpos
											val K_unchecked 0
								inv !if
									inv !ge
										inv !plus
											val K_unchecked cl
											val K_unchecked 1
										val K_unchecked csize
									code
										inv !if
											inv !eq
												inv BlkValueSetLBCapacity
													val K_unchecked ctxt
													inv !times
														val K_unchecked 2
														val K_unchecked cl
												val K_unchecked 0
											code
												inv !break
										inv !store
											reference
												val K_unchecked csize
											inv BlkValueLBCapacity
												val K_unchecked ctxt
								inv BlkValueWrite
									val K_unchecked ctxt
									inv !postincrement
										reference
											val K_unchecked cl
									val K_unchecked ch
						inv BlkValueCopy
							val K_unchecked txt
							val K_unchecked ctxt
						inv BlkValueFree
							val K_unchecked ctxt
				constant TEXT_TY_ReplaceTextI K_unchecked_function = TEXT_TY_ReplaceTextI_B __assimilated=1
			package TEXT_TY_CharacterLength_fn _function
				symbol public misc TEXT_TY_CharacterLength
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_CharacterLength_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ch
					symbol private misc i
					symbol private misc dsize
					symbol private misc p
					symbol private misc cp
					symbol private misc r
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local txt K_unchecked
					local ch K_unchecked
					local i K_unchecked
					local dsize K_unchecked
					local p K_unchecked
					local cp K_unchecked
					local r K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked dsize
							inv BlkValueLBCapacity
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked r
							val K_unchecked dsize
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked dsize
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked ch
									inv BlkValueRead
										val K_unchecked txt
										val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked ch
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked r
											val K_unchecked i
										inv !break
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked p
							val K_unchecked cp
						inv !return
							val K_unchecked r
				constant TEXT_TY_CharacterLength K_unchecked_function = TEXT_TY_CharacterLength_B __assimilated=1
			package TEXT_TY_Empty_fn _function
				symbol public misc TEXT_TY_Empty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Empty_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BLK_BVBITMAP_LONGBLOCKMASK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCKMASK_con/BLK_BVBITMAP_LONGBLOCKMASK
					symbol external misc EMPTY_TEXT_PACKED --> /main/template/constants/EMPTY_TEXT_PACKED_con/EMPTY_TEXT_PACKED
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					local txt K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !if
							inv !eq
								inv !bitwiseand
									inv !lookup
										val K_unchecked txt
										val K_unchecked 0
									val K_unchecked BLK_BVBITMAP_LONGBLOCKMASK
								val K_unchecked 0
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked txt
											val K_unchecked 1
										val K_unchecked EMPTY_TEXT_PACKED
									code
										inv !return
											val K_unchecked 1
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								inv TEXT_TY_CharacterLength
									val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant TEXT_TY_Empty K_unchecked_function = TEXT_TY_Empty_B __assimilated=1
			package TEXT_TY_GetCharacter_fn _function
				symbol public misc TEXT_TY_GetCharacter
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_GetCharacter_B _code
					symbol private misc ctxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc i
					symbol private misc ch
					symbol private misc p
					symbol private misc cp
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local ctxt K_unchecked
					local txt K_unchecked
					local i K_unchecked
					local ch K_unchecked
					local p K_unchecked
					local cp K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv TEXT_TY_Transmute
							val K_unchecked ctxt
						inv !ifelse
							inv !or
								inv !le
									val K_unchecked i
									val K_unchecked 0
								inv !gt
									val K_unchecked i
									inv TEXT_TY_CharacterLength
										val K_unchecked txt
							code
								inv !store
									reference
										val K_unchecked ch
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked ch
									inv BlkValueRead
										val K_unchecked txt
										inv !minus
											val K_unchecked i
											val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked ctxt
							val K_unchecked 0
							val K_unchecked ch
						inv BlkValueWrite
							val K_unchecked ctxt
							val K_unchecked 1
							val K_unchecked 0
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked p
							val K_unchecked cp
						inv !return
							val K_unchecked ctxt
				constant TEXT_TY_GetCharacter K_unchecked_function = TEXT_TY_GetCharacter_B __assimilated=1
			package TEXT_TY_CharactersOfCase_fn _function
				symbol public misc TEXT_TY_CharactersOfCase
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_CharactersOfCase_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc case
					symbol private misc i
					symbol private misc ch
					symbol private misc len
					symbol private misc p
					symbol private misc cp
					symbol private misc r
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc CharIsOfCase --> /main/template/functions/CharIsOfCase_fn/CharIsOfCase
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local txt K_unchecked
					local case K_unchecked
					local i K_unchecked
					local ch K_unchecked
					local len K_unchecked
					local p K_unchecked
					local cp K_unchecked
					local r K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked len
							inv TEXT_TY_CharacterLength
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked r
							val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked ch
									inv BlkValueRead
										val K_unchecked txt
										val K_unchecked i
								inv !if
									inv !and
										val K_unchecked ch
										inv !eq
											inv CharIsOfCase
												val K_unchecked ch
												val K_unchecked case
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked r
											val K_unchecked 0
										inv !break
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked p
							val K_unchecked cp
						inv !return
							val K_unchecked r
				constant TEXT_TY_CharactersOfCase K_unchecked_function = TEXT_TY_CharactersOfCase_B __assimilated=1
			package TEXT_TY_CharactersToCase_fn _function
				symbol public misc TEXT_TY_CharactersToCase
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_CharactersToCase_B _code
					symbol private misc ctxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc case
					symbol private misc i
					symbol private misc ch
					symbol private misc len
					symbol private misc bnd
					symbol private misc pk
					symbol private misc cp
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc CharToCase --> /main/template/functions/CharToCase_fn/CharToCase
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local ctxt K_unchecked
					local txt K_unchecked
					local case K_unchecked
					local i K_unchecked
					local ch K_unchecked
					local len K_unchecked
					local bnd K_unchecked
					local pk K_unchecked
					local cp K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked pk
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked txt
						inv TEXT_TY_Transmute
							val K_unchecked ctxt
						inv !store
							reference
								val K_unchecked len
							inv TEXT_TY_CharacterLength
								val K_unchecked txt
						inv !if
							inv BlkValueSetLBCapacity
								val K_unchecked ctxt
								inv !plus
									val K_unchecked len
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked bnd
									val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked len
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked ch
											inv BlkValueRead
												val K_unchecked txt
												val K_unchecked i
										inv !ifelse
											inv !lt
												val K_unchecked case
												val K_unchecked 2
											code
												inv BlkValueWrite
													val K_unchecked ctxt
													val K_unchecked i
													inv CharToCase
														val K_unchecked ch
														val K_unchecked case
											code
												inv BlkValueWrite
													val K_unchecked ctxt
													val K_unchecked i
													inv CharToCase
														val K_unchecked ch
														val K_unchecked bnd
												inv !if
													inv !eq
														val K_unchecked case
														val K_unchecked 2
													code
														inv !store
															reference
																val K_unchecked bnd
															val K_unchecked 0
														inv !if
															inv !eq
																val K_unchecked ch
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	inv !alternative
																																		inv !alternative
																																			val K_unchecked 0
																																			val K_unchecked 10
																																		val K_unchecked 13
																																	val K_unchecked 32
																																val K_unchecked 9
																															val K_unchecked 46
																														val K_unchecked 44
																													val K_unchecked 33
																												val K_unchecked 63
																											val K_unchecked 45
																										val K_unchecked 47
																									val K_unchecked 34
																								val K_unchecked 58
																							val K_unchecked 59
																						val K_unchecked 40
																					val K_unchecked 41
																				val K_unchecked 91
																			val K_unchecked 93
																		val K_unchecked 123
																	val K_unchecked 125
															code
																inv !store
																	reference
																		val K_unchecked bnd
																	val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked case
														val K_unchecked 3
													code
														inv !if
															inv !ne
																val K_unchecked ch
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				val K_unchecked 0
																				val K_unchecked 10
																			val K_unchecked 13
																		val K_unchecked 32
																	val K_unchecked 9
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked bnd
																		val K_unchecked 1
																	code
																		inv !store
																			reference
																				val K_unchecked bnd
																			val K_unchecked 0
																	code
																		inv !if
																			inv !eq
																				val K_unchecked ch
																				inv !alternative
																					inv !alternative
																						val K_unchecked 46
																						val K_unchecked 33
																					val K_unchecked 63
																			code
																				inv !store
																					reference
																						val K_unchecked bnd
																					val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked ctxt
									val K_unchecked len
									val K_unchecked 0
						inv TEXT_TY_Untransmute
							val K_unchecked txt
							val K_unchecked pk
							val K_unchecked cp
						inv !return
							val K_unchecked ctxt
				constant TEXT_TY_CharactersToCase K_unchecked_function = TEXT_TY_CharactersToCase_B __assimilated=1
			package TEXT_TY_Concatenate_fn _function
				symbol public misc TEXT_TY_Concatenate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Concatenate_B _code
					symbol private misc to_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_txt
					symbol private misc blobtype
					symbol private misc ref_txt
					symbol private misc p
					symbol private misc cp
					symbol private misc r
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_ConcatenateI --> /main/template/functions/TEXT_TY_ConcatenateI_fn/TEXT_TY_ConcatenateI
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local to_txt K_unchecked
					local from_txt K_unchecked
					local blobtype K_unchecked
					local ref_txt K_unchecked
					local p K_unchecked
					local cp K_unchecked
					local r K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked to_txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked from_txt
								val K_unchecked 0
							code
								inv !return
									val K_unchecked to_txt
						inv TEXT_TY_Transmute
							val K_unchecked to_txt
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked from_txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked from_txt
						inv !store
							reference
								val K_unchecked r
							inv TEXT_TY_ConcatenateI
								val K_unchecked to_txt
								val K_unchecked from_txt
								val K_unchecked blobtype
								val K_unchecked ref_txt
						inv TEXT_TY_Untransmute
							val K_unchecked from_txt
							val K_unchecked p
							val K_unchecked cp
						inv !return
							val K_unchecked r
				constant TEXT_TY_Concatenate K_unchecked_function = TEXT_TY_Concatenate_B __assimilated=1
			package TEXT_TY_ConcatenateI_fn _function
				symbol public misc TEXT_TY_ConcatenateI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_ConcatenateI_B _code
					symbol private misc to_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_txt
					symbol private misc blobtype
					symbol private misc ref_txt
					symbol private misc pos
					symbol private misc len
					symbol private misc ch
					symbol private misc i
					symbol private misc tosize
					symbol private misc x
					symbol private misc y
					symbol private misc case
					symbol external misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc REGEXP_BLOB --> /main/template/constants/REGEXP_BLOB_con/REGEXP_BLOB
					symbol external misc TEXT_TY_RE_Concatenate --> /main/template/functions/TEXT_TY_RE_Concatenate_fn/TEXT_TY_RE_Concatenate
					local to_txt K_unchecked
					local from_txt K_unchecked
					local blobtype K_unchecked
					local ref_txt K_unchecked
					local pos K_unchecked
					local len K_unchecked
					local ch K_unchecked
					local i K_unchecked
					local tosize K_unchecked
					local x K_unchecked
					local y K_unchecked
					local case K_unchecked
					code
						inv !switch
							val K_unchecked blobtype
							code
								inv !case
									inv !alternativecase
										val K_unchecked CHR_BLOB
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked pos
											inv TEXT_TY_CharacterLength
												val K_unchecked to_txt
										inv !store
											reference
												val K_unchecked len
											inv TEXT_TY_CharacterLength
												val K_unchecked from_txt
										inv !if
											inv !eq
												inv BlkValueSetLBCapacity
													val K_unchecked to_txt
													inv !plus
														inv !plus
															val K_unchecked pos
															val K_unchecked len
														val K_unchecked 1
												val K_unchecked 0
											code
												inv !return
													val K_unchecked to_txt
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked len
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														val K_unchecked ch
													inv BlkValueRead
														val K_unchecked from_txt
														val K_unchecked i
												inv BlkValueWrite
													val K_unchecked to_txt
													inv !plus
														val K_unchecked i
														val K_unchecked pos
													val K_unchecked ch
										inv BlkValueWrite
											val K_unchecked to_txt
											inv !plus
												val K_unchecked len
												val K_unchecked pos
											val K_unchecked 0
										inv !return
											val K_unchecked to_txt
								inv !case
									val K_unchecked REGEXP_BLOB
									code
										inv !return
											inv TEXT_TY_RE_Concatenate
												val K_unchecked to_txt
												val K_unchecked from_txt
												val K_unchecked blobtype
												val K_unchecked ref_txt
						inv !print
							val K_unchecked "*** TEXT_TY_Concatenate used on impossible blob type ***\n"
						inv !return
							val K_unchecked 0
				constant TEXT_TY_ConcatenateI K_unchecked_function = TEXT_TY_ConcatenateI_B __assimilated=1
			package SetPlayersCommand_fn _function
				symbol public misc SetPlayersCommand
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SetPlayersCommand_B _code
					symbol private misc from_txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc len
					symbol private misc at
					symbol private misc p
					symbol private misc cp
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc buffer --> /main/template/arrays/buffer_arr/buffer
					symbol external misc CharToCase --> /main/template/functions/CharToCase_fn/CharToCase
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc VM_Tokenise --> /main/template/functions/VM_Tokenise_fn/VM_Tokenise
					symbol external misc parse --> /main/template/arrays/parse_arr/parse
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc WordCount --> /main/template/functions/WordCount_fn/WordCount
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local from_txt K_unchecked
					local i K_unchecked
					local len K_unchecked
					local at K_unchecked
					local p K_unchecked
					local cp K_unchecked
					code
						inv !store
							reference
								val K_unchecked cp
							inv !lookup
								val K_unchecked from_txt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked from_txt
						inv !store
							reference
								val K_unchecked len
							inv TEXT_TY_CharacterLength
								val K_unchecked from_txt
						inv !if
							inv !gt
								val K_unchecked len
								val K_unchecked 118
							code
								inv !store
									reference
										val K_unchecked len
									val K_unchecked 118
						inv !store
							reference
								inv !lookup
									val K_unchecked buffer
									val K_unchecked 0
							val K_unchecked len
						inv !store
							reference
								val K_unchecked at
							val K_unchecked 4
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked buffer
											inv !plus
												val K_unchecked i
												val K_unchecked at
									inv CharToCase
										inv BlkValueRead
											val K_unchecked from_txt
											val K_unchecked i
										val K_unchecked 0
						inv !for
							val K_unchecked 1
							inv !lt
								inv !plus
									val K_unchecked at
									val K_unchecked i
								val K_unchecked 120
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookupbyte
											val K_unchecked buffer
											inv !plus
												val K_unchecked at
												val K_unchecked i
									val K_unchecked 32
						inv VM_Tokenise
							val K_unchecked buffer
							val K_unchecked parse
						inv !store
							reference
								val K_unchecked players_command
							inv !plus
								val K_unchecked 100
								inv WordCount
						inv TEXT_TY_Untransmute
							val K_unchecked from_txt
							val K_unchecked p
							val K_unchecked cp
				constant SetPlayersCommand K_unchecked_function = SetPlayersCommand_B __assimilated=1
			package TEXT_TY_RE_SetTrace_fn _function
				symbol public misc TEXT_TY_RE_SetTrace
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_SetTrace_B _code
					symbol private misc F
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00511 --> /main/template/variables/TEXT_TY_RE_Trace_var/TEXT_TY_RE_Trace
					local F K_unchecked
					code
						inv !store
							reference
								val K_unchecked TEXT_TY_RE_Trace
							val K_unchecked F
				constant TEXT_TY_RE_SetTrace K_unchecked_function = TEXT_TY_RE_SetTrace_B __assimilated=1
			package TEXT_TY_RE_Node_fn _function
				symbol public misc TEXT_TY_RE_Node
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_Node_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc cc
					symbol private misc par1
					symbol private misc par2
					symbol private misc par3
					symbol private misc offset
					symbol external misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					symbol external misc RE_PACKET_SIZE_IN_BYTES --> /main/template/constants/RE_PACKET_SIZE_IN_BYTES_con/RE_PACKET_SIZE_IN_BYTES
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc RE_PAR3 --> /main/template/constants/RE_PAR3_con/RE_PAR3
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_PREVIOUS --> /main/template/constants/RE_PREVIOUS_con/RE_PREVIOUS
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc RE_UP --> /main/template/constants/RE_UP_con/RE_UP
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc RE_CONSTRAINT --> /main/template/constants/RE_CONSTRAINT_con/RE_CONSTRAINT
					local n K_unchecked
					local cc K_unchecked
					local par1 K_unchecked
					local par2 K_unchecked
					local par3 K_unchecked
					local offset K_unchecked
					code
						inv !if
							inv !or
								inv !lt
									val K_unchecked n
									val K_unchecked 0
								inv !ge
									val K_unchecked n
									val K_unchecked RE_MAX_PACKETS
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked offset
							inv !plus
								val K_unchecked RE_PACKET_space
								inv !times
									val K_unchecked n
									val K_unchecked RE_PACKET_SIZE_IN_BYTES
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_CCLASS
							val K_unchecked cc
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_PAR1
							val K_unchecked par1
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_PAR2
							val K_unchecked par2
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_PAR3
							val K_unchecked par3
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_NEXT
							val K_unchecked plug_00232
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_PREVIOUS
							val K_unchecked plug_00232
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_DOWN
							val K_unchecked plug_00232
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_UP
							val K_unchecked plug_00232
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_DATA1
							val K_unchecked -1
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_DATA2
							val K_unchecked -1
						inv !store
							reference
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_CONSTRAINT
							val K_unchecked -1
						inv !return
							val K_unchecked offset
				constant TEXT_TY_RE_Node K_unchecked_function = TEXT_TY_RE_Node_B __assimilated=1
			package TEXT_TY_RE_NodeAddress_fn _function
				symbol public misc TEXT_TY_RE_NodeAddress
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_NodeAddress_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					symbol external misc RE_PACKET_SIZE_IN_BYTES --> /main/template/constants/RE_PACKET_SIZE_IN_BYTES_con/RE_PACKET_SIZE_IN_BYTES
					local n K_unchecked
					code
						inv !if
							inv !or
								inv !lt
									val K_unchecked n
									val K_unchecked 0
								inv !ge
									val K_unchecked n
									val K_unchecked RE_MAX_PACKETS
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !return
							inv !plus
								val K_unchecked RE_PACKET_space
								inv !times
									val K_unchecked n
									val K_unchecked RE_PACKET_SIZE_IN_BYTES
				constant TEXT_TY_RE_NodeAddress K_unchecked_function = TEXT_TY_RE_NodeAddress_B __assimilated=1
			package TEXT_TY_RE_DebugMatchVars_fn _function
				symbol public misc TEXT_TY_RE_DebugMatchVars
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_DebugMatchVars_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc offset
					symbol private misc n
					symbol private misc i
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					local txt K_unchecked
					local offset K_unchecked
					local n K_unchecked
					local i K_unchecked
					code
						inv !printnumber
							inv !lookup
								val K_unchecked RE_Subexpressions
								val K_unchecked 10
						inv !print
							val K_unchecked " collecting subexps\n"
						inv !for
							inv !store
								reference
									val K_unchecked n
								val K_unchecked 0
							inv !and
								inv !lt
									val K_unchecked n
									inv !lookup
										val K_unchecked RE_Subexpressions
										val K_unchecked 10
								inv !lt
									val K_unchecked n
									val K_unchecked 10
							inv !postincrement
								reference
									val K_unchecked n
							code
								inv !store
									reference
										val K_unchecked offset
									inv !lookup
										val K_unchecked RE_Subexpressions
										val K_unchecked n
								inv !print
									val K_unchecked "Subexp "
								inv !printnumber
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_PAR1
								inv !print
									val K_unchecked " = ["
								inv !printnumber
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_DATA1
								inv !print
									val K_unchecked ","
								inv !printnumber
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_DATA2
								inv !print
									val K_unchecked "] = "
								inv !for
									inv !store
										reference
											val K_unchecked i
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_DATA1
									inv !lt
										val K_unchecked i
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_DATA2
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !printchar
											inv BlkValueRead
												val K_unchecked txt
												val K_unchecked i
								inv !print
									val K_unchecked "\n"
				constant TEXT_TY_RE_DebugMatchVars K_unchecked_function = TEXT_TY_RE_DebugMatchVars_B __assimilated=1
			package TEXT_TY_RE_CreateMatchVars_fn _function
				symbol public misc TEXT_TY_RE_CreateMatchVars
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_CreateMatchVars_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc offset
					symbol private misc n
					symbol private misc i
					symbol private misc ch
					symbol private misc ctxt
					symbol private misc cl
					symbol private misc csize
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc Allocated_Match_Vars --> /main/template/arrays/Allocated_Match_Vars_arr/Allocated_Match_Vars
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local txt K_unchecked
					local offset K_unchecked
					local n K_unchecked
					local i K_unchecked
					local ch K_unchecked
					local ctxt K_unchecked
					local cl K_unchecked
					local csize K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked n
								val K_unchecked 0
							inv !and
								inv !lt
									val K_unchecked n
									inv !lookup
										val K_unchecked RE_Subexpressions
										val K_unchecked 10
								inv !lt
									val K_unchecked n
									val K_unchecked 10
							inv !postincrement
								reference
									val K_unchecked n
							code
								inv !store
									reference
										val K_unchecked offset
									inv !lookup
										val K_unchecked RE_Subexpressions
										val K_unchecked n
								inv !if
									inv !lookup
										val K_unchecked Allocated_Match_Vars
										val K_unchecked n
									code
										inv BlkValueFree
											inv !lookup
												val K_unchecked Allocated_Match_Vars
												val K_unchecked n
								inv !store
									reference
										inv !lookup
											val K_unchecked Allocated_Match_Vars
											val K_unchecked n
									inv BlkValueCreate
										val K_unchecked plug_00342
								inv TEXT_TY_Transmute
									inv !lookup
										val K_unchecked Allocated_Match_Vars
										val K_unchecked n
								inv !store
									reference
										val K_unchecked ctxt
									inv !lookup
										val K_unchecked Allocated_Match_Vars
										val K_unchecked n
								inv !store
									reference
										val K_unchecked csize
									inv BlkValueLBCapacity
										val K_unchecked ctxt
								inv !store
									reference
										val K_unchecked cl
									val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked i
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_DATA1
									inv !lt
										val K_unchecked i
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_DATA2
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked ch
											inv BlkValueRead
												val K_unchecked txt
												val K_unchecked i
										inv !if
											inv !ge
												inv !plus
													val K_unchecked cl
													val K_unchecked 1
												val K_unchecked csize
											code
												inv !if
													inv !eq
														inv BlkValueSetLBCapacity
															val K_unchecked ctxt
															inv !times
																val K_unchecked 2
																val K_unchecked cl
														val K_unchecked 0
													code
														inv !break
												inv !store
													reference
														val K_unchecked csize
													inv BlkValueLBCapacity
														val K_unchecked ctxt
										inv BlkValueWrite
											val K_unchecked ctxt
											inv !postincrement
												reference
													val K_unchecked cl
											val K_unchecked ch
								inv BlkValueWrite
									val K_unchecked ctxt
									val K_unchecked cl
									val K_unchecked 0
				constant TEXT_TY_RE_CreateMatchVars K_unchecked_function = TEXT_TY_RE_CreateMatchVars_B __assimilated=1
			package TEXT_TY_RE_EmptyMatchVars_fn _function
				symbol public misc TEXT_TY_RE_EmptyMatchVars
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_EmptyMatchVars_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc Allocated_Match_Vars --> /main/template/arrays/Allocated_Match_Vars_arr/Allocated_Match_Vars
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local txt K_unchecked
					local n K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked n
								val K_unchecked 0
							inv !and
								inv !lt
									val K_unchecked n
									inv !lookup
										val K_unchecked RE_Subexpressions
										val K_unchecked 10
								inv !lt
									val K_unchecked n
									val K_unchecked 10
							inv !postincrement
								reference
									val K_unchecked n
							code
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked Allocated_Match_Vars
											val K_unchecked n
										val K_unchecked 0
									code
										inv BlkValueWrite
											inv !lookup
												val K_unchecked Allocated_Match_Vars
												val K_unchecked n
											val K_unchecked 0
											val K_unchecked 0
				constant TEXT_TY_RE_EmptyMatchVars K_unchecked_function = TEXT_TY_RE_EmptyMatchVars_B __assimilated=1
			package TEXT_TY_RE_GetMatchVar_fn _function
				symbol public misc TEXT_TY_RE_GetMatchVar
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_GetMatchVar_B _code
					symbol private misc vn
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc offset
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc Allocated_Match_Vars --> /main/template/arrays/Allocated_Match_Vars_arr/Allocated_Match_Vars
					local vn K_unchecked
					local offset K_unchecked
					code
						inv !if
							inv !or
								inv !or
									inv !lt
										val K_unchecked vn
										val K_unchecked 0
									inv !ge
										val K_unchecked vn
										val K_unchecked 10
								inv !ge
									val K_unchecked vn
									inv !lookup
										val K_unchecked RE_Subexpressions
										val K_unchecked 10
							code
								inv !return
									val K_unchecked EMPTY_TEXT_VALUE
						inv !store
							reference
								val K_unchecked offset
							inv !lookup
								val K_unchecked RE_Subexpressions
								val K_unchecked vn
						inv !if
							inv !eq
								val K_unchecked offset
								val K_unchecked 0
							code
								inv !return
									val K_unchecked EMPTY_TEXT_VALUE
						inv !if
							inv !lt
								inv !lookup
									val K_unchecked offset
									val K_unchecked RE_DATA1
								val K_unchecked 0
							code
								inv !return
									val K_unchecked EMPTY_TEXT_VALUE
						inv !if
							inv !eq
								inv !lookup
									val K_unchecked Allocated_Match_Vars
									val K_unchecked vn
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "*** "
								inv !printnumber
									val K_unchecked vn
								inv !print
									val K_unchecked " unallocated! ***\n"
								inv !return
									val K_unchecked EMPTY_TEXT_VALUE
						inv !return
							inv !lookup
								val K_unchecked Allocated_Match_Vars
								val K_unchecked vn
				constant TEXT_TY_RE_GetMatchVar K_unchecked_function = TEXT_TY_RE_GetMatchVar_B __assimilated=1
			package TEXT_TY_MV_End_fn _function
				symbol public misc TEXT_TY_MV_End
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_MV_End_B _code
					symbol private misc n
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc end
					symbol private misc offset
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					local n K_unchecked
					local end K_unchecked
					local offset K_unchecked
					code
						inv !store
							reference
								val K_unchecked offset
							inv !lookup
								val K_unchecked RE_Subexpressions
								val K_unchecked n
						inv !if
							inv !eq
								val K_unchecked end
								val K_unchecked 0
							code
								inv !return
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_DATA1
						inv !return
							inv !lookup
								val K_unchecked offset
								val K_unchecked RE_DATA2
				constant TEXT_TY_MV_End K_unchecked_function = TEXT_TY_MV_End_B __assimilated=1
			package TEXT_TY_RE_Clear_Markers_fn _function
				symbol public misc TEXT_TY_RE_Clear_Markers
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_Clear_Markers_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc TEXT_TY_RE_Clear_Markers --> /main/template/functions/TEXT_TY_RE_Clear_Markers_fn/TEXT_TY_RE_Clear_Markers
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc RE_CONSTRAINT --> /main/template/constants/RE_CONSTRAINT_con/RE_CONSTRAINT
					local token K_unchecked
					code
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked token
								inv !lookup
									val K_unchecked token
									val K_unchecked RE_NEXT
							code
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_DOWN
										val K_unchecked plug_00232
									code
										inv TEXT_TY_RE_Clear_Markers
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_DOWN
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_DATA1
									val K_unchecked -1
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_DATA2
									val K_unchecked -1
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_CONSTRAINT
									val K_unchecked -1
				constant TEXT_TY_RE_Clear_Markers K_unchecked_function = TEXT_TY_RE_Clear_Markers_B __assimilated=1
			package TEXT_TY_RE_DebugTree_fn _function
				symbol public misc TEXT_TY_RE_DebugTree
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_DebugTree_B _code
					symbol private misc ftxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc detail
					symbol external misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
					symbol external misc TEXT_TY_RE_DebugSubtree --> /main/template/functions/TEXT_TY_RE_DebugSubtree_fn/TEXT_TY_RE_DebugSubtree
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					local ftxt K_unchecked
					local detail K_unchecked
					code
						inv !print
							val K_unchecked "Pattern: "
						inv TEXT_TY_Say
							val K_unchecked ftxt
						inv !print
							val K_unchecked "\n"
						inv TEXT_TY_RE_DebugSubtree
							val K_unchecked ftxt
							val K_unchecked 1
							val K_unchecked RE_PACKET_space
							val K_unchecked detail
				constant TEXT_TY_RE_DebugTree K_unchecked_function = TEXT_TY_RE_DebugTree_B __assimilated=1
			package TEXT_TY_RE_DebugSubtree_fn _function
				symbol public misc TEXT_TY_RE_DebugSubtree
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_DebugSubtree_B _code
					symbol private misc ftxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc depth
					symbol private misc offset
					symbol private misc detail
					symbol private misc cup
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_UP --> /main/template/constants/RE_UP_con/RE_UP
					symbol external misc RE_PREVIOUS --> /main/template/constants/RE_PREVIOUS_con/RE_PREVIOUS
					symbol external misc TEXT_TY_RE_DebugNode --> /main/template/functions/TEXT_TY_RE_DebugNode_fn/TEXT_TY_RE_DebugNode
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc TEXT_TY_RE_DebugSubtree --> /main/template/functions/TEXT_TY_RE_DebugSubtree_fn/TEXT_TY_RE_DebugSubtree
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					local ftxt K_unchecked
					local depth K_unchecked
					local offset K_unchecked
					local detail K_unchecked
					local cup K_unchecked
					code
						inv !if
							inv !ne
								val K_unchecked offset
								val K_unchecked plug_00232
							code
								inv !store
									reference
										val K_unchecked cup
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_UP
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_PREVIOUS
										val K_unchecked plug_00232
									code
										inv !print
											val K_unchecked "*** broken initial previous ***\n"
						inv !while
							inv !ne
								val K_unchecked offset
								val K_unchecked plug_00232
							code
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_UP
										val K_unchecked cup
									code
										inv !print
											val K_unchecked "*** broken up matching ***\n"
								inv !spaces
									inv !times
										val K_unchecked depth
										val K_unchecked 2
								inv TEXT_TY_RE_DebugNode
									val K_unchecked offset
									val K_unchecked ftxt
									val K_unchecked detail
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_DOWN
										val K_unchecked plug_00232
									code
										inv !if
											inv !ne
												inv !lookup
													inv !lookup
														val K_unchecked offset
														val K_unchecked RE_DOWN
													val K_unchecked RE_UP
												val K_unchecked offset
											code
												inv !print
													val K_unchecked "*** broken down/up ***\n"
										inv TEXT_TY_RE_DebugSubtree
											val K_unchecked ftxt
											inv !plus
												val K_unchecked depth
												val K_unchecked 1
											inv !lookup
												val K_unchecked offset
												val K_unchecked RE_DOWN
											val K_unchecked detail
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked offset
											val K_unchecked RE_NEXT
										val K_unchecked plug_00232
									code
										inv !if
											inv !ne
												inv !lookup
													inv !lookup
														val K_unchecked offset
														val K_unchecked RE_NEXT
													val K_unchecked RE_PREVIOUS
												val K_unchecked offset
											code
												inv !print
													val K_unchecked "*** broken next/previous ***\n"
								inv !store
									reference
										val K_unchecked offset
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_NEXT
				constant TEXT_TY_RE_DebugSubtree K_unchecked_function = TEXT_TY_RE_DebugSubtree_B __assimilated=1
			package TEXT_TY_RE_DebugNode_fn _function
				symbol public misc TEXT_TY_RE_DebugNode
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_DebugNode_B _code
					symbol private misc offset
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ftxt
					symbol private misc detail
					symbol private misc i
					symbol private misc par1
					symbol private misc par2
					symbol private misc par3
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					symbol external misc RE_PACKET_SIZE_IN_BYTES --> /main/template/constants/RE_PACKET_SIZE_IN_BYTES_con/RE_PACKET_SIZE_IN_BYTES
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc RE_PAR3 --> /main/template/constants/RE_PAR3_con/RE_PAR3
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc DIGIT_RE_CC --> /main/template/constants/DIGIT_RE_CC_con/DIGIT_RE_CC
					symbol external misc NONDIGIT_RE_CC --> /main/template/constants/NONDIGIT_RE_CC_con/NONDIGIT_RE_CC
					symbol external misc UCASE_RE_CC --> /main/template/constants/UCASE_RE_CC_con/UCASE_RE_CC
					symbol external misc NONUCASE_RE_CC --> /main/template/constants/NONUCASE_RE_CC_con/NONUCASE_RE_CC
					symbol external misc LCASE_RE_CC --> /main/template/constants/LCASE_RE_CC_con/LCASE_RE_CC
					symbol external misc NONLCASE_RE_CC --> /main/template/constants/NONLCASE_RE_CC_con/NONLCASE_RE_CC
					symbol external misc WHITESPACE_RE_CC --> /main/template/constants/WHITESPACE_RE_CC_con/WHITESPACE_RE_CC
					symbol external misc NONWHITESPACE_RE_CC --> /main/template/constants/NONWHITESPACE_RE_CC_con/NONWHITESPACE_RE_CC
					symbol external misc PUNCTUATION_RE_CC --> /main/template/constants/PUNCTUATION_RE_CC_con/PUNCTUATION_RE_CC
					symbol external misc NONPUNCTUATION_RE_CC --> /main/template/constants/NONPUNCTUATION_RE_CC_con/NONPUNCTUATION_RE_CC
					symbol external misc WORD_RE_CC --> /main/template/constants/WORD_RE_CC_con/WORD_RE_CC
					symbol external misc NONWORD_RE_CC --> /main/template/constants/NONWORD_RE_CC_con/NONWORD_RE_CC
					symbol external misc ALWAYS_RE_CC --> /main/template/constants/ALWAYS_RE_CC_con/ALWAYS_RE_CC
					symbol external misc NEVER_RE_CC --> /main/template/constants/NEVER_RE_CC_con/NEVER_RE_CC
					symbol external misc START_RE_CC --> /main/template/constants/START_RE_CC_con/START_RE_CC
					symbol external misc END_RE_CC --> /main/template/constants/END_RE_CC_con/END_RE_CC
					symbol external misc BOUNDARY_RE_CC --> /main/template/constants/BOUNDARY_RE_CC_con/BOUNDARY_RE_CC
					symbol external misc NONBOUNDARY_RE_CC --> /main/template/constants/NONBOUNDARY_RE_CC_con/NONBOUNDARY_RE_CC
					symbol external misc ANYTHING_RE_CC --> /main/template/constants/ANYTHING_RE_CC_con/ANYTHING_RE_CC
					symbol external misc NOTHING_RE_CC --> /main/template/constants/NOTHING_RE_CC_con/NOTHING_RE_CC
					symbol external misc RANGE_RE_CC --> /main/template/constants/RANGE_RE_CC_con/RANGE_RE_CC
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc VARIABLE_RE_CC --> /main/template/constants/VARIABLE_RE_CC_con/VARIABLE_RE_CC
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc NEWLINE_RE_CC --> /main/template/constants/NEWLINE_RE_CC_con/NEWLINE_RE_CC
					symbol external misc TAB_RE_CC --> /main/template/constants/TAB_RE_CC_con/TAB_RE_CC
					symbol external misc QUANTIFIER_RE_CC --> /main/template/constants/QUANTIFIER_RE_CC_con/QUANTIFIER_RE_CC
					symbol external misc LITERAL_RE_CC --> /main/template/constants/LITERAL_RE_CC_con/LITERAL_RE_CC
					symbol external misc DISJUNCTION_RE_CC --> /main/template/constants/DISJUNCTION_RE_CC_con/DISJUNCTION_RE_CC
					symbol external misc CHOICE_RE_CC --> /main/template/constants/CHOICE_RE_CC_con/CHOICE_RE_CC
					symbol external misc SENSITIVITY_RE_CC --> /main/template/constants/SENSITIVITY_RE_CC_con/SENSITIVITY_RE_CC
					symbol external misc IF_RE_CC --> /main/template/constants/IF_RE_CC_con/IF_RE_CC
					symbol external misc CONDITION_RE_CC --> /main/template/constants/CONDITION_RE_CC_con/CONDITION_RE_CC
					symbol external misc THEN_RE_CC --> /main/template/constants/THEN_RE_CC_con/THEN_RE_CC
					symbol external misc ELSE_RE_CC --> /main/template/constants/ELSE_RE_CC_con/ELSE_RE_CC
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc RE_CONSTRAINT --> /main/template/constants/RE_CONSTRAINT_con/RE_CONSTRAINT
					local offset K_unchecked
					local ftxt K_unchecked
					local detail K_unchecked
					local i K_unchecked
					local par1 K_unchecked
					local par2 K_unchecked
					local par3 K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked offset
								val K_unchecked plug_00232
							code
								inv !printret
									val K_unchecked "[NULL]"
						inv !print
							val K_unchecked "["
						inv !printnumber
							inv !divide
								inv !minus
									val K_unchecked offset
									val K_unchecked RE_PACKET_space
								val K_unchecked RE_PACKET_SIZE_IN_BYTES
						inv !print
							val K_unchecked "] "
						inv !store
							reference
								val K_unchecked par1
							inv !lookup
								val K_unchecked offset
								val K_unchecked RE_PAR1
						inv !store
							reference
								val K_unchecked par2
							inv !lookup
								val K_unchecked offset
								val K_unchecked RE_PAR2
						inv !store
							reference
								val K_unchecked par3
							inv !lookup
								val K_unchecked offset
								val K_unchecked RE_PAR3
						inv !switch
							inv !lookup
								val K_unchecked offset
								val K_unchecked RE_CCLASS
							code
								inv !case
									val K_unchecked DIGIT_RE_CC
									code
										inv !print
											val K_unchecked "DIGIT"
								inv !case
									val K_unchecked NONDIGIT_RE_CC
									code
										inv !print
											val K_unchecked "NONDIGIT"
								inv !case
									val K_unchecked UCASE_RE_CC
									code
										inv !print
											val K_unchecked "UCASE"
								inv !case
									val K_unchecked NONUCASE_RE_CC
									code
										inv !print
											val K_unchecked "NONUCASE"
								inv !case
									val K_unchecked LCASE_RE_CC
									code
										inv !print
											val K_unchecked "LCASE"
								inv !case
									val K_unchecked NONLCASE_RE_CC
									code
										inv !print
											val K_unchecked "NONLCASE"
								inv !case
									val K_unchecked WHITESPACE_RE_CC
									code
										inv !print
											val K_unchecked "WHITESPACE"
								inv !case
									val K_unchecked NONWHITESPACE_RE_CC
									code
										inv !print
											val K_unchecked "NONWHITESPACE"
								inv !case
									val K_unchecked PUNCTUATION_RE_CC
									code
										inv !print
											val K_unchecked "PUNCTUATION"
								inv !case
									val K_unchecked NONPUNCTUATION_RE_CC
									code
										inv !print
											val K_unchecked "NONPUNCTUATION"
								inv !case
									val K_unchecked WORD_RE_CC
									code
										inv !print
											val K_unchecked "WORD"
								inv !case
									val K_unchecked NONWORD_RE_CC
									code
										inv !print
											val K_unchecked "NONWORD"
								inv !case
									val K_unchecked ALWAYS_RE_CC
									code
										inv !print
											val K_unchecked "ALWAYS"
								inv !case
									val K_unchecked NEVER_RE_CC
									code
										inv !print
											val K_unchecked "NEVER"
								inv !case
									val K_unchecked START_RE_CC
									code
										inv !print
											val K_unchecked "START"
								inv !case
									val K_unchecked END_RE_CC
									code
										inv !print
											val K_unchecked "END"
								inv !case
									val K_unchecked BOUNDARY_RE_CC
									code
										inv !print
											val K_unchecked "BOUNDARY"
								inv !case
									val K_unchecked NONBOUNDARY_RE_CC
									code
										inv !print
											val K_unchecked "NONBOUNDARY"
								inv !case
									val K_unchecked ANYTHING_RE_CC
									code
										inv !print
											val K_unchecked "ANYTHING"
								inv !case
									val K_unchecked NOTHING_RE_CC
									code
										inv !print
											val K_unchecked "NOTHING"
								inv !case
									val K_unchecked RANGE_RE_CC
									code
										inv !print
											val K_unchecked "RANGE"
										inv !if
											inv !eq
												val K_unchecked par3
												val K_unchecked 1
											code
												inv !print
													val K_unchecked " (negated)"
										inv !print
											val K_unchecked " "
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked par1
											inv !lt
												val K_unchecked i
												val K_unchecked par2
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !printchar
													inv BlkValueRead
														val K_unchecked ftxt
														val K_unchecked i
								inv !case
									val K_unchecked VARIABLE_RE_CC
									code
										inv !print
											val K_unchecked "VARIABLE "
										inv !printnumber
											val K_unchecked par1
								inv !case
									val K_unchecked SUBEXP_RE_CC
									code
										inv !ifelse
											inv !eq
												val K_unchecked par1
												val K_unchecked 0
											code
												inv !print
													val K_unchecked "EXP"
											code
												inv !print
													val K_unchecked "SUBEXP "
										inv !if
											inv !ge
												val K_unchecked par1
												val K_unchecked 0
											code
												inv !print
													val K_unchecked "= V"
												inv !printnumber
													val K_unchecked par1
										inv !if
											inv !eq
												val K_unchecked par2
												val K_unchecked 1
											code
												inv !ifelse
													inv !eq
														val K_unchecked par3
														val K_unchecked 0
													code
														inv !print
															val K_unchecked " (?=...) lookahead"
													code
														inv !print
															val K_unchecked " (?<=...) lookbehind of width "
														inv !printnumber
															val K_unchecked par3
										inv !if
											inv !eq
												val K_unchecked par2
												val K_unchecked 2
											code
												inv !ifelse
													inv !eq
														val K_unchecked par3
														val K_unchecked 0
													code
														inv !print
															val K_unchecked " (?!...) negated lookahead"
													code
														inv !print
															val K_unchecked " (?<!...) negated lookbehind of width "
														inv !printnumber
															val K_unchecked par3
										inv !if
											inv !eq
												val K_unchecked par2
												val K_unchecked 3
											code
												inv !print
													val K_unchecked " uncollecting"
										inv !if
											inv !eq
												val K_unchecked par2
												inv !alternative
													val K_unchecked 0
													val K_unchecked 3
											code
												inv !if
													inv !eq
														val K_unchecked par3
														val K_unchecked 1
													code
														inv !print
															val K_unchecked " forcing case sensitivity"
												inv !if
													inv !eq
														val K_unchecked par3
														val K_unchecked 2
													code
														inv !print
															val K_unchecked " forcing case insensitivity"
										inv !if
											inv !eq
												val K_unchecked par2
												val K_unchecked 4
											code
												inv !print
													val K_unchecked " (?>...) possessive"
								inv !case
									val K_unchecked NEWLINE_RE_CC
									code
										inv !print
											val K_unchecked "NEWLINE"
								inv !case
									val K_unchecked TAB_RE_CC
									code
										inv !print
											val K_unchecked "TAB"
								inv !case
									val K_unchecked QUANTIFIER_RE_CC
									code
										inv !print
											val K_unchecked "QUANTIFIER min="
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked " max="
										inv !printnumber
											val K_unchecked par2
										inv !ifelse
											val K_unchecked par3
											code
												inv !print
													val K_unchecked " (lazy)"
											code
												inv !print
													val K_unchecked " (greedy)"
								inv !case
									val K_unchecked LITERAL_RE_CC
									code
										inv !print
											val K_unchecked "LITERAL"
										inv !print
											val K_unchecked " "
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked par1
											inv !lt
												val K_unchecked i
												val K_unchecked par2
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !printchar
													inv BlkValueRead
														val K_unchecked ftxt
														val K_unchecked i
								inv !case
									val K_unchecked DISJUNCTION_RE_CC
									code
										inv !print
											val K_unchecked "DISJUNCTION of "
										inv !printnumber
											val K_unchecked par1
										inv !print
											val K_unchecked " choices"
								inv !case
									val K_unchecked CHOICE_RE_CC
									code
										inv !print
											val K_unchecked "CHOICE no "
										inv !printnumber
											val K_unchecked par1
								inv !case
									val K_unchecked SENSITIVITY_RE_CC
									code
										inv !print
											val K_unchecked "SENSITIVITY"
										inv !ifelse
											val K_unchecked par1
											code
												inv !print
													val K_unchecked " off"
											code
												inv !print
													val K_unchecked " on"
								inv !case
									val K_unchecked IF_RE_CC
									code
										inv !print
											val K_unchecked "IF"
										inv !if
											inv !ge
												val K_unchecked par1
												val K_unchecked 1
											code
												inv !print
													val K_unchecked " = V"
												inv !printnumber
													val K_unchecked par1
								inv !case
									val K_unchecked CONDITION_RE_CC
									code
										inv !print
											val K_unchecked "CONDITION"
										inv !if
											inv !ge
												val K_unchecked par1
												val K_unchecked 1
											code
												inv !print
													val K_unchecked " = V"
												inv !printnumber
													val K_unchecked par1
								inv !case
									val K_unchecked THEN_RE_CC
									code
										inv !print
											val K_unchecked "THEN"
								inv !case
									val K_unchecked ELSE_RE_CC
									code
										inv !print
											val K_unchecked "ELSE"
						inv !if
							val K_unchecked detail
							code
								inv !print
									val K_unchecked ": "
								inv !printnumber
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_DATA1
								inv !print
									val K_unchecked ", "
								inv !printnumber
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_DATA2
								inv !print
									val K_unchecked ", "
								inv !printnumber
									inv !lookup
										val K_unchecked offset
										val K_unchecked RE_CONSTRAINT
						inv !print
							val K_unchecked "\n"
				constant TEXT_TY_RE_DebugNode K_unchecked_function = TEXT_TY_RE_DebugNode_B __assimilated=1
			package TEXT_TY_CHR_CompileTree_fn _function
				symbol public misc TEXT_TY_CHR_CompileTree
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_CHR_CompileTree_B _code
					symbol private misc ftxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc exactly
					symbol private misc root
					symbol private misc literal
					symbol private misc fto
					symbol private misc no_packets
					symbol private misc token
					symbol private misc attach_to
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc TEXT_TY_RE_Node --> /main/template/functions/TEXT_TY_RE_Node_fn/TEXT_TY_RE_Node
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc LITERAL_RE_CC --> /main/template/constants/LITERAL_RE_CC_con/LITERAL_RE_CC
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc RE_UP --> /main/template/constants/RE_UP_con/RE_UP
					symbol external misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					symbol external misc START_RE_CC --> /main/template/constants/START_RE_CC_con/START_RE_CC
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc RE_PREVIOUS --> /main/template/constants/RE_PREVIOUS_con/RE_PREVIOUS
					symbol external misc END_RE_CC --> /main/template/constants/END_RE_CC_con/END_RE_CC
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc TEXT_TY_RE_ExpandChoices --> /main/template/functions/TEXT_TY_RE_ExpandChoices_fn/TEXT_TY_RE_ExpandChoices
					local ftxt K_unchecked
					local exactly K_unchecked
					local root K_unchecked
					local literal K_unchecked
					local fto K_unchecked
					local no_packets K_unchecked
					local token K_unchecked
					local attach_to K_unchecked
					code
						inv !store
							reference
								val K_unchecked fto
							inv TEXT_TY_CharacterLength
								val K_unchecked ftxt
						inv !store
							reference
								val K_unchecked root
							inv TEXT_TY_RE_Node
								val K_unchecked 0
								val K_unchecked SUBEXP_RE_CC
								val K_unchecked 0
								val K_unchecked 0
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked literal
							inv TEXT_TY_RE_Node
								val K_unchecked 1
								val K_unchecked LITERAL_RE_CC
								val K_unchecked 0
								val K_unchecked fto
								val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked root
									val K_unchecked RE_DOWN
							val K_unchecked literal
						inv !store
							reference
								inv !lookup
									val K_unchecked literal
									val K_unchecked RE_UP
							val K_unchecked root
						inv !if
							val K_unchecked exactly
							code
								inv !store
									reference
										val K_unchecked no_packets
									val K_unchecked 2
								inv !if
									inv !gt
										inv !plus
											val K_unchecked no_packets
											val K_unchecked 3
										val K_unchecked RE_MAX_PACKETS
									code
										inv !return
											val K_unchecked "regexp too complex"
								inv !store
									reference
										val K_unchecked exactly
									inv !lookup
										val K_unchecked RE_PACKET_space
										val K_unchecked RE_DOWN
								inv !store
									reference
										val K_unchecked token
									inv TEXT_TY_RE_Node
										inv !postincrement
											reference
												val K_unchecked no_packets
										val K_unchecked START_RE_CC
										val K_unchecked 0
										val K_unchecked 0
										val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked RE_PACKET_space
											val K_unchecked RE_DOWN
									val K_unchecked token
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_UP
									val K_unchecked RE_PACKET_space
								inv !store
									reference
										val K_unchecked attach_to
									inv TEXT_TY_RE_Node
										inv !postincrement
											reference
												val K_unchecked no_packets
										val K_unchecked SUBEXP_RE_CC
										inv !unaryminus
											val K_unchecked 1
										val K_unchecked 3
										val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_NEXT
									val K_unchecked attach_to
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_PREVIOUS
									val K_unchecked token
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_UP
									val K_unchecked RE_PACKET_space
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_NEXT
									inv TEXT_TY_RE_Node
										inv !postincrement
											reference
												val K_unchecked no_packets
										val K_unchecked END_RE_CC
										val K_unchecked 0
										val K_unchecked 0
										val K_unchecked 0
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked attach_to
												val K_unchecked RE_NEXT
											val K_unchecked RE_PREVIOUS
									val K_unchecked attach_to
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked attach_to
												val K_unchecked RE_NEXT
											val K_unchecked RE_UP
									val K_unchecked RE_PACKET_space
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_DOWN
									val K_unchecked exactly
								inv !while
									inv !ne
										val K_unchecked exactly
										val K_unchecked plug_00232
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked exactly
													val K_unchecked RE_UP
											val K_unchecked attach_to
										inv !store
											reference
												val K_unchecked exactly
											inv !lookup
												val K_unchecked exactly
												val K_unchecked RE_NEXT
						inv !store
							reference
								val K_unchecked no_packets
							inv TEXT_TY_RE_ExpandChoices
								val K_unchecked RE_PACKET_space
								val K_unchecked no_packets
				constant TEXT_TY_CHR_CompileTree K_unchecked_function = TEXT_TY_CHR_CompileTree_B __assimilated=1
			package TEXT_TY_RE_CompileTree_fn _function
				symbol public misc TEXT_TY_RE_CompileTree
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_CompileTree_B _code
					symbol private misc ftxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc exactly
					symbol private misc no_packets
					symbol private misc ffrom
					symbol private misc fto
					symbol private misc cc
					symbol private misc par1
					symbol private misc par2
					symbol private misc par3
					symbol private misc quantifiable
					symbol private misc token
					symbol private misc attach_to
					symbol private misc no_subs
					symbol private misc blevel
					symbol private misc bits
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc TEXT_TY_RE_Node --> /main/template/functions/TEXT_TY_RE_Node_fn/TEXT_TY_RE_Node
					symbol external misc NEVER_RE_CC --> /main/template/constants/NEVER_RE_CC_con/NEVER_RE_CC
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc BOUNDARY_RE_CC --> /main/template/constants/BOUNDARY_RE_CC_con/BOUNDARY_RE_CC
					symbol external misc NONBOUNDARY_RE_CC --> /main/template/constants/NONBOUNDARY_RE_CC_con/NONBOUNDARY_RE_CC
					symbol external misc DIGIT_RE_CC --> /main/template/constants/DIGIT_RE_CC_con/DIGIT_RE_CC
					symbol external misc NONDIGIT_RE_CC --> /main/template/constants/NONDIGIT_RE_CC_con/NONDIGIT_RE_CC
					symbol external misc LCASE_RE_CC --> /main/template/constants/LCASE_RE_CC_con/LCASE_RE_CC
					symbol external misc NONLCASE_RE_CC --> /main/template/constants/NONLCASE_RE_CC_con/NONLCASE_RE_CC
					symbol external misc NEWLINE_RE_CC --> /main/template/constants/NEWLINE_RE_CC_con/NEWLINE_RE_CC
					symbol external misc PUNCTUATION_RE_CC --> /main/template/constants/PUNCTUATION_RE_CC_con/PUNCTUATION_RE_CC
					symbol external misc NONPUNCTUATION_RE_CC --> /main/template/constants/NONPUNCTUATION_RE_CC_con/NONPUNCTUATION_RE_CC
					symbol external misc WHITESPACE_RE_CC --> /main/template/constants/WHITESPACE_RE_CC_con/WHITESPACE_RE_CC
					symbol external misc NONWHITESPACE_RE_CC --> /main/template/constants/NONWHITESPACE_RE_CC_con/NONWHITESPACE_RE_CC
					symbol external misc TAB_RE_CC --> /main/template/constants/TAB_RE_CC_con/TAB_RE_CC
					symbol external misc UCASE_RE_CC --> /main/template/constants/UCASE_RE_CC_con/UCASE_RE_CC
					symbol external misc NONUCASE_RE_CC --> /main/template/constants/NONUCASE_RE_CC_con/NONUCASE_RE_CC
					symbol external misc WORD_RE_CC --> /main/template/constants/WORD_RE_CC_con/WORD_RE_CC
					symbol external misc NONWORD_RE_CC --> /main/template/constants/NONWORD_RE_CC_con/NONWORD_RE_CC
					symbol external misc VARIABLE_RE_CC --> /main/template/constants/VARIABLE_RE_CC_con/VARIABLE_RE_CC
					symbol external misc LITERAL_RE_CC --> /main/template/constants/LITERAL_RE_CC_con/LITERAL_RE_CC
					symbol external misc IF_RE_CC --> /main/template/constants/IF_RE_CC_con/IF_RE_CC
					symbol external misc Subexp_Posns --> /main/template/arrays/Subexp_Posns_arr/Subexp_Posns
					symbol external misc TEXT_TY_RE_NodeAddress --> /main/template/functions/TEXT_TY_RE_NodeAddress_fn/TEXT_TY_RE_NodeAddress
					symbol private label .CClassKnown
					symbol external misc SENSITIVITY_RE_CC --> /main/template/constants/SENSITIVITY_RE_CC_con/SENSITIVITY_RE_CC
					symbol private label .AllowForm
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
					symbol external misc ALWAYS_RE_CC --> /main/template/constants/ALWAYS_RE_CC_con/ALWAYS_RE_CC
					symbol external misc RE_UP --> /main/template/constants/RE_UP_con/RE_UP
					symbol external misc ANYTHING_RE_CC --> /main/template/constants/ANYTHING_RE_CC_con/ANYTHING_RE_CC
					symbol external misc CHOICE_RE_CC --> /main/template/constants/CHOICE_RE_CC_con/CHOICE_RE_CC
					symbol external misc START_RE_CC --> /main/template/constants/START_RE_CC_con/START_RE_CC
					symbol external misc END_RE_CC --> /main/template/constants/END_RE_CC_con/END_RE_CC
					symbol external misc QUANTIFIER_RE_CC --> /main/template/constants/QUANTIFIER_RE_CC_con/QUANTIFIER_RE_CC
					symbol external misc TEXT_TY_RE_RangeSyntaxCorrect --> /main/template/functions/TEXT_TY_RE_RangeSyntaxCorrect_fn/TEXT_TY_RE_RangeSyntaxCorrect
					symbol external misc RANGE_RE_CC --> /main/template/constants/RANGE_RE_CC_con/RANGE_RE_CC
					symbol external misc NOTHING_RE_CC --> /main/template/constants/NOTHING_RE_CC_con/NOTHING_RE_CC
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc plug_00511 --> /main/template/variables/TEXT_TY_RE_Trace_var/TEXT_TY_RE_Trace
					symbol external misc TEXT_TY_RE_DebugNode --> /main/template/functions/TEXT_TY_RE_DebugNode_fn/TEXT_TY_RE_DebugNode
					symbol external misc TEXT_TY_RE_DebugTree --> /main/template/functions/TEXT_TY_RE_DebugTree_fn/TEXT_TY_RE_DebugTree
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc RE_PREVIOUS --> /main/template/constants/RE_PREVIOUS_con/RE_PREVIOUS
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					symbol external misc TEXT_TY_RE_ExpandChoices --> /main/template/functions/TEXT_TY_RE_ExpandChoices_fn/TEXT_TY_RE_ExpandChoices
					symbol external misc TEXT_TY_RE_CheckTree --> /main/template/functions/TEXT_TY_RE_CheckTree_fn/TEXT_TY_RE_CheckTree
					local ftxt K_unchecked
					local exactly K_unchecked
					local no_packets K_unchecked
					local ffrom K_unchecked
					local fto K_unchecked
					local cc K_unchecked
					local par1 K_unchecked
					local par2 K_unchecked
					local par3 K_unchecked
					local quantifiable K_unchecked
					local token K_unchecked
					local attach_to K_unchecked
					local no_subs K_unchecked
					local blevel K_unchecked
					local bits K_unchecked
					code
						inv !store
							reference
								val K_unchecked fto
							inv TEXT_TY_CharacterLength
								val K_unchecked ftxt
						inv !if
							inv !eq
								val K_unchecked fto
								val K_unchecked 0
							code
								inv TEXT_TY_RE_Node
									inv !postincrement
										reference
											val K_unchecked no_packets
									val K_unchecked NEVER_RE_CC
									val K_unchecked 0
									val K_unchecked 0
									val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked attach_to
							inv TEXT_TY_RE_Node
								inv !postincrement
									reference
										val K_unchecked no_packets
								val K_unchecked SUBEXP_RE_CC
								val K_unchecked 0
								val K_unchecked 0
								val K_unchecked 0
						inv !store
							reference
								inv !lookup
									val K_unchecked RE_Subexpressions
									val K_unchecked 0
							val K_unchecked attach_to
						inv !store
							reference
								inv !lookup
									val K_unchecked RE_Subexpressions
									val K_unchecked 10
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked no_subs
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked quantifiable
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked blevel
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked ffrom
								val K_unchecked 0
							inv !lt
								val K_unchecked ffrom
								val K_unchecked fto
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked cc
									inv BlkValueRead
										val K_unchecked ftxt
										inv !postincrement
											reference
												val K_unchecked ffrom
								inv !store
									reference
										val K_unchecked par1
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked par2
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked par3
									val K_unchecked 0
								inv !ifelse
									inv !eq
										val K_unchecked cc
										val K_unchecked 92
									code
										inv !if
											inv !eq
												val K_unchecked ffrom
												val K_unchecked fto
											code
												inv !return
													val K_unchecked "Search pattern not terminated"
										inv !store
											reference
												val K_unchecked cc
											inv BlkValueRead
												val K_unchecked ftxt
												inv !postincrement
													reference
														val K_unchecked ffrom
										inv !switch
											val K_unchecked cc
											code
												inv !case
													val K_unchecked 98
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked BOUNDARY_RE_CC
												inv !case
													val K_unchecked 66
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NONBOUNDARY_RE_CC
												inv !case
													val K_unchecked 100
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked DIGIT_RE_CC
												inv !case
													val K_unchecked 68
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NONDIGIT_RE_CC
												inv !case
													val K_unchecked 108
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked LCASE_RE_CC
												inv !case
													val K_unchecked 76
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NONLCASE_RE_CC
												inv !case
													val K_unchecked 110
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NEWLINE_RE_CC
												inv !case
													val K_unchecked 112
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked PUNCTUATION_RE_CC
												inv !case
													val K_unchecked 80
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NONPUNCTUATION_RE_CC
												inv !case
													val K_unchecked 115
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked WHITESPACE_RE_CC
												inv !case
													val K_unchecked 83
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NONWHITESPACE_RE_CC
												inv !case
													val K_unchecked 116
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked TAB_RE_CC
												inv !case
													val K_unchecked 117
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked UCASE_RE_CC
												inv !case
													val K_unchecked 85
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NONUCASE_RE_CC
												inv !case
													val K_unchecked 119
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked WORD_RE_CC
												inv !case
													val K_unchecked 87
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked NONWORD_RE_CC
												inv !default
													code
														inv !ifelse
															inv !and
																inv !ge
																	val K_unchecked cc
																	val K_unchecked 49
																inv !le
																	val K_unchecked cc
																	val K_unchecked 57
															code
																inv !store
																	reference
																		val K_unchecked par1
																	inv !minus
																		val K_unchecked cc
																		val K_unchecked 48
																inv !store
																	reference
																		val K_unchecked cc
																	val K_unchecked VARIABLE_RE_CC
															code
																inv !if
																	inv !or
																		inv !and
																			inv !ge
																				val K_unchecked cc
																				val K_unchecked 97
																			inv !le
																				val K_unchecked cc
																				val K_unchecked 122
																		inv !and
																			inv !ge
																				val K_unchecked cc
																				val K_unchecked 65
																			inv !le
																				val K_unchecked cc
																				val K_unchecked 90
																	code
																		inv !return
																			val K_unchecked "unknown escape"
																inv !store
																	reference
																		val K_unchecked cc
																	val K_unchecked LITERAL_RE_CC
																inv !store
																	reference
																		val K_unchecked par1
																	inv !minus
																		val K_unchecked ffrom
																		val K_unchecked 1
																inv !store
																	reference
																		val K_unchecked par2
																	val K_unchecked ffrom
										inv !store
											reference
												val K_unchecked quantifiable
											val K_unchecked 1
									code
										inv !switch
											val K_unchecked cc
											code
												inv !case
													val K_unchecked 40
													code
														inv !store
															reference
																val K_unchecked par2
															val K_unchecked 0
														inv !if
															inv !eq
																inv BlkValueRead
																	val K_unchecked ftxt
																	val K_unchecked ffrom
																val K_unchecked 63
															code
																inv !postincrement
																	reference
																		val K_unchecked ffrom
																inv !store
																	reference
																		val K_unchecked bits
																	val K_unchecked 1
																inv !ifelse
																	inv !eq
																		inv BlkValueRead
																			val K_unchecked ftxt
																			val K_unchecked ffrom
																		val K_unchecked 45
																	code
																		inv !postincrement
																			reference
																				val K_unchecked ffrom
																		inv !store
																			reference
																				val K_unchecked bits
																			val K_unchecked 0
																	code
																		inv !if
																			inv !eq
																				inv BlkValueRead
																					val K_unchecked ftxt
																					val K_unchecked ffrom
																				val K_unchecked 60
																			code
																				inv !postincrement
																					reference
																						val K_unchecked ffrom
																				inv !store
																					reference
																						val K_unchecked bits
																					val K_unchecked 0
																inv !switch
																	inv !store
																		reference
																			val K_unchecked cc
																		inv BlkValueRead
																			val K_unchecked ftxt
																			inv !postincrement
																				reference
																					val K_unchecked ffrom
																	code
																		inv !case
																			val K_unchecked 35
																			code
																				inv !while
																					inv !ne
																						inv BlkValueRead
																							val K_unchecked ftxt
																							inv !postincrement
																								reference
																									val K_unchecked ffrom
																						inv !alternative
																							val K_unchecked 0
																							val K_unchecked 41
																					code
																				inv !if
																					inv !eq
																						inv BlkValueRead
																							val K_unchecked ftxt
																							inv !minus
																								val K_unchecked ffrom
																								val K_unchecked 1
																						val K_unchecked 0
																					code
																						inv !return
																							val K_unchecked "comment never ends"
																				inv !continue
																		inv !case
																			val K_unchecked 40
																			code
																				inv !store
																					reference
																						val K_unchecked cc
																					inv BlkValueRead
																						val K_unchecked ftxt
																						val K_unchecked ffrom
																				inv !ifelse
																					inv !and
																						inv !eq
																							val K_unchecked cc
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															val K_unchecked 49
																															val K_unchecked 50
																														val K_unchecked 51
																													val K_unchecked 52
																												val K_unchecked 53
																											val K_unchecked 54
																										val K_unchecked 55
																									val K_unchecked 56
																								val K_unchecked 57
																						inv !eq
																							inv BlkValueRead
																								val K_unchecked ftxt
																								inv !plus
																									val K_unchecked ffrom
																									val K_unchecked 1
																							val K_unchecked 41
																					code
																						inv !store
																							reference
																								val K_unchecked ffrom
																							inv !plus
																								val K_unchecked ffrom
																								val K_unchecked 2
																						inv !store
																							reference
																								val K_unchecked par1
																							inv !minus
																								val K_unchecked cc
																								val K_unchecked 48
																					code
																						inv !postdecrement
																							reference
																								val K_unchecked ffrom
																				inv !store
																					reference
																						val K_unchecked cc
																					val K_unchecked IF_RE_CC
																				inv !store
																					reference
																						val K_unchecked quantifiable
																					val K_unchecked 0
																				inv !if
																					inv !eq
																						val K_unchecked blevel
																						val K_unchecked 20
																					code
																						inv !return
																							val K_unchecked "subexpressions too deep"
																				inv !store
																					reference
																						inv !lookup
																							val K_unchecked Subexp_Posns
																							inv !postincrement
																								reference
																									val K_unchecked blevel
																					inv TEXT_TY_RE_NodeAddress
																						val K_unchecked no_packets
																				inv !jump
																					lab .CClassKnown
																		inv !case
																			val K_unchecked 61
																			code
																				inv !store
																					reference
																						val K_unchecked par2
																					val K_unchecked 1
																				inv !store
																					reference
																						val K_unchecked par3
																					val K_unchecked 0
																				inv !if
																					inv !eq
																						val K_unchecked bits
																						val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked par3
																							val K_unchecked -1
																		inv !case
																			val K_unchecked 33
																			code
																				inv !store
																					reference
																						val K_unchecked par2
																					val K_unchecked 2
																				inv !store
																					reference
																						val K_unchecked par3
																					val K_unchecked 0
																				inv !if
																					inv !eq
																						val K_unchecked bits
																						val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked par3
																							val K_unchecked -1
																		inv !case
																			val K_unchecked 58
																			code
																				inv !store
																					reference
																						val K_unchecked par2
																					val K_unchecked 3
																		inv !case
																			val K_unchecked 62
																			code
																				inv !store
																					reference
																						val K_unchecked par2
																					val K_unchecked 4
																		inv !default
																			code
																				inv !if
																					inv !eq
																						inv BlkValueRead
																							val K_unchecked ftxt
																							val K_unchecked ffrom
																						val K_unchecked 41
																					code
																						inv !if
																							inv !eq
																								val K_unchecked cc
																								val K_unchecked 105
																							code
																								inv !store
																									reference
																										val K_unchecked cc
																									val K_unchecked SENSITIVITY_RE_CC
																								inv !store
																									reference
																										val K_unchecked par1
																									val K_unchecked bits
																								inv !postincrement
																									reference
																										val K_unchecked ffrom
																								inv !jump
																									lab .CClassKnown
																				inv !if
																					inv !eq
																						inv BlkValueRead
																							val K_unchecked ftxt
																							val K_unchecked ffrom
																						val K_unchecked 58
																					code
																						inv !if
																							inv !eq
																								val K_unchecked cc
																								val K_unchecked 105
																							code
																								inv !store
																									reference
																										val K_unchecked par1
																									val K_unchecked bits
																								inv !store
																									reference
																										val K_unchecked par2
																									val K_unchecked 3
																								inv !store
																									reference
																										val K_unchecked par3
																									inv !plus
																										val K_unchecked bits
																										val K_unchecked 1
																								inv !postincrement
																									reference
																										val K_unchecked ffrom
																								inv !jump
																									lab .AllowForm
																				inv !return
																					val K_unchecked "unknown (?...) form"
														.AllowForm
														inv !ifelse
															inv !eq
																val K_unchecked par2
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked par1
																	inv !postincrement
																		reference
																			val K_unchecked no_subs
															code
																inv !store
																	reference
																		val K_unchecked par1
																	val K_unchecked -1
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked SUBEXP_RE_CC
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
														inv !if
															inv !eq
																val K_unchecked blevel
																val K_unchecked 20
															code
																inv !return
																	val K_unchecked "subexpressions too deep"
														inv !store
															reference
																inv !lookup
																	val K_unchecked Subexp_Posns
																	inv !postincrement
																		reference
																			val K_unchecked blevel
															inv TEXT_TY_RE_NodeAddress
																val K_unchecked no_packets
												inv !case
													val K_unchecked 41
													code
														inv !if
															inv !eq
																val K_unchecked blevel
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked "subexpression bracket mismatch"
														inv !postdecrement
															reference
																val K_unchecked blevel
														inv !store
															reference
																val K_unchecked attach_to
															inv !lookup
																val K_unchecked Subexp_Posns
																val K_unchecked blevel
														inv !if
															inv !eq
																inv !lookup
																	val K_unchecked attach_to
																	val K_unchecked RE_DOWN
																val K_unchecked plug_00232
															code
																inv !if
																	inv !ge
																		val K_unchecked no_packets
																		val K_unchecked RE_MAX_PACKETS
																	code
																		inv !return
																			val K_unchecked "regexp too complex"
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked attach_to
																			val K_unchecked RE_DOWN
																	inv TEXT_TY_RE_Node
																		inv !postincrement
																			reference
																				val K_unchecked no_packets
																		val K_unchecked ALWAYS_RE_CC
																		val K_unchecked 0
																		val K_unchecked 0
																		val K_unchecked 0
																inv !store
																	reference
																		inv !lookup
																			inv !lookup
																				val K_unchecked attach_to
																				val K_unchecked RE_DOWN
																			val K_unchecked RE_UP
																	val K_unchecked attach_to
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 1
														inv !continue
												inv !case
													val K_unchecked 46
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked ANYTHING_RE_CC
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 1
												inv !case
													val K_unchecked 124
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked CHOICE_RE_CC
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
												inv !case
													val K_unchecked 94
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked START_RE_CC
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
												inv !case
													val K_unchecked 36
													code
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked END_RE_CC
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
												inv !case
													val K_unchecked 123
													code
														inv !if
															inv !eq
																val K_unchecked quantifiable
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked "quantifier misplaced"
														inv !store
															reference
																val K_unchecked par1
															val K_unchecked 0
														inv !store
															reference
																val K_unchecked par2
															val K_unchecked -1
														inv !store
															reference
																val K_unchecked bits
															val K_unchecked 1
														inv !while
															inv !ne
																inv !store
																	reference
																		val K_unchecked cc
																	inv BlkValueRead
																		val K_unchecked ftxt
																		inv !postincrement
																			reference
																				val K_unchecked ffrom
																inv !alternative
																	val K_unchecked 0
																	val K_unchecked 125
															code
																inv !if
																	inv !eq
																		val K_unchecked cc
																		val K_unchecked 44
																	code
																		inv !postincrement
																			reference
																				val K_unchecked bits
																		inv !if
																			inv !ge
																				val K_unchecked bits
																				val K_unchecked 3
																			code
																				inv !return
																					val K_unchecked "too many colons in ?{...}"
																		inv !continue
																inv !ifelse
																	inv !or
																		inv !ge
																			val K_unchecked cc
																			val K_unchecked 48
																		inv !le
																			val K_unchecked cc
																			val K_unchecked 57
																	code
																		inv !ifelse
																			inv !eq
																				val K_unchecked bits
																				val K_unchecked 1
																			code
																				inv !if
																					inv !lt
																						val K_unchecked par1
																						val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked par1
																							val K_unchecked 0
																				inv !store
																					reference
																						val K_unchecked par1
																					inv !plus
																						inv !times
																							val K_unchecked par1
																							val K_unchecked 10
																						inv !minus
																							val K_unchecked cc
																							val K_unchecked 48
																			code
																				inv !if
																					inv !lt
																						val K_unchecked par2
																						val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked par2
																							val K_unchecked 0
																				inv !store
																					reference
																						val K_unchecked par2
																					inv !plus
																						inv !times
																							val K_unchecked par2
																							val K_unchecked 10
																						inv !minus
																							val K_unchecked cc
																							val K_unchecked 48
																	code
																		inv !return
																			val K_unchecked "non-digit in ?{...}"
														inv !if
															inv !ne
																val K_unchecked cc
																val K_unchecked 125
															code
																inv !return
																	val K_unchecked "{x,y} quantifier never ends"
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked QUANTIFIER_RE_CC
														inv !if
															inv !eq
																val K_unchecked par2
																val K_unchecked -1
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked bits
																		val K_unchecked 2
																	code
																		inv !store
																			reference
																				val K_unchecked par2
																			val K_unchecked 30000
																	code
																		inv !store
																			reference
																				val K_unchecked par2
																			val K_unchecked par1
														inv !if
															inv !gt
																val K_unchecked par1
																val K_unchecked par2
															code
																inv !return
																	val K_unchecked "{x,y} with x greater than y"
														inv !if
															inv !eq
																inv BlkValueRead
																	val K_unchecked ftxt
																	val K_unchecked ffrom
																val K_unchecked 63
															code
																inv !postincrement
																	reference
																		val K_unchecked ffrom
																inv !store
																	reference
																		val K_unchecked par3
																	val K_unchecked 1
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
												inv !case
													inv !alternativecase
														val K_unchecked 60
														val K_unchecked 91
													code
														inv !store
															reference
																val K_unchecked par3
															val K_unchecked 0
														inv !ifelse
															inv !eq
																val K_unchecked cc
																val K_unchecked 60
															code
																inv !store
																	reference
																		val K_unchecked bits
																	val K_unchecked 62
															code
																inv !store
																	reference
																		val K_unchecked bits
																	val K_unchecked 93
														inv !if
															inv !eq
																inv BlkValueRead
																	val K_unchecked ftxt
																	val K_unchecked ffrom
																val K_unchecked 94
															code
																inv !postincrement
																	reference
																		val K_unchecked ffrom
																inv !store
																	reference
																		val K_unchecked par3
																	val K_unchecked 1
														inv !store
															reference
																val K_unchecked par1
															val K_unchecked ffrom
														inv !if
															inv !eq
																inv BlkValueRead
																	val K_unchecked ftxt
																	val K_unchecked ffrom
																val K_unchecked bits
															code
																inv !postincrement
																	reference
																		val K_unchecked ffrom
														inv !while
															inv !ne
																val K_unchecked cc
																inv !alternative
																	val K_unchecked bits
																	val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked cc
																	inv BlkValueRead
																		val K_unchecked ftxt
																		inv !postincrement
																			reference
																				val K_unchecked ffrom
																inv !if
																	inv !eq
																		val K_unchecked cc
																		val K_unchecked 92
																	code
																		inv !store
																			reference
																				val K_unchecked cc
																			inv BlkValueRead
																				val K_unchecked ftxt
																				inv !postincrement
																					reference
																						val K_unchecked ffrom
																		inv !if
																			inv !ne
																				val K_unchecked cc
																				val K_unchecked 0
																			code
																				inv !store
																					reference
																						val K_unchecked cc
																					inv BlkValueRead
																						val K_unchecked ftxt
																						inv !postincrement
																							reference
																								val K_unchecked ffrom
														inv !if
															inv !eq
																val K_unchecked cc
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked "Character range never ends"
														inv !store
															reference
																val K_unchecked par2
															inv !minus
																val K_unchecked ffrom
																val K_unchecked 1
														inv !if
															inv !and
																inv !and
																	inv !and
																		inv !gt
																			val K_unchecked par2
																			inv !plus
																				val K_unchecked par1
																				val K_unchecked 1
																		inv !eq
																			inv BlkValueRead
																				val K_unchecked ftxt
																				val K_unchecked par1
																			val K_unchecked 58
																	inv !eq
																		inv BlkValueRead
																			val K_unchecked ftxt
																			inv !minus
																				val K_unchecked par2
																				val K_unchecked 1
																		val K_unchecked 58
																inv !ne
																	inv BlkValueRead
																		val K_unchecked ftxt
																		inv !minus
																			val K_unchecked par2
																			val K_unchecked 2
																	val K_unchecked 92
															code
																inv !return
																	val K_unchecked "POSIX named character classes unsupported"
														inv !store
															reference
																val K_unchecked bits
															inv TEXT_TY_RE_RangeSyntaxCorrect
																val K_unchecked ftxt
																val K_unchecked par1
																val K_unchecked par2
														inv !if
															val K_unchecked bits
															code
																inv !return
																	val K_unchecked bits
														inv !ifelse
															inv !lt
																val K_unchecked par1
																val K_unchecked par2
															code
																inv !store
																	reference
																		val K_unchecked cc
																	val K_unchecked RANGE_RE_CC
															code
																inv !store
																	reference
																		val K_unchecked cc
																	val K_unchecked NOTHING_RE_CC
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 1
												inv !case
													val K_unchecked 42
													code
														inv !if
															inv !eq
																val K_unchecked quantifiable
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked "quantifier misplaced"
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked QUANTIFIER_RE_CC
														inv !store
															reference
																val K_unchecked par1
															val K_unchecked 0
														inv !store
															reference
																val K_unchecked par2
															val K_unchecked 30000
														inv !if
															inv !eq
																inv BlkValueRead
																	val K_unchecked ftxt
																	val K_unchecked ffrom
																val K_unchecked 63
															code
																inv !postincrement
																	reference
																		val K_unchecked ffrom
																inv !store
																	reference
																		val K_unchecked par3
																	val K_unchecked 1
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
												inv !case
													val K_unchecked 43
													code
														inv !if
															inv !eq
																val K_unchecked quantifiable
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked "quantifier misplaced"
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked QUANTIFIER_RE_CC
														inv !store
															reference
																val K_unchecked par1
															val K_unchecked 1
														inv !store
															reference
																val K_unchecked par2
															val K_unchecked 30000
														inv !if
															inv !eq
																inv BlkValueRead
																	val K_unchecked ftxt
																	val K_unchecked ffrom
																val K_unchecked 63
															code
																inv !postincrement
																	reference
																		val K_unchecked ffrom
																inv !store
																	reference
																		val K_unchecked par3
																	val K_unchecked 1
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
												inv !case
													val K_unchecked 63
													code
														inv !if
															inv !eq
																val K_unchecked quantifiable
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked "quantifier misplaced"
														inv !store
															reference
																val K_unchecked cc
															val K_unchecked QUANTIFIER_RE_CC
														inv !store
															reference
																val K_unchecked par1
															val K_unchecked 0
														inv !store
															reference
																val K_unchecked par2
															val K_unchecked 1
														inv !if
															inv !eq
																inv BlkValueRead
																	val K_unchecked ftxt
																	val K_unchecked ffrom
																val K_unchecked 63
															code
																inv !postincrement
																	reference
																		val K_unchecked ffrom
																inv !store
																	reference
																		val K_unchecked par3
																	val K_unchecked 1
														inv !store
															reference
																val K_unchecked quantifiable
															val K_unchecked 0
								.CClassKnown
								inv !if
									inv !ge
										val K_unchecked cc
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked quantifiable
											val K_unchecked 1
										inv !if
											inv !and
												inv !eq
													inv !lookup
														val K_unchecked attach_to
														val K_unchecked RE_CCLASS
													val K_unchecked LITERAL_RE_CC
												inv !ne
													inv BlkValueRead
														val K_unchecked ftxt
														val K_unchecked ffrom
													inv !alternative
														inv !alternative
															inv !alternative
																val K_unchecked 42
																val K_unchecked 43
															val K_unchecked 63
														val K_unchecked 123
											code
												inv !postincrement
													reference
														inv !lookup
															val K_unchecked attach_to
															val K_unchecked RE_PAR2
												inv !if
													inv !eq
														val K_unchecked TEXT_TY_RE_Trace
														val K_unchecked 2
													code
														inv !print
															val K_unchecked "Extending literal by "
														inv !printnumber
															val K_unchecked cc
														inv !print
															val K_unchecked "="
														inv !printchar
															val K_unchecked cc
														inv !print
															val K_unchecked "\n"
												inv !continue
										inv !store
											reference
												val K_unchecked cc
											val K_unchecked LITERAL_RE_CC
										inv !store
											reference
												val K_unchecked par1
											inv !minus
												val K_unchecked ffrom
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked par2
											val K_unchecked ffrom
								inv !if
									inv !ge
										val K_unchecked no_packets
										val K_unchecked RE_MAX_PACKETS
									code
										inv !return
											val K_unchecked "regexp too complex"
								inv !if
									inv !eq
										val K_unchecked TEXT_TY_RE_Trace
										val K_unchecked 2
									code
										inv !print
											val K_unchecked "Attaching packet "
										inv !printnumber
											inv !plus
												val K_unchecked no_packets
												val K_unchecked 1
										inv !print
											val K_unchecked " to "
										inv TEXT_TY_RE_DebugNode
											val K_unchecked attach_to
											val K_unchecked ftxt
										inv TEXT_TY_RE_DebugTree
											val K_unchecked ftxt
								inv !store
									reference
										val K_unchecked token
									inv TEXT_TY_RE_Node
										inv !postincrement
											reference
												val K_unchecked no_packets
										val K_unchecked cc
										val K_unchecked par1
										val K_unchecked par2
										val K_unchecked par3
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_CCLASS
											val K_unchecked SUBEXP_RE_CC
										inv !eq
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_PAR2
											val K_unchecked 0
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked RE_Subexpressions
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_PAR1
											val K_unchecked token
										inv !postincrement
											reference
												inv !lookup
													val K_unchecked RE_Subexpressions
													val K_unchecked 10
								inv !ifelse
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked attach_to
												val K_unchecked RE_CCLASS
											inv !alternative
												inv !alternative
													val K_unchecked SUBEXP_RE_CC
													val K_unchecked CHOICE_RE_CC
												val K_unchecked IF_RE_CC
										inv !eq
											inv !lookup
												val K_unchecked attach_to
												val K_unchecked RE_DOWN
											val K_unchecked plug_00232
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked attach_to
													val K_unchecked RE_DOWN
											val K_unchecked token
										inv !store
											reference
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_UP
											val K_unchecked attach_to
									code
										inv !ifelse
											inv !and
												inv !eq
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_CCLASS
													val K_unchecked CHOICE_RE_CC
												inv !eq
													inv !lookup
														inv !lookup
															val K_unchecked attach_to
															val K_unchecked RE_UP
														val K_unchecked RE_CCLASS
													val K_unchecked CHOICE_RE_CC
											code
												inv !postdecrement
													reference
														val K_unchecked no_packets
												inv !store
													reference
														val K_unchecked token
													inv !lookup
														val K_unchecked attach_to
														val K_unchecked RE_UP
											code
												inv !if
													inv !eq
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_CCLASS
														val K_unchecked CHOICE_RE_CC
													code
														inv !while
															inv !ne
																inv !lookup
																	val K_unchecked attach_to
																	val K_unchecked RE_PREVIOUS
																val K_unchecked plug_00232
															code
																inv !store
																	reference
																		val K_unchecked attach_to
																	inv !lookup
																		val K_unchecked attach_to
																		val K_unchecked RE_PREVIOUS
												inv !ifelse
													inv !eq
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_CCLASS
														inv !alternative
															val K_unchecked QUANTIFIER_RE_CC
															val K_unchecked CHOICE_RE_CC
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_PREVIOUS
															inv !lookup
																val K_unchecked attach_to
																val K_unchecked RE_PREVIOUS
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_UP
															inv !lookup
																val K_unchecked attach_to
																val K_unchecked RE_UP
														inv !if
															inv !and
																inv !ne
																	inv !lookup
																		val K_unchecked attach_to
																		val K_unchecked RE_UP
																	val K_unchecked plug_00232
																inv !eq
																	inv !lookup
																		val K_unchecked attach_to
																		val K_unchecked RE_PREVIOUS
																	val K_unchecked plug_00232
															code
																inv !store
																	reference
																		inv !lookup
																			inv !lookup
																				val K_unchecked attach_to
																				val K_unchecked RE_UP
																			val K_unchecked RE_DOWN
																	val K_unchecked token
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DOWN
															val K_unchecked attach_to
														inv !store
															reference
																val K_unchecked bits
															val K_unchecked attach_to
														inv !while
															inv !ne
																val K_unchecked bits
																val K_unchecked plug_00232
															code
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked bits
																			val K_unchecked RE_UP
																	val K_unchecked token
																inv !store
																	reference
																		val K_unchecked bits
																	inv !lookup
																		val K_unchecked bits
																		val K_unchecked RE_NEXT
														inv !store
															reference
																inv !lookup
																	val K_unchecked attach_to
																	val K_unchecked RE_PREVIOUS
															val K_unchecked plug_00232
														inv !if
															inv !ne
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_PREVIOUS
																val K_unchecked plug_00232
															code
																inv !store
																	reference
																		inv !lookup
																			inv !lookup
																				val K_unchecked token
																				val K_unchecked RE_PREVIOUS
																			val K_unchecked RE_NEXT
																	val K_unchecked token
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked attach_to
																	val K_unchecked RE_NEXT
															val K_unchecked token
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_PREVIOUS
															val K_unchecked attach_to
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_UP
															inv !lookup
																val K_unchecked attach_to
																val K_unchecked RE_UP
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_CCLASS
										val K_unchecked CHOICE_RE_CC
									code
										inv !if
											inv !ge
												val K_unchecked no_packets
												val K_unchecked RE_MAX_PACKETS
											code
												inv !return
													val K_unchecked "regexp too complex"
										inv !store
											reference
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_NEXT
											inv TEXT_TY_RE_Node
												inv !postincrement
													reference
														val K_unchecked no_packets
												val K_unchecked CHOICE_RE_CC
												val K_unchecked 0
												val K_unchecked 0
												val K_unchecked 0
										inv !store
											reference
												inv !lookup
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_NEXT
													val K_unchecked RE_PREVIOUS
											val K_unchecked token
										inv !store
											reference
												inv !lookup
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_NEXT
													val K_unchecked RE_UP
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_UP
										inv !store
											reference
												val K_unchecked token
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_NEXT
								inv !store
									reference
										val K_unchecked attach_to
									val K_unchecked token
								inv !if
									inv !eq
										val K_unchecked TEXT_TY_RE_Trace
										val K_unchecked 2
									code
										inv !print
											val K_unchecked "Result:\n"
										inv TEXT_TY_RE_DebugTree
											val K_unchecked ftxt
						inv !if
							inv !ne
								val K_unchecked blevel
								val K_unchecked 0
							code
								inv !return
									val K_unchecked "subexpression bracket mismatch"
						inv !if
							val K_unchecked exactly
							code
								inv !if
									inv !gt
										inv !plus
											val K_unchecked no_packets
											val K_unchecked 3
										val K_unchecked RE_MAX_PACKETS
									code
										inv !return
											val K_unchecked "regexp too complex"
								inv !store
									reference
										val K_unchecked exactly
									inv !lookup
										val K_unchecked RE_PACKET_space
										val K_unchecked RE_DOWN
								inv !store
									reference
										val K_unchecked token
									inv TEXT_TY_RE_Node
										inv !postincrement
											reference
												val K_unchecked no_packets
										val K_unchecked START_RE_CC
										val K_unchecked 0
										val K_unchecked 0
										val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked RE_PACKET_space
											val K_unchecked RE_DOWN
									val K_unchecked token
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_UP
									val K_unchecked RE_PACKET_space
								inv !store
									reference
										val K_unchecked attach_to
									inv TEXT_TY_RE_Node
										inv !postincrement
											reference
												val K_unchecked no_packets
										val K_unchecked SUBEXP_RE_CC
										inv !unaryminus
											val K_unchecked 1
										val K_unchecked 3
										val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_NEXT
									val K_unchecked attach_to
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_PREVIOUS
									val K_unchecked token
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_UP
									val K_unchecked RE_PACKET_space
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_NEXT
									inv TEXT_TY_RE_Node
										inv !postincrement
											reference
												val K_unchecked no_packets
										val K_unchecked END_RE_CC
										val K_unchecked 0
										val K_unchecked 0
										val K_unchecked 0
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked attach_to
												val K_unchecked RE_NEXT
											val K_unchecked RE_PREVIOUS
									val K_unchecked attach_to
								inv !store
									reference
										inv !lookup
											inv !lookup
												val K_unchecked attach_to
												val K_unchecked RE_NEXT
											val K_unchecked RE_UP
									val K_unchecked RE_PACKET_space
								inv !store
									reference
										inv !lookup
											val K_unchecked attach_to
											val K_unchecked RE_DOWN
									val K_unchecked exactly
								inv !while
									inv !ne
										val K_unchecked exactly
										val K_unchecked plug_00232
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked exactly
													val K_unchecked RE_UP
											val K_unchecked attach_to
										inv !store
											reference
												val K_unchecked exactly
											inv !lookup
												val K_unchecked exactly
												val K_unchecked RE_NEXT
						inv !store
							reference
								val K_unchecked no_packets
							inv TEXT_TY_RE_ExpandChoices
								val K_unchecked RE_PACKET_space
								val K_unchecked no_packets
						inv !if
							val K_unchecked TEXT_TY_RE_Trace
							code
								inv !print
									val K_unchecked "Compiled pattern:\n"
								inv TEXT_TY_RE_DebugTree
									val K_unchecked ftxt
						inv !store
							reference
								val K_unchecked bits
							inv TEXT_TY_RE_CheckTree
								val K_unchecked RE_PACKET_space
								val K_unchecked no_subs
						inv !if
							val K_unchecked bits
							code
								inv !return
									val K_unchecked bits
						inv !return
							val K_unchecked no_packets
				constant TEXT_TY_RE_CompileTree K_unchecked_function = TEXT_TY_RE_CompileTree_B __assimilated=1
			package TEXT_TY_RE_RangeSyntaxCorrect_fn _function
				symbol public misc TEXT_TY_RE_RangeSyntaxCorrect
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_RangeSyntaxCorrect_B _code
					symbol private misc ftxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc rf
					symbol private misc rt
					symbol private misc i
					symbol private misc chm
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					local ftxt K_unchecked
					local rf K_unchecked
					local rt K_unchecked
					local i K_unchecked
					local chm K_unchecked
					code
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked rf
							inv !lt
								val K_unchecked i
								val K_unchecked rt
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked chm
									inv BlkValueRead
										val K_unchecked ftxt
										val K_unchecked i
								inv !if
									inv !and
										inv !eq
											val K_unchecked chm
											val K_unchecked 92
										inv !lt
											inv !plus
												val K_unchecked i
												val K_unchecked 1
											val K_unchecked rt
									code
										inv !store
											reference
												val K_unchecked chm
											inv BlkValueRead
												val K_unchecked ftxt
												inv !preincrement
													reference
														val K_unchecked i
										inv !if
											inv !or
												inv !and
													inv !ge
														val K_unchecked chm
														val K_unchecked 97
													inv !le
														val K_unchecked chm
														val K_unchecked 122
												inv !and
													inv !ge
														val K_unchecked chm
														val K_unchecked 65
													inv !le
														val K_unchecked chm
														val K_unchecked 90
											code
												inv !if
													inv !ne
														val K_unchecked chm
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											val K_unchecked 115
																											val K_unchecked 83
																										val K_unchecked 112
																									val K_unchecked 80
																								val K_unchecked 119
																							val K_unchecked 87
																						val K_unchecked 100
																					val K_unchecked 68
																				val K_unchecked 110
																			val K_unchecked 116
																		val K_unchecked 108
																	val K_unchecked 76
																val K_unchecked 117
															val K_unchecked 85
													code
														inv !return
															val K_unchecked "Invalid escape in {} range"
								inv !if
									inv !and
										inv !lt
											inv !plus
												val K_unchecked i
												val K_unchecked 2
											val K_unchecked rt
										inv !eq
											inv BlkValueRead
												val K_unchecked ftxt
												inv !plus
													val K_unchecked i
													val K_unchecked 1
											val K_unchecked 45
									code
										inv !if
											inv !gt
												val K_unchecked chm
												inv BlkValueRead
													val K_unchecked ftxt
													inv !plus
														val K_unchecked i
														val K_unchecked 2
											code
												inv !return
													val K_unchecked "Invalid {} range"
										inv !store
											reference
												val K_unchecked i
											inv !plus
												val K_unchecked i
												val K_unchecked 2
						inv !return
							val K_unchecked 0
				constant TEXT_TY_RE_RangeSyntaxCorrect K_unchecked_function = TEXT_TY_RE_RangeSyntaxCorrect_B __assimilated=1
			package TEXT_TY_RE_ExpandChoices_fn _function
				symbol public misc TEXT_TY_RE_ExpandChoices
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_ExpandChoices_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc no_packets
					symbol private misc rv
					symbol private misc prev
					symbol private misc nex
					symbol private misc holder
					symbol private misc new
					symbol private misc ct
					symbol private misc n
					symbol private misc cond_node
					symbol private misc then_node
					symbol private misc else_node
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc IF_RE_CC --> /main/template/constants/IF_RE_CC_con/IF_RE_CC
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc CHOICE_RE_CC --> /main/template/constants/CHOICE_RE_CC_con/CHOICE_RE_CC
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
					symbol external misc TEXT_TY_RE_Node --> /main/template/functions/TEXT_TY_RE_Node_fn/TEXT_TY_RE_Node
					symbol external misc CONDITION_RE_CC --> /main/template/constants/CONDITION_RE_CC_con/CONDITION_RE_CC
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc THEN_RE_CC --> /main/template/constants/THEN_RE_CC_con/THEN_RE_CC
					symbol external misc ELSE_RE_CC --> /main/template/constants/ELSE_RE_CC_con/ELSE_RE_CC
					symbol external misc RE_PREVIOUS --> /main/template/constants/RE_PREVIOUS_con/RE_PREVIOUS
					symbol external misc RE_UP --> /main/template/constants/RE_UP_con/RE_UP
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc DISJUNCTION_RE_CC --> /main/template/constants/DISJUNCTION_RE_CC_con/DISJUNCTION_RE_CC
					symbol external misc TEXT_TY_RE_ExpandChoices --> /main/template/functions/TEXT_TY_RE_ExpandChoices_fn/TEXT_TY_RE_ExpandChoices
					local token K_unchecked
					local no_packets K_unchecked
					local rv K_unchecked
					local prev K_unchecked
					local nex K_unchecked
					local holder K_unchecked
					local new K_unchecked
					local ct K_unchecked
					local n K_unchecked
					local cond_node K_unchecked
					local then_node K_unchecked
					local else_node K_unchecked
					code
						inv !while
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_CCLASS
										val K_unchecked IF_RE_CC
									code
										inv !ifelse
											inv !eq
												inv !lookup
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_DOWN
													val K_unchecked RE_CCLASS
												val K_unchecked CHOICE_RE_CC
											code
												inv !for
													inv !sequential
														inv !store
															reference
																val K_unchecked nex
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_DOWN
														inv !store
															reference
																val K_unchecked n
															val K_unchecked 0
													inv !ne
														val K_unchecked nex
														val K_unchecked plug_00232
													inv !store
														reference
															val K_unchecked nex
														inv !lookup
															val K_unchecked nex
															val K_unchecked RE_NEXT
													code
														inv !postincrement
															reference
																val K_unchecked n
												inv !if
													inv !ne
														val K_unchecked n
														val K_unchecked 2
													code
														inv !return
															val K_unchecked "conditional has too many clauses"
												inv !if
													inv !ge
														val K_unchecked no_packets
														val K_unchecked RE_MAX_PACKETS
													code
														inv !return
															val K_unchecked "regexp too complex"
												inv !store
													reference
														val K_unchecked cond_node
													inv TEXT_TY_RE_Node
														inv !postincrement
															reference
																val K_unchecked no_packets
														val K_unchecked CONDITION_RE_CC
														val K_unchecked 0
														val K_unchecked 0
														val K_unchecked 0
												inv !if
													inv !ge
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR1
														val K_unchecked 1
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked cond_node
																	val K_unchecked RE_PAR1
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR1
												inv !store
													reference
														val K_unchecked then_node
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_DOWN
												inv !store
													reference
														inv !lookup
															val K_unchecked then_node
															val K_unchecked RE_CCLASS
													val K_unchecked THEN_RE_CC
												inv !store
													reference
														val K_unchecked else_node
													inv !lookup
														val K_unchecked then_node
														val K_unchecked RE_NEXT
												inv !store
													reference
														inv !lookup
															val K_unchecked else_node
															val K_unchecked RE_CCLASS
													val K_unchecked ELSE_RE_CC
												inv !if
													inv !lt
														inv !lookup
															val K_unchecked cond_node
															val K_unchecked RE_PAR1
														val K_unchecked 1
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked cond_node
																	val K_unchecked RE_DOWN
															inv !lookup
																val K_unchecked then_node
																val K_unchecked RE_DOWN
														inv !store
															reference
																inv !lookup
																	val K_unchecked then_node
																	val K_unchecked RE_DOWN
															inv !lookup
																inv !lookup
																	val K_unchecked then_node
																	val K_unchecked RE_DOWN
																val K_unchecked RE_NEXT
														inv !if
															inv !ne
																inv !lookup
																	val K_unchecked then_node
																	val K_unchecked RE_DOWN
																val K_unchecked plug_00232
															code
																inv !store
																	reference
																		inv !lookup
																			inv !lookup
																				val K_unchecked then_node
																				val K_unchecked RE_DOWN
																			val K_unchecked RE_PREVIOUS
																	val K_unchecked plug_00232
														inv !store
															reference
																inv !lookup
																	inv !lookup
																		val K_unchecked cond_node
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_NEXT
															val K_unchecked plug_00232
														inv !store
															reference
																inv !lookup
																	inv !lookup
																		val K_unchecked cond_node
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_UP
															val K_unchecked cond_node
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_DOWN
													val K_unchecked cond_node
												inv !store
													reference
														inv !lookup
															val K_unchecked cond_node
															val K_unchecked RE_UP
													val K_unchecked token
												inv !store
													reference
														inv !lookup
															val K_unchecked cond_node
															val K_unchecked RE_NEXT
													val K_unchecked then_node
												inv !store
													reference
														inv !lookup
															val K_unchecked then_node
															val K_unchecked RE_PREVIOUS
													val K_unchecked cond_node
											code
												inv !if
													inv !ge
														val K_unchecked no_packets
														val K_unchecked RE_MAX_PACKETS
													code
														inv !return
															val K_unchecked "regexp too complex"
												inv !store
													reference
														val K_unchecked cond_node
													inv TEXT_TY_RE_Node
														inv !postincrement
															reference
																val K_unchecked no_packets
														val K_unchecked CONDITION_RE_CC
														val K_unchecked 0
														val K_unchecked 0
														val K_unchecked 0
												inv !if
													inv !ge
														val K_unchecked no_packets
														val K_unchecked RE_MAX_PACKETS
													code
														inv !return
															val K_unchecked "regexp too complex"
												inv !store
													reference
														val K_unchecked then_node
													inv TEXT_TY_RE_Node
														inv !postincrement
															reference
																val K_unchecked no_packets
														val K_unchecked THEN_RE_CC
														val K_unchecked 0
														val K_unchecked 0
														val K_unchecked 0
												inv !ifelse
													inv !ge
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR1
														val K_unchecked 1
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked cond_node
																	val K_unchecked RE_PAR1
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR1
														inv !store
															reference
																inv !lookup
																	val K_unchecked then_node
																	val K_unchecked RE_DOWN
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_DOWN
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked cond_node
																	val K_unchecked RE_DOWN
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_DOWN
														inv !store
															reference
																inv !lookup
																	val K_unchecked then_node
																	val K_unchecked RE_DOWN
															inv !lookup
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DOWN
																val K_unchecked RE_NEXT
														inv !store
															reference
																inv !lookup
																	inv !lookup
																		val K_unchecked cond_node
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_NEXT
															val K_unchecked plug_00232
														inv !store
															reference
																inv !lookup
																	inv !lookup
																		val K_unchecked cond_node
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_UP
															val K_unchecked cond_node
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_DOWN
													val K_unchecked cond_node
												inv !store
													reference
														inv !lookup
															val K_unchecked cond_node
															val K_unchecked RE_UP
													val K_unchecked token
												inv !store
													reference
														inv !lookup
															val K_unchecked cond_node
															val K_unchecked RE_NEXT
													val K_unchecked then_node
												inv !store
													reference
														inv !lookup
															val K_unchecked then_node
															val K_unchecked RE_PREVIOUS
													val K_unchecked cond_node
												inv !store
													reference
														inv !lookup
															val K_unchecked then_node
															val K_unchecked RE_UP
													val K_unchecked token
												inv !store
													reference
														inv !lookup
															val K_unchecked then_node
															val K_unchecked RE_NEXT
													val K_unchecked plug_00232
												inv !if
													inv !ne
														inv !lookup
															val K_unchecked then_node
															val K_unchecked RE_DOWN
														val K_unchecked plug_00232
													code
														inv !store
															reference
																inv !lookup
																	inv !lookup
																		val K_unchecked then_node
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_PREVIOUS
															val K_unchecked plug_00232
												inv !for
													inv !store
														reference
															val K_unchecked nex
														inv !lookup
															val K_unchecked then_node
															val K_unchecked RE_DOWN
													inv !ne
														val K_unchecked nex
														val K_unchecked plug_00232
													inv !store
														reference
															val K_unchecked nex
														inv !lookup
															val K_unchecked nex
															val K_unchecked RE_NEXT
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked nex
																	val K_unchecked RE_UP
															val K_unchecked then_node
										inv !if
											inv !ne
												inv !lookup
													val K_unchecked cond_node
													val K_unchecked RE_DOWN
												val K_unchecked plug_00232
											code
												inv !store
													reference
														val K_unchecked nex
													inv !lookup
														val K_unchecked cond_node
														val K_unchecked RE_DOWN
												inv !if
													inv !or
														inv !or
															inv !ne
																inv !lookup
																	val K_unchecked nex
																	val K_unchecked RE_CCLASS
																val K_unchecked SUBEXP_RE_CC
															inv !ne
																inv !lookup
																	val K_unchecked nex
																	val K_unchecked RE_NEXT
																val K_unchecked plug_00232
														inv !ne
															inv !lookup
																val K_unchecked nex
																val K_unchecked RE_PAR2
															inv !alternative
																val K_unchecked 1
																val K_unchecked 2
													code
														inv !return
															val K_unchecked "condition not lookahead/behind"
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_CCLASS
											val K_unchecked CHOICE_RE_CC
										inv !lt
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_PAR1
											val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked prev
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_PREVIOUS
										inv !store
											reference
												val K_unchecked nex
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_NEXT
										inv !while
											inv !and
												inv !ne
													val K_unchecked nex
													val K_unchecked plug_00232
												inv !eq
													inv !lookup
														val K_unchecked nex
														val K_unchecked RE_CCLASS
													val K_unchecked CHOICE_RE_CC
											code
												inv !store
													reference
														val K_unchecked nex
													inv !lookup
														val K_unchecked nex
														val K_unchecked RE_NEXT
										inv !store
											reference
												val K_unchecked holder
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_UP
										inv !if
											inv !eq
												val K_unchecked holder
												val K_unchecked plug_00232
											code
												inv !return
													val K_unchecked "bang"
										inv !if
											inv !ge
												val K_unchecked no_packets
												val K_unchecked RE_MAX_PACKETS
											code
												inv !return
													val K_unchecked "regexp too complex"
										inv !store
											reference
												val K_unchecked new
											inv TEXT_TY_RE_Node
												inv !postincrement
													reference
														val K_unchecked no_packets
												val K_unchecked DISJUNCTION_RE_CC
												val K_unchecked 0
												val K_unchecked 0
												val K_unchecked 0
										inv !store
											reference
												inv !lookup
													val K_unchecked holder
													val K_unchecked RE_DOWN
											val K_unchecked new
										inv !store
											reference
												inv !lookup
													val K_unchecked new
													val K_unchecked RE_UP
											val K_unchecked holder
										inv !if
											inv !ne
												val K_unchecked prev
												val K_unchecked plug_00232
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked prev
															val K_unchecked RE_NEXT
													val K_unchecked new
												inv !store
													reference
														inv !lookup
															val K_unchecked new
															val K_unchecked RE_PREVIOUS
													val K_unchecked prev
										inv !if
											inv !ne
												val K_unchecked nex
												val K_unchecked plug_00232
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked nex
															val K_unchecked RE_PREVIOUS
													val K_unchecked new
												inv !store
													reference
														inv !lookup
															val K_unchecked new
															val K_unchecked RE_NEXT
													val K_unchecked nex
										inv !store
											reference
												inv !lookup
													val K_unchecked new
													val K_unchecked RE_DOWN
											val K_unchecked token
										inv !store
											reference
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_PREVIOUS
											val K_unchecked plug_00232
										inv !store
											reference
												val K_unchecked ct
											val K_unchecked 1
										inv !while
											inv !ne
												val K_unchecked token
												val K_unchecked plug_00232
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR1
													inv !postincrement
														reference
															val K_unchecked ct
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_UP
													val K_unchecked new
												inv !if
													inv !and
														inv !ne
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_NEXT
															val K_unchecked plug_00232
														inv !ne
															inv !lookup
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_NEXT
																val K_unchecked RE_CCLASS
															val K_unchecked CHOICE_RE_CC
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_NEXT
															val K_unchecked plug_00232
												inv !store
													reference
														val K_unchecked token
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_NEXT
										inv !store
											reference
												inv !lookup
													val K_unchecked new
													val K_unchecked RE_PAR1
											inv !minus
												val K_unchecked ct
												val K_unchecked 1
										inv !if
											inv !ne
												val K_unchecked token
												val K_unchecked plug_00232
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_NEXT
													val K_unchecked plug_00232
										inv !store
											reference
												val K_unchecked token
											val K_unchecked new
										inv !continue
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_DOWN
										val K_unchecked plug_00232
									code
										inv !store
											reference
												val K_unchecked no_packets
											inv TEXT_TY_RE_ExpandChoices
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_DOWN
												val K_unchecked no_packets
										inv !if
											inv !or
												inv !lt
													val K_unchecked no_packets
													val K_unchecked 0
												inv !ge
													val K_unchecked no_packets
													val K_unchecked RE_MAX_PACKETS
											code
												inv !break
								inv !store
									reference
										val K_unchecked token
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_NEXT
						inv !return
							val K_unchecked no_packets
				constant TEXT_TY_RE_ExpandChoices K_unchecked_function = TEXT_TY_RE_ExpandChoices_B __assimilated=1
			package TEXT_TY_RE_CheckTree_fn _function
				symbol public misc TEXT_TY_RE_CheckTree
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_CheckTree_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc no_subs
					symbol private misc rv
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc VARIABLE_RE_CC --> /main/template/constants/VARIABLE_RE_CC_con/VARIABLE_RE_CC
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc RE_PAR3 --> /main/template/constants/RE_PAR3_con/RE_PAR3
					symbol external misc TEXT_TY_RE_Width --> /main/template/functions/TEXT_TY_RE_Width_fn/TEXT_TY_RE_Width
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc TEXT_TY_RE_CheckTree --> /main/template/functions/TEXT_TY_RE_CheckTree_fn/TEXT_TY_RE_CheckTree
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					local token K_unchecked
					local no_subs K_unchecked
					local rv K_unchecked
					code
						inv !while
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							code
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_CCLASS
										val K_unchecked VARIABLE_RE_CC
									code
										inv !if
											inv !ge
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_PAR1
												val K_unchecked no_subs
											code
												inv !return
													val K_unchecked "reference to nonexistent group"
								inv !if
									inv !and
										inv !and
											inv !eq
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_CCLASS
												val K_unchecked SUBEXP_RE_CC
											inv !eq
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_PAR2
												inv !alternative
													val K_unchecked 1
													val K_unchecked 2
										inv !eq
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_PAR3
											val K_unchecked -1
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_PAR3
											inv TEXT_TY_RE_Width
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_DOWN
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_PAR3
												val K_unchecked -1
											code
												inv !return
													val K_unchecked "variable length lookbehind not implemented"
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_DOWN
										val K_unchecked plug_00232
									code
										inv !store
											reference
												val K_unchecked rv
											inv TEXT_TY_RE_CheckTree
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_DOWN
												val K_unchecked no_subs
										inv !if
											val K_unchecked rv
											code
												inv !return
													val K_unchecked rv
								inv !store
									reference
										val K_unchecked token
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_NEXT
						inv !return
							val K_unchecked 0
				constant TEXT_TY_RE_CheckTree K_unchecked_function = TEXT_TY_RE_CheckTree_B __assimilated=1
			package TEXT_TY_RE_Width_fn _function
				symbol public misc TEXT_TY_RE_Width
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_Width_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc downwards
					symbol private misc w
					symbol private misc rv
					symbol private misc aw
					symbol private misc choice
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc DIGIT_RE_CC --> /main/template/constants/DIGIT_RE_CC_con/DIGIT_RE_CC
					symbol external misc NONDIGIT_RE_CC --> /main/template/constants/NONDIGIT_RE_CC_con/NONDIGIT_RE_CC
					symbol external misc WHITESPACE_RE_CC --> /main/template/constants/WHITESPACE_RE_CC_con/WHITESPACE_RE_CC
					symbol external misc NONWHITESPACE_RE_CC --> /main/template/constants/NONWHITESPACE_RE_CC_con/NONWHITESPACE_RE_CC
					symbol external misc PUNCTUATION_RE_CC --> /main/template/constants/PUNCTUATION_RE_CC_con/PUNCTUATION_RE_CC
					symbol external misc NONPUNCTUATION_RE_CC --> /main/template/constants/NONPUNCTUATION_RE_CC_con/NONPUNCTUATION_RE_CC
					symbol external misc WORD_RE_CC --> /main/template/constants/WORD_RE_CC_con/WORD_RE_CC
					symbol external misc NONWORD_RE_CC --> /main/template/constants/NONWORD_RE_CC_con/NONWORD_RE_CC
					symbol external misc ANYTHING_RE_CC --> /main/template/constants/ANYTHING_RE_CC_con/ANYTHING_RE_CC
					symbol external misc NOTHING_RE_CC --> /main/template/constants/NOTHING_RE_CC_con/NOTHING_RE_CC
					symbol external misc RANGE_RE_CC --> /main/template/constants/RANGE_RE_CC_con/RANGE_RE_CC
					symbol external misc NEWLINE_RE_CC --> /main/template/constants/NEWLINE_RE_CC_con/NEWLINE_RE_CC
					symbol external misc TAB_RE_CC --> /main/template/constants/TAB_RE_CC_con/TAB_RE_CC
					symbol external misc UCASE_RE_CC --> /main/template/constants/UCASE_RE_CC_con/UCASE_RE_CC
					symbol external misc NONUCASE_RE_CC --> /main/template/constants/NONUCASE_RE_CC_con/NONUCASE_RE_CC
					symbol external misc LCASE_RE_CC --> /main/template/constants/LCASE_RE_CC_con/LCASE_RE_CC
					symbol external misc NONLCASE_RE_CC --> /main/template/constants/NONLCASE_RE_CC_con/NONLCASE_RE_CC
					symbol external misc START_RE_CC --> /main/template/constants/START_RE_CC_con/START_RE_CC
					symbol external misc END_RE_CC --> /main/template/constants/END_RE_CC_con/END_RE_CC
					symbol external misc BOUNDARY_RE_CC --> /main/template/constants/BOUNDARY_RE_CC_con/BOUNDARY_RE_CC
					symbol external misc NONBOUNDARY_RE_CC --> /main/template/constants/NONBOUNDARY_RE_CC_con/NONBOUNDARY_RE_CC
					symbol external misc ALWAYS_RE_CC --> /main/template/constants/ALWAYS_RE_CC_con/ALWAYS_RE_CC
					symbol external misc LITERAL_RE_CC --> /main/template/constants/LITERAL_RE_CC_con/LITERAL_RE_CC
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc VARIABLE_RE_CC --> /main/template/constants/VARIABLE_RE_CC_con/VARIABLE_RE_CC
					symbol external misc IF_RE_CC --> /main/template/constants/IF_RE_CC_con/IF_RE_CC
					symbol external misc TEXT_TY_RE_Width --> /main/template/functions/TEXT_TY_RE_Width_fn/TEXT_TY_RE_Width
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc QUANTIFIER_RE_CC --> /main/template/constants/QUANTIFIER_RE_CC_con/QUANTIFIER_RE_CC
					symbol external misc DISJUNCTION_RE_CC --> /main/template/constants/DISJUNCTION_RE_CC_con/DISJUNCTION_RE_CC
					symbol external misc SENSITIVITY_RE_CC --> /main/template/constants/SENSITIVITY_RE_CC_con/SENSITIVITY_RE_CC
					local token K_unchecked
					local downwards K_unchecked
					local w K_unchecked
					local rv K_unchecked
					local aw K_unchecked
					local choice K_unchecked
					code
						inv !while
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							code
								inv !switch
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_CCLASS
									code
										inv !case
											inv !alternativecase
												inv !alternativecase
													inv !alternativecase
														inv !alternativecase
															inv !alternativecase
																inv !alternativecase
																	inv !alternativecase
																		inv !alternativecase
																			inv !alternativecase
																				inv !alternativecase
																					inv !alternativecase
																						inv !alternativecase
																							inv !alternativecase
																								inv !alternativecase
																									inv !alternativecase
																										inv !alternativecase
																											val K_unchecked DIGIT_RE_CC
																											val K_unchecked NONDIGIT_RE_CC
																										val K_unchecked WHITESPACE_RE_CC
																									val K_unchecked NONWHITESPACE_RE_CC
																								val K_unchecked PUNCTUATION_RE_CC
																							val K_unchecked NONPUNCTUATION_RE_CC
																						val K_unchecked WORD_RE_CC
																					val K_unchecked NONWORD_RE_CC
																				val K_unchecked ANYTHING_RE_CC
																			val K_unchecked NOTHING_RE_CC
																		val K_unchecked RANGE_RE_CC
																	val K_unchecked NEWLINE_RE_CC
																val K_unchecked TAB_RE_CC
															val K_unchecked UCASE_RE_CC
														val K_unchecked NONUCASE_RE_CC
													val K_unchecked LCASE_RE_CC
												val K_unchecked NONLCASE_RE_CC
											code
												inv !postincrement
													reference
														val K_unchecked w
										inv !case
											inv !alternativecase
												inv !alternativecase
													inv !alternativecase
														inv !alternativecase
															val K_unchecked START_RE_CC
															val K_unchecked END_RE_CC
														val K_unchecked BOUNDARY_RE_CC
													val K_unchecked NONBOUNDARY_RE_CC
												val K_unchecked ALWAYS_RE_CC
											code
										inv !case
											val K_unchecked LITERAL_RE_CC
											code
												inv !store
													reference
														val K_unchecked w
													inv !minus
														inv !plus
															val K_unchecked w
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR2
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR1
										inv !case
											val K_unchecked VARIABLE_RE_CC
											code
												inv !return
													inv !unaryminus
														val K_unchecked 1
										inv !case
											val K_unchecked IF_RE_CC
											code
												inv !store
													reference
														val K_unchecked rv
													inv TEXT_TY_RE_Width
														inv !lookup
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_DOWN
															val K_unchecked RE_NEXT
												inv !if
													inv !eq
														val K_unchecked rv
														val K_unchecked -1
													code
														inv !return
															inv !unaryminus
																val K_unchecked 1
												inv !if
													inv !ne
														val K_unchecked rv
														inv TEXT_TY_RE_Width
															inv !lookup
																inv !lookup
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_NEXT
																val K_unchecked RE_NEXT
													code
														inv !return
															inv !unaryminus
																val K_unchecked 1
												inv !store
													reference
														val K_unchecked w
													inv !plus
														val K_unchecked w
														val K_unchecked rv
										inv !case
											val K_unchecked SUBEXP_RE_CC
											code
												inv !ifelse
													inv !eq
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR2
														inv !alternative
															val K_unchecked 1
															val K_unchecked 2
													code
														inv !store
															reference
																val K_unchecked rv
															val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked rv
															inv TEXT_TY_RE_Width
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DOWN
														inv !if
															inv !eq
																val K_unchecked rv
																val K_unchecked -1
															code
																inv !return
																	inv !unaryminus
																		val K_unchecked 1
												inv !store
													reference
														val K_unchecked w
													inv !plus
														val K_unchecked w
														val K_unchecked rv
										inv !case
											val K_unchecked QUANTIFIER_RE_CC
											code
												inv !if
													inv !ne
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR1
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR2
													code
														inv !return
															inv !unaryminus
																val K_unchecked 1
												inv !store
													reference
														val K_unchecked rv
													inv TEXT_TY_RE_Width
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_DOWN
												inv !if
													inv !eq
														val K_unchecked rv
														val K_unchecked -1
													code
														inv !return
															inv !unaryminus
																val K_unchecked 1
												inv !store
													reference
														val K_unchecked w
													inv !plus
														val K_unchecked w
														inv !times
															val K_unchecked rv
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR1
										inv !case
											val K_unchecked DISJUNCTION_RE_CC
											code
												inv !store
													reference
														val K_unchecked aw
													val K_unchecked -1
												inv !for
													inv !store
														reference
															val K_unchecked choice
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_DOWN
													inv !ne
														val K_unchecked choice
														val K_unchecked plug_00232
													inv !store
														reference
															val K_unchecked choice
														inv !lookup
															val K_unchecked choice
															val K_unchecked RE_NEXT
													code
														inv !store
															reference
																val K_unchecked rv
															inv TEXT_TY_RE_Width
																inv !lookup
																	val K_unchecked choice
																	val K_unchecked RE_DOWN
														inv !if
															inv !eq
																val K_unchecked rv
																val K_unchecked -1
															code
																inv !return
																	inv !unaryminus
																		val K_unchecked 1
														inv !if
															inv !and
																inv !ge
																	val K_unchecked aw
																	val K_unchecked 0
																inv !ne
																	val K_unchecked aw
																	val K_unchecked rv
															code
																inv !return
																	inv !unaryminus
																		val K_unchecked 1
														inv !store
															reference
																val K_unchecked aw
															val K_unchecked rv
												inv !store
													reference
														val K_unchecked w
													inv !plus
														val K_unchecked w
														val K_unchecked aw
										inv !case
											val K_unchecked SENSITIVITY_RE_CC
											code
								inv !if
									val K_unchecked downwards
									code
										inv !return
											val K_unchecked w
								inv !if
									inv !ne
										val K_unchecked token
										val K_unchecked plug_00232
									code
										inv !store
											reference
												val K_unchecked token
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_NEXT
						inv !return
							val K_unchecked w
				constant TEXT_TY_RE_Width K_unchecked_function = TEXT_TY_RE_Width_B __assimilated=1
			package TEXT_TY_RE_PrintNoRewinds_fn _function
				symbol public misc TEXT_TY_RE_PrintNoRewinds
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_PrintNoRewinds_B _code
					symbol external misc plug_00512 --> /main/template/variables/TEXT_TY_RE_RewindCount_var/TEXT_TY_RE_RewindCount
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					code
						inv !printnumber
							val K_unchecked TEXT_TY_RE_RewindCount
				constant TEXT_TY_RE_PrintNoRewinds K_unchecked_function = TEXT_TY_RE_PrintNoRewinds_B __assimilated=1
			package TEXT_TY_RE_Parse_fn _function
				symbol public misc TEXT_TY_RE_Parse
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_Parse_B _code
					symbol private misc ftxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc ipos
					symbol private misc insens
					symbol private misc ilen
					symbol private misc rv
					symbol private misc root
					symbol private misc i
					symbol private misc initial_mode
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					symbol external misc CIS_MFLAG --> /main/template/constants/CIS_MFLAG_con/CIS_MFLAG
					symbol external misc TEXT_TY_RE_Clear_Markers --> /main/template/functions/TEXT_TY_RE_Clear_Markers_fn/TEXT_TY_RE_Clear_Markers
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc START_RE_CC --> /main/template/constants/START_RE_CC_con/START_RE_CC
					symbol external misc TEXT_TY_RE_EraseConstraints --> /main/template/functions/TEXT_TY_RE_EraseConstraints_fn/TEXT_TY_RE_EraseConstraints
					symbol external misc plug_00512 --> /main/template/variables/TEXT_TY_RE_RewindCount_var/TEXT_TY_RE_RewindCount
					symbol external misc TEXT_TY_RE_ParseAtPosition --> /main/template/functions/TEXT_TY_RE_ParseAtPosition_fn/TEXT_TY_RE_ParseAtPosition
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					local ftxt K_unchecked
					local txt K_unchecked
					local ipos K_unchecked
					local insens K_unchecked
					local ilen K_unchecked
					local rv K_unchecked
					local root K_unchecked
					local i K_unchecked
					local initial_mode K_unchecked
					code
						inv !store
							reference
								val K_unchecked ilen
							inv TEXT_TY_CharacterLength
								val K_unchecked txt
						inv !if
							inv !or
								inv !lt
									val K_unchecked ipos
									val K_unchecked 0
								inv !gt
									val K_unchecked ipos
									val K_unchecked ilen
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked root
							val K_unchecked RE_PACKET_space
						inv !store
							reference
								val K_unchecked initial_mode
							val K_unchecked 0
						inv !if
							val K_unchecked insens
							code
								inv !store
									reference
										val K_unchecked initial_mode
									val K_unchecked CIS_MFLAG
						inv TEXT_TY_RE_Clear_Markers
							val K_unchecked RE_PACKET_space
						inv !for
							val K_unchecked 1
							inv !le
								val K_unchecked ipos
								val K_unchecked ilen
							inv !postincrement
								reference
									val K_unchecked ipos
							code
								inv !if
									inv !and
										inv !and
											inv !ne
												inv !lookup
													val K_unchecked RE_PACKET_space
													val K_unchecked RE_DOWN
												val K_unchecked plug_00232
											inv !eq
												inv !lookup
													inv !lookup
														val K_unchecked RE_PACKET_space
														val K_unchecked RE_DOWN
													val K_unchecked RE_CCLASS
												val K_unchecked START_RE_CC
										inv !gt
											val K_unchecked ipos
											val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked rv
											val K_unchecked -1
										inv !break
								inv !if
									inv !gt
										val K_unchecked ipos
										val K_unchecked 0
									code
										inv TEXT_TY_RE_EraseConstraints
											val K_unchecked RE_PACKET_space
											val K_unchecked initial_mode
								inv !store
									reference
										val K_unchecked TEXT_TY_RE_RewindCount
									val K_unchecked 0
								inv !store
									reference
										val K_unchecked rv
									inv TEXT_TY_RE_ParseAtPosition
										val K_unchecked ftxt
										val K_unchecked txt
										val K_unchecked ipos
										val K_unchecked ilen
										val K_unchecked RE_PACKET_space
										val K_unchecked initial_mode
								inv !if
									inv !ge
										val K_unchecked rv
										val K_unchecked 0
									code
										inv !break
						inv !ifelse
							inv !eq
								val K_unchecked rv
								val K_unchecked -1
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked root
											val K_unchecked RE_DATA1
									val K_unchecked -1
								inv !store
									reference
										inv !lookup
											val K_unchecked root
											val K_unchecked RE_DATA2
									val K_unchecked -1
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked root
											val K_unchecked RE_DATA1
									val K_unchecked ipos
								inv !store
									reference
										inv !lookup
											val K_unchecked root
											val K_unchecked RE_DATA2
									inv !plus
										val K_unchecked ipos
										val K_unchecked rv
						inv !return
							val K_unchecked rv
				constant TEXT_TY_RE_Parse K_unchecked_function = TEXT_TY_RE_Parse_B __assimilated=1
			package TEXT_TY_RE_ParseAtPosition_fn _function
				symbol public misc TEXT_TY_RE_ParseAtPosition
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_ParseAtPosition_B _code
					symbol private misc ftxt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc ifrom
					symbol private misc ito
					symbol private misc token
					symbol private misc mode_flags
					symbol private misc outcome
					symbol private misc ipos
					symbol private misc npos
					symbol private misc rv
					symbol private misc i
					symbol private misc ch
					symbol private misc edge
					symbol private misc rewind_this
					symbol private label .Rewind
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc plug_00511 --> /main/template/variables/TEXT_TY_RE_Trace_var/TEXT_TY_RE_Trace
					symbol external misc TEXT_TY_RE_DebugNode --> /main/template/functions/TEXT_TY_RE_DebugNode_fn/TEXT_TY_RE_DebugNode
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RE_MODES --> /main/template/constants/RE_MODES_con/RE_MODES
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc CHOICE_RE_CC --> /main/template/constants/CHOICE_RE_CC_con/CHOICE_RE_CC
					symbol external misc SENSITIVITY_RE_CC --> /main/template/constants/SENSITIVITY_RE_CC_con/SENSITIVITY_RE_CC
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc CIS_MFLAG --> /main/template/constants/CIS_MFLAG_con/CIS_MFLAG
					symbol external misc ALWAYS_RE_CC --> /main/template/constants/ALWAYS_RE_CC_con/ALWAYS_RE_CC
					symbol external misc NEVER_RE_CC --> /main/template/constants/NEVER_RE_CC_con/NEVER_RE_CC
					symbol external misc START_RE_CC --> /main/template/constants/START_RE_CC_con/START_RE_CC
					symbol external misc END_RE_CC --> /main/template/constants/END_RE_CC_con/END_RE_CC
					symbol external misc BOUNDARY_RE_CC --> /main/template/constants/BOUNDARY_RE_CC_con/BOUNDARY_RE_CC
					symbol external misc NONBOUNDARY_RE_CC --> /main/template/constants/NONBOUNDARY_RE_CC_con/NONBOUNDARY_RE_CC
					symbol external misc IF_RE_CC --> /main/template/constants/IF_RE_CC_con/IF_RE_CC
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc TEXT_TY_RE_ParseAtPosition --> /main/template/functions/TEXT_TY_RE_ParseAtPosition_fn/TEXT_TY_RE_ParseAtPosition
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc DISJUNCTION_RE_CC --> /main/template/constants/DISJUNCTION_RE_CC_con/DISJUNCTION_RE_CC
					symbol external misc RE_CONSTRAINT --> /main/template/constants/RE_CONSTRAINT_con/RE_CONSTRAINT
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc ACCUM_MFLAG --> /main/template/constants/ACCUM_MFLAG_con/ACCUM_MFLAG
					symbol external misc TEXT_TY_RE_FailSubexpressions --> /main/template/functions/TEXT_TY_RE_FailSubexpressions_fn/TEXT_TY_RE_FailSubexpressions
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc RE_PAR3 --> /main/template/constants/RE_PAR3_con/RE_PAR3
					symbol external misc QUANTIFIER_RE_CC --> /main/template/constants/QUANTIFIER_RE_CC_con/QUANTIFIER_RE_CC
					symbol external misc RE_CACHE1 --> /main/template/constants/RE_CACHE1_con/RE_CACHE1
					symbol external misc RE_CACHE2 --> /main/template/constants/RE_CACHE2_con/RE_CACHE2
					symbol external misc NOTHING_RE_CC --> /main/template/constants/NOTHING_RE_CC_con/NOTHING_RE_CC
					symbol external misc ANYTHING_RE_CC --> /main/template/constants/ANYTHING_RE_CC_con/ANYTHING_RE_CC
					symbol external misc WHITESPACE_RE_CC --> /main/template/constants/WHITESPACE_RE_CC_con/WHITESPACE_RE_CC
					symbol external misc NONWHITESPACE_RE_CC --> /main/template/constants/NONWHITESPACE_RE_CC_con/NONWHITESPACE_RE_CC
					symbol external misc PUNCTUATION_RE_CC --> /main/template/constants/PUNCTUATION_RE_CC_con/PUNCTUATION_RE_CC
					symbol external misc NONPUNCTUATION_RE_CC --> /main/template/constants/NONPUNCTUATION_RE_CC_con/NONPUNCTUATION_RE_CC
					symbol external misc WORD_RE_CC --> /main/template/constants/WORD_RE_CC_con/WORD_RE_CC
					symbol external misc NONWORD_RE_CC --> /main/template/constants/NONWORD_RE_CC_con/NONWORD_RE_CC
					symbol external misc DIGIT_RE_CC --> /main/template/constants/DIGIT_RE_CC_con/DIGIT_RE_CC
					symbol external misc NONDIGIT_RE_CC --> /main/template/constants/NONDIGIT_RE_CC_con/NONDIGIT_RE_CC
					symbol external misc LCASE_RE_CC --> /main/template/constants/LCASE_RE_CC_con/LCASE_RE_CC
					symbol external misc CharIsOfCase --> /main/template/functions/CharIsOfCase_fn/CharIsOfCase
					symbol external misc NONLCASE_RE_CC --> /main/template/constants/NONLCASE_RE_CC_con/NONLCASE_RE_CC
					symbol external misc UCASE_RE_CC --> /main/template/constants/UCASE_RE_CC_con/UCASE_RE_CC
					symbol external misc NONUCASE_RE_CC --> /main/template/constants/NONUCASE_RE_CC_con/NONUCASE_RE_CC
					symbol external misc NEWLINE_RE_CC --> /main/template/constants/NEWLINE_RE_CC_con/NEWLINE_RE_CC
					symbol external misc TAB_RE_CC --> /main/template/constants/TAB_RE_CC_con/TAB_RE_CC
					symbol external misc RANGE_RE_CC --> /main/template/constants/RANGE_RE_CC_con/RANGE_RE_CC
					symbol external misc TEXT_TY_RE_Range --> /main/template/functions/TEXT_TY_RE_Range_fn/TEXT_TY_RE_Range
					symbol external misc LITERAL_RE_CC --> /main/template/constants/LITERAL_RE_CC_con/LITERAL_RE_CC
					symbol external misc TEXT_TY_RE_MatchSubstring --> /main/template/functions/TEXT_TY_RE_MatchSubstring_fn/TEXT_TY_RE_MatchSubstring
					symbol external misc VARIABLE_RE_CC --> /main/template/constants/VARIABLE_RE_CC_con/VARIABLE_RE_CC
					symbol private label .NeverMatchIncompleteVar
					symbol external misc plug_00512 --> /main/template/variables/TEXT_TY_RE_RewindCount_var/TEXT_TY_RE_RewindCount
					symbol external misc TEXT_TY_RE_SeekBacktrack --> /main/template/functions/TEXT_TY_RE_SeekBacktrack_fn/TEXT_TY_RE_SeekBacktrack
					symbol private label .RewindFound
					symbol external misc RE_PREVIOUS --> /main/template/constants/RE_PREVIOUS_con/RE_PREVIOUS
					symbol external misc TEXT_TY_RE_DebugTree --> /main/template/functions/TEXT_TY_RE_DebugTree_fn/TEXT_TY_RE_DebugTree
					local ftxt K_unchecked
					local txt K_unchecked
					local ifrom K_unchecked
					local ito K_unchecked
					local token K_unchecked
					local mode_flags K_unchecked
					local outcome K_unchecked
					local ipos K_unchecked
					local npos K_unchecked
					local rv K_unchecked
					local i K_unchecked
					local ch K_unchecked
					local edge K_unchecked
					local rewind_this K_unchecked
					code
						inv !if
							inv !gt
								val K_unchecked ifrom
								val K_unchecked ito
							code
								inv !return
									inv !unaryminus
										val K_unchecked 1
						inv !store
							reference
								val K_unchecked ipos
							val K_unchecked ifrom
						.Rewind
						inv !while
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							code
								inv !store
									reference
										val K_unchecked outcome
									val K_unchecked 0
								inv !if
									val K_unchecked TEXT_TY_RE_Trace
									code
										inv !print
											val K_unchecked "Matching at "
										inv !printnumber
											val K_unchecked ipos
										inv !print
											val K_unchecked ": "
										inv TEXT_TY_RE_DebugNode
											val K_unchecked token
											val K_unchecked ftxt
											val K_unchecked 1
								inv !ifelse
									inv !lt
										val K_unchecked ipos
										val K_unchecked ito
									code
										inv !store
											reference
												val K_unchecked ch
											inv BlkValueRead
												val K_unchecked txt
												val K_unchecked ipos
									code
										inv !store
											reference
												val K_unchecked ch
											val K_unchecked 0
								inv !store
									reference
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_MODES
									val K_unchecked mode_flags
								inv !switch
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_CCLASS
									code
										inv !case
											val K_unchecked CHOICE_RE_CC
											code
												inv !return
													val K_unchecked "internal error"
										inv !case
											val K_unchecked SENSITIVITY_RE_CC
											code
												inv !ifelse
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_PAR1
													code
														inv !store
															reference
																val K_unchecked mode_flags
															inv !bitwiseor
																val K_unchecked mode_flags
																val K_unchecked CIS_MFLAG
													code
														inv !store
															reference
																val K_unchecked mode_flags
															inv !bitwiseand
																val K_unchecked mode_flags
																inv !bitwisenot
																	val K_unchecked CIS_MFLAG
												inv !store
													reference
														val K_unchecked outcome
													val K_unchecked 1
										inv !case
											val K_unchecked ALWAYS_RE_CC
											code
												inv !store
													reference
														val K_unchecked outcome
													val K_unchecked 1
										inv !case
											val K_unchecked NEVER_RE_CC
											code
										inv !case
											val K_unchecked START_RE_CC
											code
												inv !if
													inv !eq
														val K_unchecked ipos
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
										inv !case
											val K_unchecked END_RE_CC
											code
												inv !if
													inv !eq
														inv BlkValueRead
															val K_unchecked txt
															val K_unchecked ipos
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
										inv !case
											val K_unchecked BOUNDARY_RE_CC
											code
												inv !store
													reference
														val K_unchecked rv
													val K_unchecked 0
												inv !if
													inv !eq
														inv BlkValueRead
															val K_unchecked txt
															val K_unchecked ipos
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	val K_unchecked 0
																																	val K_unchecked 10
																																val K_unchecked 13
																															val K_unchecked 32
																														val K_unchecked 9
																													val K_unchecked 46
																												val K_unchecked 44
																											val K_unchecked 33
																										val K_unchecked 63
																									val K_unchecked 45
																								val K_unchecked 47
																							val K_unchecked 34
																						val K_unchecked 58
																					val K_unchecked 59
																				val K_unchecked 40
																			val K_unchecked 41
																		val K_unchecked 91
																	val K_unchecked 93
																val K_unchecked 123
															val K_unchecked 125
													code
														inv !postincrement
															reference
																val K_unchecked rv
												inv !ifelse
													inv !eq
														val K_unchecked ipos
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked ch
															val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked ch
															inv BlkValueRead
																val K_unchecked txt
																inv !minus
																	val K_unchecked ipos
																	val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked ch
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	val K_unchecked 0
																																	val K_unchecked 10
																																val K_unchecked 13
																															val K_unchecked 32
																														val K_unchecked 9
																													val K_unchecked 46
																												val K_unchecked 44
																											val K_unchecked 33
																										val K_unchecked 63
																									val K_unchecked 45
																								val K_unchecked 47
																							val K_unchecked 34
																						val K_unchecked 58
																					val K_unchecked 59
																				val K_unchecked 40
																			val K_unchecked 41
																		val K_unchecked 91
																	val K_unchecked 93
																val K_unchecked 123
															val K_unchecked 125
													code
														inv !postincrement
															reference
																val K_unchecked rv
												inv !if
													inv !eq
														val K_unchecked rv
														val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
										inv !case
											val K_unchecked NONBOUNDARY_RE_CC
											code
												inv !store
													reference
														val K_unchecked rv
													val K_unchecked 0
												inv !if
													inv !eq
														inv BlkValueRead
															val K_unchecked txt
															val K_unchecked ipos
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	val K_unchecked 0
																																	val K_unchecked 10
																																val K_unchecked 13
																															val K_unchecked 32
																														val K_unchecked 9
																													val K_unchecked 46
																												val K_unchecked 44
																											val K_unchecked 33
																										val K_unchecked 63
																									val K_unchecked 45
																								val K_unchecked 47
																							val K_unchecked 34
																						val K_unchecked 58
																					val K_unchecked 59
																				val K_unchecked 40
																			val K_unchecked 41
																		val K_unchecked 91
																	val K_unchecked 93
																val K_unchecked 123
															val K_unchecked 125
													code
														inv !postincrement
															reference
																val K_unchecked rv
												inv !ifelse
													inv !eq
														val K_unchecked ipos
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked ch
															val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked ch
															inv BlkValueRead
																val K_unchecked txt
																inv !minus
																	val K_unchecked ipos
																	val K_unchecked 1
												inv !if
													inv !eq
														val K_unchecked ch
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	val K_unchecked 0
																																	val K_unchecked 10
																																val K_unchecked 13
																															val K_unchecked 32
																														val K_unchecked 9
																													val K_unchecked 46
																												val K_unchecked 44
																											val K_unchecked 33
																										val K_unchecked 63
																									val K_unchecked 45
																								val K_unchecked 47
																							val K_unchecked 34
																						val K_unchecked 58
																					val K_unchecked 59
																				val K_unchecked 40
																			val K_unchecked 41
																		val K_unchecked 91
																	val K_unchecked 93
																val K_unchecked 123
															val K_unchecked 125
													code
														inv !postincrement
															reference
																val K_unchecked rv
												inv !if
													inv !ne
														val K_unchecked rv
														val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
										inv !case
											val K_unchecked IF_RE_CC
											code
												inv !store
													reference
														val K_unchecked i
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_PAR1
												inv !store
													reference
														val K_unchecked ch
													val K_unchecked 0
												inv !if
													val K_unchecked TEXT_TY_RE_Trace
													code
														inv !print
															val K_unchecked "Trying conditional from "
														inv !printnumber
															val K_unchecked ipos
														inv !print
															val K_unchecked ": "
														inv TEXT_TY_RE_DebugNode
															val K_unchecked token
															val K_unchecked ftxt
															val K_unchecked 1
												inv !ifelse
													inv !ge
														val K_unchecked i
														val K_unchecked 1
													code
														inv !if
															inv !and
																inv !lt
																	val K_unchecked i
																	inv !lookup
																		val K_unchecked RE_Subexpressions
																		val K_unchecked 10
																inv !ge
																	inv !lookup
																		inv !lookup
																			val K_unchecked RE_Subexpressions
																			val K_unchecked i
																		val K_unchecked RE_DATA1
																	val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked ch
																	val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked rv
															inv TEXT_TY_RE_ParseAtPosition
																val K_unchecked ftxt
																val K_unchecked txt
																val K_unchecked ipos
																val K_unchecked ito
																inv !lookup
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_DOWN
																val K_unchecked mode_flags
														inv !if
															inv !ge
																val K_unchecked rv
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked ch
																	val K_unchecked 1
												inv !if
													val K_unchecked TEXT_TY_RE_Trace
													code
														inv !print
															val K_unchecked "Condition found to be "
														inv !printnumber
															val K_unchecked ch
														inv !print
															val K_unchecked "\n"
												inv !ifelse
													val K_unchecked ch
													code
														inv !store
															reference
																val K_unchecked rv
															inv TEXT_TY_RE_ParseAtPosition
																val K_unchecked ftxt
																val K_unchecked txt
																val K_unchecked ipos
																val K_unchecked ito
																inv !lookup
																	inv !lookup
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DOWN
																		val K_unchecked RE_NEXT
																	val K_unchecked RE_DOWN
																val K_unchecked mode_flags
													code
														inv !ifelse
															inv !eq
																inv !lookup
																	inv !lookup
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DOWN
																		val K_unchecked RE_NEXT
																	val K_unchecked RE_NEXT
																val K_unchecked plug_00232
															code
																inv !store
																	reference
																		val K_unchecked rv
																	val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked rv
																	inv TEXT_TY_RE_ParseAtPosition
																		val K_unchecked ftxt
																		val K_unchecked txt
																		val K_unchecked ipos
																		val K_unchecked ito
																		inv !lookup
																			inv !lookup
																				inv !lookup
																					inv !lookup
																						val K_unchecked token
																						val K_unchecked RE_DOWN
																					val K_unchecked RE_NEXT
																				val K_unchecked RE_NEXT
																			val K_unchecked RE_DOWN
																		val K_unchecked mode_flags
												inv !if
													inv !ge
														val K_unchecked rv
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !store
															reference
																val K_unchecked ipos
															inv !plus
																val K_unchecked ipos
																val K_unchecked rv
										inv !case
											val K_unchecked DISJUNCTION_RE_CC
											code
												inv !if
													val K_unchecked TEXT_TY_RE_Trace
													code
														inv !print
															val K_unchecked "Trying disjunction from "
														inv !printnumber
															val K_unchecked ipos
														inv !print
															val K_unchecked ": "
														inv TEXT_TY_RE_DebugNode
															val K_unchecked token
															val K_unchecked ftxt
															val K_unchecked 1
												inv !for
													inv !store
														reference
															val K_unchecked ch
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_DOWN
													inv !ne
														val K_unchecked ch
														val K_unchecked plug_00232
													inv !store
														reference
															val K_unchecked ch
														inv !lookup
															val K_unchecked ch
															val K_unchecked RE_NEXT
													code
														inv !if
															inv !le
																inv !lookup
																	val K_unchecked ch
																	val K_unchecked RE_PAR1
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_CONSTRAINT
															code
																inv !continue
														inv !if
															val K_unchecked TEXT_TY_RE_Trace
															code
																inv !print
																	val K_unchecked "Trying choice at "
																inv !printnumber
																	val K_unchecked ipos
																inv !print
																	val K_unchecked ": "
																inv TEXT_TY_RE_DebugNode
																	val K_unchecked ch
																	val K_unchecked ftxt
																	val K_unchecked 1
														inv !store
															reference
																val K_unchecked rv
															inv TEXT_TY_RE_ParseAtPosition
																val K_unchecked ftxt
																val K_unchecked txt
																val K_unchecked ipos
																val K_unchecked ito
																inv !lookup
																	val K_unchecked ch
																	val K_unchecked RE_DOWN
																val K_unchecked mode_flags
														inv !ifelse
															inv !ge
																val K_unchecked rv
																val K_unchecked 0
															code
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DATA1
																	val K_unchecked ipos
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DATA2
																	inv !lookup
																		val K_unchecked ch
																		val K_unchecked RE_PAR1
																inv !store
																	reference
																		val K_unchecked ipos
																	inv !plus
																		val K_unchecked ipos
																		val K_unchecked rv
																inv !store
																	reference
																		val K_unchecked outcome
																	val K_unchecked 1
																inv !if
																	val K_unchecked TEXT_TY_RE_Trace
																	code
																		inv !print
																			val K_unchecked "Choice worked with width "
																		inv !printnumber
																			val K_unchecked rv
																		inv !print
																			val K_unchecked ": "
																		inv TEXT_TY_RE_DebugNode
																			val K_unchecked ch
																			val K_unchecked ftxt
																			val K_unchecked 1
																inv !break
															code
																inv !if
																	inv !eq
																		inv !bitwiseand
																			val K_unchecked mode_flags
																			val K_unchecked ACCUM_MFLAG
																		val K_unchecked 0
																	code
																		inv TEXT_TY_RE_FailSubexpressions
																			inv !lookup
																				val K_unchecked ch
																				val K_unchecked RE_DOWN
												inv !if
													inv !eq
														val K_unchecked outcome
														val K_unchecked 0
													code
														inv !if
															val K_unchecked TEXT_TY_RE_Trace
															code
																inv !print
																	val K_unchecked "Failed disjunction from "
																inv !printnumber
																	val K_unchecked ipos
																inv !print
																	val K_unchecked ": "
																inv TEXT_TY_RE_DebugNode
																	val K_unchecked token
																	val K_unchecked ftxt
																	val K_unchecked 1
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DATA1
															val K_unchecked ipos
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DATA2
															val K_unchecked -1
										inv !case
											val K_unchecked SUBEXP_RE_CC
											code
												inv !ifelse
													inv !eq
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR2
														inv !alternative
															val K_unchecked 1
															val K_unchecked 2
													code
														inv !store
															reference
																val K_unchecked npos
															inv !minus
																val K_unchecked ipos
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_PAR3
														inv !ifelse
															inv !lt
																val K_unchecked npos
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked rv
																	val K_unchecked -1
															code
																inv !store
																	reference
																		val K_unchecked rv
																	inv TEXT_TY_RE_ParseAtPosition
																		val K_unchecked ftxt
																		val K_unchecked txt
																		val K_unchecked npos
																		val K_unchecked ito
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DOWN
																		val K_unchecked mode_flags
													code
														inv !switch
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR3
															code
																inv !case
																	val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked rv
																			inv TEXT_TY_RE_ParseAtPosition
																				val K_unchecked ftxt
																				val K_unchecked txt
																				val K_unchecked ipos
																				val K_unchecked ito
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DOWN
																				val K_unchecked mode_flags
																inv !case
																	val K_unchecked 1
																	code
																		inv !store
																			reference
																				val K_unchecked rv
																			inv TEXT_TY_RE_ParseAtPosition
																				val K_unchecked ftxt
																				val K_unchecked txt
																				val K_unchecked ipos
																				val K_unchecked ito
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DOWN
																				inv !bitwiseand
																					val K_unchecked mode_flags
																					inv !bitwisenot
																						val K_unchecked CIS_MFLAG
																inv !case
																	val K_unchecked 2
																	code
																		inv !store
																			reference
																				val K_unchecked rv
																			inv TEXT_TY_RE_ParseAtPosition
																				val K_unchecked ftxt
																				val K_unchecked txt
																				val K_unchecked ipos
																				val K_unchecked ito
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DOWN
																				inv !bitwiseor
																					val K_unchecked mode_flags
																					val K_unchecked CIS_MFLAG
												inv !store
													reference
														val K_unchecked npos
													val K_unchecked ipos
												inv !if
													inv !ge
														val K_unchecked rv
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked npos
															inv !plus
																val K_unchecked ipos
																val K_unchecked rv
												inv !switch
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_PAR2
													code
														inv !case
															val K_unchecked 1
															code
																inv !if
																	inv !ge
																		val K_unchecked rv
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked rv
																			val K_unchecked 0
														inv !case
															val K_unchecked 2
															code
																inv !ifelse
																	inv !ge
																		val K_unchecked rv
																		val K_unchecked 0
																	code
																		inv !store
																			reference
																				val K_unchecked rv
																			val K_unchecked -1
																	code
																		inv !store
																			reference
																				val K_unchecked rv
																			val K_unchecked 0
												inv !ifelse
													inv !ge
														val K_unchecked rv
														val K_unchecked 0
													code
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DATA1
															val K_unchecked ipos
														inv !store
															reference
																val K_unchecked ipos
															inv !plus
																val K_unchecked ipos
																val K_unchecked rv
														inv !store
															reference
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DATA2
															val K_unchecked npos
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
													code
														inv !if
															inv !eq
																inv !bitwiseand
																	val K_unchecked mode_flags
																	val K_unchecked ACCUM_MFLAG
																val K_unchecked 0
															code
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DATA1
																	val K_unchecked -1
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DATA2
																	val K_unchecked -1
												inv !if
													inv !eq
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR2
														val K_unchecked 2
													code
														inv TEXT_TY_RE_FailSubexpressions
															val K_unchecked token
															val K_unchecked 1
										inv !case
											val K_unchecked QUANTIFIER_RE_CC
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_DATA1
													val K_unchecked ipos
												inv !if
													inv !eq
														inv !lookup
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_DOWN
															val K_unchecked RE_CCLASS
														val K_unchecked SUBEXP_RE_CC
													code
														inv !store
															reference
																inv !lookup
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_CACHE1
															val K_unchecked -1
														inv !store
															reference
																inv !lookup
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_CACHE2
															val K_unchecked -1
												inv !if
													val K_unchecked TEXT_TY_RE_Trace
													code
														inv !print
															val K_unchecked "Trying quantifier from "
														inv !printnumber
															val K_unchecked ipos
														inv !print
															val K_unchecked ": "
														inv TEXT_TY_RE_DebugNode
															val K_unchecked token
															val K_unchecked ftxt
															val K_unchecked 1
												inv !ifelse
													inv !eq
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR3
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked edge
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR2
														inv !if
															inv !ge
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_CONSTRAINT
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked edge
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_CONSTRAINT
														inv !store
															reference
																val K_unchecked rv
															val K_unchecked -1
														inv !for
															inv !sequential
																inv !store
																	reference
																		val K_unchecked i
																	val K_unchecked 0
																inv !store
																	reference
																		val K_unchecked npos
																	val K_unchecked ipos
															inv !lt
																val K_unchecked i
																val K_unchecked edge
															inv !postincrement
																reference
																	val K_unchecked i
															code
																inv !if
																	val K_unchecked TEXT_TY_RE_Trace
																	code
																		inv !print
																			val K_unchecked "Trying quant rep "
																		inv !printnumber
																			inv !plus
																				val K_unchecked i
																				val K_unchecked 1
																		inv !print
																			val K_unchecked " at "
																		inv !printnumber
																			val K_unchecked npos
																		inv !print
																			val K_unchecked ": "
																		inv TEXT_TY_RE_DebugNode
																			val K_unchecked token
																			val K_unchecked ftxt
																			val K_unchecked 1
																inv !store
																	reference
																		val K_unchecked rv
																	inv TEXT_TY_RE_ParseAtPosition
																		val K_unchecked ftxt
																		val K_unchecked txt
																		val K_unchecked npos
																		val K_unchecked ito
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DOWN
																		inv !bitwiseor
																			val K_unchecked mode_flags
																			val K_unchecked ACCUM_MFLAG
																inv !if
																	inv !lt
																		val K_unchecked rv
																		val K_unchecked 0
																	code
																		inv !break
																inv !if
																	inv !eq
																		inv !lookup
																			inv !lookup
																				val K_unchecked token
																				val K_unchecked RE_DOWN
																			val K_unchecked RE_CCLASS
																		val K_unchecked SUBEXP_RE_CC
																	code
																		inv !store
																			reference
																				inv !lookup
																					inv !lookup
																						val K_unchecked token
																						val K_unchecked RE_DOWN
																					val K_unchecked RE_CACHE1
																			inv !lookup
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DOWN
																				val K_unchecked RE_DATA1
																		inv !store
																			reference
																				inv !lookup
																					inv !lookup
																						val K_unchecked token
																						val K_unchecked RE_DOWN
																					val K_unchecked RE_CACHE2
																			inv !lookup
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DOWN
																				val K_unchecked RE_DATA2
																inv !if
																	inv !and
																		inv !and
																			inv !eq
																				val K_unchecked rv
																				val K_unchecked 0
																			inv !eq
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_PAR2
																				val K_unchecked 30000
																		inv !ge
																			val K_unchecked i
																			val K_unchecked 1
																	code
																		inv !postincrement
																			reference
																				val K_unchecked i
																		inv !break
																inv !store
																	reference
																		val K_unchecked npos
																	inv !plus
																		val K_unchecked npos
																		val K_unchecked rv
														inv !if
															inv !and
																inv !ge
																	val K_unchecked i
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_PAR1
																inv !le
																	val K_unchecked i
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_PAR2
															code
																inv !store
																	reference
																		val K_unchecked outcome
																	val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked edge
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR1
														inv !if
															inv !gt
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_CONSTRAINT
																val K_unchecked edge
															code
																inv !store
																	reference
																		val K_unchecked edge
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_CONSTRAINT
														inv !for
															inv !sequential
																inv !store
																	reference
																		val K_unchecked i
																	val K_unchecked 0
																inv !store
																	reference
																		val K_unchecked npos
																	val K_unchecked ipos
															inv !and
																inv !lt
																	val K_unchecked npos
																	val K_unchecked ito
																inv !lt
																	val K_unchecked i
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_PAR2
															inv !postincrement
																reference
																	val K_unchecked i
															code
																inv !if
																	inv !ge
																		val K_unchecked i
																		val K_unchecked edge
																	code
																		inv !break
																inv !if
																	val K_unchecked TEXT_TY_RE_Trace
																	code
																		inv !print
																			val K_unchecked "Trying quant rep "
																		inv !printnumber
																			inv !plus
																				val K_unchecked i
																				val K_unchecked 1
																		inv !print
																			val K_unchecked " at "
																		inv !printnumber
																			val K_unchecked npos
																		inv !print
																			val K_unchecked ": "
																		inv TEXT_TY_RE_DebugNode
																			val K_unchecked token
																			val K_unchecked ftxt
																			val K_unchecked 1
																inv !store
																	reference
																		val K_unchecked rv
																	inv TEXT_TY_RE_ParseAtPosition
																		val K_unchecked ftxt
																		val K_unchecked txt
																		val K_unchecked npos
																		val K_unchecked ito
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DOWN
																		inv !bitwiseor
																			val K_unchecked mode_flags
																			val K_unchecked ACCUM_MFLAG
																inv !if
																	inv !lt
																		val K_unchecked rv
																		val K_unchecked 0
																	code
																		inv !break
																inv !if
																	inv !eq
																		inv !lookup
																			inv !lookup
																				val K_unchecked token
																				val K_unchecked RE_DOWN
																			val K_unchecked RE_CCLASS
																		val K_unchecked SUBEXP_RE_CC
																	code
																		inv !store
																			reference
																				inv !lookup
																					inv !lookup
																						val K_unchecked token
																						val K_unchecked RE_DOWN
																					val K_unchecked RE_CACHE1
																			inv !lookup
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DOWN
																				val K_unchecked RE_DATA1
																		inv !store
																			reference
																				inv !lookup
																					inv !lookup
																						val K_unchecked token
																						val K_unchecked RE_DOWN
																					val K_unchecked RE_CACHE2
																			inv !lookup
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DOWN
																				val K_unchecked RE_DATA2
																inv !if
																	inv !and
																		inv !and
																			inv !eq
																				val K_unchecked rv
																				val K_unchecked 0
																			inv !eq
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_PAR2
																				val K_unchecked 30000
																		inv !ge
																			val K_unchecked i
																			val K_unchecked 1
																	code
																		inv !postincrement
																			reference
																				val K_unchecked i
																		inv !break
																inv !store
																	reference
																		val K_unchecked npos
																	inv !plus
																		val K_unchecked npos
																		val K_unchecked rv
														inv !if
															inv !and
																inv !ge
																	val K_unchecked i
																	val K_unchecked edge
																inv !le
																	val K_unchecked i
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_PAR2
															code
																inv !store
																	reference
																		val K_unchecked outcome
																	val K_unchecked 1
												inv !ifelse
													val K_unchecked outcome
													code
														inv !ifelse
															inv !eq
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_PAR3
																val K_unchecked 0
															code
																inv !ifelse
																	inv !gt
																		val K_unchecked i
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_PAR1
																	code
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DATA2
																			inv !minus
																				val K_unchecked i
																				val K_unchecked 1
																	code
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DATA2
																			val K_unchecked -1
															code
																inv !ifelse
																	inv !lt
																		val K_unchecked i
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_PAR2
																	code
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DATA2
																			inv !plus
																				val K_unchecked i
																				val K_unchecked 1
																	code
																		inv !store
																			reference
																				inv !lookup
																					val K_unchecked token
																					val K_unchecked RE_DATA2
																			val K_unchecked -1
														inv !store
															reference
																val K_unchecked ipos
															val K_unchecked npos
														inv !if
															inv !and
																inv !eq
																	val K_unchecked i
																	val K_unchecked 0
																inv !eq
																	inv !bitwiseand
																		val K_unchecked mode_flags
																		val K_unchecked ACCUM_MFLAG
																	val K_unchecked 0
															code
																inv TEXT_TY_RE_FailSubexpressions
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DOWN
														inv !if
															inv !eq
																inv !lookup
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DOWN
																	val K_unchecked RE_CCLASS
																val K_unchecked SUBEXP_RE_CC
															code
																inv !store
																	reference
																		inv !lookup
																			inv !lookup
																				val K_unchecked token
																				val K_unchecked RE_DOWN
																			val K_unchecked RE_DATA1
																	inv !lookup
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DOWN
																		val K_unchecked RE_CACHE1
																inv !store
																	reference
																		inv !lookup
																			inv !lookup
																				val K_unchecked token
																				val K_unchecked RE_DOWN
																			val K_unchecked RE_DATA2
																	inv !lookup
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_DOWN
																		val K_unchecked RE_CACHE2
														inv !if
															val K_unchecked TEXT_TY_RE_Trace
															code
																inv !print
																	val K_unchecked "Successful quant reps "
																inv !printnumber
																	val K_unchecked i
																inv !print
																	val K_unchecked ": "
																inv TEXT_TY_RE_DebugNode
																	val K_unchecked token
																	val K_unchecked ftxt
																	val K_unchecked 1
													code
														inv !if
															inv !eq
																inv !bitwiseand
																	val K_unchecked mode_flags
																	val K_unchecked ACCUM_MFLAG
																val K_unchecked 0
															code
																inv TEXT_TY_RE_FailSubexpressions
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DOWN
														inv !if
															val K_unchecked TEXT_TY_RE_Trace
															code
																inv !print
																	val K_unchecked "Failed quant reps "
																inv !printnumber
																	val K_unchecked i
																inv !print
																	val K_unchecked ": "
																inv TEXT_TY_RE_DebugNode
																	val K_unchecked token
																	val K_unchecked ftxt
																	val K_unchecked 1
										inv !case
											val K_unchecked NOTHING_RE_CC
											code
										inv !case
											val K_unchecked ANYTHING_RE_CC
											code
												inv !if
													val K_unchecked ch
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
												inv !postincrement
													reference
														val K_unchecked ipos
										inv !case
											val K_unchecked WHITESPACE_RE_CC
											code
												inv !if
													inv !eq
														val K_unchecked ch
														inv !alternative
															inv !alternative
																inv !alternative
																	val K_unchecked 10
																	val K_unchecked 13
																val K_unchecked 32
															val K_unchecked 9
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked NONWHITESPACE_RE_CC
											code
												inv !if
													inv !and
														val K_unchecked ch
														inv !ne
															val K_unchecked ch
															inv !alternative
																inv !alternative
																	inv !alternative
																		val K_unchecked 10
																		val K_unchecked 13
																	val K_unchecked 32
																val K_unchecked 9
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked PUNCTUATION_RE_CC
											code
												inv !if
													inv !eq
														val K_unchecked ch
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												val K_unchecked 46
																												val K_unchecked 44
																											val K_unchecked 33
																										val K_unchecked 63
																									val K_unchecked 45
																								val K_unchecked 47
																							val K_unchecked 34
																						val K_unchecked 58
																					val K_unchecked 59
																				val K_unchecked 40
																			val K_unchecked 41
																		val K_unchecked 91
																	val K_unchecked 93
																val K_unchecked 123
															val K_unchecked 125
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked NONPUNCTUATION_RE_CC
											code
												inv !if
													inv !and
														val K_unchecked ch
														inv !ne
															val K_unchecked ch
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													val K_unchecked 46
																													val K_unchecked 44
																												val K_unchecked 33
																											val K_unchecked 63
																										val K_unchecked 45
																									val K_unchecked 47
																								val K_unchecked 34
																							val K_unchecked 58
																						val K_unchecked 59
																					val K_unchecked 40
																				val K_unchecked 41
																			val K_unchecked 91
																		val K_unchecked 93
																	val K_unchecked 123
																val K_unchecked 125
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked WORD_RE_CC
											code
												inv !if
													inv !and
														val K_unchecked ch
														inv !ne
															val K_unchecked ch
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	val K_unchecked 10
																																	val K_unchecked 13
																																val K_unchecked 32
																															val K_unchecked 9
																														val K_unchecked 46
																													val K_unchecked 44
																												val K_unchecked 33
																											val K_unchecked 63
																										val K_unchecked 45
																									val K_unchecked 47
																								val K_unchecked 34
																							val K_unchecked 58
																						val K_unchecked 59
																					val K_unchecked 40
																				val K_unchecked 41
																			val K_unchecked 91
																		val K_unchecked 93
																	val K_unchecked 123
																val K_unchecked 125
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked NONWORD_RE_CC
											code
												inv !if
													inv !eq
														val K_unchecked ch
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																val K_unchecked 10
																																val K_unchecked 13
																															val K_unchecked 32
																														val K_unchecked 9
																													val K_unchecked 46
																												val K_unchecked 44
																											val K_unchecked 33
																										val K_unchecked 63
																									val K_unchecked 45
																								val K_unchecked 47
																							val K_unchecked 34
																						val K_unchecked 58
																					val K_unchecked 59
																				val K_unchecked 40
																			val K_unchecked 41
																		val K_unchecked 91
																	val K_unchecked 93
																val K_unchecked 123
															val K_unchecked 125
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked DIGIT_RE_CC
											code
												inv !if
													inv !eq
														val K_unchecked ch
														inv !alternative
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							val K_unchecked 48
																							val K_unchecked 49
																						val K_unchecked 50
																					val K_unchecked 51
																				val K_unchecked 52
																			val K_unchecked 53
																		val K_unchecked 54
																	val K_unchecked 55
																val K_unchecked 56
															val K_unchecked 57
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked NONDIGIT_RE_CC
											code
												inv !if
													inv !and
														val K_unchecked ch
														inv !ne
															val K_unchecked ch
															inv !alternative
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								val K_unchecked 48
																								val K_unchecked 49
																							val K_unchecked 50
																						val K_unchecked 51
																					val K_unchecked 52
																				val K_unchecked 53
																			val K_unchecked 54
																		val K_unchecked 55
																	val K_unchecked 56
																val K_unchecked 57
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked LCASE_RE_CC
											code
												inv !if
													inv CharIsOfCase
														val K_unchecked ch
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked NONLCASE_RE_CC
											code
												inv !if
													inv !and
														val K_unchecked ch
														inv !eq
															inv CharIsOfCase
																val K_unchecked ch
																val K_unchecked 0
															val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked UCASE_RE_CC
											code
												inv !if
													inv CharIsOfCase
														val K_unchecked ch
														val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked NONUCASE_RE_CC
											code
												inv !if
													inv !and
														val K_unchecked ch
														inv !eq
															inv CharIsOfCase
																val K_unchecked ch
																val K_unchecked 1
															val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked NEWLINE_RE_CC
											code
												inv !if
													inv !eq
														val K_unchecked ch
														val K_unchecked 10
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked TAB_RE_CC
											code
												inv !if
													inv !eq
														val K_unchecked ch
														val K_unchecked 9
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked RANGE_RE_CC
											code
												inv !if
													inv TEXT_TY_RE_Range
														val K_unchecked ch
														val K_unchecked ftxt
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR1
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR2
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR3
														inv !bitwiseand
															val K_unchecked mode_flags
															val K_unchecked CIS_MFLAG
													code
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
														inv !postincrement
															reference
																val K_unchecked ipos
										inv !case
											val K_unchecked LITERAL_RE_CC
											code
												inv !store
													reference
														val K_unchecked rv
													inv TEXT_TY_RE_MatchSubstring
														val K_unchecked txt
														val K_unchecked ipos
														val K_unchecked ftxt
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR1
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_PAR2
														inv !bitwiseand
															val K_unchecked mode_flags
															val K_unchecked CIS_MFLAG
												inv !if
													inv !ge
														val K_unchecked rv
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked ipos
															inv !plus
																val K_unchecked ipos
																val K_unchecked rv
														inv !store
															reference
																val K_unchecked outcome
															val K_unchecked 1
										inv !case
											val K_unchecked VARIABLE_RE_CC
											code
												inv !store
													reference
														val K_unchecked i
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_PAR1
												inv !if
													inv !ge
														inv !lookup
															inv !lookup
																val K_unchecked RE_Subexpressions
																val K_unchecked i
															val K_unchecked RE_DATA1
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked rv
															inv TEXT_TY_RE_MatchSubstring
																val K_unchecked txt
																val K_unchecked ipos
																val K_unchecked txt
																inv !lookup
																	inv !lookup
																		val K_unchecked RE_Subexpressions
																		val K_unchecked i
																	val K_unchecked RE_DATA1
																inv !lookup
																	inv !lookup
																		val K_unchecked RE_Subexpressions
																		val K_unchecked i
																	val K_unchecked RE_DATA2
																inv !bitwiseand
																	val K_unchecked mode_flags
																	val K_unchecked CIS_MFLAG
														inv !if
															inv !ge
																val K_unchecked rv
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked ipos
																	inv !plus
																		val K_unchecked ipos
																		val K_unchecked rv
																inv !store
																	reference
																		val K_unchecked outcome
																	val K_unchecked 1
												.NeverMatchIncompleteVar
								inv !if
									inv !eq
										val K_unchecked outcome
										val K_unchecked 0
									code
										inv !if
											inv !ge
												inv !postincrement
													reference
														val K_unchecked TEXT_TY_RE_RewindCount
												val K_unchecked 10000
											code
												inv !if
													inv !eq
														val K_unchecked TEXT_TY_RE_RewindCount
														val K_unchecked 10001
													code
														inv !stylebold
														inv !print
															val K_unchecked "OVERFLOW\n"
														inv !styleroman
												inv !return
													inv !unaryminus
														val K_unchecked 1
										inv !if
											val K_unchecked TEXT_TY_RE_Trace
											code
												inv !print
													val K_unchecked "Rewind sought from failure at pos "
												inv !printnumber
													val K_unchecked ipos
												inv !print
													val K_unchecked " with: "
												inv TEXT_TY_RE_DebugNode
													val K_unchecked token
													val K_unchecked ftxt
													val K_unchecked 1
										inv !if
											inv !and
												inv !eq
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_CCLASS
													val K_unchecked QUANTIFIER_RE_CC
												inv TEXT_TY_RE_SeekBacktrack
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_DOWN
													val K_unchecked ftxt
													val K_unchecked 0
													val K_unchecked ito
													val K_unchecked 0
											code
												inv !jump
													lab .RewindFound
										inv !if
											inv !eq
												inv !bitwiseand
													val K_unchecked mode_flags
													val K_unchecked ACCUM_MFLAG
												val K_unchecked 0
											code
												inv TEXT_TY_RE_FailSubexpressions
													val K_unchecked token
										inv !store
											reference
												val K_unchecked token
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_PREVIOUS
										inv !while
											inv !ne
												val K_unchecked token
												val K_unchecked plug_00232
											code
												inv !if
													inv TEXT_TY_RE_SeekBacktrack
														val K_unchecked token
														val K_unchecked ftxt
														val K_unchecked 1
														val K_unchecked ito
														val K_unchecked 0
													code
														.RewindFound
														inv !store
															reference
																val K_unchecked ipos
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_DATA1
														inv !store
															reference
																val K_unchecked mode_flags
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_MODES
														inv !if
															inv !eq
																inv !bitwiseand
																	val K_unchecked mode_flags
																	val K_unchecked ACCUM_MFLAG
																val K_unchecked 0
															code
																inv TEXT_TY_RE_FailSubexpressions
																	val K_unchecked token
																	val K_unchecked 1
														inv !if
															inv !eq
																val K_unchecked ipos
																val K_unchecked -1
															code
																inv TEXT_TY_RE_DebugTree
																	val K_unchecked ftxt
																	val K_unchecked 1
														inv !if
															val K_unchecked TEXT_TY_RE_Trace
															code
																inv !print
																	val K_unchecked " ["
																inv !printnumber
																	val K_unchecked ifrom
																inv !print
																	val K_unchecked ","
																inv !printnumber
																	val K_unchecked ito
																inv !print
																	val K_unchecked "] rewinding to "
																inv !printnumber
																	val K_unchecked ipos
																inv !print
																	val K_unchecked " at "
																inv TEXT_TY_RE_DebugNode
																	val K_unchecked token
																	val K_unchecked ftxt
																	val K_unchecked 1
														inv !jump
															lab .Rewind
												inv !store
													reference
														val K_unchecked token
													inv !lookup
														val K_unchecked token
														val K_unchecked RE_PREVIOUS
										inv !if
											val K_unchecked TEXT_TY_RE_Trace
											code
												inv !print
													val K_unchecked " Rewind impossible\n"
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !store
									reference
										val K_unchecked token
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_NEXT
						inv !return
							inv !minus
								val K_unchecked ipos
								val K_unchecked ifrom
				constant TEXT_TY_RE_ParseAtPosition K_unchecked_function = TEXT_TY_RE_ParseAtPosition_B __assimilated=1
			package TEXT_TY_RE_SeekBacktrack_fn _function
				symbol public misc TEXT_TY_RE_SeekBacktrack
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_SeekBacktrack_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ftxt
					symbol private misc downwards
					symbol private misc ito
					symbol private misc report_only
					symbol private misc untried
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc plug_00511 --> /main/template/variables/TEXT_TY_RE_Trace_var/TEXT_TY_RE_Trace
					symbol external misc TEXT_TY_RE_DebugNode --> /main/template/functions/TEXT_TY_RE_DebugNode_fn/TEXT_TY_RE_DebugNode
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc TEXT_TY_RE_SeekBacktrack --> /main/template/functions/TEXT_TY_RE_SeekBacktrack_fn/TEXT_TY_RE_SeekBacktrack
					symbol external misc DISJUNCTION_RE_CC --> /main/template/constants/DISJUNCTION_RE_CC_con/DISJUNCTION_RE_CC
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
					symbol external misc RE_CONSTRAINT --> /main/template/constants/RE_CONSTRAINT_con/RE_CONSTRAINT
					symbol external misc QUANTIFIER_RE_CC --> /main/template/constants/QUANTIFIER_RE_CC_con/QUANTIFIER_RE_CC
					symbol external misc TEXT_TY_RE_EraseConstraints --> /main/template/functions/TEXT_TY_RE_EraseConstraints_fn/TEXT_TY_RE_EraseConstraints
					local token K_unchecked
					local ftxt K_unchecked
					local downwards K_unchecked
					local ito K_unchecked
					local report_only K_unchecked
					local untried K_unchecked
					code
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked token
								inv !lookup
									val K_unchecked token
									val K_unchecked RE_NEXT
							code
								inv !if
									inv !and
										val K_unchecked TEXT_TY_RE_Trace
										inv !eq
											val K_unchecked report_only
											val K_unchecked 0
									code
										inv !print
											val K_unchecked "Scan for rewind: "
										inv TEXT_TY_RE_DebugNode
											val K_unchecked token
											val K_unchecked ftxt
											val K_unchecked 1
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_CCLASS
											val K_unchecked SUBEXP_RE_CC
										inv !eq
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_PAR2
											inv !alternative
												inv !alternative
													val K_unchecked 1
													val K_unchecked 2
												val K_unchecked 4
									code
										inv !if
											val K_unchecked downwards
											code
												inv !return
													val K_unchecked 0
										inv !continue
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_DOWN
										val K_unchecked plug_00232
									code
										inv !if
											inv !and
												val K_unchecked TEXT_TY_RE_Trace
												inv !eq
													val K_unchecked report_only
													val K_unchecked 0
											code
												inv !print
													val K_unchecked "Descend\n"
										inv !if
											inv TEXT_TY_RE_SeekBacktrack
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_DOWN
												val K_unchecked ftxt
												val K_unchecked 0
												val K_unchecked ito
												val K_unchecked report_only
											code
												inv !return
													val K_unchecked 1
								inv !store
									reference
										val K_unchecked untried
									val K_unchecked 0
								inv !switch
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_CCLASS
									code
										inv !case
											val K_unchecked DISJUNCTION_RE_CC
											code
												inv !if
													inv !and
														inv !and
															inv !ge
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DATA2
																val K_unchecked 1
															inv !lt
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DATA2
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_PAR1
														inv !lt
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_CONSTRAINT
															inv !lookup
																val K_unchecked token
																val K_unchecked RE_PAR1
													code
														inv !if
															val K_unchecked report_only
															code
																inv !return
																	val K_unchecked 1
														inv !ifelse
															inv !eq
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_CONSTRAINT
																val K_unchecked -1
															code
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_CONSTRAINT
																	val K_unchecked 1
															code
																inv !postincrement
																	reference
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_CONSTRAINT
														inv !store
															reference
																val K_unchecked untried
															val K_unchecked 1
										inv !case
											val K_unchecked QUANTIFIER_RE_CC
											code
												inv !if
													inv !ne
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_CONSTRAINT
														val K_unchecked -2
													code
														inv !if
															inv !and
																val K_unchecked TEXT_TY_RE_Trace
																inv !eq
																	val K_unchecked report_only
																	val K_unchecked 0
															code
																inv !print
																	val K_unchecked "Quant with cons not -2: "
																inv TEXT_TY_RE_DebugNode
																	val K_unchecked token
																	val K_unchecked ftxt
																	val K_unchecked 1
														inv !if
															inv !ge
																inv !lookup
																	val K_unchecked token
																	val K_unchecked RE_DATA2
																val K_unchecked 0
															code
																inv !if
																	val K_unchecked report_only
																	code
																		inv !return
																			val K_unchecked 1
																inv !store
																	reference
																		inv !lookup
																			val K_unchecked token
																			val K_unchecked RE_CONSTRAINT
																	inv !lookup
																		val K_unchecked token
																		val K_unchecked RE_DATA2
																inv !store
																	reference
																		val K_unchecked untried
																	val K_unchecked 1
								inv !if
									val K_unchecked untried
									code
										inv !if
											val K_unchecked TEXT_TY_RE_Trace
											code
												inv !print
													val K_unchecked "Grounds for rewind at: "
												inv TEXT_TY_RE_DebugNode
													val K_unchecked token
													val K_unchecked ftxt
													val K_unchecked 1
										inv TEXT_TY_RE_EraseConstraints
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_NEXT
										inv TEXT_TY_RE_EraseConstraints
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_DOWN
										inv !return
											val K_unchecked 1
								inv !if
									val K_unchecked downwards
									code
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked 0
				constant TEXT_TY_RE_SeekBacktrack K_unchecked_function = TEXT_TY_RE_SeekBacktrack_B __assimilated=1
			package TEXT_TY_RE_FailSubexpressions_fn _function
				symbol public misc TEXT_TY_RE_FailSubexpressions
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_FailSubexpressions_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc downwards
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc TEXT_TY_RE_FailSubexpressions --> /main/template/functions/TEXT_TY_RE_FailSubexpressions_fn/TEXT_TY_RE_FailSubexpressions
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					local token K_unchecked
					local downwards K_unchecked
					code
						inv !for
							val K_unchecked 1
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							inv !store
								reference
									val K_unchecked token
								inv !lookup
									val K_unchecked token
									val K_unchecked RE_NEXT
							code
								inv !if
									inv !ne
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_DOWN
										val K_unchecked plug_00232
									code
										inv TEXT_TY_RE_FailSubexpressions
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_DOWN
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked token
											val K_unchecked RE_CCLASS
										val K_unchecked SUBEXP_RE_CC
									code
										inv !store
											reference
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_DATA1
											val K_unchecked -1
										inv !store
											reference
												inv !lookup
													val K_unchecked token
													val K_unchecked RE_DATA2
											val K_unchecked -1
								inv !if
									val K_unchecked downwards
									code
										inv !break
				constant TEXT_TY_RE_FailSubexpressions K_unchecked_function = TEXT_TY_RE_FailSubexpressions_B __assimilated=1
			package TEXT_TY_RE_EraseConstraints_fn _function
				symbol public misc TEXT_TY_RE_EraseConstraints
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_EraseConstraints_B _code
					symbol private misc token
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc plug_00232 --> /main/connectors/plug_00232
					symbol external misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
					symbol external misc DISJUNCTION_RE_CC --> /main/template/constants/DISJUNCTION_RE_CC_con/DISJUNCTION_RE_CC
					symbol external misc RE_CONSTRAINT --> /main/template/constants/RE_CONSTRAINT_con/RE_CONSTRAINT
					symbol external misc QUANTIFIER_RE_CC --> /main/template/constants/QUANTIFIER_RE_CC_con/QUANTIFIER_RE_CC
					symbol external misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
					symbol external misc TEXT_TY_RE_EraseConstraints --> /main/template/functions/TEXT_TY_RE_EraseConstraints_fn/TEXT_TY_RE_EraseConstraints
					symbol external misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
					local token K_unchecked
					code
						inv !while
							inv !ne
								val K_unchecked token
								val K_unchecked plug_00232
							code
								inv !switch
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_CCLASS
									code
										inv !case
											val K_unchecked DISJUNCTION_RE_CC
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_CONSTRAINT
													val K_unchecked -1
										inv !case
											val K_unchecked QUANTIFIER_RE_CC
											code
												inv !store
													reference
														inv !lookup
															val K_unchecked token
															val K_unchecked RE_CONSTRAINT
													val K_unchecked -1
								inv !if
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_DOWN
									code
										inv TEXT_TY_RE_EraseConstraints
											inv !lookup
												val K_unchecked token
												val K_unchecked RE_DOWN
								inv !store
									reference
										val K_unchecked token
									inv !lookup
										val K_unchecked token
										val K_unchecked RE_NEXT
				constant TEXT_TY_RE_EraseConstraints K_unchecked_function = TEXT_TY_RE_EraseConstraints_B __assimilated=1
			package TEXT_TY_RE_MatchSubstring_fn _function
				symbol public misc TEXT_TY_RE_MatchSubstring
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_MatchSubstring_B _code
					symbol private misc txt
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ipos
					symbol private misc mtxt
					symbol private misc mfrom
					symbol private misc mto
					symbol private misc insens
					symbol private misc i
					symbol private misc ch
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc TEXT_TY_RevCase --> /main/template/functions/TEXT_TY_RevCase_fn/TEXT_TY_RevCase
					local txt K_unchecked
					local ipos K_unchecked
					local mtxt K_unchecked
					local mfrom K_unchecked
					local mto K_unchecked
					local insens K_unchecked
					local i K_unchecked
					local ch K_unchecked
					code
						inv !if
							inv !lt
								val K_unchecked mfrom
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !ifelse
							val K_unchecked insens
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked mfrom
									inv !lt
										val K_unchecked i
										val K_unchecked mto
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked ch
											inv BlkValueRead
												val K_unchecked mtxt
												val K_unchecked i
										inv !if
											inv !ne
												inv BlkValueRead
													val K_unchecked txt
													inv !postincrement
														reference
															val K_unchecked ipos
												inv !alternative
													val K_unchecked ch
													inv TEXT_TY_RevCase
														val K_unchecked ch
											code
												inv !return
													inv !unaryminus
														val K_unchecked 1
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked mfrom
									inv !lt
										val K_unchecked i
										val K_unchecked mto
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !ne
												inv BlkValueRead
													val K_unchecked txt
													inv !postincrement
														reference
															val K_unchecked ipos
												inv BlkValueRead
													val K_unchecked mtxt
													val K_unchecked i
											code
												inv !return
													inv !unaryminus
														val K_unchecked 1
						inv !return
							inv !minus
								val K_unchecked mto
								val K_unchecked mfrom
				constant TEXT_TY_RE_MatchSubstring K_unchecked_function = TEXT_TY_RE_MatchSubstring_B __assimilated=1
			package TEXT_TY_RE_Range_fn _function
				symbol public misc TEXT_TY_RE_Range
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_Range_B _code
					symbol private misc ch
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ftxt
					symbol private misc rf
					symbol private misc rt
					symbol private misc negate
					symbol private misc insens
					symbol private misc i
					symbol private misc chm
					symbol private misc upper
					symbol private misc crev
					symbol external misc TEXT_TY_RE_Range --> /main/template/functions/TEXT_TY_RE_Range_fn/TEXT_TY_RE_Range
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc CharIsOfCase --> /main/template/functions/CharIsOfCase_fn/CharIsOfCase
					symbol external misc TEXT_TY_RevCase --> /main/template/functions/TEXT_TY_RevCase_fn/TEXT_TY_RevCase
					local ch K_unchecked
					local ftxt K_unchecked
					local rf K_unchecked
					local rt K_unchecked
					local negate K_unchecked
					local insens K_unchecked
					local i K_unchecked
					local chm K_unchecked
					local upper K_unchecked
					local crev K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked ch
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked negate
								val K_unchecked 1
							code
								inv !if
									inv TEXT_TY_RE_Range
										val K_unchecked ch
										val K_unchecked ftxt
										val K_unchecked rf
										val K_unchecked rt
										val K_unchecked 0
										val K_unchecked insens
									code
										inv !return
											val K_unchecked 0
								inv !return
									val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked rf
							inv !lt
								val K_unchecked i
								val K_unchecked rt
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked chm
									inv BlkValueRead
										val K_unchecked ftxt
										val K_unchecked i
								inv !ifelse
									inv !and
										inv !eq
											val K_unchecked chm
											val K_unchecked 92
										inv !lt
											inv !plus
												val K_unchecked i
												val K_unchecked 1
											val K_unchecked rt
									code
										inv !store
											reference
												val K_unchecked chm
											inv BlkValueRead
												val K_unchecked ftxt
												inv !preincrement
													reference
														val K_unchecked i
										inv !switch
											val K_unchecked chm
											code
												inv !case
													val K_unchecked 115
													code
														inv !if
															inv !eq
																val K_unchecked ch
																inv !alternative
																	inv !alternative
																		inv !alternative
																			val K_unchecked 10
																			val K_unchecked 13
																		val K_unchecked 32
																	val K_unchecked 9
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 83
													code
														inv !if
															inv !and
																val K_unchecked ch
																inv !ne
																	val K_unchecked ch
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				val K_unchecked 10
																				val K_unchecked 13
																			val K_unchecked 32
																		val K_unchecked 9
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 112
													code
														inv !if
															inv !eq
																val K_unchecked ch
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														val K_unchecked 46
																														val K_unchecked 44
																													val K_unchecked 33
																												val K_unchecked 63
																											val K_unchecked 45
																										val K_unchecked 47
																									val K_unchecked 34
																								val K_unchecked 58
																							val K_unchecked 59
																						val K_unchecked 40
																					val K_unchecked 41
																				val K_unchecked 91
																			val K_unchecked 93
																		val K_unchecked 123
																	val K_unchecked 125
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 80
													code
														inv !if
															inv !and
																val K_unchecked ch
																inv !ne
																	val K_unchecked ch
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															val K_unchecked 46
																															val K_unchecked 44
																														val K_unchecked 33
																													val K_unchecked 63
																												val K_unchecked 45
																											val K_unchecked 47
																										val K_unchecked 34
																									val K_unchecked 58
																								val K_unchecked 59
																							val K_unchecked 40
																						val K_unchecked 41
																					val K_unchecked 91
																				val K_unchecked 93
																			val K_unchecked 123
																		val K_unchecked 125
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 119
													code
														inv !if
															inv !and
																val K_unchecked ch
																inv !ne
																	val K_unchecked ch
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	inv !alternative
																																		inv !alternative
																																			val K_unchecked 10
																																			val K_unchecked 13
																																		val K_unchecked 32
																																	val K_unchecked 9
																																val K_unchecked 46
																															val K_unchecked 44
																														val K_unchecked 33
																													val K_unchecked 63
																												val K_unchecked 45
																											val K_unchecked 47
																										val K_unchecked 34
																									val K_unchecked 58
																								val K_unchecked 59
																							val K_unchecked 40
																						val K_unchecked 41
																					val K_unchecked 91
																				val K_unchecked 93
																			val K_unchecked 123
																		val K_unchecked 125
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 87
													code
														inv !if
															inv !eq
																val K_unchecked ch
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										inv !alternative
																											inv !alternative
																												inv !alternative
																													inv !alternative
																														inv !alternative
																															inv !alternative
																																inv !alternative
																																	inv !alternative
																																		val K_unchecked 10
																																		val K_unchecked 13
																																	val K_unchecked 32
																																val K_unchecked 9
																															val K_unchecked 46
																														val K_unchecked 44
																													val K_unchecked 33
																												val K_unchecked 63
																											val K_unchecked 45
																										val K_unchecked 47
																									val K_unchecked 34
																								val K_unchecked 58
																							val K_unchecked 59
																						val K_unchecked 40
																					val K_unchecked 41
																				val K_unchecked 91
																			val K_unchecked 93
																		val K_unchecked 123
																	val K_unchecked 125
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 100
													code
														inv !if
															inv !eq
																val K_unchecked ch
																inv !alternative
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									val K_unchecked 48
																									val K_unchecked 49
																								val K_unchecked 50
																							val K_unchecked 51
																						val K_unchecked 52
																					val K_unchecked 53
																				val K_unchecked 54
																			val K_unchecked 55
																		val K_unchecked 56
																	val K_unchecked 57
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 68
													code
														inv !if
															inv !and
																val K_unchecked ch
																inv !ne
																	val K_unchecked ch
																	inv !alternative
																		inv !alternative
																			inv !alternative
																				inv !alternative
																					inv !alternative
																						inv !alternative
																							inv !alternative
																								inv !alternative
																									inv !alternative
																										val K_unchecked 48
																										val K_unchecked 49
																									val K_unchecked 50
																								val K_unchecked 51
																							val K_unchecked 52
																						val K_unchecked 53
																					val K_unchecked 54
																				val K_unchecked 55
																			val K_unchecked 56
																		val K_unchecked 57
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 108
													code
														inv !if
															inv CharIsOfCase
																val K_unchecked ch
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 76
													code
														inv !if
															inv !eq
																inv CharIsOfCase
																	val K_unchecked ch
																	val K_unchecked 0
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 117
													code
														inv !if
															inv CharIsOfCase
																val K_unchecked ch
																val K_unchecked 1
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 85
													code
														inv !if
															inv !eq
																inv CharIsOfCase
																	val K_unchecked ch
																	val K_unchecked 1
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 110
													code
														inv !if
															inv !eq
																val K_unchecked ch
																val K_unchecked 10
															code
																inv !return
																	val K_unchecked 1
												inv !case
													val K_unchecked 116
													code
														inv !if
															inv !eq
																val K_unchecked ch
																val K_unchecked 9
															code
																inv !return
																	val K_unchecked 1
									code
										inv !ifelse
											inv !and
												inv !lt
													inv !plus
														val K_unchecked i
														val K_unchecked 2
													val K_unchecked rt
												inv !eq
													inv BlkValueRead
														val K_unchecked ftxt
														inv !plus
															val K_unchecked i
															val K_unchecked 1
													val K_unchecked 45
											code
												inv !store
													reference
														val K_unchecked upper
													inv BlkValueRead
														val K_unchecked ftxt
														inv !plus
															val K_unchecked i
															val K_unchecked 2
												inv !if
													inv !and
														inv !ge
															val K_unchecked ch
															val K_unchecked chm
														inv !le
															val K_unchecked ch
															val K_unchecked upper
													code
														inv !return
															val K_unchecked 1
												inv !if
													val K_unchecked insens
													code
														inv !store
															reference
																val K_unchecked crev
															inv TEXT_TY_RevCase
																val K_unchecked ch
														inv !if
															inv !and
																inv !ge
																	val K_unchecked crev
																	val K_unchecked chm
																inv !le
																	val K_unchecked crev
																	val K_unchecked upper
															code
																inv !return
																	val K_unchecked 1
												inv !store
													reference
														val K_unchecked i
													inv !plus
														val K_unchecked i
														val K_unchecked 2
											code
												inv !if
													inv !eq
														val K_unchecked chm
														val K_unchecked ch
													code
														inv !return
															val K_unchecked 1
												inv !if
													inv !and
														val K_unchecked insens
														inv !eq
															val K_unchecked chm
															inv TEXT_TY_RevCase
																val K_unchecked ch
													code
														inv !return
															val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant TEXT_TY_RE_Range K_unchecked_function = TEXT_TY_RE_Range_B __assimilated=1
			package TEXT_TY_Replace_RE_fn _function
				symbol public misc TEXT_TY_Replace_RE
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Replace_RE_B _code
					symbol private misc ftxtype
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc ftxt
					symbol private misc rtxt
					symbol private misc insens
					symbol private misc exactly
					symbol private misc r
					symbol private misc p
					symbol private misc p1
					symbol private misc p2
					symbol private misc cp
					symbol private misc cp1
					symbol private misc cp2
					symbol external misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc TEXT_TY_Replace_REI --> /main/template/functions/TEXT_TY_Replace_REI_fn/TEXT_TY_Replace_REI
					symbol external misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
					local ftxtype K_unchecked
					local txt K_unchecked
					local ftxt K_unchecked
					local rtxt K_unchecked
					local insens K_unchecked
					local exactly K_unchecked
					local r K_unchecked
					local p K_unchecked
					local p1 K_unchecked
					local p2 K_unchecked
					local cp K_unchecked
					local cp1 K_unchecked
					local cp2 K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked rtxt
								inv !alternative
									val K_unchecked 0
									val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked cp
									inv !lookup
										val K_unchecked txt
										val K_unchecked 0
								inv !store
									reference
										val K_unchecked p
									inv TEXT_TY_Temporarily_Transmute
										val K_unchecked txt
							code
								inv TEXT_TY_Transmute
									val K_unchecked txt
						inv !store
							reference
								val K_unchecked cp1
							inv !lookup
								val K_unchecked ftxt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p1
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked ftxt
						inv !store
							reference
								val K_unchecked cp2
							inv !lookup
								val K_unchecked rtxt
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked p2
							inv TEXT_TY_Temporarily_Transmute
								val K_unchecked rtxt
						inv !store
							reference
								val K_unchecked r
							inv TEXT_TY_Replace_REI
								val K_unchecked ftxtype
								val K_unchecked txt
								val K_unchecked ftxt
								val K_unchecked rtxt
								val K_unchecked insens
								val K_unchecked exactly
						inv TEXT_TY_Untransmute
							val K_unchecked ftxt
							val K_unchecked p1
							val K_unchecked cp1
						inv TEXT_TY_Untransmute
							val K_unchecked rtxt
							val K_unchecked p2
							val K_unchecked cp2
						inv !if
							inv !eq
								val K_unchecked rtxt
								inv !alternative
									val K_unchecked 0
									val K_unchecked 1
							code
								inv TEXT_TY_Untransmute
									val K_unchecked txt
									val K_unchecked p
									val K_unchecked cp
						inv !return
							val K_unchecked r
				constant TEXT_TY_Replace_RE K_unchecked_function = TEXT_TY_Replace_RE_B __assimilated=1
			package TEXT_TY_Replace_REI_fn _function
				symbol public misc TEXT_TY_Replace_REI
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_Replace_REI_B _code
					symbol private misc ftxtype
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol private misc ftxt
					symbol private misc rtxt
					symbol private misc insens
					symbol private misc exactly
					symbol private misc ctxt
					symbol private misc csize
					symbol private misc ilen
					symbol private misc i
					symbol private misc cl
					symbol private misc mpos
					symbol private misc cpos
					symbol private misc ch
					symbol private misc chm
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc plug_00513 --> /main/template/variables/TEXT_TY_RE_Err_var/TEXT_TY_RE_Err
					symbol external misc REGEXP_BLOB --> /main/template/constants/REGEXP_BLOB_con/REGEXP_BLOB
					symbol external misc TEXT_TY_RE_CompileTree --> /main/template/functions/TEXT_TY_RE_CompileTree_fn/TEXT_TY_RE_CompileTree
					symbol external misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
					symbol external misc TEXT_TY_CHR_CompileTree --> /main/template/functions/TEXT_TY_CHR_CompileTree_fn/TEXT_TY_CHR_CompileTree
					symbol external misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_REGEXPSYNTAXERROR --> /main/template/constants/RTP_REGEXPSYNTAXERROR_con/RTP_REGEXPSYNTAXERROR
					symbol external misc plug_00511 --> /main/template/variables/TEXT_TY_RE_Trace_var/TEXT_TY_RE_Trace
					symbol external misc TEXT_TY_RE_DebugTree --> /main/template/functions/TEXT_TY_RE_DebugTree_fn/TEXT_TY_RE_DebugTree
					symbol external misc TEXT_TY_RE_EmptyMatchVars --> /main/template/functions/TEXT_TY_RE_EmptyMatchVars_fn/TEXT_TY_RE_EmptyMatchVars
					symbol external misc TEXT_TY_RE_Parse --> /main/template/functions/TEXT_TY_RE_Parse_fn/TEXT_TY_RE_Parse
					symbol external misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc TEXT_TY_Concatenate --> /main/template/functions/TEXT_TY_Concatenate_fn/TEXT_TY_Concatenate
					symbol external misc TEXT_TY_RE_CreateMatchVars --> /main/template/functions/TEXT_TY_RE_CreateMatchVars_fn/TEXT_TY_RE_CreateMatchVars
					symbol external misc TEXT_TY_RE_DebugMatchVars --> /main/template/functions/TEXT_TY_RE_DebugMatchVars_fn/TEXT_TY_RE_DebugMatchVars
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					local ftxtype K_unchecked
					local txt K_unchecked
					local ftxt K_unchecked
					local rtxt K_unchecked
					local insens K_unchecked
					local exactly K_unchecked
					local ctxt K_unchecked
					local csize K_unchecked
					local ilen K_unchecked
					local i K_unchecked
					local cl K_unchecked
					local mpos K_unchecked
					local cpos K_unchecked
					local ch K_unchecked
					local chm K_unchecked
					code
						inv !store
							reference
								val K_unchecked ilen
							inv TEXT_TY_CharacterLength
								val K_unchecked txt
						inv !store
							reference
								val K_unchecked TEXT_TY_RE_Err
							val K_unchecked 0
						inv !switch
							val K_unchecked ftxtype
							code
								inv !case
									val K_unchecked REGEXP_BLOB
									code
										inv !store
											reference
												val K_unchecked i
											inv TEXT_TY_RE_CompileTree
												val K_unchecked ftxt
												val K_unchecked exactly
								inv !case
									val K_unchecked CHR_BLOB
									code
										inv !store
											reference
												val K_unchecked i
											inv TEXT_TY_CHR_CompileTree
												val K_unchecked ftxt
												val K_unchecked exactly
								inv !default
									code
										inv !printret
											val K_unchecked "*** bad ftxtype ***"
						inv !if
							inv !or
								inv !lt
									val K_unchecked i
									val K_unchecked 0
								inv !gt
									val K_unchecked i
									val K_unchecked RE_MAX_PACKETS
							code
								inv !store
									reference
										val K_unchecked TEXT_TY_RE_Err
									val K_unchecked i
								inv !print
									val K_unchecked "*** Regular expression error: "
								inv !printstring
									val K_unchecked TEXT_TY_RE_Err
								inv !print
									val K_unchecked " ***\n"
								inv RunTimeProblem
									val K_unchecked RTP_REGEXPSYNTAXERROR
								inv !return
									val K_unchecked 0
						inv !if
							val K_unchecked TEXT_TY_RE_Trace
							code
								inv TEXT_TY_RE_DebugTree
									val K_unchecked ftxt
								inv !print
									val K_unchecked "(compiled to "
								inv !printnumber
									val K_unchecked i
								inv !print
									val K_unchecked " packets)\n"
						inv !if
							inv !eq
								val K_unchecked ftxtype
								val K_unchecked REGEXP_BLOB
							code
								inv TEXT_TY_RE_EmptyMatchVars
						inv !store
							reference
								val K_unchecked mpos
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked chm
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked cpos
							val K_unchecked 0
						inv !while
							inv !ge
								inv TEXT_TY_RE_Parse
									val K_unchecked ftxt
									val K_unchecked txt
									val K_unchecked mpos
									val K_unchecked insens
								val K_unchecked 0
							code
								inv !postincrement
									reference
										val K_unchecked chm
								inv !if
									val K_unchecked TEXT_TY_RE_Trace
									code
										inv !print
											val K_unchecked " *** Match "
										inv !printnumber
											val K_unchecked chm
										inv !print
											val K_unchecked " found ("
										inv !printnumber
											inv !lookup
												val K_unchecked RE_PACKET_space
												val K_unchecked RE_DATA1
										inv !print
											val K_unchecked ","
										inv !printnumber
											inv !lookup
												val K_unchecked RE_PACKET_space
												val K_unchecked RE_DATA2
										inv !print
											val K_unchecked "): "
										inv !if
											inv !eq
												inv !lookup
													val K_unchecked RE_PACKET_space
													val K_unchecked RE_DATA1
												inv !lookup
													val K_unchecked RE_PACKET_space
													val K_unchecked RE_DATA2
											code
												inv !print
													val K_unchecked "<empty>"
										inv !for
											inv !store
												reference
													val K_unchecked i
												inv !lookup
													val K_unchecked RE_PACKET_space
													val K_unchecked RE_DATA1
											inv !lt
												val K_unchecked i
												inv !lookup
													val K_unchecked RE_PACKET_space
													val K_unchecked RE_DATA2
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !printchar
													inv BlkValueRead
														val K_unchecked txt
														val K_unchecked i
										inv !print
											val K_unchecked " ***\n"
								inv !if
									inv !eq
										val K_unchecked rtxt
										val K_unchecked 0
									code
										inv !break
								inv !if
									inv !ne
										val K_unchecked rtxt
										inv !alternative
											val K_unchecked 0
											val K_unchecked 1
									code
										inv !if
											inv !eq
												val K_unchecked chm
												val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked ctxt
													inv BlkValueCreate
														val K_unchecked plug_00342
												inv TEXT_TY_Transmute
													val K_unchecked ctxt
												inv !store
													reference
														val K_unchecked csize
													inv BlkValueLBCapacity
														val K_unchecked ctxt
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked cpos
											inv !lt
												val K_unchecked i
												inv !lookup
													val K_unchecked RE_PACKET_space
													val K_unchecked RE_DATA1
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														val K_unchecked ch
													inv BlkValueRead
														val K_unchecked txt
														val K_unchecked i
												inv !if
													inv !ge
														inv !plus
															val K_unchecked cl
															val K_unchecked 1
														val K_unchecked csize
													code
														inv !if
															inv !eq
																inv BlkValueSetLBCapacity
																	val K_unchecked ctxt
																	inv !times
																		val K_unchecked 2
																		val K_unchecked cl
																val K_unchecked 0
															code
																inv !break
														inv !store
															reference
																val K_unchecked csize
															inv BlkValueLBCapacity
																val K_unchecked ctxt
												inv BlkValueWrite
													val K_unchecked ctxt
													inv !postincrement
														reference
															val K_unchecked cl
													val K_unchecked ch
										inv BlkValueWrite
											val K_unchecked ctxt
											val K_unchecked cl
											val K_unchecked 0
										inv TEXT_TY_Concatenate
											val K_unchecked ctxt
											val K_unchecked rtxt
											val K_unchecked ftxtype
											val K_unchecked txt
										inv !store
											reference
												val K_unchecked csize
											inv BlkValueLBCapacity
												val K_unchecked ctxt
										inv !store
											reference
												val K_unchecked cl
											inv TEXT_TY_CharacterLength
												val K_unchecked ctxt
								inv !store
									reference
										val K_unchecked mpos
									inv !lookup
										val K_unchecked RE_PACKET_space
										val K_unchecked RE_DATA2
								inv !store
									reference
										val K_unchecked cpos
									val K_unchecked mpos
								inv !if
									inv !eq
										inv !lookup
											val K_unchecked RE_PACKET_space
											val K_unchecked RE_DATA1
										inv !lookup
											val K_unchecked RE_PACKET_space
											val K_unchecked RE_DATA2
									code
										inv !postincrement
											reference
												val K_unchecked mpos
								inv !if
									val K_unchecked TEXT_TY_RE_Trace
									code
										inv !if
											inv !eq
												val K_unchecked chm
												val K_unchecked 100
											code
												inv !print
													val K_unchecked "(Stopping after 100 matches.)\n"
												inv !break
						inv !if
							inv !gt
								val K_unchecked chm
								val K_unchecked 0
							code
								inv !if
									inv !ne
										val K_unchecked rtxt
										inv !alternative
											val K_unchecked 0
											val K_unchecked 1
									code
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked cpos
											inv !lt
												val K_unchecked i
												val K_unchecked ilen
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv !store
													reference
														val K_unchecked ch
													inv BlkValueRead
														val K_unchecked txt
														val K_unchecked i
												inv !if
													inv !ge
														inv !plus
															val K_unchecked cl
															val K_unchecked 1
														val K_unchecked csize
													code
														inv !if
															inv !eq
																inv BlkValueSetLBCapacity
																	val K_unchecked ctxt
																	inv !times
																		val K_unchecked 2
																		val K_unchecked cl
																val K_unchecked 0
															code
																inv !break
														inv !store
															reference
																val K_unchecked csize
															inv BlkValueLBCapacity
																val K_unchecked ctxt
												inv BlkValueWrite
													val K_unchecked ctxt
													inv !postincrement
														reference
															val K_unchecked cl
													val K_unchecked ch
								inv !if
									inv !eq
										val K_unchecked ftxtype
										val K_unchecked REGEXP_BLOB
									code
										inv TEXT_TY_RE_CreateMatchVars
											val K_unchecked txt
										inv !if
											val K_unchecked TEXT_TY_RE_Trace
											code
												inv TEXT_TY_RE_DebugMatchVars
													val K_unchecked txt
								inv !if
									inv !ne
										val K_unchecked rtxt
										inv !alternative
											val K_unchecked 0
											val K_unchecked 1
									code
										inv BlkValueWrite
											val K_unchecked ctxt
											val K_unchecked cl
											val K_unchecked 0
										inv BlkValueCopy
											val K_unchecked txt
											val K_unchecked ctxt
										inv BlkValueFree
											val K_unchecked ctxt
						inv !return
							val K_unchecked chm
				constant TEXT_TY_Replace_REI K_unchecked_function = TEXT_TY_Replace_REI_B __assimilated=1
			package TEXT_TY_RE_Concatenate_fn _function
				symbol public misc TEXT_TY_RE_Concatenate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TEXT_TY_RE_Concatenate_B _code
					symbol private misc txt_to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt_from
					symbol private misc blobtype
					symbol private misc txt_ref
					symbol private misc pos
					symbol private misc len
					symbol private misc ch
					symbol private misc i
					symbol private misc tosize
					symbol private misc x
					symbol private misc y
					symbol private misc case
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
					symbol external misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
					symbol external misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc CharToCase --> /main/template/functions/CharToCase_fn/CharToCase
					local txt_to K_unchecked
					local txt_from K_unchecked
					local blobtype K_unchecked
					local txt_ref K_unchecked
					local pos K_unchecked
					local len K_unchecked
					local ch K_unchecked
					local i K_unchecked
					local tosize K_unchecked
					local x K_unchecked
					local y K_unchecked
					local case K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked txt_to
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked txt_to
									val K_unchecked plug_00342
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !eq
									val K_unchecked txt_from
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked txt_from
									val K_unchecked plug_00342
							code
								inv !return
									val K_unchecked txt_to
						inv !store
							reference
								val K_unchecked pos
							inv TEXT_TY_CharacterLength
								val K_unchecked txt_to
						inv !store
							reference
								val K_unchecked tosize
							inv BlkValueLBCapacity
								val K_unchecked txt_to
						inv !store
							reference
								val K_unchecked len
							inv TEXT_TY_CharacterLength
								val K_unchecked txt_from
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked ch
									inv BlkValueRead
										val K_unchecked txt_from
										val K_unchecked i
								inv !if
									inv !and
										inv !eq
											val K_unchecked ch
											val K_unchecked 92
										inv !lt
											val K_unchecked i
											inv !minus
												val K_unchecked len
												val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked ch
											inv BlkValueRead
												val K_unchecked txt_from
												inv !preincrement
													reference
														val K_unchecked i
										inv !if
											inv !eq
												val K_unchecked ch
												val K_unchecked 110
											code
												inv !store
													reference
														val K_unchecked ch
													val K_unchecked 10
										inv !if
											inv !eq
												val K_unchecked ch
												val K_unchecked 116
											code
												inv !store
													reference
														val K_unchecked ch
													val K_unchecked 9
										inv !store
											reference
												val K_unchecked case
											val K_unchecked -1
										inv !if
											inv !eq
												val K_unchecked ch
												val K_unchecked 108
											code
												inv !store
													reference
														val K_unchecked case
													val K_unchecked 0
										inv !if
											inv !eq
												val K_unchecked ch
												val K_unchecked 117
											code
												inv !store
													reference
														val K_unchecked case
													val K_unchecked 1
										inv !if
											inv !ge
												val K_unchecked case
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked ch
													inv BlkValueRead
														val K_unchecked txt_from
														inv !preincrement
															reference
																val K_unchecked i
										inv !if
											inv !and
												inv !ge
													val K_unchecked ch
													val K_unchecked 48
												inv !le
													val K_unchecked ch
													val K_unchecked 57
											code
												inv !store
													reference
														val K_unchecked ch
													inv !minus
														val K_unchecked ch
														val K_unchecked 48
												inv !if
													inv !lt
														val K_unchecked ch
														inv !lookup
															val K_unchecked RE_Subexpressions
															val K_unchecked 10
													code
														inv !store
															reference
																val K_unchecked x
															inv !lookup
																inv !lookup
																	val K_unchecked RE_Subexpressions
																	val K_unchecked ch
																val K_unchecked RE_DATA1
														inv !store
															reference
																val K_unchecked y
															inv !lookup
																inv !lookup
																	val K_unchecked RE_Subexpressions
																	val K_unchecked ch
																val K_unchecked RE_DATA2
														inv !if
															inv !ge
																val K_unchecked x
																val K_unchecked 0
															code
																inv !for
																	val K_unchecked 1
																	inv !lt
																		val K_unchecked x
																		val K_unchecked y
																	inv !postincrement
																		reference
																			val K_unchecked x
																	code
																		inv !store
																			reference
																				val K_unchecked ch
																			inv BlkValueRead
																				val K_unchecked txt_ref
																				val K_unchecked x
																		inv !if
																			inv !ge
																				inv !plus
																					val K_unchecked pos
																					val K_unchecked 1
																				val K_unchecked tosize
																			code
																				inv !if
																					inv !eq
																						inv BlkValueSetLBCapacity
																							val K_unchecked txt_to
																							inv !times
																								val K_unchecked 2
																								val K_unchecked tosize
																						val K_unchecked 0
																					code
																						inv !break
																				inv !store
																					reference
																						val K_unchecked tosize
																					inv BlkValueLBCapacity
																						val K_unchecked txt_to
																		inv !ifelse
																			inv !ge
																				val K_unchecked case
																				val K_unchecked 0
																			code
																				inv BlkValueWrite
																					val K_unchecked txt_to
																					inv !postincrement
																						reference
																							val K_unchecked pos
																					inv CharToCase
																						val K_unchecked ch
																						val K_unchecked case
																			code
																				inv BlkValueWrite
																					val K_unchecked txt_to
																					inv !postincrement
																						reference
																							val K_unchecked pos
																					val K_unchecked ch
												inv !continue
								inv !if
									inv !ge
										inv !plus
											val K_unchecked pos
											val K_unchecked 1
										val K_unchecked tosize
									code
										inv !if
											inv !eq
												inv BlkValueSetLBCapacity
													val K_unchecked txt_to
													inv !times
														val K_unchecked 2
														val K_unchecked tosize
												val K_unchecked 0
											code
												inv !break
										inv !store
											reference
												val K_unchecked tosize
											inv BlkValueLBCapacity
												val K_unchecked txt_to
								inv BlkValueWrite
									val K_unchecked txt_to
									inv !postincrement
										reference
											val K_unchecked pos
									val K_unchecked ch
						inv BlkValueWrite
							val K_unchecked txt_to
							val K_unchecked pos
							val K_unchecked 0
						inv !return
							val K_unchecked txt_to
				constant TEXT_TY_RE_Concatenate K_unchecked_function = TEXT_TY_RE_Concatenate_B __assimilated=1
			package STORED_ACTION_TY_Support_fn _function
				symbol public misc STORED_ACTION_TY_Support
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Support_B _code
					symbol private misc task
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc arg1
					symbol private misc arg2
					symbol private misc arg3
					symbol external misc CREATE_KOVS --> /main/template/constants/CREATE_KOVS_con/CREATE_KOVS
					symbol external misc STORED_ACTION_TY_Create --> /main/template/functions/STORED_ACTION_TY_Create_fn/STORED_ACTION_TY_Create
					symbol external misc DESTROY_KOVS --> /main/template/constants/DESTROY_KOVS_con/DESTROY_KOVS
					symbol external misc STORED_ACTION_TY_Destroy --> /main/template/functions/STORED_ACTION_TY_Destroy_fn/STORED_ACTION_TY_Destroy
					symbol external misc MAKEMUTABLE_KOVS --> /main/template/constants/MAKEMUTABLE_KOVS_con/MAKEMUTABLE_KOVS
					symbol external misc COPYQUICK_KOVS --> /main/template/constants/COPYQUICK_KOVS_con/COPYQUICK_KOVS
					symbol external misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
					symbol external misc BlkValueCopySB1 --> /main/template/functions/BlkValueCopySB1_fn/BlkValueCopySB1
					symbol external misc KINDDATA_KOVS --> /main/template/constants/KINDDATA_KOVS_con/KINDDATA_KOVS
					symbol external misc EXTENT_KOVS --> /main/template/constants/EXTENT_KOVS_con/EXTENT_KOVS
					symbol external misc COPY_KOVS --> /main/template/constants/COPY_KOVS_con/COPY_KOVS
					symbol external misc STORED_ACTION_TY_Copy --> /main/template/functions/STORED_ACTION_TY_Copy_fn/STORED_ACTION_TY_Copy
					symbol external misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
					symbol external misc STORED_ACTION_TY_Compare --> /main/template/functions/STORED_ACTION_TY_Compare_fn/STORED_ACTION_TY_Compare
					symbol external misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
					symbol external misc STORED_ACTION_TY_Hash --> /main/template/functions/STORED_ACTION_TY_Hash_fn/STORED_ACTION_TY_Hash
					symbol external misc DEBUG_KOVS --> /main/template/constants/DEBUG_KOVS_con/DEBUG_KOVS
					symbol external misc STORED_ACTION_TY_Say --> /main/template/functions/STORED_ACTION_TY_Say_fn/STORED_ACTION_TY_Say
					local task K_unchecked
					local arg1 K_unchecked
					local arg2 K_unchecked
					local arg3 K_unchecked
					code
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked CREATE_KOVS
									code
										inv !return
											inv STORED_ACTION_TY_Create
												val K_unchecked arg2
								inv !case
									val K_unchecked DESTROY_KOVS
									code
										inv STORED_ACTION_TY_Destroy
											val K_unchecked arg1
								inv !case
									val K_unchecked MAKEMUTABLE_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYQUICK_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYSB_KOVS
									code
										inv BlkValueCopySB1
											val K_unchecked arg1
											val K_unchecked arg2
								inv !case
									val K_unchecked KINDDATA_KOVS
									code
										inv !return
											val K_unchecked 0
								inv !case
									val K_unchecked EXTENT_KOVS
									code
										inv !return
											val K_unchecked 6
								inv !case
									val K_unchecked COPY_KOVS
									code
										inv STORED_ACTION_TY_Copy
											val K_unchecked arg1
											val K_unchecked arg2
								inv !case
									val K_unchecked COMPARE_KOVS
									code
										inv !return
											inv STORED_ACTION_TY_Compare
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked HASH_KOVS
									code
										inv !return
											inv STORED_ACTION_TY_Hash
												val K_unchecked arg1
								inv !case
									val K_unchecked DEBUG_KOVS
									code
										inv !print
											val K_unchecked " = "
										inv STORED_ACTION_TY_Say
											val K_unchecked arg1
						inv !return
							val K_unchecked 0
				constant STORED_ACTION_TY_Support K_unchecked_function = STORED_ACTION_TY_Support_B __assimilated=1
			package STORED_ACTION_TY_Create_fn _function
				symbol public misc STORED_ACTION_TY_Create
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Create_B _code
					symbol private misc sb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc stora
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00514 --> /main/connectors/plug_00514
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc plug_00307 --> /main/connectors/plug_00307
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc BlkValueCreateSB1 --> /main/template/functions/BlkValueCreateSB1_fn/BlkValueCreateSB1
					local sb K_unchecked
					local stora K_unchecked
					code
						inv !store
							reference
								val K_unchecked stora
							inv FlexAllocate
								inv !times
									val K_unchecked 6
									val K_unchecked plug_00139
								val K_unchecked plug_00514
								val K_unchecked BLK_FLAG_WORD
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_ACTION_F
							val K_unchecked plug_00307
							val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_NOUN_F
							val K_unchecked 0
							val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_SECOND_F
							val K_unchecked 0
							val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_ACTOR_F
							val K_unchecked player
							val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_REQUEST_F
							val K_unchecked 0
							val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_COMMAND_TEXT_F
							val K_unchecked 0
							val K_unchecked 1
						inv !return
							inv BlkValueCreateSB1
								val K_unchecked sb
								val K_unchecked stora
				constant STORED_ACTION_TY_Create K_unchecked_function = STORED_ACTION_TY_Create_B __assimilated=1
			package STORED_ACTION_TY_New_fn _function
				symbol public misc STORED_ACTION_TY_New
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_New_B _code
					symbol private misc a
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc n
					symbol private misc s
					symbol private misc ac
					symbol private misc req
					symbol private misc stora
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00514 --> /main/connectors/plug_00514
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					local a K_unchecked
					local n K_unchecked
					local s K_unchecked
					local ac K_unchecked
					local req K_unchecked
					local stora K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked stora
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked stora
									inv BlkValueCreate
										val K_unchecked plug_00514
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_ACTION_F
							val K_unchecked a
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_NOUN_F
							val K_unchecked n
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_SECOND_F
							val K_unchecked s
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_ACTOR_F
							val K_unchecked ac
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_REQUEST_F
							val K_unchecked req
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_COMMAND_TEXT_F
							val K_unchecked 0
						inv !return
							val K_unchecked stora
				constant STORED_ACTION_TY_New K_unchecked_function = STORED_ACTION_TY_New_B __assimilated=1
			package STORED_ACTION_TY_Destroy_fn _function
				symbol public misc STORED_ACTION_TY_Destroy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Destroy_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc toc
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					local stora K_unchecked
					local toc K_unchecked
					code
						inv !store
							reference
								val K_unchecked toc
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_COMMAND_TEXT_F
						inv !if
							val K_unchecked toc
							code
								inv BlkValueFree
									val K_unchecked toc
				constant STORED_ACTION_TY_Destroy K_unchecked_function = STORED_ACTION_TY_Destroy_B __assimilated=1
			package STORED_ACTION_TY_Copy_fn _function
				symbol public misc STORED_ACTION_TY_Copy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Copy_B _code
					symbol private misc storato
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc storafrom
					symbol private misc tocfrom
					symbol private misc tocto
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local storato K_unchecked
					local storafrom K_unchecked
					local tocfrom K_unchecked
					local tocto K_unchecked
					code
						inv !store
							reference
								val K_unchecked tocfrom
							inv BlkValueRead
								val K_unchecked storafrom
								val K_unchecked STORA_COMMAND_TEXT_F
						inv !if
							inv !eq
								val K_unchecked tocfrom
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked tocto
							inv BlkValueCreate
								val K_unchecked plug_00342
						inv BlkValueCopy
							val K_unchecked tocto
							val K_unchecked tocfrom
						inv BlkValueWrite
							val K_unchecked storato
							val K_unchecked STORA_COMMAND_TEXT_F
							val K_unchecked tocto
				constant STORED_ACTION_TY_Copy K_unchecked_function = STORED_ACTION_TY_Copy_B __assimilated=1
			package STORED_ACTION_TY_Compare_fn _function
				symbol public misc STORED_ACTION_TY_Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Compare_B _code
					symbol private misc storaleft
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc storaright
					symbol private misc delta
					symbol private misc itleft
					symbol private misc itright
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc TEXT_TY_Support --> /main/template/functions/TEXT_TY_Support_fn/TEXT_TY_Support
					symbol external misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
					local storaleft K_unchecked
					local storaright K_unchecked
					local delta K_unchecked
					local itleft K_unchecked
					local itright K_unchecked
					code
						inv !store
							reference
								val K_unchecked delta
							inv !minus
								inv BlkValueRead
									val K_unchecked storaleft
									val K_unchecked STORA_ACTION_F
								inv BlkValueRead
									val K_unchecked storaright
									val K_unchecked STORA_ACTION_F
						inv !if
							val K_unchecked delta
							code
								inv !return
									val K_unchecked delta
						inv !store
							reference
								val K_unchecked delta
							inv !minus
								inv BlkValueRead
									val K_unchecked storaleft
									val K_unchecked STORA_NOUN_F
								inv BlkValueRead
									val K_unchecked storaright
									val K_unchecked STORA_NOUN_F
						inv !if
							val K_unchecked delta
							code
								inv !return
									val K_unchecked delta
						inv !store
							reference
								val K_unchecked delta
							inv !minus
								inv BlkValueRead
									val K_unchecked storaleft
									val K_unchecked STORA_SECOND_F
								inv BlkValueRead
									val K_unchecked storaright
									val K_unchecked STORA_SECOND_F
						inv !if
							val K_unchecked delta
							code
								inv !return
									val K_unchecked delta
						inv !store
							reference
								val K_unchecked delta
							inv !minus
								inv BlkValueRead
									val K_unchecked storaleft
									val K_unchecked STORA_ACTOR_F
								inv BlkValueRead
									val K_unchecked storaright
									val K_unchecked STORA_ACTOR_F
						inv !if
							val K_unchecked delta
							code
								inv !return
									val K_unchecked delta
						inv !store
							reference
								val K_unchecked delta
							inv !minus
								inv BlkValueRead
									val K_unchecked storaleft
									val K_unchecked STORA_REQUEST_F
								inv BlkValueRead
									val K_unchecked storaright
									val K_unchecked STORA_REQUEST_F
						inv !if
							val K_unchecked delta
							code
								inv !return
									val K_unchecked delta
						inv !store
							reference
								val K_unchecked itleft
							inv BlkValueRead
								val K_unchecked storaleft
								val K_unchecked STORA_COMMAND_TEXT_F
						inv !store
							reference
								val K_unchecked itright
							inv BlkValueRead
								val K_unchecked storaright
								val K_unchecked STORA_COMMAND_TEXT_F
						inv !if
							inv !and
								inv !ne
									val K_unchecked itleft
									val K_unchecked 0
								inv !ne
									val K_unchecked itright
									val K_unchecked 0
							code
								inv !return
									inv TEXT_TY_Support
										val K_unchecked COMPARE_KOVS
										val K_unchecked itleft
										val K_unchecked itright
						inv !return
							inv !minus
								val K_unchecked itleft
								val K_unchecked itright
				constant STORED_ACTION_TY_Compare K_unchecked_function = STORED_ACTION_TY_Compare_B __assimilated=1
			package STORED_ACTION_TY_Distinguish_fn _function
				symbol public misc STORED_ACTION_TY_Distinguish
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Distinguish_B _code
					symbol private misc stora1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc stora2
					symbol external misc STORED_ACTION_TY_Compare --> /main/template/functions/STORED_ACTION_TY_Compare_fn/STORED_ACTION_TY_Compare
					local stora1 K_unchecked
					local stora2 K_unchecked
					code
						inv !if
							inv !eq
								inv STORED_ACTION_TY_Compare
									val K_unchecked stora1
									val K_unchecked stora2
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant STORED_ACTION_TY_Distinguish K_unchecked_function = STORED_ACTION_TY_Distinguish_B __assimilated=1
			package STORED_ACTION_TY_Hash_fn _function
				symbol public misc STORED_ACTION_TY_Hash
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Hash_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc rv
					symbol private misc it
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc TEXT_TY_Support --> /main/template/functions/TEXT_TY_Support_fn/TEXT_TY_Support
					symbol external misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
					local stora K_unchecked
					local rv K_unchecked
					local it K_unchecked
					code
						inv !store
							reference
								val K_unchecked rv
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTION_F
						inv !store
							reference
								val K_unchecked rv
							inv !plus
								inv !times
									val K_unchecked rv
									val K_unchecked 33
								inv BlkValueRead
									val K_unchecked stora
									val K_unchecked STORA_NOUN_F
						inv !store
							reference
								val K_unchecked rv
							inv !plus
								inv !times
									val K_unchecked rv
									val K_unchecked 33
								inv BlkValueRead
									val K_unchecked stora
									val K_unchecked STORA_SECOND_F
						inv !store
							reference
								val K_unchecked rv
							inv !plus
								inv !times
									val K_unchecked rv
									val K_unchecked 33
								inv BlkValueRead
									val K_unchecked stora
									val K_unchecked STORA_ACTOR_F
						inv !store
							reference
								val K_unchecked rv
							inv !plus
								inv !times
									val K_unchecked rv
									val K_unchecked 33
								inv BlkValueRead
									val K_unchecked stora
									val K_unchecked STORA_REQUEST_F
						inv !store
							reference
								val K_unchecked it
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_COMMAND_TEXT_F
						inv !if
							inv !ne
								val K_unchecked it
								val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked rv
									inv !plus
										inv !times
											val K_unchecked rv
											val K_unchecked 33
										inv TEXT_TY_Support
											val K_unchecked HASH_KOVS
											val K_unchecked it
						inv !return
							val K_unchecked rv
				constant STORED_ACTION_TY_Hash K_unchecked_function = STORED_ACTION_TY_Hash_B __assimilated=1
			package STORED_ACTION_TY_Say_fn _function
				symbol public misc STORED_ACTION_TY_Say
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Say_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc text_of_command
					symbol private misc saved_command
					symbol private misc saved_pn
					symbol private misc saved_action
					symbol private misc K1
					symbol private misc K2
					symbol private misc at
					symbol private misc cf
					symbol private misc cw
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00514 --> /main/connectors/plug_00514
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BlkValueCast --> /main/template/functions/BlkValueCast_fn/BlkValueCast
					symbol external misc plug_00343 --> /main/connectors/plug_00343
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc SetPlayersCommand --> /main/template/functions/SetPlayersCommand_fn/SetPlayersCommand
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc plug_00260 --> /main/template/variables/consult_from_var/consult_from
					symbol external misc plug_00261 --> /main/template/variables/consult_words_var/consult_words
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
					symbol external misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc plug_00341 --> /main/connectors/plug_00341
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc DB_Action --> /main/template/functions/DB_Action_fn/DB_Action
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					local stora K_unchecked
					local text_of_command K_unchecked
					local saved_command K_unchecked
					local saved_pn K_unchecked
					local saved_action K_unchecked
					local K1 K_unchecked
					local K2 K_unchecked
					local at K_unchecked
					local cf K_unchecked
					local cw K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked stora
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked stora
									val K_unchecked plug_00514
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked text_of_command
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_COMMAND_TEXT_F
						inv !if
							val K_unchecked text_of_command
							code
								inv !store
									reference
										val K_unchecked saved_command
									inv BlkValueCreate
										val K_unchecked plug_00342
								inv BlkValueCast
									val K_unchecked saved_command
									val K_unchecked plug_00343
									val K_unchecked players_command
								inv SetPlayersCommand
									val K_unchecked text_of_command
						inv !store
							reference
								val K_unchecked saved_pn
							val K_unchecked parsed_number
						inv !store
							reference
								val K_unchecked saved_action
							val K_unchecked action
						inv !store
							reference
								val K_unchecked action
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTION_F
						inv !store
							reference
								val K_unchecked cf
							val K_unchecked consult_from
						inv !store
							reference
								val K_unchecked cw
							val K_unchecked consult_words
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								val K_unchecked -1
						inv !store
							reference
								val K_unchecked K1
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_NOUN_KOV
						inv !store
							reference
								val K_unchecked K2
							inv !lookup
								val K_unchecked plug_00338
								inv !plus
									val K_unchecked at
									val K_unchecked AD_SECOND_KOV
						inv !if
							inv !ne
								val K_unchecked K1
								val K_unchecked plug_00340
							code
								inv !store
									reference
										val K_unchecked parsed_number
									inv BlkValueRead
										val K_unchecked stora
										val K_unchecked STORA_NOUN_F
								inv !if
									inv !and
										inv !eq
											val K_unchecked K1
											val K_unchecked plug_00341
										inv !eq
											val K_unchecked text_of_command
											val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked saved_command
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked saved_command
													inv BlkValueCreate
														val K_unchecked plug_00342
										inv BlkValueCast
											val K_unchecked saved_command
											val K_unchecked plug_00343
											val K_unchecked players_command
										inv !store
											reference
												val K_unchecked text_of_command
											inv BlkValueCreate
												val K_unchecked plug_00342
										inv BlkValueCopy
											val K_unchecked text_of_command
											val K_unchecked parsed_number
										inv SetPlayersCommand
											val K_unchecked text_of_command
										inv !store
											reference
												val K_unchecked parsed_number
											val K_unchecked players_command
										inv !store
											reference
												val K_unchecked consult_from
											inv !divide
												val K_unchecked parsed_number
												val K_unchecked 100
										inv !store
											reference
												val K_unchecked consult_words
											inv !modulo
												val K_unchecked parsed_number
												val K_unchecked 100
						inv !if
							inv !ne
								val K_unchecked K2
								val K_unchecked plug_00340
							code
								inv !store
									reference
										val K_unchecked parsed_number
									inv BlkValueRead
										val K_unchecked stora
										val K_unchecked STORA_SECOND_F
								inv !if
									inv !and
										inv !eq
											val K_unchecked K2
											val K_unchecked plug_00341
										inv !eq
											val K_unchecked text_of_command
											val K_unchecked 0
									code
										inv !if
											inv !eq
												val K_unchecked saved_command
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked saved_command
													inv BlkValueCreate
														val K_unchecked plug_00342
										inv BlkValueCast
											val K_unchecked saved_command
											val K_unchecked plug_00343
											val K_unchecked players_command
										inv !store
											reference
												val K_unchecked text_of_command
											inv BlkValueCreate
												val K_unchecked plug_00342
										inv BlkValueCopy
											val K_unchecked text_of_command
											val K_unchecked parsed_number
										inv SetPlayersCommand
											val K_unchecked text_of_command
										inv !store
											reference
												val K_unchecked parsed_number
											val K_unchecked players_command
										inv !store
											reference
												val K_unchecked consult_from
											inv !divide
												val K_unchecked parsed_number
												val K_unchecked 100
										inv !store
											reference
												val K_unchecked consult_words
											inv !modulo
												val K_unchecked parsed_number
												val K_unchecked 100
						inv DB_Action
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTOR_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_REQUEST_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTION_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_NOUN_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_SECOND_F
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked parsed_number
							val K_unchecked saved_pn
						inv !store
							reference
								val K_unchecked action
							val K_unchecked saved_action
						inv !store
							reference
								val K_unchecked consult_from
							val K_unchecked cf
						inv !store
							reference
								val K_unchecked consult_words
							val K_unchecked cw
						inv !if
							val K_unchecked text_of_command
							code
								inv SetPlayersCommand
									val K_unchecked saved_command
								inv BlkValueFree
									val K_unchecked saved_command
				constant STORED_ACTION_TY_Say K_unchecked_function = STORED_ACTION_TY_Say_B __assimilated=1
			package STORED_ACTION_TY_Involves_fn _function
				symbol public misc STORED_ACTION_TY_Involves
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Involves_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc item
					symbol private misc at
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					local stora K_unchecked
					local item K_unchecked
					local at K_unchecked
					code
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								inv BlkValueRead
									val K_unchecked stora
									val K_unchecked STORA_ACTION_F
						inv !if
							val K_unchecked at
							code
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked plug_00338
												inv !plus
													val K_unchecked at
													val K_unchecked AD_NOUN_KOV
											val K_unchecked plug_00340
										inv !eq
											inv BlkValueRead
												val K_unchecked stora
												val K_unchecked STORA_NOUN_F
											val K_unchecked item
									code
										inv !return
											val K_unchecked 1
								inv !if
									inv !and
										inv !eq
											inv !lookup
												val K_unchecked plug_00338
												inv !plus
													val K_unchecked at
													val K_unchecked AD_SECOND_KOV
											val K_unchecked plug_00340
										inv !eq
											inv BlkValueRead
												val K_unchecked stora
												val K_unchecked STORA_SECOND_F
											val K_unchecked item
									code
										inv !return
											val K_unchecked 1
						inv !if
							inv !eq
								inv BlkValueRead
									val K_unchecked stora
									val K_unchecked STORA_ACTOR_F
								val K_unchecked item
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant STORED_ACTION_TY_Involves K_unchecked_function = STORED_ACTION_TY_Involves_B __assimilated=1
			package STORED_ACTION_TY_Part_fn _function
				symbol public misc STORED_ACTION_TY_Part
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Part_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ind
					symbol private misc at
					symbol private misc ado
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
					symbol external misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					local stora K_unchecked
					local ind K_unchecked
					local at K_unchecked
					local ado K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked ind
								inv !alternative
									val K_unchecked STORA_NOUN_F
									val K_unchecked STORA_SECOND_F
							code
								inv !ifelse
									inv !eq
										val K_unchecked ind
										val K_unchecked STORA_NOUN_F
									code
										inv !store
											reference
												val K_unchecked ado
											val K_unchecked AD_NOUN_KOV
									code
										inv !store
											reference
												val K_unchecked ado
											val K_unchecked AD_SECOND_KOV
								inv !store
									reference
										val K_unchecked at
									inv FindAction
										inv BlkValueRead
											val K_unchecked stora
											val K_unchecked STORA_ACTION_F
								inv !if
									inv !and
										val K_unchecked at
										inv !eq
											inv !lookup
												val K_unchecked plug_00338
												inv !plus
													val K_unchecked at
													val K_unchecked ado
											val K_unchecked plug_00340
									code
										inv !return
											inv BlkValueRead
												val K_unchecked stora
												val K_unchecked ind
								inv !return
									val K_unchecked 0
						inv !return
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked ind
				constant STORED_ACTION_TY_Part K_unchecked_function = STORED_ACTION_TY_Part_B __assimilated=1
			package STORED_ACTION_TY_Adopt_fn _function
				symbol public misc STORED_ACTION_TY_Adopt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Adopt_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol external misc SAT_Tmp --> /main/template/arrays/SAT_Tmp_arr/SAT_Tmp
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc plug_00122 --> /main/template/variables/player_var/player
					local stora K_unchecked
					local at K_unchecked
					code
						inv !store
							reference
								inv !lookup
									val K_unchecked SAT_Tmp
									val K_unchecked 1
							val K_unchecked action
						inv !store
							reference
								inv !lookup
									val K_unchecked SAT_Tmp
									val K_unchecked 2
							val K_unchecked noun
						inv !store
							reference
								inv !lookup
									val K_unchecked SAT_Tmp
									val K_unchecked 3
							val K_unchecked second
						inv !store
							reference
								inv !lookup
									val K_unchecked SAT_Tmp
									val K_unchecked 4
							val K_unchecked actor
						inv !store
							reference
								inv !lookup
									val K_unchecked SAT_Tmp
									val K_unchecked 5
							val K_unchecked act_requester
						inv !store
							reference
								inv !lookup
									val K_unchecked SAT_Tmp
									val K_unchecked 6
							val K_unchecked parsed_number
						inv !store
							reference
								val K_unchecked action
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTION_F
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								val K_unchecked -1
						inv !ifelse
							inv !eq
								inv !lookup
									val K_unchecked plug_00338
									inv !plus
										val K_unchecked at
										val K_unchecked AD_NOUN_KOV
								val K_unchecked plug_00340
							code
								inv !store
									reference
										val K_unchecked noun
									inv BlkValueRead
										val K_unchecked stora
										val K_unchecked STORA_NOUN_F
							code
								inv !store
									reference
										val K_unchecked parsed_number
									inv BlkValueRead
										val K_unchecked stora
										val K_unchecked STORA_NOUN_F
								inv !store
									reference
										val K_unchecked noun
									val K_unchecked 0
						inv !ifelse
							inv !eq
								inv !lookup
									val K_unchecked plug_00338
									inv !plus
										val K_unchecked at
										val K_unchecked AD_SECOND_KOV
								val K_unchecked plug_00340
							code
								inv !store
									reference
										val K_unchecked second
									inv BlkValueRead
										val K_unchecked stora
										val K_unchecked STORA_SECOND_F
							code
								inv !store
									reference
										val K_unchecked parsed_number
									inv BlkValueRead
										val K_unchecked stora
										val K_unchecked STORA_SECOND_F
								inv !store
									reference
										val K_unchecked second
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked actor
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTOR_F
						inv !ifelse
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_REQUEST_F
							code
								inv !store
									reference
										val K_unchecked act_requester
									val K_unchecked player
							code
								inv !store
									reference
										val K_unchecked act_requester
									val K_unchecked 0
				constant STORED_ACTION_TY_Adopt K_unchecked_function = STORED_ACTION_TY_Adopt_B __assimilated=1
			package STORED_ACTION_TY_Unadopt_fn _function
				symbol public misc STORED_ACTION_TY_Unadopt
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Unadopt_B _code
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc SAT_Tmp --> /main/template/arrays/SAT_Tmp_arr/SAT_Tmp
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					code
						inv !store
							reference
								val K_unchecked action
							inv !lookup
								val K_unchecked SAT_Tmp
								val K_unchecked 1
						inv !store
							reference
								val K_unchecked noun
							inv !lookup
								val K_unchecked SAT_Tmp
								val K_unchecked 2
						inv !store
							reference
								val K_unchecked second
							inv !lookup
								val K_unchecked SAT_Tmp
								val K_unchecked 3
						inv !store
							reference
								val K_unchecked actor
							inv !lookup
								val K_unchecked SAT_Tmp
								val K_unchecked 4
						inv !store
							reference
								val K_unchecked act_requester
							inv !lookup
								val K_unchecked SAT_Tmp
								val K_unchecked 5
						inv !store
							reference
								val K_unchecked parsed_number
							inv !lookup
								val K_unchecked SAT_Tmp
								val K_unchecked 6
						inv !return
							inv !lookup
								val K_unchecked SAT_Tmp
								val K_unchecked 0
				constant STORED_ACTION_TY_Unadopt K_unchecked_function = STORED_ACTION_TY_Unadopt_B __assimilated=1
			package STORED_ACTION_TY_Current_fn _function
				symbol public misc STORED_ACTION_TY_Current
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Current_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol private misc text_of_command
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00514 --> /main/connectors/plug_00514
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc plug_00135 --> /main/template/variables/action_var/action
					symbol external misc FindAction --> /main/template/functions/FindAction_fn/FindAction
					symbol external misc plug_00338 --> /main/connectors/plug_00338
					symbol external misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc plug_00215 --> /main/template/variables/noun_var/noun
					symbol external misc plug_00256 --> /main/template/variables/parsed_number_var/parsed_number
					symbol external misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc plug_00235 --> /main/template/variables/second_var/second
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc plug_00121 --> /main/template/variables/actor_var/actor
					symbol external misc plug_00303 --> /main/template/variables/act_requester_var/act_requester
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc plug_00341 --> /main/connectors/plug_00341
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BlkValueCast --> /main/template/functions/BlkValueCast_fn/BlkValueCast
					symbol external misc plug_00343 --> /main/connectors/plug_00343
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					local stora K_unchecked
					local at K_unchecked
					local text_of_command K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked stora
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked stora
									val K_unchecked plug_00514
							code
								inv !return
									val K_unchecked 0
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_ACTION_F
							val K_unchecked action
						inv !store
							reference
								val K_unchecked at
							inv FindAction
								val K_unchecked -1
						inv !ifelse
							inv !eq
								inv !lookup
									val K_unchecked plug_00338
									inv !plus
										val K_unchecked at
										val K_unchecked AD_NOUN_KOV
								val K_unchecked plug_00340
							code
								inv BlkValueWrite
									val K_unchecked stora
									val K_unchecked STORA_NOUN_F
									val K_unchecked noun
							code
								inv BlkValueWrite
									val K_unchecked stora
									val K_unchecked STORA_NOUN_F
									val K_unchecked parsed_number
						inv !ifelse
							inv !eq
								inv !lookup
									val K_unchecked plug_00338
									inv !plus
										val K_unchecked at
										val K_unchecked AD_SECOND_KOV
								val K_unchecked plug_00340
							code
								inv BlkValueWrite
									val K_unchecked stora
									val K_unchecked STORA_SECOND_F
									val K_unchecked second
							code
								inv BlkValueWrite
									val K_unchecked stora
									val K_unchecked STORA_SECOND_F
									val K_unchecked parsed_number
						inv BlkValueWrite
							val K_unchecked stora
							val K_unchecked STORA_ACTOR_F
							val K_unchecked actor
						inv !ifelse
							val K_unchecked act_requester
							code
								inv BlkValueWrite
									val K_unchecked stora
									val K_unchecked STORA_REQUEST_F
									val K_unchecked 1
							code
								inv BlkValueWrite
									val K_unchecked stora
									val K_unchecked STORA_REQUEST_F
									val K_unchecked 0
						inv !ifelse
							inv !and
								val K_unchecked at
								inv !or
									inv !eq
										inv !lookup
											val K_unchecked plug_00338
											inv !plus
												val K_unchecked at
												val K_unchecked AD_NOUN_KOV
										val K_unchecked plug_00341
									inv !eq
										inv !lookup
											val K_unchecked plug_00338
											inv !plus
												val K_unchecked at
												val K_unchecked AD_SECOND_KOV
										val K_unchecked plug_00341
							code
								inv !store
									reference
										val K_unchecked text_of_command
									inv BlkValueRead
										val K_unchecked stora
										val K_unchecked STORA_COMMAND_TEXT_F
								inv !if
									inv !eq
										val K_unchecked text_of_command
										val K_unchecked 0
									code
										inv !store
											reference
												val K_unchecked text_of_command
											inv BlkValueCreate
												val K_unchecked plug_00342
										inv BlkValueWrite
											val K_unchecked stora
											val K_unchecked STORA_COMMAND_TEXT_F
											val K_unchecked text_of_command
								inv BlkValueCast
									val K_unchecked text_of_command
									val K_unchecked plug_00343
									val K_unchecked players_command
							code
								inv BlkValueWrite
									val K_unchecked stora
									val K_unchecked STORA_COMMAND_TEXT_F
									val K_unchecked 0
						inv !return
							val K_unchecked stora
				constant STORED_ACTION_TY_Current K_unchecked_function = STORED_ACTION_TY_Current_B __assimilated=1
			package STORED_ACTION_TY_Try_fn _function
				symbol public misc STORED_ACTION_TY_Try
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package STORED_ACTION_TY_Try_B _code
					symbol private misc stora
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ks
					symbol private misc text_of_command
					symbol private misc saved_command
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00514 --> /main/connectors/plug_00514
					symbol external misc plug_00348 --> /main/template/variables/keep_silent_var/keep_silent
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BlkValueCast --> /main/template/functions/BlkValueCast_fn/BlkValueCast
					symbol external misc plug_00343 --> /main/connectors/plug_00343
					symbol external misc plug_00200 --> /main/template/variables/players_command_var/players_command
					symbol external misc SetPlayersCommand --> /main/template/functions/SetPlayersCommand_fn/SetPlayersCommand
					symbol external misc TryAction --> /main/template/functions/TryAction_fn/TryAction
					symbol external misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
					symbol external misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
					symbol external misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
					symbol external misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
					symbol external misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					local stora K_unchecked
					local ks K_unchecked
					local text_of_command K_unchecked
					local saved_command K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked stora
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked stora
									val K_unchecked plug_00514
							code
								inv !return
									val K_unchecked 1
						inv !if
							val K_unchecked ks
							code
								inv !push
									val K_unchecked keep_silent
								inv !store
									reference
										val K_unchecked keep_silent
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked text_of_command
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_COMMAND_TEXT_F
						inv !if
							val K_unchecked text_of_command
							code
								inv !store
									reference
										val K_unchecked saved_command
									inv BlkValueCreate
										val K_unchecked plug_00342
								inv BlkValueCast
									val K_unchecked saved_command
									val K_unchecked plug_00343
									val K_unchecked players_command
								inv SetPlayersCommand
									val K_unchecked text_of_command
						inv TryAction
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_REQUEST_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTOR_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_ACTION_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_NOUN_F
							inv BlkValueRead
								val K_unchecked stora
								val K_unchecked STORA_SECOND_F
						inv !if
							val K_unchecked text_of_command
							code
								inv SetPlayersCommand
									val K_unchecked saved_command
								inv BlkValueFree
									val K_unchecked saved_command
						inv !if
							val K_unchecked ks
							code
								inv !pull
									reference
										val K_unchecked keep_silent
				constant STORED_ACTION_TY_Try K_unchecked_function = STORED_ACTION_TY_Try_B __assimilated=1
			package LIST_OF_TY_Support_fn _function
				symbol public misc LIST_OF_TY_Support
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Support_B _code
					symbol private misc task
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc arg1
					symbol private misc arg2
					symbol private misc arg3
					symbol external misc CREATE_KOVS --> /main/template/constants/CREATE_KOVS_con/CREATE_KOVS
					symbol external misc LIST_OF_TY_Create --> /main/template/functions/LIST_OF_TY_Create_fn/LIST_OF_TY_Create
					symbol external misc DESTROY_KOVS --> /main/template/constants/DESTROY_KOVS_con/DESTROY_KOVS
					symbol external misc LIST_OF_TY_Destroy --> /main/template/functions/LIST_OF_TY_Destroy_fn/LIST_OF_TY_Destroy
					symbol external misc MAKEMUTABLE_KOVS --> /main/template/constants/MAKEMUTABLE_KOVS_con/MAKEMUTABLE_KOVS
					symbol external misc COPYKIND_KOVS --> /main/template/constants/COPYKIND_KOVS_con/COPYKIND_KOVS
					symbol external misc LIST_OF_TY_CopyKind --> /main/template/functions/LIST_OF_TY_CopyKind_fn/LIST_OF_TY_CopyKind
					symbol external misc COPYQUICK_KOVS --> /main/template/constants/COPYQUICK_KOVS_con/COPYQUICK_KOVS
					symbol external misc LIST_OF_TY_QuickCopy --> /main/template/functions/LIST_OF_TY_QuickCopy_fn/LIST_OF_TY_QuickCopy
					symbol external misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
					symbol external misc BlkValueCopySB1 --> /main/template/functions/BlkValueCopySB1_fn/BlkValueCopySB1
					symbol external misc KINDDATA_KOVS --> /main/template/constants/KINDDATA_KOVS_con/KINDDATA_KOVS
					symbol external misc LIST_OF_TY_KindData --> /main/template/functions/LIST_OF_TY_KindData_fn/LIST_OF_TY_KindData
					symbol external misc EXTENT_KOVS --> /main/template/constants/EXTENT_KOVS_con/EXTENT_KOVS
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc COPY_KOVS --> /main/template/constants/COPY_KOVS_con/COPY_KOVS
					symbol external misc LIST_OF_TY_Copy --> /main/template/functions/LIST_OF_TY_Copy_fn/LIST_OF_TY_Copy
					symbol external misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
					symbol external misc LIST_OF_TY_Compare --> /main/template/functions/LIST_OF_TY_Compare_fn/LIST_OF_TY_Compare
					symbol external misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
					symbol external misc LIST_OF_TY_Hash --> /main/template/functions/LIST_OF_TY_Hash_fn/LIST_OF_TY_Hash
					symbol external misc DEBUG_KOVS --> /main/template/constants/DEBUG_KOVS_con/DEBUG_KOVS
					symbol external misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					local task K_unchecked
					local arg1 K_unchecked
					local arg2 K_unchecked
					local arg3 K_unchecked
					code
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked CREATE_KOVS
									code
										inv !return
											inv LIST_OF_TY_Create
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked DESTROY_KOVS
									code
										inv LIST_OF_TY_Destroy
											val K_unchecked arg1
								inv !case
									val K_unchecked MAKEMUTABLE_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYKIND_KOVS
									code
										inv !return
											inv LIST_OF_TY_CopyKind
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked COPYQUICK_KOVS
									code
										inv !return
											inv LIST_OF_TY_QuickCopy
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked COPYSB_KOVS
									code
										inv BlkValueCopySB1
											val K_unchecked arg1
											val K_unchecked arg2
								inv !case
									val K_unchecked KINDDATA_KOVS
									code
										inv !return
											inv LIST_OF_TY_KindData
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked EXTENT_KOVS
									code
										inv !return
											inv !plus
												inv BlkValueRead
													val K_unchecked arg1
													val K_unchecked LIST_LENGTH_F
												val K_unchecked LIST_ITEM_BASE
								inv !case
									val K_unchecked COPY_KOVS
									code
										inv LIST_OF_TY_Copy
											val K_unchecked arg1
											val K_unchecked arg2
											val K_unchecked arg3
								inv !case
									val K_unchecked COMPARE_KOVS
									code
										inv !return
											inv LIST_OF_TY_Compare
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked HASH_KOVS
									code
										inv !return
											inv LIST_OF_TY_Hash
												val K_unchecked arg1
								inv !case
									val K_unchecked DEBUG_KOVS
									code
										inv !print
											val K_unchecked " = {"
										inv LIST_OF_TY_Say
											val K_unchecked arg1
										inv !print
											val K_unchecked "} of kind "
										inv !printnumber
											inv BlkValueRead
												val K_unchecked arg1
												val K_unchecked LIST_ITEM_KOV_F
						inv !return
							val K_unchecked 0
				constant LIST_OF_TY_Support K_unchecked_function = LIST_OF_TY_Support_B __assimilated=1
			package LIST_OF_TY_Create_fn _function
				symbol public misc LIST_OF_TY_Create
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Create_B _code
					symbol private misc skov
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sb
					symbol private misc list
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc BlkValueCreateSB1 --> /main/template/functions/BlkValueCreateSB1_fn/BlkValueCreateSB1
					local skov K_unchecked
					local sb K_unchecked
					local list K_unchecked
					code
						inv !store
							reference
								val K_unchecked skov
							inv KindBaseTerm
								val K_unchecked skov
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked list
							inv FlexAllocate
								inv !times
									val K_unchecked 27
									val K_unchecked plug_00139
								val K_unchecked plug_00515
								inv !plus
									val K_unchecked BLK_FLAG_MULTIPLE
									val K_unchecked BLK_FLAG_WORD
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_ITEM_KOV_F
							val K_unchecked skov
							val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							val K_unchecked 0
							val K_unchecked 1
						inv !store
							reference
								val K_unchecked sb
							inv BlkValueCreateSB1
								val K_unchecked sb
								val K_unchecked list
						inv !return
							val K_unchecked sb
				constant LIST_OF_TY_Create K_unchecked_function = LIST_OF_TY_Create_B __assimilated=1
			package LIST_OF_TY_Destroy_fn _function
				symbol public misc LIST_OF_TY_Destroy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Destroy_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc no_items
					symbol private misc i
					symbol private misc k
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local list K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local k K_unchecked
					code
						inv !store
							reference
								val K_unchecked k
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_ITEM_KOV_F
						inv !if
							inv plug_00460
								val K_unchecked k
							code
								inv !store
									reference
										val K_unchecked no_items
									inv BlkValueRead
										val K_unchecked list
										val K_unchecked LIST_LENGTH_F
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked no_items
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueFree
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													val K_unchecked i
													val K_unchecked LIST_ITEM_BASE
				constant LIST_OF_TY_Destroy K_unchecked_function = LIST_OF_TY_Destroy_B __assimilated=1
			package LIST_OF_TY_CopyKind_fn _function
				symbol public misc LIST_OF_TY_CopyKind
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_CopyKind_B _code
					symbol private misc to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					local to K_unchecked
					local from K_unchecked
					code
						inv BlkValueWrite
							val K_unchecked to
							val K_unchecked LIST_ITEM_KOV_F
							inv BlkValueRead
								val K_unchecked from
								val K_unchecked LIST_ITEM_KOV_F
				constant LIST_OF_TY_CopyKind K_unchecked_function = LIST_OF_TY_CopyKind_B __assimilated=1
			package LIST_OF_TY_QuickCopy_fn _function
				symbol public misc LIST_OF_TY_QuickCopy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_QuickCopy_B _code
					symbol private misc to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					local to K_unchecked
					local from K_unchecked
					code
						inv !if
							inv !ne
								inv BlkValueRead
									val K_unchecked to
									val K_unchecked LIST_ITEM_KOV_F
								inv BlkValueRead
									val K_unchecked from
									val K_unchecked LIST_ITEM_KOV_F
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant LIST_OF_TY_QuickCopy K_unchecked_function = LIST_OF_TY_QuickCopy_B __assimilated=1
			package LIST_OF_TY_KindData_fn _function
				symbol public misc LIST_OF_TY_KindData
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_KindData_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					local list K_unchecked
					code
						inv !return
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_ITEM_KOV_F
				constant LIST_OF_TY_KindData K_unchecked_function = LIST_OF_TY_KindData_B __assimilated=1
			package LIST_OF_TY_Copy_fn _function
				symbol public misc LIST_OF_TY_Copy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Copy_B _code
					symbol private misc lto
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc lfrom
					symbol private misc precopied_list_kov
					symbol private misc no_items
					symbol private misc i
					symbol private misc nv
					symbol private misc bk
					symbol private misc val
					symbol private misc splk
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc plug_00192 --> /main/connectors/plug_00192
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					local lto K_unchecked
					local lfrom K_unchecked
					local precopied_list_kov K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local nv K_unchecked
					local bk K_unchecked
					local val K_unchecked
					local splk K_unchecked
					code
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked lfrom
								val K_unchecked LIST_LENGTH_F
						inv !store
							reference
								val K_unchecked bk
							inv BlkValueRead
								val K_unchecked lfrom
								val K_unchecked LIST_ITEM_KOV_F
						inv !ifelse
							inv !ne
								val K_unchecked precopied_list_kov
								inv !alternative
									val K_unchecked 0
									val K_unchecked plug_00192
							code
								inv BlkValueWrite
									val K_unchecked lto
									val K_unchecked LIST_ITEM_KOV_F
									val K_unchecked precopied_list_kov
							code
								inv BlkValueWrite
									val K_unchecked lto
									val K_unchecked LIST_ITEM_KOV_F
									val K_unchecked bk
						inv !if
							inv plug_00460
								val K_unchecked bk
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked no_items
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked val
											inv BlkValueRead
												val K_unchecked lfrom
												inv !plus
													val K_unchecked i
													val K_unchecked LIST_ITEM_BASE
										inv !ifelse
											inv !ne
												val K_unchecked precopied_list_kov
												inv !alternative
													val K_unchecked 0
													val K_unchecked plug_00192
											code
												inv !store
													reference
														val K_unchecked nv
													inv BlkValueCreate
														val K_unchecked precopied_list_kov
											code
												inv !store
													reference
														val K_unchecked nv
													inv BlkValueCreate
														val K_unchecked bk
										inv BlkValueCopy
											val K_unchecked nv
											val K_unchecked val
										inv BlkValueWrite
											val K_unchecked lto
											inv !plus
												val K_unchecked i
												val K_unchecked LIST_ITEM_BASE
											val K_unchecked nv
				constant LIST_OF_TY_Copy K_unchecked_function = LIST_OF_TY_Copy_B __assimilated=1
			package LIST_OF_TY_Compare_fn _function
				symbol public misc LIST_OF_TY_Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Compare_B _code
					symbol private misc listleft
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc listright
					symbol private misc delta
					symbol private misc no_items
					symbol private misc i
					symbol private misc cf
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc LIST_OF_TY_ComparisonFn --> /main/template/functions/LIST_OF_TY_ComparisonFn_fn/LIST_OF_TY_ComparisonFn
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local listleft K_unchecked
					local listright K_unchecked
					local delta K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local cf K_unchecked
					code
						inv !store
							reference
								val K_unchecked delta
							inv !minus
								inv BlkValueRead
									val K_unchecked listleft
									val K_unchecked LIST_LENGTH_F
								inv BlkValueRead
									val K_unchecked listright
									val K_unchecked LIST_LENGTH_F
						inv !if
							val K_unchecked delta
							code
								inv !return
									val K_unchecked delta
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked listleft
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !eq
								val K_unchecked no_items
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked delta
							inv !minus
								inv BlkValueRead
									val K_unchecked listleft
									val K_unchecked LIST_ITEM_KOV_F
								inv BlkValueRead
									val K_unchecked listright
									val K_unchecked LIST_ITEM_KOV_F
						inv !if
							val K_unchecked delta
							code
								inv !return
									val K_unchecked delta
						inv !store
							reference
								val K_unchecked cf
							inv LIST_OF_TY_ComparisonFn
								val K_unchecked listleft
						inv !ifelse
							inv !eq
								val K_unchecked cf
								inv !alternative
									val K_unchecked 0
									val K_unchecked UnsignedCompare
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked no_items
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked delta
											inv !minus
												inv BlkValueRead
													val K_unchecked listleft
													inv !plus
														val K_unchecked i
														val K_unchecked LIST_ITEM_BASE
												inv BlkValueRead
													val K_unchecked listright
													inv !plus
														val K_unchecked i
														val K_unchecked LIST_ITEM_BASE
										inv !if
											val K_unchecked delta
											code
												inv !return
													val K_unchecked delta
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked no_items
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked delta
											inv !indirect2
												val K_unchecked cf
												inv BlkValueRead
													val K_unchecked listleft
													inv !plus
														val K_unchecked i
														val K_unchecked LIST_ITEM_BASE
												inv BlkValueRead
													val K_unchecked listright
													inv !plus
														val K_unchecked i
														val K_unchecked LIST_ITEM_BASE
										inv !if
											val K_unchecked delta
											code
												inv !return
													val K_unchecked delta
						inv !return
							val K_unchecked 0
				constant LIST_OF_TY_Compare K_unchecked_function = LIST_OF_TY_Compare_B __assimilated=1
			package LIST_OF_TY_ComparisonFn_fn _function
				symbol public misc LIST_OF_TY_ComparisonFn
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_ComparisonFn_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc plug_00516 --> /main/connectors/plug_00516
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					local list K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !return
							inv plug_00516
								inv BlkValueRead
									val K_unchecked list
									val K_unchecked LIST_ITEM_KOV_F
				constant LIST_OF_TY_ComparisonFn K_unchecked_function = LIST_OF_TY_ComparisonFn_B __assimilated=1
			package LIST_OF_TY_Distinguish_fn _function
				symbol public misc LIST_OF_TY_Distinguish
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Distinguish_B _code
					symbol private misc txb1
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txb2
					symbol external misc LIST_OF_TY_Compare --> /main/template/functions/LIST_OF_TY_Compare_fn/LIST_OF_TY_Compare
					local txb1 K_unchecked
					local txb2 K_unchecked
					code
						inv !if
							inv !eq
								inv LIST_OF_TY_Compare
									val K_unchecked txb1
									val K_unchecked txb2
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant LIST_OF_TY_Distinguish K_unchecked_function = LIST_OF_TY_Distinguish_B __assimilated=1
			package LIST_OF_TY_Hash_fn _function
				symbol public misc LIST_OF_TY_Hash
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Hash_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc len
					symbol private misc kov
					symbol private misc rv
					symbol private misc i
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc GetHashValue --> /main/template/functions/GetHashValue_fn/GetHashValue
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local list K_unchecked
					local len K_unchecked
					local kov K_unchecked
					local rv K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked rv
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked len
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !store
							reference
								val K_unchecked kov
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_ITEM_KOV_F
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked rv
									inv !plus
										inv !times
											val K_unchecked rv
											val K_unchecked 33
										inv GetHashValue
											val K_unchecked kov
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													val K_unchecked i
													val K_unchecked LIST_ITEM_BASE
						inv !return
							val K_unchecked rv
				constant LIST_OF_TY_Hash K_unchecked_function = LIST_OF_TY_Hash_B __assimilated=1
			package LIST_OF_TY_Say_fn _function
				symbol public misc LIST_OF_TY_Say
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Say_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc format
					symbol private misc no_items
					symbol private misc v
					symbol private misc i
					symbol private misc bk
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc KindAtomic --> /main/template/functions/KindAtomic_fn/KindAtomic
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc plug_00165 --> /main/connectors/plug_00165
					symbol external misc plug_00169 --> /main/template/variables/prior_named_list_var/prior_named_list
					symbol external misc plug_00170 --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
					local list K_unchecked
					local format K_unchecked
					local no_items K_unchecked
					local v K_unchecked
					local i K_unchecked
					local bk K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !store
							reference
								val K_unchecked bk
							inv KindAtomic
								inv BlkValueRead
									val K_unchecked list
									val K_unchecked LIST_ITEM_KOV_F
						inv !if
							inv !eq
								val K_unchecked format
								val K_unchecked 1
							code
								inv !print
									val K_unchecked "{"
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked v
									inv BlkValueRead
										val K_unchecked list
										inv !plus
											val K_unchecked i
											val K_unchecked LIST_ITEM_BASE
								inv !switch
									val K_unchecked format
									code
										inv !case
											val K_unchecked 2
											code
												inv !printdef
													val K_unchecked v
										inv !case
											val K_unchecked 3
											code
												inv !printindef
													val K_unchecked v
										inv !default
											code
												inv !ifelse
													inv !eq
														val K_unchecked bk
														val K_unchecked plug_00515
													code
														inv LIST_OF_TY_Say
															val K_unchecked v
															val K_unchecked 1
													code
														inv !ifelse
															inv !and
																inv !eq
																	val K_unchecked bk
																	val K_unchecked plug_00342
																inv !eq
																	val K_unchecked format
																	val K_unchecked 1
															code
																inv !print
																	val K_unchecked "\""
																inv plug_00417
																	val K_unchecked bk
																	val K_unchecked v
																inv !print
																	val K_unchecked "\""
															code
																inv plug_00417
																	val K_unchecked bk
																	val K_unchecked v
								inv !if
									inv !lt
										val K_unchecked i
										inv !minus
											val K_unchecked no_items
											val K_unchecked 2
									code
										inv !print
											val K_unchecked ", "
								inv !if
									inv !eq
										val K_unchecked i
										inv !minus
											val K_unchecked no_items
											val K_unchecked 2
									code
										inv !ifelse
											inv !eq
												val K_unchecked format
												val K_unchecked 1
											code
												inv !print
													val K_unchecked ", "
											code
												inv plug_00165
													val K_unchecked 67
						inv !if
							inv !eq
								val K_unchecked format
								val K_unchecked 1
							code
								inv !print
									val K_unchecked "}"
						inv !store
							reference
								val K_unchecked prior_named_list
							val K_unchecked no_items
						inv !store
							reference
								val K_unchecked prior_named_list_gender
							val K_unchecked -1
				constant LIST_OF_TY_Say K_unchecked_function = LIST_OF_TY_Say_B __assimilated=1
			package LIST_OF_TY_Desc_fn _function
				symbol public misc LIST_OF_TY_Desc
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Desc_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc desc
					symbol private misc kov
					symbol private misc obj
					symbol private misc no_items
					symbol private misc ex
					symbol private misc len
					symbol private misc i
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc plug_00340 --> /main/connectors/plug_00340
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					local list K_unchecked
					local desc K_unchecked
					local kov K_unchecked
					local obj K_unchecked
					local no_items K_unchecked
					local ex K_unchecked
					local len K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked ex
							inv BlkValueLBCapacity
								val K_unchecked list
						inv !store
							reference
								val K_unchecked len
							inv !indirect1
								val K_unchecked desc
								val K_unchecked -3
						inv !if
							inv !gt
								inv !plus
									val K_unchecked len
									val K_unchecked LIST_ITEM_BASE
								val K_unchecked ex
							code
								inv !if
									inv !eq
										inv BlkValueSetLBCapacity
											val K_unchecked list
											inv !plus
												val K_unchecked len
												val K_unchecked LIST_ITEM_BASE
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !ifelse
							val K_unchecked kov
							code
								inv BlkValueWrite
									val K_unchecked list
									val K_unchecked LIST_ITEM_KOV_F
									val K_unchecked kov
							code
								inv BlkValueWrite
									val K_unchecked list
									val K_unchecked LIST_ITEM_KOV_F
									val K_unchecked plug_00340
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							val K_unchecked len
						inv !store
							reference
								val K_unchecked obj
							val K_unchecked 0
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked obj
									inv !indirect3
										val K_unchecked desc
										val K_unchecked -2
										val K_unchecked obj
										val K_unchecked i
								inv BlkValueWrite
									val K_unchecked list
									inv !plus
										val K_unchecked i
										val K_unchecked LIST_ITEM_BASE
									val K_unchecked obj
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_Desc K_unchecked_function = LIST_OF_TY_Desc_B __assimilated=1
			package LIST_OF_TY_FindItem_fn _function
				symbol public misc LIST_OF_TY_FindItem
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_FindItem_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc v
					symbol private misc i
					symbol private misc no_items
					symbol private misc cf
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc LIST_OF_TY_ComparisonFn --> /main/template/functions/LIST_OF_TY_ComparisonFn_fn/LIST_OF_TY_ComparisonFn
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local list K_unchecked
					local v K_unchecked
					local i K_unchecked
					local no_items K_unchecked
					local cf K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked cf
							inv LIST_OF_TY_ComparisonFn
								val K_unchecked list
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !ifelse
							inv !eq
								val K_unchecked cf
								inv !alternative
									val K_unchecked 0
									val K_unchecked UnsignedCompare
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked no_items
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !eq
												val K_unchecked v
												inv BlkValueRead
													val K_unchecked list
													inv !plus
														val K_unchecked i
														val K_unchecked LIST_ITEM_BASE
											code
												inv !return
													val K_unchecked 1
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked no_items
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !if
											inv !eq
												inv !indirect2
													val K_unchecked cf
													val K_unchecked v
													inv BlkValueRead
														val K_unchecked list
														inv !plus
															val K_unchecked i
															val K_unchecked LIST_ITEM_BASE
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant LIST_OF_TY_FindItem K_unchecked_function = LIST_OF_TY_FindItem_B __assimilated=1
			package LIST_OF_TY_InsertItem_fn _function
				symbol public misc LIST_OF_TY_InsertItem
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_InsertItem_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc v
					symbol private misc posnflag
					symbol private misc posn
					symbol private misc nodups
					symbol private misc i
					symbol private misc no_items
					symbol private misc ex
					symbol private misc nv
					symbol private misc contents_kind
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc LIST_OF_TY_FindItem --> /main/template/functions/LIST_OF_TY_FindItem_fn/LIST_OF_TY_FindItem
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					local list K_unchecked
					local v K_unchecked
					local posnflag K_unchecked
					local posn K_unchecked
					local nodups K_unchecked
					local i K_unchecked
					local no_items K_unchecked
					local ex K_unchecked
					local nv K_unchecked
					local contents_kind K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !and
								val K_unchecked nodups
								inv LIST_OF_TY_FindItem
									val K_unchecked list
									val K_unchecked v
							code
								inv !return
									val K_unchecked list
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							val K_unchecked no_items
						inv !store
							reference
								val K_unchecked contents_kind
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_ITEM_KOV_F
						inv !if
							inv !and
								val K_unchecked posnflag
								inv !or
									inv !lt
										val K_unchecked posn
										val K_unchecked 1
									inv !gt
										val K_unchecked posn
										inv !plus
											val K_unchecked no_items
											val K_unchecked 1
							code
								inv !print
									val K_unchecked "*** Couldn't add at entry "
								inv !printnumber
									val K_unchecked posn
								inv !print
									val K_unchecked " in the list "
								inv LIST_OF_TY_Say
									val K_unchecked list
									val K_unchecked 1
								inv !print
									val K_unchecked ", which has entries in the range 1 to "
								inv !printnumber
									val K_unchecked no_items
								inv !print
									val K_unchecked " ***\n"
								inv RunTimeProblem
									val K_unchecked RTP_LISTRANGEERROR
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked ex
							inv BlkValueLBCapacity
								val K_unchecked list
						inv !if
							inv !gt
								inv !plus
									inv !plus
										val K_unchecked no_items
										val K_unchecked LIST_ITEM_BASE
									val K_unchecked 1
								val K_unchecked ex
							code
								inv !if
									inv !eq
										inv BlkValueSetLBCapacity
											val K_unchecked list
											inv !plus
												val K_unchecked ex
												val K_unchecked 16
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !if
							inv plug_00460
								val K_unchecked contents_kind
							code
								inv !store
									reference
										val K_unchecked nv
									inv BlkValueCreate
										val K_unchecked contents_kind
								inv BlkValueCopy
									val K_unchecked nv
									val K_unchecked v
								inv !store
									reference
										val K_unchecked v
									val K_unchecked nv
						inv !ifelse
							val K_unchecked posnflag
							code
								inv !postdecrement
									reference
										val K_unchecked posn
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked no_items
									inv !gt
										val K_unchecked i
										val K_unchecked posn
									inv !postdecrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												val K_unchecked i
												val K_unchecked LIST_ITEM_BASE
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													inv !minus
														val K_unchecked i
														val K_unchecked 1
													val K_unchecked LIST_ITEM_BASE
								inv BlkValueWrite
									val K_unchecked list
									inv !plus
										val K_unchecked posn
										val K_unchecked LIST_ITEM_BASE
									val K_unchecked v
							code
								inv BlkValueWrite
									val K_unchecked list
									inv !plus
										val K_unchecked no_items
										val K_unchecked LIST_ITEM_BASE
									val K_unchecked v
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							inv !plus
								val K_unchecked no_items
								val K_unchecked 1
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_InsertItem K_unchecked_function = LIST_OF_TY_InsertItem_B __assimilated=1
			package LIST_OF_TY_AppendList_fn _function
				symbol public misc LIST_OF_TY_AppendList
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_AppendList_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc more
					symbol private misc posnflag
					symbol private misc posn
					symbol private misc nodups
					symbol private misc v
					symbol private misc i
					symbol private misc j
					symbol private misc no_items
					symbol private misc msize
					symbol private misc ex
					symbol private misc nv
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc LIST_OF_TY_FindItem --> /main/template/functions/LIST_OF_TY_FindItem_fn/LIST_OF_TY_FindItem
					local list K_unchecked
					local more K_unchecked
					local posnflag K_unchecked
					local posn K_unchecked
					local nodups K_unchecked
					local v K_unchecked
					local i K_unchecked
					local j K_unchecked
					local no_items K_unchecked
					local msize K_unchecked
					local ex K_unchecked
					local nv K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !or
								inv !eq
									val K_unchecked more
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked more
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked list
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							val K_unchecked no_items
						inv !if
							inv !and
								val K_unchecked posnflag
								inv !or
									inv !lt
										val K_unchecked posn
										val K_unchecked 1
									inv !gt
										val K_unchecked posn
										inv !plus
											val K_unchecked no_items
											val K_unchecked 1
							code
								inv !print
									val K_unchecked "*** Couldn't add at entry "
								inv !printnumber
									val K_unchecked posn
								inv !print
									val K_unchecked " in the list "
								inv LIST_OF_TY_Say
									val K_unchecked list
									val K_unchecked 1
								inv !print
									val K_unchecked ", which has entries in the range 1 to "
								inv !printnumber
									val K_unchecked no_items
								inv !print
									val K_unchecked " ***\n"
								inv RunTimeProblem
									val K_unchecked RTP_LISTRANGEERROR
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked msize
							inv BlkValueRead
								val K_unchecked more
								val K_unchecked LIST_LENGTH_F
						inv !store
							reference
								val K_unchecked ex
							inv BlkValueLBCapacity
								val K_unchecked list
						inv !if
							inv !gt
								inv !plus
									inv !plus
										val K_unchecked no_items
										val K_unchecked msize
									val K_unchecked LIST_ITEM_BASE
								val K_unchecked ex
							code
								inv !if
									inv !eq
										inv BlkValueSetLBCapacity
											val K_unchecked list
											inv !plus
												inv !plus
													inv !plus
														val K_unchecked no_items
														val K_unchecked msize
													val K_unchecked LIST_ITEM_BASE
												val K_unchecked 8
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
						inv !ifelse
							val K_unchecked posnflag
							code
								inv !postdecrement
									reference
										val K_unchecked posn
								inv !for
									inv !store
										reference
											val K_unchecked i
										inv !plus
											val K_unchecked no_items
											val K_unchecked msize
									inv !ge
										val K_unchecked i
										inv !plus
											val K_unchecked posn
											val K_unchecked msize
									inv !postdecrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												val K_unchecked i
												val K_unchecked LIST_ITEM_BASE
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													inv !minus
														val K_unchecked i
														val K_unchecked msize
													val K_unchecked LIST_ITEM_BASE
								inv !for
									inv !store
										reference
											val K_unchecked j
										val K_unchecked 0
									inv !lt
										val K_unchecked j
										val K_unchecked msize
									inv !postincrement
										reference
											val K_unchecked j
									code
										inv !store
											reference
												val K_unchecked v
											inv BlkValueRead
												val K_unchecked more
												inv !plus
													val K_unchecked j
													val K_unchecked LIST_ITEM_BASE
										inv !if
											inv plug_00460
												inv BlkValueRead
													val K_unchecked list
													val K_unchecked LIST_ITEM_KOV_F
											code
												inv !store
													reference
														val K_unchecked nv
													inv BlkValueCreate
														inv BlkValueRead
															val K_unchecked list
															val K_unchecked LIST_ITEM_KOV_F
												inv BlkValueCopy
													val K_unchecked nv
													val K_unchecked v
												inv !store
													reference
														val K_unchecked v
													val K_unchecked nv
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												inv !plus
													val K_unchecked posn
													val K_unchecked j
												val K_unchecked LIST_ITEM_BASE
											val K_unchecked v
							code
								inv !for
									inv !sequential
										inv !store
											reference
												val K_unchecked i
											val K_unchecked 0
										inv !store
											reference
												val K_unchecked j
											val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked msize
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked v
											inv BlkValueRead
												val K_unchecked more
												inv !plus
													val K_unchecked i
													val K_unchecked LIST_ITEM_BASE
										inv !if
											inv plug_00460
												inv BlkValueRead
													val K_unchecked list
													val K_unchecked LIST_ITEM_KOV_F
											code
												inv !store
													reference
														val K_unchecked nv
													inv BlkValueCreate
														inv BlkValueRead
															val K_unchecked list
															val K_unchecked LIST_ITEM_KOV_F
												inv BlkValueCopy
													val K_unchecked nv
													val K_unchecked v
												inv !store
													reference
														val K_unchecked v
													val K_unchecked nv
										inv !if
											inv !or
												inv !eq
													val K_unchecked nodups
													val K_unchecked 0
												inv !eq
													inv LIST_OF_TY_FindItem
														val K_unchecked list
														val K_unchecked v
													val K_unchecked 0
											code
												inv BlkValueWrite
													val K_unchecked list
													inv !plus
														inv !plus
															val K_unchecked no_items
															val K_unchecked j
														val K_unchecked LIST_ITEM_BASE
													val K_unchecked v
												inv !postincrement
													reference
														val K_unchecked j
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							inv !plus
								val K_unchecked no_items
								val K_unchecked j
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_AppendList K_unchecked_function = LIST_OF_TY_AppendList_B __assimilated=1
			package LIST_OF_TY_RemoveValue_fn _function
				symbol public misc LIST_OF_TY_RemoveValue
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_RemoveValue_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc v
					symbol private misc forgive
					symbol private misc i
					symbol private misc j
					symbol private misc no_items
					symbol private misc odsize
					symbol private misc f
					symbol private misc cf
					symbol private misc delendum
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc LIST_OF_TY_ComparisonFn --> /main/template/functions/LIST_OF_TY_ComparisonFn_fn/LIST_OF_TY_ComparisonFn
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
					local list K_unchecked
					local v K_unchecked
					local forgive K_unchecked
					local i K_unchecked
					local j K_unchecked
					local no_items K_unchecked
					local odsize K_unchecked
					local f K_unchecked
					local cf K_unchecked
					local delendum K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked cf
							inv LIST_OF_TY_ComparisonFn
								val K_unchecked list
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !store
							reference
								val K_unchecked odsize
							val K_unchecked no_items
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							val K_unchecked no_items
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked delendum
									inv BlkValueRead
										val K_unchecked list
										inv !plus
											val K_unchecked i
											val K_unchecked LIST_ITEM_BASE
								inv !ifelse
									inv !eq
										val K_unchecked cf
										inv !alternative
											val K_unchecked 0
											val K_unchecked UnsignedCompare
									code
										inv !store
											reference
												val K_unchecked f
											inv !eq
												val K_unchecked v
												val K_unchecked delendum
									code
										inv !store
											reference
												val K_unchecked f
											inv !eq
												inv !indirect2
													val K_unchecked cf
													val K_unchecked v
													val K_unchecked delendum
												val K_unchecked 0
								inv !if
									val K_unchecked f
									code
										inv !if
											inv plug_00460
												inv BlkValueRead
													val K_unchecked list
													val K_unchecked LIST_ITEM_KOV_F
											code
												inv BlkValueFree
													val K_unchecked delendum
										inv !for
											inv !store
												reference
													val K_unchecked j
												inv !plus
													val K_unchecked i
													val K_unchecked 1
											inv !lt
												val K_unchecked j
												val K_unchecked no_items
											inv !postincrement
												reference
													val K_unchecked j
											code
												inv BlkValueWrite
													val K_unchecked list
													inv !plus
														inv !minus
															val K_unchecked j
															val K_unchecked 1
														val K_unchecked LIST_ITEM_BASE
													inv BlkValueRead
														val K_unchecked list
														inv !plus
															val K_unchecked j
															val K_unchecked LIST_ITEM_BASE
										inv !postdecrement
											reference
												val K_unchecked no_items
										inv !postdecrement
											reference
												val K_unchecked i
										inv BlkValueWrite
											val K_unchecked list
											val K_unchecked LIST_LENGTH_F
											val K_unchecked no_items
						inv !if
							inv !ne
								val K_unchecked odsize
								val K_unchecked no_items
							code
								inv !return
									val K_unchecked 0
						inv !if
							val K_unchecked forgive
							code
								inv !return
									val K_unchecked 0
						inv !print
							val K_unchecked "*** Couldn't remove: the value "
						inv plug_00417
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_ITEM_KOV_F
							val K_unchecked v
						inv !print
							val K_unchecked " was not present in the list "
						inv LIST_OF_TY_Say
							val K_unchecked list
							val K_unchecked 1
						inv !print
							val K_unchecked " ***\n"
						inv RunTimeProblem
							val K_unchecked RTP_LISTRANGEERROR
				constant LIST_OF_TY_RemoveValue K_unchecked_function = LIST_OF_TY_RemoveValue_B __assimilated=1
			package LIST_OF_TY_RemoveItemRange_fn _function
				symbol public misc LIST_OF_TY_RemoveItemRange
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_RemoveItemRange_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc to
					symbol private misc forgive
					symbol private misc i
					symbol private misc d
					symbol private misc no_items
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local list K_unchecked
					local from K_unchecked
					local to K_unchecked
					local forgive K_unchecked
					local i K_unchecked
					local d K_unchecked
					local no_items K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !or
								inv !or
									inv !gt
										val K_unchecked from
										val K_unchecked to
									inv !le
										val K_unchecked from
										val K_unchecked 0
								inv !gt
									val K_unchecked to
									val K_unchecked no_items
							code
								inv !ifelse
									val K_unchecked forgive
									code
										inv !if
											inv !le
												val K_unchecked from
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked from
													val K_unchecked 1
										inv !if
											inv !ge
												val K_unchecked to
												val K_unchecked no_items
											code
												inv !store
													reference
														val K_unchecked to
													val K_unchecked no_items
										inv !if
											inv !gt
												val K_unchecked from
												val K_unchecked to
											code
												inv !return
													val K_unchecked list
									code
										inv !print
											val K_unchecked "*** Couldn't remove entries "
										inv !printnumber
											val K_unchecked from
										inv !print
											val K_unchecked " to "
										inv !printnumber
											val K_unchecked to
										inv !print
											val K_unchecked " from the list "
										inv LIST_OF_TY_Say
											val K_unchecked list
											val K_unchecked 1
										inv !print
											val K_unchecked ", which has entries in the range 1 to "
										inv !printnumber
											val K_unchecked no_items
										inv !print
											val K_unchecked " ***\n"
										inv RunTimeProblem
											val K_unchecked RTP_LISTRANGEERROR
										inv !return
											val K_unchecked 0
						inv !postdecrement
							reference
								val K_unchecked to
						inv !postdecrement
							reference
								val K_unchecked from
						inv !store
							reference
								val K_unchecked d
							inv !plus
								inv !minus
									val K_unchecked to
									val K_unchecked from
								val K_unchecked 1
						inv !if
							inv plug_00460
								inv BlkValueRead
									val K_unchecked list
									val K_unchecked LIST_ITEM_KOV_F
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked d
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueFree
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													inv !plus
														val K_unchecked from
														val K_unchecked i
													val K_unchecked LIST_ITEM_BASE
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked from
							inv !lt
								val K_unchecked i
								inv !minus
									val K_unchecked no_items
									val K_unchecked d
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv BlkValueWrite
									val K_unchecked list
									inv !plus
										val K_unchecked i
										val K_unchecked LIST_ITEM_BASE
									inv BlkValueRead
										val K_unchecked list
										inv !plus
											inv !plus
												val K_unchecked i
												val K_unchecked d
											val K_unchecked LIST_ITEM_BASE
						inv BlkValueWrite
							val K_unchecked list
							val K_unchecked LIST_LENGTH_F
							inv !minus
								val K_unchecked no_items
								val K_unchecked d
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_RemoveItemRange K_unchecked_function = LIST_OF_TY_RemoveItemRange_B __assimilated=1
			package LIST_OF_TY_Remove_List_fn _function
				symbol public misc LIST_OF_TY_Remove_List
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Remove_List_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc rlist
					symbol private misc i
					symbol private misc j
					symbol private misc k
					symbol private misc v
					symbol private misc w
					symbol private misc no_items
					symbol private misc odsize
					symbol private misc rsize
					symbol private misc cf
					symbol private misc f
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_OF_TY_ComparisonFn --> /main/template/functions/LIST_OF_TY_ComparisonFn_fn/LIST_OF_TY_ComparisonFn
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local list K_unchecked
					local rlist K_unchecked
					local i K_unchecked
					local j K_unchecked
					local k K_unchecked
					local v K_unchecked
					local w K_unchecked
					local no_items K_unchecked
					local odsize K_unchecked
					local rsize K_unchecked
					local cf K_unchecked
					local f K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !store
							reference
								val K_unchecked odsize
							val K_unchecked no_items
						inv !store
							reference
								val K_unchecked rsize
							inv BlkValueRead
								val K_unchecked rlist
								val K_unchecked LIST_LENGTH_F
						inv !store
							reference
								val K_unchecked cf
							inv LIST_OF_TY_ComparisonFn
								val K_unchecked list
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked v
									inv BlkValueRead
										val K_unchecked list
										inv !plus
											val K_unchecked i
											val K_unchecked LIST_ITEM_BASE
								inv !for
									inv !store
										reference
											val K_unchecked k
										val K_unchecked 0
									inv !lt
										val K_unchecked k
										val K_unchecked rsize
									inv !postincrement
										reference
											val K_unchecked k
									code
										inv !store
											reference
												val K_unchecked w
											inv BlkValueRead
												val K_unchecked rlist
												inv !plus
													val K_unchecked k
													val K_unchecked LIST_ITEM_BASE
										inv !ifelse
											inv !eq
												val K_unchecked cf
												inv !alternative
													val K_unchecked 0
													val K_unchecked UnsignedCompare
											code
												inv !store
													reference
														val K_unchecked f
													inv !eq
														val K_unchecked v
														val K_unchecked w
											code
												inv !store
													reference
														val K_unchecked f
													inv !eq
														inv !indirect2
															val K_unchecked cf
															val K_unchecked v
															val K_unchecked w
														val K_unchecked 0
										inv !if
											val K_unchecked f
											code
												inv !if
													inv plug_00460
														inv BlkValueRead
															val K_unchecked list
															val K_unchecked LIST_ITEM_KOV_F
													code
														inv BlkValueFree
															val K_unchecked v
												inv !for
													inv !store
														reference
															val K_unchecked j
														inv !plus
															val K_unchecked i
															val K_unchecked 1
													inv !lt
														val K_unchecked j
														val K_unchecked no_items
													inv !postincrement
														reference
															val K_unchecked j
													code
														inv BlkValueWrite
															val K_unchecked list
															inv !minus
																inv !plus
																	val K_unchecked j
																	val K_unchecked LIST_ITEM_BASE
																val K_unchecked 1
															inv BlkValueRead
																val K_unchecked list
																inv !plus
																	val K_unchecked j
																	val K_unchecked LIST_ITEM_BASE
												inv !postdecrement
													reference
														val K_unchecked no_items
												inv !postdecrement
													reference
														val K_unchecked i
												inv BlkValueWrite
													val K_unchecked list
													val K_unchecked LIST_LENGTH_F
													val K_unchecked no_items
												inv !break
						inv !return
							val K_unchecked 0
				constant LIST_OF_TY_Remove_List K_unchecked_function = LIST_OF_TY_Remove_List_B __assimilated=1
			package LIST_OF_TY_GetLength_fn _function
				symbol public misc LIST_OF_TY_GetLength
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_GetLength_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					local list K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !return
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
				constant LIST_OF_TY_GetLength K_unchecked_function = LIST_OF_TY_GetLength_B __assimilated=1
			package LIST_OF_TY_Empty_fn _function
				symbol public misc LIST_OF_TY_Empty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Empty_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					local list K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !eq
								inv BlkValueRead
									val K_unchecked list
									val K_unchecked LIST_LENGTH_F
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant LIST_OF_TY_Empty K_unchecked_function = LIST_OF_TY_Empty_B __assimilated=1
			package LIST_OF_TY_SetLength_fn _function
				symbol public misc LIST_OF_TY_SetLength
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_SetLength_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc newsize
					symbol private misc this_way_only
					symbol private misc truncation_end
					symbol private misc no_items
					symbol private misc ex
					symbol private misc i
					symbol private misc dv
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTSIZENEGATIVE --> /main/template/constants/RTP_LISTSIZENEGATIVE_con/RTP_LISTSIZENEGATIVE
					symbol external misc BlkMakeMutable --> /main/template/functions/BlkMakeMutable_fn/BlkMakeMutable
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc plug_00465 --> /main/connectors/plug_00465
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					local list K_unchecked
					local newsize K_unchecked
					local this_way_only K_unchecked
					local truncation_end K_unchecked
					local no_items K_unchecked
					local ex K_unchecked
					local i K_unchecked
					local dv K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !if
							inv !lt
								val K_unchecked newsize
								val K_unchecked 0
							code
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_LISTSIZENEGATIVE
										val K_unchecked newsize
						inv BlkMakeMutable
							val K_unchecked list
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !lt
								val K_unchecked no_items
								val K_unchecked newsize
							code
								inv !if
									inv !eq
										val K_unchecked this_way_only
										val K_unchecked -1
									code
										inv !return
											val K_unchecked list
								inv !store
									reference
										val K_unchecked ex
									inv BlkValueLBCapacity
										val K_unchecked list
								inv !if
									inv !gt
										inv !plus
											val K_unchecked newsize
											val K_unchecked LIST_ITEM_BASE
										val K_unchecked ex
									code
										inv !if
											inv !eq
												inv BlkValueSetLBCapacity
													val K_unchecked list
													inv !plus
														val K_unchecked newsize
														val K_unchecked LIST_ITEM_BASE
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 0
								inv !store
									reference
										val K_unchecked dv
									inv plug_00465
										inv BlkValueRead
											val K_unchecked list
											val K_unchecked LIST_ITEM_KOV_F
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked no_items
									inv !lt
										val K_unchecked i
										val K_unchecked newsize
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												val K_unchecked LIST_ITEM_BASE
												val K_unchecked i
											val K_unchecked dv
								inv BlkValueWrite
									val K_unchecked list
									val K_unchecked LIST_LENGTH_F
									val K_unchecked newsize
						inv !if
							inv !gt
								val K_unchecked no_items
								val K_unchecked newsize
							code
								inv !if
									inv !eq
										val K_unchecked this_way_only
										val K_unchecked 1
									code
										inv !return
											val K_unchecked list
								inv !ifelse
									inv !eq
										val K_unchecked truncation_end
										val K_unchecked -1
									code
										inv !if
											inv plug_00460
												inv BlkValueRead
													val K_unchecked list
													val K_unchecked LIST_ITEM_KOV_F
											code
												inv !for
													inv !store
														reference
															val K_unchecked i
														val K_unchecked 0
													inv !lt
														val K_unchecked i
														inv !minus
															val K_unchecked no_items
															val K_unchecked newsize
													inv !postincrement
														reference
															val K_unchecked i
													code
														inv BlkValueFree
															inv BlkValueRead
																val K_unchecked list
																inv !plus
																	val K_unchecked LIST_ITEM_BASE
																	val K_unchecked i
										inv !for
											inv !store
												reference
													val K_unchecked i
												val K_unchecked 0
											inv !lt
												val K_unchecked i
												val K_unchecked newsize
											inv !postincrement
												reference
													val K_unchecked i
											code
												inv BlkValueWrite
													val K_unchecked list
													inv !plus
														val K_unchecked LIST_ITEM_BASE
														val K_unchecked i
													inv BlkValueRead
														val K_unchecked list
														inv !plus
															inv !minus
																inv !plus
																	val K_unchecked LIST_ITEM_BASE
																	val K_unchecked no_items
																val K_unchecked newsize
															val K_unchecked i
									code
										inv !if
											inv plug_00460
												inv BlkValueRead
													val K_unchecked list
													val K_unchecked LIST_ITEM_KOV_F
											code
												inv !for
													inv !store
														reference
															val K_unchecked i
														val K_unchecked newsize
													inv !lt
														val K_unchecked i
														val K_unchecked no_items
													inv !postincrement
														reference
															val K_unchecked i
													code
														inv BlkValueFree
															inv BlkValueRead
																val K_unchecked list
																inv !plus
																	val K_unchecked LIST_ITEM_BASE
																	val K_unchecked i
								inv BlkValueWrite
									val K_unchecked list
									val K_unchecked LIST_LENGTH_F
									val K_unchecked newsize
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_SetLength K_unchecked_function = LIST_OF_TY_SetLength_B __assimilated=1
			package LIST_OF_TY_GetItem_fn _function
				symbol public misc LIST_OF_TY_GetItem
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_GetItem_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc forgive
					symbol private misc no_items
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local list K_unchecked
					local i K_unchecked
					local forgive K_unchecked
					local no_items K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !or
								inv !le
									val K_unchecked i
									val K_unchecked 0
								inv !gt
									val K_unchecked i
									val K_unchecked no_items
							code
								inv !if
									val K_unchecked forgive
									code
										inv !return
											val K_unchecked 0
								inv !print
									val K_unchecked "*** Couldn't read from entry "
								inv !printnumber
									val K_unchecked i
								inv !print
									val K_unchecked " of a list which"
								inv !switch
									val K_unchecked no_items
									code
										inv !case
											val K_unchecked 0
											code
												inv !print
													val K_unchecked " is empty ***\n"
										inv !case
											val K_unchecked 1
											code
												inv !print
													val K_unchecked " has only one entry, numbered 1 ***\n"
										inv !default
											code
												inv !print
													val K_unchecked " has entries numbered from 1 to "
												inv !printnumber
													val K_unchecked no_items
												inv !print
													val K_unchecked " ***\n"
								inv RunTimeProblem
									val K_unchecked RTP_LISTRANGEERROR
								inv !ifelse
									inv !ge
										val K_unchecked no_items
										val K_unchecked 1
									code
										inv !store
											reference
												val K_unchecked i
											val K_unchecked 1
									code
										inv !return
											val K_unchecked 0
						inv !return
							inv BlkValueRead
								val K_unchecked list
								inv !minus
									inv !plus
										val K_unchecked LIST_ITEM_BASE
										val K_unchecked i
									val K_unchecked 1
				constant LIST_OF_TY_GetItem K_unchecked_function = LIST_OF_TY_GetItem_B __assimilated=1
			package WriteLIST_OF_TY_GetItem_fn _function
				symbol public misc WriteLIST_OF_TY_GetItem
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package WriteLIST_OF_TY_GetItem_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc val
					symbol private misc no_items
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local list K_unchecked
					local i K_unchecked
					local val K_unchecked
					local no_items K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !or
								inv !le
									val K_unchecked i
									val K_unchecked 0
								inv !gt
									val K_unchecked i
									val K_unchecked no_items
							code
								inv !print
									val K_unchecked "*** Couldn't write to list entry "
								inv !printnumber
									val K_unchecked i
								inv !print
									val K_unchecked " of a list which"
								inv !switch
									val K_unchecked no_items
									code
										inv !case
											val K_unchecked 0
											code
												inv !print
													val K_unchecked " is empty ***\n"
										inv !case
											val K_unchecked 1
											code
												inv !print
													val K_unchecked " has only one entry, numbered 1 ***\n"
										inv !default
											code
												inv !print
													val K_unchecked " has entries numbered from 1 to "
												inv !printnumber
													val K_unchecked no_items
												inv !print
													val K_unchecked " ***\n"
								inv !return
									inv RunTimeProblem
										val K_unchecked RTP_LISTRANGEERROR
						inv BlkValueWrite
							val K_unchecked list
							inv !minus
								inv !plus
									val K_unchecked LIST_ITEM_BASE
									val K_unchecked i
								val K_unchecked 1
							val K_unchecked val
				constant WriteLIST_OF_TY_GetItem K_unchecked_function = WriteLIST_OF_TY_GetItem_B __assimilated=1
			package LIST_OF_TY_PutItem_fn _function
				symbol public misc LIST_OF_TY_PutItem
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_PutItem_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc v
					symbol private misc no_items
					symbol private misc nv
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local list K_unchecked
					local i K_unchecked
					local v K_unchecked
					local no_items K_unchecked
					local nv K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv plug_00460
								inv BlkValueRead
									val K_unchecked list
									val K_unchecked LIST_ITEM_KOV_F
							code
								inv !store
									reference
										val K_unchecked nv
									inv BlkValueCreate
										inv BlkValueRead
											val K_unchecked list
											val K_unchecked LIST_ITEM_KOV_F
								inv BlkValueCopy
									val K_unchecked nv
									val K_unchecked v
								inv !store
									reference
										val K_unchecked v
									val K_unchecked nv
						inv !if
							inv !or
								inv !le
									val K_unchecked i
									val K_unchecked 0
								inv !gt
									val K_unchecked i
									val K_unchecked no_items
							code
								inv !return
									val K_unchecked 0
						inv BlkValueWrite
							val K_unchecked list
							inv !minus
								inv !plus
									val K_unchecked LIST_ITEM_BASE
									val K_unchecked i
								val K_unchecked 1
							val K_unchecked v
				constant LIST_OF_TY_PutItem K_unchecked_function = LIST_OF_TY_PutItem_B __assimilated=1
			package LIST_OF_TY_Mol_fn _function
				symbol public misc LIST_OF_TY_Mol
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Mol_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc len
					symbol private misc i
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc LIST_OF_TY_SetLength --> /main/template/functions/LIST_OF_TY_SetLength_fn/LIST_OF_TY_SetLength
					symbol external misc LIST_OF_TY_PutItem --> /main/template/functions/LIST_OF_TY_PutItem_fn/LIST_OF_TY_PutItem
					local list K_unchecked
					local len K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked len
							inv !lookup
								val K_unchecked multiple_object
								val K_unchecked 0
						inv LIST_OF_TY_SetLength
							val K_unchecked list
							val K_unchecked len
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv LIST_OF_TY_PutItem
									val K_unchecked list
									val K_unchecked i
									inv !lookup
										val K_unchecked multiple_object
										val K_unchecked i
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_Mol K_unchecked_function = LIST_OF_TY_Mol_B __assimilated=1
			package LIST_OF_TY_Set_Mol_fn _function
				symbol public misc LIST_OF_TY_Set_Mol
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Set_Mol_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc len
					symbol private misc i
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					local list K_unchecked
					local len K_unchecked
					local i K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked len
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !gt
								val K_unchecked len
								val K_unchecked 63
							code
								inv !store
									reference
										val K_unchecked len
									val K_unchecked 63
						inv !store
							reference
								inv !lookup
									val K_unchecked multiple_object
									val K_unchecked 0
							val K_unchecked len
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 1
							inv !le
								val K_unchecked i
								val K_unchecked len
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										inv !lookup
											val K_unchecked multiple_object
											val K_unchecked i
									inv BlkValueRead
										val K_unchecked list
										inv !minus
											inv !plus
												val K_unchecked LIST_ITEM_BASE
												val K_unchecked i
											val K_unchecked 1
				constant LIST_OF_TY_Set_Mol K_unchecked_function = LIST_OF_TY_Set_Mol_B __assimilated=1
			package LIST_OF_TY_Reverse_fn _function
				symbol public misc LIST_OF_TY_Reverse
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Reverse_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc no_items
					symbol private misc i
					symbol private misc v
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local list K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !lt
								val K_unchecked no_items
								val K_unchecked 2
							code
								inv !return
									val K_unchecked list
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								inv !times
									val K_unchecked i
									val K_unchecked 2
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked v
									inv BlkValueRead
										val K_unchecked list
										inv !plus
											val K_unchecked LIST_ITEM_BASE
											val K_unchecked i
								inv BlkValueWrite
									val K_unchecked list
									inv !plus
										val K_unchecked LIST_ITEM_BASE
										val K_unchecked i
									inv BlkValueRead
										val K_unchecked list
										inv !minus
											inv !minus
												inv !plus
													val K_unchecked LIST_ITEM_BASE
													val K_unchecked no_items
												val K_unchecked 1
											val K_unchecked i
								inv BlkValueWrite
									val K_unchecked list
									inv !minus
										inv !minus
											inv !plus
												val K_unchecked LIST_ITEM_BASE
												val K_unchecked no_items
											val K_unchecked 1
										val K_unchecked i
									val K_unchecked v
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_Reverse K_unchecked_function = LIST_OF_TY_Reverse_B __assimilated=1
			package LIST_OF_TY_Rotate_fn _function
				symbol public misc LIST_OF_TY_Rotate
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Rotate_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc backwards
					symbol private misc no_items
					symbol private misc i
					symbol private misc v
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local list K_unchecked
					local backwards K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked list
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked list
									val K_unchecked plug_00515
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !lt
								val K_unchecked no_items
								val K_unchecked 2
							code
								inv !return
									val K_unchecked list
						inv !ifelse
							val K_unchecked backwards
							code
								inv !store
									reference
										val K_unchecked v
									inv BlkValueRead
										val K_unchecked list
										val K_unchecked LIST_ITEM_BASE
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !minus
											val K_unchecked no_items
											val K_unchecked 1
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												val K_unchecked LIST_ITEM_BASE
												val K_unchecked i
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													inv !plus
														val K_unchecked LIST_ITEM_BASE
														val K_unchecked i
													val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked list
									inv !plus
										inv !minus
											val K_unchecked no_items
											val K_unchecked 1
										val K_unchecked LIST_ITEM_BASE
									val K_unchecked v
							code
								inv !store
									reference
										val K_unchecked v
									inv BlkValueRead
										val K_unchecked list
										inv !plus
											inv !minus
												val K_unchecked no_items
												val K_unchecked 1
											val K_unchecked LIST_ITEM_BASE
								inv !for
									inv !store
										reference
											val K_unchecked i
										inv !minus
											val K_unchecked no_items
											val K_unchecked 1
									inv !gt
										val K_unchecked i
										val K_unchecked 0
									inv !postdecrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												val K_unchecked LIST_ITEM_BASE
												val K_unchecked i
											inv BlkValueRead
												val K_unchecked list
												inv !minus
													inv !plus
														val K_unchecked LIST_ITEM_BASE
														val K_unchecked i
													val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked list
									val K_unchecked LIST_ITEM_BASE
									val K_unchecked v
						inv !return
							val K_unchecked list
				constant LIST_OF_TY_Rotate K_unchecked_function = LIST_OF_TY_Rotate_B __assimilated=1
			package LIST_OF_TY_Sort_fn _function
				symbol public misc LIST_OF_TY_Sort
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package LIST_OF_TY_Sort_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc dir
					symbol private misc prop
					symbol private misc cf
					symbol private misc i
					symbol private misc j
					symbol private misc no_items
					symbol private misc v
					symbol external misc BlkMakeMutable --> /main/template/functions/BlkMakeMutable_fn/BlkMakeMutable
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
					symbol external misc random --> /main/veneer/random
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc SetSortDomain --> /main/template/functions/SetSortDomain_fn/SetSortDomain
					symbol external misc ListSwapEntries --> /main/template/functions/ListSwapEntries_fn/ListSwapEntries
					symbol external misc ListCompareEntries --> /main/template/functions/ListCompareEntries_fn/ListCompareEntries
					symbol external misc plug_00517 --> /main/template/variables/LIST_OF_TY_Sort_cf_var/LIST_OF_TY_Sort_cf
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc SortArray --> /main/template/functions/SortArray_fn/SortArray
					local list K_unchecked
					local dir K_unchecked
					local prop K_unchecked
					local cf K_unchecked
					local i K_unchecked
					local j K_unchecked
					local no_items K_unchecked
					local v K_unchecked
					code
						inv BlkMakeMutable
							val K_unchecked list
						inv !store
							reference
								val K_unchecked no_items
							inv BlkValueRead
								val K_unchecked list
								val K_unchecked LIST_LENGTH_F
						inv !if
							inv !eq
								val K_unchecked dir
								val K_unchecked 2
							code
								inv !if
									inv !lt
										val K_unchecked no_items
										val K_unchecked 2
									code
										inv !return
											val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 1
									inv !lt
										val K_unchecked i
										val K_unchecked no_items
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked j
											inv !minus
												inv random
													inv !plus
														val K_unchecked i
														val K_unchecked 1
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked v
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													val K_unchecked LIST_ITEM_BASE
													val K_unchecked i
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												val K_unchecked LIST_ITEM_BASE
												val K_unchecked i
											inv BlkValueRead
												val K_unchecked list
												inv !plus
													val K_unchecked LIST_ITEM_BASE
													val K_unchecked j
										inv BlkValueWrite
											val K_unchecked list
											inv !plus
												val K_unchecked LIST_ITEM_BASE
												val K_unchecked j
											val K_unchecked v
								inv !return
									val K_unchecked 1
						inv SetSortDomain
							val K_unchecked ListSwapEntries
							val K_unchecked ListCompareEntries
						inv !ifelse
							val K_unchecked cf
							code
								inv !store
									reference
										val K_unchecked LIST_OF_TY_Sort_cf
									val K_unchecked BlkValueCompare
							code
								inv !store
									reference
										val K_unchecked LIST_OF_TY_Sort_cf
									val K_unchecked 0
						inv SortArray
							val K_unchecked list
							val K_unchecked prop
							val K_unchecked dir
							val K_unchecked no_items
							val K_unchecked 0
							val K_unchecked 0
				constant LIST_OF_TY_Sort K_unchecked_function = LIST_OF_TY_Sort_B __assimilated=1
			package ListSwapEntries_fn _function
				symbol public misc ListSwapEntries
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ListSwapEntries_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc i
					symbol private misc j
					symbol private misc v
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local list K_unchecked
					local i K_unchecked
					local j K_unchecked
					local v K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked j
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked v
							inv BlkValueRead
								val K_unchecked list
								inv !minus
									inv !plus
										val K_unchecked LIST_ITEM_BASE
										val K_unchecked i
									val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked list
							inv !minus
								inv !plus
									val K_unchecked LIST_ITEM_BASE
									val K_unchecked i
								val K_unchecked 1
							inv BlkValueRead
								val K_unchecked list
								inv !minus
									inv !plus
										val K_unchecked LIST_ITEM_BASE
										val K_unchecked j
									val K_unchecked 1
						inv BlkValueWrite
							val K_unchecked list
							inv !minus
								inv !plus
									val K_unchecked LIST_ITEM_BASE
									val K_unchecked j
								val K_unchecked 1
							val K_unchecked v
				constant ListSwapEntries K_unchecked_function = ListSwapEntries_B __assimilated=1
			package ListCompareEntries_fn _function
				symbol public misc ListCompareEntries
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ListCompareEntries_B _code
					symbol private misc list
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc col
					symbol private misc i
					symbol private misc j
					symbol private misc d
					symbol private misc cf
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc plug_00471 --> /main/template/variables/I7S_Col_var/I7S_Col
					symbol external misc plug_00517 --> /main/template/variables/LIST_OF_TY_Sort_cf_var/LIST_OF_TY_Sort_cf
					symbol external misc LIST_OF_TY_ComparisonFn --> /main/template/functions/LIST_OF_TY_ComparisonFn_fn/LIST_OF_TY_ComparisonFn
					local list K_unchecked
					local col K_unchecked
					local i K_unchecked
					local j K_unchecked
					local d K_unchecked
					local cf K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked i
								val K_unchecked j
							code
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked i
							inv BlkValueRead
								val K_unchecked list
								inv !minus
									inv !plus
										val K_unchecked LIST_ITEM_BASE
										val K_unchecked i
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked j
							inv BlkValueRead
								val K_unchecked list
								inv !minus
									inv !plus
										val K_unchecked LIST_ITEM_BASE
										val K_unchecked j
									val K_unchecked 1
						inv !ifelse
							val K_unchecked I7S_Col
							code
								inv !ifelse
									inv !provides
										val K_unchecked i
										val K_unchecked I7S_Col
									code
										inv !store
											reference
												val K_unchecked i
											inv !propertyvalue
												val K_unchecked i
												val K_unchecked I7S_Col
									code
										inv !store
											reference
												val K_unchecked i
											val K_unchecked 0
								inv !ifelse
									inv !provides
										val K_unchecked j
										val K_unchecked I7S_Col
									code
										inv !store
											reference
												val K_unchecked j
											inv !propertyvalue
												val K_unchecked j
												val K_unchecked I7S_Col
									code
										inv !store
											reference
												val K_unchecked j
											val K_unchecked 0
								inv !store
									reference
										val K_unchecked cf
									val K_unchecked LIST_OF_TY_Sort_cf
							code
								inv !store
									reference
										val K_unchecked cf
									inv LIST_OF_TY_ComparisonFn
										val K_unchecked list
						inv !ifelse
							inv !eq
								val K_unchecked cf
								val K_unchecked 0
							code
								inv !if
									inv !gt
										val K_unchecked i
										val K_unchecked j
									code
										inv !return
											val K_unchecked 1
								inv !if
									inv !lt
										val K_unchecked i
										val K_unchecked j
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !return
									val K_unchecked 0
							code
								inv !return
									inv !indirect2
										val K_unchecked cf
										val K_unchecked i
										val K_unchecked j
				constant ListCompareEntries K_unchecked_function = ListCompareEntries_B __assimilated=1
			package COMBINATION_TY_Support_fn _function
				symbol public misc COMBINATION_TY_Support
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Support_B _code
					symbol private misc task
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc arg1
					symbol private misc arg2
					symbol private misc arg3
					symbol external misc CREATE_KOVS --> /main/template/constants/CREATE_KOVS_con/CREATE_KOVS
					symbol external misc COMBINATION_TY_Create --> /main/template/functions/COMBINATION_TY_Create_fn/COMBINATION_TY_Create
					symbol external misc DESTROY_KOVS --> /main/template/constants/DESTROY_KOVS_con/DESTROY_KOVS
					symbol external misc COMBINATION_TY_Destroy --> /main/template/functions/COMBINATION_TY_Destroy_fn/COMBINATION_TY_Destroy
					symbol external misc MAKEMUTABLE_KOVS --> /main/template/constants/MAKEMUTABLE_KOVS_con/MAKEMUTABLE_KOVS
					symbol external misc COPYKIND_KOVS --> /main/template/constants/COPYKIND_KOVS_con/COPYKIND_KOVS
					symbol external misc COMBINATION_TY_CopyKind --> /main/template/functions/COMBINATION_TY_CopyKind_fn/COMBINATION_TY_CopyKind
					symbol external misc COPYQUICK_KOVS --> /main/template/constants/COPYQUICK_KOVS_con/COPYQUICK_KOVS
					symbol external misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
					symbol external misc BlkValueCopySB1 --> /main/template/functions/BlkValueCopySB1_fn/BlkValueCopySB1
					symbol external misc KINDDATA_KOVS --> /main/template/constants/KINDDATA_KOVS_con/KINDDATA_KOVS
					symbol external misc COMBINATION_TY_KindData --> /main/template/functions/COMBINATION_TY_KindData_fn/COMBINATION_TY_KindData
					symbol external misc EXTENT_KOVS --> /main/template/constants/EXTENT_KOVS_con/EXTENT_KOVS
					symbol external misc COPY_KOVS --> /main/template/constants/COPY_KOVS_con/COPY_KOVS
					symbol external misc COMBINATION_TY_Copy --> /main/template/functions/COMBINATION_TY_Copy_fn/COMBINATION_TY_Copy
					symbol external misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
					symbol external misc COMBINATION_TY_Compare --> /main/template/functions/COMBINATION_TY_Compare_fn/COMBINATION_TY_Compare
					symbol external misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
					symbol external misc COMBINATION_TY_Hash --> /main/template/functions/COMBINATION_TY_Hash_fn/COMBINATION_TY_Hash
					symbol external misc DEBUG_KOVS --> /main/template/constants/DEBUG_KOVS_con/DEBUG_KOVS
					symbol external misc COMBINATION_TY_Say --> /main/template/functions/COMBINATION_TY_Say_fn/COMBINATION_TY_Say
					local task K_unchecked
					local arg1 K_unchecked
					local arg2 K_unchecked
					local arg3 K_unchecked
					code
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked CREATE_KOVS
									code
										inv !return
											inv COMBINATION_TY_Create
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked DESTROY_KOVS
									code
										inv COMBINATION_TY_Destroy
											val K_unchecked arg1
								inv !case
									val K_unchecked MAKEMUTABLE_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYKIND_KOVS
									code
										inv !return
											inv COMBINATION_TY_CopyKind
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked COPYQUICK_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYSB_KOVS
									code
										inv BlkValueCopySB1
											val K_unchecked arg1
											val K_unchecked arg2
								inv !case
									val K_unchecked KINDDATA_KOVS
									code
										inv !return
											inv COMBINATION_TY_KindData
												val K_unchecked arg1
								inv !case
									val K_unchecked EXTENT_KOVS
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !case
									val K_unchecked COPY_KOVS
									code
										inv COMBINATION_TY_Copy
											val K_unchecked arg1
											val K_unchecked arg2
											val K_unchecked arg3
								inv !case
									val K_unchecked COMPARE_KOVS
									code
										inv !return
											inv COMBINATION_TY_Compare
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked HASH_KOVS
									code
										inv !return
											inv COMBINATION_TY_Hash
												val K_unchecked arg1
								inv !case
									val K_unchecked DEBUG_KOVS
									code
										inv !print
											val K_unchecked " = "
										inv COMBINATION_TY_Say
											val K_unchecked arg1
						inv !return
							val K_unchecked 0
				constant COMBINATION_TY_Support K_unchecked_function = COMBINATION_TY_Support_B __assimilated=1
			package COMBINATION_TY_Create_fn _function
				symbol public misc COMBINATION_TY_Create
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Create_B _code
					symbol private misc kind
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sb
					symbol private misc long_block
					symbol private misc N
					symbol private misc i
					symbol private misc bk
					symbol private misc v
					symbol external misc KindBaseArity --> /main/template/functions/KindBaseArity_fn/KindBaseArity
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00518 --> /main/connectors/plug_00518
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc plug_00465 --> /main/connectors/plug_00465
					symbol external misc BlkValueCreateSB1 --> /main/template/functions/BlkValueCreateSB1_fn/BlkValueCreateSB1
					local kind K_unchecked
					local sb K_unchecked
					local long_block K_unchecked
					local N K_unchecked
					local i K_unchecked
					local bk K_unchecked
					local v K_unchecked
					code
						inv !store
							reference
								val K_unchecked N
							inv KindBaseArity
								val K_unchecked kind
						inv !store
							reference
								val K_unchecked long_block
							inv FlexAllocate
								inv !times
									inv !plus
										val K_unchecked COMBINATION_ITEM_BASE
										val K_unchecked N
									val K_unchecked plug_00139
								val K_unchecked plug_00518
								val K_unchecked BLK_FLAG_WORD
						inv BlkValueWrite
							val K_unchecked long_block
							val K_unchecked COMBINATION_KIND_F
							val K_unchecked kind
							val K_unchecked 1
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked N
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked bk
									inv KindBaseTerm
										val K_unchecked kind
										val K_unchecked i
								inv !ifelse
									inv plug_00460
										val K_unchecked bk
									code
										inv !store
											reference
												val K_unchecked v
											inv BlkValueCreate
												val K_unchecked bk
									code
										inv !store
											reference
												val K_unchecked v
											inv plug_00465
												val K_unchecked bk
								inv BlkValueWrite
									val K_unchecked long_block
									inv !plus
										val K_unchecked COMBINATION_ITEM_BASE
										val K_unchecked i
									val K_unchecked v
									val K_unchecked 1
						inv !return
							inv BlkValueCreateSB1
								val K_unchecked sb
								val K_unchecked long_block
				constant COMBINATION_TY_Create K_unchecked_function = COMBINATION_TY_Create_B __assimilated=1
			package COMBINATION_TY_Destroy_fn _function
				symbol public misc COMBINATION_TY_Destroy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Destroy_B _code
					symbol private misc comb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kind
					symbol private misc no_items
					symbol private misc i
					symbol private misc bk
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					symbol external misc KindBaseArity --> /main/template/functions/KindBaseArity_fn/KindBaseArity
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					local comb K_unchecked
					local kind K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local bk K_unchecked
					code
						inv !store
							reference
								val K_unchecked kind
							inv BlkValueRead
								val K_unchecked comb
								val K_unchecked COMBINATION_KIND_F
						inv !store
							reference
								val K_unchecked no_items
							inv KindBaseArity
								val K_unchecked kind
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked bk
									inv KindBaseTerm
										val K_unchecked kind
										val K_unchecked i
								inv !if
									inv plug_00460
										val K_unchecked bk
									code
										inv BlkValueFree
											inv BlkValueRead
												val K_unchecked comb
												inv !plus
													val K_unchecked i
													val K_unchecked COMBINATION_ITEM_BASE
				constant COMBINATION_TY_Destroy K_unchecked_function = COMBINATION_TY_Destroy_B __assimilated=1
			package COMBINATION_TY_CopyKind_fn _function
				symbol public misc COMBINATION_TY_CopyKind
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_CopyKind_B _code
					symbol private misc to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					local to K_unchecked
					local from K_unchecked
					code
						inv BlkValueWrite
							val K_unchecked to
							val K_unchecked COMBINATION_KIND_F
							inv BlkValueRead
								val K_unchecked from
								val K_unchecked COMBINATION_KIND_F
				constant COMBINATION_TY_CopyKind K_unchecked_function = COMBINATION_TY_CopyKind_B __assimilated=1
			package COMBINATION_TY_CopySB_fn _function
				symbol public misc COMBINATION_TY_CopySB
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_CopySB_B _code
					symbol private misc to
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol external misc BlkValueCopySB1 --> /main/template/functions/BlkValueCopySB1_fn/BlkValueCopySB1
					local to K_unchecked
					local from K_unchecked
					code
						inv BlkValueCopySB1
							val K_unchecked to
							val K_unchecked from
				constant COMBINATION_TY_CopySB K_unchecked_function = COMBINATION_TY_CopySB_B __assimilated=1
			package COMBINATION_TY_KindData_fn _function
				symbol public misc COMBINATION_TY_KindData
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_KindData_B _code
					symbol private misc comb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					local comb K_unchecked
					code
						inv !return
							inv BlkValueRead
								val K_unchecked comb
								val K_unchecked COMBINATION_KIND_F
				constant COMBINATION_TY_KindData K_unchecked_function = COMBINATION_TY_KindData_B __assimilated=1
			package COMBINATION_TY_Copy_fn _function
				symbol public misc COMBINATION_TY_Copy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Copy_B _code
					symbol private misc to_comb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from_comb
					symbol private misc precopied_comb_kov
					symbol private misc no_items
					symbol private misc i
					symbol private misc nv
					symbol private misc kind
					symbol private misc bk
					symbol external misc KindBaseArity --> /main/template/functions/KindBaseArity_fn/KindBaseArity
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					local to_comb K_unchecked
					local from_comb K_unchecked
					local precopied_comb_kov K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local nv K_unchecked
					local kind K_unchecked
					local bk K_unchecked
					code
						inv !store
							reference
								val K_unchecked no_items
							inv KindBaseArity
								val K_unchecked precopied_comb_kov
						inv BlkValueWrite
							val K_unchecked to_comb
							val K_unchecked COMBINATION_KIND_F
							val K_unchecked precopied_comb_kov
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked bk
									inv KindBaseTerm
										val K_unchecked kind
										val K_unchecked i
								inv !if
									inv plug_00460
										val K_unchecked bk
									code
										inv !store
											reference
												val K_unchecked nv
											inv BlkValueCreate
												val K_unchecked bk
										inv BlkValueCopy
											val K_unchecked nv
											inv BlkValueRead
												val K_unchecked from_comb
												inv !plus
													val K_unchecked i
													val K_unchecked COMBINATION_ITEM_BASE
										inv BlkValueWrite
											val K_unchecked to_comb
											inv !plus
												val K_unchecked i
												val K_unchecked COMBINATION_ITEM_BASE
											val K_unchecked nv
				constant COMBINATION_TY_Copy K_unchecked_function = COMBINATION_TY_Copy_B __assimilated=1
			package COMBINATION_TY_Compare_fn _function
				symbol public misc COMBINATION_TY_Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Compare_B _code
					symbol private misc left_comb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc right_comb
					symbol private misc delta
					symbol private misc no_items
					symbol private misc i
					symbol private misc cf
					symbol private misc kind
					symbol private misc bk
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					symbol external misc KindBaseArity --> /main/template/functions/KindBaseArity_fn/KindBaseArity
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc plug_00516 --> /main/connectors/plug_00516
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					local left_comb K_unchecked
					local right_comb K_unchecked
					local delta K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local cf K_unchecked
					local kind K_unchecked
					local bk K_unchecked
					code
						inv !store
							reference
								val K_unchecked kind
							inv BlkValueRead
								val K_unchecked left_comb
								val K_unchecked COMBINATION_KIND_F
						inv !store
							reference
								val K_unchecked no_items
							inv KindBaseArity
								val K_unchecked kind
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked bk
									inv KindBaseTerm
										val K_unchecked kind
										val K_unchecked i
								inv !store
									reference
										val K_unchecked cf
									inv plug_00516
										val K_unchecked bk
								inv !ifelse
									inv !eq
										val K_unchecked cf
										inv !alternative
											val K_unchecked 0
											val K_unchecked UnsignedCompare
									code
										inv !store
											reference
												val K_unchecked delta
											inv !minus
												inv BlkValueRead
													val K_unchecked left_comb
													inv !plus
														val K_unchecked i
														val K_unchecked COMBINATION_ITEM_BASE
												inv BlkValueRead
													val K_unchecked right_comb
													inv !plus
														val K_unchecked i
														val K_unchecked COMBINATION_ITEM_BASE
										inv !if
											val K_unchecked delta
											code
												inv !return
													val K_unchecked delta
									code
										inv !store
											reference
												val K_unchecked delta
											inv !indirect2
												val K_unchecked cf
												inv BlkValueRead
													val K_unchecked left_comb
													inv !plus
														val K_unchecked i
														val K_unchecked COMBINATION_ITEM_BASE
												inv BlkValueRead
													val K_unchecked right_comb
													inv !plus
														val K_unchecked i
														val K_unchecked COMBINATION_ITEM_BASE
										inv !if
											val K_unchecked delta
											code
												inv !return
													val K_unchecked delta
						inv !return
							val K_unchecked 0
				constant COMBINATION_TY_Compare K_unchecked_function = COMBINATION_TY_Compare_B __assimilated=1
			package COMBINATION_TY_Distinguish_fn _function
				symbol public misc COMBINATION_TY_Distinguish
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Distinguish_B _code
					symbol private misc left_comb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc right_comb
					symbol external misc COMBINATION_TY_Compare --> /main/template/functions/COMBINATION_TY_Compare_fn/COMBINATION_TY_Compare
					local left_comb K_unchecked
					local right_comb K_unchecked
					code
						inv !if
							inv !eq
								inv COMBINATION_TY_Compare
									val K_unchecked left_comb
									val K_unchecked right_comb
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant COMBINATION_TY_Distinguish K_unchecked_function = COMBINATION_TY_Distinguish_B __assimilated=1
			package COMBINATION_TY_Hash_fn _function
				symbol public misc COMBINATION_TY_Hash
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Hash_B _code
					symbol private misc comb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kind
					symbol private misc rv
					symbol private misc no_items
					symbol private misc i
					symbol private misc bk
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					symbol external misc KindBaseArity --> /main/template/functions/KindBaseArity_fn/KindBaseArity
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc GetHashValue --> /main/template/functions/GetHashValue_fn/GetHashValue
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					local comb K_unchecked
					local kind K_unchecked
					local rv K_unchecked
					local no_items K_unchecked
					local i K_unchecked
					local bk K_unchecked
					code
						inv !store
							reference
								val K_unchecked rv
							val K_unchecked 0
						inv !store
							reference
								val K_unchecked kind
							inv BlkValueRead
								val K_unchecked comb
								val K_unchecked COMBINATION_KIND_F
						inv !store
							reference
								val K_unchecked no_items
							inv KindBaseArity
								val K_unchecked kind
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !store
									reference
										val K_unchecked bk
									inv KindBaseTerm
										val K_unchecked kind
										val K_unchecked i
								inv !store
									reference
										val K_unchecked rv
									inv !plus
										inv !times
											val K_unchecked rv
											val K_unchecked 33
										inv GetHashValue
											val K_unchecked bk
											inv BlkValueRead
												val K_unchecked comb
												inv !plus
													val K_unchecked i
													val K_unchecked COMBINATION_ITEM_BASE
						inv !return
							val K_unchecked rv
				constant COMBINATION_TY_Hash K_unchecked_function = COMBINATION_TY_Hash_B __assimilated=1
			package COMBINATION_TY_Say_fn _function
				symbol public misc COMBINATION_TY_Say
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package COMBINATION_TY_Say_B _code
					symbol private misc comb
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc format
					symbol private misc no_items
					symbol private misc v
					symbol private misc i
					symbol private misc kind
					symbol private misc bk
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00518 --> /main/connectors/plug_00518
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
					symbol external misc KindBaseArity --> /main/template/functions/KindBaseArity_fn/KindBaseArity
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					local comb K_unchecked
					local format K_unchecked
					local no_items K_unchecked
					local v K_unchecked
					local i K_unchecked
					local kind K_unchecked
					local bk K_unchecked
					code
						inv !if
							inv !or
								inv !eq
									val K_unchecked comb
									val K_unchecked 0
								inv !ne
									inv BlkValueWeakKind
										val K_unchecked comb
									val K_unchecked plug_00518
							code
								inv !return
									val K_unchecked 1
						inv !store
							reference
								val K_unchecked kind
							inv BlkValueRead
								val K_unchecked comb
								val K_unchecked COMBINATION_KIND_F
						inv !store
							reference
								val K_unchecked no_items
							inv KindBaseArity
								val K_unchecked kind
						inv !print
							val K_unchecked "("
						inv !for
							inv !store
								reference
									val K_unchecked i
								val K_unchecked 0
							inv !lt
								val K_unchecked i
								val K_unchecked no_items
							inv !postincrement
								reference
									val K_unchecked i
							code
								inv !if
									inv !gt
										val K_unchecked i
										val K_unchecked 0
									code
										inv !print
											val K_unchecked ", "
								inv !store
									reference
										val K_unchecked bk
									inv KindBaseTerm
										val K_unchecked kind
										val K_unchecked i
								inv !store
									reference
										val K_unchecked v
									inv BlkValueRead
										val K_unchecked comb
										inv !plus
											val K_unchecked i
											val K_unchecked COMBINATION_ITEM_BASE
								inv !ifelse
									inv !eq
										val K_unchecked bk
										val K_unchecked plug_00515
									code
										inv LIST_OF_TY_Say
											val K_unchecked v
											val K_unchecked 1
									code
										inv plug_00417
											val K_unchecked bk
											val K_unchecked v
						inv !print
							val K_unchecked ")"
				constant COMBINATION_TY_Say K_unchecked_function = COMBINATION_TY_Say_B __assimilated=1
			package RELATION_TY_Support_fn _function
				symbol public misc RELATION_TY_Support
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Support_B _code
					symbol private misc task
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc arg1
					symbol private misc arg2
					symbol private misc arg3
					symbol external misc CREATE_KOVS --> /main/template/constants/CREATE_KOVS_con/CREATE_KOVS
					symbol external misc RELATION_TY_Create --> /main/template/functions/RELATION_TY_Create_fn/RELATION_TY_Create
					symbol external misc DESTROY_KOVS --> /main/template/constants/DESTROY_KOVS_con/DESTROY_KOVS
					symbol external misc RELATION_TY_Destroy --> /main/template/functions/RELATION_TY_Destroy_fn/RELATION_TY_Destroy
					symbol external misc MAKEMUTABLE_KOVS --> /main/template/constants/MAKEMUTABLE_KOVS_con/MAKEMUTABLE_KOVS
					symbol external misc COPYQUICK_KOVS --> /main/template/constants/COPYQUICK_KOVS_con/COPYQUICK_KOVS
					symbol external misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
					symbol external misc BlkValueCopySB1 --> /main/template/functions/BlkValueCopySB1_fn/BlkValueCopySB1
					symbol external misc KINDDATA_KOVS --> /main/template/constants/KINDDATA_KOVS_con/KINDDATA_KOVS
					symbol external misc EXTENT_KOVS --> /main/template/constants/EXTENT_KOVS_con/EXTENT_KOVS
					symbol external misc COPY_KOVS --> /main/template/constants/COPY_KOVS_con/COPY_KOVS
					symbol external misc RELATION_TY_Copy --> /main/template/functions/RELATION_TY_Copy_fn/RELATION_TY_Copy
					symbol external misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
					symbol external misc RELATION_TY_Compare --> /main/template/functions/RELATION_TY_Compare_fn/RELATION_TY_Compare
					symbol external misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
					symbol external misc DEBUG_KOVS --> /main/template/constants/DEBUG_KOVS_con/DEBUG_KOVS
					symbol external misc RELATION_TY_Say --> /main/template/functions/RELATION_TY_Say_fn/RELATION_TY_Say
					local task K_unchecked
					local arg1 K_unchecked
					local arg2 K_unchecked
					local arg3 K_unchecked
					code
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked CREATE_KOVS
									code
										inv !return
											inv RELATION_TY_Create
												val K_unchecked arg1
												val K_unchecked 0
												val K_unchecked arg2
								inv !case
									val K_unchecked DESTROY_KOVS
									code
										inv RELATION_TY_Destroy
											val K_unchecked arg1
								inv !case
									val K_unchecked MAKEMUTABLE_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYQUICK_KOVS
									code
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked COPYSB_KOVS
									code
										inv BlkValueCopySB1
											val K_unchecked arg1
											val K_unchecked arg2
								inv !case
									val K_unchecked KINDDATA_KOVS
									code
										inv !return
											val K_unchecked 0
								inv !case
									val K_unchecked EXTENT_KOVS
									code
										inv !return
											inv !unaryminus
												val K_unchecked 1
								inv !case
									val K_unchecked COPY_KOVS
									code
										inv RELATION_TY_Copy
											val K_unchecked arg1
											val K_unchecked arg2
								inv !case
									val K_unchecked COMPARE_KOVS
									code
										inv !return
											inv RELATION_TY_Compare
												val K_unchecked arg1
												val K_unchecked arg2
								inv !case
									val K_unchecked HASH_KOVS
									code
										inv !return
											val K_unchecked arg1
								inv !case
									val K_unchecked DEBUG_KOVS
									code
										inv !print
											val K_unchecked " = "
										inv RELATION_TY_Say
											val K_unchecked arg1
						inv !return
							val K_unchecked 0
				constant RELATION_TY_Support K_unchecked_function = RELATION_TY_Support_B __assimilated=1
			package RelationTest_fn _function
				symbol public misc RelationTest
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RelationTest_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol private misc handler
					symbol private misc rv
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					local relation K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local handler K_unchecked
					local rv K_unchecked
					code
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked relation
								val K_unchecked RR_HANDLER
						inv !return
							inv !indirect4
								val K_unchecked handler
								val K_unchecked relation
								val K_unchecked task
								val K_unchecked X
								val K_unchecked Y
				constant RelationTest K_unchecked_function = RelationTest_B __assimilated=1
			package RlnGetF_fn _function
				symbol public misc RlnGetF
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RlnGetF_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc fld
					symbol private misc i
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					local rel K_unchecked
					local fld K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked rel
							inv BlkValueGetLongBlock
								val K_unchecked rel
						inv !return
							inv !lookup
								val K_unchecked rel
								val K_unchecked fld
				constant RlnGetF K_unchecked_function = RlnGetF_B __assimilated=1
			package RlnSetF_fn _function
				symbol public misc RlnSetF
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RlnSetF_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc fld
					symbol private misc v
					symbol external misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
					local rel K_unchecked
					local fld K_unchecked
					local v K_unchecked
					code
						inv !store
							reference
								val K_unchecked rel
							inv BlkValueGetLongBlock
								val K_unchecked rel
						inv !store
							reference
								inv !lookup
									val K_unchecked rel
									val K_unchecked fld
							val K_unchecked v
				constant RlnSetF K_unchecked_function = RlnSetF_B __assimilated=1
			package EmptyRelationHandler_fn _function
				symbol public misc EmptyRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package EmptyRelationHandler_B _code
					symbol private misc relation
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol external misc RELS_EMPTY --> /main/template/constants/RELS_EMPTY_con/RELS_EMPTY
					local relation K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked task
								val K_unchecked RELS_EMPTY
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant EmptyRelationHandler K_unchecked_function = EmptyRelationHandler_B __assimilated=1
			package RELATION_TY_Create_fn _function
				symbol public misc RELATION_TY_Create
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Create_B _code
					symbol private misc kov
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc from
					symbol private misc sb
					symbol private misc rel
					symbol private misc i
					symbol private misc skov
					symbol private misc handler
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRP_MIN_SIZE --> /main/template/constants/RRP_MIN_SIZE_con/RRP_MIN_SIZE
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00519 --> /main/connectors/plug_00519
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc plug_00520 --> /main/connectors/plug_00520
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_HANDLER --> /main/template/constants/RRV_HANDLER_con/RRV_HANDLER
					symbol external misc EmptyRelationHandler --> /main/template/functions/EmptyRelationHandler_fn/EmptyRelationHandler
					symbol external misc ChooseRelationHandler --> /main/template/functions/ChooseRelationHandler_fn/ChooseRelationHandler
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc RRV_NAME --> /main/template/constants/RRV_NAME_con/RRV_NAME
					symbol external misc RRV_PERMISSIONS --> /main/template/constants/RRV_PERMISSIONS_con/RRV_PERMISSIONS
					symbol external misc plug_00521 --> /main/connectors/plug_00521
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol external misc plug_00488 --> /main/connectors/plug_00488
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DESCRIPTION --> /main/template/constants/RRV_DESCRIPTION_con/RRV_DESCRIPTION
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc BlkValueCreateSB1 --> /main/template/functions/BlkValueCreateSB1_fn/BlkValueCreateSB1
					local kov K_unchecked
					local from K_unchecked
					local sb K_unchecked
					local rel K_unchecked
					local i K_unchecked
					local skov K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked rel
							inv FlexAllocate
								inv !times
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 3
											val K_unchecked RRP_MIN_SIZE
									val K_unchecked plug_00139
								val K_unchecked plug_00519
								inv !plus
									val K_unchecked BLK_FLAG_WORD
									val K_unchecked BLK_FLAG_MULTIPLE
						inv !if
							inv !and
								inv !eq
									val K_unchecked from
									val K_unchecked 0
								inv !ne
									val K_unchecked kov
									val K_unchecked 0
							code
								inv !store
									reference
										val K_unchecked from
									inv plug_00520
										val K_unchecked kov
						inv !ifelse
							val K_unchecked from
							code
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked RRV_DATA_BASE
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked i
											inv BlkValueRead
												val K_unchecked from
												val K_unchecked i
											val K_unchecked 1
								inv !if
									inv !eq
										inv BlkValueRead
											val K_unchecked from
											val K_unchecked RRV_HANDLER
										val K_unchecked EmptyRelationHandler
									code
										inv !store
											reference
												val K_unchecked handler
											inv ChooseRelationHandler
												inv BlkValueRead
													val K_unchecked rel
													val K_unchecked RRV_KIND
													val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_NAME
											val K_unchecked "anonymous relation"
											val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_PERMISSIONS
											inv !plus
												inv !plus
													inv !plus
														val K_unchecked plug_00521
														val K_unchecked plug_00522
													val K_unchecked plug_00523
												val K_unchecked plug_00488
											val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_HANDLER
											val K_unchecked handler
											val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_STORAGE
											inv !minus
												val K_unchecked RRP_MIN_SIZE
												val K_unchecked 1
											val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_DESCRIPTION
											val K_unchecked "an anonymous relation"
											val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_USED
											val K_unchecked 0
											val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_FILLED
											val K_unchecked 0
											val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked handler
									inv ChooseRelationHandler
										val K_unchecked kov
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_NAME
									val K_unchecked "anonymous relation"
									val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_PERMISSIONS
									inv !plus
										inv !plus
											inv !plus
												val K_unchecked plug_00521
												val K_unchecked plug_00522
											val K_unchecked plug_00523
										val K_unchecked plug_00488
									val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_STORAGE
									inv !minus
										val K_unchecked RRP_MIN_SIZE
										val K_unchecked 1
									val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_KIND
									val K_unchecked kov
									val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_HANDLER
									val K_unchecked handler
									val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_DESCRIPTION
									val K_unchecked "an anonymous relation"
									val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_USED
									val K_unchecked 0
									val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_FILLED
									val K_unchecked 0
									val K_unchecked 1
						inv !return
							inv BlkValueCreateSB1
								val K_unchecked sb
								val K_unchecked rel
				constant RELATION_TY_Create K_unchecked_function = RELATION_TY_Create_B __assimilated=1
			package RELATION_TY_Destroy_fn _function
				symbol public misc RELATION_TY_Destroy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Destroy_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc handler
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_HANDLER --> /main/template/constants/RRV_HANDLER_con/RRV_HANDLER
					symbol external misc RELS_DESTROY --> /main/template/constants/RELS_DESTROY_con/RELS_DESTROY
					local rel K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked handler
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_HANDLER
						inv !indirect2
							val K_unchecked handler
							val K_unchecked rel
							val K_unchecked RELS_DESTROY
				constant RELATION_TY_Destroy K_unchecked_function = RELATION_TY_Destroy_B __assimilated=1
			package RELATION_TY_Copy_fn _function
				symbol public misc RELATION_TY_Copy
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Copy_B _code
					symbol private misc lto
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc lfrom
					symbol private misc handler
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_HANDLER --> /main/template/constants/RRV_HANDLER_con/RRV_HANDLER
					symbol external misc RELS_COPY --> /main/template/constants/RELS_COPY_con/RELS_COPY
					local lto K_unchecked
					local lfrom K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked handler
							inv BlkValueRead
								val K_unchecked lto
								val K_unchecked RRV_HANDLER
						inv !indirect2
							val K_unchecked handler
							val K_unchecked lto
							val K_unchecked RELS_COPY
				constant RELATION_TY_Copy K_unchecked_function = RELATION_TY_Copy_B __assimilated=1
			package RELATION_TY_Compare_fn _function
				symbol public misc RELATION_TY_Compare
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Compare_B _code
					symbol private misc rleft
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc rright
					symbol private misc ind1
					symbol private misc ind2
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_HANDLER --> /main/template/constants/RRV_HANDLER_con/RRV_HANDLER
					symbol external misc IsMutableRelationHandler --> /main/template/functions/IsMutableRelationHandler_fn/IsMutableRelationHandler
					local rleft K_unchecked
					local rright K_unchecked
					local ind1 K_unchecked
					local ind2 K_unchecked
					code
						inv !store
							reference
								val K_unchecked ind1
							inv BlkValueRead
								val K_unchecked rleft
								val K_unchecked RRV_HANDLER
						inv !store
							reference
								val K_unchecked ind2
							inv BlkValueRead
								val K_unchecked rright
								val K_unchecked RRV_HANDLER
						inv !if
							inv !ne
								val K_unchecked ind1
								val K_unchecked ind2
							code
								inv !return
									inv !minus
										val K_unchecked ind1
										val K_unchecked ind2
						inv !if
							inv !eq
								inv IsMutableRelationHandler
									val K_unchecked ind1
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							inv !minus
								val K_unchecked rleft
								val K_unchecked rright
				constant RELATION_TY_Compare K_unchecked_function = RELATION_TY_Compare_B __assimilated=1
			package RELATION_TY_Distinguish_fn _function
				symbol public misc RELATION_TY_Distinguish
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Distinguish_B _code
					symbol private misc rleft
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc rright
					symbol external misc RELATION_TY_Compare --> /main/template/functions/RELATION_TY_Compare_fn/RELATION_TY_Compare
					local rleft K_unchecked
					local rright K_unchecked
					code
						inv !if
							inv !eq
								inv RELATION_TY_Compare
									val K_unchecked rleft
									val K_unchecked rright
								val K_unchecked 0
							code
								inv !return
									val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant RELATION_TY_Distinguish K_unchecked_function = RELATION_TY_Distinguish_B __assimilated=1
			package RELATION_TY_Say_fn _function
				symbol public misc RELATION_TY_Say
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Say_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_NAME --> /main/template/constants/RR_NAME_con/RR_NAME
					local rel K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked rel
								val K_unchecked 0
							code
								inv !print
									val K_unchecked "(null relation)"
							code
								inv !printstring
									inv RlnGetF
										val K_unchecked rel
										val K_unchecked RR_NAME
				constant RELATION_TY_Say K_unchecked_function = RELATION_TY_Say_B __assimilated=1
			package RELATION_TY_Name_fn _function
				symbol public misc RELATION_TY_Name
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Name_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc txt
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc RRV_NAME --> /main/template/constants/RRV_NAME_con/RRV_NAME
					symbol external misc RRV_DESCRIPTION --> /main/template/constants/RRV_DESCRIPTION_con/RRV_DESCRIPTION
					local rel K_unchecked
					local txt K_unchecked
					code
						inv !if
							val K_unchecked rel
							code
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_NAME
									val K_unchecked txt
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_DESCRIPTION
									val K_unchecked txt
				constant RELATION_TY_Name K_unchecked_function = RELATION_TY_Name_B __assimilated=1
			package ChooseRelationHandler_fn _function
				symbol public misc ChooseRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ChooseRelationHandler_B _code
					symbol private misc kov
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc sym
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc SymHashListRelationHandler --> /main/template/functions/SymHashListRelationHandler_fn/SymHashListRelationHandler
					symbol external misc HashListRelationHandler --> /main/template/functions/HashListRelationHandler_fn/HashListRelationHandler
					symbol external misc SymDoubleHashSetRelationHandler --> /main/template/functions/SymDoubleHashSetRelationHandler_fn/SymDoubleHashSetRelationHandler
					symbol external misc DoubleHashSetRelationHandler --> /main/template/functions/DoubleHashSetRelationHandler_fn/DoubleHashSetRelationHandler
					local kov K_unchecked
					local sym K_unchecked
					code
						inv !if
							inv plug_00460
								inv KindBaseTerm
									val K_unchecked kov
									val K_unchecked 0
							code
								inv !if
									val K_unchecked sym
									code
										inv !return
											val K_unchecked SymHashListRelationHandler
								inv !return
									val K_unchecked HashListRelationHandler
						inv !if
							val K_unchecked sym
							code
								inv !return
									val K_unchecked SymDoubleHashSetRelationHandler
						inv !return
							val K_unchecked DoubleHashSetRelationHandler
				constant ChooseRelationHandler K_unchecked_function = ChooseRelationHandler_B __assimilated=1
			package IsMutableRelationHandler_fn _function
				symbol public misc IsMutableRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package IsMutableRelationHandler_B _code
					symbol private misc h
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol external misc SymHashListRelationHandler --> /main/template/functions/SymHashListRelationHandler_fn/SymHashListRelationHandler
					symbol external misc HashListRelationHandler --> /main/template/functions/HashListRelationHandler_fn/HashListRelationHandler
					symbol external misc SymDoubleHashSetRelationHandler --> /main/template/functions/SymDoubleHashSetRelationHandler_fn/SymDoubleHashSetRelationHandler
					symbol external misc DoubleHashSetRelationHandler --> /main/template/functions/DoubleHashSetRelationHandler_fn/DoubleHashSetRelationHandler
					local h K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked h
								inv !alternative
									inv !alternative
										inv !alternative
											val K_unchecked SymHashListRelationHandler
											val K_unchecked HashListRelationHandler
										val K_unchecked SymDoubleHashSetRelationHandler
									val K_unchecked DoubleHashSetRelationHandler
							code
								inv !return
									val K_unchecked 1
						inv !return
							val K_unchecked 0
				constant IsMutableRelationHandler K_unchecked_function = IsMutableRelationHandler_B __assimilated=1
			package RELATION_TY_SetValency_fn _function
				symbol public misc RELATION_TY_SetValency
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_SetValency_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc val
					symbol private misc kov
					symbol private misc filled
					symbol private misc cur
					symbol private misc handler
					symbol private misc ext
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
					symbol external misc RTP_RELATIONCHANGEIMPOSSIBLE --> /main/template/constants/RTP_RELATIONCHANGEIMPOSSIBLE_con/RTP_RELATIONCHANGEIMPOSSIBLE
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc RRVAL_EQUIV --> /main/template/constants/RRVAL_EQUIV_con/RRVAL_EQUIV
					symbol external misc RRVAL_SYM_V_TO_V --> /main/template/constants/RRVAL_SYM_V_TO_V_con/RRVAL_SYM_V_TO_V
					symbol external misc RRVAL_SYM_O_TO_O --> /main/template/constants/RRVAL_SYM_O_TO_O_con/RRVAL_SYM_O_TO_O
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RRV_HANDLER --> /main/template/constants/RRV_HANDLER_con/RRV_HANDLER
					symbol external misc RRVAL_V_TO_V --> /main/template/constants/RRVAL_V_TO_V_con/RRVAL_V_TO_V
					symbol external misc ChooseRelationHandler --> /main/template/functions/ChooseRelationHandler_fn/ChooseRelationHandler
					symbol external misc RRVAL_V_TO_O --> /main/template/constants/RRVAL_V_TO_O_con/RRVAL_V_TO_O
					symbol external misc HashTableRelationHandler --> /main/template/functions/HashTableRelationHandler_fn/HashTableRelationHandler
					symbol external misc RRVAL_O_TO_V --> /main/template/constants/RRVAL_O_TO_V_con/RRVAL_O_TO_V
					symbol external misc ReversedHashTableRelationHandler --> /main/template/functions/ReversedHashTableRelationHandler_fn/ReversedHashTableRelationHandler
					symbol external misc RRVAL_O_TO_O --> /main/template/constants/RRVAL_O_TO_O_con/RRVAL_O_TO_O
					symbol external misc TwoInOneHashTableRelationHandler --> /main/template/functions/TwoInOneHashTableRelationHandler_fn/TwoInOneHashTableRelationHandler
					symbol external misc EquivHashTableRelationHandler --> /main/template/functions/EquivHashTableRelationHandler_fn/EquivHashTableRelationHandler
					symbol external misc Sym2in1HashTableRelationHandler --> /main/template/functions/Sym2in1HashTableRelationHandler_fn/Sym2in1HashTableRelationHandler
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					local rel K_unchecked
					local val K_unchecked
					local kov K_unchecked
					local filled K_unchecked
					local cur K_unchecked
					local handler K_unchecked
					local ext K_unchecked
					code
						inv !store
							reference
								val K_unchecked filled
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_FILLED
						inv !if
							val K_unchecked filled
							code
								inv RunTimeProblem
									val K_unchecked RTP_RELATIONCHANGEIMPOSSIBLE
								inv !return
									val K_unchecked 0
						inv !store
							reference
								val K_unchecked kov
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_KIND
						inv !if
							inv !eq
								val K_unchecked val
								inv !alternative
									inv !alternative
										val K_unchecked RRVAL_EQUIV
										val K_unchecked RRVAL_SYM_V_TO_V
									val K_unchecked RRVAL_SYM_O_TO_O
							code
								inv !if
									inv !ne
										inv KindBaseTerm
											val K_unchecked kov
											val K_unchecked 0
										inv KindBaseTerm
											val K_unchecked kov
											val K_unchecked 1
									code
										inv RunTimeProblem
											val K_unchecked RTP_RELATIONCHANGEIMPOSSIBLE
										inv !return
											val K_unchecked 0
						inv !store
							reference
								val K_unchecked cur
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_HANDLER
						inv !switch
							val K_unchecked val
							code
								inv !case
									val K_unchecked RRVAL_V_TO_V
									code
										inv !store
											reference
												val K_unchecked handler
											inv ChooseRelationHandler
												val K_unchecked kov
												val K_unchecked 0
								inv !case
									val K_unchecked RRVAL_V_TO_O
									code
										inv !store
											reference
												val K_unchecked handler
											val K_unchecked HashTableRelationHandler
								inv !case
									val K_unchecked RRVAL_O_TO_V
									code
										inv !store
											reference
												val K_unchecked handler
											val K_unchecked ReversedHashTableRelationHandler
								inv !case
									val K_unchecked RRVAL_O_TO_O
									code
										inv !store
											reference
												val K_unchecked handler
											val K_unchecked TwoInOneHashTableRelationHandler
								inv !case
									val K_unchecked RRVAL_EQUIV
									code
										inv !store
											reference
												val K_unchecked handler
											val K_unchecked EquivHashTableRelationHandler
								inv !case
									val K_unchecked RRVAL_SYM_V_TO_V
									code
										inv !store
											reference
												val K_unchecked handler
											inv ChooseRelationHandler
												val K_unchecked kov
												val K_unchecked 1
								inv !case
									val K_unchecked RRVAL_SYM_O_TO_O
									code
										inv !store
											reference
												val K_unchecked handler
											val K_unchecked Sym2in1HashTableRelationHandler
								inv !default
									code
										inv RunTimeProblem
											val K_unchecked RTP_RELATIONCHANGEIMPOSSIBLE
										inv !return
											val K_unchecked 0
						inv !if
							inv !eq
								val K_unchecked cur
								val K_unchecked handler
							code
								inv !return
									val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked cur
								val K_unchecked TwoInOneHashTableRelationHandler
							code
								inv !store
									reference
										val K_unchecked ext
									inv !plus
										inv BlkValueRead
											val K_unchecked rel
											val K_unchecked RRV_STORAGE
										val K_unchecked 1
								inv BlkValueSetLBCapacity
									val K_unchecked rel
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 3
											val K_unchecked ext
							code
								inv !if
									inv !eq
										val K_unchecked handler
										val K_unchecked TwoInOneHashTableRelationHandler
									code
										inv !store
											reference
												val K_unchecked ext
											inv !plus
												inv BlkValueRead
													val K_unchecked rel
													val K_unchecked RRV_STORAGE
												val K_unchecked 1
										inv BlkValueSetLBCapacity
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 4
													val K_unchecked ext
						inv BlkValueWrite
							val K_unchecked rel
							val K_unchecked RRV_HANDLER
							val K_unchecked handler
				constant RELATION_TY_SetValency K_unchecked_function = RELATION_TY_SetValency_B __assimilated=1
			package RELATION_TY_GetValency_fn _function
				symbol public misc RELATION_TY_GetValency
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_GetValency_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc handler
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_PERMISSIONS --> /main/template/constants/RRV_PERMISSIONS_con/RRV_PERMISSIONS
					symbol external misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
					local rel K_unchecked
					local handler K_unchecked
					code
						inv !return
							inv !bitwiseand
								inv BlkValueRead
									val K_unchecked rel
									val K_unchecked RRV_PERMISSIONS
								val K_unchecked VALENCY_MASK
				constant RELATION_TY_GetValency K_unchecked_function = RELATION_TY_GetValency_B __assimilated=1
			package DoubleHashSetRelationHandler_fn _function
				symbol public misc DoubleHashSetRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DoubleHashSetRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol private misc sym
					symbol private misc kov
					symbol private misc kx
					symbol private misc ky
					symbol private misc at
					symbol private misc tmp
					symbol private misc v
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc RELATION_TY_SetValency --> /main/template/functions/RELATION_TY_SetValency_fn/RELATION_TY_SetValency
					symbol external misc RELS_DESTROY --> /main/template/constants/RELS_DESTROY_con/RELS_DESTROY
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRF_USED --> /main/template/constants/RRF_USED_con/RRF_USED
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc RELS_COPY --> /main/template/constants/RELS_COPY_con/RELS_COPY
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc plug_00488 --> /main/connectors/plug_00488
					symbol external misc RRV_DESCRIPTION --> /main/template/constants/RRV_DESCRIPTION_con/RRV_DESCRIPTION
					symbol external misc plug_00516 --> /main/connectors/plug_00516
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc RELS_EMPTY --> /main/template/constants/RELS_EMPTY_con/RELS_EMPTY
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc DoubleHashSetRelationHandler --> /main/template/functions/DoubleHashSetRelationHandler_fn/DoubleHashSetRelationHandler
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc plug_00524 --> /main/connectors/plug_00524
					symbol external misc RLANY_GET_X --> /main/template/constants/RLANY_GET_X_con/RLANY_GET_X
					symbol external misc RLANY_CAN_GET_X --> /main/template/constants/RLANY_CAN_GET_X_con/RLANY_CAN_GET_X
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc RLANY_CAN_GET_Y --> /main/template/constants/RLANY_CAN_GET_Y_con/RLANY_CAN_GET_Y
					symbol external misc RLANY_GET_Y --> /main/template/constants/RLANY_GET_Y_con/RLANY_GET_Y
					symbol external misc plug_00525 --> /main/connectors/plug_00525
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc LIST_OF_TY_SetLength --> /main/template/functions/LIST_OF_TY_SetLength_fn/LIST_OF_TY_SetLength
					symbol external misc LIST_OF_TY_InsertItem --> /main/template/functions/LIST_OF_TY_InsertItem_fn/LIST_OF_TY_InsertItem
					symbol external misc plug_00526 --> /main/connectors/plug_00526
					symbol external misc plug_00527 --> /main/connectors/plug_00527
					symbol external misc RLIST_ALL_X --> /main/template/constants/RLIST_ALL_X_con/RLIST_ALL_X
					symbol external misc RLIST_ALL_Y --> /main/template/constants/RLIST_ALL_Y_con/RLIST_ALL_Y
					symbol external misc RLIST_ALL_PAIRS --> /main/template/constants/RLIST_ALL_PAIRS_con/RLIST_ALL_PAIRS
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					symbol external misc DoubleHashSetLookUp --> /main/template/functions/DoubleHashSetLookUp_fn/DoubleHashSetLookUp
					symbol external misc plug_00521 --> /main/connectors/plug_00521
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc RRF_SINGLE --> /main/template/constants/RRF_SINGLE_con/RRF_SINGLE
					symbol external misc DoubleHashSetCheckResize --> /main/template/functions/DoubleHashSetCheckResize_fn/DoubleHashSetCheckResize
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local sym K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local at K_unchecked
					local tmp K_unchecked
					local v K_unchecked
					code
						inv !store
							reference
								val K_unchecked kov
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_KIND
						inv !store
							reference
								val K_unchecked kx
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked ky
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked task
								val K_unchecked RELS_SET_VALENCY
							code
								inv !return
									inv RELATION_TY_SetValency
										val K_unchecked rel
										val K_unchecked X
							code
								inv !ifelse
									inv !eq
										val K_unchecked task
										val K_unchecked RELS_DESTROY
									code
										inv !store
											reference
												val K_unchecked kx
											inv plug_00460
												val K_unchecked kx
										inv !store
											reference
												val K_unchecked ky
											inv plug_00460
												val K_unchecked ky
										inv !if
											inv !not
												inv !or
													val K_unchecked kx
													val K_unchecked ky
											code
												inv !return
													val K_unchecked 1
										inv !for
											inv !store
												reference
													val K_unchecked at
												inv BlkValueRead
													val K_unchecked rel
													val K_unchecked RRV_STORAGE
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											inv !postdecrement
												reference
													val K_unchecked at
											code
												inv !store
													reference
														val K_unchecked tmp
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
												inv !if
													inv !bitwiseand
														val K_unchecked tmp
														val K_unchecked RRF_USED
													code
														inv !if
															val K_unchecked kx
															code
																inv BlkValueFree
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			inv !plus
																				val K_unchecked RRV_DATA_BASE
																				inv !times
																					val K_unchecked 3
																					val K_unchecked at
																			val K_unchecked 1
														inv !if
															val K_unchecked ky
															code
																inv BlkValueFree
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			inv !plus
																				val K_unchecked RRV_DATA_BASE
																				inv !times
																					val K_unchecked 3
																					val K_unchecked at
																			val K_unchecked 2
												inv !postdecrement
													reference
														val K_unchecked at
										inv !return
											val K_unchecked 1
									code
										inv !ifelse
											inv !eq
												val K_unchecked task
												val K_unchecked RELS_COPY
											code
												inv !store
													reference
														val K_unchecked X
													inv plug_00460
														val K_unchecked kx
												inv !store
													reference
														val K_unchecked Y
													inv plug_00460
														val K_unchecked ky
												inv !if
													inv !not
														inv !or
															val K_unchecked X
															val K_unchecked Y
													code
														inv !return
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked at
													inv BlkValueRead
														val K_unchecked rel
														val K_unchecked RRV_STORAGE
												inv !while
													inv !ge
														val K_unchecked at
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked tmp
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
														inv !if
															inv !bitwiseand
																val K_unchecked tmp
																val K_unchecked RRF_USED
															code
																inv !if
																	val K_unchecked X
																	code
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueCopy
																				inv BlkValueCreate
																					val K_unchecked kx
																				val K_unchecked tmp
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				inv !plus
																					val K_unchecked RRV_DATA_BASE
																					inv !times
																						val K_unchecked 3
																						val K_unchecked at
																				val K_unchecked 1
																			val K_unchecked tmp
																inv !if
																	val K_unchecked Y
																	code
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 2
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueCopy
																				inv BlkValueCreate
																					val K_unchecked ky
																				val K_unchecked tmp
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				inv !plus
																					val K_unchecked RRV_DATA_BASE
																					inv !times
																						val K_unchecked 3
																						val K_unchecked at
																				val K_unchecked 2
																			val K_unchecked tmp
														inv !postdecrement
															reference
																val K_unchecked at
												inv !return
													val K_unchecked 1
											code
												inv !ifelse
													inv !eq
														val K_unchecked task
														val K_unchecked plug_00488
													code
														inv !printstring
															inv BlkValueRead
																val K_unchecked rel
																val K_unchecked RRV_DESCRIPTION
														inv !print
															val K_unchecked ":\n"
														inv !if
															val K_unchecked sym
															code
																inv !store
																	reference
																		val K_unchecked kov
																	inv plug_00516
																		val K_unchecked kx
																inv !if
																	inv !not
																		val K_unchecked kov
																	code
																		inv !store
																			reference
																				val K_unchecked kov
																			val K_unchecked UnsignedCompare
														inv !for
															inv !store
																reference
																	val K_unchecked at
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_STORAGE
															inv !ge
																val K_unchecked at
																val K_unchecked 0
															inv !postdecrement
																reference
																	val K_unchecked at
															code
																inv !store
																	reference
																		val K_unchecked tmp
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			val K_unchecked RRV_DATA_BASE
																			inv !times
																				val K_unchecked 3
																				val K_unchecked at
																inv !if
																	inv !bitwiseand
																		val K_unchecked tmp
																		val K_unchecked RRF_USED
																	code
																		inv !store
																			reference
																				val K_unchecked X
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked Y
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 2
																		inv !if
																			inv !and
																				val K_unchecked sym
																				inv !gt
																					inv !indirect2
																						val K_unchecked kov
																						val K_unchecked X
																						val K_unchecked Y
																					val K_unchecked 0
																			code
																				inv !continue
																		inv !print
																			val K_unchecked "  "
																		inv plug_00417
																			val K_unchecked kx
																			val K_unchecked X
																		inv !ifelse
																			val K_unchecked sym
																			code
																				inv !print
																					val K_unchecked " <=> "
																			code
																				inv !print
																					val K_unchecked " >=> "
																		inv plug_00417
																			val K_unchecked ky
																			val K_unchecked Y
																		inv !print
																			val K_unchecked "\n"
														inv !return
															val K_unchecked 1
													code
														inv !ifelse
															inv !eq
																val K_unchecked task
																val K_unchecked RELS_EMPTY
															code
																inv !if
																	inv !eq
																		inv BlkValueRead
																			val K_unchecked rel
																			val K_unchecked RRV_USED
																		val K_unchecked 0
																	code
																		inv !return
																			val K_unchecked 1
																inv !if
																	inv !eq
																		val K_unchecked X
																		val K_unchecked 1
																	code
																		inv DoubleHashSetRelationHandler
																			val K_unchecked rel
																			val K_unchecked RELS_DESTROY
																		inv !for
																			inv !store
																				reference
																					val K_unchecked at
																				inv BlkValueRead
																					val K_unchecked rel
																					val K_unchecked RRV_STORAGE
																			inv !ge
																				val K_unchecked at
																				val K_unchecked 0
																			inv !postdecrement
																				reference
																					val K_unchecked at
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																				inv BlkValueWrite
																					val K_unchecked rel
																					val K_unchecked tmp
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked tmp
																						val K_unchecked 1
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked tmp
																						val K_unchecked 2
																					val K_unchecked 0
																		inv BlkValueWrite
																			val K_unchecked rel
																			val K_unchecked RRV_USED
																			val K_unchecked 0
																		inv BlkValueWrite
																			val K_unchecked rel
																			val K_unchecked RRV_FILLED
																			val K_unchecked 0
																		inv !return
																			val K_unchecked 1
																inv !return
																	val K_unchecked 0
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked task
																		val K_unchecked plug_00524
																	code
																		inv !for
																			inv !store
																				reference
																					val K_unchecked at
																				inv BlkValueRead
																					val K_unchecked rel
																					val K_unchecked RRV_STORAGE
																			inv !ge
																				val K_unchecked at
																				val K_unchecked 0
																			inv !postdecrement
																				reference
																					val K_unchecked at
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																				inv !if
																					inv !bitwiseand
																						inv BlkValueRead
																							val K_unchecked rel
																							val K_unchecked tmp
																						val K_unchecked RRF_USED
																					code
																						inv !ifelse
																							inv !eq
																								val K_unchecked Y
																								inv !alternative
																									val K_unchecked RLANY_GET_X
																									val K_unchecked RLANY_CAN_GET_X
																							code
																								inv !store
																									reference
																										val K_unchecked v
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 2
																								inv !ifelse
																									inv plug_00460
																										val K_unchecked ky
																									code
																										inv !if
																											inv !ne
																												inv BlkValueCompare
																													val K_unchecked v
																													val K_unchecked X
																												val K_unchecked 0
																											code
																												inv !continue
																									code
																										inv !if
																											inv !ne
																												val K_unchecked v
																												val K_unchecked X
																											code
																												inv !continue
																								inv !if
																									inv !eq
																										val K_unchecked Y
																										val K_unchecked RLANY_CAN_GET_X
																									code
																										inv !return
																											val K_unchecked 1
																								inv !return
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 1
																							code
																								inv !store
																									reference
																										val K_unchecked v
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 1
																								inv !ifelse
																									inv plug_00460
																										val K_unchecked kx
																									code
																										inv !if
																											inv !ne
																												inv BlkValueCompare
																													val K_unchecked v
																													val K_unchecked X
																												val K_unchecked 0
																											code
																												inv !continue
																									code
																										inv !if
																											inv !ne
																												val K_unchecked v
																												val K_unchecked X
																											code
																												inv !continue
																								inv !if
																									inv !eq
																										val K_unchecked Y
																										val K_unchecked RLANY_CAN_GET_Y
																									code
																										inv !return
																											val K_unchecked 1
																								inv !return
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 2
																		inv !if
																			inv !eq
																				val K_unchecked Y
																				inv !alternative
																					val K_unchecked RLANY_GET_X
																					val K_unchecked RLANY_GET_Y
																			code
																				inv !print
																					val K_unchecked "*** Lookup failed: value not found ***\n"
																		inv !return
																			val K_unchecked 0
																	code
																		inv !ifelse
																			inv !eq
																				val K_unchecked task
																				val K_unchecked plug_00525
																			code
																				inv !if
																					inv !ne
																						inv BlkValueWeakKind
																							val K_unchecked Y
																						val K_unchecked plug_00515
																					code
																						inv !return
																							val K_unchecked 0
																				inv LIST_OF_TY_SetLength
																					val K_unchecked Y
																					val K_unchecked 0
																				inv !for
																					inv !store
																						reference
																							val K_unchecked at
																						inv BlkValueRead
																							val K_unchecked rel
																							val K_unchecked RRV_STORAGE
																					inv !ge
																						val K_unchecked at
																						val K_unchecked 0
																					inv !postdecrement
																						reference
																							val K_unchecked at
																					code
																						inv !store
																							reference
																								val K_unchecked tmp
																							inv !plus
																								val K_unchecked RRV_DATA_BASE
																								inv !times
																									val K_unchecked 3
																									val K_unchecked at
																						inv !if
																							inv !bitwiseand
																								inv BlkValueRead
																									val K_unchecked rel
																									val K_unchecked tmp
																								val K_unchecked RRF_USED
																							code
																								inv !store
																									reference
																										val K_unchecked v
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 2
																								inv !ifelse
																									inv plug_00460
																										val K_unchecked ky
																									code
																										inv !if
																											inv !ne
																												inv BlkValueCompare
																													val K_unchecked v
																													val K_unchecked X
																												val K_unchecked 0
																											code
																												inv !continue
																									code
																										inv !if
																											inv !ne
																												val K_unchecked v
																												val K_unchecked X
																											code
																												inv !continue
																								inv LIST_OF_TY_InsertItem
																									val K_unchecked Y
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 1
																				inv !return
																					val K_unchecked Y
																			code
																				inv !ifelse
																					inv !eq
																						val K_unchecked task
																						val K_unchecked plug_00526
																					code
																						inv !if
																							inv !ne
																								inv BlkValueWeakKind
																									val K_unchecked Y
																								val K_unchecked plug_00515
																							code
																								inv !return
																									val K_unchecked 0
																						inv LIST_OF_TY_SetLength
																							val K_unchecked Y
																							val K_unchecked 0
																						inv !for
																							inv !store
																								reference
																									val K_unchecked at
																								inv BlkValueRead
																									val K_unchecked rel
																									val K_unchecked RRV_STORAGE
																							inv !ge
																								val K_unchecked at
																								val K_unchecked 0
																							inv !postdecrement
																								reference
																									val K_unchecked at
																							code
																								inv !store
																									reference
																										val K_unchecked tmp
																									inv !plus
																										val K_unchecked RRV_DATA_BASE
																										inv !times
																											val K_unchecked 3
																											val K_unchecked at
																								inv !if
																									inv !bitwiseand
																										inv BlkValueRead
																											val K_unchecked rel
																											val K_unchecked tmp
																										val K_unchecked RRF_USED
																									code
																										inv !store
																											reference
																												val K_unchecked v
																											inv BlkValueRead
																												val K_unchecked rel
																												inv !plus
																													val K_unchecked tmp
																													val K_unchecked 1
																										inv !ifelse
																											inv plug_00460
																												val K_unchecked kx
																											code
																												inv !if
																													inv !ne
																														inv BlkValueCompare
																															val K_unchecked v
																															val K_unchecked X
																														val K_unchecked 0
																													code
																														inv !continue
																											code
																												inv !if
																													inv !ne
																														val K_unchecked v
																														val K_unchecked X
																													code
																														inv !continue
																										inv LIST_OF_TY_InsertItem
																											val K_unchecked Y
																											inv BlkValueRead
																												val K_unchecked rel
																												inv !plus
																													val K_unchecked tmp
																													val K_unchecked 2
																						inv !return
																							val K_unchecked Y
																					code
																						inv !if
																							inv !eq
																								val K_unchecked task
																								val K_unchecked plug_00527
																							code
																								inv !if
																									inv !or
																										inv !eq
																											val K_unchecked X
																											val K_unchecked 0
																										inv !ne
																											inv BlkValueWeakKind
																												val K_unchecked X
																											val K_unchecked plug_00515
																									code
																										inv !return
																											val K_unchecked 0
																								inv LIST_OF_TY_SetLength
																									val K_unchecked X
																									val K_unchecked 0
																								inv !switch
																									val K_unchecked Y
																									code
																										inv !case
																											inv !alternativecase
																												val K_unchecked RLIST_ALL_X
																												val K_unchecked RLIST_ALL_Y
																											code
																												inv !for
																													inv !store
																														reference
																															val K_unchecked at
																														inv BlkValueRead
																															val K_unchecked rel
																															val K_unchecked RRV_STORAGE
																													inv !ge
																														val K_unchecked at
																														val K_unchecked 0
																													inv !postdecrement
																														reference
																															val K_unchecked at
																													code
																														inv !store
																															reference
																																val K_unchecked tmp
																															inv !plus
																																val K_unchecked RRV_DATA_BASE
																																inv !times
																																	val K_unchecked 3
																																	val K_unchecked at
																														inv !if
																															inv !bitwiseand
																																inv BlkValueRead
																																	val K_unchecked rel
																																	val K_unchecked tmp
																																val K_unchecked RRF_USED
																															code
																																inv !postincrement
																																	reference
																																		val K_unchecked tmp
																																inv !if
																																	inv !eq
																																		val K_unchecked Y
																																		val K_unchecked RLIST_ALL_Y
																																	code
																																		inv !postincrement
																																			reference
																																				val K_unchecked tmp
																																inv !store
																																	reference
																																		val K_unchecked v
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		val K_unchecked tmp
																																inv LIST_OF_TY_InsertItem
																																	val K_unchecked X
																																	val K_unchecked v
																																	val K_unchecked 0
																																	val K_unchecked 0
																																	val K_unchecked 1
																												inv !return
																													val K_unchecked X
																										inv !case
																											val K_unchecked RLIST_ALL_PAIRS
																											code
																												inv !store
																													reference
																														val K_unchecked Y
																													inv BlkValueCreate
																														val K_unchecked kov
																												inv !for
																													inv !store
																														reference
																															val K_unchecked at
																														inv BlkValueRead
																															val K_unchecked rel
																															val K_unchecked RRV_STORAGE
																													inv !ge
																														val K_unchecked at
																														val K_unchecked 0
																													inv !postdecrement
																														reference
																															val K_unchecked at
																													code
																														inv !store
																															reference
																																val K_unchecked tmp
																															inv !plus
																																val K_unchecked RRV_DATA_BASE
																																inv !times
																																	val K_unchecked 3
																																	val K_unchecked at
																														inv !if
																															inv !bitwiseand
																																inv BlkValueRead
																																	val K_unchecked rel
																																	val K_unchecked tmp
																																val K_unchecked RRF_USED
																															code
																																inv !store
																																	reference
																																		val K_unchecked v
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 1
																																inv BlkValueWrite
																																	val K_unchecked Y
																																	val K_unchecked COMBINATION_ITEM_BASE
																																	val K_unchecked v
																																inv !store
																																	reference
																																		val K_unchecked v
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 2
																																inv BlkValueWrite
																																	val K_unchecked Y
																																	inv !plus
																																		val K_unchecked COMBINATION_ITEM_BASE
																																		val K_unchecked 1
																																	val K_unchecked v
																																inv LIST_OF_TY_InsertItem
																																	val K_unchecked X
																																	val K_unchecked Y
																												inv BlkValueWrite
																													val K_unchecked Y
																													val K_unchecked COMBINATION_ITEM_BASE
																													val K_unchecked 0
																												inv BlkValueWrite
																													val K_unchecked Y
																													inv !plus
																														val K_unchecked COMBINATION_ITEM_BASE
																														val K_unchecked 1
																													val K_unchecked 0
																												inv BlkValueFree
																													val K_unchecked Y
																												inv !return
																													val K_unchecked X
																								inv !return
																									val K_unchecked 0
						inv !store
							reference
								val K_unchecked at
							inv DoubleHashSetLookUp
								val K_unchecked rel
								val K_unchecked kx
								val K_unchecked ky
								val K_unchecked X
								val K_unchecked Y
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked plug_00521
									code
										inv !if
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv !return
											val K_unchecked 0
								inv !case
									val K_unchecked plug_00522
									code
										inv !if
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked at
											inv !bitwisenot
												val K_unchecked at
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_USED
											inv !plus
												inv BlkValueRead
													val K_unchecked rel
													val K_unchecked RRV_USED
												val K_unchecked 1
										inv !if
											inv !eq
												inv BlkValueRead
													val K_unchecked rel
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
												val K_unchecked 0
											code
												inv BlkValueWrite
													val K_unchecked rel
													val K_unchecked RRV_FILLED
													inv !plus
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked RRV_FILLED
														val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 3
													val K_unchecked at
											inv !plus
												val K_unchecked RRF_USED
												val K_unchecked RRF_SINGLE
										inv !if
											inv plug_00460
												val K_unchecked kx
											code
												inv !store
													reference
														val K_unchecked X
													inv BlkValueCopy
														inv BlkValueCreate
															val K_unchecked kx
														val K_unchecked X
										inv !if
											inv plug_00460
												val K_unchecked ky
											code
												inv !store
													reference
														val K_unchecked Y
													inv BlkValueCopy
														inv BlkValueCreate
															val K_unchecked ky
														val K_unchecked Y
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 1
											val K_unchecked X
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 2
											val K_unchecked Y
										inv DoubleHashSetCheckResize
											val K_unchecked rel
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked plug_00523
									code
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_USED
											inv !minus
												inv BlkValueRead
													val K_unchecked rel
													val K_unchecked RRV_USED
												val K_unchecked 1
										inv !if
											inv plug_00460
												val K_unchecked kx
											code
												inv BlkValueFree
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at
															val K_unchecked 1
										inv !if
											inv plug_00460
												val K_unchecked ky
											code
												inv BlkValueFree
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at
															val K_unchecked 2
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 3
													val K_unchecked at
											val K_unchecked RRF_DELETED
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 1
											val K_unchecked 0
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 2
											val K_unchecked 0
										inv !return
											val K_unchecked 1
				constant DoubleHashSetRelationHandler K_unchecked_function = DoubleHashSetRelationHandler_B __assimilated=1
			package DoubleHashSetLookUp_fn _function
				symbol public misc DoubleHashSetLookUp
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DoubleHashSetLookUp_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kx
					symbol private misc ky
					symbol private misc X
					symbol private misc Y
					symbol private misc hashv
					symbol private misc i
					symbol private misc free
					symbol private misc mask
					symbol private misc perturb
					symbol private misc flags
					symbol external misc GetHashValue --> /main/template/functions/GetHashValue_fn/GetHashValue
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc DoubleHashSetEntryMatches --> /main/template/functions/DoubleHashSetEntryMatches_fn/DoubleHashSetEntryMatches
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc RRP_PERTURB_SHIFT --> /main/template/constants/RRP_PERTURB_SHIFT_con/RRP_PERTURB_SHIFT
					local rel K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local hashv K_unchecked
					local i K_unchecked
					local free K_unchecked
					local mask K_unchecked
					local perturb K_unchecked
					local flags K_unchecked
					code
						inv !store
							reference
								val K_unchecked hashv
							inv !plus
								inv GetHashValue
									val K_unchecked kx
									val K_unchecked X
								inv GetHashValue
									val K_unchecked ky
									val K_unchecked Y
						inv !store
							reference
								val K_unchecked mask
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_STORAGE
						inv !store
							reference
								val K_unchecked i
							inv !bitwiseand
								val K_unchecked hashv
								val K_unchecked mask
						inv !store
							reference
								val K_unchecked flags
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									val K_unchecked RRV_DATA_BASE
									inv !times
										val K_unchecked 3
										val K_unchecked i
						inv !if
							inv !eq
								val K_unchecked flags
								val K_unchecked 0
							code
								inv !return
									inv !bitwisenot
										val K_unchecked i
						inv !if
							inv DoubleHashSetEntryMatches
								val K_unchecked rel
								val K_unchecked i
								val K_unchecked kx
								val K_unchecked ky
								val K_unchecked X
								val K_unchecked Y
							code
								inv !return
									val K_unchecked i
						inv !store
							reference
								val K_unchecked free
							val K_unchecked -1
						inv !if
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked RRF_DELETED
							code
								inv !store
									reference
										val K_unchecked free
									val K_unchecked i
						inv !store
							reference
								val K_unchecked perturb
							val K_unchecked hashv
						inv !store
							reference
								val K_unchecked hashv
							val K_unchecked i
						inv !for
							val K_unchecked 1
							val K_unchecked 1
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked hashv
									inv !plus
										inv !plus
											inv !times
												val K_unchecked hashv
												val K_unchecked 5
											val K_unchecked perturb
										val K_unchecked 1
								inv !store
									reference
										val K_unchecked i
									inv !bitwiseand
										val K_unchecked hashv
										val K_unchecked mask
								inv !store
									reference
										val K_unchecked flags
									inv BlkValueRead
										val K_unchecked rel
										inv !plus
											val K_unchecked RRV_DATA_BASE
											inv !times
												val K_unchecked 3
												val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked flags
										val K_unchecked 0
									code
										inv !if
											inv !ge
												val K_unchecked free
												val K_unchecked 0
											code
												inv !return
													inv !bitwisenot
														val K_unchecked free
										inv !return
											inv !bitwisenot
												val K_unchecked i
								inv !if
									inv DoubleHashSetEntryMatches
										val K_unchecked rel
										val K_unchecked i
										val K_unchecked kx
										val K_unchecked ky
										val K_unchecked X
										val K_unchecked Y
									code
										inv !return
											val K_unchecked i
								inv !if
									inv !and
										inv !lt
											val K_unchecked free
											val K_unchecked 0
										inv !bitwiseand
											val K_unchecked flags
											val K_unchecked RRF_DELETED
									code
										inv !store
											reference
												val K_unchecked free
											val K_unchecked i
								inv @ushiftr
									val K_unchecked perturb
									val K_unchecked RRP_PERTURB_SHIFT
									val K_unchecked perturb
				constant DoubleHashSetLookUp K_unchecked_function = DoubleHashSetLookUp_B __assimilated=1
			package DoubleHashSetCheckResize_fn _function
				symbol public misc DoubleHashSetCheckResize
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DoubleHashSetCheckResize_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc filled
					symbol private misc ext
					symbol private misc newext
					symbol private misc temp
					symbol private misc i
					symbol private misc at
					symbol private misc kov
					symbol private misc kx
					symbol private misc ky
					symbol private misc F
					symbol private misc X
					symbol private misc Y
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRP_CROWDED_IS --> /main/template/constants/RRP_CROWDED_IS_con/RRP_CROWDED_IS
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRP_LARGE_IS --> /main/template/constants/RRP_LARGE_IS_con/RRP_LARGE_IS
					symbol external misc RRP_RESIZE_LARGE --> /main/template/constants/RRP_RESIZE_LARGE_con/RRP_RESIZE_LARGE
					symbol external misc RRP_RESIZE_SMALL --> /main/template/constants/RRP_RESIZE_SMALL_con/RRP_RESIZE_SMALL
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc DoubleHashSetLookUp --> /main/template/functions/DoubleHashSetLookUp_fn/DoubleHashSetLookUp
					symbol external misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
					local rel K_unchecked
					local filled K_unchecked
					local ext K_unchecked
					local newext K_unchecked
					local temp K_unchecked
					local i K_unchecked
					local at K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local F K_unchecked
					local X K_unchecked
					local Y K_unchecked
					code
						inv !store
							reference
								val K_unchecked filled
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_FILLED
						inv !store
							reference
								val K_unchecked ext
							inv !plus
								inv BlkValueRead
									val K_unchecked rel
									val K_unchecked RRV_STORAGE
								val K_unchecked 1
						inv !if
							inv !ge
								val K_unchecked filled
								inv !times
									inv !minus
										val K_unchecked ext
										val K_unchecked filled
									val K_unchecked RRP_CROWDED_IS
							code
								inv !store
									reference
										val K_unchecked temp
									inv FlexAllocate
										inv !times
											val K_unchecked ext
											inv !times
												val K_unchecked 3
												val K_unchecked plug_00139
										val K_unchecked plug_00342
										inv !plus
											val K_unchecked BLK_FLAG_WORD
											val K_unchecked BLK_FLAG_MULTIPLE
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !times
											val K_unchecked ext
											val K_unchecked 3
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked temp
											val K_unchecked i
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													val K_unchecked i
											val K_unchecked 1
								inv !ifelse
									inv !ge
										val K_unchecked ext
										val K_unchecked RRP_LARGE_IS
									code
										inv !store
											reference
												val K_unchecked newext
											inv !times
												val K_unchecked ext
												val K_unchecked RRP_RESIZE_LARGE
									code
										inv !store
											reference
												val K_unchecked newext
											inv !times
												val K_unchecked ext
												val K_unchecked RRP_RESIZE_SMALL
								inv BlkValueSetLBCapacity
									val K_unchecked rel
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked newext
											val K_unchecked 3
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_STORAGE
									inv !minus
										val K_unchecked newext
										val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_FILLED
									inv BlkValueRead
										val K_unchecked rel
										val K_unchecked RRV_USED
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !times
											val K_unchecked newext
											val K_unchecked 3
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												val K_unchecked i
											val K_unchecked 0
								inv !store
									reference
										val K_unchecked kov
									inv BlkValueRead
										val K_unchecked rel
										val K_unchecked RRV_KIND
								inv !store
									reference
										val K_unchecked kx
									inv KindBaseTerm
										val K_unchecked kov
										val K_unchecked 0
								inv !store
									reference
										val K_unchecked ky
									inv KindBaseTerm
										val K_unchecked kov
										val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked ext
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked F
											inv BlkValueRead
												val K_unchecked temp
												inv !times
													val K_unchecked 3
													val K_unchecked i
												val K_unchecked 1
										inv !if
											inv !or
												inv !eq
													val K_unchecked F
													val K_unchecked 0
												inv !bitwiseand
													val K_unchecked F
													val K_unchecked RRF_DELETED
											code
												inv !continue
										inv !store
											reference
												val K_unchecked X
											inv BlkValueRead
												val K_unchecked temp
												inv !plus
													inv !times
														val K_unchecked 3
														val K_unchecked i
													val K_unchecked 1
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked Y
											inv BlkValueRead
												val K_unchecked temp
												inv !plus
													inv !times
														val K_unchecked 3
														val K_unchecked i
													val K_unchecked 2
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked at
											inv DoubleHashSetLookUp
												val K_unchecked rel
												val K_unchecked kx
												val K_unchecked ky
												val K_unchecked X
												val K_unchecked Y
										inv !if
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											code
												inv !print
													val K_unchecked "*** Duplicate entry while resizing ***\n"
												inv !return
													val K_unchecked 0
										inv !store
											reference
												val K_unchecked at
											inv !bitwisenot
												val K_unchecked at
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 3
													val K_unchecked at
											val K_unchecked F
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 1
											val K_unchecked X
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 2
											val K_unchecked Y
								inv FlexFree
									val K_unchecked temp
				constant DoubleHashSetCheckResize K_unchecked_function = DoubleHashSetCheckResize_B __assimilated=1
			package DoubleHashSetEntryMatches_fn _function
				symbol public misc DoubleHashSetEntryMatches
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package DoubleHashSetEntryMatches_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol private misc kx
					symbol private misc ky
					symbol private misc X
					symbol private misc Y
					symbol private misc cx
					symbol private misc cy
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					local rel K_unchecked
					local at K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local cx K_unchecked
					local cy K_unchecked
					code
						inv !store
							reference
								val K_unchecked cx
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 3
											val K_unchecked at
									val K_unchecked 1
						inv !ifelse
							inv plug_00460
								val K_unchecked kx
							code
								inv !if
									inv !ne
										inv BlkValueCompare
											val K_unchecked cx
											val K_unchecked X
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
							code
								inv !if
									inv !ne
										val K_unchecked cx
										val K_unchecked X
									code
										inv !return
											val K_unchecked 0
						inv !store
							reference
								val K_unchecked cy
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 3
											val K_unchecked at
									val K_unchecked 2
						inv !ifelse
							inv plug_00460
								val K_unchecked ky
							code
								inv !if
									inv !ne
										inv BlkValueCompare
											val K_unchecked cy
											val K_unchecked Y
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
							code
								inv !if
									inv !ne
										val K_unchecked cy
										val K_unchecked Y
									code
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant DoubleHashSetEntryMatches K_unchecked_function = DoubleHashSetEntryMatches_B __assimilated=1
			package HashListRelationHandler_fn _function
				symbol public misc HashListRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HashListRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol private misc sym
					symbol private misc kov
					symbol private misc kx
					symbol private misc ky
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc HashCoreRelationHandler --> /main/template/functions/HashCoreRelationHandler_fn/HashCoreRelationHandler
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local sym K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					code
						inv !store
							reference
								val K_unchecked kov
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_KIND
						inv !store
							reference
								val K_unchecked kx
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked ky
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 1
						inv !return
							inv HashCoreRelationHandler
								val K_unchecked rel
								val K_unchecked task
								val K_unchecked kx
								val K_unchecked ky
								val K_unchecked X
								val K_unchecked Y
								val K_unchecked 1
				constant HashListRelationHandler K_unchecked_function = HashListRelationHandler_B __assimilated=1
			package HashTableRelationHandler_fn _function
				symbol public misc HashTableRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HashTableRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol private misc kov
					symbol private misc kx
					symbol private misc ky
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc HashCoreRelationHandler --> /main/template/functions/HashCoreRelationHandler_fn/HashCoreRelationHandler
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					code
						inv !store
							reference
								val K_unchecked kov
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_KIND
						inv !store
							reference
								val K_unchecked kx
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked ky
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 1
						inv !return
							inv HashCoreRelationHandler
								val K_unchecked rel
								val K_unchecked task
								val K_unchecked kx
								val K_unchecked ky
								val K_unchecked X
								val K_unchecked Y
								val K_unchecked 0
				constant HashTableRelationHandler K_unchecked_function = HashTableRelationHandler_B __assimilated=1
			package ReversedHashTableRelationHandler_fn _function
				symbol public misc ReversedHashTableRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package ReversedHashTableRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol private misc kov
					symbol private misc kx
					symbol private misc ky
					symbol private misc swap
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc RELATION_TY_SetValency --> /main/template/functions/RELATION_TY_SetValency_fn/RELATION_TY_SetValency
					symbol external misc plug_00521 --> /main/connectors/plug_00521
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol external misc HashCoreRelationHandler --> /main/template/functions/HashCoreRelationHandler_fn/HashCoreRelationHandler
					symbol external misc plug_00524 --> /main/connectors/plug_00524
					symbol external misc RLANY_GET_X --> /main/template/constants/RLANY_GET_X_con/RLANY_GET_X
					symbol external misc RLANY_GET_Y --> /main/template/constants/RLANY_GET_Y_con/RLANY_GET_Y
					symbol external misc RLANY_CAN_GET_X --> /main/template/constants/RLANY_CAN_GET_X_con/RLANY_CAN_GET_X
					symbol external misc RLANY_CAN_GET_Y --> /main/template/constants/RLANY_CAN_GET_Y_con/RLANY_CAN_GET_Y
					symbol external misc plug_00525 --> /main/connectors/plug_00525
					symbol external misc plug_00526 --> /main/connectors/plug_00526
					symbol external misc plug_00488 --> /main/connectors/plug_00488
					symbol external misc plug_00527 --> /main/connectors/plug_00527
					symbol external misc RLIST_ALL_X --> /main/template/constants/RLIST_ALL_X_con/RLIST_ALL_X
					symbol external misc RLIST_ALL_Y --> /main/template/constants/RLIST_ALL_Y_con/RLIST_ALL_Y
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local swap K_unchecked
					code
						inv !store
							reference
								val K_unchecked kov
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_KIND
						inv !store
							reference
								val K_unchecked kx
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked ky
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 1
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked RELS_SET_VALENCY
									code
										inv !return
											inv RELATION_TY_SetValency
												val K_unchecked rel
												val K_unchecked X
								inv !case
									inv !alternativecase
										inv !alternativecase
											val K_unchecked plug_00521
											val K_unchecked plug_00522
										val K_unchecked plug_00523
									code
										inv !return
											inv HashCoreRelationHandler
												val K_unchecked rel
												val K_unchecked task
												val K_unchecked ky
												val K_unchecked kx
												val K_unchecked Y
												val K_unchecked X
												val K_unchecked 0
								inv !case
									val K_unchecked plug_00524
									code
										inv !switch
											val K_unchecked Y
											code
												inv !case
													val K_unchecked RLANY_GET_X
													code
														inv !store
															reference
																val K_unchecked Y
															val K_unchecked RLANY_GET_Y
												inv !case
													val K_unchecked RLANY_GET_Y
													code
														inv !store
															reference
																val K_unchecked Y
															val K_unchecked RLANY_GET_X
												inv !case
													val K_unchecked RLANY_CAN_GET_X
													code
														inv !store
															reference
																val K_unchecked Y
															val K_unchecked RLANY_CAN_GET_Y
												inv !case
													val K_unchecked RLANY_CAN_GET_Y
													code
														inv !store
															reference
																val K_unchecked Y
															val K_unchecked RLANY_CAN_GET_X
								inv !case
									val K_unchecked plug_00525
									code
										inv !store
											reference
												val K_unchecked task
											val K_unchecked plug_00526
								inv !case
									val K_unchecked plug_00526
									code
										inv !store
											reference
												val K_unchecked task
											val K_unchecked plug_00525
								inv !case
									val K_unchecked plug_00488
									code
										inv !store
											reference
												val K_unchecked swap
											val K_unchecked X
										inv !store
											reference
												val K_unchecked X
											val K_unchecked Y
										inv !store
											reference
												val K_unchecked Y
											val K_unchecked swap
										inv !store
											reference
												val K_unchecked swap
											val K_unchecked kx
										inv !store
											reference
												val K_unchecked kx
											val K_unchecked ky
										inv !store
											reference
												val K_unchecked ky
											val K_unchecked swap
								inv !case
									val K_unchecked plug_00527
									code
										inv !switch
											val K_unchecked Y
											code
												inv !case
													val K_unchecked RLIST_ALL_X
													code
														inv !store
															reference
																val K_unchecked Y
															val K_unchecked RLIST_ALL_Y
												inv !case
													val K_unchecked RLIST_ALL_Y
													code
														inv !store
															reference
																val K_unchecked Y
															val K_unchecked RLIST_ALL_X
						inv !return
							inv HashCoreRelationHandler
								val K_unchecked rel
								val K_unchecked task
								val K_unchecked kx
								val K_unchecked ky
								val K_unchecked X
								val K_unchecked Y
								val K_unchecked 0
				constant ReversedHashTableRelationHandler K_unchecked_function = ReversedHashTableRelationHandler_B __assimilated=1
			package SymDoubleHashSetRelationHandler_fn _function
				symbol public misc SymDoubleHashSetRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SymDoubleHashSetRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol external misc DoubleHashSetRelationHandler --> /main/template/functions/DoubleHashSetRelationHandler_fn/DoubleHashSetRelationHandler
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked task
								inv !alternative
									val K_unchecked plug_00522
									val K_unchecked plug_00523
							code
								inv DoubleHashSetRelationHandler
									val K_unchecked rel
									val K_unchecked task
									val K_unchecked Y
									val K_unchecked X
						inv !return
							inv DoubleHashSetRelationHandler
								val K_unchecked rel
								val K_unchecked task
								val K_unchecked X
								val K_unchecked Y
								val K_unchecked 1
				constant SymDoubleHashSetRelationHandler K_unchecked_function = SymDoubleHashSetRelationHandler_B __assimilated=1
			package SymHashListRelationHandler_fn _function
				symbol public misc SymHashListRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package SymHashListRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol external misc HashListRelationHandler --> /main/template/functions/HashListRelationHandler_fn/HashListRelationHandler
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked task
								inv !alternative
									val K_unchecked plug_00522
									val K_unchecked plug_00523
							code
								inv HashListRelationHandler
									val K_unchecked rel
									val K_unchecked task
									val K_unchecked Y
									val K_unchecked X
						inv !return
							inv HashListRelationHandler
								val K_unchecked rel
								val K_unchecked task
								val K_unchecked X
								val K_unchecked Y
				constant SymHashListRelationHandler K_unchecked_function = SymHashListRelationHandler_B __assimilated=1
			package Sym2in1HashTableRelationHandler_fn _function
				symbol public misc Sym2in1HashTableRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package Sym2in1HashTableRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol external misc TwoInOneHashTableRelationHandler --> /main/template/functions/TwoInOneHashTableRelationHandler_fn/TwoInOneHashTableRelationHandler
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					code
						inv !if
							inv !eq
								val K_unchecked task
								inv !alternative
									val K_unchecked plug_00522
									val K_unchecked plug_00523
							code
								inv TwoInOneHashTableRelationHandler
									val K_unchecked rel
									val K_unchecked task
									val K_unchecked Y
									val K_unchecked X
						inv !return
							inv TwoInOneHashTableRelationHandler
								val K_unchecked rel
								val K_unchecked task
								val K_unchecked X
								val K_unchecked Y
								val K_unchecked 1
				constant Sym2in1HashTableRelationHandler K_unchecked_function = Sym2in1HashTableRelationHandler_B __assimilated=1
			package HashCoreRelationHandler_fn _function
				symbol public misc HashCoreRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HashCoreRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc kx
					symbol private misc ky
					symbol private misc X
					symbol private misc Y
					symbol private misc mult
					symbol private misc sym
					symbol private misc rev
					symbol private misc at
					symbol private misc tmp
					symbol private misc fl
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc RELATION_TY_SetValency --> /main/template/functions/RELATION_TY_SetValency_fn/RELATION_TY_SetValency
					symbol external misc RELS_DESTROY --> /main/template/constants/RELS_DESTROY_con/RELS_DESTROY
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRF_USED --> /main/template/constants/RRF_USED_con/RRF_USED
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc RRF_SINGLE --> /main/template/constants/RRF_SINGLE_con/RRF_SINGLE
					symbol external misc RELS_COPY --> /main/template/constants/RELS_COPY_con/RELS_COPY
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00488 --> /main/connectors/plug_00488
					symbol external misc RRV_DESCRIPTION --> /main/template/constants/RRV_DESCRIPTION_con/RRV_DESCRIPTION
					symbol external misc RELATION_TY_GetValency --> /main/template/functions/RELATION_TY_GetValency_fn/RELATION_TY_GetValency
					symbol external misc RRVAL_SYM_V_TO_V --> /main/template/constants/RRVAL_SYM_V_TO_V_con/RRVAL_SYM_V_TO_V
					symbol external misc plug_00516 --> /main/connectors/plug_00516
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc RRVAL_O_TO_V --> /main/template/constants/RRVAL_O_TO_V_con/RRVAL_O_TO_V
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc LIST_OF_TY_GetLength --> /main/template/functions/LIST_OF_TY_GetLength_fn/LIST_OF_TY_GetLength
					symbol external misc LIST_OF_TY_GetItem --> /main/template/functions/LIST_OF_TY_GetItem_fn/LIST_OF_TY_GetItem
					symbol external misc RELS_EMPTY --> /main/template/constants/RELS_EMPTY_con/RELS_EMPTY
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc HashCoreRelationHandler --> /main/template/functions/HashCoreRelationHandler_fn/HashCoreRelationHandler
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc plug_00524 --> /main/connectors/plug_00524
					symbol external misc RLANY_GET_Y --> /main/template/constants/RLANY_GET_Y_con/RLANY_GET_Y
					symbol external misc RLANY_CAN_GET_Y --> /main/template/constants/RLANY_CAN_GET_Y_con/RLANY_CAN_GET_Y
					symbol external misc HashCoreLookUp --> /main/template/functions/HashCoreLookUp_fn/HashCoreLookUp
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc LIST_OF_TY_FindItem --> /main/template/functions/LIST_OF_TY_FindItem_fn/LIST_OF_TY_FindItem
					symbol external misc RLANY_CAN_GET_X --> /main/template/constants/RLANY_CAN_GET_X_con/RLANY_CAN_GET_X
					symbol external misc RLANY_GET_X --> /main/template/constants/RLANY_GET_X_con/RLANY_GET_X
					symbol external misc plug_00525 --> /main/connectors/plug_00525
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc LIST_OF_TY_SetLength --> /main/template/functions/LIST_OF_TY_SetLength_fn/LIST_OF_TY_SetLength
					symbol external misc LIST_OF_TY_InsertItem --> /main/template/functions/LIST_OF_TY_InsertItem_fn/LIST_OF_TY_InsertItem
					symbol external misc plug_00526 --> /main/connectors/plug_00526
					symbol external misc LIST_OF_TY_AppendList --> /main/template/functions/LIST_OF_TY_AppendList_fn/LIST_OF_TY_AppendList
					symbol external misc plug_00527 --> /main/connectors/plug_00527
					symbol external misc RLIST_ALL_X --> /main/template/constants/RLIST_ALL_X_con/RLIST_ALL_X
					symbol external misc RLIST_ALL_Y --> /main/template/constants/RLIST_ALL_Y_con/RLIST_ALL_Y
					symbol external misc RLIST_ALL_PAIRS --> /main/template/constants/RLIST_ALL_PAIRS_con/RLIST_ALL_PAIRS
					symbol external misc plug_00518 --> /main/connectors/plug_00518
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					symbol external misc plug_00521 --> /main/connectors/plug_00521
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc HashCoreCheckResize --> /main/template/functions/HashCoreCheckResize_fn/HashCoreCheckResize
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
					symbol external misc LIST_OF_TY_PutItem --> /main/template/functions/LIST_OF_TY_PutItem_fn/LIST_OF_TY_PutItem
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol private label .DeleteEntryIgnoringY
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc LIST_OF_TY_RemoveValue --> /main/template/functions/LIST_OF_TY_RemoveValue_fn/LIST_OF_TY_RemoveValue
					local rel K_unchecked
					local task K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local mult K_unchecked
					local sym K_unchecked
					local rev K_unchecked
					local at K_unchecked
					local tmp K_unchecked
					local fl K_unchecked
					code
						inv !ifelse
							inv !eq
								val K_unchecked task
								val K_unchecked RELS_SET_VALENCY
							code
								inv !return
									inv RELATION_TY_SetValency
										val K_unchecked rel
										val K_unchecked X
							code
								inv !ifelse
									inv !eq
										val K_unchecked task
										val K_unchecked RELS_DESTROY
									code
										inv !store
											reference
												val K_unchecked kx
											inv plug_00460
												val K_unchecked kx
										inv !store
											reference
												val K_unchecked ky
											inv plug_00460
												val K_unchecked ky
										inv !if
											inv !not
												inv !or
													val K_unchecked kx
													val K_unchecked ky
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked at
											inv BlkValueRead
												val K_unchecked rel
												val K_unchecked RRV_STORAGE
										inv !while
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked fl
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
												inv !if
													inv !bitwiseand
														val K_unchecked fl
														val K_unchecked RRF_USED
													code
														inv !if
															val K_unchecked kx
															code
																inv BlkValueFree
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			inv !plus
																				val K_unchecked RRV_DATA_BASE
																				inv !times
																					val K_unchecked 3
																					val K_unchecked at
																			val K_unchecked 1
														inv !if
															inv !or
																val K_unchecked ky
																inv !not
																	inv !bitwiseand
																		val K_unchecked fl
																		val K_unchecked RRF_SINGLE
															code
																inv BlkValueFree
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			inv !plus
																				val K_unchecked RRV_DATA_BASE
																				inv !times
																					val K_unchecked 3
																					val K_unchecked at
																			val K_unchecked 2
												inv !postdecrement
													reference
														val K_unchecked at
										inv !return
											val K_unchecked 1
									code
										inv !ifelse
											inv !eq
												val K_unchecked task
												val K_unchecked RELS_COPY
											code
												inv !store
													reference
														val K_unchecked X
													inv plug_00460
														val K_unchecked kx
												inv !store
													reference
														val K_unchecked Y
													inv plug_00460
														val K_unchecked ky
												inv !if
													inv !not
														inv !or
															val K_unchecked X
															val K_unchecked Y
													code
														inv !return
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked at
													inv BlkValueRead
														val K_unchecked rel
														val K_unchecked RRV_STORAGE
												inv !while
													inv !ge
														val K_unchecked at
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked fl
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
														inv !if
															inv !bitwiseand
																val K_unchecked fl
																val K_unchecked RRF_USED
															code
																inv !if
																	val K_unchecked X
																	code
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueCopy
																				inv BlkValueCreate
																					val K_unchecked kx
																				val K_unchecked tmp
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				inv !plus
																					val K_unchecked RRV_DATA_BASE
																					inv !times
																						val K_unchecked 3
																						val K_unchecked at
																				val K_unchecked 1
																			val K_unchecked tmp
																inv !if
																	inv !or
																		val K_unchecked Y
																		inv !not
																			inv !bitwiseand
																				val K_unchecked fl
																				val K_unchecked RRF_SINGLE
																	code
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 2
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueCopy
																				inv BlkValueCreate
																					inv BlkValueWeakKind
																						val K_unchecked tmp
																				val K_unchecked tmp
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				inv !plus
																					val K_unchecked RRV_DATA_BASE
																					inv !times
																						val K_unchecked 3
																						val K_unchecked at
																				val K_unchecked 2
																			val K_unchecked tmp
														inv !postdecrement
															reference
																val K_unchecked at
												inv !return
													val K_unchecked 1
											code
												inv !ifelse
													inv !eq
														val K_unchecked task
														val K_unchecked plug_00488
													code
														inv !printstring
															inv BlkValueRead
																val K_unchecked rel
																val K_unchecked RRV_DESCRIPTION
														inv !print
															val K_unchecked ":\n"
														inv !switch
															inv RELATION_TY_GetValency
																val K_unchecked rel
															code
																inv !case
																	val K_unchecked RRVAL_SYM_V_TO_V
																	code
																		inv !store
																			reference
																				val K_unchecked sym
																			val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv plug_00516
																				val K_unchecked kx
																		inv !if
																			inv !not
																				val K_unchecked tmp
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					val K_unchecked UnsignedCompare
																inv !case
																	val K_unchecked RRVAL_O_TO_V
																	code
																		inv !store
																			reference
																				val K_unchecked rev
																			val K_unchecked 1
														inv !for
															inv !store
																reference
																	val K_unchecked at
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_STORAGE
															inv !ge
																val K_unchecked at
																val K_unchecked 0
															inv !postdecrement
																reference
																	val K_unchecked at
															code
																inv !store
																	reference
																		val K_unchecked fl
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			val K_unchecked RRV_DATA_BASE
																			inv !times
																				val K_unchecked 3
																				val K_unchecked at
																inv !if
																	inv !bitwiseand
																		val K_unchecked fl
																		val K_unchecked RRF_USED
																	code
																		inv !store
																			reference
																				val K_unchecked X
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked Y
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 2
																		inv !ifelse
																			inv !bitwiseand
																				val K_unchecked fl
																				val K_unchecked RRF_SINGLE
																			code
																				inv !if
																					inv !and
																						val K_unchecked sym
																						inv !gt
																							inv !indirect2
																								val K_unchecked tmp
																								val K_unchecked X
																								val K_unchecked Y
																							val K_unchecked 0
																					code
																						inv !continue
																				inv !print
																					val K_unchecked "  "
																				inv !ifelse
																					val K_unchecked rev
																					code
																						inv plug_00417
																							val K_unchecked ky
																							val K_unchecked Y
																					code
																						inv plug_00417
																							val K_unchecked kx
																							val K_unchecked X
																				inv !ifelse
																					val K_unchecked sym
																					code
																						inv !print
																							val K_unchecked " <=> "
																					code
																						inv !print
																							val K_unchecked " >=> "
																				inv !ifelse
																					val K_unchecked rev
																					code
																						inv plug_00417
																							val K_unchecked kx
																							val K_unchecked X
																					code
																						inv plug_00417
																							val K_unchecked ky
																							val K_unchecked Y
																				inv !print
																					val K_unchecked "\n"
																			code
																				inv !for
																					inv !store
																						reference
																							val K_unchecked mult
																						val K_unchecked 1
																					inv !le
																						val K_unchecked mult
																						inv LIST_OF_TY_GetLength
																							val K_unchecked Y
																					inv !postincrement
																						reference
																							val K_unchecked mult
																					code
																						inv !store
																							reference
																								val K_unchecked fl
																							inv LIST_OF_TY_GetItem
																								val K_unchecked Y
																								val K_unchecked mult
																						inv !if
																							inv !and
																								val K_unchecked sym
																								inv !gt
																									inv !indirect2
																										val K_unchecked tmp
																										val K_unchecked X
																										val K_unchecked fl
																									val K_unchecked 0
																							code
																								inv !continue
																						inv !print
																							val K_unchecked "  "
																						inv !ifelse
																							val K_unchecked rev
																							code
																								inv plug_00417
																									val K_unchecked ky
																									val K_unchecked fl
																							code
																								inv plug_00417
																									val K_unchecked kx
																									val K_unchecked X
																						inv !ifelse
																							val K_unchecked sym
																							code
																								inv !print
																									val K_unchecked " <=> "
																							code
																								inv !print
																									val K_unchecked " >=> "
																						inv !ifelse
																							val K_unchecked rev
																							code
																								inv plug_00417
																									val K_unchecked kx
																									val K_unchecked X
																							code
																								inv plug_00417
																									val K_unchecked ky
																									val K_unchecked fl
																						inv !print
																							val K_unchecked "\n"
														inv !return
															val K_unchecked 1
													code
														inv !ifelse
															inv !eq
																val K_unchecked task
																val K_unchecked RELS_EMPTY
															code
																inv !if
																	inv !eq
																		inv BlkValueRead
																			val K_unchecked rel
																			val K_unchecked RRV_USED
																		val K_unchecked 0
																	code
																		inv !return
																			val K_unchecked 1
																inv !if
																	inv !eq
																		val K_unchecked X
																		val K_unchecked 1
																	code
																		inv HashCoreRelationHandler
																			val K_unchecked rel
																			val K_unchecked RELS_DESTROY
																		inv !for
																			inv !store
																				reference
																					val K_unchecked at
																				inv BlkValueRead
																					val K_unchecked rel
																					val K_unchecked RRV_STORAGE
																			inv !ge
																				val K_unchecked at
																				val K_unchecked 0
																			inv !postdecrement
																				reference
																					val K_unchecked at
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																				inv BlkValueWrite
																					val K_unchecked rel
																					val K_unchecked tmp
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked tmp
																						val K_unchecked 1
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked tmp
																						val K_unchecked 2
																					val K_unchecked 0
																		inv BlkValueWrite
																			val K_unchecked rel
																			val K_unchecked RRV_USED
																			val K_unchecked 0
																		inv BlkValueWrite
																			val K_unchecked rel
																			val K_unchecked RRV_FILLED
																			val K_unchecked 0
																		inv !return
																			val K_unchecked 1
																inv !return
																	val K_unchecked 0
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked task
																		val K_unchecked plug_00524
																	code
																		inv !ifelse
																			inv !eq
																				val K_unchecked Y
																				inv !alternative
																					val K_unchecked RLANY_GET_Y
																					val K_unchecked RLANY_CAN_GET_Y
																			code
																				inv !store
																					reference
																						val K_unchecked at
																					inv HashCoreLookUp
																						val K_unchecked rel
																						val K_unchecked kx
																						val K_unchecked X
																				inv !if
																					inv !ge
																						val K_unchecked at
																						val K_unchecked 0
																					code
																						inv !if
																							inv !eq
																								val K_unchecked Y
																								val K_unchecked RLANY_CAN_GET_Y
																							code
																								inv !return
																									val K_unchecked 1
																						inv !store
																							reference
																								val K_unchecked tmp
																							inv !plus
																								val K_unchecked RRV_DATA_BASE
																								inv !times
																									val K_unchecked 3
																									val K_unchecked at
																						inv !store
																							reference
																								val K_unchecked fl
																							inv BlkValueRead
																								val K_unchecked rel
																								val K_unchecked tmp
																						inv !store
																							reference
																								val K_unchecked tmp
																							inv BlkValueRead
																								val K_unchecked rel
																								inv !plus
																									val K_unchecked tmp
																									val K_unchecked 2
																						inv !if
																							inv !bitwiseand
																								val K_unchecked fl
																								val K_unchecked RRF_SINGLE
																							code
																								inv !return
																									val K_unchecked tmp
																						inv !return
																							inv LIST_OF_TY_GetItem
																								val K_unchecked tmp
																								val K_unchecked 1
																			code
																				inv !for
																					inv !store
																						reference
																							val K_unchecked at
																						inv BlkValueRead
																							val K_unchecked rel
																							val K_unchecked RRV_STORAGE
																					inv !ge
																						val K_unchecked at
																						val K_unchecked 0
																					inv !postdecrement
																						reference
																							val K_unchecked at
																					code
																						inv !store
																							reference
																								val K_unchecked tmp
																							inv !plus
																								val K_unchecked RRV_DATA_BASE
																								inv !times
																									val K_unchecked 3
																									val K_unchecked at
																						inv !store
																							reference
																								val K_unchecked fl
																							inv BlkValueRead
																								val K_unchecked rel
																								val K_unchecked tmp
																						inv !if
																							inv !bitwiseand
																								val K_unchecked fl
																								val K_unchecked RRF_USED
																							code
																								inv !store
																									reference
																										val K_unchecked sym
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 2
																								inv !ifelse
																									inv !bitwiseand
																										val K_unchecked fl
																										val K_unchecked RRF_SINGLE
																									code
																										inv !ifelse
																											inv plug_00460
																												val K_unchecked ky
																											code
																												inv !if
																													inv !ne
																														inv BlkValueCompare
																															val K_unchecked X
																															val K_unchecked sym
																														val K_unchecked 0
																													code
																														inv !continue
																											code
																												inv !if
																													inv !ne
																														val K_unchecked X
																														val K_unchecked sym
																													code
																														inv !continue
																									code
																										inv !if
																											inv !eq
																												inv LIST_OF_TY_FindItem
																													val K_unchecked sym
																													val K_unchecked X
																												val K_unchecked 0
																											code
																												inv !continue
																								inv !if
																									inv !eq
																										val K_unchecked Y
																										val K_unchecked RLANY_CAN_GET_X
																									code
																										inv !return
																											val K_unchecked 1
																								inv !return
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 1
																		inv !if
																			inv !eq
																				val K_unchecked Y
																				inv !alternative
																					val K_unchecked RLANY_GET_X
																					val K_unchecked RLANY_GET_Y
																			code
																				inv !print
																					val K_unchecked "*** Lookup failed: value not found ***\n"
																		inv !return
																			val K_unchecked 0
																	code
																		inv !ifelse
																			inv !eq
																				val K_unchecked task
																				val K_unchecked plug_00525
																			code
																				inv !if
																					inv !ne
																						inv BlkValueWeakKind
																							val K_unchecked Y
																						val K_unchecked plug_00515
																					code
																						inv !return
																							val K_unchecked 0
																				inv LIST_OF_TY_SetLength
																					val K_unchecked Y
																					val K_unchecked 0
																				inv !for
																					inv !store
																						reference
																							val K_unchecked at
																						inv BlkValueRead
																							val K_unchecked rel
																							val K_unchecked RRV_STORAGE
																					inv !ge
																						val K_unchecked at
																						val K_unchecked 0
																					inv !postdecrement
																						reference
																							val K_unchecked at
																					code
																						inv !store
																							reference
																								val K_unchecked tmp
																							inv !plus
																								val K_unchecked RRV_DATA_BASE
																								inv !times
																									val K_unchecked 3
																									val K_unchecked at
																						inv !store
																							reference
																								val K_unchecked fl
																							inv BlkValueRead
																								val K_unchecked rel
																								val K_unchecked tmp
																						inv !if
																							inv !bitwiseand
																								val K_unchecked fl
																								val K_unchecked RRF_USED
																							code
																								inv !store
																									reference
																										val K_unchecked sym
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 2
																								inv !ifelse
																									inv !bitwiseand
																										val K_unchecked fl
																										val K_unchecked RRF_SINGLE
																									code
																										inv !ifelse
																											inv plug_00460
																												val K_unchecked ky
																											code
																												inv !if
																													inv !ne
																														inv BlkValueCompare
																															val K_unchecked X
																															val K_unchecked sym
																														val K_unchecked 0
																													code
																														inv !continue
																											code
																												inv !if
																													inv !ne
																														val K_unchecked X
																														val K_unchecked sym
																													code
																														inv !continue
																									code
																										inv !if
																											inv !eq
																												inv LIST_OF_TY_FindItem
																													val K_unchecked sym
																													val K_unchecked X
																												val K_unchecked 0
																											code
																												inv !continue
																								inv LIST_OF_TY_InsertItem
																									val K_unchecked Y
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 1
																				inv !return
																					val K_unchecked Y
																			code
																				inv !ifelse
																					inv !eq
																						val K_unchecked task
																						val K_unchecked plug_00526
																					code
																						inv !if
																							inv !ne
																								inv BlkValueWeakKind
																									val K_unchecked Y
																								val K_unchecked plug_00515
																							code
																								inv !return
																									val K_unchecked 0
																						inv LIST_OF_TY_SetLength
																							val K_unchecked Y
																							val K_unchecked 0
																						inv !store
																							reference
																								val K_unchecked at
																							inv HashCoreLookUp
																								val K_unchecked rel
																								val K_unchecked kx
																								val K_unchecked X
																						inv !if
																							inv !ge
																								val K_unchecked at
																								val K_unchecked 0
																							code
																								inv !store
																									reference
																										val K_unchecked tmp
																									inv !plus
																										val K_unchecked RRV_DATA_BASE
																										inv !times
																											val K_unchecked 3
																											val K_unchecked at
																								inv !store
																									reference
																										val K_unchecked fl
																									inv BlkValueRead
																										val K_unchecked rel
																										val K_unchecked tmp
																								inv !store
																									reference
																										val K_unchecked tmp
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 2
																								inv !ifelse
																									inv !bitwiseand
																										val K_unchecked fl
																										val K_unchecked RRF_SINGLE
																									code
																										inv LIST_OF_TY_InsertItem
																											val K_unchecked Y
																											val K_unchecked tmp
																									code
																										inv LIST_OF_TY_AppendList
																											val K_unchecked Y
																											val K_unchecked tmp
																						inv !return
																							val K_unchecked Y
																					code
																						inv !if
																							inv !eq
																								val K_unchecked task
																								val K_unchecked plug_00527
																							code
																								inv !if
																									inv !ne
																										inv BlkValueWeakKind
																											val K_unchecked X
																										val K_unchecked plug_00515
																									code
																										inv !return
																											val K_unchecked 0
																								inv LIST_OF_TY_SetLength
																									val K_unchecked X
																									val K_unchecked 0
																								inv !switch
																									val K_unchecked Y
																									code
																										inv !case
																											val K_unchecked RLIST_ALL_X
																											code
																												inv !for
																													inv !store
																														reference
																															val K_unchecked at
																														inv BlkValueRead
																															val K_unchecked rel
																															val K_unchecked RRV_STORAGE
																													inv !ge
																														val K_unchecked at
																														val K_unchecked 0
																													inv !postdecrement
																														reference
																															val K_unchecked at
																													code
																														inv !store
																															reference
																																val K_unchecked tmp
																															inv !plus
																																val K_unchecked RRV_DATA_BASE
																																inv !times
																																	val K_unchecked 3
																																	val K_unchecked at
																														inv !store
																															reference
																																val K_unchecked fl
																															inv BlkValueRead
																																val K_unchecked rel
																																val K_unchecked tmp
																														inv !if
																															inv !bitwiseand
																																val K_unchecked fl
																																val K_unchecked RRF_USED
																															code
																																inv LIST_OF_TY_InsertItem
																																	val K_unchecked X
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 1
																												inv !return
																													val K_unchecked X
																										inv !case
																											val K_unchecked RLIST_ALL_Y
																											code
																												inv !for
																													inv !store
																														reference
																															val K_unchecked at
																														inv BlkValueRead
																															val K_unchecked rel
																															val K_unchecked RRV_STORAGE
																													inv !ge
																														val K_unchecked at
																														val K_unchecked 0
																													inv !postdecrement
																														reference
																															val K_unchecked at
																													code
																														inv !store
																															reference
																																val K_unchecked tmp
																															inv !plus
																																val K_unchecked RRV_DATA_BASE
																																inv !times
																																	val K_unchecked 3
																																	val K_unchecked at
																														inv !store
																															reference
																																val K_unchecked fl
																															inv BlkValueRead
																																val K_unchecked rel
																																val K_unchecked tmp
																														inv !if
																															inv !bitwiseand
																																val K_unchecked fl
																																val K_unchecked RRF_USED
																															code
																																inv !store
																																	reference
																																		val K_unchecked tmp
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 2
																																inv !ifelse
																																	inv !bitwiseand
																																		val K_unchecked fl
																																		val K_unchecked RRF_SINGLE
																																	code
																																		inv LIST_OF_TY_InsertItem
																																			val K_unchecked X
																																			val K_unchecked tmp
																																			val K_unchecked 0
																																			val K_unchecked 0
																																			val K_unchecked 1
																																	code
																																		inv LIST_OF_TY_AppendList
																																			val K_unchecked X
																																			val K_unchecked tmp
																																			val K_unchecked 0
																																			val K_unchecked 0
																																			val K_unchecked 1
																												inv !return
																													val K_unchecked X
																										inv !case
																											val K_unchecked RLIST_ALL_PAIRS
																											code
																												inv !if
																													inv !eq
																														inv RELATION_TY_GetValency
																															val K_unchecked rel
																														val K_unchecked RRVAL_O_TO_V
																													code
																														inv !store
																															reference
																																val K_unchecked rev
																															val K_unchecked 1
																												inv !store
																													reference
																														val K_unchecked Y
																													inv BlkValueCreate
																														val K_unchecked plug_00518
																														val K_unchecked tmp
																												inv !for
																													inv !store
																														reference
																															val K_unchecked at
																														inv BlkValueRead
																															val K_unchecked rel
																															val K_unchecked RRV_STORAGE
																													inv !ge
																														val K_unchecked at
																														val K_unchecked 0
																													inv !postdecrement
																														reference
																															val K_unchecked at
																													code
																														inv !store
																															reference
																																val K_unchecked tmp
																															inv !plus
																																val K_unchecked RRV_DATA_BASE
																																inv !times
																																	val K_unchecked 3
																																	val K_unchecked at
																														inv !store
																															reference
																																val K_unchecked fl
																															inv BlkValueRead
																																val K_unchecked rel
																																val K_unchecked tmp
																														inv !if
																															inv !bitwiseand
																																val K_unchecked fl
																																val K_unchecked RRF_USED
																															code
																																inv BlkValueWrite
																																	val K_unchecked Y
																																	inv !plus
																																		val K_unchecked COMBINATION_ITEM_BASE
																																		val K_unchecked rev
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 1
																																inv !store
																																	reference
																																		val K_unchecked tmp
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 2
																																inv !ifelse
																																	inv !bitwiseand
																																		val K_unchecked fl
																																		val K_unchecked RRF_SINGLE
																																	code
																																		inv BlkValueWrite
																																			val K_unchecked Y
																																			inv !minus
																																				inv !plus
																																					val K_unchecked COMBINATION_ITEM_BASE
																																					val K_unchecked 1
																																				val K_unchecked rev
																																			val K_unchecked tmp
																																		inv LIST_OF_TY_InsertItem
																																			val K_unchecked X
																																			val K_unchecked Y
																																	code
																																		inv !for
																																			inv !store
																																				reference
																																					val K_unchecked mult
																																				inv LIST_OF_TY_GetLength
																																					val K_unchecked tmp
																																			inv !gt
																																				val K_unchecked mult
																																				val K_unchecked 0
																																			inv !postdecrement
																																				reference
																																					val K_unchecked mult
																																			code
																																				inv BlkValueWrite
																																					val K_unchecked Y
																																					inv !minus
																																						inv !plus
																																							val K_unchecked COMBINATION_ITEM_BASE
																																							val K_unchecked 1
																																						val K_unchecked rev
																																					inv LIST_OF_TY_GetItem
																																						val K_unchecked tmp
																																						val K_unchecked mult
																																				inv LIST_OF_TY_InsertItem
																																					val K_unchecked X
																																					val K_unchecked Y
																												inv BlkValueWrite
																													val K_unchecked Y
																													val K_unchecked COMBINATION_ITEM_BASE
																													val K_unchecked 0
																												inv BlkValueWrite
																													val K_unchecked Y
																													inv !plus
																														val K_unchecked COMBINATION_ITEM_BASE
																														val K_unchecked 1
																													val K_unchecked 0
																												inv BlkValueFree
																													val K_unchecked Y
																												inv !return
																													val K_unchecked X
																								inv !return
																									val K_unchecked 0
						inv !store
							reference
								val K_unchecked at
							inv HashCoreLookUp
								val K_unchecked rel
								val K_unchecked kx
								val K_unchecked X
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked plug_00521
									code
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 0
										inv !store
											reference
												val K_unchecked fl
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													val K_unchecked 2
										inv !ifelse
											inv !bitwiseand
												val K_unchecked fl
												val K_unchecked RRF_SINGLE
											code
												inv !ifelse
													inv plug_00460
														val K_unchecked ky
													code
														inv !if
															inv !eq
																inv BlkValueCompare
																	val K_unchecked tmp
																	val K_unchecked Y
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked 1
													code
														inv !if
															inv !eq
																val K_unchecked tmp
																val K_unchecked Y
															code
																inv !return
																	val K_unchecked 1
												inv !return
													val K_unchecked 0
											code
												inv !return
													inv LIST_OF_TY_FindItem
														val K_unchecked tmp
														val K_unchecked Y
								inv !case
									val K_unchecked plug_00522
									code
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked at
													inv !bitwisenot
														val K_unchecked at
												inv BlkValueWrite
													val K_unchecked rel
													val K_unchecked RRV_USED
													inv !plus
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked RRV_USED
														val K_unchecked 1
												inv !if
													inv !eq
														inv BlkValueRead
															val K_unchecked rel
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at
														val K_unchecked 0
													code
														inv BlkValueWrite
															val K_unchecked rel
															val K_unchecked RRV_FILLED
															inv !plus
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_FILLED
																val K_unchecked 1
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													inv !plus
														val K_unchecked RRF_USED
														val K_unchecked RRF_SINGLE
												inv !if
													inv plug_00460
														val K_unchecked kx
													code
														inv !store
															reference
																val K_unchecked X
															inv BlkValueCopy
																inv BlkValueCreate
																	val K_unchecked kx
																val K_unchecked X
												inv !if
													inv plug_00460
														val K_unchecked ky
													code
														inv !store
															reference
																val K_unchecked Y
															inv BlkValueCopy
																inv BlkValueCreate
																	val K_unchecked ky
																val K_unchecked Y
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
														val K_unchecked 1
													val K_unchecked X
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
														val K_unchecked 2
													val K_unchecked Y
												inv HashCoreCheckResize
													val K_unchecked rel
												inv !break
										inv !store
											reference
												val K_unchecked fl
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													val K_unchecked 2
										inv !ifelse
											inv !bitwiseand
												val K_unchecked fl
												val K_unchecked RRF_SINGLE
											code
												inv !ifelse
													inv plug_00460
														val K_unchecked ky
													code
														inv !if
															inv !eq
																inv BlkValueCompare
																	val K_unchecked tmp
																	val K_unchecked Y
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked 1
													code
														inv !if
															inv !eq
																val K_unchecked tmp
																val K_unchecked Y
															code
																inv !return
																	val K_unchecked 1
												inv !ifelse
													val K_unchecked mult
													code
														inv !store
															reference
																val K_unchecked fl
															inv BlkValueCreate
																val K_unchecked plug_00515
														inv BlkValueWrite
															val K_unchecked fl
															val K_unchecked LIST_ITEM_KOV_F
															val K_unchecked ky
														inv LIST_OF_TY_SetLength
															val K_unchecked fl
															val K_unchecked 2
														inv BlkValueWrite
															val K_unchecked fl
															val K_unchecked LIST_ITEM_BASE
															val K_unchecked tmp
														inv LIST_OF_TY_PutItem
															val K_unchecked fl
															val K_unchecked 2
															val K_unchecked Y
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
																val K_unchecked 2
															val K_unchecked fl
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at
															val K_unchecked RRF_USED
													code
														inv !if
															inv plug_00460
																val K_unchecked ky
															code
																inv BlkValueFree
																	val K_unchecked tmp
																inv !store
																	reference
																		val K_unchecked Y
																	inv BlkValueCopy
																		inv BlkValueCreate
																			val K_unchecked ky
																		val K_unchecked Y
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
																val K_unchecked 2
															val K_unchecked Y
											code
												inv LIST_OF_TY_InsertItem
													val K_unchecked tmp
													val K_unchecked Y
													val K_unchecked 0
													val K_unchecked 0
													val K_unchecked 1
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked plug_00523
									code
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked fl
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													val K_unchecked 2
										inv !ifelse
											inv !bitwiseand
												val K_unchecked fl
												val K_unchecked RRF_SINGLE
											code
												inv !ifelse
													inv plug_00460
														val K_unchecked ky
													code
														inv !if
															inv !ne
																inv BlkValueCompare
																	val K_unchecked tmp
																	val K_unchecked Y
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked 1
													code
														inv !if
															inv !ne
																val K_unchecked tmp
																val K_unchecked Y
															code
																inv !return
																	val K_unchecked 1
												inv !if
													inv plug_00460
														val K_unchecked ky
													code
														inv BlkValueFree
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	inv !plus
																		val K_unchecked RRV_DATA_BASE
																		inv !times
																			val K_unchecked 3
																			val K_unchecked at
																	val K_unchecked 2
												.DeleteEntryIgnoringY
												inv BlkValueWrite
													val K_unchecked rel
													val K_unchecked RRV_USED
													inv !minus
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked RRV_USED
														val K_unchecked 1
												inv !if
													inv plug_00460
														val K_unchecked kx
													code
														inv BlkValueFree
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	inv !plus
																		val K_unchecked RRV_DATA_BASE
																		inv !times
																			val K_unchecked 3
																			val K_unchecked at
																	val K_unchecked 1
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													val K_unchecked RRF_DELETED
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
														val K_unchecked 1
													val K_unchecked 0
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
														val K_unchecked 2
													val K_unchecked 0
											code
												inv LIST_OF_TY_RemoveValue
													val K_unchecked tmp
													val K_unchecked Y
													val K_unchecked 1
												inv !if
													inv !eq
														inv LIST_OF_TY_GetLength
															val K_unchecked tmp
														val K_unchecked 0
													code
														inv BlkValueFree
															val K_unchecked tmp
														inv !jump
															lab .DeleteEntryIgnoringY
										inv !return
											val K_unchecked 1
						inv !return
							val K_unchecked 1
				constant HashCoreRelationHandler K_unchecked_function = HashCoreRelationHandler_B __assimilated=1
			package HashCoreLookUp_fn _function
				symbol public misc HashCoreLookUp
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HashCoreLookUp_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc kx
					symbol private misc X
					symbol private misc hashv
					symbol private misc i
					symbol private misc free
					symbol private misc mask
					symbol private misc perturb
					symbol private misc flags
					symbol external misc GetHashValue --> /main/template/functions/GetHashValue_fn/GetHashValue
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc HashCoreEntryMatches --> /main/template/functions/HashCoreEntryMatches_fn/HashCoreEntryMatches
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc RRP_PERTURB_SHIFT --> /main/template/constants/RRP_PERTURB_SHIFT_con/RRP_PERTURB_SHIFT
					local rel K_unchecked
					local kx K_unchecked
					local X K_unchecked
					local hashv K_unchecked
					local i K_unchecked
					local free K_unchecked
					local mask K_unchecked
					local perturb K_unchecked
					local flags K_unchecked
					code
						inv !store
							reference
								val K_unchecked hashv
							inv GetHashValue
								val K_unchecked kx
								val K_unchecked X
						inv !store
							reference
								val K_unchecked mask
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_STORAGE
						inv !store
							reference
								val K_unchecked i
							inv !bitwiseand
								val K_unchecked hashv
								val K_unchecked mask
						inv !store
							reference
								val K_unchecked flags
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									val K_unchecked RRV_DATA_BASE
									inv !times
										val K_unchecked 3
										val K_unchecked i
						inv !if
							inv !eq
								val K_unchecked flags
								val K_unchecked 0
							code
								inv !return
									inv !bitwisenot
										val K_unchecked i
						inv !if
							inv HashCoreEntryMatches
								val K_unchecked rel
								val K_unchecked i
								val K_unchecked kx
								val K_unchecked X
							code
								inv !return
									val K_unchecked i
						inv !store
							reference
								val K_unchecked free
							val K_unchecked -1
						inv !if
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked RRF_DELETED
							code
								inv !store
									reference
										val K_unchecked free
									val K_unchecked i
						inv !store
							reference
								val K_unchecked perturb
							val K_unchecked hashv
						inv !store
							reference
								val K_unchecked hashv
							val K_unchecked i
						inv !for
							val K_unchecked 1
							val K_unchecked 1
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked hashv
									inv !plus
										inv !plus
											inv !times
												val K_unchecked hashv
												val K_unchecked 5
											val K_unchecked perturb
										val K_unchecked 1
								inv !store
									reference
										val K_unchecked i
									inv !bitwiseand
										val K_unchecked hashv
										val K_unchecked mask
								inv !store
									reference
										val K_unchecked flags
									inv BlkValueRead
										val K_unchecked rel
										inv !plus
											val K_unchecked RRV_DATA_BASE
											inv !times
												val K_unchecked 3
												val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked flags
										val K_unchecked 0
									code
										inv !if
											inv !ge
												val K_unchecked free
												val K_unchecked 0
											code
												inv !return
													inv !bitwisenot
														val K_unchecked free
										inv !return
											inv !bitwisenot
												val K_unchecked i
								inv !if
									inv HashCoreEntryMatches
										val K_unchecked rel
										val K_unchecked i
										val K_unchecked kx
										val K_unchecked X
									code
										inv !return
											val K_unchecked i
								inv !if
									inv !and
										inv !lt
											val K_unchecked free
											val K_unchecked 0
										inv !bitwiseand
											val K_unchecked flags
											val K_unchecked RRF_DELETED
									code
										inv !store
											reference
												val K_unchecked free
											val K_unchecked i
								inv @ushiftr
									val K_unchecked perturb
									val K_unchecked RRP_PERTURB_SHIFT
									val K_unchecked perturb
				constant HashCoreLookUp K_unchecked_function = HashCoreLookUp_B __assimilated=1
			package HashCoreCheckResize_fn _function
				symbol public misc HashCoreCheckResize
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HashCoreCheckResize_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc filled
					symbol private misc ext
					symbol private misc newext
					symbol private misc temp
					symbol private misc i
					symbol private misc at
					symbol private misc kov
					symbol private misc kx
					symbol private misc F
					symbol private misc X
					symbol private misc Y
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRP_CROWDED_IS --> /main/template/constants/RRP_CROWDED_IS_con/RRP_CROWDED_IS
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRP_LARGE_IS --> /main/template/constants/RRP_LARGE_IS_con/RRP_LARGE_IS
					symbol external misc RRP_RESIZE_LARGE --> /main/template/constants/RRP_RESIZE_LARGE_con/RRP_RESIZE_LARGE
					symbol external misc RRP_RESIZE_SMALL --> /main/template/constants/RRP_RESIZE_SMALL_con/RRP_RESIZE_SMALL
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc HashCoreLookUp --> /main/template/functions/HashCoreLookUp_fn/HashCoreLookUp
					symbol external misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
					local rel K_unchecked
					local filled K_unchecked
					local ext K_unchecked
					local newext K_unchecked
					local temp K_unchecked
					local i K_unchecked
					local at K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local F K_unchecked
					local X K_unchecked
					local Y K_unchecked
					code
						inv !store
							reference
								val K_unchecked filled
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_FILLED
						inv !store
							reference
								val K_unchecked ext
							inv !plus
								inv BlkValueRead
									val K_unchecked rel
									val K_unchecked RRV_STORAGE
								val K_unchecked 1
						inv !if
							inv !ge
								val K_unchecked filled
								inv !times
									inv !minus
										val K_unchecked ext
										val K_unchecked filled
									val K_unchecked RRP_CROWDED_IS
							code
								inv !store
									reference
										val K_unchecked temp
									inv FlexAllocate
										inv !times
											val K_unchecked ext
											inv !times
												val K_unchecked 3
												val K_unchecked plug_00139
										val K_unchecked plug_00342
										inv !plus
											val K_unchecked BLK_FLAG_WORD
											val K_unchecked BLK_FLAG_MULTIPLE
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !times
											val K_unchecked ext
											val K_unchecked 3
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked temp
											val K_unchecked i
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													val K_unchecked i
											val K_unchecked 1
								inv !ifelse
									inv !ge
										val K_unchecked ext
										val K_unchecked RRP_LARGE_IS
									code
										inv !store
											reference
												val K_unchecked newext
											inv !times
												val K_unchecked ext
												val K_unchecked RRP_RESIZE_LARGE
									code
										inv !store
											reference
												val K_unchecked newext
											inv !times
												val K_unchecked ext
												val K_unchecked RRP_RESIZE_SMALL
								inv BlkValueSetLBCapacity
									val K_unchecked rel
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked newext
											val K_unchecked 3
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_STORAGE
									inv !minus
										val K_unchecked newext
										val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_FILLED
									inv BlkValueRead
										val K_unchecked rel
										val K_unchecked RRV_USED
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !times
											val K_unchecked newext
											val K_unchecked 3
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												val K_unchecked i
											val K_unchecked 0
								inv !store
									reference
										val K_unchecked kov
									inv BlkValueRead
										val K_unchecked rel
										val K_unchecked RRV_KIND
								inv !store
									reference
										val K_unchecked kx
									inv KindBaseTerm
										val K_unchecked kov
										val K_unchecked 0
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked ext
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked F
											inv BlkValueRead
												val K_unchecked temp
												inv !times
													val K_unchecked 3
													val K_unchecked i
												val K_unchecked 1
										inv !if
											inv !or
												inv !eq
													val K_unchecked F
													val K_unchecked 0
												inv !bitwiseand
													val K_unchecked F
													val K_unchecked RRF_DELETED
											code
												inv !continue
										inv !store
											reference
												val K_unchecked X
											inv BlkValueRead
												val K_unchecked temp
												inv !plus
													inv !times
														val K_unchecked 3
														val K_unchecked i
													val K_unchecked 1
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked Y
											inv BlkValueRead
												val K_unchecked temp
												inv !plus
													inv !times
														val K_unchecked 3
														val K_unchecked i
													val K_unchecked 2
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked at
											inv HashCoreLookUp
												val K_unchecked rel
												val K_unchecked kx
												val K_unchecked X
										inv !if
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											code
												inv !print
													val K_unchecked "*** Duplicate entry while resizing ***\n"
												inv !return
													val K_unchecked 0
										inv !store
											reference
												val K_unchecked at
											inv !bitwisenot
												val K_unchecked at
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 3
													val K_unchecked at
											val K_unchecked F
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 1
											val K_unchecked X
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 2
											val K_unchecked Y
								inv FlexFree
									val K_unchecked temp
				constant HashCoreCheckResize K_unchecked_function = HashCoreCheckResize_B __assimilated=1
			package HashCoreEntryMatches_fn _function
				symbol public misc HashCoreEntryMatches
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package HashCoreEntryMatches_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol private misc kx
					symbol private misc X
					symbol private misc cx
					symbol private misc cy
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					local rel K_unchecked
					local at K_unchecked
					local kx K_unchecked
					local X K_unchecked
					local cx K_unchecked
					local cy K_unchecked
					code
						inv !store
							reference
								val K_unchecked cx
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 3
											val K_unchecked at
									val K_unchecked 1
						inv !ifelse
							inv plug_00460
								val K_unchecked kx
							code
								inv !if
									inv !ne
										inv BlkValueCompare
											val K_unchecked cx
											val K_unchecked X
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
							code
								inv !if
									inv !ne
										val K_unchecked cx
										val K_unchecked X
									code
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant HashCoreEntryMatches K_unchecked_function = HashCoreEntryMatches_B __assimilated=1
			package EquivHashTableRelationHandler_fn _function
				symbol public misc EquivHashTableRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package EquivHashTableRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol private misc kx
					symbol private misc at
					symbol private misc at2
					symbol private misc tmp
					symbol private misc fl
					symbol private misc i
					symbol private misc ext
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc RELATION_TY_SetValency --> /main/template/functions/RELATION_TY_SetValency_fn/RELATION_TY_SetValency
					symbol external misc RELS_DESTROY --> /main/template/constants/RELS_DESTROY_con/RELS_DESTROY
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRF_USED --> /main/template/constants/RRF_USED_con/RRF_USED
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc RELS_COPY --> /main/template/constants/RELS_COPY_con/RELS_COPY
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc plug_00488 --> /main/connectors/plug_00488
					symbol external misc RRV_DESCRIPTION --> /main/template/constants/RRV_DESCRIPTION_con/RRV_DESCRIPTION
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc RELS_EMPTY --> /main/template/constants/RELS_EMPTY_con/RELS_EMPTY
					symbol external misc plug_00524 --> /main/connectors/plug_00524
					symbol external misc RLANY_CAN_GET_X --> /main/template/constants/RLANY_CAN_GET_X_con/RLANY_CAN_GET_X
					symbol external misc RLANY_CAN_GET_Y --> /main/template/constants/RLANY_CAN_GET_Y_con/RLANY_CAN_GET_Y
					symbol external misc plug_00525 --> /main/connectors/plug_00525
					symbol external misc plug_00526 --> /main/connectors/plug_00526
					symbol external misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
					symbol external misc plug_00515 --> /main/connectors/plug_00515
					symbol external misc LIST_OF_TY_SetLength --> /main/template/functions/LIST_OF_TY_SetLength_fn/LIST_OF_TY_SetLength
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc HashCoreLookUp --> /main/template/functions/HashCoreLookUp_fn/HashCoreLookUp
					symbol external misc LIST_OF_TY_InsertItem --> /main/template/functions/LIST_OF_TY_InsertItem_fn/LIST_OF_TY_InsertItem
					symbol external misc plug_00527 --> /main/connectors/plug_00527
					symbol external misc plug_00521 --> /main/connectors/plug_00521
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc RRF_SINGLE --> /main/template/constants/RRF_SINGLE_con/RRF_SINGLE
					symbol private label .CheckResize
					symbol external misc HashCoreCheckResize --> /main/template/functions/HashCoreCheckResize_fn/HashCoreCheckResize
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local kx K_unchecked
					local at K_unchecked
					local at2 K_unchecked
					local tmp K_unchecked
					local fl K_unchecked
					local i K_unchecked
					local ext K_unchecked
					code
						inv !store
							reference
								val K_unchecked kx
							inv KindBaseTerm
								inv BlkValueRead
									val K_unchecked rel
									val K_unchecked RRV_KIND
								val K_unchecked 0
						inv !ifelse
							inv !eq
								val K_unchecked task
								val K_unchecked RELS_SET_VALENCY
							code
								inv !return
									inv RELATION_TY_SetValency
										val K_unchecked rel
										val K_unchecked X
							code
								inv !ifelse
									inv !eq
										val K_unchecked task
										val K_unchecked RELS_DESTROY
									code
										inv !if
											inv plug_00460
												val K_unchecked kx
											code
												inv !store
													reference
														val K_unchecked at
													inv BlkValueRead
														val K_unchecked rel
														val K_unchecked RRV_STORAGE
												inv !while
													inv !ge
														val K_unchecked at
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked fl
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
														inv !if
															inv !bitwiseand
																val K_unchecked fl
																val K_unchecked RRF_USED
															code
																inv BlkValueFree
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			inv !plus
																				val K_unchecked RRV_DATA_BASE
																				inv !times
																					val K_unchecked 3
																					val K_unchecked at
																			val K_unchecked 1
														inv !postdecrement
															reference
																val K_unchecked at
										inv !return
											val K_unchecked 1
									code
										inv !ifelse
											inv !eq
												val K_unchecked task
												val K_unchecked RELS_COPY
											code
												inv !if
													inv plug_00460
														val K_unchecked kx
													code
														inv !store
															reference
																val K_unchecked at
															inv BlkValueRead
																val K_unchecked rel
																val K_unchecked RRV_STORAGE
														inv !while
															inv !ge
																val K_unchecked at
																val K_unchecked 0
															code
																inv !store
																	reference
																		val K_unchecked fl
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			val K_unchecked RRV_DATA_BASE
																			inv !times
																				val K_unchecked 3
																				val K_unchecked at
																inv !if
																	inv !bitwiseand
																		val K_unchecked fl
																		val K_unchecked RRF_USED
																	code
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at
																					val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueCopy
																				inv BlkValueCreate
																					val K_unchecked kx
																				val K_unchecked tmp
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				inv !plus
																					val K_unchecked RRV_DATA_BASE
																					inv !times
																						val K_unchecked 3
																						val K_unchecked at
																				val K_unchecked 1
																inv !postdecrement
																	reference
																		val K_unchecked at
												inv !return
													val K_unchecked 1
											code
												inv !ifelse
													inv !eq
														val K_unchecked task
														val K_unchecked plug_00488
													code
														inv !printstring
															inv BlkValueRead
																val K_unchecked rel
																val K_unchecked RRV_DESCRIPTION
														inv !print
															val K_unchecked ":\n"
														inv !store
															reference
																val K_unchecked ext
															inv BlkValueRead
																val K_unchecked rel
																val K_unchecked RRV_STORAGE
														inv !for
															inv !sequential
																inv !store
																	reference
																		val K_unchecked at
																	val K_unchecked 0
																inv !store
																	reference
																		val K_unchecked X
																	val K_unchecked RRV_DATA_BASE
															inv !le
																val K_unchecked at
																val K_unchecked ext
															inv !sequential
																inv !postincrement
																	reference
																		val K_unchecked at
																inv !store
																	reference
																		val K_unchecked X
																	inv !plus
																		val K_unchecked X
																		val K_unchecked 3
															code
																inv !if
																	inv !bitwiseand
																		inv BlkValueRead
																			val K_unchecked rel
																			val K_unchecked X
																		val K_unchecked RRF_USED
																	code
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				val K_unchecked X
																				val K_unchecked 2
																			inv !unaryminus
																				inv BlkValueRead
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked X
																						val K_unchecked 2
														inv !for
															inv !sequential
																inv !store
																	reference
																		val K_unchecked at
																	val K_unchecked 0
																inv !sequential
																	inv !store
																		reference
																			val K_unchecked X
																		val K_unchecked RRV_DATA_BASE
																	inv !store
																		reference
																			val K_unchecked fl
																		val K_unchecked 0
															inv !le
																val K_unchecked at
																val K_unchecked ext
															inv !sequential
																inv !postincrement
																	reference
																		val K_unchecked at
																inv !sequential
																	inv !store
																		reference
																			val K_unchecked X
																		inv !plus
																			val K_unchecked X
																			val K_unchecked 3
																	inv !store
																		reference
																			val K_unchecked fl
																		val K_unchecked 0
															code
																inv !if
																	inv !bitwiseand
																		inv BlkValueRead
																			val K_unchecked rel
																			val K_unchecked X
																		val K_unchecked RRF_USED
																	code
																		inv !store
																			reference
																				val K_unchecked fl
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					val K_unchecked X
																					val K_unchecked 2
																		inv !if
																			inv !gt
																				val K_unchecked fl
																				val K_unchecked 0
																			code
																				inv !continue
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				val K_unchecked X
																				val K_unchecked 2
																			inv !unaryminus
																				val K_unchecked fl
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					val K_unchecked X
																					val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked i
																			val K_unchecked 0
																		inv !for
																			inv !sequential
																				inv !store
																					reference
																						val K_unchecked at2
																					inv !plus
																						val K_unchecked at
																						val K_unchecked 1
																				inv !store
																					reference
																						val K_unchecked Y
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked at2
																			inv !le
																				val K_unchecked at2
																				val K_unchecked ext
																			inv !sequential
																				inv !postincrement
																					reference
																						val K_unchecked at2
																				inv !store
																					reference
																						val K_unchecked Y
																					inv !plus
																						val K_unchecked Y
																						val K_unchecked 3
																			code
																				inv !if
																					inv !bitwiseand
																						inv BlkValueRead
																							val K_unchecked rel
																							val K_unchecked Y
																						val K_unchecked RRF_USED
																					code
																						inv !if
																							inv !ne
																								inv BlkValueRead
																									val K_unchecked rel
																									inv !plus
																										val K_unchecked Y
																										val K_unchecked 2
																								val K_unchecked fl
																							code
																								inv !continue
																						inv BlkValueWrite
																							val K_unchecked rel
																							inv !plus
																								val K_unchecked Y
																								val K_unchecked 2
																							inv !unaryminus
																								val K_unchecked fl
																						inv !if
																							inv !not
																								val K_unchecked i
																							code
																								inv !print
																									val K_unchecked "  { "
																								inv plug_00417
																									val K_unchecked kx
																									val K_unchecked tmp
																								inv !store
																									reference
																										val K_unchecked i
																									val K_unchecked 1
																						inv !print
																							val K_unchecked ", "
																						inv plug_00417
																							val K_unchecked kx
																							inv BlkValueRead
																								val K_unchecked rel
																								inv !plus
																									val K_unchecked Y
																									val K_unchecked 1
																		inv !if
																			val K_unchecked i
																			code
																				inv !print
																					val K_unchecked " }\n"
														inv !return
															val K_unchecked 1
													code
														inv !ifelse
															inv !eq
																val K_unchecked task
																val K_unchecked RELS_EMPTY
															code
																inv !return
																	val K_unchecked 0
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked task
																		val K_unchecked plug_00524
																	code
																		inv !if
																			inv !eq
																				val K_unchecked Y
																				inv !alternative
																					val K_unchecked RLANY_CAN_GET_X
																					val K_unchecked RLANY_CAN_GET_Y
																			code
																				inv !return
																					val K_unchecked 1
																		inv !return
																			val K_unchecked X
																	code
																		inv !ifelse
																			inv !eq
																				val K_unchecked task
																				inv !alternative
																					val K_unchecked plug_00525
																					val K_unchecked plug_00526
																			code
																				inv !if
																					inv !ne
																						inv BlkValueWeakKind
																							val K_unchecked Y
																						val K_unchecked plug_00515
																					code
																						inv !return
																							val K_unchecked 0
																				inv LIST_OF_TY_SetLength
																					val K_unchecked Y
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked Y
																					val K_unchecked LIST_ITEM_KOV_F
																					val K_unchecked kx
																				inv !store
																					reference
																						val K_unchecked at
																					inv HashCoreLookUp
																						val K_unchecked rel
																						val K_unchecked kx
																						val K_unchecked X
																				inv !ifelse
																					inv !lt
																						val K_unchecked at
																						val K_unchecked 0
																					code
																						inv LIST_OF_TY_InsertItem
																							val K_unchecked Y
																							val K_unchecked X
																					code
																						inv !store
																							reference
																								val K_unchecked X
																							inv BlkValueRead
																								val K_unchecked rel
																								inv !plus
																									inv !plus
																										val K_unchecked RRV_DATA_BASE
																										inv !times
																											val K_unchecked 3
																											val K_unchecked at
																									val K_unchecked 2
																						inv !for
																							inv !store
																								reference
																									val K_unchecked at
																								inv BlkValueRead
																									val K_unchecked rel
																									val K_unchecked RRV_STORAGE
																							inv !ge
																								val K_unchecked at
																								val K_unchecked 0
																							inv !postdecrement
																								reference
																									val K_unchecked at
																							code
																								inv !store
																									reference
																										val K_unchecked tmp
																									inv !plus
																										val K_unchecked RRV_DATA_BASE
																										inv !times
																											val K_unchecked 3
																											val K_unchecked at
																								inv !store
																									reference
																										val K_unchecked fl
																									inv BlkValueRead
																										val K_unchecked rel
																										val K_unchecked tmp
																								inv !if
																									inv !bitwiseand
																										val K_unchecked fl
																										val K_unchecked RRF_USED
																									code
																										inv !if
																											inv !ne
																												inv BlkValueRead
																													val K_unchecked rel
																													inv !plus
																														val K_unchecked tmp
																														val K_unchecked 2
																												val K_unchecked X
																											code
																												inv !continue
																										inv LIST_OF_TY_InsertItem
																											val K_unchecked Y
																											inv BlkValueRead
																												val K_unchecked rel
																												inv !plus
																													val K_unchecked tmp
																													val K_unchecked 1
																				inv !return
																					val K_unchecked Y
																			code
																				inv !if
																					inv !eq
																						val K_unchecked task
																						val K_unchecked plug_00527
																					code
																						inv !print
																							val K_unchecked "*** Domains of equivalence relations cannot be listed ***\n"
																						inv !return
																							val K_unchecked X
						inv !store
							reference
								val K_unchecked at
							inv HashCoreLookUp
								val K_unchecked rel
								val K_unchecked kx
								val K_unchecked X
						inv !store
							reference
								val K_unchecked at2
							inv HashCoreLookUp
								val K_unchecked rel
								val K_unchecked kx
								val K_unchecked Y
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked plug_00521
									code
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !ifelse
													inv plug_00460
														val K_unchecked kx
													code
														inv !if
															inv !eq
																inv BlkValueCompare
																	val K_unchecked X
																	val K_unchecked Y
																val K_unchecked 0
															code
																inv !return
																	val K_unchecked 1
													code
														inv !if
															inv !eq
																val K_unchecked X
																val K_unchecked Y
															code
																inv !return
																	val K_unchecked 1
												inv !return
													val K_unchecked 0
										inv !if
											inv !lt
												val K_unchecked at2
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 0
										inv !if
											inv !eq
												val K_unchecked at
												val K_unchecked at2
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													val K_unchecked 2
										inv !if
											inv !eq
												inv BlkValueRead
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at2
														val K_unchecked 2
												val K_unchecked tmp
											code
												inv !return
													val K_unchecked 1
										inv !return
											val K_unchecked 0
								inv !case
									val K_unchecked plug_00522
									code
										inv !ifelse
											inv plug_00460
												val K_unchecked kx
											code
												inv !if
													inv !eq
														inv BlkValueCompare
															val K_unchecked X
															val K_unchecked Y
														val K_unchecked 0
													code
														inv !return
															val K_unchecked 1
											code
												inv !if
													inv !eq
														val K_unchecked X
														val K_unchecked Y
													code
														inv !return
															val K_unchecked 1
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !if
													inv !lt
														val K_unchecked at2
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked tmp
															val K_unchecked 0
														inv !store
															reference
																val K_unchecked ext
															inv BlkValueRead
																val K_unchecked rel
																val K_unchecked RRV_STORAGE
														inv !for
															inv !store
																reference
																	val K_unchecked i
																val K_unchecked 0
															inv !le
																val K_unchecked i
																val K_unchecked ext
															inv !postincrement
																reference
																	val K_unchecked i
															code
																inv !store
																	reference
																		val K_unchecked fl
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			val K_unchecked RRV_DATA_BASE
																			inv !times
																				val K_unchecked 3
																				val K_unchecked i
																inv !if
																	inv !bitwiseand
																		val K_unchecked fl
																		val K_unchecked RRF_USED
																	code
																		inv !store
																			reference
																				val K_unchecked fl
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 3
																							val K_unchecked i
																					val K_unchecked 2
																		inv !if
																			inv !gt
																				val K_unchecked fl
																				val K_unchecked tmp
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					val K_unchecked fl
														inv !postincrement
															reference
																val K_unchecked tmp
														inv BlkValueWrite
															val K_unchecked rel
															val K_unchecked RRV_USED
															inv !plus
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_USED
																val K_unchecked 2
														inv !store
															reference
																val K_unchecked at
															inv !bitwisenot
																val K_unchecked at
														inv !if
															inv plug_00460
																val K_unchecked kx
															code
																inv !store
																	reference
																		val K_unchecked X
																	inv BlkValueCopy
																		inv BlkValueCreate
																			val K_unchecked kx
																		val K_unchecked X
														inv !store
															reference
																val K_unchecked fl
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
														inv !if
															inv !eq
																val K_unchecked fl
																val K_unchecked 0
															code
																inv BlkValueWrite
																	val K_unchecked rel
																	val K_unchecked RRV_FILLED
																	inv !plus
																		inv BlkValueRead
																			val K_unchecked rel
																			val K_unchecked RRV_FILLED
																		val K_unchecked 1
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at
															inv !plus
																val K_unchecked RRF_USED
																val K_unchecked RRF_SINGLE
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
																val K_unchecked 1
															val K_unchecked X
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at
																val K_unchecked 2
															val K_unchecked tmp
														inv !store
															reference
																val K_unchecked at2
															inv !bitwisenot
																inv HashCoreLookUp
																	val K_unchecked rel
																	val K_unchecked kx
																	val K_unchecked Y
														inv !if
															inv plug_00460
																val K_unchecked kx
															code
																inv !store
																	reference
																		val K_unchecked Y
																	inv BlkValueCopy
																		inv BlkValueCreate
																			val K_unchecked kx
																		val K_unchecked Y
														inv !store
															reference
																val K_unchecked fl
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at2
														inv !if
															inv !eq
																val K_unchecked fl
																val K_unchecked 0
															code
																inv BlkValueWrite
																	val K_unchecked rel
																	val K_unchecked RRV_FILLED
																	inv !plus
																		inv BlkValueRead
																			val K_unchecked rel
																			val K_unchecked RRV_FILLED
																		val K_unchecked 1
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at2
															inv !plus
																val K_unchecked RRF_USED
																val K_unchecked RRF_SINGLE
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at2
																val K_unchecked 1
															val K_unchecked Y
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 3
																		val K_unchecked at2
																val K_unchecked 2
															val K_unchecked tmp
														inv !jump
															lab .CheckResize
												inv !store
													reference
														val K_unchecked at
													inv !bitwisenot
														val K_unchecked at
												inv !if
													inv plug_00460
														val K_unchecked kx
													code
														inv !store
															reference
																val K_unchecked X
															inv BlkValueCopy
																inv BlkValueCreate
																	val K_unchecked kx
																val K_unchecked X
												inv BlkValueWrite
													val K_unchecked rel
													val K_unchecked RRV_USED
													inv !plus
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked RRV_USED
														val K_unchecked 1
												inv !store
													reference
														val K_unchecked fl
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
												inv !if
													inv !eq
														val K_unchecked fl
														val K_unchecked 0
													code
														inv BlkValueWrite
															val K_unchecked rel
															val K_unchecked RRV_FILLED
															inv !plus
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_FILLED
																val K_unchecked 1
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													inv !plus
														val K_unchecked RRF_USED
														val K_unchecked RRF_SINGLE
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
														val K_unchecked 1
													val K_unchecked X
												inv !store
													reference
														val K_unchecked tmp
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at2
															val K_unchecked 2
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
														val K_unchecked 2
													val K_unchecked tmp
												inv !jump
													lab .CheckResize
										inv !if
											inv !lt
												val K_unchecked at2
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked at2
													inv !bitwisenot
														val K_unchecked at2
												inv !if
													inv plug_00460
														val K_unchecked kx
													code
														inv !store
															reference
																val K_unchecked Y
															inv BlkValueCopy
																inv BlkValueCreate
																	val K_unchecked kx
																val K_unchecked Y
												inv BlkValueWrite
													val K_unchecked rel
													val K_unchecked RRV_USED
													inv !plus
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked RRV_USED
														val K_unchecked 1
												inv !store
													reference
														val K_unchecked fl
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at2
												inv !if
													inv !eq
														val K_unchecked fl
														val K_unchecked 0
													code
														inv BlkValueWrite
															val K_unchecked rel
															val K_unchecked RRV_FILLED
															inv !plus
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_FILLED
																val K_unchecked 1
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at2
													inv !plus
														val K_unchecked RRF_USED
														val K_unchecked RRF_SINGLE
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at2
														val K_unchecked 1
													val K_unchecked Y
												inv !store
													reference
														val K_unchecked tmp
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at
															val K_unchecked 2
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at2
														val K_unchecked 2
													val K_unchecked tmp
												inv !jump
													lab .CheckResize
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													val K_unchecked 2
										inv !store
											reference
												val K_unchecked fl
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at2
													val K_unchecked 2
										inv !if
											inv !lt
												val K_unchecked tmp
												val K_unchecked fl
											code
												inv !store
													reference
														val K_unchecked i
													val K_unchecked tmp
												inv !store
													reference
														val K_unchecked tmp
													val K_unchecked fl
												inv !store
													reference
														val K_unchecked fl
													val K_unchecked i
										inv !store
											reference
												val K_unchecked ext
											inv BlkValueRead
												val K_unchecked rel
												val K_unchecked RRV_STORAGE
										inv !for
											inv !store
												reference
													val K_unchecked at
												val K_unchecked 0
											inv !le
												val K_unchecked at
												val K_unchecked ext
											inv !postincrement
												reference
													val K_unchecked at
											code
												inv !store
													reference
														val K_unchecked i
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at
														val K_unchecked 2
												inv !if
													inv !eq
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked i
														val K_unchecked tmp
													code
														inv BlkValueWrite
															val K_unchecked rel
															val K_unchecked i
															val K_unchecked fl
										.CheckResize
										inv HashCoreCheckResize
											val K_unchecked rel
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked plug_00523
									code
										inv !if
											inv !or
												inv !lt
													val K_unchecked at
													val K_unchecked 0
												inv !lt
													val K_unchecked at2
													val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 3
															val K_unchecked at
													val K_unchecked 2
										inv !if
											inv !ne
												inv BlkValueRead
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 3
																val K_unchecked at2
														val K_unchecked 2
												val K_unchecked tmp
											code
												inv !return
													val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_USED
											inv !minus
												inv BlkValueRead
													val K_unchecked rel
													val K_unchecked RRV_USED
												val K_unchecked 1
										inv !if
											inv plug_00460
												val K_unchecked kx
											code
												inv BlkValueFree
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 3
																	val K_unchecked at
															val K_unchecked 1
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 3
													val K_unchecked at
											val K_unchecked RRF_DELETED
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 1
											val K_unchecked 0
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 3
														val K_unchecked at
												val K_unchecked 2
											val K_unchecked 0
										inv !return
											val K_unchecked 1
				constant EquivHashTableRelationHandler K_unchecked_function = EquivHashTableRelationHandler_B __assimilated=1
			package TwoInOneHashTableRelationHandler_fn _function
				symbol public misc TwoInOneHashTableRelationHandler
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TwoInOneHashTableRelationHandler_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc task
					symbol private misc X
					symbol private misc Y
					symbol private misc sym
					symbol private misc kov
					symbol private misc kx
					symbol private misc ky
					symbol private misc at
					symbol private misc at2
					symbol private misc tmp
					symbol private misc fl
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
					symbol external misc RELATION_TY_SetValency --> /main/template/functions/RELATION_TY_SetValency_fn/RELATION_TY_SetValency
					symbol external misc RELS_DESTROY --> /main/template/constants/RELS_DESTROY_con/RELS_DESTROY
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRF_USED --> /main/template/constants/RRF_USED_con/RRF_USED
					symbol external misc RRF_ENTKEYX --> /main/template/constants/RRF_ENTKEYX_con/RRF_ENTKEYX
					symbol external misc RRF_ENTKEYY --> /main/template/constants/RRF_ENTKEYY_con/RRF_ENTKEYY
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc RELS_COPY --> /main/template/constants/RELS_COPY_con/RELS_COPY
					symbol external misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
					symbol external misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc RRF_HASX --> /main/template/constants/RRF_HASX_con/RRF_HASX
					symbol external misc TwoInOneLookUp --> /main/template/functions/TwoInOneLookUp_fn/TwoInOneLookUp
					symbol external misc RRF_HASY --> /main/template/constants/RRF_HASY_con/RRF_HASY
					symbol external misc plug_00488 --> /main/connectors/plug_00488
					symbol external misc RRV_DESCRIPTION --> /main/template/constants/RRV_DESCRIPTION_con/RRV_DESCRIPTION
					symbol external misc plug_00516 --> /main/connectors/plug_00516
					symbol external misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
					symbol external misc plug_00417 --> /main/connectors/plug_00417
					symbol external misc RELS_EMPTY --> /main/template/constants/RELS_EMPTY_con/RELS_EMPTY
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc TwoInOneHashTableRelationHandler --> /main/template/functions/TwoInOneHashTableRelationHandler_fn/TwoInOneHashTableRelationHandler
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc plug_00524 --> /main/connectors/plug_00524
					symbol external misc RLANY_GET_X --> /main/template/constants/RLANY_GET_X_con/RLANY_GET_X
					symbol external misc RLANY_CAN_GET_X --> /main/template/constants/RLANY_CAN_GET_X_con/RLANY_CAN_GET_X
					symbol external misc RLANY_GET_Y --> /main/template/constants/RLANY_GET_Y_con/RLANY_GET_Y
					symbol external misc RLANY_CAN_GET_Y --> /main/template/constants/RLANY_CAN_GET_Y_con/RLANY_CAN_GET_Y
					symbol external misc plug_00525 --> /main/connectors/plug_00525
					symbol external misc LIST_OF_TY_InsertItem --> /main/template/functions/LIST_OF_TY_InsertItem_fn/LIST_OF_TY_InsertItem
					symbol external misc plug_00526 --> /main/connectors/plug_00526
					symbol external misc plug_00527 --> /main/connectors/plug_00527
					symbol external misc RLIST_ALL_X --> /main/template/constants/RLIST_ALL_X_con/RLIST_ALL_X
					symbol private label .ListEntryKeys
					symbol external misc RLIST_ALL_Y --> /main/template/constants/RLIST_ALL_Y_con/RLIST_ALL_Y
					symbol external misc RLIST_ALL_PAIRS --> /main/template/constants/RLIST_ALL_PAIRS_con/RLIST_ALL_PAIRS
					symbol external misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
					symbol external misc KindAtomic --> /main/template/functions/KindAtomic_fn/KindAtomic
					symbol external misc plug_00518 --> /main/connectors/plug_00518
					symbol external misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
					symbol external misc plug_00521 --> /main/connectors/plug_00521
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					symbol external misc plug_00522 --> /main/connectors/plug_00522
					symbol external misc TwoInOneDelete --> /main/template/functions/TwoInOneDelete_fn/TwoInOneDelete
					symbol external misc TwoInOneCheckResize --> /main/template/functions/TwoInOneCheckResize_fn/TwoInOneCheckResize
					symbol external misc plug_00523 --> /main/connectors/plug_00523
					local rel K_unchecked
					local task K_unchecked
					local X K_unchecked
					local Y K_unchecked
					local sym K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local at K_unchecked
					local at2 K_unchecked
					local tmp K_unchecked
					local fl K_unchecked
					code
						inv !store
							reference
								val K_unchecked kov
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_KIND
						inv !store
							reference
								val K_unchecked kx
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 0
						inv !store
							reference
								val K_unchecked ky
							inv KindBaseTerm
								val K_unchecked kov
								val K_unchecked 1
						inv !ifelse
							inv !eq
								val K_unchecked task
								val K_unchecked RELS_SET_VALENCY
							code
								inv !return
									inv RELATION_TY_SetValency
										val K_unchecked rel
										val K_unchecked X
							code
								inv !ifelse
									inv !eq
										val K_unchecked task
										val K_unchecked RELS_DESTROY
									code
										inv !store
											reference
												val K_unchecked kx
											inv plug_00460
												val K_unchecked kx
										inv !store
											reference
												val K_unchecked ky
											inv plug_00460
												val K_unchecked ky
										inv !if
											inv !not
												inv !or
													val K_unchecked kx
													val K_unchecked ky
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked at
											inv BlkValueRead
												val K_unchecked rel
												val K_unchecked RRV_STORAGE
										inv !while
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked fl
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 4
																val K_unchecked at
												inv !if
													inv !bitwiseand
														val K_unchecked fl
														val K_unchecked RRF_USED
													code
														inv !if
															inv !or
																inv !and
																	val K_unchecked kx
																	inv !bitwiseand
																		val K_unchecked fl
																		val K_unchecked RRF_ENTKEYX
																inv !and
																	val K_unchecked ky
																	inv !bitwiseand
																		val K_unchecked fl
																		val K_unchecked RRF_ENTKEYY
															code
																inv BlkValueFree
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			inv !plus
																				val K_unchecked RRV_DATA_BASE
																				inv !times
																					val K_unchecked 4
																					val K_unchecked at
																			val K_unchecked 1
												inv !postdecrement
													reference
														val K_unchecked at
										inv !return
											val K_unchecked 1
									code
										inv !ifelse
											inv !eq
												val K_unchecked task
												val K_unchecked RELS_COPY
											code
												inv !store
													reference
														val K_unchecked X
													inv plug_00460
														val K_unchecked kx
												inv !store
													reference
														val K_unchecked Y
													inv plug_00460
														val K_unchecked ky
												inv !if
													inv !not
														inv !or
															val K_unchecked X
															val K_unchecked Y
													code
														inv !return
															val K_unchecked 1
												inv !store
													reference
														val K_unchecked at
													inv BlkValueRead
														val K_unchecked rel
														val K_unchecked RRV_STORAGE
												inv !while
													inv !ge
														val K_unchecked at
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked fl
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 4
																		val K_unchecked at
														inv !if
															inv !bitwiseand
																val K_unchecked fl
																val K_unchecked RRF_USED
															code
																inv !if
																	inv !or
																		inv !and
																			val K_unchecked X
																			inv !bitwiseand
																				val K_unchecked fl
																				val K_unchecked RRF_ENTKEYX
																		inv !and
																			val K_unchecked Y
																			inv !bitwiseand
																				val K_unchecked fl
																				val K_unchecked RRF_ENTKEYY
																	code
																		inv !store
																			reference
																				val K_unchecked tmp
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 4
																							val K_unchecked at
																					val K_unchecked 1
																		inv !ifelse
																			inv !bitwiseand
																				val K_unchecked fl
																				val K_unchecked RRF_ENTKEYX
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					inv BlkValueCopy
																						inv BlkValueCreate
																							val K_unchecked kx
																						val K_unchecked tmp
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					inv BlkValueCopy
																						inv BlkValueCreate
																							val K_unchecked ky
																						val K_unchecked tmp
																		inv BlkValueWrite
																			val K_unchecked rel
																			inv !plus
																				inv !plus
																					val K_unchecked RRV_DATA_BASE
																					inv !times
																						val K_unchecked 4
																						val K_unchecked at
																				val K_unchecked 1
																			val K_unchecked tmp
																		inv !if
																			inv !bitwiseand
																				val K_unchecked fl
																				val K_unchecked RRF_HASX
																			code
																				inv !store
																					reference
																						val K_unchecked at2
																					inv TwoInOneLookUp
																						val K_unchecked rel
																						val K_unchecked kx
																						inv BlkValueRead
																							val K_unchecked rel
																							inv !plus
																								inv !plus
																									val K_unchecked RRV_DATA_BASE
																									inv !times
																										val K_unchecked 4
																										val K_unchecked at
																								val K_unchecked 2
																						val K_unchecked RRF_ENTKEYX
																				inv !if
																					inv !ge
																						val K_unchecked at2
																						val K_unchecked 0
																					code
																						inv BlkValueWrite
																							val K_unchecked rel
																							inv !plus
																								inv !plus
																									val K_unchecked RRV_DATA_BASE
																									inv !times
																										val K_unchecked 4
																										val K_unchecked at2
																								val K_unchecked 3
																							val K_unchecked tmp
																		inv !if
																			inv !bitwiseand
																				val K_unchecked fl
																				val K_unchecked RRF_HASY
																			code
																				inv !store
																					reference
																						val K_unchecked at2
																					inv TwoInOneLookUp
																						val K_unchecked rel
																						val K_unchecked ky
																						inv BlkValueRead
																							val K_unchecked rel
																							inv !plus
																								inv !plus
																									val K_unchecked RRV_DATA_BASE
																									inv !times
																										val K_unchecked 4
																										val K_unchecked at
																								val K_unchecked 3
																						val K_unchecked RRF_ENTKEYY
																				inv !if
																					inv !ge
																						val K_unchecked at2
																						val K_unchecked 0
																					code
																						inv BlkValueWrite
																							val K_unchecked rel
																							inv !plus
																								inv !plus
																									val K_unchecked RRV_DATA_BASE
																									inv !times
																										val K_unchecked 4
																										val K_unchecked at2
																								val K_unchecked 2
																							val K_unchecked tmp
														inv !postdecrement
															reference
																val K_unchecked at
												inv !return
													val K_unchecked 1
											code
												inv !ifelse
													inv !eq
														val K_unchecked task
														val K_unchecked plug_00488
													code
														inv !printstring
															inv BlkValueRead
																val K_unchecked rel
																val K_unchecked RRV_DESCRIPTION
														inv !print
															val K_unchecked ":\n"
														inv !if
															val K_unchecked sym
															code
																inv !store
																	reference
																		val K_unchecked kov
																	inv plug_00516
																		val K_unchecked kx
																inv !if
																	inv !not
																		val K_unchecked kov
																	code
																		inv !store
																			reference
																				val K_unchecked kov
																			val K_unchecked UnsignedCompare
														inv !for
															inv !store
																reference
																	val K_unchecked at
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_STORAGE
															inv !ge
																val K_unchecked at
																val K_unchecked 0
															inv !postdecrement
																reference
																	val K_unchecked at
															code
																inv !store
																	reference
																		val K_unchecked fl
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			val K_unchecked RRV_DATA_BASE
																			inv !times
																				val K_unchecked 4
																				val K_unchecked at
																inv !if
																	inv !eq
																		inv !bitwiseand
																			val K_unchecked fl
																			inv !plus
																				inv !plus
																					val K_unchecked RRF_USED
																					val K_unchecked RRF_ENTKEYX
																				val K_unchecked RRF_HASY
																		inv !plus
																			inv !plus
																				val K_unchecked RRF_USED
																				val K_unchecked RRF_ENTKEYX
																			val K_unchecked RRF_HASY
																	code
																		inv !store
																			reference
																				val K_unchecked X
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 4
																							val K_unchecked at
																					val K_unchecked 1
																		inv !store
																			reference
																				val K_unchecked Y
																			inv BlkValueRead
																				val K_unchecked rel
																				inv !plus
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 4
																							val K_unchecked at
																					val K_unchecked 3
																		inv !if
																			inv !and
																				val K_unchecked sym
																				inv !gt
																					inv !indirect2
																						val K_unchecked kov
																						val K_unchecked X
																						val K_unchecked Y
																					val K_unchecked 0
																			code
																				inv !continue
																		inv !print
																			val K_unchecked "  "
																		inv plug_00417
																			val K_unchecked kx
																			val K_unchecked X
																		inv !ifelse
																			val K_unchecked sym
																			code
																				inv !print
																					val K_unchecked " <=> "
																			code
																				inv !print
																					val K_unchecked " >=> "
																		inv plug_00417
																			val K_unchecked ky
																			val K_unchecked Y
																		inv !print
																			val K_unchecked "\n"
														inv !return
															val K_unchecked 1
													code
														inv !ifelse
															inv !eq
																val K_unchecked task
																val K_unchecked RELS_EMPTY
															code
																inv !if
																	inv !eq
																		inv BlkValueRead
																			val K_unchecked rel
																			val K_unchecked RRV_USED
																		val K_unchecked 0
																	code
																		inv !return
																			val K_unchecked 1
																inv !if
																	inv !eq
																		val K_unchecked X
																		val K_unchecked 1
																	code
																		inv TwoInOneHashTableRelationHandler
																			val K_unchecked rel
																			val K_unchecked RELS_DESTROY
																		inv !for
																			inv !store
																				reference
																					val K_unchecked at
																				inv BlkValueRead
																					val K_unchecked rel
																					val K_unchecked RRV_STORAGE
																			inv !ge
																				val K_unchecked at
																				val K_unchecked 0
																			inv !postdecrement
																				reference
																					val K_unchecked at
																			code
																				inv !store
																					reference
																						val K_unchecked tmp
																					inv !plus
																						val K_unchecked RRV_DATA_BASE
																						inv !times
																							val K_unchecked 4
																							val K_unchecked at
																				inv BlkValueWrite
																					val K_unchecked rel
																					val K_unchecked tmp
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked tmp
																						val K_unchecked 1
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked tmp
																						val K_unchecked 2
																					val K_unchecked 0
																				inv BlkValueWrite
																					val K_unchecked rel
																					inv !plus
																						val K_unchecked tmp
																						val K_unchecked 3
																					val K_unchecked 0
																		inv BlkValueWrite
																			val K_unchecked rel
																			val K_unchecked RRV_USED
																			val K_unchecked 0
																		inv BlkValueWrite
																			val K_unchecked rel
																			val K_unchecked RRV_FILLED
																			val K_unchecked 0
																		inv !return
																			val K_unchecked 1
																inv !return
																	val K_unchecked 0
															code
																inv !ifelse
																	inv !eq
																		val K_unchecked task
																		val K_unchecked plug_00524
																	code
																		inv !switch
																			val K_unchecked Y
																			code
																				inv !case
																					inv !alternativecase
																						val K_unchecked RLANY_GET_X
																						val K_unchecked RLANY_CAN_GET_X
																					code
																						inv !store
																							reference
																								val K_unchecked at
																							inv TwoInOneLookUp
																								val K_unchecked rel
																								val K_unchecked ky
																								val K_unchecked X
																								val K_unchecked RRF_ENTKEYY
																						inv !if
																							inv !ge
																								val K_unchecked at
																								val K_unchecked 0
																							code
																								inv !store
																									reference
																										val K_unchecked tmp
																									inv !plus
																										val K_unchecked RRV_DATA_BASE
																										inv !times
																											val K_unchecked 4
																											val K_unchecked at
																								inv !if
																									inv !bitwiseand
																										inv BlkValueRead
																											val K_unchecked rel
																											val K_unchecked tmp
																										val K_unchecked RRF_HASX
																									code
																										inv !if
																											inv !eq
																												val K_unchecked Y
																												val K_unchecked RLANY_CAN_GET_X
																											code
																												inv !return
																													val K_unchecked 1
																										inv !return
																											inv BlkValueRead
																												val K_unchecked rel
																												inv !plus
																													val K_unchecked tmp
																													val K_unchecked 2
																				inv !case
																					inv !alternativecase
																						val K_unchecked RLANY_GET_Y
																						val K_unchecked RLANY_CAN_GET_Y
																					code
																						inv !store
																							reference
																								val K_unchecked at
																							inv TwoInOneLookUp
																								val K_unchecked rel
																								val K_unchecked kx
																								val K_unchecked X
																								val K_unchecked RRF_ENTKEYX
																						inv !if
																							inv !ge
																								val K_unchecked at
																								val K_unchecked 0
																							code
																								inv !store
																									reference
																										val K_unchecked tmp
																									inv !plus
																										val K_unchecked RRV_DATA_BASE
																										inv !times
																											val K_unchecked 4
																											val K_unchecked at
																								inv !if
																									inv !bitwiseand
																										inv BlkValueRead
																											val K_unchecked rel
																											val K_unchecked tmp
																										val K_unchecked RRF_HASY
																									code
																										inv !if
																											inv !eq
																												val K_unchecked Y
																												val K_unchecked RLANY_CAN_GET_Y
																											code
																												inv !return
																													val K_unchecked 1
																										inv !return
																											inv BlkValueRead
																												val K_unchecked rel
																												inv !plus
																													val K_unchecked tmp
																													val K_unchecked 3
																		inv !if
																			inv !eq
																				val K_unchecked Y
																				inv !alternative
																					val K_unchecked RLANY_GET_X
																					val K_unchecked RLANY_GET_Y
																			code
																				inv !print
																					val K_unchecked "*** Lookup failed: value not found ***\n"
																		inv !return
																			val K_unchecked 0
																	code
																		inv !ifelse
																			inv !eq
																				val K_unchecked task
																				val K_unchecked plug_00525
																			code
																				inv !store
																					reference
																						val K_unchecked at
																					inv TwoInOneLookUp
																						val K_unchecked rel
																						val K_unchecked ky
																						val K_unchecked X
																						val K_unchecked RRF_ENTKEYY
																				inv !if
																					inv !ge
																						val K_unchecked at
																						val K_unchecked 0
																					code
																						inv !store
																							reference
																								val K_unchecked tmp
																							inv !plus
																								val K_unchecked RRV_DATA_BASE
																								inv !times
																									val K_unchecked 4
																									val K_unchecked at
																						inv !if
																							inv !bitwiseand
																								inv BlkValueRead
																									val K_unchecked rel
																									val K_unchecked tmp
																								val K_unchecked RRF_HASX
																							code
																								inv LIST_OF_TY_InsertItem
																									val K_unchecked Y
																									inv BlkValueRead
																										val K_unchecked rel
																										inv !plus
																											val K_unchecked tmp
																											val K_unchecked 2
																				inv !return
																					val K_unchecked Y
																			code
																				inv !ifelse
																					inv !eq
																						val K_unchecked task
																						val K_unchecked plug_00526
																					code
																						inv !store
																							reference
																								val K_unchecked at
																							inv TwoInOneLookUp
																								val K_unchecked rel
																								val K_unchecked kx
																								val K_unchecked X
																								val K_unchecked RRF_ENTKEYX
																						inv !if
																							inv !ge
																								val K_unchecked at
																								val K_unchecked 0
																							code
																								inv !store
																									reference
																										val K_unchecked tmp
																									inv !plus
																										val K_unchecked RRV_DATA_BASE
																										inv !times
																											val K_unchecked 4
																											val K_unchecked at
																								inv !if
																									inv !bitwiseand
																										inv BlkValueRead
																											val K_unchecked rel
																											val K_unchecked tmp
																										val K_unchecked RRF_HASY
																									code
																										inv LIST_OF_TY_InsertItem
																											val K_unchecked Y
																											inv BlkValueRead
																												val K_unchecked rel
																												inv !plus
																													val K_unchecked tmp
																													val K_unchecked 3
																						inv !return
																							val K_unchecked Y
																					code
																						inv !if
																							inv !eq
																								val K_unchecked task
																								val K_unchecked plug_00527
																							code
																								inv !switch
																									val K_unchecked Y
																									code
																										inv !case
																											val K_unchecked RLIST_ALL_X
																											code
																												inv !store
																													reference
																														val K_unchecked fl
																													inv !plus
																														inv !plus
																															val K_unchecked RRF_USED
																															val K_unchecked RRF_ENTKEYX
																														val K_unchecked RRF_HASY
																												inv !jump
																													lab .ListEntryKeys
																										inv !case
																											val K_unchecked RLIST_ALL_Y
																											code
																												inv !store
																													reference
																														val K_unchecked fl
																													inv !plus
																														inv !plus
																															val K_unchecked RRF_USED
																															val K_unchecked RRF_ENTKEYY
																														val K_unchecked RRF_HASX
																												.ListEntryKeys
																												inv !for
																													inv !store
																														reference
																															val K_unchecked at
																														inv BlkValueRead
																															val K_unchecked rel
																															val K_unchecked RRV_STORAGE
																													inv !ge
																														val K_unchecked at
																														val K_unchecked 0
																													inv !postdecrement
																														reference
																															val K_unchecked at
																													code
																														inv !store
																															reference
																																val K_unchecked tmp
																															inv !plus
																																val K_unchecked RRV_DATA_BASE
																																inv !times
																																	val K_unchecked 4
																																	val K_unchecked at
																														inv !if
																															inv !eq
																																inv !bitwiseand
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		val K_unchecked tmp
																																	val K_unchecked fl
																																val K_unchecked fl
																															code
																																inv LIST_OF_TY_InsertItem
																																	val K_unchecked X
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 1
																																	val K_unchecked 0
																																	val K_unchecked 0
																																	val K_unchecked 1
																										inv !case
																											val K_unchecked RLIST_ALL_PAIRS
																											code
																												inv !store
																													reference
																														val K_unchecked tmp
																													inv BlkValueRead
																														val K_unchecked X
																														val K_unchecked LIST_ITEM_KOV_F
																												inv !if
																													inv !ne
																														inv KindAtomic
																															val K_unchecked tmp
																														val K_unchecked plug_00518
																													code
																														inv !return
																															val K_unchecked 0
																												inv !store
																													reference
																														val K_unchecked Y
																													inv BlkValueCreate
																														val K_unchecked tmp
																												inv !for
																													inv !store
																														reference
																															val K_unchecked at
																														inv BlkValueRead
																															val K_unchecked rel
																															val K_unchecked RRV_STORAGE
																													inv !ge
																														val K_unchecked at
																														val K_unchecked 0
																													inv !postdecrement
																														reference
																															val K_unchecked at
																													code
																														inv !store
																															reference
																																val K_unchecked tmp
																															inv !plus
																																val K_unchecked RRV_DATA_BASE
																																inv !times
																																	val K_unchecked 4
																																	val K_unchecked at
																														inv !store
																															reference
																																val K_unchecked fl
																															inv BlkValueRead
																																val K_unchecked rel
																																val K_unchecked tmp
																														inv !if
																															inv !eq
																																inv !bitwiseand
																																	val K_unchecked fl
																																	inv !plus
																																		inv !plus
																																			val K_unchecked RRF_USED
																																			val K_unchecked RRF_ENTKEYX
																																		val K_unchecked RRF_HASY
																																inv !plus
																																	inv !plus
																																		val K_unchecked RRF_USED
																																		val K_unchecked RRF_ENTKEYX
																																	val K_unchecked RRF_HASY
																															code
																																inv BlkValueWrite
																																	val K_unchecked Y
																																	val K_unchecked COMBINATION_ITEM_BASE
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 1
																																inv BlkValueWrite
																																	val K_unchecked Y
																																	inv !plus
																																		val K_unchecked COMBINATION_ITEM_BASE
																																		val K_unchecked 1
																																	inv BlkValueRead
																																		val K_unchecked rel
																																		inv !plus
																																			val K_unchecked tmp
																																			val K_unchecked 3
																																inv LIST_OF_TY_InsertItem
																																	val K_unchecked X
																																	val K_unchecked Y
																												inv BlkValueWrite
																													val K_unchecked Y
																													val K_unchecked COMBINATION_ITEM_BASE
																													val K_unchecked 0
																												inv BlkValueWrite
																													val K_unchecked Y
																													inv !plus
																														val K_unchecked COMBINATION_ITEM_BASE
																														val K_unchecked 1
																													val K_unchecked 0
																												inv BlkValueFree
																													val K_unchecked Y
																												inv !return
																													val K_unchecked X
																								inv !return
																									val K_unchecked X
						inv !store
							reference
								val K_unchecked at
							inv TwoInOneLookUp
								val K_unchecked rel
								val K_unchecked kx
								val K_unchecked X
								val K_unchecked RRF_ENTKEYX
						inv !switch
							val K_unchecked task
							code
								inv !case
									val K_unchecked plug_00521
									code
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 0
										inv !store
											reference
												val K_unchecked fl
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
										inv !if
											inv !not
												inv !bitwiseand
													val K_unchecked fl
													val K_unchecked RRF_HASY
											code
												inv !return
													val K_unchecked 0
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 4
															val K_unchecked at
													val K_unchecked 3
										inv !ifelse
											inv plug_00460
												val K_unchecked ky
											code
												inv !if
													inv !eq
														inv BlkValueCompare
															val K_unchecked tmp
															val K_unchecked Y
														val K_unchecked 0
													code
														inv !return
															val K_unchecked 1
											code
												inv !if
													inv !eq
														val K_unchecked tmp
														val K_unchecked Y
													code
														inv !return
															val K_unchecked 1
										inv !return
											val K_unchecked 0
								inv !case
									val K_unchecked plug_00522
									code
										inv !ifelse
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked at
													inv !bitwisenot
														val K_unchecked at
												inv BlkValueWrite
													val K_unchecked rel
													val K_unchecked RRV_USED
													inv !plus
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked RRV_USED
														val K_unchecked 1
												inv !store
													reference
														val K_unchecked fl
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 4
																val K_unchecked at
												inv !if
													inv !eq
														val K_unchecked fl
														val K_unchecked 0
													code
														inv BlkValueWrite
															val K_unchecked rel
															val K_unchecked RRV_FILLED
															inv !plus
																inv BlkValueRead
																	val K_unchecked rel
																	val K_unchecked RRV_FILLED
																val K_unchecked 1
												inv !store
													reference
														val K_unchecked fl
													inv !plus
														inv !plus
															val K_unchecked RRF_USED
															val K_unchecked RRF_HASY
														val K_unchecked RRF_ENTKEYX
												inv !if
													inv !or
														inv !eq
															val K_unchecked kx
															val K_unchecked ky
														inv !not
															inv !or
																inv plug_00460
																	val K_unchecked kx
																inv plug_00460
																	val K_unchecked ky
													code
														inv !store
															reference
																val K_unchecked fl
															inv !plus
																val K_unchecked fl
																val K_unchecked RRF_ENTKEYY
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 4
															val K_unchecked at
													val K_unchecked fl
												inv !if
													inv plug_00460
														val K_unchecked kx
													code
														inv !store
															reference
																val K_unchecked X
															inv BlkValueCopy
																inv BlkValueCreate
																	val K_unchecked kx
																val K_unchecked X
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 4
																val K_unchecked at
														val K_unchecked 1
													val K_unchecked X
												inv BlkValueWrite
													val K_unchecked rel
													inv !plus
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 4
																val K_unchecked at
														val K_unchecked 2
													val K_unchecked 0
											code
												inv !store
													reference
														val K_unchecked fl
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															val K_unchecked RRV_DATA_BASE
															inv !times
																val K_unchecked 4
																val K_unchecked at
												inv !ifelse
													inv !bitwiseand
														val K_unchecked fl
														val K_unchecked RRF_HASY
													code
														inv !store
															reference
																val K_unchecked tmp
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	inv !plus
																		val K_unchecked RRV_DATA_BASE
																		inv !times
																			val K_unchecked 4
																			val K_unchecked at
																	val K_unchecked 3
														inv !ifelse
															inv plug_00460
																val K_unchecked ky
															code
																inv !if
																	inv !eq
																		inv BlkValueCompare
																			val K_unchecked tmp
																			val K_unchecked Y
																		val K_unchecked 0
																	code
																		inv !return
																			val K_unchecked 1
															code
																inv !if
																	inv !eq
																		val K_unchecked tmp
																		val K_unchecked Y
																	code
																		inv !return
																			val K_unchecked 1
														inv !store
															reference
																val K_unchecked at2
															inv TwoInOneLookUp
																val K_unchecked rel
																val K_unchecked ky
																val K_unchecked tmp
																val K_unchecked RRF_ENTKEYY
														inv !if
															inv !ge
																val K_unchecked at2
																val K_unchecked 0
															code
																inv TwoInOneDelete
																	val K_unchecked rel
																	val K_unchecked at2
																	val K_unchecked kx
																	val K_unchecked ky
																	val K_unchecked RRF_ENTKEYY
													code
														inv BlkValueWrite
															val K_unchecked rel
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 4
																	val K_unchecked at
															inv !plus
																val K_unchecked fl
																val K_unchecked RRF_HASY
												inv !store
													reference
														val K_unchecked X
													inv BlkValueRead
														val K_unchecked rel
														inv !plus
															inv !plus
																val K_unchecked RRV_DATA_BASE
																inv !times
																	val K_unchecked 4
																	val K_unchecked at
															val K_unchecked 1
										inv !store
											reference
												val K_unchecked at2
											inv TwoInOneLookUp
												val K_unchecked rel
												val K_unchecked ky
												val K_unchecked Y
												val K_unchecked RRF_ENTKEYY
										inv !if
											inv plug_00460
												val K_unchecked ky
											code
												inv !ifelse
													inv !ge
														val K_unchecked at2
														val K_unchecked 0
													code
														inv !store
															reference
																val K_unchecked Y
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	inv !plus
																		val K_unchecked RRV_DATA_BASE
																		inv !times
																			val K_unchecked 4
																			val K_unchecked at2
																	val K_unchecked 1
													code
														inv !store
															reference
																val K_unchecked Y
															inv BlkValueCopy
																inv BlkValueCreate
																	val K_unchecked ky
																val K_unchecked Y
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
												val K_unchecked 3
											val K_unchecked Y
										inv !ifelse
											inv !ge
												val K_unchecked at2
												val K_unchecked 0
											code
												inv TwoInOneDelete
													val K_unchecked rel
													val K_unchecked at2
													val K_unchecked kx
													val K_unchecked ky
													val K_unchecked RRF_ENTKEYY
													val K_unchecked 1
											code
												inv !store
													reference
														val K_unchecked at2
													inv !bitwisenot
														val K_unchecked at2
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked RRV_USED
											inv !plus
												inv BlkValueRead
													val K_unchecked rel
													val K_unchecked RRV_USED
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked fl
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at2
										inv !if
											inv !eq
												val K_unchecked fl
												val K_unchecked 0
											code
												inv BlkValueWrite
													val K_unchecked rel
													val K_unchecked RRV_FILLED
													inv !plus
														inv BlkValueRead
															val K_unchecked rel
															val K_unchecked RRV_FILLED
														val K_unchecked 1
										inv !store
											reference
												val K_unchecked fl
											inv !bitwiseor
												val K_unchecked fl
												inv !plus
													inv !plus
														val K_unchecked RRF_USED
														val K_unchecked RRF_HASX
													val K_unchecked RRF_ENTKEYY
										inv !if
											inv !or
												inv !eq
													val K_unchecked kx
													val K_unchecked ky
												inv !not
													inv !or
														inv plug_00460
															val K_unchecked kx
														inv plug_00460
															val K_unchecked ky
											code
												inv !store
													reference
														val K_unchecked fl
													inv !bitwiseor
														val K_unchecked fl
														val K_unchecked RRF_ENTKEYX
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 4
													val K_unchecked at2
											val K_unchecked fl
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at2
												val K_unchecked 1
											val K_unchecked Y
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at2
												val K_unchecked 2
											val K_unchecked X
										inv TwoInOneCheckResize
											val K_unchecked rel
										inv !return
											val K_unchecked 1
								inv !case
									val K_unchecked plug_00523
									code
										inv !if
											inv !lt
												val K_unchecked at
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked fl
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
										inv !if
											inv !eq
												inv !bitwiseand
													val K_unchecked fl
													val K_unchecked RRF_HASY
												val K_unchecked 0
											code
												inv !return
													val K_unchecked 1
										inv !store
											reference
												val K_unchecked tmp
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 4
															val K_unchecked at
													val K_unchecked 3
										inv !ifelse
											inv plug_00460
												val K_unchecked ky
											code
												inv !if
													inv !ne
														inv BlkValueCompare
															val K_unchecked tmp
															val K_unchecked Y
														val K_unchecked 0
													code
														inv !return
															val K_unchecked 1
											code
												inv !if
													inv !ne
														val K_unchecked tmp
														val K_unchecked Y
													code
														inv !return
															val K_unchecked 1
										inv TwoInOneDelete
											val K_unchecked rel
											val K_unchecked at
											val K_unchecked kx
											val K_unchecked ky
											val K_unchecked RRF_ENTKEYX
											val K_unchecked 1
										inv !return
											val K_unchecked 1
				constant TwoInOneHashTableRelationHandler K_unchecked_function = TwoInOneHashTableRelationHandler_B __assimilated=1
			package TwoInOneDelete_fn _function
				symbol public misc TwoInOneDelete
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TwoInOneDelete_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol private misc kx
					symbol private misc ky
					symbol private misc ekflag
					symbol private misc both
					symbol private misc fl
					symbol private misc at2
					symbol private misc E
					symbol private misc i
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRF_ENTKEYX --> /main/template/constants/RRF_ENTKEYX_con/RRF_ENTKEYX
					symbol external misc RRF_HASY --> /main/template/constants/RRF_HASY_con/RRF_HASY
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc TwoInOneLookUp --> /main/template/functions/TwoInOneLookUp_fn/TwoInOneLookUp
					symbol external misc RRF_ENTKEYY --> /main/template/constants/RRF_ENTKEYY_con/RRF_ENTKEYY
					symbol external misc TwoInOneDelete --> /main/template/functions/TwoInOneDelete_fn/TwoInOneDelete
					symbol external misc RRF_HASX --> /main/template/constants/RRF_HASX_con/RRF_HASX
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					local rel K_unchecked
					local at K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local ekflag K_unchecked
					local both K_unchecked
					local fl K_unchecked
					local at2 K_unchecked
					local E K_unchecked
					local i K_unchecked
					code
						inv !store
							reference
								val K_unchecked fl
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									val K_unchecked RRV_DATA_BASE
									inv !times
										val K_unchecked 4
										val K_unchecked at
						inv !ifelse
							inv !eq
								val K_unchecked ekflag
								val K_unchecked RRF_ENTKEYX
							code
								inv !if
									inv !bitwiseand
										val K_unchecked fl
										val K_unchecked RRF_HASY
									code
										inv !store
											reference
												val K_unchecked i
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
												val K_unchecked 3
										inv !if
											val K_unchecked both
											code
												inv !store
													reference
														val K_unchecked E
													inv BlkValueRead
														val K_unchecked rel
														val K_unchecked i
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked i
											val K_unchecked 0
										inv !if
											val K_unchecked both
											code
												inv !store
													reference
														val K_unchecked at2
													inv TwoInOneLookUp
														val K_unchecked rel
														val K_unchecked ky
														val K_unchecked E
														val K_unchecked RRF_ENTKEYY
												inv !if
													inv !ge
														val K_unchecked at2
														val K_unchecked 0
													code
														inv TwoInOneDelete
															val K_unchecked rel
															val K_unchecked at2
															val K_unchecked kx
															val K_unchecked ky
															val K_unchecked RRF_ENTKEYY
												inv !if
													inv !eq
														val K_unchecked at2
														val K_unchecked at
													code
														inv !store
															reference
																val K_unchecked fl
															inv BlkValueRead
																val K_unchecked rel
																inv !plus
																	val K_unchecked RRV_DATA_BASE
																	inv !times
																		val K_unchecked 4
																		val K_unchecked at
										inv !store
											reference
												val K_unchecked fl
											inv !bitwiseand
												val K_unchecked fl
												inv !bitwisenot
													val K_unchecked RRF_HASY
							code
								inv !if
									inv !bitwiseand
										val K_unchecked fl
										val K_unchecked RRF_HASX
									code
										inv !store
											reference
												val K_unchecked i
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
												val K_unchecked 2
										inv !if
											val K_unchecked both
											code
												inv !store
													reference
														val K_unchecked E
													inv BlkValueRead
														val K_unchecked rel
														val K_unchecked i
										inv BlkValueWrite
											val K_unchecked rel
											val K_unchecked i
											val K_unchecked 0
										inv !if
											val K_unchecked both
											code
												inv !store
													reference
														val K_unchecked at2
													inv TwoInOneLookUp
														val K_unchecked rel
														val K_unchecked kx
														val K_unchecked E
														val K_unchecked RRF_ENTKEYX
												inv !if
													inv !ge
														val K_unchecked at2
														val K_unchecked 0
													code
														inv TwoInOneDelete
															val K_unchecked rel
															val K_unchecked at2
															val K_unchecked kx
															val K_unchecked ky
															val K_unchecked RRF_ENTKEYX
														inv !if
															inv !eq
																val K_unchecked at2
																val K_unchecked at
															code
																inv !store
																	reference
																		val K_unchecked fl
																	inv BlkValueRead
																		val K_unchecked rel
																		inv !plus
																			val K_unchecked RRV_DATA_BASE
																			inv !times
																				val K_unchecked 4
																				val K_unchecked at
										inv !store
											reference
												val K_unchecked fl
											inv !bitwiseand
												val K_unchecked fl
												inv !bitwisenot
													val K_unchecked RRF_HASX
						inv !ifelse
							inv !eq
								inv !bitwiseand
									val K_unchecked fl
									inv !plus
										val K_unchecked RRF_HASX
										val K_unchecked RRF_HASY
								val K_unchecked 0
							code
								inv !if
									inv !or
										inv !and
											inv !bitwiseand
												val K_unchecked fl
												val K_unchecked RRF_ENTKEYX
											inv plug_00460
												val K_unchecked kx
										inv !and
											inv !and
												inv !ne
													val K_unchecked ky
													val K_unchecked kx
												inv !bitwiseand
													val K_unchecked fl
													val K_unchecked RRF_ENTKEYY
											inv plug_00460
												val K_unchecked ky
									code
										inv BlkValueFree
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													inv !plus
														val K_unchecked RRV_DATA_BASE
														inv !times
															val K_unchecked 4
															val K_unchecked at
													val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 4
											val K_unchecked at
									val K_unchecked RRF_DELETED
								inv BlkValueWrite
									val K_unchecked rel
									inv !plus
										inv !plus
											val K_unchecked RRV_DATA_BASE
											inv !times
												val K_unchecked 4
												val K_unchecked at
										val K_unchecked 1
									val K_unchecked 0
								inv BlkValueWrite
									val K_unchecked rel
									inv !plus
										inv !plus
											val K_unchecked RRV_DATA_BASE
											inv !times
												val K_unchecked 4
												val K_unchecked at
										val K_unchecked 2
									val K_unchecked 0
								inv BlkValueWrite
									val K_unchecked rel
									inv !plus
										inv !plus
											val K_unchecked RRV_DATA_BASE
											inv !times
												val K_unchecked 4
												val K_unchecked at
										val K_unchecked 3
									val K_unchecked 0
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_USED
									inv !minus
										inv BlkValueRead
											val K_unchecked rel
											val K_unchecked RRV_USED
										val K_unchecked 1
							code
								inv BlkValueWrite
									val K_unchecked rel
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 4
											val K_unchecked at
									val K_unchecked fl
				constant TwoInOneDelete K_unchecked_function = TwoInOneDelete_B __assimilated=1
			package TwoInOneLookUp_fn _function
				symbol public misc TwoInOneLookUp
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TwoInOneLookUp_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc ke
					symbol private misc E
					symbol private misc ekflag
					symbol private misc hashv
					symbol private misc i
					symbol private misc free
					symbol private misc mask
					symbol private misc perturb
					symbol private misc flags
					symbol external misc GetHashValue --> /main/template/functions/GetHashValue_fn/GetHashValue
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc TwoInOneEntryMatches --> /main/template/functions/TwoInOneEntryMatches_fn/TwoInOneEntryMatches
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc RRP_PERTURB_SHIFT --> /main/template/constants/RRP_PERTURB_SHIFT_con/RRP_PERTURB_SHIFT
					local rel K_unchecked
					local ke K_unchecked
					local E K_unchecked
					local ekflag K_unchecked
					local hashv K_unchecked
					local i K_unchecked
					local free K_unchecked
					local mask K_unchecked
					local perturb K_unchecked
					local flags K_unchecked
					code
						inv !store
							reference
								val K_unchecked hashv
							inv GetHashValue
								val K_unchecked ke
								val K_unchecked E
						inv !store
							reference
								val K_unchecked mask
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_STORAGE
						inv !store
							reference
								val K_unchecked i
							inv !bitwiseand
								val K_unchecked hashv
								val K_unchecked mask
						inv !store
							reference
								val K_unchecked flags
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									val K_unchecked RRV_DATA_BASE
									inv !times
										val K_unchecked 4
										val K_unchecked i
						inv !if
							inv !eq
								val K_unchecked flags
								val K_unchecked 0
							code
								inv !return
									inv !bitwisenot
										val K_unchecked i
						inv !if
							inv !and
								inv !bitwiseand
									val K_unchecked flags
									val K_unchecked ekflag
								inv TwoInOneEntryMatches
									val K_unchecked rel
									val K_unchecked i
									val K_unchecked ke
									val K_unchecked E
							code
								inv !return
									val K_unchecked i
						inv !store
							reference
								val K_unchecked free
							val K_unchecked -1
						inv !if
							inv !bitwiseand
								val K_unchecked flags
								val K_unchecked RRF_DELETED
							code
								inv !store
									reference
										val K_unchecked free
									val K_unchecked i
						inv !store
							reference
								val K_unchecked perturb
							val K_unchecked hashv
						inv !store
							reference
								val K_unchecked hashv
							val K_unchecked i
						inv !for
							val K_unchecked 1
							val K_unchecked 1
							val K_unchecked 1
							code
								inv !store
									reference
										val K_unchecked hashv
									inv !plus
										inv !plus
											inv !times
												val K_unchecked hashv
												val K_unchecked 5
											val K_unchecked perturb
										val K_unchecked 1
								inv !store
									reference
										val K_unchecked i
									inv !bitwiseand
										val K_unchecked hashv
										val K_unchecked mask
								inv !store
									reference
										val K_unchecked flags
									inv BlkValueRead
										val K_unchecked rel
										inv !plus
											val K_unchecked RRV_DATA_BASE
											inv !times
												val K_unchecked 4
												val K_unchecked i
								inv !if
									inv !eq
										val K_unchecked flags
										val K_unchecked 0
									code
										inv !if
											inv !ge
												val K_unchecked free
												val K_unchecked 0
											code
												inv !return
													inv !bitwisenot
														val K_unchecked free
										inv !return
											inv !bitwisenot
												val K_unchecked i
								inv !if
									inv !and
										inv !bitwiseand
											val K_unchecked flags
											val K_unchecked ekflag
										inv TwoInOneEntryMatches
											val K_unchecked rel
											val K_unchecked i
											val K_unchecked ke
											val K_unchecked E
									code
										inv !return
											val K_unchecked i
								inv !if
									inv !and
										inv !lt
											val K_unchecked free
											val K_unchecked 0
										inv !bitwiseand
											val K_unchecked flags
											val K_unchecked RRF_DELETED
									code
										inv !store
											reference
												val K_unchecked free
											val K_unchecked i
								inv @ushiftr
									val K_unchecked perturb
									val K_unchecked RRP_PERTURB_SHIFT
									val K_unchecked perturb
				constant TwoInOneLookUp K_unchecked_function = TwoInOneLookUp_B __assimilated=1
			package TwoInOneCheckResize_fn _function
				symbol public misc TwoInOneCheckResize
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TwoInOneCheckResize_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc filled
					symbol private misc ext
					symbol private misc newext
					symbol private misc temp
					symbol private misc i
					symbol private misc at
					symbol private misc kov
					symbol private misc kx
					symbol private misc ky
					symbol private misc F
					symbol private misc E
					symbol private misc X
					symbol private misc Y
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
					symbol external misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
					symbol external misc RRP_CROWDED_IS --> /main/template/constants/RRP_CROWDED_IS_con/RRP_CROWDED_IS
					symbol external misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
					symbol external misc plug_00139 --> /main/connectors/plug_00139
					symbol external misc plug_00342 --> /main/connectors/plug_00342
					symbol external misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
					symbol external misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
					symbol external misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc RRP_LARGE_IS --> /main/template/constants/RRP_LARGE_IS_con/RRP_LARGE_IS
					symbol external misc RRP_RESIZE_LARGE --> /main/template/constants/RRP_RESIZE_LARGE_con/RRP_RESIZE_LARGE
					symbol external misc RRP_RESIZE_SMALL --> /main/template/constants/RRP_RESIZE_SMALL_con/RRP_RESIZE_SMALL
					symbol external misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
					symbol external misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
					symbol external misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
					symbol external misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
					symbol external misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
					symbol external misc RRF_ENTKEYX --> /main/template/constants/RRF_ENTKEYX_con/RRF_ENTKEYX
					symbol external misc TwoInOneLookUp --> /main/template/functions/TwoInOneLookUp_fn/TwoInOneLookUp
					symbol external misc RRF_ENTKEYY --> /main/template/constants/RRF_ENTKEYY_con/RRF_ENTKEYY
					symbol external misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
					local rel K_unchecked
					local filled K_unchecked
					local ext K_unchecked
					local newext K_unchecked
					local temp K_unchecked
					local i K_unchecked
					local at K_unchecked
					local kov K_unchecked
					local kx K_unchecked
					local ky K_unchecked
					local F K_unchecked
					local E K_unchecked
					local X K_unchecked
					local Y K_unchecked
					code
						inv !store
							reference
								val K_unchecked filled
							inv BlkValueRead
								val K_unchecked rel
								val K_unchecked RRV_FILLED
						inv !store
							reference
								val K_unchecked ext
							inv !plus
								inv BlkValueRead
									val K_unchecked rel
									val K_unchecked RRV_STORAGE
								val K_unchecked 1
						inv !if
							inv !ge
								val K_unchecked filled
								inv !times
									inv !minus
										val K_unchecked ext
										val K_unchecked filled
									val K_unchecked RRP_CROWDED_IS
							code
								inv !store
									reference
										val K_unchecked temp
									inv FlexAllocate
										inv !times
											val K_unchecked ext
											inv !times
												val K_unchecked 4
												val K_unchecked plug_00139
										val K_unchecked plug_00342
										inv !plus
											val K_unchecked BLK_FLAG_WORD
											val K_unchecked BLK_FLAG_MULTIPLE
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !times
											val K_unchecked ext
											val K_unchecked 4
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked temp
											val K_unchecked i
											inv BlkValueRead
												val K_unchecked rel
												inv !plus
													val K_unchecked RRV_DATA_BASE
													val K_unchecked i
											val K_unchecked 1
								inv !ifelse
									inv !ge
										val K_unchecked ext
										val K_unchecked RRP_LARGE_IS
									code
										inv !store
											reference
												val K_unchecked newext
											inv !times
												val K_unchecked ext
												val K_unchecked RRP_RESIZE_LARGE
									code
										inv !store
											reference
												val K_unchecked newext
											inv !times
												val K_unchecked ext
												val K_unchecked RRP_RESIZE_SMALL
								inv BlkValueSetLBCapacity
									val K_unchecked rel
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked newext
											val K_unchecked 4
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_STORAGE
									inv !minus
										val K_unchecked newext
										val K_unchecked 1
								inv BlkValueWrite
									val K_unchecked rel
									val K_unchecked RRV_FILLED
									inv BlkValueRead
										val K_unchecked rel
										val K_unchecked RRV_USED
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										inv !times
											val K_unchecked newext
											val K_unchecked 4
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												val K_unchecked i
											val K_unchecked 0
								inv !store
									reference
										val K_unchecked kov
									inv BlkValueRead
										val K_unchecked rel
										val K_unchecked RRV_KIND
								inv !store
									reference
										val K_unchecked kx
									inv KindBaseTerm
										val K_unchecked kov
										val K_unchecked 0
								inv !store
									reference
										val K_unchecked ky
									inv KindBaseTerm
										val K_unchecked kov
										val K_unchecked 1
								inv !for
									inv !store
										reference
											val K_unchecked i
										val K_unchecked 0
									inv !lt
										val K_unchecked i
										val K_unchecked ext
									inv !postincrement
										reference
											val K_unchecked i
									code
										inv !store
											reference
												val K_unchecked F
											inv BlkValueRead
												val K_unchecked temp
												inv !times
													val K_unchecked 4
													val K_unchecked i
												val K_unchecked 1
										inv !if
											inv !or
												inv !eq
													val K_unchecked F
													val K_unchecked 0
												inv !bitwiseand
													val K_unchecked F
													val K_unchecked RRF_DELETED
											code
												inv !continue
										inv !store
											reference
												val K_unchecked E
											inv BlkValueRead
												val K_unchecked temp
												inv !plus
													inv !times
														val K_unchecked 4
														val K_unchecked i
													val K_unchecked 1
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked X
											inv BlkValueRead
												val K_unchecked temp
												inv !plus
													inv !times
														val K_unchecked 4
														val K_unchecked i
													val K_unchecked 2
												val K_unchecked 1
										inv !store
											reference
												val K_unchecked Y
											inv BlkValueRead
												val K_unchecked temp
												inv !plus
													inv !times
														val K_unchecked 4
														val K_unchecked i
													val K_unchecked 3
												val K_unchecked 1
										inv !ifelse
											inv !bitwiseand
												val K_unchecked F
												val K_unchecked RRF_ENTKEYX
											code
												inv !store
													reference
														val K_unchecked at
													inv TwoInOneLookUp
														val K_unchecked rel
														val K_unchecked kx
														val K_unchecked E
														val K_unchecked RRF_ENTKEYX
											code
												inv !store
													reference
														val K_unchecked at
													inv TwoInOneLookUp
														val K_unchecked rel
														val K_unchecked ky
														val K_unchecked E
														val K_unchecked RRF_ENTKEYY
										inv !if
											inv !ge
												val K_unchecked at
												val K_unchecked 0
											code
												inv !print
													val K_unchecked "*** Duplicate entry while resizing ***\n"
												inv !return
													val K_unchecked 0
										inv !store
											reference
												val K_unchecked at
											inv !bitwisenot
												val K_unchecked at
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												val K_unchecked RRV_DATA_BASE
												inv !times
													val K_unchecked 4
													val K_unchecked at
											val K_unchecked F
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
												val K_unchecked 1
											val K_unchecked E
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
												val K_unchecked 2
											val K_unchecked X
										inv BlkValueWrite
											val K_unchecked rel
											inv !plus
												inv !plus
													val K_unchecked RRV_DATA_BASE
													inv !times
														val K_unchecked 4
														val K_unchecked at
												val K_unchecked 3
											val K_unchecked Y
								inv FlexFree
									val K_unchecked temp
				constant TwoInOneCheckResize K_unchecked_function = TwoInOneCheckResize_B __assimilated=1
			package TwoInOneEntryMatches_fn _function
				symbol public misc TwoInOneEntryMatches
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package TwoInOneEntryMatches_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc at
					symbol private misc ke
					symbol private misc E
					symbol private misc ce
					symbol external misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
					symbol external misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
					symbol external misc plug_00460 --> /main/connectors/plug_00460
					symbol external misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
					local rel K_unchecked
					local at K_unchecked
					local ke K_unchecked
					local E K_unchecked
					local ce K_unchecked
					code
						inv !store
							reference
								val K_unchecked ce
							inv BlkValueRead
								val K_unchecked rel
								inv !plus
									inv !plus
										val K_unchecked RRV_DATA_BASE
										inv !times
											val K_unchecked 4
											val K_unchecked at
									val K_unchecked 1
						inv !ifelse
							inv plug_00460
								val K_unchecked ke
							code
								inv !if
									inv !ne
										inv BlkValueCompare
											val K_unchecked ce
											val K_unchecked E
										val K_unchecked 0
									code
										inv !return
											val K_unchecked 0
							code
								inv !if
									inv !ne
										val K_unchecked ce
										val K_unchecked E
									code
										inv !return
											val K_unchecked 0
						inv !return
							val K_unchecked 1
				constant TwoInOneEntryMatches K_unchecked_function = TwoInOneEntryMatches_B __assimilated=1
			package RELATION_TY_Empty_fn _function
				symbol public misc RELATION_TY_Empty
				symbol external misc K_unchecked_function --> /main/generic/K_unchecked_function
				package RELATION_TY_Empty_B _code
					symbol private misc rel
					symbol external misc K_unchecked --> /main/generic/K_unchecked
					symbol private misc set
					symbol private misc handler
					symbol external misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
					symbol external misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
					symbol external misc RELS_EMPTY --> /main/template/constants/RELS_EMPTY_con/RELS_EMPTY
					local rel K_unchecked
					local set K_unchecked
					local handler K_unchecked
					code
						inv !store
							reference
								val K_unchecked handler
							inv RlnGetF
								val K_unchecked rel
								val K_unchecked RR_HANDLER
						inv !return
							inv !indirect3
								val K_unchecked handler
								val K_unchecked rel
								val K_unchecked RELS_EMPTY
								val K_unchecked set
				constant RELATION_TY_Empty K_unchecked_function = RELATION_TY_Empty_B __assimilated=1
		package properties _submodule
			package absent_prop _property
				symbol public misc absent `absent`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property absent K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package animate_prop _property
				symbol public misc animate `animate`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property animate K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package clothing_prop _property
				symbol public misc clothing `clothing`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property clothing K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package concealed_prop _property
				symbol public misc concealed `concealed`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property concealed K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package container_prop _property
				symbol public misc container `container`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property container K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package door_prop _property
				symbol public misc door `door`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property door K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package edible_prop _property
				symbol public misc edible `edible`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property edible K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package enterable_prop _property
				symbol public misc enterable `enterable`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property enterable K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package light_prop _property
				symbol public misc light `light`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property light K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package lockable_prop _property
				symbol public misc lockable `lockable`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property lockable K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package locked_prop _property
				symbol public misc locked `locked`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property locked K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package moved_prop _property
				symbol public misc moved `moved`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property moved K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package on_prop _property
				symbol public misc on `on`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property on K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package open_prop _property
				symbol public misc open `open`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property open K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package openable_prop _property
				symbol public misc openable `openable`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property openable K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package scenery_prop _property
				symbol public misc scenery `scenery`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property scenery K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package static_prop _property
				symbol public misc static `static`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property static K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package supporter_prop _property
				symbol public misc supporter `supporter`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property supporter K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package switchable_prop _property
				symbol public misc switchable `switchable`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property switchable K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package talkable_prop _property
				symbol public misc talkable `talkable`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property talkable K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package transparent_prop _property
				symbol public misc transparent `transparent`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property transparent K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package visited_prop _property
				symbol public misc visited `visited`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property visited K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package worn_prop _property
				symbol public misc worn `worn`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property worn K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package male_prop _property
				symbol public misc male `male`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property male K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package female_prop _property
				symbol public misc female `female`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property female K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package neuter_prop _property
				symbol public misc neuter `neuter`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property neuter K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package pluralname_prop _property
				symbol public misc pluralname `pluralname`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property pluralname K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package ambigpluralname_prop _property
				symbol public misc ambigpluralname `ambigpluralname`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property ambigpluralname K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package proper_prop _property
				symbol public misc proper `proper`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property proper K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package remove_proper_prop _property
				symbol public misc remove_proper `remove_proper`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property remove_proper K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package privately_named_prop _property
				symbol public misc privately_named `privately_named`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property privately_named K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package mentioned_prop _property
				symbol public misc mentioned `mentioned`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property mentioned K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package pushable_prop _property
				symbol public misc pushable `pushable`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property pushable K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package mark_as_room_prop _property
				symbol public misc mark_as_room `mark_as_room`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property mark_as_room K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package mark_as_thing_prop _property
				symbol public misc mark_as_thing `mark_as_thing`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property mark_as_thing K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package workflag_prop _property
				symbol public misc workflag `workflag`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property workflag K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package workflag2_prop _property
				symbol public misc workflag2 `workflag2`
				symbol external misc K_truth_state --> /main/generic/K_truth_state
				property workflag2 K_truth_state __assimilated=1 __attribute=1 __either_or=1
			package add_to_scope_prop _property
				symbol public misc add_to_scope
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property add_to_scope K_unchecked __assimilated=1
			package article_prop _property
				symbol public misc article
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property article K_unchecked __assimilated=1
			package capacity_prop _property
				symbol public misc capacity
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property capacity K_unchecked __assimilated=1
			package component_child_prop _property
				symbol public misc component_child
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property component_child K_unchecked __assimilated=1
			package component_parent_prop _property
				symbol public misc component_parent
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property component_parent K_unchecked __assimilated=1
			package component_sibling_prop _property
				symbol public misc component_sibling
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property component_sibling K_unchecked __assimilated=1
			package description_prop _property
				symbol public misc description
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property description K_unchecked __assimilated=1
			package door_dir_prop _property
				symbol public misc door_dir
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property door_dir K_unchecked __assimilated=1
			package door_to_prop _property
				symbol public misc door_to
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property door_to K_unchecked __assimilated=1
			package found_in_prop _property
				symbol public misc found_in
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property found_in K_unchecked __assimilated=1
			package initial_prop _property
				symbol public misc initial
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property initial K_unchecked __assimilated=1
			package list_together_prop _property
				symbol public misc list_together
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property list_together K_unchecked __assimilated=1
			package map_region_prop _property
				symbol public misc map_region
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property map_region K_unchecked __assimilated=1
			package parse_name_prop _property
				symbol public misc parse_name
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property parse_name K_unchecked __assimilated=1
			package plural_prop _property
				symbol public misc plural
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property plural K_unchecked __assimilated=1
			package regional_found_in_prop _property
				symbol public misc regional_found_in
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property regional_found_in K_unchecked __assimilated=1
			package room_index_prop _property
				symbol public misc room_index
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property room_index K_unchecked __assimilated=1
			package short_name_prop _property
				symbol public misc short_name
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property short_name K_unchecked __assimilated=1
			package vector_prop _property
				symbol public misc vector
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property vector K_unchecked __assimilated=1
			package with_key_prop _property
				symbol public misc with_key
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property with_key K_unchecked __assimilated=1
			package KD_Count_prop _property
				symbol public misc KD_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property KD_Count K_unchecked __assimilated=1
			package IK1_Count_prop _property
				symbol public misc IK1_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK1_Count K_unchecked __assimilated=1
			package IK2_Count_prop _property
				symbol public misc IK2_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK2_Count K_unchecked __assimilated=1
			package IK4_Count_prop _property
				symbol public misc IK4_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK4_Count K_unchecked __assimilated=1
			package IK5_Count_prop _property
				symbol public misc IK5_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK5_Count K_unchecked __assimilated=1
			package IK6_Count_prop _property
				symbol public misc IK6_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK6_Count K_unchecked __assimilated=1
			package IK8_Count_prop _property
				symbol public misc IK8_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK8_Count K_unchecked __assimilated=1
			package IK3_Count_prop _property
				symbol public misc IK3_Count
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK3_Count K_unchecked __assimilated=1
			package IK1_link_prop _property
				symbol public misc IK1_link
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK1_link K_unchecked __assimilated=1
			package IK2_link_prop _property
				symbol public misc IK2_link
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK2_link K_unchecked __assimilated=1
			package IK5_link_prop _property
				symbol public misc IK5_link
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK5_link K_unchecked __assimilated=1
			package IK6_link_prop _property
				symbol public misc IK6_link
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK6_link K_unchecked __assimilated=1
			package IK8_link_prop _property
				symbol public misc IK8_link
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property IK8_link K_unchecked __assimilated=1
			package articles_prop _property
				symbol public misc articles
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property articles K_unchecked __assimilated=1
			package grammar_prop _property
				symbol public misc grammar
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property grammar K_unchecked __assimilated=1
			package inside_description_prop _property
				symbol public misc inside_description
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property inside_description K_unchecked __assimilated=1
			package short_name_indef_prop _property
				symbol public misc short_name_indef
				symbol external misc K_unchecked --> /main/generic/K_unchecked
				property short_name_indef K_unchecked __assimilated=1
		package commands _submodule
			package assim_command_1 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc testcommandnoun --> /main/template/functions/testcommandnoun_fn/testcommandnoun
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00051 --> /main/connectors/plug_00051
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'abstract', plug_00003, testcommandnoun, dw'to', testcommandnoun, plug_00004, plug_00051 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_2 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00052 --> /main/connectors/plug_00052
				symbol external misc plug_00053 --> /main/connectors/plug_00053
				symbol external misc plug_00054 --> /main/connectors/plug_00054
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'actions', plug_00003, plug_00004, plug_00052, plug_00003, dw'on', plug_00004, plug_00053, plug_00003, dw'off', plug_00004, plug_00054 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_3 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc testcommandnoun --> /main/template/functions/testcommandnoun_fn/testcommandnoun
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00055 --> /main/connectors/plug_00055
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'gonear', plug_00003, testcommandnoun, plug_00004, plug_00055 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_4 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc testcommandnoun --> /main/template/functions/testcommandnoun_fn/testcommandnoun
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00056 --> /main/connectors/plug_00056
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'purloin', plug_00003, testcommandnoun, plug_00004, plug_00056 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_5 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00057 --> /main/connectors/plug_00057
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'random', plug_00003, plug_00004, plug_00057 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_6 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00058 --> /main/connectors/plug_00058
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'relations', plug_00003, plug_00004, plug_00058 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_7 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00059 --> /main/connectors/plug_00059
				symbol external misc plug_00005 --> /main/connectors/plug_00005
				symbol external misc plug_00060 --> /main/connectors/plug_00060
				symbol external misc plug_00061 --> /main/connectors/plug_00061
				symbol external misc plug_00062 --> /main/connectors/plug_00062
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'responses', plug_00003, plug_00004, plug_00059, plug_00003, plug_00005, plug_00004, plug_00060, plug_00003, dw'now', plug_00005, plug_00004, plug_00061, plug_00003, dw'set', plug_00005, plug_00004, plug_00062 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_8 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00063 --> /main/connectors/plug_00063
				symbol external misc plug_00064 --> /main/connectors/plug_00064
				symbol external misc plug_00065 --> /main/connectors/plug_00065
				symbol external misc plug_00066 --> /main/connectors/plug_00066
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'rules', plug_00003, plug_00004, plug_00063, plug_00003, dw'all', plug_00004, plug_00064, plug_00003, dw'on', plug_00004, plug_00065, plug_00003, dw'off', plug_00004, plug_00066 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_9 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00067 --> /main/connectors/plug_00067
				symbol external misc plug_00068 --> /main/connectors/plug_00068
				symbol external misc plug_00069 --> /main/connectors/plug_00069
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'scenes', plug_00003, plug_00004, plug_00067, plug_00003, dw'on', plug_00004, plug_00068, plug_00003, dw'off', plug_00004, plug_00069 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_10 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00070 --> /main/connectors/plug_00070
				symbol external misc testcommandnoun --> /main/template/functions/testcommandnoun_fn/testcommandnoun
				symbol external misc plug_00071 --> /main/connectors/plug_00071
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'scope', plug_00003, plug_00004, plug_00070, plug_00003, testcommandnoun, plug_00004, plug_00071 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_11 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00072 --> /main/connectors/plug_00072
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'showheap', plug_00003, plug_00004, plug_00072 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_12 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00073 --> /main/connectors/plug_00073
				symbol external misc testcommandnoun --> /main/template/functions/testcommandnoun_fn/testcommandnoun
				symbol external misc plug_00074 --> /main/connectors/plug_00074
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'showme', plug_00003, plug_00004, plug_00073, plug_00003, testcommandnoun, plug_00004, plug_00074 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_13 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00005 --> /main/connectors/plug_00005
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00075 --> /main/connectors/plug_00075
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'showverb', plug_00003, plug_00005, plug_00004, plug_00075 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_14 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00076 --> /main/connectors/plug_00076
				symbol external misc plug_00005 --> /main/connectors/plug_00005
				symbol external misc plug_00077 --> /main/connectors/plug_00077
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'test', plug_00003, plug_00004, plug_00076, plug_00003, plug_00005, plug_00004, plug_00077 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_15 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00078 --> /main/connectors/plug_00078
				symbol external misc plug_00006 --> /main/connectors/plug_00006
				symbol external misc plug_00079 --> /main/connectors/plug_00079
				symbol external misc plug_00080 --> /main/connectors/plug_00080
				symbol external misc plug_00081 --> /main/connectors/plug_00081
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'trace', plug_00003, plug_00004, plug_00078, plug_00003, plug_00006, plug_00004, plug_00079, plug_00003, dw'on', plug_00004, plug_00080, plug_00003, dw'off', plug_00004, plug_00081 } __assimilated=1 __verb=1 __meta_verb=1
			package assim_command_16 _command
				symbol public misc assim_gv
				symbol external misc plug_00003 --> /main/connectors/plug_00003
				symbol external misc plug_00004 --> /main/connectors/plug_00004
				symbol external misc plug_00082 --> /main/connectors/plug_00082
				symbol external misc testcommandnoun --> /main/template/functions/testcommandnoun_fn/testcommandnoun
				symbol external misc plug_00083 --> /main/connectors/plug_00083
				symbol external misc K_list_of_values --> /main/generic/K_list_of_values
				constant assim_gv K_list_of_values = { dw'tree', plug_00003, plug_00004, plug_00082, plug_00003, testcommandnoun, plug_00004, plug_00083 } __assimilated=1 __verb=1 __meta_verb=1
	package connectors _linkage
		symbol plug misc plug_00001 --? VERB_DIRECTIVE_REVERSE
		symbol plug misc plug_00002 --? VERB_DIRECTIVE_SLASH
		symbol plug misc plug_00003 --? VERB_DIRECTIVE_DIVIDER
		symbol plug misc plug_00004 --? VERB_DIRECTIVE_RESULT
		symbol plug misc plug_00005 --? VERB_DIRECTIVE_SPECIAL
		symbol plug misc plug_00006 --? VERB_DIRECTIVE_NUMBER
		symbol plug misc plug_00007 --? VERB_DIRECTIVE_NOUN
		symbol plug misc plug_00008 --? VERB_DIRECTIVE_MULTI
		symbol plug misc plug_00009 --? VERB_DIRECTIVE_MULTIINSIDE
		symbol plug misc plug_00010 --? VERB_DIRECTIVE_MULTIHELD
		symbol plug misc plug_00011 --? VERB_DIRECTIVE_HELD
		symbol plug misc plug_00012 --? VERB_DIRECTIVE_CREATURE
		symbol plug misc plug_00013 --? VERB_DIRECTIVE_TOPIC
		symbol plug misc plug_00014 --? VERB_DIRECTIVE_MULTIEXCEPT
		symbol socket misc Prop_Falsity --> /main/template/functions/Prop_Falsity_fn/Prop_Falsity
		symbol socket misc absent --> /main/template/properties/absent_prop/absent
		symbol socket misc P_absent --> /main/template/properties/absent_prop/absent
		symbol socket misc animate --> /main/template/properties/animate_prop/animate
		symbol socket misc P_animate --> /main/template/properties/animate_prop/animate
		symbol socket misc clothing --> /main/template/properties/clothing_prop/clothing
		symbol socket misc P_clothing --> /main/template/properties/clothing_prop/clothing
		symbol socket misc concealed --> /main/template/properties/concealed_prop/concealed
		symbol socket misc P_concealed --> /main/template/properties/concealed_prop/concealed
		symbol socket misc container --> /main/template/properties/container_prop/container
		symbol socket misc P_container --> /main/template/properties/container_prop/container
		symbol socket misc door --> /main/template/properties/door_prop/door
		symbol socket misc P_door --> /main/template/properties/door_prop/door
		symbol socket misc edible --> /main/template/properties/edible_prop/edible
		symbol socket misc P_edible --> /main/template/properties/edible_prop/edible
		symbol socket misc enterable --> /main/template/properties/enterable_prop/enterable
		symbol socket misc P_enterable --> /main/template/properties/enterable_prop/enterable
		symbol socket misc light --> /main/template/properties/light_prop/light
		symbol socket misc P_light --> /main/template/properties/light_prop/light
		symbol socket misc lockable --> /main/template/properties/lockable_prop/lockable
		symbol socket misc P_lockable --> /main/template/properties/lockable_prop/lockable
		symbol socket misc locked --> /main/template/properties/locked_prop/locked
		symbol socket misc P_locked --> /main/template/properties/locked_prop/locked
		symbol socket misc moved --> /main/template/properties/moved_prop/moved
		symbol socket misc P_moved --> /main/template/properties/moved_prop/moved
		symbol socket misc on --> /main/template/properties/on_prop/on
		symbol socket misc P_on --> /main/template/properties/on_prop/on
		symbol socket misc open --> /main/template/properties/open_prop/open
		symbol socket misc P_open --> /main/template/properties/open_prop/open
		symbol socket misc openable --> /main/template/properties/openable_prop/openable
		symbol socket misc P_openable --> /main/template/properties/openable_prop/openable
		symbol socket misc scenery --> /main/template/properties/scenery_prop/scenery
		symbol socket misc P_scenery --> /main/template/properties/scenery_prop/scenery
		symbol socket misc static --> /main/template/properties/static_prop/static
		symbol socket misc P_static --> /main/template/properties/static_prop/static
		symbol socket misc supporter --> /main/template/properties/supporter_prop/supporter
		symbol socket misc P_supporter --> /main/template/properties/supporter_prop/supporter
		symbol socket misc switchable --> /main/template/properties/switchable_prop/switchable
		symbol socket misc P_switchable --> /main/template/properties/switchable_prop/switchable
		symbol socket misc talkable --> /main/template/properties/talkable_prop/talkable
		symbol socket misc P_talkable --> /main/template/properties/talkable_prop/talkable
		symbol socket misc transparent --> /main/template/properties/transparent_prop/transparent
		symbol socket misc P_transparent --> /main/template/properties/transparent_prop/transparent
		symbol socket misc visited --> /main/template/properties/visited_prop/visited
		symbol socket misc P_visited --> /main/template/properties/visited_prop/visited
		symbol socket misc worn --> /main/template/properties/worn_prop/worn
		symbol socket misc P_worn --> /main/template/properties/worn_prop/worn
		symbol socket misc male --> /main/template/properties/male_prop/male
		symbol socket misc P_male --> /main/template/properties/male_prop/male
		symbol socket misc female --> /main/template/properties/female_prop/female
		symbol socket misc P_female --> /main/template/properties/female_prop/female
		symbol socket misc neuter --> /main/template/properties/neuter_prop/neuter
		symbol socket misc P_neuter --> /main/template/properties/neuter_prop/neuter
		symbol socket misc pluralname --> /main/template/properties/pluralname_prop/pluralname
		symbol socket misc P_pluralname --> /main/template/properties/pluralname_prop/pluralname
		symbol socket misc ambigpluralname --> /main/template/properties/ambigpluralname_prop/ambigpluralname
		symbol socket misc P_ambigpluralname --> /main/template/properties/ambigpluralname_prop/ambigpluralname
		symbol socket misc proper --> /main/template/properties/proper_prop/proper
		symbol socket misc P_proper --> /main/template/properties/proper_prop/proper
		symbol socket misc remove_proper --> /main/template/properties/remove_proper_prop/remove_proper
		symbol socket misc P_remove_proper --> /main/template/properties/remove_proper_prop/remove_proper
		symbol socket misc privately_named --> /main/template/properties/privately_named_prop/privately_named
		symbol socket misc P_privately_named --> /main/template/properties/privately_named_prop/privately_named
		symbol socket misc mentioned --> /main/template/properties/mentioned_prop/mentioned
		symbol socket misc P_mentioned --> /main/template/properties/mentioned_prop/mentioned
		symbol socket misc pushable --> /main/template/properties/pushable_prop/pushable
		symbol socket misc P_pushable --> /main/template/properties/pushable_prop/pushable
		symbol socket misc mark_as_room --> /main/template/properties/mark_as_room_prop/mark_as_room
		symbol socket misc P_mark_as_room --> /main/template/properties/mark_as_room_prop/mark_as_room
		symbol socket misc mark_as_thing --> /main/template/properties/mark_as_thing_prop/mark_as_thing
		symbol socket misc P_mark_as_thing --> /main/template/properties/mark_as_thing_prop/mark_as_thing
		symbol socket misc workflag --> /main/template/properties/workflag_prop/workflag
		symbol socket misc P_workflag --> /main/template/properties/workflag_prop/workflag
		symbol socket misc workflag2 --> /main/template/properties/workflag2_prop/workflag2
		symbol socket misc P_workflag2 --> /main/template/properties/workflag2_prop/workflag2
		symbol socket misc add_to_scope --> /main/template/properties/add_to_scope_prop/add_to_scope
		symbol socket misc article --> /main/template/properties/article_prop/article
		symbol socket misc capacity --> /main/template/properties/capacity_prop/capacity
		symbol socket misc component_child --> /main/template/properties/component_child_prop/component_child
		symbol socket misc component_parent --> /main/template/properties/component_parent_prop/component_parent
		symbol socket misc component_sibling --> /main/template/properties/component_sibling_prop/component_sibling
		symbol socket misc description --> /main/template/properties/description_prop/description
		symbol socket misc door_dir --> /main/template/properties/door_dir_prop/door_dir
		symbol socket misc door_to --> /main/template/properties/door_to_prop/door_to
		symbol socket misc found_in --> /main/template/properties/found_in_prop/found_in
		symbol socket misc initial --> /main/template/properties/initial_prop/initial
		symbol socket misc list_together --> /main/template/properties/list_together_prop/list_together
		symbol socket misc map_region --> /main/template/properties/map_region_prop/map_region
		symbol socket misc parse_name --> /main/template/properties/parse_name_prop/parse_name
		symbol socket misc plural --> /main/template/properties/plural_prop/plural
		symbol socket misc regional_found_in --> /main/template/properties/regional_found_in_prop/regional_found_in
		symbol socket misc room_index --> /main/template/properties/room_index_prop/room_index
		symbol socket misc short_name --> /main/template/properties/short_name_prop/short_name
		symbol socket misc vector --> /main/template/properties/vector_prop/vector
		symbol socket misc with_key --> /main/template/properties/with_key_prop/with_key
		symbol socket misc KD_Count --> /main/template/properties/KD_Count_prop/KD_Count
		symbol socket misc IK1_Count --> /main/template/properties/IK1_Count_prop/IK1_Count
		symbol socket misc IK2_Count --> /main/template/properties/IK2_Count_prop/IK2_Count
		symbol socket misc IK4_Count --> /main/template/properties/IK4_Count_prop/IK4_Count
		symbol socket misc IK5_Count --> /main/template/properties/IK5_Count_prop/IK5_Count
		symbol socket misc IK6_Count --> /main/template/properties/IK6_Count_prop/IK6_Count
		symbol socket misc IK8_Count --> /main/template/properties/IK8_Count_prop/IK8_Count
		symbol socket misc IK3_Count --> /main/template/properties/IK3_Count_prop/IK3_Count
		symbol socket misc IK1_link --> /main/template/properties/IK1_link_prop/IK1_link
		symbol socket misc IK2_link --> /main/template/properties/IK2_link_prop/IK2_link
		symbol socket misc IK5_link --> /main/template/properties/IK5_link_prop/IK5_link
		symbol socket misc IK6_link --> /main/template/properties/IK6_link_prop/IK6_link
		symbol socket misc IK8_link --> /main/template/properties/IK8_link_prop/IK8_link
		symbol socket misc articles --> /main/template/properties/articles_prop/articles
		symbol socket misc grammar --> /main/template/properties/grammar_prop/grammar
		symbol socket misc inside_description --> /main/template/properties/inside_description_prop/inside_description
		symbol socket misc short_name_indef --> /main/template/properties/short_name_indef_prop/short_name_indef
		symbol socket misc VM_Initialise --> /main/template/functions/VM_Initialise_fn/VM_Initialise
		symbol socket misc ENABLE_GLULX_ACCEL_R --> /main/template/functions/ENABLE_GLULX_ACCEL_R_fn/ENABLE_GLULX_ACCEL_R
		symbol socket misc VM_Describe_Release --> /main/template/functions/VM_Describe_Release_fn/VM_Describe_Release
		symbol socket misc VM_KeyChar --> /main/template/functions/VM_KeyChar_fn/VM_KeyChar
		symbol socket misc VM_KeyDelay --> /main/template/functions/VM_KeyDelay_fn/VM_KeyDelay
		symbol socket misc VM_KeyDelay_Interrupt --> /main/template/functions/VM_KeyDelay_Interrupt_fn/VM_KeyDelay_Interrupt
		symbol socket misc VM_ReadKeyboard --> /main/template/functions/VM_ReadKeyboard_fn/VM_ReadKeyboard
		symbol socket misc VM_CopyBuffer --> /main/template/functions/VM_CopyBuffer_fn/VM_CopyBuffer
		symbol socket misc VM_PrintToBuffer --> /main/template/functions/VM_PrintToBuffer_fn/VM_PrintToBuffer
		symbol socket misc VM_Tokenise --> /main/template/functions/VM_Tokenise_fn/VM_Tokenise
		symbol socket misc LTI_Insert --> /main/template/functions/LTI_Insert_fn/LTI_Insert
		symbol socket misc VM_InvalidDictionaryAddress --> /main/template/functions/VM_InvalidDictionaryAddress_fn/VM_InvalidDictionaryAddress
		symbol socket misc VM_DictionaryAddressToNumber --> /main/template/functions/VM_DictionaryAddressToNumber_fn/VM_DictionaryAddressToNumber
		symbol socket misc VM_NumberToDictionaryAddress --> /main/template/functions/VM_NumberToDictionaryAddress_fn/VM_NumberToDictionaryAddress
		symbol socket misc VM_CommandTableAddress --> /main/template/functions/VM_CommandTableAddress_fn/VM_CommandTableAddress
		symbol socket misc VM_PrintCommandWords --> /main/template/functions/VM_PrintCommandWords_fn/VM_PrintCommandWords
		symbol socket misc DebugAction --> /main/template/functions/DebugAction_fn/DebugAction
		symbol socket misc DebugAttribute --> /main/template/functions/DebugAttribute_fn/DebugAttribute
		symbol socket misc VM_Seed_RNG --> /main/template/functions/VM_Seed_RNG_fn/VM_Seed_RNG
		symbol socket misc VM_AllocateMemory --> /main/template/functions/VM_AllocateMemory_fn/VM_AllocateMemory
		symbol socket misc VM_FreeMemory --> /main/template/functions/VM_FreeMemory_fn/VM_FreeMemory
		symbol socket misc VM_Picture --> /main/template/functions/VM_Picture_fn/VM_Picture
		symbol socket misc VM_SoundEffect --> /main/template/functions/VM_SoundEffect_fn/VM_SoundEffect
		symbol socket misc VM_Style --> /main/template/functions/VM_Style_fn/VM_Style
		symbol socket misc VM_UpperToLowerCase --> /main/template/functions/VM_UpperToLowerCase_fn/VM_UpperToLowerCase
		symbol socket misc VM_LowerToUpperCase --> /main/template/functions/VM_LowerToUpperCase_fn/VM_LowerToUpperCase
		symbol socket misc VM_ClearScreen --> /main/template/functions/VM_ClearScreen_fn/VM_ClearScreen
		symbol socket misc VM_ScreenWidth --> /main/template/functions/VM_ScreenWidth_fn/VM_ScreenWidth
		symbol socket misc VM_ScreenHeight --> /main/template/functions/VM_ScreenHeight_fn/VM_ScreenHeight
		symbol socket misc VM_SetWindowColours --> /main/template/functions/VM_SetWindowColours_fn/VM_SetWindowColours
		symbol socket misc VM_RestoreWindowColours --> /main/template/functions/VM_RestoreWindowColours_fn/VM_RestoreWindowColours
		symbol socket misc VM_MainWindow --> /main/template/functions/VM_MainWindow_fn/VM_MainWindow
		symbol socket misc VM_MoveCursorInStatusLine --> /main/template/functions/VM_MoveCursorInStatusLine_fn/VM_MoveCursorInStatusLine
		symbol socket misc Z6_MoveCursor --> /main/template/functions/Z6_MoveCursor_fn/Z6_MoveCursor
		symbol socket misc VM_StatusLineHeight --> /main/template/functions/VM_StatusLineHeight_fn/VM_StatusLineHeight
		symbol socket misc Z6_DrawStatusLine --> /main/template/functions/Z6_DrawStatusLine_fn/Z6_DrawStatusLine
		symbol socket misc VM_Undo --> /main/template/functions/VM_Undo_fn/VM_Undo
		symbol socket misc VM_Save_Undo --> /main/template/functions/VM_Save_Undo_fn/VM_Save_Undo
		symbol socket misc QUIT_THE_GAME_R --> /main/template/functions/QUIT_THE_GAME_R_fn/QUIT_THE_GAME_R
		symbol socket misc RESTART_THE_GAME_R --> /main/template/functions/RESTART_THE_GAME_R_fn/RESTART_THE_GAME_R
		symbol socket misc RESTORE_THE_GAME_R --> /main/template/functions/RESTORE_THE_GAME_R_fn/RESTORE_THE_GAME_R
		symbol socket misc SAVE_THE_GAME_R --> /main/template/functions/SAVE_THE_GAME_R_fn/SAVE_THE_GAME_R
		symbol socket misc VERIFY_THE_STORY_FILE_R --> /main/template/functions/VERIFY_THE_STORY_FILE_R_fn/VERIFY_THE_STORY_FILE_R
		symbol socket misc SWITCH_TRANSCRIPT_ON_R --> /main/template/functions/SWITCH_TRANSCRIPT_ON_R_fn/SWITCH_TRANSCRIPT_ON_R
		symbol socket misc SWITCH_TRANSCRIPT_OFF_R --> /main/template/functions/SWITCH_TRANSCRIPT_OFF_R_fn/SWITCH_TRANSCRIPT_OFF_R
		symbol socket misc ANNOUNCE_STORY_FILE_VERSION_R --> /main/template/functions/ANNOUNCE_STORY_FILE_VERSION_R_fn/ANNOUNCE_STORY_FILE_VERSION_R
		symbol socket misc DESCEND_TO_SPECIFIC_ACTION_R --> /main/template/functions/DESCEND_TO_SPECIFIC_ACTION_R_fn/DESCEND_TO_SPECIFIC_ACTION_R
		symbol socket misc OC__Cl --> /main/template/functions/OC__Cl_fn/OC__Cl
		symbol socket misc Unsigned__Compare --> /main/template/functions/Unsigned__Compare_fn/Unsigned__Compare
		symbol socket misc RT__ChLDW --> /main/template/functions/RT__ChLDW_fn/RT__ChLDW
		symbol socket misc LanguageNumber --> /main/template/functions/LanguageNumber_fn/LanguageNumber
		symbol socket misc LanguageTimeOfDay --> /main/template/functions/LanguageTimeOfDay_fn/LanguageTimeOfDay
		symbol socket misc LanguageDirection --> /main/template/functions/LanguageDirection_fn/LanguageDirection
		symbol socket misc LanguageToInformese --> /main/template/functions/LanguageToInformese_fn/LanguageToInformese
		symbol socket misc LanguageContraction --> /main/template/functions/LanguageContraction_fn/LanguageContraction
		symbol socket misc LanguageVerb --> /main/template/functions/LanguageVerb_fn/LanguageVerb
		symbol socket misc LanguageVerbLikesAdverb --> /main/template/functions/LanguageVerbLikesAdverb_fn/LanguageVerbLikesAdverb
		symbol socket misc LanguageVerbMayBeName --> /main/template/functions/LanguageVerbMayBeName_fn/LanguageVerbMayBeName
		symbol socket misc OffersLight --> /main/template/functions/OffersLight_fn/OffersLight
		symbol socket misc HasLightSource --> /main/template/functions/HasLightSource_fn/HasLightSource
		symbol socket misc ComponentHasLight --> /main/template/functions/ComponentHasLight_fn/ComponentHasLight
		symbol socket misc HidesLightSource --> /main/template/functions/HidesLightSource_fn/HidesLightSource
		symbol socket misc ADJUST_LIGHT_R --> /main/template/functions/ADJUST_LIGHT_R_fn/ADJUST_LIGHT_R
		symbol socket misc SilentlyConsiderLight --> /main/template/functions/SilentlyConsiderLight_fn/SilentlyConsiderLight
		symbol socket misc IsSeeThrough --> /main/template/functions/IsSeeThrough_fn/IsSeeThrough
		symbol socket misc VisibilityParent --> /main/template/functions/VisibilityParent_fn/VisibilityParent
		symbol socket misc FindVisibilityLevels --> /main/template/functions/FindVisibilityLevels_fn/FindVisibilityLevels
		symbol socket misc TouchabilityCeiling --> /main/template/functions/TouchabilityCeiling_fn/TouchabilityCeiling
		symbol socket misc ScopeCeiling --> /main/template/functions/ScopeCeiling_fn/ScopeCeiling
		symbol socket misc ObjectIsUntouchable --> /main/template/functions/ObjectIsUntouchable_fn/ObjectIsUntouchable
		symbol socket misc ACCESS_THROUGH_BARRIERS_R --> /main/template/functions/ACCESS_THROUGH_BARRIERS_R_fn/ACCESS_THROUGH_BARRIERS_R
		symbol socket misc CANT_REACH_INSIDE_CLOSED_R --> /main/template/functions/CANT_REACH_INSIDE_CLOSED_R_fn/CANT_REACH_INSIDE_CLOSED_R
		symbol socket misc CANT_REACH_OUTSIDE_CLOSED_R --> /main/template/functions/CANT_REACH_OUTSIDE_CLOSED_R_fn/CANT_REACH_OUTSIDE_CLOSED_R
		symbol socket misc CANT_REACH_INSIDE_ROOMS_R --> /main/template/functions/CANT_REACH_INSIDE_ROOMS_R_fn/CANT_REACH_INSIDE_ROOMS_R
		symbol socket misc RequisitionStack --> /main/template/functions/RequisitionStack_fn/RequisitionStack
		symbol socket misc FreeStack --> /main/template/functions/FreeStack_fn/FreeStack
		symbol socket misc WriteListOfMarkedObjects --> /main/template/functions/WriteListOfMarkedObjects_fn/WriteListOfMarkedObjects
		symbol socket misc RegardingMarkedObjects --> /main/template/functions/RegardingMarkedObjects_fn/RegardingMarkedObjects
		symbol socket misc RegardingSingleObject --> /main/template/functions/RegardingSingleObject_fn/RegardingSingleObject
		symbol socket misc RegardingNumber --> /main/template/functions/RegardingNumber_fn/RegardingNumber
		symbol socket misc PNToVP --> /main/template/functions/PNToVP_fn/PNToVP
		symbol socket misc PrintVerbAsValue --> /main/template/functions/PrintVerbAsValue_fn/PrintVerbAsValue
		symbol socket misc VerbIsMeaningful --> /main/template/functions/VerbIsMeaningful_fn/VerbIsMeaningful
		symbol socket misc VerbIsModal --> /main/template/functions/VerbIsModal_fn/VerbIsModal
		symbol socket misc SetLWI --> /main/template/functions/SetLWI_fn/SetLWI
		symbol socket misc RegardingLWI --> /main/template/functions/RegardingLWI_fn/RegardingLWI
		symbol socket misc ResponseViaActivity --> /main/template/functions/ResponseViaActivity_fn/ResponseViaActivity
		symbol socket misc MarkedListIterator --> /main/template/functions/MarkedListIterator_fn/MarkedListIterator
		symbol socket misc ConcealedFromLists --> /main/template/functions/ConcealedFromLists_fn/ConcealedFromLists
		symbol socket misc MarkedListCoalesce --> /main/template/functions/MarkedListCoalesce_fn/MarkedListCoalesce
		symbol socket misc ObjectTreeIterator --> /main/template/functions/ObjectTreeIterator_fn/ObjectTreeIterator
		symbol socket misc ObjectTreeCoalesce --> /main/template/functions/ObjectTreeCoalesce_fn/ObjectTreeCoalesce
		symbol socket misc WriteListFrom --> /main/template/functions/WriteListFrom_fn/WriteListFrom
		symbol socket misc STANDARD_CONTENTS_LISTING_R --> /main/template/functions/STANDARD_CONTENTS_LISTING_R_fn/STANDARD_CONTENTS_LISTING_R
		symbol socket misc PartitionList --> /main/template/functions/PartitionList_fn/PartitionList
		symbol socket misc ListEqual --> /main/template/functions/ListEqual_fn/ListEqual
		symbol socket misc WillRecurs --> /main/template/functions/WillRecurs_fn/WillRecurs
		symbol socket misc NumberOfGroupsInList --> /main/template/functions/NumberOfGroupsInList_fn/NumberOfGroupsInList
		symbol socket misc LT_Compare --> /main/template/functions/LT_Compare_fn/LT_Compare
		symbol socket misc WriteListR --> /main/template/functions/WriteListR_fn/WriteListR
		symbol socket misc WriteMultiClassGroup --> /main/template/functions/WriteMultiClassGroup_fn/WriteMultiClassGroup
		symbol socket misc WriteSingleClassGroup --> /main/template/functions/WriteSingleClassGroup_fn/WriteSingleClassGroup
		symbol socket misc WriteAfterEntry --> /main/template/functions/WriteAfterEntry_fn/WriteAfterEntry
		symbol socket misc LIST_WRITER_INTERNAL_R --> /main/template/functions/LIST_WRITER_INTERNAL_R_fn/LIST_WRITER_INTERNAL_R
		symbol socket misc SayPhraseName --> /main/template/functions/SayPhraseName_fn/SayPhraseName
		symbol socket misc KindAtomic --> /main/template/functions/KindAtomic_fn/KindAtomic
		symbol socket misc KindBaseArity --> /main/template/functions/KindBaseArity_fn/KindBaseArity
		symbol socket misc KindBaseTerm --> /main/template/functions/KindBaseTerm_fn/KindBaseTerm
		symbol socket misc DigitToValue --> /main/template/functions/DigitToValue_fn/DigitToValue
		symbol socket misc GenerateRandomNumber --> /main/template/functions/GenerateRandomNumber_fn/GenerateRandomNumber
		symbol socket misc GroupChildren --> /main/template/functions/GroupChildren_fn/GroupChildren
		symbol socket misc PrintSpaces --> /main/template/functions/PrintSpaces_fn/PrintSpaces
		symbol socket misc RunRoutines --> /main/template/functions/RunRoutines_fn/RunRoutines
		symbol socket misc SwapWorkflags --> /main/template/functions/SwapWorkflags_fn/SwapWorkflags
		symbol socket misc IntegerDivide --> /main/template/functions/IntegerDivide_fn/IntegerDivide
		symbol socket misc IntegerRemainder --> /main/template/functions/IntegerRemainder_fn/IntegerRemainder
		symbol socket misc UnsignedCompare --> /main/template/functions/UnsignedCompare_fn/UnsignedCompare
		symbol socket misc SignedCompare --> /main/template/functions/SignedCompare_fn/SignedCompare
		symbol socket misc ZRegion --> /main/template/functions/ZRegion_fn/ZRegion
		symbol socket misc Memcpy --> /main/template/functions/Memcpy_fn/Memcpy
		symbol socket misc Arrcpy --> /main/template/functions/Arrcpy_fn/Arrcpy
		symbol socket misc WordCount --> /main/template/functions/WordCount_fn/WordCount
		symbol socket misc WordAddress --> /main/template/functions/WordAddress_fn/WordAddress
		symbol socket misc WordLength --> /main/template/functions/WordLength_fn/WordLength
		symbol socket misc WordFrom --> /main/template/functions/WordFrom_fn/WordFrom
		symbol socket misc NextWord --> /main/template/functions/NextWord_fn/NextWord
		symbol socket misc NextWordStopped --> /main/template/functions/NextWordStopped_fn/NextWordStopped
		symbol socket misc PrintSnippet --> /main/template/functions/PrintSnippet_fn/PrintSnippet
		symbol socket misc SpliceSnippet --> /main/template/functions/SpliceSnippet_fn/SpliceSnippet
		symbol socket misc SpliceSnippet__TextPrinter --> /main/template/functions/SpliceSnippet__TextPrinter_fn/SpliceSnippet__TextPrinter
		symbol socket misc SnippetIncludes --> /main/template/functions/SnippetIncludes_fn/SnippetIncludes
		symbol socket misc SnippetMatches --> /main/template/functions/SnippetMatches_fn/SnippetMatches
		symbol socket misc UnpackGrammarLine --> /main/template/functions/UnpackGrammarLine_fn/UnpackGrammarLine
		symbol socket misc AnalyseToken --> /main/template/functions/AnalyseToken_fn/AnalyseToken
		symbol socket misc DictionaryWordToVerbNum --> /main/template/functions/DictionaryWordToVerbNum_fn/DictionaryWordToVerbNum
		symbol socket misc KeyboardPrimitive --> /main/template/functions/KeyboardPrimitive_fn/KeyboardPrimitive
		symbol socket misc Keyboard --> /main/template/functions/Keyboard_fn/Keyboard
		symbol socket misc Parser__parse --> /main/template/functions/Parser__parse_fn/Parser__parse
		symbol socket misc PARSER_ERROR_INTERNAL_R --> /main/template/functions/PARSER_ERROR_INTERNAL_R_fn/PARSER_ERROR_INTERNAL_R
		symbol socket misc PARSER_N_ERROR_INTERNAL_R --> /main/template/functions/PARSER_N_ERROR_INTERNAL_R_fn/PARSER_N_ERROR_INTERNAL_R
		symbol socket misc PARSER_COMMAND_INTERNAL_R --> /main/template/functions/PARSER_COMMAND_INTERNAL_R_fn/PARSER_COMMAND_INTERNAL_R
		symbol socket misc ParseTokenStopped --> /main/template/functions/ParseTokenStopped_fn/ParseTokenStopped
		symbol socket misc ParseToken --> /main/template/functions/ParseToken_fn/ParseToken
		symbol socket misc ParseToken__ --> /main/template/functions/ParseToken___fn/ParseToken__
		symbol socket misc ResetDescriptors --> /main/template/functions/ResetDescriptors_fn/ResetDescriptors
		symbol socket misc ArticleDescriptors --> /main/template/functions/ArticleDescriptors_fn/ArticleDescriptors
		symbol socket misc Descriptors --> /main/template/functions/Descriptors_fn/Descriptors
		symbol socket misc SafeSkipDescriptors --> /main/template/functions/SafeSkipDescriptors_fn/SafeSkipDescriptors
		symbol socket misc PrepositionChain --> /main/template/functions/PrepositionChain_fn/PrepositionChain
		symbol socket misc CreatureTest --> /main/template/functions/CreatureTest_fn/CreatureTest
		symbol socket misc NounDomain --> /main/template/functions/NounDomain_fn/NounDomain
		symbol socket misc PARSER_CLARIF_INTERNAL_R --> /main/template/functions/PARSER_CLARIF_INTERNAL_R_fn/PARSER_CLARIF_INTERNAL_R
		symbol socket misc Adjudicate --> /main/template/functions/Adjudicate_fn/Adjudicate
		symbol socket misc ReviseMulti --> /main/template/functions/ReviseMulti_fn/ReviseMulti
		symbol socket misc MakeMatch --> /main/template/functions/MakeMatch_fn/MakeMatch
		symbol socket misc ConsultNounFilterToken --> /main/template/functions/ConsultNounFilterToken_fn/ConsultNounFilterToken
		symbol socket misc ScoreMatchL --> /main/template/functions/ScoreMatchL_fn/ScoreMatchL
		symbol socket misc BestGuess --> /main/template/functions/BestGuess_fn/BestGuess
		symbol socket misc SingleBestGuess --> /main/template/functions/SingleBestGuess_fn/SingleBestGuess
		symbol socket misc Identical --> /main/template/functions/Identical_fn/Identical
		symbol socket misc PrintInferredCommand --> /main/template/functions/PrintInferredCommand_fn/PrintInferredCommand
		symbol socket misc PrintCommand --> /main/template/functions/PrintCommand_fn/PrintCommand
		symbol socket misc CantSee --> /main/template/functions/CantSee_fn/CantSee
		symbol socket misc MultiAdd --> /main/template/functions/MultiAdd_fn/MultiAdd
		symbol socket misc MultiSub --> /main/template/functions/MultiSub_fn/MultiSub
		symbol socket misc MultiFilter --> /main/template/functions/MultiFilter_fn/MultiFilter
		symbol socket misc PlaceInScope --> /main/template/functions/PlaceInScope_fn/PlaceInScope
		symbol socket misc AddToScope --> /main/template/functions/AddToScope_fn/AddToScope
		symbol socket misc TestScope --> /main/template/functions/TestScope_fn/TestScope
		symbol socket misc LoopOverScope --> /main/template/functions/LoopOverScope_fn/LoopOverScope
		symbol socket misc SearchScope --> /main/template/functions/SearchScope_fn/SearchScope
		symbol socket misc ScopeWithin --> /main/template/functions/ScopeWithin_fn/ScopeWithin
		symbol socket misc DoScopeActionAndRecurse --> /main/template/functions/DoScopeActionAndRecurse_fn/DoScopeActionAndRecurse
		symbol socket misc DoScopeAction --> /main/template/functions/DoScopeAction_fn/DoScopeAction
		symbol socket misc MatchTextAgainstObject --> /main/template/functions/MatchTextAgainstObject_fn/MatchTextAgainstObject
		symbol socket misc TryGivenObject --> /main/template/functions/TryGivenObject_fn/TryGivenObject
		symbol socket misc Refers --> /main/template/functions/Refers_fn/Refers
		symbol socket misc WordInProperty --> /main/template/functions/WordInProperty_fn/WordInProperty
		symbol socket misc NounWord --> /main/template/functions/NounWord_fn/NounWord
		symbol socket misc TryNumber --> /main/template/functions/TryNumber_fn/TryNumber
		symbol socket misc GetGender --> /main/template/functions/GetGender_fn/GetGender
		symbol socket misc GetGNAOfObject --> /main/template/functions/GetGNAOfObject_fn/GetGNAOfObject
		symbol socket misc DetectPluralWord --> /main/template/functions/DetectPluralWord_fn/DetectPluralWord
		symbol socket misc SetPronoun --> /main/template/functions/SetPronoun_fn/SetPronoun
		symbol socket misc PronounValue --> /main/template/functions/PronounValue_fn/PronounValue
		symbol socket misc ResetVagueWords --> /main/template/functions/ResetVagueWords_fn/ResetVagueWords
		symbol socket misc PronounNotice --> /main/template/functions/PronounNotice_fn/PronounNotice
		symbol socket misc PronounNoticeHeldObjects --> /main/template/functions/PronounNoticeHeldObjects_fn/PronounNoticeHeldObjects
		symbol socket misc YesOrNo --> /main/template/functions/YesOrNo_fn/YesOrNo
		symbol socket misc YES_OR_NO_QUESTION_INTERNAL_R --> /main/template/functions/YES_OR_NO_QUESTION_INTERNAL_R_fn/YES_OR_NO_QUESTION_INTERNAL_R
		symbol socket misc NumberWord --> /main/template/functions/NumberWord_fn/NumberWord
		symbol socket misc COBJ__Copy --> /main/template/functions/COBJ__Copy_fn/COBJ__Copy
		symbol socket misc COBJ__SwapMatches --> /main/template/functions/COBJ__SwapMatches_fn/COBJ__SwapMatches
		symbol socket misc ChooseObjects --> /main/template/functions/ChooseObjects_fn/ChooseObjects
		symbol socket misc ScoreDabCombo --> /main/template/functions/ScoreDabCombo_fn/ScoreDabCombo
		symbol socket misc DefaultTopic --> /main/template/functions/DefaultTopic_fn/DefaultTopic
		symbol socket misc ParserError --> /main/template/functions/ParserError_fn/ParserError
		symbol socket misc Main --> /main/template/functions/Main_fn/Main
		symbol socket misc VIRTUAL_MACHINE_STARTUP_R --> /main/template/functions/VIRTUAL_MACHINE_STARTUP_R_fn/VIRTUAL_MACHINE_STARTUP_R
		symbol socket misc INITIALISE_MEMORY_R --> /main/template/functions/INITIALISE_MEMORY_R_fn/INITIALISE_MEMORY_R
		symbol socket misc SEED_RANDOM_NUMBER_GENERATOR_R --> /main/template/functions/SEED_RANDOM_NUMBER_GENERATOR_R_fn/SEED_RANDOM_NUMBER_GENERATOR_R
		symbol socket misc POSITION_PLAYER_IN_MODEL_R --> /main/template/functions/POSITION_PLAYER_IN_MODEL_R_fn/POSITION_PLAYER_IN_MODEL_R
		symbol socket misc PARSE_COMMAND_R --> /main/template/functions/PARSE_COMMAND_R_fn/PARSE_COMMAND_R
		symbol socket misc TreatParserResults --> /main/template/functions/TreatParserResults_fn/TreatParserResults
		symbol socket misc GENERATE_ACTION_R --> /main/template/functions/GENERATE_ACTION_R_fn/GENERATE_ACTION_R
		symbol socket misc GenerateMultipleActions --> /main/template/functions/GenerateMultipleActions_fn/GenerateMultipleActions
		symbol socket misc TIMED_EVENTS_R --> /main/template/functions/TIMED_EVENTS_R_fn/TIMED_EVENTS_R
		symbol socket misc SetTimedEvent --> /main/template/functions/SetTimedEvent_fn/SetTimedEvent
		symbol socket misc SetTime --> /main/template/functions/SetTime_fn/SetTime
		symbol socket misc ADVANCE_TIME_R --> /main/template/functions/ADVANCE_TIME_R_fn/ADVANCE_TIME_R
		symbol socket misc NOTE_OBJECT_ACQUISITIONS_R --> /main/template/functions/NOTE_OBJECT_ACQUISITIONS_R_fn/NOTE_OBJECT_ACQUISITIONS_R
		symbol socket misc RESURRECT_PLAYER_IF_ASKED_R --> /main/template/functions/RESURRECT_PLAYER_IF_ASKED_R_fn/RESURRECT_PLAYER_IF_ASKED_R
		symbol socket misc ASK_FINAL_QUESTION_R --> /main/template/functions/ASK_FINAL_QUESTION_R_fn/ASK_FINAL_QUESTION_R
		symbol socket misc READ_FINAL_ANSWER_R --> /main/template/functions/READ_FINAL_ANSWER_R_fn/READ_FINAL_ANSWER_R
		symbol socket misc IMMEDIATELY_RESTART_VM_R --> /main/template/functions/IMMEDIATELY_RESTART_VM_R_fn/IMMEDIATELY_RESTART_VM_R
		symbol socket misc IMMEDIATELY_RESTORE_SAVED_R --> /main/template/functions/IMMEDIATELY_RESTORE_SAVED_R_fn/IMMEDIATELY_RESTORE_SAVED_R
		symbol socket misc IMMEDIATELY_QUIT_R --> /main/template/functions/IMMEDIATELY_QUIT_R_fn/IMMEDIATELY_QUIT_R
		symbol socket misc IMMEDIATELY_UNDO_R --> /main/template/functions/IMMEDIATELY_UNDO_R_fn/IMMEDIATELY_UNDO_R
		symbol socket misc PRINT_OBITUARY_HEADLINE_R --> /main/template/functions/PRINT_OBITUARY_HEADLINE_R_fn/PRINT_OBITUARY_HEADLINE_R
		symbol socket misc PRINT_FINAL_SCORE_R --> /main/template/functions/PRINT_FINAL_SCORE_R_fn/PRINT_FINAL_SCORE_R
		symbol socket misc DISPLAY_FINAL_STATUS_LINE_R --> /main/template/functions/DISPLAY_FINAL_STATUS_LINE_R_fn/DISPLAY_FINAL_STATUS_LINE_R
		symbol socket misc FindAction --> /main/template/functions/FindAction_fn/FindAction
		symbol socket misc ActionNumberIndexed --> /main/template/functions/ActionNumberIndexed_fn/ActionNumberIndexed
		symbol socket misc NeedToCarryNoun --> /main/template/functions/NeedToCarryNoun_fn/NeedToCarryNoun
		symbol socket misc NeedToCarrySecondNoun --> /main/template/functions/NeedToCarrySecondNoun_fn/NeedToCarrySecondNoun
		symbol socket misc NeedToTouchNoun --> /main/template/functions/NeedToTouchNoun_fn/NeedToTouchNoun
		symbol socket misc NeedToTouchSecondNoun --> /main/template/functions/NeedToTouchSecondNoun_fn/NeedToTouchSecondNoun
		symbol socket misc NeedLightForAction --> /main/template/functions/NeedLightForAction_fn/NeedLightForAction
		symbol socket misc TestActionMask --> /main/template/functions/TestActionMask_fn/TestActionMask
		symbol socket misc TryAction --> /main/template/functions/TryAction_fn/TryAction
		symbol socket misc R_Process --> /main/template/functions/R_Process_fn/R_Process
		symbol socket misc GVS_Convert --> /main/template/functions/GVS_Convert_fn/GVS_Convert
		symbol socket misc ConvertToRequest --> /main/template/functions/ConvertToRequest_fn/ConvertToRequest
		symbol socket misc ConvertToGoingWithPush --> /main/template/functions/ConvertToGoingWithPush_fn/ConvertToGoingWithPush
		symbol socket misc ImplicitTake --> /main/template/functions/ImplicitTake_fn/ImplicitTake
		symbol socket misc LookAfterGoing --> /main/template/functions/LookAfterGoing_fn/LookAfterGoing
		symbol socket misc AbbreviatedRoomDescription --> /main/template/functions/AbbreviatedRoomDescription_fn/AbbreviatedRoomDescription
		symbol socket misc BeginAction --> /main/template/functions/BeginAction_fn/BeginAction
		symbol socket misc ActionPrimitive --> /main/template/functions/ActionPrimitive_fn/ActionPrimitive
		symbol socket misc ACTION_PROCESSING_INTERNAL_R --> /main/template/functions/ACTION_PROCESSING_INTERNAL_R_fn/ACTION_PROCESSING_INTERNAL_R
		symbol socket misc ActionVariablesNotTypeSafe --> /main/template/functions/ActionVariablesNotTypeSafe_fn/ActionVariablesNotTypeSafe
		symbol socket misc BASIC_VISIBILITY_R --> /main/template/functions/BASIC_VISIBILITY_R_fn/BASIC_VISIBILITY_R
		symbol socket misc BASIC_ACCESSIBILITY_R --> /main/template/functions/BASIC_ACCESSIBILITY_R_fn/BASIC_ACCESSIBILITY_R
		symbol socket misc CARRYING_REQUIREMENTS_R --> /main/template/functions/CARRYING_REQUIREMENTS_R_fn/CARRYING_REQUIREMENTS_R
		symbol socket misc STANDARD_IMPLICIT_TAKING_R --> /main/template/functions/STANDARD_IMPLICIT_TAKING_R_fn/STANDARD_IMPLICIT_TAKING_R
		symbol socket misc REQUESTED_ACTIONS_REQUIRE_R --> /main/template/functions/REQUESTED_ACTIONS_REQUIRE_R_fn/REQUESTED_ACTIONS_REQUIRE_R
		symbol socket misc CARRY_OUT_REQUESTED_ACTIONS_R --> /main/template/functions/CARRY_OUT_REQUESTED_ACTIONS_R_fn/CARRY_OUT_REQUESTED_ACTIONS_R
		symbol socket misc GenericVerbSub --> /main/template/functions/GenericVerbSub_fn/GenericVerbSub
		symbol socket misc WORK_OUT_DETAILS_OF_SPECIFIC_R --> /main/template/functions/WORK_OUT_DETAILS_OF_SPECIFIC_R_fn/WORK_OUT_DETAILS_OF_SPECIFIC_R
		symbol socket misc TestActionBitmap --> /main/template/functions/TestActionBitmap_fn/TestActionBitmap
		symbol socket misc UpdateActionBitmap --> /main/template/functions/UpdateActionBitmap_fn/UpdateActionBitmap
		symbol socket misc SetActionBitmap --> /main/template/functions/SetActionBitmap_fn/SetActionBitmap
		symbol socket misc SayActionName --> /main/template/functions/SayActionName_fn/SayActionName
		symbol socket misc DA_Name --> /main/template/functions/DA_Name_fn/DA_Name
		symbol socket misc DA_Topic --> /main/template/functions/DA_Topic_fn/DA_Topic
		symbol socket misc DA_Number --> /main/template/functions/DA_Number_fn/DA_Number
		symbol socket misc DA_TruthState --> /main/template/functions/DA_TruthState_fn/DA_TruthState
		symbol socket misc DB_Action --> /main/template/functions/DB_Action_fn/DB_Action
		symbol socket misc FixInhibitFlag --> /main/template/functions/FixInhibitFlag_fn/FixInhibitFlag
		symbol socket misc TestActivity --> /main/template/functions/TestActivity_fn/TestActivity
		symbol socket misc ActivityEmpty --> /main/template/functions/ActivityEmpty_fn/ActivityEmpty
		symbol socket misc RulebookEmpty --> /main/template/functions/RulebookEmpty_fn/RulebookEmpty
		symbol socket misc ProcessActivityRulebook --> /main/template/functions/ProcessActivityRulebook_fn/ProcessActivityRulebook
		symbol socket misc CarryOutActivity --> /main/template/functions/CarryOutActivity_fn/CarryOutActivity
		symbol socket misc BeginActivity --> /main/template/functions/BeginActivity_fn/BeginActivity
		symbol socket misc ForActivity --> /main/template/functions/ForActivity_fn/ForActivity
		symbol socket misc EndActivity --> /main/template/functions/EndActivity_fn/EndActivity
		symbol socket misc AbandonActivity --> /main/template/functions/AbandonActivity_fn/AbandonActivity
		symbol socket misc DisplayFigure --> /main/template/functions/DisplayFigure_fn/DisplayFigure
		symbol socket misc PlaySound --> /main/template/functions/PlaySound_fn/PlaySound
		symbol socket misc FileIO_GetC --> /main/template/functions/FileIO_GetC_fn/FileIO_GetC
		symbol socket misc Mstack_Create_Frame --> /main/template/functions/Mstack_Create_Frame_fn/Mstack_Create_Frame
		symbol socket misc Mstack_Destroy_Frame --> /main/template/functions/Mstack_Destroy_Frame_fn/Mstack_Destroy_Frame
		symbol socket misc Mstack_Seek_Frame --> /main/template/functions/Mstack_Seek_Frame_fn/Mstack_Seek_Frame
		symbol socket misc Mstack_Backtrace --> /main/template/functions/Mstack_Backtrace_fn/Mstack_Backtrace
		symbol socket misc MstVO --> /main/template/functions/MstVO_fn/MstVO
		symbol socket misc MstVON --> /main/template/functions/MstVON_fn/MstVON
		symbol socket misc MStack_CreateRBVars --> /main/template/functions/MStack_CreateRBVars_fn/MStack_CreateRBVars
		symbol socket misc MStack_DestroyRBVars --> /main/template/functions/MStack_DestroyRBVars_fn/MStack_DestroyRBVars
		symbol socket misc MStack_CreateAVVars --> /main/template/functions/MStack_CreateAVVars_fn/MStack_CreateAVVars
		symbol socket misc MStack_DestroyAVVars --> /main/template/functions/MStack_DestroyAVVars_fn/MStack_DestroyAVVars
		symbol socket misc Perform_Undo --> /main/template/functions/Perform_Undo_fn/Perform_Undo
		symbol socket misc ANNOUNCE_SCORE_R --> /main/template/functions/ANNOUNCE_SCORE_R_fn/ANNOUNCE_SCORE_R
		symbol socket misc SWITCH_SCORE_NOTIFY_ON_R --> /main/template/functions/SWITCH_SCORE_NOTIFY_ON_R_fn/SWITCH_SCORE_NOTIFY_ON_R
		symbol socket misc REP_SWITCH_NOTIFY_ON_R --> /main/template/functions/REP_SWITCH_NOTIFY_ON_R_fn/REP_SWITCH_NOTIFY_ON_R
		symbol socket misc SWITCH_SCORE_NOTIFY_OFF_R --> /main/template/functions/SWITCH_SCORE_NOTIFY_OFF_R_fn/SWITCH_SCORE_NOTIFY_OFF_R
		symbol socket misc REP_SWITCH_NOTIFY_OFF_R --> /main/template/functions/REP_SWITCH_NOTIFY_OFF_R_fn/REP_SWITCH_NOTIFY_OFF_R
		symbol socket misc PREFER_SOMETIMES_ABBREVIATED_R --> /main/template/functions/PREFER_SOMETIMES_ABBREVIATED_R_fn/PREFER_SOMETIMES_ABBREVIATED_R
		symbol socket misc REP_PREFER_SOMETIMES_ABBR_R --> /main/template/functions/REP_PREFER_SOMETIMES_ABBR_R_fn/REP_PREFER_SOMETIMES_ABBR_R
		symbol socket misc PREFER_UNABBREVIATED_R --> /main/template/functions/PREFER_UNABBREVIATED_R_fn/PREFER_UNABBREVIATED_R
		symbol socket misc REP_PREFER_UNABBREVIATED_R --> /main/template/functions/REP_PREFER_UNABBREVIATED_R_fn/REP_PREFER_UNABBREVIATED_R
		symbol socket misc PREFER_ABBREVIATED_R --> /main/template/functions/PREFER_ABBREVIATED_R_fn/PREFER_ABBREVIATED_R
		symbol socket misc REP_PREFER_ABBREVIATED_R --> /main/template/functions/REP_PREFER_ABBREVIATED_R_fn/REP_PREFER_ABBREVIATED_R
		symbol socket misc ANNOUNCE_PRONOUN_MEANINGS_R --> /main/template/functions/ANNOUNCE_PRONOUN_MEANINGS_R_fn/ANNOUNCE_PRONOUN_MEANINGS_R
		symbol socket misc ClearParagraphing --> /main/template/functions/ClearParagraphing_fn/ClearParagraphing
		symbol socket misc DivideParagraphPoint --> /main/template/functions/DivideParagraphPoint_fn/DivideParagraphPoint
		symbol socket misc AdjustParagraphPoint --> /main/template/functions/AdjustParagraphPoint_fn/AdjustParagraphPoint
		symbol socket misc ParaContent --> /main/template/functions/ParaContent_fn/ParaContent
		symbol socket misc GoingLookBreak --> /main/template/functions/GoingLookBreak_fn/GoingLookBreak
		symbol socket misc CommandClarificationBreak --> /main/template/functions/CommandClarificationBreak_fn/CommandClarificationBreak
		symbol socket misc RunParagraphOn --> /main/template/functions/RunParagraphOn_fn/RunParagraphOn
		symbol socket misc SpecialLookSpacingBreak --> /main/template/functions/SpecialLookSpacingBreak_fn/SpecialLookSpacingBreak
		symbol socket misc EnsureBreakBeforePrompt --> /main/template/functions/EnsureBreakBeforePrompt_fn/EnsureBreakBeforePrompt
		symbol socket misc PrintSingleParagraph --> /main/template/functions/PrintSingleParagraph_fn/PrintSingleParagraph
		symbol socket misc STextSubstitution --> /main/template/functions/STextSubstitution_fn/STextSubstitution
		symbol socket misc PrintPrompt --> /main/template/functions/PrintPrompt_fn/PrintPrompt
		symbol socket misc DisplayBoxedQuotation --> /main/template/functions/DisplayBoxedQuotation_fn/DisplayBoxedQuotation
		symbol socket misc ClearBoxedText --> /main/template/functions/ClearBoxedText_fn/ClearBoxedText
		symbol socket misc NotifyTheScore --> /main/template/functions/NotifyTheScore_fn/NotifyTheScore
		symbol socket misc DrawStatusLine --> /main/template/functions/DrawStatusLine_fn/DrawStatusLine
		symbol socket misc SL_Score_Moves --> /main/template/functions/SL_Score_Moves_fn/SL_Score_Moves
		symbol socket misc SL_Location --> /main/template/functions/SL_Location_fn/SL_Location
		symbol socket misc DARKNESS_NAME_INTERNAL_R --> /main/template/functions/DARKNESS_NAME_INTERNAL_R_fn/DARKNESS_NAME_INTERNAL_R
		symbol socket misc Banner --> /main/template/functions/Banner_fn/Banner
		symbol socket misc DecimalNumber --> /main/template/functions/DecimalNumber_fn/DecimalNumber
		symbol socket misc EnglishNumber --> /main/template/functions/EnglishNumber_fn/EnglishNumber
		symbol socket misc PrintI6Text --> /main/template/functions/PrintI6Text_fn/PrintI6Text
		symbol socket misc I7_String --> /main/template/functions/I7_String_fn/I7_String
		symbol socket misc PrintOrRun --> /main/template/functions/PrintOrRun_fn/PrintOrRun
		symbol socket misc CPrintOrRun --> /main/template/functions/CPrintOrRun_fn/CPrintOrRun
		symbol socket misc Cap --> /main/template/functions/Cap_fn/Cap
		symbol socket misc PSN__ --> /main/template/functions/PSN___fn/PSN__
		symbol socket misc STANDARD_NAME_PRINTING_R --> /main/template/functions/STANDARD_NAME_PRINTING_R_fn/STANDARD_NAME_PRINTING_R
		symbol socket misc STANDARD_RESPONSE_ISSUING_R --> /main/template/functions/STANDARD_RESPONSE_ISSUING_R_fn/STANDARD_RESPONSE_ISSUING_R
		symbol socket misc PRINT_PROTAGONIST_INTERNAL_R --> /main/template/functions/PRINT_PROTAGONIST_INTERNAL_R_fn/PRINT_PROTAGONIST_INTERNAL_R
		symbol socket misc PrefaceByArticle --> /main/template/functions/PrefaceByArticle_fn/PrefaceByArticle
		symbol socket misc IndefArt --> /main/template/functions/IndefArt_fn/IndefArt
		symbol socket misc CIndefArt --> /main/template/functions/CIndefArt_fn/CIndefArt
		symbol socket misc DefArt --> /main/template/functions/DefArt_fn/DefArt
		symbol socket misc CDefArt --> /main/template/functions/CDefArt_fn/CDefArt
		symbol socket misc PrintShortName --> /main/template/functions/PrintShortName_fn/PrintShortName
		symbol socket misc I7_SOO_PAR --> /main/template/functions/I7_SOO_PAR_fn/I7_SOO_PAR
		symbol socket misc I7_SOO_RAN --> /main/template/functions/I7_SOO_RAN_fn/I7_SOO_RAN
		symbol socket misc I7_SOO_STI --> /main/template/functions/I7_SOO_STI_fn/I7_SOO_STI
		symbol socket misc I7_SOO_CYC --> /main/template/functions/I7_SOO_CYC_fn/I7_SOO_CYC
		symbol socket misc I7_SOO_STOP --> /main/template/functions/I7_SOO_STOP_fn/I7_SOO_STOP
		symbol socket misc I7_SOO_TAP --> /main/template/functions/I7_SOO_TAP_fn/I7_SOO_TAP
		symbol socket misc I7_SOO_TRAN --> /main/template/functions/I7_SOO_TRAN_fn/I7_SOO_TRAN
		symbol socket misc I7_SOO_TPAR --> /main/template/functions/I7_SOO_TPAR_fn/I7_SOO_TPAR
		symbol socket misc I7_SOO_SHU --> /main/template/functions/I7_SOO_SHU_fn/I7_SOO_SHU
		symbol socket misc RELATION_TY_EquivalenceAdjective --> /main/template/functions/RELATION_TY_EquivalenceAdjective_fn/RELATION_TY_EquivalenceAdjective
		symbol socket misc RELATION_TY_SymmetricAdjective --> /main/template/functions/RELATION_TY_SymmetricAdjective_fn/RELATION_TY_SymmetricAdjective
		symbol socket misc RELATION_TY_OToOAdjective --> /main/template/functions/RELATION_TY_OToOAdjective_fn/RELATION_TY_OToOAdjective
		symbol socket misc RELATION_TY_OToVAdjective --> /main/template/functions/RELATION_TY_OToVAdjective_fn/RELATION_TY_OToVAdjective
		symbol socket misc RELATION_TY_VToOAdjective --> /main/template/functions/RELATION_TY_VToOAdjective_fn/RELATION_TY_VToOAdjective
		symbol socket misc RELATION_TY_VToVAdjective --> /main/template/functions/RELATION_TY_VToVAdjective_fn/RELATION_TY_VToVAdjective
		symbol socket misc Relation_Now1to1 --> /main/template/functions/Relation_Now1to1_fn/Relation_Now1to1
		symbol socket misc Relation_NowN1toV --> /main/template/functions/Relation_NowN1toV_fn/Relation_NowN1toV
		symbol socket misc Relation_Now1to1V --> /main/template/functions/Relation_Now1to1V_fn/Relation_Now1to1V
		symbol socket misc Relation_NowN1toVV --> /main/template/functions/Relation_NowN1toVV_fn/Relation_NowN1toVV
		symbol socket misc Relation_NowS1to1 --> /main/template/functions/Relation_NowS1to1_fn/Relation_NowS1to1
		symbol socket misc Relation_NowSN1to1 --> /main/template/functions/Relation_NowSN1to1_fn/Relation_NowSN1to1
		symbol socket misc Relation_NowS1to1V --> /main/template/functions/Relation_NowS1to1V_fn/Relation_NowS1to1V
		symbol socket misc Relation_NowSN1to1V --> /main/template/functions/Relation_NowSN1to1V_fn/Relation_NowSN1to1V
		symbol socket misc Relation_NowVtoV --> /main/template/functions/Relation_NowVtoV_fn/Relation_NowVtoV
		symbol socket misc Relation_NowNVtoV --> /main/template/functions/Relation_NowNVtoV_fn/Relation_NowNVtoV
		symbol socket misc Relation_TestVtoV --> /main/template/functions/Relation_TestVtoV_fn/Relation_TestVtoV
		symbol socket misc Relation_NowEquiv --> /main/template/functions/Relation_NowEquiv_fn/Relation_NowEquiv
		symbol socket misc Relation_NowNEquiv --> /main/template/functions/Relation_NowNEquiv_fn/Relation_NowNEquiv
		symbol socket misc Relation_NowEquivV --> /main/template/functions/Relation_NowEquivV_fn/Relation_NowEquivV
		symbol socket misc Relation_NowNEquivV --> /main/template/functions/Relation_NowNEquivV_fn/Relation_NowNEquivV
		symbol socket misc Relation_ShowVtoV --> /main/template/functions/Relation_ShowVtoV_fn/Relation_ShowVtoV
		symbol socket misc Relation_ShowOtoO --> /main/template/functions/Relation_ShowOtoO_fn/Relation_ShowOtoO
		symbol socket misc Relation_RShowOtoO --> /main/template/functions/Relation_RShowOtoO_fn/Relation_RShowOtoO
		symbol socket misc RSE_Flip --> /main/template/functions/RSE_Flip_fn/RSE_Flip
		symbol socket misc RSE_Set --> /main/template/functions/RSE_Set_fn/RSE_Set
		symbol socket misc Relation_ShowEquiv --> /main/template/functions/Relation_ShowEquiv_fn/Relation_ShowEquiv
		symbol socket misc Relation_EmptyOtoO --> /main/template/functions/Relation_EmptyOtoO_fn/Relation_EmptyOtoO
		symbol socket misc Relation_EmptyEquiv --> /main/template/functions/Relation_EmptyEquiv_fn/Relation_EmptyEquiv
		symbol socket misc Relation_EmptyVtoV --> /main/template/functions/Relation_EmptyVtoV_fn/Relation_EmptyVtoV
		symbol socket misc SignalMapChange --> /main/template/functions/SignalMapChange_fn/SignalMapChange
		symbol socket misc MapRouteTo --> /main/template/functions/MapRouteTo_fn/MapRouteTo
		symbol socket misc SlowRouteTo --> /main/template/functions/SlowRouteTo_fn/SlowRouteTo
		symbol socket misc SlowCountRouteTo --> /main/template/functions/SlowCountRouteTo_fn/SlowCountRouteTo
		symbol socket misc RelationRouteTo --> /main/template/functions/RelationRouteTo_fn/RelationRouteTo
		symbol socket misc RelFollowVector --> /main/template/functions/RelFollowVector_fn/RelFollowVector
		symbol socket misc OtoVRelRouteTo --> /main/template/functions/OtoVRelRouteTo_fn/OtoVRelRouteTo
		symbol socket misc VtoORelRouteTo --> /main/template/functions/VtoORelRouteTo_fn/VtoORelRouteTo
		symbol socket misc VtoVRelRouteTo --> /main/template/functions/VtoVRelRouteTo_fn/VtoVRelRouteTo
		symbol socket misc FastVtoVRelRouteTo --> /main/template/functions/FastVtoVRelRouteTo_fn/FastVtoVRelRouteTo
		symbol socket misc RunTimeProblem --> /main/template/functions/RunTimeProblem_fn/RunTimeProblem
		symbol socket misc ClearRTP --> /main/template/functions/ClearRTP_fn/ClearRTP
		symbol socket misc SuspendRTP --> /main/template/functions/SuspendRTP_fn/SuspendRTP
		symbol socket misc ResumeRTP --> /main/template/functions/ResumeRTP_fn/ResumeRTP
		symbol socket misc RunTimeProblemShow --> /main/template/functions/RunTimeProblemShow_fn/RunTimeProblemShow
		symbol socket misc RunTimeError --> /main/template/functions/RunTimeError_fn/RunTimeError
		symbol socket misc ArgumentTypeFailed --> /main/template/functions/ArgumentTypeFailed_fn/ArgumentTypeFailed
		symbol socket misc CheckKindReturned --> /main/template/functions/CheckKindReturned_fn/CheckKindReturned
		symbol socket misc WhetherProvides --> /main/template/functions/WhetherProvides_fn/WhetherProvides
		symbol socket misc PrintPropertyName --> /main/template/functions/PrintPropertyName_fn/PrintPropertyName
		symbol socket misc ScanPropertyMetadata --> /main/template/functions/ScanPropertyMetadata_fn/ScanPropertyMetadata
		symbol socket misc GetEitherOrProperty --> /main/template/functions/GetEitherOrProperty_fn/GetEitherOrProperty
		symbol socket misc SetEitherOrProperty --> /main/template/functions/SetEitherOrProperty_fn/SetEitherOrProperty
		symbol socket misc GProperty --> /main/template/functions/GProperty_fn/GProperty
		symbol socket misc WriteGProperty --> /main/template/functions/WriteGProperty_fn/WriteGProperty
		symbol socket misc PROPERTY_TY_Say --> /main/template/functions/PROPERTY_TY_Say_fn/PROPERTY_TY_Say
		symbol socket misc RecordRuleOutcome --> /main/template/functions/RecordRuleOutcome_fn/RecordRuleOutcome
		symbol socket misc FollowRulebook --> /main/template/functions/FollowRulebook_fn/FollowRulebook
		symbol socket misc RulebookParBreak --> /main/template/functions/RulebookParBreak_fn/RulebookParBreak
		symbol socket misc ActRulebookSucceeds --> /main/template/functions/ActRulebookSucceeds_fn/ActRulebookSucceeds
		symbol socket misc ActRulebookFails --> /main/template/functions/ActRulebookFails_fn/ActRulebookFails
		symbol socket misc RulebookSucceeds --> /main/template/functions/RulebookSucceeds_fn/RulebookSucceeds
		symbol socket misc RulebookFails --> /main/template/functions/RulebookFails_fn/RulebookFails
		symbol socket misc RuleHasNoOutcome --> /main/template/functions/RuleHasNoOutcome_fn/RuleHasNoOutcome
		symbol socket misc SetRulebookOutcome --> /main/template/functions/SetRulebookOutcome_fn/SetRulebookOutcome
		symbol socket misc RulebookOutcome --> /main/template/functions/RulebookOutcome_fn/RulebookOutcome
		symbol socket misc RulebookFailed --> /main/template/functions/RulebookFailed_fn/RulebookFailed
		symbol socket misc RulebookSucceeded --> /main/template/functions/RulebookSucceeded_fn/RulebookSucceeded
		symbol socket misc ResultOfRule --> /main/template/functions/ResultOfRule_fn/ResultOfRule
		symbol socket misc RULEBOOK_TY_to_RULE_TY --> /main/template/functions/RULEBOOK_TY_to_RULE_TY_fn/RULEBOOK_TY_to_RULE_TY
		symbol socket misc DebugRulebooks --> /main/template/functions/DebugRulebooks_fn/DebugRulebooks
		symbol socket misc DB_Rule --> /main/template/functions/DB_Rule_fn/DB_Rule
		symbol socket misc SetSortDomain --> /main/template/functions/SetSortDomain_fn/SetSortDomain
		symbol socket misc SortArray --> /main/template/functions/SortArray_fn/SortArray
		symbol socket misc SortRange --> /main/template/functions/SortRange_fn/SortRange
		symbol socket misc CompareFields --> /main/template/functions/CompareFields_fn/CompareFields
		symbol socket misc ExchangeFields --> /main/template/functions/ExchangeFields_fn/ExchangeFields
		symbol socket misc OldSortAlgorithm --> /main/template/functions/OldSortAlgorithm_fn/OldSortAlgorithm
		symbol socket misc InsertionSortAlgorithm --> /main/template/functions/InsertionSortAlgorithm_fn/InsertionSortAlgorithm
		symbol socket misc InPlaceMergeSortAlgorithm --> /main/template/functions/InPlaceMergeSortAlgorithm_fn/InPlaceMergeSortAlgorithm
		symbol socket misc IPMS_Lower --> /main/template/functions/IPMS_Lower_fn/IPMS_Lower
		symbol socket misc IPMS_Upper --> /main/template/functions/IPMS_Upper_fn/IPMS_Upper
		symbol socket misc IPMS_Reverse --> /main/template/functions/IPMS_Reverse_fn/IPMS_Reverse
		symbol socket misc IPMS_Rotate --> /main/template/functions/IPMS_Rotate_fn/IPMS_Rotate
		symbol socket misc IPMS_Merge --> /main/template/functions/IPMS_Merge_fn/IPMS_Merge
		symbol socket misc TableFindCol --> /main/template/functions/TableFindCol_fn/TableFindCol
		symbol socket misc TableRows --> /main/template/functions/TableRows_fn/TableRows
		symbol socket misc CheckTableEntryIsBlank --> /main/template/functions/CheckTableEntryIsBlank_fn/CheckTableEntryIsBlank
		symbol socket misc ForceTableEntryBlank --> /main/template/functions/ForceTableEntryBlank_fn/ForceTableEntryBlank
		symbol socket misc ForceTableEntryNonBlank --> /main/template/functions/ForceTableEntryNonBlank_fn/ForceTableEntryNonBlank
		symbol socket misc TableSwapBlankBits --> /main/template/functions/TableSwapBlankBits_fn/TableSwapBlankBits
		symbol socket misc TableMoveBlankBitsDown --> /main/template/functions/TableMoveBlankBitsDown_fn/TableMoveBlankBitsDown
		symbol socket misc TableRowCorr --> /main/template/functions/TableRowCorr_fn/TableRowCorr
		symbol socket misc ExistsTableRowCorr --> /main/template/functions/ExistsTableRowCorr_fn/ExistsTableRowCorr
		symbol socket misc TableLookUpCorr --> /main/template/functions/TableLookUpCorr_fn/TableLookUpCorr
		symbol socket misc ExistsTableLookUpCorr --> /main/template/functions/ExistsTableLookUpCorr_fn/ExistsTableLookUpCorr
		symbol socket misc TableLookUpEntry --> /main/template/functions/TableLookUpEntry_fn/TableLookUpEntry
		symbol socket misc ExistsTableLookUpEntry --> /main/template/functions/ExistsTableLookUpEntry_fn/ExistsTableLookUpEntry
		symbol socket misc TableRowIsBlank --> /main/template/functions/TableRowIsBlank_fn/TableRowIsBlank
		symbol socket misc TableBlankOutRow --> /main/template/functions/TableBlankOutRow_fn/TableBlankOutRow
		symbol socket misc TableBlankOutColumn --> /main/template/functions/TableBlankOutColumn_fn/TableBlankOutColumn
		symbol socket misc TableBlankOutAll --> /main/template/functions/TableBlankOutAll_fn/TableBlankOutAll
		symbol socket misc TableBlankRows --> /main/template/functions/TableBlankRows_fn/TableBlankRows
		symbol socket misc TableFilledRows --> /main/template/functions/TableFilledRows_fn/TableFilledRows
		symbol socket misc TableBlankRow --> /main/template/functions/TableBlankRow_fn/TableBlankRow
		symbol socket misc TableRandomRow --> /main/template/functions/TableRandomRow_fn/TableRandomRow
		symbol socket misc TableSwapRows --> /main/template/functions/TableSwapRows_fn/TableSwapRows
		symbol socket misc TableCompareRows --> /main/template/functions/TableCompareRows_fn/TableCompareRows
		symbol socket misc TableMoveRowDown --> /main/template/functions/TableMoveRowDown_fn/TableMoveRowDown
		symbol socket misc TableShuffle --> /main/template/functions/TableShuffle_fn/TableShuffle
		symbol socket misc TableNextRow --> /main/template/functions/TableNextRow_fn/TableNextRow
		symbol socket misc TableMoveBlanksToBack --> /main/template/functions/TableMoveBlanksToBack_fn/TableMoveBlanksToBack
		symbol socket misc TableSort --> /main/template/functions/TableSort_fn/TableSort
		symbol socket misc TablePrint --> /main/template/functions/TablePrint_fn/TablePrint
		symbol socket misc PrintRank --> /main/template/functions/PrintRank_fn/PrintRank
		symbol socket misc TableColumnDebug --> /main/template/functions/TableColumnDebug_fn/TableColumnDebug
		symbol socket misc TableRowDebug --> /main/template/functions/TableRowDebug_fn/TableRowDebug
		symbol socket misc TableDebug --> /main/template/functions/TableDebug_fn/TableDebug
		symbol socket misc HolderOf --> /main/template/functions/HolderOf_fn/HolderOf
		symbol socket misc ParentOf --> /main/template/functions/ParentOf_fn/ParentOf
		symbol socket misc CoreOf --> /main/template/functions/CoreOf_fn/CoreOf
		symbol socket misc CoreOfParentOfCoreOf --> /main/template/functions/CoreOfParentOfCoreOf_fn/CoreOfParentOfCoreOf
		symbol socket misc LocationOf --> /main/template/functions/LocationOf_fn/LocationOf
		symbol socket misc CommonAncestor --> /main/template/functions/CommonAncestor_fn/CommonAncestor
		symbol socket misc IndirectlyContains --> /main/template/functions/IndirectlyContains_fn/IndirectlyContains
		symbol socket misc WhetherIn --> /main/template/functions/WhetherIn_fn/WhetherIn
		symbol socket misc ContainerOf --> /main/template/functions/ContainerOf_fn/ContainerOf
		symbol socket misc TestContainmentRange --> /main/template/functions/TestContainmentRange_fn/TestContainmentRange
		symbol socket misc SupporterOf --> /main/template/functions/SupporterOf_fn/SupporterOf
		symbol socket misc CarrierOf --> /main/template/functions/CarrierOf_fn/CarrierOf
		symbol socket misc WearerOf --> /main/template/functions/WearerOf_fn/WearerOf
		symbol socket misc OwnerOf --> /main/template/functions/OwnerOf_fn/OwnerOf
		symbol socket misc MakePart --> /main/template/functions/MakePart_fn/MakePart
		symbol socket misc DetachPart --> /main/template/functions/DetachPart_fn/DetachPart
		symbol socket misc MoveObject --> /main/template/functions/MoveObject_fn/MoveObject
		symbol socket misc RemoveFromPlay --> /main/template/functions/RemoveFromPlay_fn/RemoveFromPlay
		symbol socket misc OnStage --> /main/template/functions/OnStage_fn/OnStage
		symbol socket misc PlayerTo --> /main/template/functions/PlayerTo_fn/PlayerTo
		symbol socket misc MoveDuringGoing --> /main/template/functions/MoveDuringGoing_fn/MoveDuringGoing
		symbol socket misc FoundEverywhere --> /main/template/functions/FoundEverywhere_fn/FoundEverywhere
		symbol socket misc BackdropEverywhere --> /main/template/functions/BackdropEverywhere_fn/BackdropEverywhere
		symbol socket misc ChangePlayer --> /main/template/functions/ChangePlayer_fn/ChangePlayer
		symbol socket misc MoveFloatingObjects --> /main/template/functions/MoveFloatingObjects_fn/MoveFloatingObjects
		symbol socket misc MoveBackdrop --> /main/template/functions/MoveBackdrop_fn/MoveBackdrop
		symbol socket misc BackdropLocation --> /main/template/functions/BackdropLocation_fn/BackdropLocation
		symbol socket misc WearObject --> /main/template/functions/WearObject_fn/WearObject
		symbol socket misc MapConnection --> /main/template/functions/MapConnection_fn/MapConnection
		symbol socket misc DoorFrom --> /main/template/functions/DoorFrom_fn/DoorFrom
		symbol socket misc RoomOrDoorFrom --> /main/template/functions/RoomOrDoorFrom_fn/RoomOrDoorFrom
		symbol socket misc AssertMapConnection --> /main/template/functions/AssertMapConnection_fn/AssertMapConnection
		symbol socket misc AssertMapUnconnection --> /main/template/functions/AssertMapUnconnection_fn/AssertMapUnconnection
		symbol socket misc TestAdjacency --> /main/template/functions/TestAdjacency_fn/TestAdjacency
		symbol socket misc TestRegionalContainment --> /main/template/functions/TestRegionalContainment_fn/TestRegionalContainment
		symbol socket misc FrontSideOfDoor --> /main/template/functions/FrontSideOfDoor_fn/FrontSideOfDoor
		symbol socket misc BackSideOfDoor --> /main/template/functions/BackSideOfDoor_fn/BackSideOfDoor
		symbol socket misc OtherSideOfDoor --> /main/template/functions/OtherSideOfDoor_fn/OtherSideOfDoor
		symbol socket misc DirectionDoorLeadsIn --> /main/template/functions/DirectionDoorLeadsIn_fn/DirectionDoorLeadsIn
		symbol socket misc TestVisibility --> /main/template/functions/TestVisibility_fn/TestVisibility
		symbol socket misc TestTouchability --> /main/template/functions/TestTouchability_fn/TestTouchability
		symbol socket misc TestConcealment --> /main/template/functions/TestConcealment_fn/TestConcealment
		symbol socket misc DECIMAL_TOKEN --> /main/template/functions/DECIMAL_TOKEN_fn/DECIMAL_TOKEN
		symbol socket misc TRUTH_STATE_TOKEN --> /main/template/functions/TRUTH_STATE_TOKEN_fn/TRUTH_STATE_TOKEN
		symbol socket misc NUMBER_TY_Abs --> /main/template/functions/NUMBER_TY_Abs_fn/NUMBER_TY_Abs
		symbol socket misc REAL_NUMBER_TY_Say --> /main/template/functions/REAL_NUMBER_TY_Say_fn/REAL_NUMBER_TY_Say
		symbol socket misc REAL_NUMBER_TY_Compare --> /main/template/functions/REAL_NUMBER_TY_Compare_fn/REAL_NUMBER_TY_Compare
		symbol socket misc RoundOffTime --> /main/template/functions/RoundOffTime_fn/RoundOffTime
		symbol socket misc NUMBER_TY_to_TIME_TY --> /main/template/functions/NUMBER_TY_to_TIME_TY_fn/NUMBER_TY_to_TIME_TY
		symbol socket misc SquareRoot --> /main/template/functions/SquareRoot_fn/SquareRoot
		symbol socket misc CubeRoot --> /main/template/functions/CubeRoot_fn/CubeRoot
		symbol socket misc PrintTimeOfDay --> /main/template/functions/PrintTimeOfDay_fn/PrintTimeOfDay
		symbol socket misc PrintTimeOfDayEnglish --> /main/template/functions/PrintTimeOfDayEnglish_fn/PrintTimeOfDayEnglish
		symbol socket misc TIME_TOKEN --> /main/template/functions/TIME_TOKEN_fn/TIME_TOKEN
		symbol socket misc HoursMinsWordToTime --> /main/template/functions/HoursMinsWordToTime_fn/HoursMinsWordToTime
		symbol socket misc RELATIVE_TIME_TOKEN --> /main/template/functions/RELATIVE_TIME_TOKEN_fn/RELATIVE_TIME_TOKEN
		symbol socket misc SCENE_CHANGE_MACHINERY_R --> /main/template/functions/SCENE_CHANGE_MACHINERY_R_fn/SCENE_CHANGE_MACHINERY_R
		symbol socket misc DuringSceneMatching --> /main/template/functions/DuringSceneMatching_fn/DuringSceneMatching
		symbol socket misc SceneUtility --> /main/template/functions/SceneUtility_fn/SceneUtility
		symbol socket misc XAbstractSub --> /main/template/functions/XAbstractSub_fn/XAbstractSub
		symbol socket misc XTestMove --> /main/template/functions/XTestMove_fn/XTestMove
		symbol socket misc ActionsOnSub --> /main/template/functions/ActionsOnSub_fn/ActionsOnSub
		symbol socket misc ActionsOffSub --> /main/template/functions/ActionsOffSub_fn/ActionsOffSub
		symbol socket misc GonearSub --> /main/template/functions/GonearSub_fn/GonearSub
		symbol socket misc XPurloinSub --> /main/template/functions/XPurloinSub_fn/XPurloinSub
		symbol socket misc PredictableSub --> /main/template/functions/PredictableSub_fn/PredictableSub
		symbol socket misc ShowRelationsSub --> /main/template/functions/ShowRelationsSub_fn/ShowRelationsSub
		symbol socket misc ShowOneRelation --> /main/template/functions/ShowOneRelation_fn/ShowOneRelation
		symbol socket misc ShowResponsesSub --> /main/template/functions/ShowResponsesSub_fn/ShowResponsesSub
		symbol socket misc ShowResponsesRange --> /main/template/functions/ShowResponsesRange_fn/ShowResponsesRange
		symbol socket misc RulesOnSub --> /main/template/functions/RulesOnSub_fn/RulesOnSub
		symbol socket misc RulesAllSub --> /main/template/functions/RulesAllSub_fn/RulesAllSub
		symbol socket misc RulesOffSub --> /main/template/functions/RulesOffSub_fn/RulesOffSub
		symbol socket misc ScenesOnSub --> /main/template/functions/ScenesOnSub_fn/ScenesOnSub
		symbol socket misc ScenesOffSub --> /main/template/functions/ScenesOffSub_fn/ScenesOffSub
		symbol socket misc ScopeSub --> /main/template/functions/ScopeSub_fn/ScopeSub
		symbol socket misc Print_ScL --> /main/template/functions/Print_ScL_fn/Print_ScL
		symbol socket misc ShowHeapSub --> /main/template/functions/ShowHeapSub_fn/ShowHeapSub
		symbol socket misc ShowMeSub --> /main/template/functions/ShowMeSub_fn/ShowMeSub
		symbol socket misc ShowRLocation --> /main/template/functions/ShowRLocation_fn/ShowRLocation
		symbol socket misc ShowMeRecursively --> /main/template/functions/ShowMeRecursively_fn/ShowMeRecursively
		symbol socket misc AllowInShowme --> /main/template/functions/AllowInShowme_fn/AllowInShowme
		symbol socket misc ShowVerbSub --> /main/template/functions/ShowVerbSub_fn/ShowVerbSub
		symbol socket misc DebugGrammarLine --> /main/template/functions/DebugGrammarLine_fn/DebugGrammarLine
		symbol socket misc DebugToken --> /main/template/functions/DebugToken_fn/DebugToken
		symbol socket misc TraceOnSub --> /main/template/functions/TraceOnSub_fn/TraceOnSub
		symbol socket misc TraceLevelSub --> /main/template/functions/TraceLevelSub_fn/TraceLevelSub
		symbol socket misc TraceOffSub --> /main/template/functions/TraceOffSub_fn/TraceOffSub
		symbol socket misc XTreeSub --> /main/template/functions/XTreeSub_fn/XTreeSub
		symbol socket misc XObj --> /main/template/functions/XObj_fn/XObj
		symbol socket misc testcommandnoun --> /main/template/functions/testcommandnoun_fn/testcommandnoun
		symbol socket misc ChronologyPoint --> /main/template/functions/ChronologyPoint_fn/ChronologyPoint
		symbol socket misc UPDATE_CHRONOLOGICAL_RECORDS_R --> /main/template/functions/UPDATE_CHRONOLOGICAL_RECORDS_R_fn/UPDATE_CHRONOLOGICAL_RECORDS_R
		symbol socket misc TrackActions --> /main/template/functions/TrackActions_fn/TrackActions
		symbol socket misc UnknownVerb --> /main/template/functions/UnknownVerb_fn/UnknownVerb
		symbol socket misc PrintVerb --> /main/template/functions/PrintVerb_fn/PrintVerb
		symbol socket misc HeapInitialise --> /main/template/functions/HeapInitialise_fn/HeapInitialise
		symbol socket misc HeapNetFreeSpace --> /main/template/functions/HeapNetFreeSpace_fn/HeapNetFreeSpace
		symbol socket misc HeapMakeSpace --> /main/template/functions/HeapMakeSpace_fn/HeapMakeSpace
		symbol socket misc HeapLargestFreeBlock --> /main/template/functions/HeapLargestFreeBlock_fn/HeapLargestFreeBlock
		symbol socket misc HeapDebug --> /main/template/functions/HeapDebug_fn/HeapDebug
		symbol socket misc FlexAllocate --> /main/template/functions/FlexAllocate_fn/FlexAllocate
		symbol socket misc FlexError --> /main/template/functions/FlexError_fn/FlexError
		symbol socket misc FlexMergeInternal --> /main/template/functions/FlexMergeInternal_fn/FlexMergeInternal
		symbol socket misc FlexRecutInternal --> /main/template/functions/FlexRecutInternal_fn/FlexRecutInternal
		symbol socket misc FlexFree --> /main/template/functions/FlexFree_fn/FlexFree
		symbol socket misc FlexFreeSingleBlockInternal --> /main/template/functions/FlexFreeSingleBlockInternal_fn/FlexFreeSingleBlockInternal
		symbol socket misc FlexResize --> /main/template/functions/FlexResize_fn/FlexResize
		symbol socket misc FlexSize --> /main/template/functions/FlexSize_fn/FlexSize
		symbol socket misc FlexTotalSize --> /main/template/functions/FlexTotalSize_fn/FlexTotalSize
		symbol socket misc FlexDebug --> /main/template/functions/FlexDebug_fn/FlexDebug
		symbol socket misc FlexDebugDecomposition --> /main/template/functions/FlexDebugDecomposition_fn/FlexDebugDecomposition
		symbol socket misc BlkValueGetLongBlock --> /main/template/functions/BlkValueGetLongBlock_fn/BlkValueGetLongBlock
		symbol socket misc BlkValueWeakKind --> /main/template/functions/BlkValueWeakKind_fn/BlkValueWeakKind
		symbol socket misc BlkValueGetRefCountPrimitive --> /main/template/functions/BlkValueGetRefCountPrimitive_fn/BlkValueGetRefCountPrimitive
		symbol socket misc BlkValueIncRefCountPrimitive --> /main/template/functions/BlkValueIncRefCountPrimitive_fn/BlkValueIncRefCountPrimitive
		symbol socket misc BlkValueDecRefCountPrimitive --> /main/template/functions/BlkValueDecRefCountPrimitive_fn/BlkValueDecRefCountPrimitive
		symbol socket misc BlkValueLBCapacity --> /main/template/functions/BlkValueLBCapacity_fn/BlkValueLBCapacity
		symbol socket misc BlkValueSetLBCapacity --> /main/template/functions/BlkValueSetLBCapacity_fn/BlkValueSetLBCapacity
		symbol socket misc BlkValueRead --> /main/template/functions/BlkValueRead_fn/BlkValueRead
		symbol socket misc BlkValueWrite --> /main/template/functions/BlkValueWrite_fn/BlkValueWrite
		symbol socket misc BlkValueSeekZeroEntry --> /main/template/functions/BlkValueSeekZeroEntry_fn/BlkValueSeekZeroEntry
		symbol socket misc BlkValueMassCopyEntries --> /main/template/functions/BlkValueMassCopyEntries_fn/BlkValueMassCopyEntries
		symbol socket misc BlkValueMassCopyFromArray --> /main/template/functions/BlkValueMassCopyFromArray_fn/BlkValueMassCopyFromArray
		symbol socket misc BlkValueCreate --> /main/template/functions/BlkValueCreate_fn/BlkValueCreate
		symbol socket misc BlkValueError --> /main/template/functions/BlkValueError_fn/BlkValueError
		symbol socket misc BlkValueCreateSB1 --> /main/template/functions/BlkValueCreateSB1_fn/BlkValueCreateSB1
		symbol socket misc BlkValueCreateSB2 --> /main/template/functions/BlkValueCreateSB2_fn/BlkValueCreateSB2
		symbol socket misc StackFramingInitialise --> /main/template/functions/StackFramingInitialise_fn/StackFramingInitialise
		symbol socket misc StackFrameCreate --> /main/template/functions/StackFrameCreate_fn/StackFrameCreate
		symbol socket misc BlkValueCreateOnStack --> /main/template/functions/BlkValueCreateOnStack_fn/BlkValueCreateOnStack
		symbol socket misc BlkValueFreeOnStack --> /main/template/functions/BlkValueFreeOnStack_fn/BlkValueFreeOnStack
		symbol socket misc BlkValueFree --> /main/template/functions/BlkValueFree_fn/BlkValueFree
		symbol socket misc BlkValueQuickCopyPrimitive --> /main/template/functions/BlkValueQuickCopyPrimitive_fn/BlkValueQuickCopyPrimitive
		symbol socket misc BlkValueCopySB1 --> /main/template/functions/BlkValueCopySB1_fn/BlkValueCopySB1
		symbol socket misc BlkValueCopySB2 --> /main/template/functions/BlkValueCopySB2_fn/BlkValueCopySB2
		symbol socket misc BlkValueSlowCopyPrimitive --> /main/template/functions/BlkValueSlowCopyPrimitive_fn/BlkValueSlowCopyPrimitive
		symbol socket misc BlkValueCopy --> /main/template/functions/BlkValueCopy_fn/BlkValueCopy
		symbol socket misc BlkValueCopyAZ --> /main/template/functions/BlkValueCopyAZ_fn/BlkValueCopyAZ
		symbol socket misc BlkValueDestroyPrimitive --> /main/template/functions/BlkValueDestroyPrimitive_fn/BlkValueDestroyPrimitive
		symbol socket misc BlkValueRecyclePrimitive --> /main/template/functions/BlkValueRecyclePrimitive_fn/BlkValueRecyclePrimitive
		symbol socket misc BlkMakeMutable --> /main/template/functions/BlkMakeMutable_fn/BlkMakeMutable
		symbol socket misc BlkValueCast --> /main/template/functions/BlkValueCast_fn/BlkValueCast
		symbol socket misc BlkValueCompare --> /main/template/functions/BlkValueCompare_fn/BlkValueCompare
		symbol socket misc GetHashValue --> /main/template/functions/GetHashValue_fn/GetHashValue
		symbol socket misc BlkValueHash --> /main/template/functions/BlkValueHash_fn/BlkValueHash
		symbol socket misc BlkValueReadFromFile --> /main/template/functions/BlkValueReadFromFile_fn/BlkValueReadFromFile
		symbol socket misc BlkValueWriteToFile --> /main/template/functions/BlkValueWriteToFile_fn/BlkValueWriteToFile
		symbol socket misc BlkValueDebug --> /main/template/functions/BlkValueDebug_fn/BlkValueDebug
		symbol socket misc BlkDebugAddress --> /main/template/functions/BlkDebugAddress_fn/BlkDebugAddress
		symbol socket misc BlkPrintHexadecimal --> /main/template/functions/BlkPrintHexadecimal_fn/BlkPrintHexadecimal
		symbol socket misc BlkPrintHexDigit --> /main/template/functions/BlkPrintHexDigit_fn/BlkPrintHexDigit
		symbol socket misc TEXT_TY_Extent --> /main/template/functions/TEXT_TY_Extent_fn/TEXT_TY_Extent
		symbol socket misc CharIsOfCase --> /main/template/functions/CharIsOfCase_fn/CharIsOfCase
		symbol socket misc CharToCase --> /main/template/functions/CharToCase_fn/CharToCase
		symbol socket misc TEXT_TY_RevCase --> /main/template/functions/TEXT_TY_RevCase_fn/TEXT_TY_RevCase
		symbol socket misc CharTestCases --> /main/template/functions/CharTestCases_fn/CharTestCases
		symbol socket misc TEXT_TY_Support --> /main/template/functions/TEXT_TY_Support_fn/TEXT_TY_Support
		symbol socket misc TEXT_TY_Debug --> /main/template/functions/TEXT_TY_Debug_fn/TEXT_TY_Debug
		symbol socket misc TEXT_TY_Create --> /main/template/functions/TEXT_TY_Create_fn/TEXT_TY_Create
		symbol socket misc TEXT_TY_CopySB --> /main/template/functions/TEXT_TY_CopySB_fn/TEXT_TY_CopySB
		symbol socket misc TEXT_TY_Transmute --> /main/template/functions/TEXT_TY_Transmute_fn/TEXT_TY_Transmute
		symbol socket misc TEXT_TY_Temporarily_Transmute --> /main/template/functions/TEXT_TY_Temporarily_Transmute_fn/TEXT_TY_Temporarily_Transmute
		symbol socket misc TEXT_TY_Untransmute --> /main/template/functions/TEXT_TY_Untransmute_fn/TEXT_TY_Untransmute
		symbol socket misc TEXT_TY_Mutable --> /main/template/functions/TEXT_TY_Mutable_fn/TEXT_TY_Mutable
		symbol socket misc TEXT_TY_Cast --> /main/template/functions/TEXT_TY_Cast_fn/TEXT_TY_Cast
		symbol socket misc SNIPPET_TY_to_TEXT_TY --> /main/template/functions/SNIPPET_TY_to_TEXT_TY_fn/SNIPPET_TY_to_TEXT_TY
		symbol socket misc TEXT_TY_CastPrimitive --> /main/template/functions/TEXT_TY_CastPrimitive_fn/TEXT_TY_CastPrimitive
		symbol socket misc TEXT_TY_Compare --> /main/template/functions/TEXT_TY_Compare_fn/TEXT_TY_Compare
		symbol socket misc TEXT_TY_Compare_Inner --> /main/template/functions/TEXT_TY_Compare_Inner_fn/TEXT_TY_Compare_Inner
		symbol socket misc TEXT_TY_Distinguish --> /main/template/functions/TEXT_TY_Distinguish_fn/TEXT_TY_Distinguish
		symbol socket misc TEXT_TY_Hash --> /main/template/functions/TEXT_TY_Hash_fn/TEXT_TY_Hash
		symbol socket misc TEXT_TY_Say --> /main/template/functions/TEXT_TY_Say_fn/TEXT_TY_Say
		symbol socket misc TEXT_TY_Say_Capitalised --> /main/template/functions/TEXT_TY_Say_Capitalised_fn/TEXT_TY_Say_Capitalised
		symbol socket misc TEXT_TY_WriteFile --> /main/template/functions/TEXT_TY_WriteFile_fn/TEXT_TY_WriteFile
		symbol socket misc TEXT_TY_ReadFile --> /main/template/functions/TEXT_TY_ReadFile_fn/TEXT_TY_ReadFile
		symbol socket misc TEXT_TY_SubstitutedForm --> /main/template/functions/TEXT_TY_SubstitutedForm_fn/TEXT_TY_SubstitutedForm
		symbol socket misc TEXT_TY_IsSubstituted --> /main/template/functions/TEXT_TY_IsSubstituted_fn/TEXT_TY_IsSubstituted
		symbol socket misc TEXT_TY_ExpandIfPerishable --> /main/template/functions/TEXT_TY_ExpandIfPerishable_fn/TEXT_TY_ExpandIfPerishable
		symbol socket misc TEXT_TY_ROGPR --> /main/template/functions/TEXT_TY_ROGPR_fn/TEXT_TY_ROGPR
		symbol socket misc TEXT_TY_ROGPRI --> /main/template/functions/TEXT_TY_ROGPRI_fn/TEXT_TY_ROGPRI
		symbol socket misc TEXT_TY_BlobAccess --> /main/template/functions/TEXT_TY_BlobAccess_fn/TEXT_TY_BlobAccess
		symbol socket misc TEXT_TY_BlobAccessI --> /main/template/functions/TEXT_TY_BlobAccessI_fn/TEXT_TY_BlobAccessI
		symbol socket misc TEXT_TY_GetBlob --> /main/template/functions/TEXT_TY_GetBlob_fn/TEXT_TY_GetBlob
		symbol socket misc TEXT_TY_ReplaceBlob --> /main/template/functions/TEXT_TY_ReplaceBlob_fn/TEXT_TY_ReplaceBlob
		symbol socket misc TEXT_TY_ReplaceText --> /main/template/functions/TEXT_TY_ReplaceText_fn/TEXT_TY_ReplaceText
		symbol socket misc TEXT_TY_ReplaceTextI --> /main/template/functions/TEXT_TY_ReplaceTextI_fn/TEXT_TY_ReplaceTextI
		symbol socket misc TEXT_TY_CharacterLength --> /main/template/functions/TEXT_TY_CharacterLength_fn/TEXT_TY_CharacterLength
		symbol socket misc TEXT_TY_Empty --> /main/template/functions/TEXT_TY_Empty_fn/TEXT_TY_Empty
		symbol socket misc TEXT_TY_GetCharacter --> /main/template/functions/TEXT_TY_GetCharacter_fn/TEXT_TY_GetCharacter
		symbol socket misc TEXT_TY_CharactersOfCase --> /main/template/functions/TEXT_TY_CharactersOfCase_fn/TEXT_TY_CharactersOfCase
		symbol socket misc TEXT_TY_CharactersToCase --> /main/template/functions/TEXT_TY_CharactersToCase_fn/TEXT_TY_CharactersToCase
		symbol socket misc TEXT_TY_Concatenate --> /main/template/functions/TEXT_TY_Concatenate_fn/TEXT_TY_Concatenate
		symbol socket misc TEXT_TY_ConcatenateI --> /main/template/functions/TEXT_TY_ConcatenateI_fn/TEXT_TY_ConcatenateI
		symbol socket misc SetPlayersCommand --> /main/template/functions/SetPlayersCommand_fn/SetPlayersCommand
		symbol socket misc TEXT_TY_RE_SetTrace --> /main/template/functions/TEXT_TY_RE_SetTrace_fn/TEXT_TY_RE_SetTrace
		symbol socket misc TEXT_TY_RE_Node --> /main/template/functions/TEXT_TY_RE_Node_fn/TEXT_TY_RE_Node
		symbol socket misc TEXT_TY_RE_NodeAddress --> /main/template/functions/TEXT_TY_RE_NodeAddress_fn/TEXT_TY_RE_NodeAddress
		symbol socket misc TEXT_TY_RE_DebugMatchVars --> /main/template/functions/TEXT_TY_RE_DebugMatchVars_fn/TEXT_TY_RE_DebugMatchVars
		symbol socket misc TEXT_TY_RE_CreateMatchVars --> /main/template/functions/TEXT_TY_RE_CreateMatchVars_fn/TEXT_TY_RE_CreateMatchVars
		symbol socket misc TEXT_TY_RE_EmptyMatchVars --> /main/template/functions/TEXT_TY_RE_EmptyMatchVars_fn/TEXT_TY_RE_EmptyMatchVars
		symbol socket misc TEXT_TY_RE_GetMatchVar --> /main/template/functions/TEXT_TY_RE_GetMatchVar_fn/TEXT_TY_RE_GetMatchVar
		symbol socket misc TEXT_TY_MV_End --> /main/template/functions/TEXT_TY_MV_End_fn/TEXT_TY_MV_End
		symbol socket misc TEXT_TY_RE_Clear_Markers --> /main/template/functions/TEXT_TY_RE_Clear_Markers_fn/TEXT_TY_RE_Clear_Markers
		symbol socket misc TEXT_TY_RE_DebugTree --> /main/template/functions/TEXT_TY_RE_DebugTree_fn/TEXT_TY_RE_DebugTree
		symbol socket misc TEXT_TY_RE_DebugSubtree --> /main/template/functions/TEXT_TY_RE_DebugSubtree_fn/TEXT_TY_RE_DebugSubtree
		symbol socket misc TEXT_TY_RE_DebugNode --> /main/template/functions/TEXT_TY_RE_DebugNode_fn/TEXT_TY_RE_DebugNode
		symbol socket misc TEXT_TY_CHR_CompileTree --> /main/template/functions/TEXT_TY_CHR_CompileTree_fn/TEXT_TY_CHR_CompileTree
		symbol socket misc TEXT_TY_RE_CompileTree --> /main/template/functions/TEXT_TY_RE_CompileTree_fn/TEXT_TY_RE_CompileTree
		symbol socket misc TEXT_TY_RE_RangeSyntaxCorrect --> /main/template/functions/TEXT_TY_RE_RangeSyntaxCorrect_fn/TEXT_TY_RE_RangeSyntaxCorrect
		symbol socket misc TEXT_TY_RE_ExpandChoices --> /main/template/functions/TEXT_TY_RE_ExpandChoices_fn/TEXT_TY_RE_ExpandChoices
		symbol socket misc TEXT_TY_RE_CheckTree --> /main/template/functions/TEXT_TY_RE_CheckTree_fn/TEXT_TY_RE_CheckTree
		symbol socket misc TEXT_TY_RE_Width --> /main/template/functions/TEXT_TY_RE_Width_fn/TEXT_TY_RE_Width
		symbol socket misc TEXT_TY_RE_PrintNoRewinds --> /main/template/functions/TEXT_TY_RE_PrintNoRewinds_fn/TEXT_TY_RE_PrintNoRewinds
		symbol socket misc TEXT_TY_RE_Parse --> /main/template/functions/TEXT_TY_RE_Parse_fn/TEXT_TY_RE_Parse
		symbol socket misc TEXT_TY_RE_ParseAtPosition --> /main/template/functions/TEXT_TY_RE_ParseAtPosition_fn/TEXT_TY_RE_ParseAtPosition
		symbol socket misc TEXT_TY_RE_SeekBacktrack --> /main/template/functions/TEXT_TY_RE_SeekBacktrack_fn/TEXT_TY_RE_SeekBacktrack
		symbol socket misc TEXT_TY_RE_FailSubexpressions --> /main/template/functions/TEXT_TY_RE_FailSubexpressions_fn/TEXT_TY_RE_FailSubexpressions
		symbol socket misc TEXT_TY_RE_EraseConstraints --> /main/template/functions/TEXT_TY_RE_EraseConstraints_fn/TEXT_TY_RE_EraseConstraints
		symbol socket misc TEXT_TY_RE_MatchSubstring --> /main/template/functions/TEXT_TY_RE_MatchSubstring_fn/TEXT_TY_RE_MatchSubstring
		symbol socket misc TEXT_TY_RE_Range --> /main/template/functions/TEXT_TY_RE_Range_fn/TEXT_TY_RE_Range
		symbol socket misc TEXT_TY_Replace_RE --> /main/template/functions/TEXT_TY_Replace_RE_fn/TEXT_TY_Replace_RE
		symbol socket misc TEXT_TY_Replace_REI --> /main/template/functions/TEXT_TY_Replace_REI_fn/TEXT_TY_Replace_REI
		symbol socket misc TEXT_TY_RE_Concatenate --> /main/template/functions/TEXT_TY_RE_Concatenate_fn/TEXT_TY_RE_Concatenate
		symbol socket misc STORED_ACTION_TY_Support --> /main/template/functions/STORED_ACTION_TY_Support_fn/STORED_ACTION_TY_Support
		symbol socket misc STORED_ACTION_TY_Create --> /main/template/functions/STORED_ACTION_TY_Create_fn/STORED_ACTION_TY_Create
		symbol socket misc STORED_ACTION_TY_New --> /main/template/functions/STORED_ACTION_TY_New_fn/STORED_ACTION_TY_New
		symbol socket misc STORED_ACTION_TY_Destroy --> /main/template/functions/STORED_ACTION_TY_Destroy_fn/STORED_ACTION_TY_Destroy
		symbol socket misc STORED_ACTION_TY_Copy --> /main/template/functions/STORED_ACTION_TY_Copy_fn/STORED_ACTION_TY_Copy
		symbol socket misc STORED_ACTION_TY_Compare --> /main/template/functions/STORED_ACTION_TY_Compare_fn/STORED_ACTION_TY_Compare
		symbol socket misc STORED_ACTION_TY_Distinguish --> /main/template/functions/STORED_ACTION_TY_Distinguish_fn/STORED_ACTION_TY_Distinguish
		symbol socket misc STORED_ACTION_TY_Hash --> /main/template/functions/STORED_ACTION_TY_Hash_fn/STORED_ACTION_TY_Hash
		symbol socket misc STORED_ACTION_TY_Say --> /main/template/functions/STORED_ACTION_TY_Say_fn/STORED_ACTION_TY_Say
		symbol socket misc STORED_ACTION_TY_Involves --> /main/template/functions/STORED_ACTION_TY_Involves_fn/STORED_ACTION_TY_Involves
		symbol socket misc STORED_ACTION_TY_Part --> /main/template/functions/STORED_ACTION_TY_Part_fn/STORED_ACTION_TY_Part
		symbol socket misc STORED_ACTION_TY_Adopt --> /main/template/functions/STORED_ACTION_TY_Adopt_fn/STORED_ACTION_TY_Adopt
		symbol socket misc STORED_ACTION_TY_Unadopt --> /main/template/functions/STORED_ACTION_TY_Unadopt_fn/STORED_ACTION_TY_Unadopt
		symbol socket misc STORED_ACTION_TY_Current --> /main/template/functions/STORED_ACTION_TY_Current_fn/STORED_ACTION_TY_Current
		symbol socket misc STORED_ACTION_TY_Try --> /main/template/functions/STORED_ACTION_TY_Try_fn/STORED_ACTION_TY_Try
		symbol socket misc LIST_OF_TY_Support --> /main/template/functions/LIST_OF_TY_Support_fn/LIST_OF_TY_Support
		symbol socket misc LIST_OF_TY_Create --> /main/template/functions/LIST_OF_TY_Create_fn/LIST_OF_TY_Create
		symbol socket misc LIST_OF_TY_Destroy --> /main/template/functions/LIST_OF_TY_Destroy_fn/LIST_OF_TY_Destroy
		symbol socket misc LIST_OF_TY_CopyKind --> /main/template/functions/LIST_OF_TY_CopyKind_fn/LIST_OF_TY_CopyKind
		symbol socket misc LIST_OF_TY_QuickCopy --> /main/template/functions/LIST_OF_TY_QuickCopy_fn/LIST_OF_TY_QuickCopy
		symbol socket misc LIST_OF_TY_KindData --> /main/template/functions/LIST_OF_TY_KindData_fn/LIST_OF_TY_KindData
		symbol socket misc LIST_OF_TY_Copy --> /main/template/functions/LIST_OF_TY_Copy_fn/LIST_OF_TY_Copy
		symbol socket misc LIST_OF_TY_Compare --> /main/template/functions/LIST_OF_TY_Compare_fn/LIST_OF_TY_Compare
		symbol socket misc LIST_OF_TY_ComparisonFn --> /main/template/functions/LIST_OF_TY_ComparisonFn_fn/LIST_OF_TY_ComparisonFn
		symbol socket misc LIST_OF_TY_Distinguish --> /main/template/functions/LIST_OF_TY_Distinguish_fn/LIST_OF_TY_Distinguish
		symbol socket misc LIST_OF_TY_Hash --> /main/template/functions/LIST_OF_TY_Hash_fn/LIST_OF_TY_Hash
		symbol socket misc LIST_OF_TY_Say --> /main/template/functions/LIST_OF_TY_Say_fn/LIST_OF_TY_Say
		symbol socket misc LIST_OF_TY_Desc --> /main/template/functions/LIST_OF_TY_Desc_fn/LIST_OF_TY_Desc
		symbol socket misc LIST_OF_TY_FindItem --> /main/template/functions/LIST_OF_TY_FindItem_fn/LIST_OF_TY_FindItem
		symbol socket misc LIST_OF_TY_InsertItem --> /main/template/functions/LIST_OF_TY_InsertItem_fn/LIST_OF_TY_InsertItem
		symbol socket misc LIST_OF_TY_AppendList --> /main/template/functions/LIST_OF_TY_AppendList_fn/LIST_OF_TY_AppendList
		symbol socket misc LIST_OF_TY_RemoveValue --> /main/template/functions/LIST_OF_TY_RemoveValue_fn/LIST_OF_TY_RemoveValue
		symbol socket misc LIST_OF_TY_RemoveItemRange --> /main/template/functions/LIST_OF_TY_RemoveItemRange_fn/LIST_OF_TY_RemoveItemRange
		symbol socket misc LIST_OF_TY_Remove_List --> /main/template/functions/LIST_OF_TY_Remove_List_fn/LIST_OF_TY_Remove_List
		symbol socket misc LIST_OF_TY_GetLength --> /main/template/functions/LIST_OF_TY_GetLength_fn/LIST_OF_TY_GetLength
		symbol socket misc LIST_OF_TY_Empty --> /main/template/functions/LIST_OF_TY_Empty_fn/LIST_OF_TY_Empty
		symbol socket misc LIST_OF_TY_SetLength --> /main/template/functions/LIST_OF_TY_SetLength_fn/LIST_OF_TY_SetLength
		symbol socket misc LIST_OF_TY_GetItem --> /main/template/functions/LIST_OF_TY_GetItem_fn/LIST_OF_TY_GetItem
		symbol socket misc WriteLIST_OF_TY_GetItem --> /main/template/functions/WriteLIST_OF_TY_GetItem_fn/WriteLIST_OF_TY_GetItem
		symbol socket misc LIST_OF_TY_PutItem --> /main/template/functions/LIST_OF_TY_PutItem_fn/LIST_OF_TY_PutItem
		symbol socket misc LIST_OF_TY_Mol --> /main/template/functions/LIST_OF_TY_Mol_fn/LIST_OF_TY_Mol
		symbol socket misc LIST_OF_TY_Set_Mol --> /main/template/functions/LIST_OF_TY_Set_Mol_fn/LIST_OF_TY_Set_Mol
		symbol socket misc LIST_OF_TY_Reverse --> /main/template/functions/LIST_OF_TY_Reverse_fn/LIST_OF_TY_Reverse
		symbol socket misc LIST_OF_TY_Rotate --> /main/template/functions/LIST_OF_TY_Rotate_fn/LIST_OF_TY_Rotate
		symbol socket misc LIST_OF_TY_Sort --> /main/template/functions/LIST_OF_TY_Sort_fn/LIST_OF_TY_Sort
		symbol socket misc ListSwapEntries --> /main/template/functions/ListSwapEntries_fn/ListSwapEntries
		symbol socket misc ListCompareEntries --> /main/template/functions/ListCompareEntries_fn/ListCompareEntries
		symbol socket misc COMBINATION_TY_Support --> /main/template/functions/COMBINATION_TY_Support_fn/COMBINATION_TY_Support
		symbol socket misc COMBINATION_TY_Create --> /main/template/functions/COMBINATION_TY_Create_fn/COMBINATION_TY_Create
		symbol socket misc COMBINATION_TY_Destroy --> /main/template/functions/COMBINATION_TY_Destroy_fn/COMBINATION_TY_Destroy
		symbol socket misc COMBINATION_TY_CopyKind --> /main/template/functions/COMBINATION_TY_CopyKind_fn/COMBINATION_TY_CopyKind
		symbol socket misc COMBINATION_TY_CopySB --> /main/template/functions/COMBINATION_TY_CopySB_fn/COMBINATION_TY_CopySB
		symbol socket misc COMBINATION_TY_KindData --> /main/template/functions/COMBINATION_TY_KindData_fn/COMBINATION_TY_KindData
		symbol socket misc COMBINATION_TY_Copy --> /main/template/functions/COMBINATION_TY_Copy_fn/COMBINATION_TY_Copy
		symbol socket misc COMBINATION_TY_Compare --> /main/template/functions/COMBINATION_TY_Compare_fn/COMBINATION_TY_Compare
		symbol socket misc COMBINATION_TY_Distinguish --> /main/template/functions/COMBINATION_TY_Distinguish_fn/COMBINATION_TY_Distinguish
		symbol socket misc COMBINATION_TY_Hash --> /main/template/functions/COMBINATION_TY_Hash_fn/COMBINATION_TY_Hash
		symbol socket misc COMBINATION_TY_Say --> /main/template/functions/COMBINATION_TY_Say_fn/COMBINATION_TY_Say
		symbol socket misc RELATION_TY_Support --> /main/template/functions/RELATION_TY_Support_fn/RELATION_TY_Support
		symbol socket misc RelationTest --> /main/template/functions/RelationTest_fn/RelationTest
		symbol socket misc RlnGetF --> /main/template/functions/RlnGetF_fn/RlnGetF
		symbol socket misc RlnSetF --> /main/template/functions/RlnSetF_fn/RlnSetF
		symbol socket misc EmptyRelationHandler --> /main/template/functions/EmptyRelationHandler_fn/EmptyRelationHandler
		symbol socket misc RELATION_TY_Create --> /main/template/functions/RELATION_TY_Create_fn/RELATION_TY_Create
		symbol socket misc RELATION_TY_Destroy --> /main/template/functions/RELATION_TY_Destroy_fn/RELATION_TY_Destroy
		symbol socket misc RELATION_TY_Copy --> /main/template/functions/RELATION_TY_Copy_fn/RELATION_TY_Copy
		symbol socket misc RELATION_TY_Compare --> /main/template/functions/RELATION_TY_Compare_fn/RELATION_TY_Compare
		symbol socket misc RELATION_TY_Distinguish --> /main/template/functions/RELATION_TY_Distinguish_fn/RELATION_TY_Distinguish
		symbol socket misc RELATION_TY_Say --> /main/template/functions/RELATION_TY_Say_fn/RELATION_TY_Say
		symbol socket misc RELATION_TY_Name --> /main/template/functions/RELATION_TY_Name_fn/RELATION_TY_Name
		symbol socket misc ChooseRelationHandler --> /main/template/functions/ChooseRelationHandler_fn/ChooseRelationHandler
		symbol socket misc IsMutableRelationHandler --> /main/template/functions/IsMutableRelationHandler_fn/IsMutableRelationHandler
		symbol socket misc RELATION_TY_SetValency --> /main/template/functions/RELATION_TY_SetValency_fn/RELATION_TY_SetValency
		symbol socket misc RELATION_TY_GetValency --> /main/template/functions/RELATION_TY_GetValency_fn/RELATION_TY_GetValency
		symbol socket misc DoubleHashSetRelationHandler --> /main/template/functions/DoubleHashSetRelationHandler_fn/DoubleHashSetRelationHandler
		symbol socket misc DoubleHashSetLookUp --> /main/template/functions/DoubleHashSetLookUp_fn/DoubleHashSetLookUp
		symbol socket misc DoubleHashSetCheckResize --> /main/template/functions/DoubleHashSetCheckResize_fn/DoubleHashSetCheckResize
		symbol socket misc DoubleHashSetEntryMatches --> /main/template/functions/DoubleHashSetEntryMatches_fn/DoubleHashSetEntryMatches
		symbol socket misc HashListRelationHandler --> /main/template/functions/HashListRelationHandler_fn/HashListRelationHandler
		symbol socket misc HashTableRelationHandler --> /main/template/functions/HashTableRelationHandler_fn/HashTableRelationHandler
		symbol socket misc ReversedHashTableRelationHandler --> /main/template/functions/ReversedHashTableRelationHandler_fn/ReversedHashTableRelationHandler
		symbol socket misc SymDoubleHashSetRelationHandler --> /main/template/functions/SymDoubleHashSetRelationHandler_fn/SymDoubleHashSetRelationHandler
		symbol socket misc SymHashListRelationHandler --> /main/template/functions/SymHashListRelationHandler_fn/SymHashListRelationHandler
		symbol socket misc Sym2in1HashTableRelationHandler --> /main/template/functions/Sym2in1HashTableRelationHandler_fn/Sym2in1HashTableRelationHandler
		symbol socket misc HashCoreRelationHandler --> /main/template/functions/HashCoreRelationHandler_fn/HashCoreRelationHandler
		symbol socket misc HashCoreLookUp --> /main/template/functions/HashCoreLookUp_fn/HashCoreLookUp
		symbol socket misc HashCoreCheckResize --> /main/template/functions/HashCoreCheckResize_fn/HashCoreCheckResize
		symbol socket misc HashCoreEntryMatches --> /main/template/functions/HashCoreEntryMatches_fn/HashCoreEntryMatches
		symbol socket misc EquivHashTableRelationHandler --> /main/template/functions/EquivHashTableRelationHandler_fn/EquivHashTableRelationHandler
		symbol socket misc TwoInOneHashTableRelationHandler --> /main/template/functions/TwoInOneHashTableRelationHandler_fn/TwoInOneHashTableRelationHandler
		symbol socket misc TwoInOneDelete --> /main/template/functions/TwoInOneDelete_fn/TwoInOneDelete
		symbol socket misc TwoInOneLookUp --> /main/template/functions/TwoInOneLookUp_fn/TwoInOneLookUp
		symbol socket misc TwoInOneCheckResize --> /main/template/functions/TwoInOneCheckResize_fn/TwoInOneCheckResize
		symbol socket misc TwoInOneEntryMatches --> /main/template/functions/TwoInOneEntryMatches_fn/TwoInOneEntryMatches
		symbol socket misc RELATION_TY_Empty --> /main/template/functions/RELATION_TY_Empty_fn/RELATION_TY_Empty
		symbol socket misc LibSerial --> /main/template/constants/LibSerial_con/LibSerial
		symbol socket misc LibRelease --> /main/template/constants/LibRelease_con/LibRelease
		symbol socket misc LIBRARY_VERSION --> /main/template/constants/LIBRARY_VERSION_con/LIBRARY_VERSION
		symbol socket misc USE_SCORING --> /main/template/constants/USE_SCORING_con/USE_SCORING
		symbol plug misc plug_00015 --? DEFAULT_SCORING_SETTING
		symbol socket misc INDIV_PROP_START --> /main/template/constants/INDIV_PROP_START_con/INDIV_PROP_START
		symbol socket misc HDR_ZCODEVERSION --> /main/template/constants/HDR_ZCODEVERSION_con/HDR_ZCODEVERSION
		symbol socket misc HDR_TERPFLAGS --> /main/template/constants/HDR_TERPFLAGS_con/HDR_TERPFLAGS
		symbol socket misc HDR_GAMERELEASE --> /main/template/constants/HDR_GAMERELEASE_con/HDR_GAMERELEASE
		symbol socket misc HDR_HIGHMEMORY --> /main/template/constants/HDR_HIGHMEMORY_con/HDR_HIGHMEMORY
		symbol socket misc HDR_INITIALPC --> /main/template/constants/HDR_INITIALPC_con/HDR_INITIALPC
		symbol socket misc HDR_DICTIONARY --> /main/template/constants/HDR_DICTIONARY_con/HDR_DICTIONARY
		symbol socket misc HDR_OBJECTS --> /main/template/constants/HDR_OBJECTS_con/HDR_OBJECTS
		symbol socket misc HDR_GLOBALS --> /main/template/constants/HDR_GLOBALS_con/HDR_GLOBALS
		symbol socket misc HDR_STATICMEMORY --> /main/template/constants/HDR_STATICMEMORY_con/HDR_STATICMEMORY
		symbol socket misc HDR_GAMEFLAGS --> /main/template/constants/HDR_GAMEFLAGS_con/HDR_GAMEFLAGS
		symbol socket misc HDR_GAMESERIAL --> /main/template/constants/HDR_GAMESERIAL_con/HDR_GAMESERIAL
		symbol socket misc HDR_ABBREVIATIONS --> /main/template/constants/HDR_ABBREVIATIONS_con/HDR_ABBREVIATIONS
		symbol socket misc HDR_FILELENGTH --> /main/template/constants/HDR_FILELENGTH_con/HDR_FILELENGTH
		symbol socket misc HDR_CHECKSUM --> /main/template/constants/HDR_CHECKSUM_con/HDR_CHECKSUM
		symbol socket misc HDR_TERPNUMBER --> /main/template/constants/HDR_TERPNUMBER_con/HDR_TERPNUMBER
		symbol socket misc HDR_TERPVERSION --> /main/template/constants/HDR_TERPVERSION_con/HDR_TERPVERSION
		symbol socket misc HDR_SCREENHLINES --> /main/template/constants/HDR_SCREENHLINES_con/HDR_SCREENHLINES
		symbol socket misc HDR_SCREENWCHARS --> /main/template/constants/HDR_SCREENWCHARS_con/HDR_SCREENWCHARS
		symbol socket misc HDR_SCREENWUNITS --> /main/template/constants/HDR_SCREENWUNITS_con/HDR_SCREENWUNITS
		symbol socket misc HDR_SCREENHUNITS --> /main/template/constants/HDR_SCREENHUNITS_con/HDR_SCREENHUNITS
		symbol socket misc HDR_FONTWUNITS --> /main/template/constants/HDR_FONTWUNITS_con/HDR_FONTWUNITS
		symbol socket misc HDR_FONTHUNITS --> /main/template/constants/HDR_FONTHUNITS_con/HDR_FONTHUNITS
		symbol socket misc HDR_ROUTINEOFFSET --> /main/template/constants/HDR_ROUTINEOFFSET_con/HDR_ROUTINEOFFSET
		symbol socket misc HDR_STRINGOFFSET --> /main/template/constants/HDR_STRINGOFFSET_con/HDR_STRINGOFFSET
		symbol socket misc HDR_BGCOLOUR --> /main/template/constants/HDR_BGCOLOUR_con/HDR_BGCOLOUR
		symbol socket misc HDR_FGCOLOUR --> /main/template/constants/HDR_FGCOLOUR_con/HDR_FGCOLOUR
		symbol socket misc HDR_TERMCHARS --> /main/template/constants/HDR_TERMCHARS_con/HDR_TERMCHARS
		symbol socket misc HDR_PIXELSTO3 --> /main/template/constants/HDR_PIXELSTO3_con/HDR_PIXELSTO3
		symbol socket misc HDR_TERPSTANDARD --> /main/template/constants/HDR_TERPSTANDARD_con/HDR_TERPSTANDARD
		symbol socket misc HDR_ALPHABET --> /main/template/constants/HDR_ALPHABET_con/HDR_ALPHABET
		symbol socket misc HDR_EXTENSION --> /main/template/constants/HDR_EXTENSION_con/HDR_EXTENSION
		symbol socket misc HDR_UNUSED --> /main/template/constants/HDR_UNUSED_con/HDR_UNUSED
		symbol socket misc HDR_INFORMVERSION --> /main/template/constants/HDR_INFORMVERSION_con/HDR_INFORMVERSION
		symbol socket misc PowersOfTwo_TB --> /main/template/arrays/PowersOfTwo_TB_arr/PowersOfTwo_TB
		symbol socket misc IncreasingPowersOfTwo_TB --> /main/template/arrays/IncreasingPowersOfTwo_TB_arr/IncreasingPowersOfTwo_TB
		symbol socket misc NORMAL_VMSTY --> /main/template/constants/NORMAL_VMSTY_con/NORMAL_VMSTY
		symbol socket misc HEADER_VMSTY --> /main/template/constants/HEADER_VMSTY_con/HEADER_VMSTY
		symbol socket misc SUBHEADER_VMSTY --> /main/template/constants/SUBHEADER_VMSTY_con/SUBHEADER_VMSTY
		symbol socket misc ALERT_VMSTY --> /main/template/constants/ALERT_VMSTY_con/ALERT_VMSTY
		symbol socket misc NOTE_VMSTY --> /main/template/constants/NOTE_VMSTY_con/NOTE_VMSTY
		symbol socket misc BLOCKQUOTE_VMSTY --> /main/template/constants/BLOCKQUOTE_VMSTY_con/BLOCKQUOTE_VMSTY
		symbol socket misc INPUT_VMSTY --> /main/template/constants/INPUT_VMSTY_con/INPUT_VMSTY
		symbol socket misc CLR_DEFAULT --> /main/template/constants/CLR_DEFAULT_con/CLR_DEFAULT
		symbol socket misc CLR_BLACK --> /main/template/constants/CLR_BLACK_con/CLR_BLACK
		symbol socket misc CLR_RED --> /main/template/constants/CLR_RED_con/CLR_RED
		symbol socket misc CLR_GREEN --> /main/template/constants/CLR_GREEN_con/CLR_GREEN
		symbol socket misc CLR_YELLOW --> /main/template/constants/CLR_YELLOW_con/CLR_YELLOW
		symbol socket misc CLR_BLUE --> /main/template/constants/CLR_BLUE_con/CLR_BLUE
		symbol socket misc CLR_MAGENTA --> /main/template/constants/CLR_MAGENTA_con/CLR_MAGENTA
		symbol socket misc CLR_PURPLE --> /main/template/constants/CLR_PURPLE_con/CLR_PURPLE
		symbol socket misc CLR_CYAN --> /main/template/constants/CLR_CYAN_con/CLR_CYAN
		symbol socket misc CLR_AZURE --> /main/template/constants/CLR_AZURE_con/CLR_AZURE
		symbol socket misc CLR_WHITE --> /main/template/constants/CLR_WHITE_con/CLR_WHITE
		symbol socket misc WIN_ALL --> /main/template/constants/WIN_ALL_con/WIN_ALL
		symbol socket misc WIN_STATUS --> /main/template/constants/WIN_STATUS_con/WIN_STATUS
		symbol socket misc WIN_MAIN --> /main/template/constants/WIN_MAIN_con/WIN_MAIN
		symbol socket misc PARA_COMPLETED --> /main/template/constants/PARA_COMPLETED_con/PARA_COMPLETED
		symbol socket misc PARA_PROMPTSKIP --> /main/template/constants/PARA_PROMPTSKIP_con/PARA_PROMPTSKIP
		symbol socket misc PARA_SUPPRESSPROMPTSKIP --> /main/template/constants/PARA_SUPPRESSPROMPTSKIP_con/PARA_SUPPRESSPROMPTSKIP
		symbol socket misc PARA_NORULEBOOKBREAKS --> /main/template/constants/PARA_NORULEBOOKBREAKS_con/PARA_NORULEBOOKBREAKS
		symbol socket misc PARA_CONTENTEXPECTED --> /main/template/constants/PARA_CONTENTEXPECTED_con/PARA_CONTENTEXPECTED
		symbol socket misc POSSESS_PK --> /main/template/constants/POSSESS_PK_con/POSSESS_PK
		symbol socket misc DEFART_PK --> /main/template/constants/DEFART_PK_con/DEFART_PK
		symbol socket misc INDEFART_PK --> /main/template/constants/INDEFART_PK_con/INDEFART_PK
		symbol socket misc RTP_BACKDROP --> /main/template/constants/RTP_BACKDROP_con/RTP_BACKDROP
		symbol socket misc RTP_EXITDOOR --> /main/template/constants/RTP_EXITDOOR_con/RTP_EXITDOOR
		symbol socket misc RTP_NOEXIT --> /main/template/constants/RTP_NOEXIT_con/RTP_NOEXIT
		symbol socket misc RTP_CANTCHANGE --> /main/template/constants/RTP_CANTCHANGE_con/RTP_CANTCHANGE
		symbol socket misc RTP_IMPREL --> /main/template/constants/RTP_IMPREL_con/RTP_IMPREL
		symbol socket misc RTP_RULESTACK --> /main/template/constants/RTP_RULESTACK_con/RTP_RULESTACK
		symbol socket misc RTP_TOOMANYRULEBOOKS --> /main/template/constants/RTP_TOOMANYRULEBOOKS_con/RTP_TOOMANYRULEBOOKS
		symbol socket misc RTP_TOOMANYEVENTS --> /main/template/constants/RTP_TOOMANYEVENTS_con/RTP_TOOMANYEVENTS
		symbol socket misc RTP_BADPROPERTY --> /main/template/constants/RTP_BADPROPERTY_con/RTP_BADPROPERTY
		symbol socket misc RTP_UNPROVIDED --> /main/template/constants/RTP_UNPROVIDED_con/RTP_UNPROVIDED
		symbol socket misc RTP_UNSET --> /main/template/constants/RTP_UNSET_con/RTP_UNSET
		symbol socket misc RTP_TOOMANYACTS --> /main/template/constants/RTP_TOOMANYACTS_con/RTP_TOOMANYACTS
		symbol socket misc RTP_CANTABANDON --> /main/template/constants/RTP_CANTABANDON_con/RTP_CANTABANDON
		symbol socket misc RTP_CANTEND --> /main/template/constants/RTP_CANTEND_con/RTP_CANTEND
		symbol socket misc RTP_CANTMOVENOTHING --> /main/template/constants/RTP_CANTMOVENOTHING_con/RTP_CANTMOVENOTHING
		symbol socket misc RTP_CANTREMOVENOTHING --> /main/template/constants/RTP_CANTREMOVENOTHING_con/RTP_CANTREMOVENOTHING
		symbol socket misc RTP_DIVZERO --> /main/template/constants/RTP_DIVZERO_con/RTP_DIVZERO
		symbol socket misc RTP_BADVALUEPROPERTY --> /main/template/constants/RTP_BADVALUEPROPERTY_con/RTP_BADVALUEPROPERTY
		symbol socket misc RTP_NOTBACKDROP --> /main/template/constants/RTP_NOTBACKDROP_con/RTP_NOTBACKDROP
		symbol socket misc RTP_TABLE_NOCOL --> /main/template/constants/RTP_TABLE_NOCOL_con/RTP_TABLE_NOCOL
		symbol socket misc RTP_TABLE_NOCORR --> /main/template/constants/RTP_TABLE_NOCORR_con/RTP_TABLE_NOCORR
		symbol socket misc RTP_TABLE_NOROW --> /main/template/constants/RTP_TABLE_NOROW_con/RTP_TABLE_NOROW
		symbol socket misc RTP_TABLE_NOENTRY --> /main/template/constants/RTP_TABLE_NOENTRY_con/RTP_TABLE_NOENTRY
		symbol socket misc RTP_TABLE_NOTABLE --> /main/template/constants/RTP_TABLE_NOTABLE_con/RTP_TABLE_NOTABLE
		symbol socket misc RTP_TABLE_NOMOREBLANKS --> /main/template/constants/RTP_TABLE_NOMOREBLANKS_con/RTP_TABLE_NOMOREBLANKS
		symbol socket misc RTP_TABLE_NOROWS --> /main/template/constants/RTP_TABLE_NOROWS_con/RTP_TABLE_NOROWS
		symbol socket misc RTP_TABLE_CANTSORT --> /main/template/constants/RTP_TABLE_CANTSORT_con/RTP_TABLE_CANTSORT
		symbol socket misc RTP_NOTINAROOM --> /main/template/constants/RTP_NOTINAROOM_con/RTP_NOTINAROOM
		symbol socket misc RTP_BADTOPIC --> /main/template/constants/RTP_BADTOPIC_con/RTP_BADTOPIC
		symbol socket misc RTP_ROUTELESS --> /main/template/constants/RTP_ROUTELESS_con/RTP_ROUTELESS
		symbol socket misc RTP_PROPOFNOTHING --> /main/template/constants/RTP_PROPOFNOTHING_con/RTP_PROPOFNOTHING
		symbol socket misc RTP_DECIDEONWRONGKIND --> /main/template/constants/RTP_DECIDEONWRONGKIND_con/RTP_DECIDEONWRONGKIND
		symbol socket misc RTP_DECIDEONNOTHING --> /main/template/constants/RTP_DECIDEONNOTHING_con/RTP_DECIDEONNOTHING
		symbol socket misc RTP_TABLE_CANTSAVE --> /main/template/constants/RTP_TABLE_CANTSAVE_con/RTP_TABLE_CANTSAVE
		symbol socket misc RTP_TABLE_WONTFIT --> /main/template/constants/RTP_TABLE_WONTFIT_con/RTP_TABLE_WONTFIT
		symbol socket misc RTP_TABLE_BADFILE --> /main/template/constants/RTP_TABLE_BADFILE_con/RTP_TABLE_BADFILE
		symbol socket misc RTP_LOWLEVELERROR --> /main/template/constants/RTP_LOWLEVELERROR_con/RTP_LOWLEVELERROR
		symbol socket misc RTP_DONTIGNORETURNSEQUENCE --> /main/template/constants/RTP_DONTIGNORETURNSEQUENCE_con/RTP_DONTIGNORETURNSEQUENCE
		symbol socket misc RTP_SAYINVALIDSNIPPET --> /main/template/constants/RTP_SAYINVALIDSNIPPET_con/RTP_SAYINVALIDSNIPPET
		symbol socket misc RTP_SPLICEINVALIDSNIPPET --> /main/template/constants/RTP_SPLICEINVALIDSNIPPET_con/RTP_SPLICEINVALIDSNIPPET
		symbol socket misc RTP_INCLUDEINVALIDSNIPPET --> /main/template/constants/RTP_INCLUDEINVALIDSNIPPET_con/RTP_INCLUDEINVALIDSNIPPET
		symbol socket misc RTP_LISTWRITERMEMORY --> /main/template/constants/RTP_LISTWRITERMEMORY_con/RTP_LISTWRITERMEMORY
		symbol socket misc RTP_CANTREMOVEPLAYER --> /main/template/constants/RTP_CANTREMOVEPLAYER_con/RTP_CANTREMOVEPLAYER
		symbol socket misc RTP_CANTREMOVEDOORS --> /main/template/constants/RTP_CANTREMOVEDOORS_con/RTP_CANTREMOVEDOORS
		symbol socket misc RTP_CANTCHANGEOFFSTAGE --> /main/template/constants/RTP_CANTCHANGEOFFSTAGE_con/RTP_CANTCHANGEOFFSTAGE
		symbol socket misc RTP_MSTACKMEMORY --> /main/template/constants/RTP_MSTACKMEMORY_con/RTP_MSTACKMEMORY
		symbol socket misc RTP_TYPECHECK --> /main/template/constants/RTP_TYPECHECK_con/RTP_TYPECHECK
		symbol socket misc RTP_FILEIOERROR --> /main/template/constants/RTP_FILEIOERROR_con/RTP_FILEIOERROR
		symbol socket misc RTP_HEAPERROR --> /main/template/constants/RTP_HEAPERROR_con/RTP_HEAPERROR
		symbol socket misc RTP_LISTRANGEERROR --> /main/template/constants/RTP_LISTRANGEERROR_con/RTP_LISTRANGEERROR
		symbol socket misc RTP_REGEXPSYNTAXERROR --> /main/template/constants/RTP_REGEXPSYNTAXERROR_con/RTP_REGEXPSYNTAXERROR
		symbol socket misc RTP_NOGLULXUNICODE --> /main/template/constants/RTP_NOGLULXUNICODE_con/RTP_NOGLULXUNICODE
		symbol socket misc RTP_BACKDROPONLY --> /main/template/constants/RTP_BACKDROPONLY_con/RTP_BACKDROPONLY
		symbol socket misc RTP_NOTTHING --> /main/template/constants/RTP_NOTTHING_con/RTP_NOTTHING
		symbol socket misc RTP_SCENEHASNTSTARTED --> /main/template/constants/RTP_SCENEHASNTSTARTED_con/RTP_SCENEHASNTSTARTED
		symbol socket misc RTP_SCENEHASNTENDED --> /main/template/constants/RTP_SCENEHASNTENDED_con/RTP_SCENEHASNTENDED
		symbol socket misc RTP_NEGATIVEROOT --> /main/template/constants/RTP_NEGATIVEROOT_con/RTP_NEGATIVEROOT
		symbol socket misc RTP_TABLE_CANTRUNTHROUGH --> /main/template/constants/RTP_TABLE_CANTRUNTHROUGH_con/RTP_TABLE_CANTRUNTHROUGH
		symbol socket misc RTP_CANTITERATE --> /main/template/constants/RTP_CANTITERATE_con/RTP_CANTITERATE
		symbol socket misc RTP_WRONGASSIGNEDKIND --> /main/template/constants/RTP_WRONGASSIGNEDKIND_con/RTP_WRONGASSIGNEDKIND
		symbol socket misc RTP_CANTBEOFFSTAGE --> /main/template/constants/RTP_CANTBEOFFSTAGE_con/RTP_CANTBEOFFSTAGE
		symbol socket misc RTP_RELKINDVIOLATION --> /main/template/constants/RTP_RELKINDVIOLATION_con/RTP_RELKINDVIOLATION
		symbol socket misc RTP_CANTMAKEPART --> /main/template/constants/RTP_CANTMAKEPART_con/RTP_CANTMAKEPART
		symbol socket misc RTP_TEXTTOKENTOOHARD --> /main/template/constants/RTP_TEXTTOKENTOOHARD_con/RTP_TEXTTOKENTOOHARD
		symbol socket misc RTP_TABLE_NOTABLE2 --> /main/template/constants/RTP_TABLE_NOTABLE2_con/RTP_TABLE_NOTABLE2
		symbol socket misc RTP_RELATIONCHANGEIMPOSSIBLE --> /main/template/constants/RTP_RELATIONCHANGEIMPOSSIBLE_con/RTP_RELATIONCHANGEIMPOSSIBLE
		symbol socket misc RTP_RELMINIMAL --> /main/template/constants/RTP_RELMINIMAL_con/RTP_RELMINIMAL
		symbol socket misc RTP_LISTSIZENEGATIVE --> /main/template/constants/RTP_LISTSIZENEGATIVE_con/RTP_LISTSIZENEGATIVE
		symbol socket misc RTP_REGIONSNOTADJACENT --> /main/template/constants/RTP_REGIONSNOTADJACENT_con/RTP_REGIONSNOTADJACENT
		symbol socket misc STARTING_VIRTUAL_MACHINE_ACT --> /main/template/constants/STARTING_VIRTUAL_MACHINE_ACT_con/STARTING_VIRTUAL_MACHINE_ACT
		symbol socket misc PRINTING_RESPONSE_ACT --> /main/template/constants/PRINTING_RESPONSE_ACT_con/PRINTING_RESPONSE_ACT
		symbol socket misc PRINTING_THE_NAME_ACT --> /main/template/constants/PRINTING_THE_NAME_ACT_con/PRINTING_THE_NAME_ACT
		symbol socket misc PRINTING_THE_PLURAL_NAME_ACT --> /main/template/constants/PRINTING_THE_PLURAL_NAME_ACT_con/PRINTING_THE_PLURAL_NAME_ACT
		symbol socket misc PRINTING_A_NUMBER_OF_ACT --> /main/template/constants/PRINTING_A_NUMBER_OF_ACT_con/PRINTING_A_NUMBER_OF_ACT
		symbol socket misc PRINTING_ROOM_DESC_DETAILS_ACT --> /main/template/constants/PRINTING_ROOM_DESC_DETAILS_ACT_con/PRINTING_ROOM_DESC_DETAILS_ACT
		symbol socket misc PRINTING_INVENTORY_DETAILS_ACT --> /main/template/constants/PRINTING_INVENTORY_DETAILS_ACT_con/PRINTING_INVENTORY_DETAILS_ACT
		symbol socket misc LISTING_CONTENTS_ACT --> /main/template/constants/LISTING_CONTENTS_ACT_con/LISTING_CONTENTS_ACT
		symbol socket misc GROUPING_TOGETHER_ACT --> /main/template/constants/GROUPING_TOGETHER_ACT_con/GROUPING_TOGETHER_ACT
		symbol socket misc WRITING_A_PARAGRAPH_ABOUT_ACT --> /main/template/constants/WRITING_A_PARAGRAPH_ABOUT_ACT_con/WRITING_A_PARAGRAPH_ABOUT_ACT
		symbol socket misc LISTING_NONDESCRIPT_ITEMS_ACT --> /main/template/constants/LISTING_NONDESCRIPT_ITEMS_ACT_con/LISTING_NONDESCRIPT_ITEMS_ACT
		symbol socket misc PRINTING_NAME_OF_DARK_ROOM_ACT --> /main/template/constants/PRINTING_NAME_OF_DARK_ROOM_ACT_con/PRINTING_NAME_OF_DARK_ROOM_ACT
		symbol socket misc PRINTING_DESC_OF_DARK_ROOM_ACT --> /main/template/constants/PRINTING_DESC_OF_DARK_ROOM_ACT_con/PRINTING_DESC_OF_DARK_ROOM_ACT
		symbol socket misc PRINTING_NEWS_OF_DARKNESS_ACT --> /main/template/constants/PRINTING_NEWS_OF_DARKNESS_ACT_con/PRINTING_NEWS_OF_DARKNESS_ACT
		symbol socket misc PRINTING_NEWS_OF_LIGHT_ACT --> /main/template/constants/PRINTING_NEWS_OF_LIGHT_ACT_con/PRINTING_NEWS_OF_LIGHT_ACT
		symbol socket misc REFUSAL_TO_ACT_IN_DARK_ACT --> /main/template/constants/REFUSAL_TO_ACT_IN_DARK_ACT_con/REFUSAL_TO_ACT_IN_DARK_ACT
		symbol socket misc CONSTRUCTING_STATUS_LINE_ACT --> /main/template/constants/CONSTRUCTING_STATUS_LINE_ACT_con/CONSTRUCTING_STATUS_LINE_ACT
		symbol socket misc PRINTING_BANNER_TEXT_ACT --> /main/template/constants/PRINTING_BANNER_TEXT_ACT_con/PRINTING_BANNER_TEXT_ACT
		symbol socket misc READING_A_COMMAND_ACT --> /main/template/constants/READING_A_COMMAND_ACT_con/READING_A_COMMAND_ACT
		symbol socket misc DECIDING_SCOPE_ACT --> /main/template/constants/DECIDING_SCOPE_ACT_con/DECIDING_SCOPE_ACT
		symbol socket misc DECIDING_CONCEALED_POSSESS_ACT --> /main/template/constants/DECIDING_CONCEALED_POSSESS_ACT_con/DECIDING_CONCEALED_POSSESS_ACT
		symbol socket misc DECIDING_WHETHER_ALL_INC_ACT --> /main/template/constants/DECIDING_WHETHER_ALL_INC_ACT_con/DECIDING_WHETHER_ALL_INC_ACT
		symbol socket misc CLARIFYING_PARSERS_CHOICE_ACT --> /main/template/constants/CLARIFYING_PARSERS_CHOICE_ACT_con/CLARIFYING_PARSERS_CHOICE_ACT
		symbol socket misc ASKING_WHICH_DO_YOU_MEAN_ACT --> /main/template/constants/ASKING_WHICH_DO_YOU_MEAN_ACT_con/ASKING_WHICH_DO_YOU_MEAN_ACT
		symbol socket misc PRINTING_A_PARSER_ERROR_ACT --> /main/template/constants/PRINTING_A_PARSER_ERROR_ACT_con/PRINTING_A_PARSER_ERROR_ACT
		symbol socket misc SUPPLYING_A_MISSING_NOUN_ACT --> /main/template/constants/SUPPLYING_A_MISSING_NOUN_ACT_con/SUPPLYING_A_MISSING_NOUN_ACT
		symbol socket misc SUPPLYING_A_MISSING_SECOND_ACT --> /main/template/constants/SUPPLYING_A_MISSING_SECOND_ACT_con/SUPPLYING_A_MISSING_SECOND_ACT
		symbol socket misc IMPLICITLY_TAKING_ACT --> /main/template/constants/IMPLICITLY_TAKING_ACT_con/IMPLICITLY_TAKING_ACT
		symbol socket misc AMUSING_A_VICTORIOUS_PLAYER_ACT --> /main/template/constants/AMUSING_A_VICTORIOUS_PLAYER_ACT_con/AMUSING_A_VICTORIOUS_PLAYER_ACT
		symbol socket misc PRINTING_PLAYERS_OBITUARY_ACT --> /main/template/constants/PRINTING_PLAYERS_OBITUARY_ACT_con/PRINTING_PLAYERS_OBITUARY_ACT
		symbol socket misc DEALING_WITH_FINAL_QUESTION_ACT --> /main/template/constants/DEALING_WITH_FINAL_QUESTION_ACT_con/DEALING_WITH_FINAL_QUESTION_ACT
		symbol socket misc PRINTING_LOCALE_DESCRIPTION_ACT --> /main/template/constants/PRINTING_LOCALE_DESCRIPTION_ACT_con/PRINTING_LOCALE_DESCRIPTION_ACT
		symbol socket misc CHOOSING_NOTABLE_LOCALE_OBJ_ACT --> /main/template/constants/CHOOSING_NOTABLE_LOCALE_OBJ_ACT_con/CHOOSING_NOTABLE_LOCALE_OBJ_ACT
		symbol socket misc PRINTING_LOCALE_PARAGRAPH_ACT --> /main/template/constants/PRINTING_LOCALE_PARAGRAPH_ACT_con/PRINTING_LOCALE_PARAGRAPH_ACT
		symbol socket misc STARTUP_RB --> /main/template/constants/STARTUP_RB_con/STARTUP_RB
		symbol socket misc TURN_SEQUENCE_RB --> /main/template/constants/TURN_SEQUENCE_RB_con/TURN_SEQUENCE_RB
		symbol socket misc SHUTDOWN_RB --> /main/template/constants/SHUTDOWN_RB_con/SHUTDOWN_RB
		symbol socket misc WHEN_PLAY_BEGINS_RB --> /main/template/constants/WHEN_PLAY_BEGINS_RB_con/WHEN_PLAY_BEGINS_RB
		symbol socket misc WHEN_PLAY_ENDS_RB --> /main/template/constants/WHEN_PLAY_ENDS_RB_con/WHEN_PLAY_ENDS_RB
		symbol socket misc WHEN_SCENE_BEGINS_RB --> /main/template/constants/WHEN_SCENE_BEGINS_RB_con/WHEN_SCENE_BEGINS_RB
		symbol socket misc WHEN_SCENE_ENDS_RB --> /main/template/constants/WHEN_SCENE_ENDS_RB_con/WHEN_SCENE_ENDS_RB
		symbol socket misc ACTION_PROCESSING_RB --> /main/template/constants/ACTION_PROCESSING_RB_con/ACTION_PROCESSING_RB
		symbol socket misc SETTING_ACTION_VARIABLES_RB --> /main/template/constants/SETTING_ACTION_VARIABLES_RB_con/SETTING_ACTION_VARIABLES_RB
		symbol socket misc SPECIFIC_ACTION_PROCESSING_RB --> /main/template/constants/SPECIFIC_ACTION_PROCESSING_RB_con/SPECIFIC_ACTION_PROCESSING_RB
		symbol socket misc ACCESSIBILITY_RB --> /main/template/constants/ACCESSIBILITY_RB_con/ACCESSIBILITY_RB
		symbol socket misc REACHING_INSIDE_RB --> /main/template/constants/REACHING_INSIDE_RB_con/REACHING_INSIDE_RB
		symbol socket misc REACHING_OUTSIDE_RB --> /main/template/constants/REACHING_OUTSIDE_RB_con/REACHING_OUTSIDE_RB
		symbol socket misc VISIBLE_RB --> /main/template/constants/VISIBLE_RB_con/VISIBLE_RB
		symbol socket misc PERSUADE_RB --> /main/template/constants/PERSUADE_RB_con/PERSUADE_RB
		symbol socket misc UNSUCCESSFUL_ATTEMPT_RB --> /main/template/constants/UNSUCCESSFUL_ATTEMPT_RB_con/UNSUCCESSFUL_ATTEMPT_RB
		symbol socket misc AFTER_RB --> /main/template/constants/AFTER_RB_con/AFTER_RB
		symbol socket misc REPORT_RB --> /main/template/constants/REPORT_RB_con/REPORT_RB
		symbol socket misc MULTIPLE_ACTION_PROCESSING_RB --> /main/template/constants/MULTIPLE_ACTION_PROCESSING_RB_con/MULTIPLE_ACTION_PROCESSING_RB
		symbol socket misc STUCK_PE --> /main/template/constants/STUCK_PE_con/STUCK_PE
		symbol socket misc UPTO_PE --> /main/template/constants/UPTO_PE_con/UPTO_PE
		symbol socket misc NUMBER_PE --> /main/template/constants/NUMBER_PE_con/NUMBER_PE
		symbol socket misc ANIMA_PE --> /main/template/constants/ANIMA_PE_con/ANIMA_PE
		symbol socket misc CANTSEE_PE --> /main/template/constants/CANTSEE_PE_con/CANTSEE_PE
		symbol socket misc TOOLIT_PE --> /main/template/constants/TOOLIT_PE_con/TOOLIT_PE
		symbol socket misc NOTHELD_PE --> /main/template/constants/NOTHELD_PE_con/NOTHELD_PE
		symbol socket misc MULTI_PE --> /main/template/constants/MULTI_PE_con/MULTI_PE
		symbol socket misc MMULTI_PE --> /main/template/constants/MMULTI_PE_con/MMULTI_PE
		symbol socket misc VAGUE_PE --> /main/template/constants/VAGUE_PE_con/VAGUE_PE
		symbol socket misc EXCEPT_PE --> /main/template/constants/EXCEPT_PE_con/EXCEPT_PE
		symbol socket misc VERB_PE --> /main/template/constants/VERB_PE_con/VERB_PE
		symbol socket misc SCENERY_PE --> /main/template/constants/SCENERY_PE_con/SCENERY_PE
		symbol socket misc ITGONE_PE --> /main/template/constants/ITGONE_PE_con/ITGONE_PE
		symbol socket misc JUNKAFTER_PE --> /main/template/constants/JUNKAFTER_PE_con/JUNKAFTER_PE
		symbol socket misc TOOFEW_PE --> /main/template/constants/TOOFEW_PE_con/TOOFEW_PE
		symbol socket misc NOTHING_PE --> /main/template/constants/NOTHING_PE_con/NOTHING_PE
		symbol socket misc ASKSCOPE_PE --> /main/template/constants/ASKSCOPE_PE_con/ASKSCOPE_PE
		symbol socket misc NOTINCONTEXT_PE --> /main/template/constants/NOTINCONTEXT_PE_con/NOTINCONTEXT_PE
		symbol socket misc BLANKLINE_PE --> /main/template/constants/BLANKLINE_PE_con/BLANKLINE_PE
		symbol socket misc ANIMAAGAIN_PE --> /main/template/constants/ANIMAAGAIN_PE_con/ANIMAAGAIN_PE
		symbol socket misc COMMABEGIN_PE --> /main/template/constants/COMMABEGIN_PE_con/COMMABEGIN_PE
		symbol socket misc MISSINGPERSON_PE --> /main/template/constants/MISSINGPERSON_PE_con/MISSINGPERSON_PE
		symbol socket misc ANIMALISTEN_PE --> /main/template/constants/ANIMALISTEN_PE_con/ANIMALISTEN_PE
		symbol socket misc TOTALK_PE --> /main/template/constants/TOTALK_PE_con/TOTALK_PE
		symbol socket misc PARSING_REASON --> /main/template/constants/PARSING_REASON_con/PARSING_REASON
		symbol socket misc TALKING_REASON --> /main/template/constants/TALKING_REASON_con/TALKING_REASON
		symbol socket misc EACH_TURN_REASON --> /main/template/constants/EACH_TURN_REASON_con/EACH_TURN_REASON
		symbol socket misc LOOPOVERSCOPE_REASON --> /main/template/constants/LOOPOVERSCOPE_REASON_con/LOOPOVERSCOPE_REASON
		symbol socket misc TESTSCOPE_REASON --> /main/template/constants/TESTSCOPE_REASON_con/TESTSCOPE_REASON
		symbol socket misc ILLEGAL_TT --> /main/template/constants/ILLEGAL_TT_con/ILLEGAL_TT
		symbol socket misc ELEMENTARY_TT --> /main/template/constants/ELEMENTARY_TT_con/ELEMENTARY_TT
		symbol socket misc PREPOSITION_TT --> /main/template/constants/PREPOSITION_TT_con/PREPOSITION_TT
		symbol socket misc ROUTINE_FILTER_TT --> /main/template/constants/ROUTINE_FILTER_TT_con/ROUTINE_FILTER_TT
		symbol socket misc ATTR_FILTER_TT --> /main/template/constants/ATTR_FILTER_TT_con/ATTR_FILTER_TT
		symbol socket misc SCOPE_TT --> /main/template/constants/SCOPE_TT_con/SCOPE_TT
		symbol socket misc GPR_TT --> /main/template/constants/GPR_TT_con/GPR_TT
		symbol socket misc NOUN_TOKEN --> /main/template/constants/NOUN_TOKEN_con/NOUN_TOKEN
		symbol socket misc HELD_TOKEN --> /main/template/constants/HELD_TOKEN_con/HELD_TOKEN
		symbol socket misc MULTI_TOKEN --> /main/template/constants/MULTI_TOKEN_con/MULTI_TOKEN
		symbol socket misc MULTIHELD_TOKEN --> /main/template/constants/MULTIHELD_TOKEN_con/MULTIHELD_TOKEN
		symbol socket misc MULTIEXCEPT_TOKEN --> /main/template/constants/MULTIEXCEPT_TOKEN_con/MULTIEXCEPT_TOKEN
		symbol socket misc MULTIINSIDE_TOKEN --> /main/template/constants/MULTIINSIDE_TOKEN_con/MULTIINSIDE_TOKEN
		symbol socket misc CREATURE_TOKEN --> /main/template/constants/CREATURE_TOKEN_con/CREATURE_TOKEN
		symbol socket misc SPECIAL_TOKEN --> /main/template/constants/SPECIAL_TOKEN_con/SPECIAL_TOKEN
		symbol socket misc NUMBER_TOKEN --> /main/template/constants/NUMBER_TOKEN_con/NUMBER_TOKEN
		symbol socket misc TOPIC_TOKEN --> /main/template/constants/TOPIC_TOKEN_con/TOPIC_TOKEN
		symbol socket misc ENDIT_TOKEN --> /main/template/constants/ENDIT_TOKEN_con/ENDIT_TOKEN
		symbol socket misc GPR_FAIL --> /main/template/constants/GPR_FAIL_con/GPR_FAIL
		symbol socket misc GPR_PREPOSITION --> /main/template/constants/GPR_PREPOSITION_con/GPR_PREPOSITION
		symbol socket misc GPR_NUMBER --> /main/template/constants/GPR_NUMBER_con/GPR_NUMBER
		symbol socket misc GPR_MULTIPLE --> /main/template/constants/GPR_MULTIPLE_con/GPR_MULTIPLE
		symbol socket misc GPR_REPARSE --> /main/template/constants/GPR_REPARSE_con/GPR_REPARSE
		symbol plug misc plug_00016 --? REPARSE_CODE
		symbol socket misc GPR_NOUN --> /main/template/constants/GPR_NOUN_con/GPR_NOUN
		symbol socket misc GPR_HELD --> /main/template/constants/GPR_HELD_con/GPR_HELD
		symbol socket misc GPR_MULTI --> /main/template/constants/GPR_MULTI_con/GPR_MULTI
		symbol socket misc GPR_MULTIHELD --> /main/template/constants/GPR_MULTIHELD_con/GPR_MULTIHELD
		symbol socket misc GPR_MULTIEXCEPT --> /main/template/constants/GPR_MULTIEXCEPT_con/GPR_MULTIEXCEPT
		symbol socket misc GPR_MULTIINSIDE --> /main/template/constants/GPR_MULTIINSIDE_con/GPR_MULTIINSIDE
		symbol socket misc GPR_CREATURE --> /main/template/constants/GPR_CREATURE_con/GPR_CREATURE
		symbol socket misc NEWLINE_BIT --> /main/template/constants/NEWLINE_BIT_con/NEWLINE_BIT
		symbol socket misc INDENT_BIT --> /main/template/constants/INDENT_BIT_con/INDENT_BIT
		symbol socket misc FULLINV_BIT --> /main/template/constants/FULLINV_BIT_con/FULLINV_BIT
		symbol socket misc ENGLISH_BIT --> /main/template/constants/ENGLISH_BIT_con/ENGLISH_BIT
		symbol socket misc RECURSE_BIT --> /main/template/constants/RECURSE_BIT_con/RECURSE_BIT
		symbol socket misc ALWAYS_BIT --> /main/template/constants/ALWAYS_BIT_con/ALWAYS_BIT
		symbol socket misc TERSE_BIT --> /main/template/constants/TERSE_BIT_con/TERSE_BIT
		symbol socket misc PARTINV_BIT --> /main/template/constants/PARTINV_BIT_con/PARTINV_BIT
		symbol socket misc DEFART_BIT --> /main/template/constants/DEFART_BIT_con/DEFART_BIT
		symbol socket misc WORKFLAG_BIT --> /main/template/constants/WORKFLAG_BIT_con/WORKFLAG_BIT
		symbol socket misc ISARE_BIT --> /main/template/constants/ISARE_BIT_con/ISARE_BIT
		symbol socket misc CONCEAL_BIT --> /main/template/constants/CONCEAL_BIT_con/CONCEAL_BIT
		symbol socket misc NOARTICLE_BIT --> /main/template/constants/NOARTICLE_BIT_con/NOARTICLE_BIT
		symbol socket misc EXTRAINDENT_BIT --> /main/template/constants/EXTRAINDENT_BIT_con/EXTRAINDENT_BIT
		symbol socket misc CFIRSTART_BIT --> /main/template/constants/CFIRSTART_BIT_con/CFIRSTART_BIT
		symbol socket misc QUARTER_HOUR --> /main/template/constants/QUARTER_HOUR_con/QUARTER_HOUR
		symbol socket misc HALF_HOUR --> /main/template/constants/HALF_HOUR_con/HALF_HOUR
		symbol socket misc ONE_HOUR --> /main/template/constants/ONE_HOUR_con/ONE_HOUR
		symbol socket misc TWELVE_HOURS --> /main/template/constants/TWELVE_HOURS_con/TWELVE_HOURS
		symbol socket misc TWENTY_FOUR_HOURS --> /main/template/constants/TWENTY_FOUR_HOURS_con/TWENTY_FOUR_HOURS
		symbol socket misc EMPTY_TEXT_PACKED --> /main/template/constants/EMPTY_TEXT_PACKED_con/EMPTY_TEXT_PACKED
		symbol socket misc EMPTY_TEXT_VALUE --> /main/template/arrays/EMPTY_TEXT_VALUE_arr/EMPTY_TEXT_VALUE
		symbol plug misc plug_00017 --> /main/connectors/CONSTANT_PACKED_TEXT_STORAGE
		symbol socket misc TheEmptyTable --> /main/template/arrays/TheEmptyTable_arr/TheEmptyTable
		symbol socket misc list_filter_permits --> /main/template/constants/list_filter_permits_con/list_filter_permits
		symbol socket misc ActionCount --> /main/template/constants/ActionCount_con/ActionCount
		symbol plug misc plug_00018 --? CCOUNT_ACTION_NAME
		symbol socket misc ##ListMiscellany --> /main/template/constants/##ListMiscellany_con/##ListMiscellany
		symbol socket misc ##Miscellany --> /main/template/constants/##Miscellany_con/##Miscellany
		symbol socket misc ##PluralFound --> /main/template/constants/##PluralFound_con/##PluralFound
		symbol socket misc ##TheSame --> /main/template/constants/##TheSame_con/##TheSame
		symbol socket misc deferred_calling_list --> /main/template/arrays/deferred_calling_list_arr/deferred_calling_list
		symbol socket misc BLOCKV_STACK_SIZE --> /main/template/constants/BLOCKV_STACK_SIZE_con/BLOCKV_STACK_SIZE
		symbol socket misc blockv_stack --> /main/template/arrays/blockv_stack_arr/blockv_stack
		symbol socket misc LocalParking --> /main/template/arrays/LocalParking_arr/LocalParking
		symbol socket misc NUMBER_SCENES_CREATED --> /main/template/constants/NUMBER_SCENES_CREATED_con/NUMBER_SCENES_CREATED
		symbol plug misc plug_00019 --? ICOUNT_SCENE
		symbol socket misc SCENE_ARRAY_SIZE --> /main/template/constants/SCENE_ARRAY_SIZE_con/SCENE_ARRAY_SIZE
		symbol socket misc scene_started --> /main/template/arrays/scene_started_arr/scene_started
		symbol socket misc scene_ended --> /main/template/arrays/scene_ended_arr/scene_ended
		symbol socket misc scene_status --> /main/template/arrays/scene_status_arr/scene_status
		symbol socket misc scene_endings --> /main/template/arrays/scene_endings_arr/scene_endings
		symbol socket misc scene_latest_ending --> /main/template/arrays/scene_latest_ending_arr/scene_latest_ending
		symbol socket misc multiple_object --> /main/template/arrays/multiple_object_arr/multiple_object
		symbol plug misc plug_00020 --? MATCH_LIST_WORDS
		symbol socket misc parser_results --> /main/template/arrays/parser_results_arr/parser_results
		symbol socket misc DEFAULT_LOOKMODE --> /main/template/constants/DEFAULT_LOOKMODE_con/DEFAULT_LOOKMODE
		symbol socket misc INPUT_BUFFER_LEN --> /main/template/constants/INPUT_BUFFER_LEN_con/INPUT_BUFFER_LEN
		symbol socket misc buffer --> /main/template/arrays/buffer_arr/buffer
		symbol socket misc buffer2 --> /main/template/arrays/buffer2_arr/buffer2
		symbol socket misc buffer3 --> /main/template/arrays/buffer3_arr/buffer3
		symbol socket misc parse --> /main/template/arrays/parse_arr/parse
		symbol socket misc parse2 --> /main/template/arrays/parse2_arr/parse2
		symbol socket misc Compass --> /main/template/constants/Compass_con/Compass
		symbol socket misc AGAIN1__WD --> /main/template/constants/AGAIN1__WD_con/AGAIN1__WD
		symbol socket misc AGAIN2__WD --> /main/template/constants/AGAIN2__WD_con/AGAIN2__WD
		symbol socket misc AGAIN3__WD --> /main/template/constants/AGAIN3__WD_con/AGAIN3__WD
		symbol socket misc OOPS1__WD --> /main/template/constants/OOPS1__WD_con/OOPS1__WD
		symbol socket misc OOPS2__WD --> /main/template/constants/OOPS2__WD_con/OOPS2__WD
		symbol socket misc OOPS3__WD --> /main/template/constants/OOPS3__WD_con/OOPS3__WD
		symbol socket misc UNDO1__WD --> /main/template/constants/UNDO1__WD_con/UNDO1__WD
		symbol socket misc UNDO2__WD --> /main/template/constants/UNDO2__WD_con/UNDO2__WD
		symbol socket misc UNDO3__WD --> /main/template/constants/UNDO3__WD_con/UNDO3__WD
		symbol socket misc ALL1__WD --> /main/template/constants/ALL1__WD_con/ALL1__WD
		symbol socket misc ALL2__WD --> /main/template/constants/ALL2__WD_con/ALL2__WD
		symbol socket misc ALL3__WD --> /main/template/constants/ALL3__WD_con/ALL3__WD
		symbol socket misc ALL4__WD --> /main/template/constants/ALL4__WD_con/ALL4__WD
		symbol socket misc ALL5__WD --> /main/template/constants/ALL5__WD_con/ALL5__WD
		symbol socket misc AND1__WD --> /main/template/constants/AND1__WD_con/AND1__WD
		symbol socket misc AND2__WD --> /main/template/constants/AND2__WD_con/AND2__WD
		symbol socket misc AND3__WD --> /main/template/constants/AND3__WD_con/AND3__WD
		symbol socket misc BUT1__WD --> /main/template/constants/BUT1__WD_con/BUT1__WD
		symbol socket misc BUT2__WD --> /main/template/constants/BUT2__WD_con/BUT2__WD
		symbol socket misc BUT3__WD --> /main/template/constants/BUT3__WD_con/BUT3__WD
		symbol socket misc ME1__WD --> /main/template/constants/ME1__WD_con/ME1__WD
		symbol socket misc ME2__WD --> /main/template/constants/ME2__WD_con/ME2__WD
		symbol socket misc ME3__WD --> /main/template/constants/ME3__WD_con/ME3__WD
		symbol socket misc OF1__WD --> /main/template/constants/OF1__WD_con/OF1__WD
		symbol socket misc OF2__WD --> /main/template/constants/OF2__WD_con/OF2__WD
		symbol socket misc OF3__WD --> /main/template/constants/OF3__WD_con/OF3__WD
		symbol socket misc OF4__WD --> /main/template/constants/OF4__WD_con/OF4__WD
		symbol socket misc OTHER1__WD --> /main/template/constants/OTHER1__WD_con/OTHER1__WD
		symbol socket misc OTHER2__WD --> /main/template/constants/OTHER2__WD_con/OTHER2__WD
		symbol socket misc OTHER3__WD --> /main/template/constants/OTHER3__WD_con/OTHER3__WD
		symbol socket misc THEN1__WD --> /main/template/constants/THEN1__WD_con/THEN1__WD
		symbol socket misc THEN2__WD --> /main/template/constants/THEN2__WD_con/THEN2__WD
		symbol socket misc THEN3__WD --> /main/template/constants/THEN3__WD_con/THEN3__WD
		symbol socket misc NO1__WD --> /main/template/constants/NO1__WD_con/NO1__WD
		symbol socket misc NO2__WD --> /main/template/constants/NO2__WD_con/NO2__WD
		symbol socket misc NO3__WD --> /main/template/constants/NO3__WD_con/NO3__WD
		symbol socket misc YES1__WD --> /main/template/constants/YES1__WD_con/YES1__WD
		symbol socket misc YES2__WD --> /main/template/constants/YES2__WD_con/YES2__WD
		symbol socket misc YES3__WD --> /main/template/constants/YES3__WD_con/YES3__WD
		symbol socket misc AMUSING__WD --> /main/template/constants/AMUSING__WD_con/AMUSING__WD
		symbol socket misc FULLSCORE1__WD --> /main/template/constants/FULLSCORE1__WD_con/FULLSCORE1__WD
		symbol socket misc FULLSCORE2__WD --> /main/template/constants/FULLSCORE2__WD_con/FULLSCORE2__WD
		symbol socket misc QUIT1__WD --> /main/template/constants/QUIT1__WD_con/QUIT1__WD
		symbol socket misc QUIT2__WD --> /main/template/constants/QUIT2__WD_con/QUIT2__WD
		symbol socket misc RESTART__WD --> /main/template/constants/RESTART__WD_con/RESTART__WD
		symbol socket misc RESTORE__WD --> /main/template/constants/RESTORE__WD_con/RESTORE__WD
		symbol socket misc LanguagePronouns --> /main/template/arrays/LanguagePronouns_arr/LanguagePronouns
		symbol plug misc plug_00021 --? NULL
		symbol plug misc plug_00022 --? NULL
		symbol plug misc plug_00023 --? NULL
		symbol plug misc plug_00024 --? NULL
		symbol socket misc LanguageDescriptors --> /main/template/arrays/LanguageDescriptors_arr/LanguageDescriptors
		symbol plug misc plug_00025 --? NULL
		symbol plug misc plug_00026 --? NULL
		symbol plug misc plug_00027 --? NULL
		symbol plug misc plug_00028 --? NULL
		symbol plug misc plug_00029 --? NULL
		symbol plug misc plug_00030 --? NULL
		symbol plug misc plug_00031 --? NULL
		symbol socket misc LanguageNumbers --> /main/template/arrays/LanguageNumbers_arr/LanguageNumbers
		symbol socket misc LanguageAnimateGender --> /main/template/constants/LanguageAnimateGender_con/LanguageAnimateGender
		symbol socket misc LanguageInanimateGender --> /main/template/constants/LanguageInanimateGender_con/LanguageInanimateGender
		symbol socket misc LanguageContractionForms --> /main/template/constants/LanguageContractionForms_con/LanguageContractionForms
		symbol socket misc LanguageArticles --> /main/template/arrays/LanguageArticles_arr/LanguageArticles
		symbol socket misc LanguageGNAsToArticles --> /main/template/arrays/LanguageGNAsToArticles_arr/LanguageGNAsToArticles
		symbol socket misc LanguageCases --> /main/template/constants/LanguageCases_con/LanguageCases
		symbol socket misc thedark --> /main/template/constants/thedark_con/thedark
		symbol socket misc REQUISITION_STACK_SIZE --> /main/template/constants/REQUISITION_STACK_SIZE_con/REQUISITION_STACK_SIZE
		symbol plug misc plug_00032 --? ICOUNT_OBJECT
		symbol socket misc requisition_stack --> /main/template/arrays/requisition_stack_arr/requisition_stack
		symbol socket misc LWI_Storage --> /main/template/arrays/LWI_Storage_arr/LWI_Storage
		symbol socket misc SEEK_ITF --> /main/template/constants/SEEK_ITF_con/SEEK_ITF
		symbol socket misc ADVANCE_ITF --> /main/template/constants/ADVANCE_ITF_con/ADVANCE_ITF
		symbol socket misc COALESCE_ITF --> /main/template/constants/COALESCE_ITF_con/COALESCE_ITF
		symbol socket misc START_ITF --> /main/template/constants/START_ITF_con/START_ITF
		symbol socket misc R_DecimalNumber --> /main/template/constants/R_DecimalNumber_con/R_DecimalNumber
		symbol socket misc R_PrintTimeOfDay --> /main/template/constants/R_PrintTimeOfDay_con/R_PrintTimeOfDay
		symbol socket misc InformParser --> /main/template/constants/InformParser_con/InformParser
		symbol socket misc pattern --> /main/template/arrays/pattern_arr/pattern
		symbol socket misc pattern2 --> /main/template/arrays/pattern2_arr/pattern2
		symbol socket misc line_ttype --> /main/template/arrays/line_ttype_arr/line_ttype
		symbol socket misc line_tdata --> /main/template/arrays/line_tdata_arr/line_tdata
		symbol socket misc line_token --> /main/template/arrays/line_token_arr/line_token
		symbol socket misc oops_workspace --> /main/template/arrays/oops_workspace_arr/oops_workspace
		symbol socket misc PATTERN_NULL --> /main/template/constants/PATTERN_NULL_con/PATTERN_NULL
		symbol socket misc INDEF_ALL_WANTED --> /main/template/constants/INDEF_ALL_WANTED_con/INDEF_ALL_WANTED
		symbol socket misc comma_word --> /main/template/constants/comma_word_con/comma_word
		symbol socket misc match_list --> /main/template/arrays/match_list_arr/match_list
		symbol plug misc plug_00033 --? MATCH_LIST_WORDS
		symbol socket misc match_classes --> /main/template/arrays/match_classes_arr/match_classes
		symbol plug misc plug_00034 --? MATCH_LIST_WORDS
		symbol socket misc match_scores --> /main/template/arrays/match_scores_arr/match_scores
		symbol plug misc plug_00035 --? MATCH_LIST_WORDS
		symbol socket misc OTHER_BIT --> /main/template/constants/OTHER_BIT_con/OTHER_BIT
		symbol socket misc MY_BIT --> /main/template/constants/MY_BIT_con/MY_BIT
		symbol socket misc THAT_BIT --> /main/template/constants/THAT_BIT_con/THAT_BIT
		symbol socket misc PLURAL_BIT --> /main/template/constants/PLURAL_BIT_con/PLURAL_BIT
		symbol socket misc LIT_BIT --> /main/template/constants/LIT_BIT_con/LIT_BIT
		symbol socket misc UNLIT_BIT --> /main/template/constants/UNLIT_BIT_con/UNLIT_BIT
		symbol socket misc SCORE__CHOOSEOBJ --> /main/template/constants/SCORE__CHOOSEOBJ_con/SCORE__CHOOSEOBJ
		symbol socket misc SCORE__IFGOOD --> /main/template/constants/SCORE__IFGOOD_con/SCORE__IFGOOD
		symbol socket misc SCORE__UNCONCEALED --> /main/template/constants/SCORE__UNCONCEALED_con/SCORE__UNCONCEALED
		symbol socket misc SCORE__BESTLOC --> /main/template/constants/SCORE__BESTLOC_con/SCORE__BESTLOC
		symbol socket misc SCORE__NEXTBESTLOC --> /main/template/constants/SCORE__NEXTBESTLOC_con/SCORE__NEXTBESTLOC
		symbol socket misc SCORE__NOTCOMPASS --> /main/template/constants/SCORE__NOTCOMPASS_con/SCORE__NOTCOMPASS
		symbol socket misc SCORE__NOTSCENERY --> /main/template/constants/SCORE__NOTSCENERY_con/SCORE__NOTSCENERY
		symbol socket misc SCORE__NOTACTOR --> /main/template/constants/SCORE__NOTACTOR_con/SCORE__NOTACTOR
		symbol socket misc SCORE__GNA --> /main/template/constants/SCORE__GNA_con/SCORE__GNA
		symbol socket misc SCORE__DIVISOR --> /main/template/constants/SCORE__DIVISOR_con/SCORE__DIVISOR
		symbol socket misc PREFER_HELD --> /main/template/constants/PREFER_HELD_con/PREFER_HELD
		symbol socket misc HIGHEST_DPMR_SCORE --> /main/template/constants/HIGHEST_DPMR_SCORE_con/HIGHEST_DPMR_SCORE
		symbol socket misc alt_match_list --> /main/template/arrays/alt_match_list_arr/alt_match_list
		symbol plug misc plug_00036 --? MATCH_LIST_WORDS
		symbol socket misc InformLibrary --> /main/template/constants/InformLibrary_con/InformLibrary
		symbol socket misc Protect_I7_Arrays --> /main/template/arrays/Protect_I7_Arrays_arr/Protect_I7_Arrays
		symbol socket misc ACTION_PRES --> /main/template/constants/ACTION_PRES_con/ACTION_PRES
		symbol socket misc NO_INPS_PRES --> /main/template/constants/NO_INPS_PRES_con/NO_INPS_PRES
		symbol socket misc INP1_PRES --> /main/template/constants/INP1_PRES_con/INP1_PRES
		symbol socket misc INP2_PRES --> /main/template/constants/INP2_PRES_con/INP2_PRES
		symbol socket misc attributed_property_offsets_SIZE --> /main/template/constants/attributed_property_offsets_SIZE_con/attributed_property_offsets_SIZE
		symbol socket misc attributed_property_offsets --> /main/template/arrays/attributed_property_offsets_arr/attributed_property_offsets
		symbol socket misc valued_property_offsets_SIZE --> /main/template/constants/valued_property_offsets_SIZE_con/valued_property_offsets_SIZE
		symbol plug misc plug_00037 --? CCOUNT_PROPERTY
		symbol socket misc valued_property_offsets --> /main/template/arrays/valued_property_offsets_arr/valued_property_offsets
		symbol socket misc AD_ACTION --> /main/template/constants/AD_ACTION_con/AD_ACTION
		symbol socket misc AD_REQUIREMENTS --> /main/template/constants/AD_REQUIREMENTS_con/AD_REQUIREMENTS
		symbol socket misc AD_NOUN_KOV --> /main/template/constants/AD_NOUN_KOV_con/AD_NOUN_KOV
		symbol socket misc AD_SECOND_KOV --> /main/template/constants/AD_SECOND_KOV_con/AD_SECOND_KOV
		symbol socket misc AD_VARIABLES_CREATOR --> /main/template/constants/AD_VARIABLES_CREATOR_con/AD_VARIABLES_CREATOR
		symbol socket misc AD_VARIABLES_ID --> /main/template/constants/AD_VARIABLES_ID_con/AD_VARIABLES_ID
		symbol socket misc AD_RECORD_SIZE --> /main/template/constants/AD_RECORD_SIZE_con/AD_RECORD_SIZE
		symbol socket misc TOUCH_NOUN_ABIT --> /main/template/constants/TOUCH_NOUN_ABIT_con/TOUCH_NOUN_ABIT
		symbol socket misc TOUCH_SECOND_ABIT --> /main/template/constants/TOUCH_SECOND_ABIT_con/TOUCH_SECOND_ABIT
		symbol socket misc LIGHT_ABIT --> /main/template/constants/LIGHT_ABIT_con/LIGHT_ABIT
		symbol socket misc NEED_NOUN_ABIT --> /main/template/constants/NEED_NOUN_ABIT_con/NEED_NOUN_ABIT
		symbol socket misc NEED_SECOND_ABIT --> /main/template/constants/NEED_SECOND_ABIT_con/NEED_SECOND_ABIT
		symbol socket misc OUT_OF_WORLD_ABIT --> /main/template/constants/OUT_OF_WORLD_ABIT_con/OUT_OF_WORLD_ABIT
		symbol socket misc CARRY_NOUN_ABIT --> /main/template/constants/CARRY_NOUN_ABIT_con/CARRY_NOUN_ABIT
		symbol socket misc CARRY_SECOND_ABIT --> /main/template/constants/CARRY_SECOND_ABIT_con/CARRY_SECOND_ABIT
		symbol socket misc Details_of_Specific_Action --> /main/template/arrays/Details_of_Specific_Action_arr/Details_of_Specific_Action
		symbol socket misc MAX_NESTED_ACTIVITIES --> /main/template/constants/MAX_NESTED_ACTIVITIES_con/MAX_NESTED_ACTIVITIES
		symbol socket misc activities_stack --> /main/template/arrays/activities_stack_arr/activities_stack
		symbol socket misc activity_parameters_stack --> /main/template/arrays/activity_parameters_stack_arr/activity_parameters_stack
		symbol socket misc ResourceUsageFlags --> /main/template/arrays/ResourceUsageFlags_arr/ResourceUsageFlags
		symbol plug misc plug_00038 --? ICOUNT_FIGURE_NAME
		symbol plug misc plug_00039 --? ICOUNT_SOUND_NAME
		symbol socket misc MAX_MSTACK_FRAME --> /main/template/constants/MAX_MSTACK_FRAME_con/MAX_MSTACK_FRAME
		symbol plug misc plug_00040 --? MAX_FRAME_SIZE_NEEDED
		symbol socket misc MSTACK_CAPACITY --> /main/template/constants/MSTACK_CAPACITY_con/MSTACK_CAPACITY
		symbol socket misc MSTACK_SIZE --> /main/template/constants/MSTACK_SIZE_con/MSTACK_SIZE
		symbol socket misc MStack --> /main/template/arrays/MStack_arr/MStack
		symbol socket misc T_SL_Score_Moves --> /main/template/arrays/T_SL_Score_Moves_arr/T_SL_Score_Moves
		symbol plug misc plug_00041 --> /main/connectors/CONSTANT_PACKED_TEXT_STORAGE
		symbol socket misc T_SL_Location --> /main/template/arrays/T_SL_Location_arr/T_SL_Location
		symbol plug misc plug_00042 --> /main/connectors/CONSTANT_PACKED_TEXT_STORAGE
		symbol socket misc StorageForShortName --> /main/template/arrays/StorageForShortName_arr/StorageForShortName
		symbol socket misc I7_SOO_SHUF --> /main/template/arrays/I7_SOO_SHUF_arr/I7_SOO_SHUF
		symbol socket misc RR_NAME --> /main/template/constants/RR_NAME_con/RR_NAME
		symbol socket misc RR_PERMISSIONS --> /main/template/constants/RR_PERMISSIONS_con/RR_PERMISSIONS
		symbol socket misc RR_STORAGE --> /main/template/constants/RR_STORAGE_con/RR_STORAGE
		symbol socket misc RR_KIND --> /main/template/constants/RR_KIND_con/RR_KIND
		symbol socket misc RR_HANDLER --> /main/template/constants/RR_HANDLER_con/RR_HANDLER
		symbol socket misc RR_DESCRIPTION --> /main/template/constants/RR_DESCRIPTION_con/RR_DESCRIPTION
		symbol socket misc VALENCY_MASK --> /main/template/constants/VALENCY_MASK_con/VALENCY_MASK
		symbol plug misc plug_00043 --? RELS_EQUIVALENCE
		symbol plug misc plug_00044 --? RELS_SYMMETRIC
		symbol plug misc plug_00045 --? RELS_X_UNIQUE
		symbol plug misc plug_00046 --? RELS_Y_UNIQUE
		symbol socket misc VTOVS_LEFT_INDEX_PROP --> /main/template/constants/VTOVS_LEFT_INDEX_PROP_con/VTOVS_LEFT_INDEX_PROP
		symbol socket misc VTOVS_RIGHT_INDEX_PROP --> /main/template/constants/VTOVS_RIGHT_INDEX_PROP_con/VTOVS_RIGHT_INDEX_PROP
		symbol socket misc VTOVS_LEFT_DOMAIN_SIZE --> /main/template/constants/VTOVS_LEFT_DOMAIN_SIZE_con/VTOVS_LEFT_DOMAIN_SIZE
		symbol socket misc VTOVS_RIGHT_DOMAIN_SIZE --> /main/template/constants/VTOVS_RIGHT_DOMAIN_SIZE_con/VTOVS_RIGHT_DOMAIN_SIZE
		symbol socket misc VTOVS_LEFT_PRINTING_ROUTINE --> /main/template/constants/VTOVS_LEFT_PRINTING_ROUTINE_con/VTOVS_LEFT_PRINTING_ROUTINE
		symbol socket misc VTOVS_RIGHT_PRINTING_ROUTINE --> /main/template/constants/VTOVS_RIGHT_PRINTING_ROUTINE_con/VTOVS_RIGHT_PRINTING_ROUTINE
		symbol socket misc VTOVS_CACHE_BROKEN --> /main/template/constants/VTOVS_CACHE_BROKEN_con/VTOVS_CACHE_BROKEN
		symbol socket misc VTOVS_CACHE --> /main/template/constants/VTOVS_CACHE_con/VTOVS_CACHE
		symbol socket misc SLOW_ROUTE_FINDING --> /main/template/constants/SLOW_ROUTE_FINDING_con/SLOW_ROUTE_FINDING
		symbol socket misc NUM_DOORS --> /main/template/constants/NUM_DOORS_con/NUM_DOORS
		symbol plug misc plug_00047 --? ICOUNT_DOOR
		symbol socket misc NUM_ROOMS --> /main/template/constants/NUM_ROOMS_con/NUM_ROOMS
		symbol plug misc plug_00048 --? ICOUNT_ROOM
		symbol socket misc DoorRoutingViable --> /main/template/arrays/DoorRoutingViable_arr/DoorRoutingViable
		symbol socket misc MAX_ROUTE_LENGTH --> /main/template/constants/MAX_ROUTE_LENGTH_con/MAX_ROUTE_LENGTH
		symbol plug misc plug_00049 --? ICOUNT_OBJECT
		symbol socket misc RTP_Buffer --> /main/template/arrays/RTP_Buffer_arr/RTP_Buffer
		symbol socket misc MAX_TIMERS --> /main/template/constants/MAX_TIMERS_con/MAX_TIMERS
		symbol socket misc RS_NEITHER --> /main/template/constants/RS_NEITHER_con/RS_NEITHER
		symbol socket misc RS_SUCCEEDS --> /main/template/constants/RS_SUCCEEDS_con/RS_SUCCEEDS
		symbol socket misc RS_FAILS --> /main/template/constants/RS_FAILS_con/RS_FAILS
		symbol socket misc latest_rule_result --> /main/template/arrays/latest_rule_result_arr/latest_rule_result
		symbol socket misc TB_COLUMN_REAL --> /main/template/constants/TB_COLUMN_REAL_con/TB_COLUMN_REAL
		symbol socket misc TB_COLUMN_SIGNED --> /main/template/constants/TB_COLUMN_SIGNED_con/TB_COLUMN_SIGNED
		symbol socket misc TB_COLUMN_TOPIC --> /main/template/constants/TB_COLUMN_TOPIC_con/TB_COLUMN_TOPIC
		symbol socket misc TB_COLUMN_DONTSORTME --> /main/template/constants/TB_COLUMN_DONTSORTME_con/TB_COLUMN_DONTSORTME
		symbol socket misc TB_COLUMN_NOBLANKBITS --> /main/template/constants/TB_COLUMN_NOBLANKBITS_con/TB_COLUMN_NOBLANKBITS
		symbol socket misc TB_COLUMN_CANEXCHANGE --> /main/template/constants/TB_COLUMN_CANEXCHANGE_con/TB_COLUMN_CANEXCHANGE
		symbol socket misc TB_COLUMN_ALLOCATED --> /main/template/constants/TB_COLUMN_ALLOCATED_con/TB_COLUMN_ALLOCATED
		symbol socket misc TB_COLUMN_NUMBER --> /main/template/constants/TB_COLUMN_NUMBER_con/TB_COLUMN_NUMBER
		symbol socket misc COL_HSIZE --> /main/template/constants/COL_HSIZE_con/COL_HSIZE
		symbol socket misc TABLE_NOVALUE --> /main/template/constants/TABLE_NOVALUE_con/TABLE_NOVALUE
		symbol plug misc plug_00050 --? IMPROBABLE_VALUE
		symbol socket misc CheckTableEntryIsBlank_LU --> /main/template/arrays/CheckTableEntryIsBlank_LU_arr/CheckTableEntryIsBlank_LU
		symbol socket misc CheckTableEntryIsNonBlank_LU --> /main/template/arrays/CheckTableEntryIsNonBlank_LU_arr/CheckTableEntryIsNonBlank_LU
		symbol socket misc assim_gv --> /main/template/commands/assim_command_1/assim_gv
		symbol plug misc plug_00051 --? ##XAbstract
		symbol plug misc plug_00052 --? ##ActionsOn
		symbol plug misc plug_00053 --? ##ActionsOn
		symbol plug misc plug_00054 --? ##ActionsOff
		symbol plug misc plug_00055 --? ##Gonear
		symbol plug misc plug_00056 --? ##XPurloin
		symbol plug misc plug_00057 --? ##Predictable
		symbol plug misc plug_00058 --? ##ShowRelations
		symbol plug misc plug_00059 --? ##ShowResponses
		symbol plug misc plug_00060 --? ##ShowResponses
		symbol plug misc plug_00061 --? ##ShowResponses
		symbol plug misc plug_00062 --? ##ShowResponses
		symbol plug misc plug_00063 --? ##RulesOn
		symbol plug misc plug_00064 --? ##RulesAll
		symbol plug misc plug_00065 --? ##RulesOn
		symbol plug misc plug_00066 --? ##RulesOff
		symbol plug misc plug_00067 --? ##ScenesOn
		symbol plug misc plug_00068 --? ##ScenesOn
		symbol plug misc plug_00069 --? ##ScenesOff
		symbol plug misc plug_00070 --? ##Scope
		symbol plug misc plug_00071 --? ##Scope
		symbol plug misc plug_00072 --? ##ShowHeap
		symbol plug misc plug_00073 --? ##ShowMe
		symbol plug misc plug_00074 --? ##ShowMe
		symbol plug misc plug_00075 --? ##ShowVerb
		symbol plug misc plug_00076 --? ##TestScript
		symbol plug misc plug_00077 --? ##TestScript
		symbol plug misc plug_00078 --? ##TraceOn
		symbol plug misc plug_00079 --? ##TraceLevel
		symbol plug misc plug_00080 --? ##TraceOn
		symbol plug misc plug_00081 --? ##TraceOff
		symbol plug misc plug_00082 --? ##XTree
		symbol plug misc plug_00083 --? ##XTree
		symbol socket misc TimesActionHasHappened --> /main/template/arrays/TimesActionHasHappened_arr/TimesActionHasHappened
		symbol plug misc plug_00084 --? NO_PAST_TENSE_ACTIONS
		symbol socket misc TurnsActionHasBeenHappening --> /main/template/arrays/TurnsActionHasBeenHappening_arr/TurnsActionHasBeenHappening
		symbol plug misc plug_00085 --? NO_PAST_TENSE_ACTIONS
		symbol socket misc LastTurnActionHappenedOn --> /main/template/arrays/LastTurnActionHappenedOn_arr/LastTurnActionHappenedOn
		symbol plug misc plug_00086 --? NO_PAST_TENSE_ACTIONS
		symbol socket misc ActionCurrentlyHappeningFlag --> /main/template/arrays/ActionCurrentlyHappeningFlag_arr/ActionCurrentlyHappeningFlag
		symbol plug misc plug_00087 --? NO_PAST_TENSE_ACTIONS
		symbol socket misc past_chronological_record --> /main/template/arrays/past_chronological_record_arr/past_chronological_record
		symbol plug misc plug_00088 --? NO_PAST_TENSE_CONDS
		symbol socket misc present_chronological_record --> /main/template/arrays/present_chronological_record_arr/present_chronological_record
		symbol plug misc plug_00089 --? NO_PAST_TENSE_CONDS
		symbol socket misc cap_short_name --> /main/template/constants/cap_short_name_con/cap_short_name
		symbol socket misc Runtime_Quotations_Displayed --> /main/template/arrays/Runtime_Quotations_Displayed_arr/Runtime_Quotations_Displayed
		symbol plug misc plug_00090 --? CCOUNT_QUOTATIONS
		symbol socket misc BLK_HEADER_N --> /main/template/constants/BLK_HEADER_N_con/BLK_HEADER_N
		symbol socket misc BLK_HEADER_FLAGS --> /main/template/constants/BLK_HEADER_FLAGS_con/BLK_HEADER_FLAGS
		symbol socket misc BLK_FLAG_MULTIPLE --> /main/template/constants/BLK_FLAG_MULTIPLE_con/BLK_FLAG_MULTIPLE
		symbol socket misc BLK_FLAG_16_BIT --> /main/template/constants/BLK_FLAG_16_BIT_con/BLK_FLAG_16_BIT
		symbol socket misc BLK_FLAG_WORD --> /main/template/constants/BLK_FLAG_WORD_con/BLK_FLAG_WORD
		symbol socket misc BLK_FLAG_RESIDENT --> /main/template/constants/BLK_FLAG_RESIDENT_con/BLK_FLAG_RESIDENT
		symbol socket misc BLK_FLAG_TRUNCMULT --> /main/template/constants/BLK_FLAG_TRUNCMULT_con/BLK_FLAG_TRUNCMULT
		symbol socket misc BLK_HEADER_KOV --> /main/template/constants/BLK_HEADER_KOV_con/BLK_HEADER_KOV
		symbol socket misc BLK_HEADER_RCOUNT --> /main/template/constants/BLK_HEADER_RCOUNT_con/BLK_HEADER_RCOUNT
		symbol socket misc BLK_DATA_OFFSET --> /main/template/constants/BLK_DATA_OFFSET_con/BLK_DATA_OFFSET
		symbol plug misc plug_00091 --? WORDSIZE
		symbol socket misc BLK_DATA_MULTI_OFFSET --> /main/template/constants/BLK_DATA_MULTI_OFFSET_con/BLK_DATA_MULTI_OFFSET
		symbol plug misc plug_00092 --? WORDSIZE
		symbol socket misc BLK_NEXT --> /main/template/constants/BLK_NEXT_con/BLK_NEXT
		symbol socket misc BLK_PREV --> /main/template/constants/BLK_PREV_con/BLK_PREV
		symbol socket misc Flex_Heap --> /main/template/arrays/Flex_Heap_arr/Flex_Heap
		symbol plug misc plug_00093 --? MEMORY_HEAP_SIZE
		symbol socket misc SMALLEST_BLK_WORTH_ALLOCATING --> /main/template/constants/SMALLEST_BLK_WORTH_ALLOCATING_con/SMALLEST_BLK_WORTH_ALLOCATING
		symbol socket misc RC_INFINITY --> /main/template/constants/RC_INFINITY_con/RC_INFINITY
		symbol plug misc plug_00094 --? MAX_POSITIVE_NUMBER
		symbol socket misc BLK_BVBITMAP --> /main/template/constants/BLK_BVBITMAP_con/BLK_BVBITMAP
		symbol socket misc BLK_BVBITMAP_LONGBLOCK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCK_con/BLK_BVBITMAP_LONGBLOCK
		symbol socket misc BLK_BVBITMAP_TEXT --> /main/template/constants/BLK_BVBITMAP_TEXT_con/BLK_BVBITMAP_TEXT
		symbol socket misc BLK_BVBITMAP_CONSTANT --> /main/template/constants/BLK_BVBITMAP_CONSTANT_con/BLK_BVBITMAP_CONSTANT
		symbol socket misc BLK_BVBITMAP_LONGBLOCKMASK --> /main/template/constants/BLK_BVBITMAP_LONGBLOCKMASK_con/BLK_BVBITMAP_LONGBLOCKMASK
		symbol socket misc BLK_BVBITMAP_TEXTMASK --> /main/template/constants/BLK_BVBITMAP_TEXTMASK_con/BLK_BVBITMAP_TEXTMASK
		symbol socket misc BLK_BVBITMAP_CONSTANTMASK --> /main/template/constants/BLK_BVBITMAP_CONSTANTMASK_con/BLK_BVBITMAP_CONSTANTMASK
		symbol socket misc CREATE_KOVS --> /main/template/constants/CREATE_KOVS_con/CREATE_KOVS
		symbol socket misc CAST_KOVS --> /main/template/constants/CAST_KOVS_con/CAST_KOVS
		symbol socket misc DESTROY_KOVS --> /main/template/constants/DESTROY_KOVS_con/DESTROY_KOVS
		symbol socket misc MAKEMUTABLE_KOVS --> /main/template/constants/MAKEMUTABLE_KOVS_con/MAKEMUTABLE_KOVS
		symbol socket misc COPYKIND_KOVS --> /main/template/constants/COPYKIND_KOVS_con/COPYKIND_KOVS
		symbol socket misc EXTENT_KOVS --> /main/template/constants/EXTENT_KOVS_con/EXTENT_KOVS
		symbol socket misc COPYQUICK_KOVS --> /main/template/constants/COPYQUICK_KOVS_con/COPYQUICK_KOVS
		symbol socket misc COPYSB_KOVS --> /main/template/constants/COPYSB_KOVS_con/COPYSB_KOVS
		symbol socket misc KINDDATA_KOVS --> /main/template/constants/KINDDATA_KOVS_con/KINDDATA_KOVS
		symbol socket misc COPY_KOVS --> /main/template/constants/COPY_KOVS_con/COPY_KOVS
		symbol socket misc COMPARE_KOVS --> /main/template/constants/COMPARE_KOVS_con/COMPARE_KOVS
		symbol socket misc READ_FILE_KOVS --> /main/template/constants/READ_FILE_KOVS_con/READ_FILE_KOVS
		symbol socket misc WRITE_FILE_KOVS --> /main/template/constants/WRITE_FILE_KOVS_con/WRITE_FILE_KOVS
		symbol socket misc HASH_KOVS --> /main/template/constants/HASH_KOVS_con/HASH_KOVS
		symbol socket misc DEBUG_KOVS --> /main/template/constants/DEBUG_KOVS_con/DEBUG_KOVS
		symbol socket misc CONSTANT_PACKED_TEXT_STORAGE --> /main/template/constants/CONSTANT_PACKED_TEXT_STORAGE_con/CONSTANT_PACKED_TEXT_STORAGE
		symbol socket misc CONSTANT_PERISHABLE_TEXT_STORAGE --> /main/template/constants/CONSTANT_PERISHABLE_TEXT_STORAGE_con/CONSTANT_PERISHABLE_TEXT_STORAGE
		symbol socket misc PACKED_TEXT_STORAGE --> /main/template/constants/PACKED_TEXT_STORAGE_con/PACKED_TEXT_STORAGE
		symbol socket misc UNPACKED_TEXT_STORAGE --> /main/template/constants/UNPACKED_TEXT_STORAGE_con/UNPACKED_TEXT_STORAGE
		symbol socket misc TEXT_TY_Storage_Flags --> /main/template/constants/TEXT_TY_Storage_Flags_con/TEXT_TY_Storage_Flags
		symbol socket misc ZSCII_Tables --> /main/template/constants/ZSCII_Tables_con/ZSCII_Tables
		symbol socket misc UNIC_NCT --> /main/template/constants/UNIC_NCT_con/UNIC_NCT
		symbol socket misc CharCasingChart0 --> /main/template/arrays/CharCasingChart0_arr/CharCasingChart0
		symbol socket misc CharCasingChart1 --> /main/template/arrays/CharCasingChart1_arr/CharCasingChart1
		symbol socket misc TEXT_TY_BufferSize --> /main/template/constants/TEXT_TY_BufferSize_con/TEXT_TY_BufferSize
		symbol socket misc TEXT_TY_NoBuffers --> /main/template/constants/TEXT_TY_NoBuffers_con/TEXT_TY_NoBuffers
		symbol socket misc TEXT_TY_Buffers --> /main/template/arrays/TEXT_TY_Buffers_arr/TEXT_TY_Buffers
		symbol socket misc CHR_BLOB --> /main/template/constants/CHR_BLOB_con/CHR_BLOB
		symbol socket misc WORD_BLOB --> /main/template/constants/WORD_BLOB_con/WORD_BLOB
		symbol socket misc PWORD_BLOB --> /main/template/constants/PWORD_BLOB_con/PWORD_BLOB
		symbol socket misc UWORD_BLOB --> /main/template/constants/UWORD_BLOB_con/UWORD_BLOB
		symbol socket misc PARA_BLOB --> /main/template/constants/PARA_BLOB_con/PARA_BLOB
		symbol socket misc LINE_BLOB --> /main/template/constants/LINE_BLOB_con/LINE_BLOB
		symbol socket misc REGEXP_BLOB --> /main/template/constants/REGEXP_BLOB_con/REGEXP_BLOB
		symbol socket misc WS_BRM --> /main/template/constants/WS_BRM_con/WS_BRM
		symbol socket misc SKIPPED_BRM --> /main/template/constants/SKIPPED_BRM_con/SKIPPED_BRM
		symbol socket misc ACCEPTED_BRM --> /main/template/constants/ACCEPTED_BRM_con/ACCEPTED_BRM
		symbol socket misc ACCEPTEDP_BRM --> /main/template/constants/ACCEPTEDP_BRM_con/ACCEPTEDP_BRM
		symbol socket misc ACCEPTEDN_BRM --> /main/template/constants/ACCEPTEDN_BRM_con/ACCEPTEDN_BRM
		symbol socket misc ACCEPTEDPN_BRM --> /main/template/constants/ACCEPTEDPN_BRM_con/ACCEPTEDPN_BRM
		symbol socket misc NEWLINE_RE_CC --> /main/template/constants/NEWLINE_RE_CC_con/NEWLINE_RE_CC
		symbol socket misc TAB_RE_CC --> /main/template/constants/TAB_RE_CC_con/TAB_RE_CC
		symbol socket misc DIGIT_RE_CC --> /main/template/constants/DIGIT_RE_CC_con/DIGIT_RE_CC
		symbol socket misc NONDIGIT_RE_CC --> /main/template/constants/NONDIGIT_RE_CC_con/NONDIGIT_RE_CC
		symbol socket misc WHITESPACE_RE_CC --> /main/template/constants/WHITESPACE_RE_CC_con/WHITESPACE_RE_CC
		symbol socket misc NONWHITESPACE_RE_CC --> /main/template/constants/NONWHITESPACE_RE_CC_con/NONWHITESPACE_RE_CC
		symbol socket misc PUNCTUATION_RE_CC --> /main/template/constants/PUNCTUATION_RE_CC_con/PUNCTUATION_RE_CC
		symbol socket misc NONPUNCTUATION_RE_CC --> /main/template/constants/NONPUNCTUATION_RE_CC_con/NONPUNCTUATION_RE_CC
		symbol socket misc WORD_RE_CC --> /main/template/constants/WORD_RE_CC_con/WORD_RE_CC
		symbol socket misc NONWORD_RE_CC --> /main/template/constants/NONWORD_RE_CC_con/NONWORD_RE_CC
		symbol socket misc ANYTHING_RE_CC --> /main/template/constants/ANYTHING_RE_CC_con/ANYTHING_RE_CC
		symbol socket misc NOTHING_RE_CC --> /main/template/constants/NOTHING_RE_CC_con/NOTHING_RE_CC
		symbol socket misc RANGE_RE_CC --> /main/template/constants/RANGE_RE_CC_con/RANGE_RE_CC
		symbol socket misc LCASE_RE_CC --> /main/template/constants/LCASE_RE_CC_con/LCASE_RE_CC
		symbol socket misc NONLCASE_RE_CC --> /main/template/constants/NONLCASE_RE_CC_con/NONLCASE_RE_CC
		symbol socket misc UCASE_RE_CC --> /main/template/constants/UCASE_RE_CC_con/UCASE_RE_CC
		symbol socket misc NONUCASE_RE_CC --> /main/template/constants/NONUCASE_RE_CC_con/NONUCASE_RE_CC
		symbol socket misc SUBEXP_RE_CC --> /main/template/constants/SUBEXP_RE_CC_con/SUBEXP_RE_CC
		symbol socket misc DISJUNCTION_RE_CC --> /main/template/constants/DISJUNCTION_RE_CC_con/DISJUNCTION_RE_CC
		symbol socket misc CHOICE_RE_CC --> /main/template/constants/CHOICE_RE_CC_con/CHOICE_RE_CC
		symbol socket misc QUANTIFIER_RE_CC --> /main/template/constants/QUANTIFIER_RE_CC_con/QUANTIFIER_RE_CC
		symbol socket misc IF_RE_CC --> /main/template/constants/IF_RE_CC_con/IF_RE_CC
		symbol socket misc CONDITION_RE_CC --> /main/template/constants/CONDITION_RE_CC_con/CONDITION_RE_CC
		symbol socket misc THEN_RE_CC --> /main/template/constants/THEN_RE_CC_con/THEN_RE_CC
		symbol socket misc ELSE_RE_CC --> /main/template/constants/ELSE_RE_CC_con/ELSE_RE_CC
		symbol socket misc VARIABLE_RE_CC --> /main/template/constants/VARIABLE_RE_CC_con/VARIABLE_RE_CC
		symbol socket misc LITERAL_RE_CC --> /main/template/constants/LITERAL_RE_CC_con/LITERAL_RE_CC
		symbol socket misc START_RE_CC --> /main/template/constants/START_RE_CC_con/START_RE_CC
		symbol socket misc END_RE_CC --> /main/template/constants/END_RE_CC_con/END_RE_CC
		symbol socket misc BOUNDARY_RE_CC --> /main/template/constants/BOUNDARY_RE_CC_con/BOUNDARY_RE_CC
		symbol socket misc NONBOUNDARY_RE_CC --> /main/template/constants/NONBOUNDARY_RE_CC_con/NONBOUNDARY_RE_CC
		symbol socket misc ALWAYS_RE_CC --> /main/template/constants/ALWAYS_RE_CC_con/ALWAYS_RE_CC
		symbol socket misc NEVER_RE_CC --> /main/template/constants/NEVER_RE_CC_con/NEVER_RE_CC
		symbol socket misc SENSITIVITY_RE_CC --> /main/template/constants/SENSITIVITY_RE_CC_con/SENSITIVITY_RE_CC
		symbol socket misc RE_MAX_PACKETS --> /main/template/constants/RE_MAX_PACKETS_con/RE_MAX_PACKETS
		symbol socket misc RE_PACKET_SIZE --> /main/template/constants/RE_PACKET_SIZE_con/RE_PACKET_SIZE
		symbol socket misc RE_PACKET_SIZE_IN_BYTES --> /main/template/constants/RE_PACKET_SIZE_IN_BYTES_con/RE_PACKET_SIZE_IN_BYTES
		symbol plug misc plug_00095 --? WORDSIZE
		symbol socket misc RE_PACKET_space --> /main/template/arrays/RE_PACKET_space_arr/RE_PACKET_space
		symbol socket misc RE_CCLASS --> /main/template/constants/RE_CCLASS_con/RE_CCLASS
		symbol socket misc RE_PAR1 --> /main/template/constants/RE_PAR1_con/RE_PAR1
		symbol socket misc RE_PAR2 --> /main/template/constants/RE_PAR2_con/RE_PAR2
		symbol socket misc RE_PAR3 --> /main/template/constants/RE_PAR3_con/RE_PAR3
		symbol socket misc RE_NEXT --> /main/template/constants/RE_NEXT_con/RE_NEXT
		symbol socket misc RE_PREVIOUS --> /main/template/constants/RE_PREVIOUS_con/RE_PREVIOUS
		symbol socket misc RE_DOWN --> /main/template/constants/RE_DOWN_con/RE_DOWN
		symbol socket misc RE_UP --> /main/template/constants/RE_UP_con/RE_UP
		symbol socket misc RE_DATA1 --> /main/template/constants/RE_DATA1_con/RE_DATA1
		symbol socket misc RE_DATA2 --> /main/template/constants/RE_DATA2_con/RE_DATA2
		symbol socket misc RE_CONSTRAINT --> /main/template/constants/RE_CONSTRAINT_con/RE_CONSTRAINT
		symbol socket misc RE_CACHE1 --> /main/template/constants/RE_CACHE1_con/RE_CACHE1
		symbol socket misc RE_CACHE2 --> /main/template/constants/RE_CACHE2_con/RE_CACHE2
		symbol socket misc RE_MODES --> /main/template/constants/RE_MODES_con/RE_MODES
		symbol socket misc RE_Subexpressions --> /main/template/arrays/RE_Subexpressions_arr/RE_Subexpressions
		symbol socket misc Allocated_Match_Vars --> /main/template/arrays/Allocated_Match_Vars_arr/Allocated_Match_Vars
		symbol socket misc Subexp_Posns --> /main/template/arrays/Subexp_Posns_arr/Subexp_Posns
		symbol socket misc CIS_MFLAG --> /main/template/constants/CIS_MFLAG_con/CIS_MFLAG
		symbol socket misc ACCUM_MFLAG --> /main/template/constants/ACCUM_MFLAG_con/ACCUM_MFLAG
		symbol socket misc STORA_ACTION_F --> /main/template/constants/STORA_ACTION_F_con/STORA_ACTION_F
		symbol socket misc STORA_NOUN_F --> /main/template/constants/STORA_NOUN_F_con/STORA_NOUN_F
		symbol socket misc STORA_SECOND_F --> /main/template/constants/STORA_SECOND_F_con/STORA_SECOND_F
		symbol socket misc STORA_ACTOR_F --> /main/template/constants/STORA_ACTOR_F_con/STORA_ACTOR_F
		symbol socket misc STORA_REQUEST_F --> /main/template/constants/STORA_REQUEST_F_con/STORA_REQUEST_F
		symbol socket misc STORA_COMMAND_TEXT_F --> /main/template/constants/STORA_COMMAND_TEXT_F_con/STORA_COMMAND_TEXT_F
		symbol socket misc SAT_Tmp --> /main/template/arrays/SAT_Tmp_arr/SAT_Tmp
		symbol socket misc LIST_ITEM_KOV_F --> /main/template/constants/LIST_ITEM_KOV_F_con/LIST_ITEM_KOV_F
		symbol socket misc LIST_LENGTH_F --> /main/template/constants/LIST_LENGTH_F_con/LIST_LENGTH_F
		symbol socket misc LIST_ITEM_BASE --> /main/template/constants/LIST_ITEM_BASE_con/LIST_ITEM_BASE
		symbol socket misc COMBINATION_KIND_F --> /main/template/constants/COMBINATION_KIND_F_con/COMBINATION_KIND_F
		symbol socket misc COMBINATION_ITEM_BASE --> /main/template/constants/COMBINATION_ITEM_BASE_con/COMBINATION_ITEM_BASE
		symbol socket misc RRV_NAME --> /main/template/constants/RRV_NAME_con/RRV_NAME
		symbol socket misc RRV_PERMISSIONS --> /main/template/constants/RRV_PERMISSIONS_con/RRV_PERMISSIONS
		symbol socket misc RRV_STORAGE --> /main/template/constants/RRV_STORAGE_con/RRV_STORAGE
		symbol socket misc RRV_KIND --> /main/template/constants/RRV_KIND_con/RRV_KIND
		symbol socket misc RRV_HANDLER --> /main/template/constants/RRV_HANDLER_con/RRV_HANDLER
		symbol socket misc RRV_DESCRIPTION --> /main/template/constants/RRV_DESCRIPTION_con/RRV_DESCRIPTION
		symbol socket misc RRV_USED --> /main/template/constants/RRV_USED_con/RRV_USED
		symbol socket misc RRV_FILLED --> /main/template/constants/RRV_FILLED_con/RRV_FILLED
		symbol socket misc RRV_DATA_BASE --> /main/template/constants/RRV_DATA_BASE_con/RRV_DATA_BASE
		symbol socket misc RRVAL_V_TO_V --> /main/template/constants/RRVAL_V_TO_V_con/RRVAL_V_TO_V
		symbol socket misc RRVAL_V_TO_O --> /main/template/constants/RRVAL_V_TO_O_con/RRVAL_V_TO_O
		symbol plug misc plug_00096 --? RELS_Y_UNIQUE
		symbol socket misc RRVAL_O_TO_V --> /main/template/constants/RRVAL_O_TO_V_con/RRVAL_O_TO_V
		symbol plug misc plug_00097 --? RELS_X_UNIQUE
		symbol socket misc RRVAL_O_TO_O --> /main/template/constants/RRVAL_O_TO_O_con/RRVAL_O_TO_O
		symbol plug misc plug_00098 --? RELS_X_UNIQUE
		symbol plug misc plug_00099 --? RELS_Y_UNIQUE
		symbol socket misc RRVAL_EQUIV --> /main/template/constants/RRVAL_EQUIV_con/RRVAL_EQUIV
		symbol plug misc plug_00100 --? RELS_EQUIVALENCE
		symbol plug misc plug_00101 --? RELS_SYMMETRIC
		symbol socket misc RRVAL_SYM_V_TO_V --> /main/template/constants/RRVAL_SYM_V_TO_V_con/RRVAL_SYM_V_TO_V
		symbol plug misc plug_00102 --? RELS_SYMMETRIC
		symbol socket misc RRVAL_SYM_O_TO_O --> /main/template/constants/RRVAL_SYM_O_TO_O_con/RRVAL_SYM_O_TO_O
		symbol plug misc plug_00103 --? RELS_SYMMETRIC
		symbol plug misc plug_00104 --? RELS_X_UNIQUE
		symbol plug misc plug_00105 --? RELS_Y_UNIQUE
		symbol socket misc RRF_USED --> /main/template/constants/RRF_USED_con/RRF_USED
		symbol socket misc RRF_DELETED --> /main/template/constants/RRF_DELETED_con/RRF_DELETED
		symbol socket misc RRF_SINGLE --> /main/template/constants/RRF_SINGLE_con/RRF_SINGLE
		symbol socket misc RRF_HASX --> /main/template/constants/RRF_HASX_con/RRF_HASX
		symbol socket misc RRF_HASY --> /main/template/constants/RRF_HASY_con/RRF_HASY
		symbol socket misc RRF_ENTKEYX --> /main/template/constants/RRF_ENTKEYX_con/RRF_ENTKEYX
		symbol socket misc RRF_ENTKEYY --> /main/template/constants/RRF_ENTKEYY_con/RRF_ENTKEYY
		symbol socket misc RELS_COPY --> /main/template/constants/RELS_COPY_con/RELS_COPY
		symbol socket misc RELS_DESTROY --> /main/template/constants/RELS_DESTROY_con/RELS_DESTROY
		symbol socket misc RELS_EMPTY --> /main/template/constants/RELS_EMPTY_con/RELS_EMPTY
		symbol socket misc RELS_SET_VALENCY --> /main/template/constants/RELS_SET_VALENCY_con/RELS_SET_VALENCY
		symbol socket misc RLANY_GET_X --> /main/template/constants/RLANY_GET_X_con/RLANY_GET_X
		symbol socket misc RLANY_GET_Y --> /main/template/constants/RLANY_GET_Y_con/RLANY_GET_Y
		symbol socket misc RLANY_CAN_GET_X --> /main/template/constants/RLANY_CAN_GET_X_con/RLANY_CAN_GET_X
		symbol socket misc RLANY_CAN_GET_Y --> /main/template/constants/RLANY_CAN_GET_Y_con/RLANY_CAN_GET_Y
		symbol socket misc RLIST_ALL_X --> /main/template/constants/RLIST_ALL_X_con/RLIST_ALL_X
		symbol socket misc RLIST_ALL_Y --> /main/template/constants/RLIST_ALL_Y_con/RLIST_ALL_Y
		symbol socket misc RLIST_ALL_PAIRS --> /main/template/constants/RLIST_ALL_PAIRS_con/RLIST_ALL_PAIRS
		symbol socket misc RRP_MIN_SIZE --> /main/template/constants/RRP_MIN_SIZE_con/RRP_MIN_SIZE
		symbol socket misc RRP_PERTURB_SHIFT --> /main/template/constants/RRP_PERTURB_SHIFT_con/RRP_PERTURB_SHIFT
		symbol socket misc MINUS_RRP_PERTURB_SHIFT --> /main/template/constants/MINUS_RRP_PERTURB_SHIFT_con/MINUS_RRP_PERTURB_SHIFT
		symbol socket misc RRP_RESIZE_SMALL --> /main/template/constants/RRP_RESIZE_SMALL_con/RRP_RESIZE_SMALL
		symbol socket misc RRP_RESIZE_LARGE --> /main/template/constants/RRP_RESIZE_LARGE_con/RRP_RESIZE_LARGE
		symbol socket misc RRP_LARGE_IS --> /main/template/constants/RRP_LARGE_IS_con/RRP_LARGE_IS
		symbol socket misc RRP_CROWDED_IS --> /main/template/constants/RRP_CROWDED_IS_con/RRP_CROWDED_IS
		symbol plug misc plug_00106 --? FIX_RNG
		symbol plug misc plug_00107 --> /main/connectors/standard_interpreter
		symbol plug misc plug_00108 --> /main/connectors/transcript_mode
		symbol plug misc plug_00109 --> /main/connectors/dict_start
		symbol plug misc plug_00110 --> /main/connectors/dict_entry_size
		symbol plug misc plug_00111 --> /main/connectors/dict_end
		symbol plug misc plug_00112 --> /main/connectors/top_object
		symbol plug misc plug_00113 --? ECHO_COMMANDS
		symbol plug misc plug_00114 --> /main/connectors/statuswin_cursize
		symbol plug misc plug_00115 --> /main/connectors/clr_on
		symbol plug misc plug_00116 --> /main/connectors/clr_fgstatus
		symbol plug misc plug_00117 --> /main/connectors/clr_bgstatus
		symbol plug misc plug_00118 --> /main/connectors/clr_fg
		symbol plug misc plug_00119 --> /main/connectors/clr_bg
		symbol plug misc plug_00120 --> /main/connectors/statuswin_current
		symbol plug misc plug_00121 --> /main/connectors/actor
		symbol plug misc plug_00122 --> /main/connectors/player
		symbol plug misc plug_00123 --? QUIT_THE_GAME_RM
		symbol plug misc plug_00124 --? RESTART_THE_GAME_RM
		symbol plug misc plug_00125 --? RESTORE_THE_GAME_RM
		symbol plug misc plug_00126 --? SAVE_THE_GAME_RM
		symbol plug misc plug_00127 --? VERIFY_THE_STORY_FILE_RM
		symbol plug misc plug_00128 --? SWITCH_TRANSCRIPT_ON_RM
		symbol plug misc plug_00129 --? VersionSub
		symbol plug misc plug_00130 --? SWITCH_TRANSCRIPT_OFF_RM
		symbol plug misc plug_00131 --? LanguageVersion
		symbol plug misc plug_00132 --? ShowExtensionVersions
		symbol plug misc plug_00133 --? UUID_ARRAY
		symbol plug misc plug_00134 --> /main/connectors/say__p
		symbol plug misc plug_00135 --> /main/connectors/action
		symbol plug misc plug_00136 --> /main/connectors/max_z_object
		symbol plug misc plug_00137 --? K1_room
		symbol plug misc plug_00138 --? K2_thing
		symbol plug misc plug_00139 --? WORDSIZE
		symbol plug misc plug_00140 --? DIALECT_US
		symbol plug misc plug_00141 --? OBJECT_TY
		symbol plug misc plug_00142 --? OBJECT_TY
		symbol plug misc plug_00143 --> /main/connectors/ats_hls
		symbol plug misc plug_00144 --> /main/connectors/ats_flag
		symbol plug misc plug_00145 --> /main/connectors/scope_reason
		symbol plug misc plug_00146 --> /main/connectors/parser_one
		symbol plug misc plug_00147 --> /main/connectors/lightflag
		symbol plug misc plug_00148 --> /main/connectors/location
		symbol plug misc plug_00149 --> /main/connectors/real_location
		symbol plug misc plug_00150 --? ADJUST_LIGHT_RM
		symbol plug misc plug_00151 --> /main/connectors/visibility_ceiling
		symbol plug misc plug_00152 --> /main/connectors/visibility_levels
		symbol plug misc plug_00153 --? K4_door
		symbol plug misc plug_00154 --? K7_backdrop
		symbol plug misc plug_00155 --> /main/connectors/untouchable_object
		symbol plug misc plug_00156 --> /main/connectors/untouchable_silence
		symbol plug misc plug_00157 --> /main/connectors/touch_persona
		symbol plug misc plug_00158 --? ACCESS_THROUGH_BARRIERS_RM
		symbol plug misc plug_00159 --? K5_container
		symbol plug misc plug_00160 --> /main/connectors/parameter_value
		symbol plug misc plug_00161 --? CANT_REACH_INSIDE_CLOSED_RM
		symbol plug misc plug_00162 --? CANT_REACH_OUTSIDE_CLOSED_RM
		symbol plug misc plug_00163 --? CANT_REACH_INSIDE_ROOMS_RM
		symbol plug misc plug_00164 --> /main/connectors/requisition_stack_pointer
		symbol plug misc plug_00165 --? LIST_WRITER_INTERNAL_RM
		symbol plug misc plug_00166 --> /main/connectors/MarkedObjectArray
		symbol plug misc plug_00167 --> /main/connectors/MarkedObjectLength
		symbol plug misc plug_00168 --? OBJECT_TY
		symbol plug misc plug_00169 --> /main/connectors/prior_named_list
		symbol plug misc plug_00170 --> /main/connectors/prior_named_list_gender
		symbol plug misc plug_00171 --> /main/connectors/prior_named_noun
		symbol plug misc plug_00172 --> /main/connectors/story_viewpoint
		symbol plug misc plug_00173 --? CV_MEANING
		symbol plug misc plug_00174 --? MEANINGLESS_RR
		symbol plug misc plug_00175 --? CV_MODAL
		symbol plug misc plug_00176 --> /main/connectors/c_style
		symbol plug misc plug_00177 --? K6_supporter
		symbol plug misc plug_00178 --? DBLW
		symbol plug misc plug_00179 --> /main/connectors/c_iterator
		symbol plug misc plug_00180 --> /main/connectors/c_depth
		symbol plug misc plug_00181 --> /main/connectors/c_margin
		symbol plug misc plug_00182 --> /main/connectors/list_filter_routine
		symbol plug misc plug_00183 --? OBJECT_TY
		symbol plug misc plug_00184 --> /main/connectors/lt_value
		symbol plug misc plug_00185 --? SERIAL_COMMA
		symbol plug misc plug_00186 --> /main/connectors/listing_size
		symbol plug misc plug_00187 --> /main/connectors/inventory_stage
		symbol plug misc plug_00188 --> /main/connectors/parser_two
		symbol plug misc plug_00189 --> /main/connectors/listing_together
		symbol plug misc plug_00190 --? OBJECT_TY
		symbol plug misc plug_00191 --? BASE_KIND_HWM
		symbol plug misc plug_00192 --? UNKNOWN_TY
		symbol plug misc plug_00193 --? out_obj
		symbol plug misc plug_00194 --? in_obj
		symbol plug misc plug_00195 --? TARGET_GLULX
		symbol plug misc plug_00196 --? WORD_HIGHBIT
		symbol plug misc plug_00197 --? TARGET_ZCODE
		symbol plug misc plug_00198 --> /main/connectors/wn
		symbol plug misc plug_00199 --> /main/connectors/say__pc
		symbol plug misc plug_00200 --> /main/connectors/players_command
		symbol plug misc plug_00201 --> /main/connectors/action_to_be
		symbol plug misc plug_00202 --> /main/connectors/action_reversed
		symbol plug misc plug_00203 --> /main/connectors/params_wanted
		symbol plug misc plug_00204 --> /main/connectors/found_ttype
		symbol plug misc plug_00205 --> /main/connectors/found_tdata
		symbol plug misc plug_00206 --? NO_TEST_SCENARIOS
		symbol plug misc plug_00207 --? DEBUG
		symbol plug misc plug_00208 --? PREVENT_UNDO
		symbol plug misc plug_00209 --> /main/connectors/sline1
		symbol plug misc plug_00210 --> /main/connectors/score
		symbol plug misc plug_00211 --> /main/connectors/sline2
		symbol plug misc plug_00212 --> /main/connectors/turns
		symbol plug misc plug_00213 --> /main/connectors/etype
		symbol plug misc plug_00214 --? PARSER_ERROR_INTERNAL_RM
		symbol plug misc plug_00215 --> /main/connectors/noun
		symbol plug misc plug_00216 --> /main/connectors/oops_from
		symbol plug misc plug_00217 --? PARSER_COMMAND_INTERNAL_RM
		symbol plug misc plug_00218 --> /main/connectors/undo_flag
		symbol plug misc plug_00219 --? IMMEDIATELY_UNDO_RM
		symbol plug misc plug_00220 --? LanguageIsVerb
		symbol plug misc plug_00221 --> /main/connectors/cobj_flag
		symbol plug misc plug_00222 --> /main/connectors/meta
		symbol plug misc plug_00223 --> /main/connectors/held_back_mode
		symbol plug misc plug_00224 --> /main/connectors/hb_wn
		symbol plug misc plug_00225 --> /main/connectors/verb_wordnum
		symbol plug misc plug_00226 --> /main/connectors/num_words
		symbol plug misc plug_00227 --> /main/connectors/actors_location
		symbol plug misc plug_00228 --> /main/connectors/parser_inflection
		symbol plug misc plug_00229 --? name
		symbol plug misc plug_00230 --> /main/connectors/usual_grammar_after
		symbol plug misc plug_00231 --> /main/connectors/scope_token
		symbol plug misc plug_00232 --? NULL
		symbol plug misc plug_00233 --> /main/connectors/verb_word
		symbol plug misc plug_00234 --> /main/connectors/best_etype
		symbol plug misc plug_00235 --> /main/connectors/second
		symbol plug misc plug_00236 --> /main/connectors/indef_mode
		symbol plug misc plug_00237 --> /main/connectors/token_filter
		symbol plug misc plug_00238 --> /main/connectors/parameters
		symbol plug misc plug_00239 --? ##Go
		symbol plug misc plug_00240 --? REPARSE_CODE
		symbol plug misc plug_00241 --? K3_direction
		symbol plug misc plug_00242 --> /main/connectors/lookahead
		symbol plug misc plug_00243 --> /main/connectors/pronoun_word
		symbol plug misc plug_00244 --> /main/connectors/pronoun_obj
		symbol plug misc plug_00245 --> /main/connectors/nextbest_etype
		symbol plug misc plug_00246 --> /main/connectors/multiflag
		symbol plug misc plug_00247 --> /main/connectors/inferfrom
		symbol plug misc plug_00248 --> /main/connectors/nsns
		symbol plug misc plug_00249 --> /main/connectors/special_word
		symbol plug misc plug_00250 --> /main/connectors/multi_context
		symbol plug misc plug_00251 --> /main/connectors/advance_warning
		symbol plug misc plug_00252 --> /main/connectors/pcount
		symbol plug misc plug_00253 --> /main/connectors/take_all_rule
		symbol plug misc plug_00254 --? ##Take
		symbol plug misc plug_00255 --> /main/connectors/special_number1
		symbol plug misc plug_00256 --> /main/connectors/parsed_number
		symbol plug misc plug_00257 --> /main/connectors/special_number2
		symbol plug misc plug_00258 --> /main/connectors/pcount2
		symbol plug misc plug_00259 --? ##Answer
		symbol plug misc plug_00260 --> /main/connectors/consult_from
		symbol plug misc plug_00261 --> /main/connectors/consult_words
		symbol plug misc plug_00262 --> /main/connectors/pronoun__word
		symbol plug misc plug_00263 --> /main/connectors/pronoun__obj
		symbol plug misc plug_00264 --> /main/connectors/saved_oops
		symbol plug misc plug_00265 --> /main/connectors/multi_had
		symbol plug misc plug_00266 --? ##Remove
		symbol plug misc plug_00267 --? PARSER_N_ERROR_INTERNAL_RM
		symbol plug misc plug_00268 --> /main/connectors/multi_wanted
		symbol plug misc plug_00269 --> /main/connectors/scope_stage
		symbol plug misc plug_00270 --> /main/connectors/scope_error
		symbol plug misc plug_00271 --> /main/connectors/parsetoken_nesting
		symbol plug misc plug_00272 --> /main/connectors/match_from
		symbol plug misc plug_00273 --> /main/connectors/match_length
		symbol plug misc plug_00274 --> /main/connectors/number_of_classes
		symbol plug misc plug_00275 --> /main/connectors/number_matched
		symbol plug misc plug_00276 --? ##Ask
		symbol plug misc plug_00277 --? ##AskFor
		symbol plug misc plug_00278 --? ##Tell
		symbol plug misc plug_00279 --> /main/connectors/inferword
		symbol plug misc plug_00280 --> /main/connectors/dont_infer
		symbol plug misc plug_00281 --> /main/connectors/parser_trace
		symbol plug misc plug_00282 --> /main/connectors/allow_plurals
		symbol plug misc plug_00283 --> /main/connectors/indef_wanted
		symbol plug misc plug_00284 --> /main/connectors/indef_possambig
		symbol plug misc plug_00285 --> /main/connectors/indef_type
		symbol plug misc plug_00286 --> /main/connectors/indef_guess_p
		symbol plug misc plug_00287 --> /main/connectors/indef_owner
		symbol plug misc plug_00288 --> /main/connectors/indef_cases
		symbol plug misc plug_00289 --> /main/connectors/indef_nspec_at
		symbol plug misc plug_00290 --? PARSER_CLARIF_INTERNAL_RM
		symbol plug misc plug_00291 --? MATCH_LIST_WORDS
		symbol plug misc plug_00292 --? Activity_after_rulebooks
		symbol plug misc plug_00293 --? Glulx_PrintAnyToArray
		symbol plug misc plug_00294 --> /main/connectors/parser_action
		symbol plug misc plug_00295 --> /main/connectors/toomany_flag
		symbol plug misc plug_00296 --? K8_person
		symbol plug misc plug_00297 --> /main/connectors/dict_flags_of_noun
		symbol plug misc plug_00298 --? LanguageRefers
		symbol plug misc plug_00299 --? MANUAL_PRONOUNS
		symbol plug misc plug_00300 --? OBJECT_TY
		symbol plug misc plug_00301 --? YES_OR_NO_QUESTION_INTERNAL_RM
		symbol plug misc plug_00302 --? COBJ_DEBUG
		symbol plug misc plug_00303 --> /main/connectors/act_requester
		symbol plug misc plug_00304 --? CheckDPMR
		symbol plug misc plug_00305 --> /main/connectors/deadflag
		symbol plug misc plug_00306 --> /main/connectors/EarlyInTurnSequence
		symbol plug misc plug_00307 --? ##Wait
		symbol plug misc plug_00308 --> /main/connectors/IterationsOfTurnSequence
		symbol plug misc plug_00309 --? LanguageInitialise
		symbol plug misc plug_00310 --? I7_LOOKMODE
		symbol plug misc plug_00311 --> /main/connectors/not_yet_in_play
		symbol plug misc plug_00312 --? InitialSituation
		symbol plug misc plug_00313 --? PLAYER_OBJECT_INIS
		symbol plug misc plug_00314 --> /main/connectors/the_time
		symbol plug misc plug_00315 --? START_TIME_INIS
		symbol plug misc plug_00316 --? CreateDynamicRelations
		symbol plug misc plug_00317 --? RNG_SEED_AT_START_OF_PLAY
		symbol plug misc plug_00318 --? selfobj
		symbol plug misc plug_00319 --? START_ROOM_INIS
		symbol plug misc plug_00320 --? START_OBJECT_INIS
		symbol plug misc plug_00321 --? DONE_INIS
		symbol plug misc plug_00322 --? ##MistakeAction
		symbol plug misc plug_00323 --> /main/connectors/inp1
		symbol plug misc plug_00324 --> /main/connectors/inp2
		symbol plug misc plug_00325 --? GENERATE_ACTION_RM
		symbol plug misc plug_00326 --? ACTION_PROCESSING_INTERNAL_RM
		symbol plug misc plug_00327 --? TimedEventsTable
		symbol plug misc plug_00328 --? TimedEventTimesTable
		symbol plug misc plug_00329 --> /main/connectors/time_rate
		symbol plug misc plug_00330 --> /main/connectors/time_step
		symbol plug misc plug_00331 --? RUCKSACK_CLASS
		symbol plug misc plug_00332 --? OBJECT_TY
		symbol plug misc plug_00333 --? OBJECT_TY
		symbol plug misc plug_00334 --> /main/connectors/resurrect_please
		symbol plug misc plug_00335 --> /main/connectors/story_complete
		symbol plug misc plug_00336 --? NO_SCORING
		symbol plug misc plug_00337 --? PRINT_OBITUARY_HEADLINE_RM
		symbol plug misc plug_00338 --? ActionData
		symbol plug misc plug_00339 --? AD_RECORDS
		symbol plug misc plug_00340 --? OBJECT_TY
		symbol plug misc plug_00341 --? UNDERSTANDING_TY
		symbol plug misc plug_00342 --? TEXT_TY
		symbol plug misc plug_00343 --? SNIPPET_TY
		symbol plug misc plug_00344 --> /main/connectors/converted_action_outcome
		symbol plug misc plug_00345 --> /main/connectors/move_pushing
		symbol plug misc plug_00346 --? ##Look
		symbol plug misc plug_00347 --? STANDARD_IMPLICIT_TAKING_RM
		symbol plug misc plug_00348 --> /main/connectors/keep_silent
		symbol plug misc plug_00349 --? LookSub
		symbol plug misc plug_00350 --? self
		symbol plug misc plug_00351 --> /main/connectors/multiple_object_item
		symbol plug misc plug_00352 --> /main/connectors/reason_the_action_failed
		symbol plug misc plug_00353 --? BASIC_VISIBILITY_RM
		symbol plug misc plug_00354 --? BASIC_ACCESSIBILITY_RM
		symbol plug misc plug_00355 --? REQUESTED_ACTIONS_REQUIRE_RM
		symbol plug misc plug_00356 --? CARRY_OUT_REQUESTED_ACTIONS_RM
		symbol plug misc plug_00357 --? ActionHappened
		symbol plug misc plug_00358 --? action_bitmap
		symbol plug misc plug_00359 --? ActionCoding
		symbol plug misc plug_00360 --? ##Enter
		symbol plug misc plug_00361 --> /main/connectors/debug_rule_nesting
		symbol plug misc plug_00362 --? DB_Action_Details
		symbol plug misc plug_00363 --> /main/connectors/activities_sp
		symbol plug misc plug_00364 --> /main/connectors/inhibit_flag
		symbol plug misc plug_00365 --> /main/connectors/saved_debug_rules
		symbol plug misc plug_00366 --> /main/connectors/debug_rules
		symbol plug misc plug_00367 --? Activity_before_rulebooks
		symbol plug misc plug_00368 --? rulebooks_array
		symbol plug misc plug_00369 --? EMPTY_RULEBOOK
		symbol plug misc plug_00370 --? Activity_for_rulebooks
		symbol plug misc plug_00371 --? Activity_atb_rulebooks
		symbol plug misc plug_00372 --> /main/connectors/MStack_Top
		symbol plug misc plug_00373 --> /main/connectors/MStack_Frame_Extent
		symbol plug misc plug_00374 --? MEMORY_ECONOMY
		symbol plug misc plug_00375 --? rulebook_var_creators
		symbol plug misc plug_00376 --? activity_var_creators
		symbol plug misc plug_00377 --? ANNOUNCE_SCORE_RM
		symbol plug misc plug_00378 --> /main/connectors/notify_mode
		symbol plug misc plug_00379 --? REP_SWITCH_NOTIFY_ON_RM
		symbol plug misc plug_00380 --? REP_SWITCH_NOTIFY_OFF_RM
		symbol plug misc plug_00381 --> /main/connectors/lookmode
		symbol plug misc plug_00382 --? Story
		symbol plug misc plug_00383 --? REP_PREFER_SOMETIMES_ABBR_RM
		symbol plug misc plug_00384 --? REP_PREFER_UNABBREVIATED_RM
		symbol plug misc plug_00385 --? REP_PREFER_ABBREVIATED_RM
		symbol plug misc plug_00386 --? ANNOUNCE_PRONOUN_MEANINGS_RM
		symbol plug misc plug_00387 --? TRACE_I7_SPACING
		symbol plug misc plug_00388 --> /main/connectors/say__pc_save
		symbol plug misc plug_00389 --> /main/connectors/say__n
		symbol plug misc plug_00390 --? CommandPromptText
		symbol plug misc plug_00391 --> /main/connectors/pending_boxed_quotation
		symbol plug misc plug_00392 --> /main/connectors/last_score
		symbol plug misc plug_00393 --> /main/connectors/left_hand_status_line
		symbol plug misc plug_00394 --> /main/connectors/right_hand_status_line
		symbol plug misc plug_00395 --? DARKNESS_NAME_INTERNAL_RM
		symbol plug misc plug_00396 --? Story_Author
		symbol plug misc plug_00397 --? Headline
		symbol plug misc plug_00398 --? NI_BUILD_COUNT
		symbol plug misc plug_00399 --? LanguagePrintShortName
		symbol plug misc plug_00400 --> /main/connectors/caps_mode
		symbol plug misc plug_00401 --? PRINT_PROTAGONIST_INTERNAL_RM
		symbol plug misc plug_00402 --> /main/connectors/short_name_case
		symbol plug misc plug_00403 --? MAX_POSITIVE_NUMBER
		symbol plug misc plug_00404 --? RELS_EQUIVALENCE
		symbol plug misc plug_00405 --? RELS_SYMMETRIC
		symbol plug misc plug_00406 --? RELS_X_UNIQUE
		symbol plug misc plug_00407 --? RELS_Y_UNIQUE
		symbol plug misc plug_00408 --? OBJECT_TY
		symbol plug misc plug_00409 --? KOVDomainSize
		symbol plug misc plug_00410 --? OBJECT_TY
		symbol plug misc plug_00411 --? OBJECT_TY
		symbol plug misc plug_00412 --? OBJECT_TY
		symbol plug misc plug_00413 --? OBJECT_TY
		symbol plug misc plug_00414 --? OBJECT_TY
		symbol plug misc plug_00415 --? OBJECT_TY
		symbol plug misc plug_00416 --? OBJECT_TY
		symbol plug misc plug_00417 --? PrintKindValuePair
		symbol plug misc plug_00418 --? OBJECT_TY
		symbol plug misc plug_00419 --? OBJECT_TY
		symbol plug misc plug_00420 --? OBJECT_TY
		symbol plug misc plug_00421 --? OBJECT_TY
		symbol plug misc plug_00422 --? OBJECT_TY
		symbol plug misc plug_00423 --? OBJECT_TY
		symbol plug misc plug_00424 --? OBJECT_TY
		symbol plug misc plug_00425 --? OBJECT_TY
		symbol plug misc plug_00426 --? OBJECT_TY
		symbol plug misc plug_00427 --? OBJECT_TY
		symbol plug misc plug_00428 --? OBJECT_TY
		symbol plug misc plug_00429 --? OBJECT_TY
		symbol plug misc plug_00430 --? OBJECT_TY
		symbol plug misc plug_00431 --? OBJECT_TY
		symbol plug misc plug_00432 --? OBJECT_TY
		symbol plug misc plug_00433 --? OBJECT_TY
		symbol plug misc plug_00434 --? OBJECT_TY
		symbol plug misc plug_00435 --? OBJECT_TY
		symbol plug misc plug_00436 --? OBJECT_TY
		symbol plug misc plug_00437 --? OBJECT_TY
		symbol plug misc plug_00438 --? OBJECT_TY
		symbol plug misc plug_00439 --> /main/connectors/map_has_changed
		symbol plug misc plug_00440 --? FAST_ROUTE_FINDING
		symbol plug misc plug_00441 --> /main/connectors/last_filter
		symbol plug misc plug_00442 --> /main/connectors/last_use_doors
		symbol plug misc plug_00443 --? OBJECT_TY
		symbol plug misc plug_00444 --? OBJECT_TY
		symbol plug misc plug_00445 --? OBJECT_TY
		symbol plug misc plug_00446 --? Map_Storage
		symbol plug misc plug_00447 --? No_Directions
		symbol plug misc plug_00448 --? OBJECT_TY
		symbol plug misc plug_00449 --? RELS_ROUTE_FIND
		symbol plug misc plug_00450 --? RELS_ROUTE_FIND_COUNT
		symbol plug misc plug_00451 --? OBJECT_TY
		symbol plug misc plug_00452 --? OBJECT_TY
		symbol plug misc plug_00453 --? OBJECT_TY
		symbol plug misc plug_00454 --? OBJECT_TY
		symbol plug misc plug_00455 --? OBJECT_TY
		symbol plug misc plug_00456 --? ShowOneExtension
		symbol plug misc plug_00457 --? PrintTableName
		symbol plug misc plug_00458 --? PrintSceneName
		symbol plug misc plug_00459 --? K0_kind
		symbol plug misc plug_00460 --? KOVIsBlockValue
		symbol plug misc plug_00461 --> /main/connectors/parameter_object
		symbol plug misc plug_00462 --> /main/connectors/debugging_rules
		symbol plug misc plug_00463 --> /main/connectors/process_rulebook_count
		symbol plug misc plug_00464 --? NUMBER_RULEBOOKS_CREATED
		symbol plug misc plug_00465 --? DefaultValueOfKOV
		symbol plug misc plug_00466 --? RulePrintingRule
		symbol plug misc plug_00467 --? NUMBERED_RULES
		symbol plug misc plug_00468 --> /main/connectors/I7S_Swap
		symbol plug misc plug_00469 --> /main/connectors/I7S_Comp
		symbol plug misc plug_00470 --> /main/connectors/I7S_Tab
		symbol plug misc plug_00471 --> /main/connectors/I7S_Col
		symbol plug misc plug_00472 --> /main/connectors/I7S_Dir
		symbol plug misc plug_00473 --? TB_Blanks
		symbol plug misc plug_00474 --? TC_KOV
		symbol plug misc plug_00475 --? NUMBER_TY
		symbol plug misc plug_00476 --? RANKING_TABLE
		symbol plug misc plug_00477 --? K9_region
		symbol plug misc plug_00478 --? OBJECT_TY
		symbol plug misc plug_00479 --> /main/connectors/suppress_scope_loops
		symbol plug misc plug_00480 --> /main/connectors/particular_possession
		symbol plug misc plug_00481 --? DECIMAL_TOKEN_INNER
		symbol plug misc plug_00482 --? TRUTH_STATE_TOKEN_INNER
		symbol plug misc plug_00483 --? WORD_NEXTTOHIGHBIT
		symbol plug misc plug_00484 --? TIME_TOKEN_INNER
		symbol plug misc plug_00485 --? DetectSceneChange
		symbol plug misc plug_00486 --> /main/connectors/trace_actions
		symbol plug misc plug_00487 --? IterateRelations
		symbol plug misc plug_00488 --? RELS_SHOW
		symbol plug misc plug_00489 --? ResponseDivisions
		symbol plug misc plug_00490 --? PrintResponse
		symbol plug misc plug_00491 --> /main/connectors/suppress_text_substitution
		symbol plug misc plug_00492 --> /main/connectors/debug_scenes
		symbol plug misc plug_00493 --? ShowSceneStatus
		symbol plug misc plug_00494 --> /main/connectors/x_scope_count
		symbol plug misc plug_00495 --? ShowMeDetails
		symbol plug misc plug_00496 --? I7_Kind_Name
		symbol plug misc plug_00497 --? OBJECT_TY
		symbol plug misc plug_00498 --? OBJECT_TY
		symbol plug misc plug_00499 --? NO_PAST_TENSE_CONDS
		symbol plug misc plug_00500 --? TestSinglePastState
		symbol plug misc plug_00501 --? PastActionsI6Routines
		symbol plug misc plug_00502 --? MEMORY_HEAP_SIZE
		symbol plug misc plug_00503 --? BLKVALUE_TRACE
		symbol plug misc plug_00504 --? NIL_TY
		symbol plug misc plug_00505 --? KOVSupportFunction
		symbol plug misc plug_00506 --> /main/connectors/I7SFRAME
		symbol plug misc plug_00507 --> /main/connectors/RawBufferAddress
		symbol plug misc plug_00508 --> /main/connectors/TEXT_TY_CastPrimitiveNesting
		symbol plug misc plug_00509 --> /main/connectors/RawBufferSize
		symbol plug misc plug_00510 --> /main/connectors/say__comp
		symbol plug misc plug_00511 --> /main/connectors/TEXT_TY_RE_Trace
		symbol plug misc plug_00512 --> /main/connectors/TEXT_TY_RE_RewindCount
		symbol plug misc plug_00513 --> /main/connectors/TEXT_TY_RE_Err
		symbol plug misc plug_00514 --? STORED_ACTION_TY
		symbol plug misc plug_00515 --? LIST_OF_TY
		symbol plug misc plug_00516 --? KOVComparisonFunction
		symbol plug misc plug_00517 --> /main/connectors/LIST_OF_TY_Sort_cf
		symbol plug misc plug_00518 --? COMBINATION_TY
		symbol plug misc plug_00519 --? RELATION_TY
		symbol plug misc plug_00520 --? DefaultValueFinder
		symbol plug misc plug_00521 --? RELS_TEST
		symbol plug misc plug_00522 --? RELS_ASSERT_TRUE
		symbol plug misc plug_00523 --? RELS_ASSERT_FALSE
		symbol plug misc plug_00524 --? RELS_LOOKUP_ANY
		symbol plug misc plug_00525 --? RELS_LOOKUP_ALL_X
		symbol plug misc plug_00526 --? RELS_LOOKUP_ALL_Y
		symbol plug misc plug_00527 --? RELS_LIST
		symbol socket misc max_z_object --> /main/template/variables/max_z_object_var/max_z_object
		symbol socket misc MAX_SCORE --> /main/template/variables/MAX_SCORE_var/MAX_SCORE
		symbol plug misc plug_00528 --? INITIAL_MAX_SCORE
		symbol socket misc formal_rv --> /main/template/variables/formal_rv_var/formal_rv
		symbol socket misc formal_par0 --> /main/template/variables/formal_par0_var/formal_par0
		symbol socket misc formal_par1 --> /main/template/variables/formal_par1_var/formal_par1
		symbol socket misc formal_par2 --> /main/template/variables/formal_par2_var/formal_par2
		symbol socket misc formal_par3 --> /main/template/variables/formal_par3_var/formal_par3
		symbol socket misc formal_par4 --> /main/template/variables/formal_par4_var/formal_par4
		symbol socket misc formal_par5 --> /main/template/variables/formal_par5_var/formal_par5
		symbol socket misc formal_par6 --> /main/template/variables/formal_par6_var/formal_par6
		symbol socket misc formal_par7 --> /main/template/variables/formal_par7_var/formal_par7
		symbol socket misc unicode_temp --> /main/template/variables/unicode_temp_var/unicode_temp
		symbol socket misc location --> /main/template/variables/location_var/location
		symbol socket misc sline1 --> /main/template/variables/sline1_var/sline1
		symbol socket misc sline2 --> /main/template/variables/sline2_var/sline2
		symbol socket misc say__p --> /main/template/variables/say__p_var/say__p
		symbol socket misc say__pc --> /main/template/variables/say__pc_var/say__pc
		symbol socket misc say__pc_save --> /main/template/variables/say__pc_save_var/say__pc_save
		symbol socket misc say__n --> /main/template/variables/say__n_var/say__n
		symbol socket misc say__comp --> /main/template/variables/say__comp_var/say__comp
		symbol socket misc los_rv --> /main/template/variables/los_rv_var/los_rv
		symbol socket misc parameter_object --> /main/template/variables/parameter_object_var/parameter_object
		symbol socket misc parameter_value --> /main/template/variables/parameter_value_var/parameter_value
		symbol socket misc property_to_be_totalled --> /main/template/variables/property_to_be_totalled_var/property_to_be_totalled
		symbol socket misc property_loop_sign --> /main/template/variables/property_loop_sign_var/property_loop_sign
		symbol socket misc suppress_scope_loops --> /main/template/variables/suppress_scope_loops_var/suppress_scope_loops
		symbol socket misc temporary_value --> /main/template/variables/temporary_value_var/temporary_value
		symbol socket misc I7SFRAME --> /main/template/variables/I7SFRAME_var/I7SFRAME
		symbol socket misc TEXT_TY_RE_Err --> /main/template/variables/TEXT_TY_RE_Err_var/TEXT_TY_RE_Err
		symbol socket misc standard_interpreter --> /main/template/variables/standard_interpreter_var/standard_interpreter
		symbol socket misc undo_flag --> /main/template/variables/undo_flag_var/undo_flag
		symbol socket misc deadflag --> /main/template/variables/deadflag_var/deadflag
		symbol socket misc story_complete --> /main/template/variables/story_complete_var/story_complete
		symbol socket misc resurrect_please --> /main/template/variables/resurrect_please_var/resurrect_please
		symbol socket misc not_yet_in_play --> /main/template/variables/not_yet_in_play_var/not_yet_in_play
		symbol socket misc turns --> /main/template/variables/turns_var/turns
		symbol socket misc the_time --> /main/template/variables/the_time_var/the_time
		symbol plug misc plug_00529 --? NULL
		symbol socket misc time_rate --> /main/template/variables/time_rate_var/time_rate
		symbol socket misc score --> /main/template/variables/score_var/score
		symbol socket misc last_score --> /main/template/variables/last_score_var/last_score
		symbol socket misc notify_mode --> /main/template/variables/notify_mode_var/notify_mode
		symbol socket misc left_hand_status_line --> /main/template/variables/left_hand_status_line_var/left_hand_status_line
		symbol socket misc right_hand_status_line --> /main/template/variables/right_hand_status_line_var/right_hand_status_line
		symbol socket misc player --> /main/template/variables/player_var/player
		symbol socket misc real_location --> /main/template/variables/real_location_var/real_location
		symbol socket misc visibility_ceiling --> /main/template/variables/visibility_ceiling_var/visibility_ceiling
		symbol socket misc visibility_levels --> /main/template/variables/visibility_levels_var/visibility_levels
		symbol socket misc SACK_OBJECT --> /main/template/variables/SACK_OBJECT_var/SACK_OBJECT
		symbol socket misc act_requester --> /main/template/variables/act_requester_var/act_requester
		symbol socket misc actor --> /main/template/variables/actor_var/actor
		symbol socket misc actors_location --> /main/template/variables/actors_location_var/actors_location
		symbol socket misc actor_location --> /main/template/variables/actor_location_var/actor_location
		symbol socket misc action --> /main/template/variables/action_var/action
		symbol socket misc meta --> /main/template/variables/meta_var/meta
		symbol socket misc inp1 --> /main/template/variables/inp1_var/inp1
		symbol socket misc inp2 --> /main/template/variables/inp2_var/inp2
		symbol socket misc toomany_flag --> /main/template/variables/toomany_flag_var/toomany_flag
		symbol socket misc multiflag --> /main/template/variables/multiflag_var/multiflag
		symbol socket misc multiple_object_item --> /main/template/variables/multiple_object_item_var/multiple_object_item
		symbol socket misc noun --> /main/template/variables/noun_var/noun
		symbol socket misc second --> /main/template/variables/second_var/second
		symbol socket misc keep_silent --> /main/template/variables/keep_silent_var/keep_silent
		symbol socket misc etype --> /main/template/variables/etype_var/etype
		symbol socket misc trace_actions --> /main/template/variables/trace_actions_var/trace_actions
		symbol socket misc untouchable_object --> /main/template/variables/untouchable_object_var/untouchable_object
		symbol socket misc untouchable_silence --> /main/template/variables/untouchable_silence_var/untouchable_silence
		symbol socket misc touch_persona --> /main/template/variables/touch_persona_var/touch_persona
		symbol socket misc special_word --> /main/template/variables/special_word_var/special_word
		symbol socket misc consult_from --> /main/template/variables/consult_from_var/consult_from
		symbol socket misc consult_words --> /main/template/variables/consult_words_var/consult_words
		symbol socket misc parsed_number --> /main/template/variables/parsed_number_var/parsed_number
		symbol socket misc special_number1 --> /main/template/variables/special_number1_var/special_number1
		symbol socket misc special_number2 --> /main/template/variables/special_number2_var/special_number2
		symbol socket misc parser_trace --> /main/template/variables/parser_trace_var/parser_trace
		symbol socket misc pronoun_word --> /main/template/variables/pronoun_word_var/pronoun_word
		symbol socket misc pronoun_obj --> /main/template/variables/pronoun_obj_var/pronoun_obj
		symbol socket misc players_command --> /main/template/variables/players_command_var/players_command
		symbol socket misc matched_text --> /main/template/variables/matched_text_var/matched_text
		symbol socket misc reason_the_action_failed --> /main/template/variables/reason_the_action_failed_var/reason_the_action_failed
		symbol socket misc understand_as_mistake_number --> /main/template/variables/understand_as_mistake_number_var/understand_as_mistake_number
		symbol socket misc particular_possession --> /main/template/variables/particular_possession_var/particular_possession
		symbol socket misc parser_action --> /main/template/variables/parser_action_var/parser_action
		symbol socket misc parser_one --> /main/template/variables/parser_one_var/parser_one
		symbol socket misc parser_two --> /main/template/variables/parser_two_var/parser_two
		symbol socket misc parameters --> /main/template/variables/parameters_var/parameters
		symbol socket misc action_to_be --> /main/template/variables/action_to_be_var/action_to_be
		symbol socket misc action_reversed --> /main/template/variables/action_reversed_var/action_reversed
		symbol socket misc wn --> /main/template/variables/wn_var/wn
		symbol socket misc num_words --> /main/template/variables/num_words_var/num_words
		symbol socket misc verb_word --> /main/template/variables/verb_word_var/verb_word
		symbol socket misc verb_wordnum --> /main/template/variables/verb_wordnum_var/verb_wordnum
		symbol socket misc scope_reason --> /main/template/variables/scope_reason_var/scope_reason
		symbol socket misc scope_token --> /main/template/variables/scope_token_var/scope_token
		symbol socket misc scope_error --> /main/template/variables/scope_error_var/scope_error
		symbol socket misc scope_stage --> /main/template/variables/scope_stage_var/scope_stage
		symbol socket misc advance_warning --> /main/template/variables/advance_warning_var/advance_warning
		symbol socket misc ats_flag --> /main/template/variables/ats_flag_var/ats_flag
		symbol socket misc ats_hls --> /main/template/variables/ats_hls_var/ats_hls
		symbol socket misc move_pushing --> /main/template/variables/move_pushing_var/move_pushing
		symbol socket misc move_from --> /main/template/variables/move_from_var/move_from
		symbol socket misc move_to --> /main/template/variables/move_to_var/move_to
		symbol socket misc move_by --> /main/template/variables/move_by_var/move_by
		symbol socket misc move_through --> /main/template/variables/move_through_var/move_through
		symbol socket misc lookmode --> /main/template/variables/lookmode_var/lookmode
		symbol socket misc c_style --> /main/template/variables/c_style_var/c_style
		symbol socket misc c_depth --> /main/template/variables/c_depth_var/c_depth
		symbol socket misc c_iterator --> /main/template/variables/c_iterator_var/c_iterator
		symbol socket misc lt_value --> /main/template/variables/lt_value_var/lt_value
		symbol socket misc listing_together --> /main/template/variables/listing_together_var/listing_together
		symbol socket misc listing_size --> /main/template/variables/listing_size_var/listing_size
		symbol socket misc c_margin --> /main/template/variables/c_margin_var/c_margin
		symbol socket misc inventory_stage --> /main/template/variables/inventory_stage_var/inventory_stage
		symbol socket misc prior_named_noun --> /main/template/variables/prior_named_noun_var/prior_named_noun
		symbol socket misc prior_named_list --> /main/template/variables/prior_named_list_var/prior_named_list
		symbol socket misc prior_named_list_gender --> /main/template/variables/prior_named_list_gender_var/prior_named_list_gender
		symbol socket misc story_tense --> /main/template/variables/story_tense_var/story_tense
		symbol socket misc story_viewpoint --> /main/template/variables/story_viewpoint_var/story_viewpoint
		symbol socket misc clr_fg --> /main/template/variables/clr_fg_var/clr_fg
		symbol socket misc clr_bg --> /main/template/variables/clr_bg_var/clr_bg
		symbol socket misc clr_fgstatus --> /main/template/variables/clr_fgstatus_var/clr_fgstatus
		symbol socket misc clr_bgstatus --> /main/template/variables/clr_bgstatus_var/clr_bgstatus
		symbol socket misc clr_on --> /main/template/variables/clr_on_var/clr_on
		symbol socket misc statuswin_current --> /main/template/variables/statuswin_current_var/statuswin_current
		symbol socket misc statuswin_cursize --> /main/template/variables/statuswin_cursize_var/statuswin_cursize
		symbol socket misc statuswin_size --> /main/template/variables/statuswin_size_var/statuswin_size
		symbol socket misc debug_rules --> /main/template/variables/debug_rules_var/debug_rules
		symbol socket misc debug_scenes --> /main/template/variables/debug_scenes_var/debug_scenes
		symbol socket misc debug_rule_nesting --> /main/template/variables/debug_rule_nesting_var/debug_rule_nesting
		symbol socket misc top_object --> /main/template/variables/top_object_var/top_object
		symbol socket misc xcommsdir --> /main/template/variables/xcommsdir_var/xcommsdir
		symbol socket misc transcript_mode --> /main/template/variables/transcript_mode_var/transcript_mode
		symbol socket misc dict_start --> /main/template/variables/dict_start_var/dict_start
		symbol socket misc dict_entry_size --> /main/template/variables/dict_entry_size_var/dict_entry_size
		symbol socket misc dict_end --> /main/template/variables/dict_end_var/dict_end
		symbol socket misc lightflag --> /main/template/variables/lightflag_var/lightflag
		symbol socket misc requisition_stack_pointer --> /main/template/variables/requisition_stack_pointer_var/requisition_stack_pointer
		symbol socket misc MarkedObjectArray --> /main/template/variables/MarkedObjectArray_var/MarkedObjectArray
		symbol socket misc MarkedObjectLength --> /main/template/variables/MarkedObjectLength_var/MarkedObjectLength
		symbol socket misc list_filter_routine --> /main/template/variables/list_filter_routine_var/list_filter_routine
		symbol socket misc best_etype --> /main/template/variables/best_etype_var/best_etype
		symbol socket misc nextbest_etype --> /main/template/variables/nextbest_etype_var/nextbest_etype
		symbol socket misc parser_inflection --> /main/template/variables/parser_inflection_var/parser_inflection
		symbol socket misc pcount --> /main/template/variables/pcount_var/pcount
		symbol socket misc pcount2 --> /main/template/variables/pcount2_var/pcount2
		symbol socket misc nsns --> /main/template/variables/nsns_var/nsns
		symbol socket misc params_wanted --> /main/template/variables/params_wanted_var/params_wanted
		symbol socket misc inferfrom --> /main/template/variables/inferfrom_var/inferfrom
		symbol socket misc inferword --> /main/template/variables/inferword_var/inferword
		symbol socket misc dont_infer --> /main/template/variables/dont_infer_var/dont_infer
		symbol socket misc cobj_flag --> /main/template/variables/cobj_flag_var/cobj_flag
		symbol socket misc oops_from --> /main/template/variables/oops_from_var/oops_from
		symbol socket misc saved_oops --> /main/template/variables/saved_oops_var/saved_oops
		symbol socket misc held_back_mode --> /main/template/variables/held_back_mode_var/held_back_mode
		symbol socket misc hb_wn --> /main/template/variables/hb_wn_var/hb_wn
		symbol socket misc usual_grammar_after --> /main/template/variables/usual_grammar_after_var/usual_grammar_after
		symbol socket misc found_ttype --> /main/template/variables/found_ttype_var/found_ttype
		symbol socket misc found_tdata --> /main/template/variables/found_tdata_var/found_tdata
		symbol socket misc token_filter --> /main/template/variables/token_filter_var/token_filter
		symbol socket misc length_of_noun --> /main/template/variables/length_of_noun_var/length_of_noun
		symbol socket misc lookahead --> /main/template/variables/lookahead_var/lookahead
		symbol socket misc multi_mode --> /main/template/variables/multi_mode_var/multi_mode
		symbol socket misc multi_wanted --> /main/template/variables/multi_wanted_var/multi_wanted
		symbol socket misc multi_had --> /main/template/variables/multi_had_var/multi_had
		symbol socket misc multi_context --> /main/template/variables/multi_context_var/multi_context
		symbol socket misc indef_mode --> /main/template/variables/indef_mode_var/indef_mode
		symbol socket misc indef_type --> /main/template/variables/indef_type_var/indef_type
		symbol socket misc indef_wanted --> /main/template/variables/indef_wanted_var/indef_wanted
		symbol socket misc indef_guess_p --> /main/template/variables/indef_guess_p_var/indef_guess_p
		symbol socket misc indef_owner --> /main/template/variables/indef_owner_var/indef_owner
		symbol socket misc indef_cases --> /main/template/variables/indef_cases_var/indef_cases
		symbol socket misc indef_possambig --> /main/template/variables/indef_possambig_var/indef_possambig
		symbol socket misc indef_nspec_at --> /main/template/variables/indef_nspec_at_var/indef_nspec_at
		symbol socket misc allow_plurals --> /main/template/variables/allow_plurals_var/allow_plurals
		symbol socket misc take_all_rule --> /main/template/variables/take_all_rule_var/take_all_rule
		symbol socket misc dict_flags_of_noun --> /main/template/variables/dict_flags_of_noun_var/dict_flags_of_noun
		symbol socket misc pronoun__word --> /main/template/variables/pronoun__word_var/pronoun__word
		symbol socket misc pronoun__obj --> /main/template/variables/pronoun__obj_var/pronoun__obj
		symbol socket misc number_matched --> /main/template/variables/number_matched_var/number_matched
		symbol socket misc number_of_classes --> /main/template/variables/number_of_classes_var/number_of_classes
		symbol socket misc match_length --> /main/template/variables/match_length_var/match_length
		symbol socket misc match_from --> /main/template/variables/match_from_var/match_from
		symbol socket misc parsetoken_nesting --> /main/template/variables/parsetoken_nesting_var/parsetoken_nesting
		symbol socket misc EarlyInTurnSequence --> /main/template/variables/EarlyInTurnSequence_var/EarlyInTurnSequence
		symbol socket misc IterationsOfTurnSequence --> /main/template/variables/IterationsOfTurnSequence_var/IterationsOfTurnSequence
		symbol socket misc time_step --> /main/template/variables/time_step_var/time_step
		symbol socket misc converted_action_outcome --> /main/template/variables/converted_action_outcome_var/converted_action_outcome
		symbol socket misc activities_sp --> /main/template/variables/activities_sp_var/activities_sp
		symbol socket misc inhibit_flag --> /main/template/variables/inhibit_flag_var/inhibit_flag
		symbol socket misc saved_debug_rules --> /main/template/variables/saved_debug_rules_var/saved_debug_rules
		symbol socket misc MStack_Top --> /main/template/variables/MStack_Top_var/MStack_Top
		symbol socket misc MStack_Frame_Extent --> /main/template/variables/MStack_Frame_Extent_var/MStack_Frame_Extent
		symbol socket misc pending_boxed_quotation --> /main/template/variables/pending_boxed_quotation_var/pending_boxed_quotation
		symbol socket misc caps_mode --> /main/template/variables/caps_mode_var/caps_mode
		symbol socket misc short_name_case --> /main/template/variables/short_name_case_var/short_name_case
		symbol socket misc map_has_changed --> /main/template/variables/map_has_changed_var/map_has_changed
		symbol socket misc last_filter --> /main/template/variables/last_filter_var/last_filter
		symbol socket misc last_use_doors --> /main/template/variables/last_use_doors_var/last_use_doors
		symbol socket misc process_rulebook_count --> /main/template/variables/process_rulebook_count_var/process_rulebook_count
		symbol socket misc debugging_rules --> /main/template/variables/debugging_rules_var/debugging_rules
		symbol socket misc I7S_Tab --> /main/template/variables/I7S_Tab_var/I7S_Tab
		symbol socket misc I7S_Col --> /main/template/variables/I7S_Col_var/I7S_Col
		symbol socket misc I7S_Dir --> /main/template/variables/I7S_Dir_var/I7S_Dir
		symbol socket misc I7S_Swap --> /main/template/variables/I7S_Swap_var/I7S_Swap
		symbol socket misc I7S_Comp --> /main/template/variables/I7S_Comp_var/I7S_Comp
		symbol socket misc suppress_text_substitution --> /main/template/variables/suppress_text_substitution_var/suppress_text_substitution
		symbol socket misc x_scope_count --> /main/template/variables/x_scope_count_var/x_scope_count
		symbol socket misc RawBufferAddress --> /main/template/variables/RawBufferAddress_var/RawBufferAddress
		symbol socket misc RawBufferSize --> /main/template/variables/RawBufferSize_var/RawBufferSize
		symbol socket misc TEXT_TY_CastPrimitiveNesting --> /main/template/variables/TEXT_TY_CastPrimitiveNesting_var/TEXT_TY_CastPrimitiveNesting
		symbol socket misc TEXT_TY_RE_Trace --> /main/template/variables/TEXT_TY_RE_Trace_var/TEXT_TY_RE_Trace
		symbol socket misc TEXT_TY_RE_RewindCount --> /main/template/variables/TEXT_TY_RE_RewindCount_var/TEXT_TY_RE_RewindCount
		symbol socket misc LIST_OF_TY_Sort_cf --> /main/template/variables/LIST_OF_TY_Sort_cf_var/LIST_OF_TY_Sort_cf
