'<< >>': << >>
'<< is-a-kind (x) >>': << is-a-kind(x) >>
'<< is-a-var (x) >>': << is-a-var(x) >>
'<< is-a-const (x) >>': << is-a-const(x) >>
'<< everywhere (x) >>': << everywhere(x) >>
'<< nowhere (x) >>': << nowhere(x) >>
'<< here (x) >>': << here(x) >>
'<< called = magic passcode (x) >>': << called='magic passcode'(x) >>
'<< kind = number (x) >>': << kind=number(x) >>
'new unary blue': ok
'<< blue (x) >>': << blue(x) >>
'<< (x == y) >>': << (x == y) >>
'new binary sees': ok
'<< sees (x, y) >>': << sees(x, y) >>
'<< NOT< ^ blue (x) ^ NOT> >>': << NOT< blue(x) NOT> >>
'<< Forall x IN< kind = number (x) IN>: blue (x) >>': << ForAll x IN< kind=number(x) IN> : blue(x) >>
'<< Exists x >>': << Exists x >>
'<< DoesNotExist x IN< kind = number (x) IN>: blue (x) >>': << DoesNotExist x IN< kind=number(x) IN> : blue(x) >>
'<< Forall x IN< kind = number (x) IN>: blue (x) >>': << ForAll x IN< kind=number(x) IN> : blue(x) >>
'<< Card= 6 x IN< kind = number (x) IN>: blue (x) >>': << Card=6 x IN< kind=number(x) IN> : blue(x) >>
