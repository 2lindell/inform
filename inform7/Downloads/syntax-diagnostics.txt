ROOT_NT
    HEADING_NT'implied inclusions' (level 0)
        INCLUSION_NT'include basic inform by graham nelson'
            HEADING_NT'version 1 of basic inform by graham nelson begins here' (level 0)
                BEGINHERE_NT'version 1 of basic inform by graham nelson'
                SENTENCE_NT'Basic Inform, included in every project, defines the basic f'
                HEADING_NT'part one - preamble' (level 3)
                    SENTENCE_NT'the verb to be means the built-in new-verb meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-verb meaning'
                    SENTENCE_NT'the verb to be means the built-in new-plural meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-plural meaning'
                    SENTENCE_NT'the verb to be means the built-in new-activity meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-activity meaning'
                    SENTENCE_NT'the verb to be means the built-in new-action meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-action meaning'
                    SENTENCE_NT'the verb to be means the built-in new-adjective meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-adjective meaning'
                    SENTENCE_NT'the verb to be means the built-in new-either-or meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-either-or meaning'
                    SENTENCE_NT'the verb to be means the built-in defined-by-table meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in defined-by-table meaning'
                    SENTENCE_NT'the verb to be means the built-in rule-listed-in meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in rule-listed-in meaning'
                    SENTENCE_NT'the verb to be means the built-in new-figure meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-figure meaning'
                    SENTENCE_NT'the verb to be means the built-in new-sound meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-sound meaning'
                    SENTENCE_NT'the verb to be means the built-in new-file meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in new-file meaning'
                    SENTENCE_NT'the verb to be means the built-in episode meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'built-in episode meaning'
                    SENTENCE_NT'the verb to be means the equality relation'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be'
                        PROPER_NOUN_NT'equality relation'
                    SENTENCE_NT'the verb to mean means the meaning relation'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to mean'
                        PROPER_NOUN_NT'meaning relation'
                    SENTENCE_NT'the verb to imply means the built-in verb-means meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to imply'
                        PROPER_NOUN_NT'built-in verb-means meaning'
                    SENTENCE_NT'the verb to imply means the meaning relation'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to imply'
                        PROPER_NOUN_NT'meaning relation'
                    SENTENCE_NT'the verb to be able to be means the built-in can-be meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be able to be'
                        PROPER_NOUN_NT'built-in can-be meaning'
                    SENTENCE_NT'the verb to have means the possession relation'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to have'
                        PROPER_NOUN_NT'possession relation'
                    SENTENCE_NT'the verb to specify means the built-in specifies-notation me'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to specify'
                        PROPER_NOUN_NT'built-in specifies-notation meaning'
                    SENTENCE_NT'the verb to relate means the built-in new-relation meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to relate'
                        PROPER_NOUN_NT'built-in new-relation meaning'
                    SENTENCE_NT'the verb to relate means the universal relation'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to relate'
                        PROPER_NOUN_NT'universal relation'
                    SENTENCE_NT'the verb to substitute for means the built-in rule-substitut'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to substitute for'
                        PROPER_NOUN_NT'built-in rule-substitutes-for meaning'
                    SENTENCE_NT'the verb to do means the built-in rule-does-nothing meaning'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to do'
                        PROPER_NOUN_NT'built-in rule-does-nothing meaning'
                    SENTENCE_NT'the verb to do + if means the built-in rule-does-nothing-if '
                        VERB_NT'means'
                        PROPER_NOUN_NT'to do + if'
                        PROPER_NOUN_NT'built-in rule-does-nothing-if meaning'
                    SENTENCE_NT'the verb to do + when means the built-in rule-does-nothing-i'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to do + when'
                        PROPER_NOUN_NT'built-in rule-does-nothing-if meaning'
                    SENTENCE_NT'the verb to do + unless means the built-in rule-does-nothing'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to do + unless'
                        PROPER_NOUN_NT'built-in rule-does-nothing-unless meaning'
                    SENTENCE_NT'the verb to translate into + as means the built-in translate'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to translate into + as'
                        PROPER_NOUN_NT'built-in translates-into-unicode meaning'
                    SENTENCE_NT'the verb to translate into + as means the built-in translate'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to translate into + as'
                        PROPER_NOUN_NT'built-in translates-into-i6 meaning'
                    SENTENCE_NT'the verb to translate into + as means the built-in translate'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to translate into + as'
                        PROPER_NOUN_NT'built-in translates-into-language meaning'
                    SENTENCE_NT'the verb to translate as means the built-in use-translates m'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to translate as'
                        PROPER_NOUN_NT'built-in use-translates meaning'
                    SENTENCE_NT'the verb to provide means the provision relation'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to provide'
                        PROPER_NOUN_NT'provision relation'
                    SENTENCE_NT'the verb to use in the imperative means the built-in use mea'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to use'
                        PROPER_NOUN_NT'built-in use meaning'
                    SENTENCE_NT'the verb to include + in in the imperative means the built-i'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to include + in'
                        PROPER_NOUN_NT'built-in include-in meaning'
                    SENTENCE_NT'the verb to omit + from in the imperative means the built-in'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to omit + from'
                        PROPER_NOUN_NT'built-in omit-from meaning'
                    SENTENCE_NT'the verb to be greater than means the numerically-greater-th'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be greater than'
                        PROPER_NOUN_NT'numerically-greater-than relation'
                    SENTENCE_NT'the verb to be less than means the numerically-less-than rel'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be less than'
                        PROPER_NOUN_NT'numerically-less-than relation'
                    SENTENCE_NT'the verb to be at least means the numerically-greater-than-o'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be at least'
                        PROPER_NOUN_NT'numerically-greater-than-or-equal-to relation'
                    SENTENCE_NT'the verb to be at most means the numerically-less-than-or-eq'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to be at most'
                        PROPER_NOUN_NT'numerically-less-than-or-equal-to relation'
                    SENTENCE_NT'use ineffectual translates as (-  ! Use ineffectual does not'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'ineffectual'
                        PROPER_NOUN_NT'(-  ! Use ineffectual does nothing. '
                    SENTENCE_NT'use american dialect translates as (-  Constant DIALECT_US; '
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'american dialect'
                        PROPER_NOUN_NT'(-  Constant DIALECT_US; '
                    SENTENCE_NT'use the serial comma translates as (-  Constant SERIAL_COMMA'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'the serial comma'
                        PROPER_NOUN_NT'(-  Constant SERIAL_COMMA; '
                    SENTENCE_NT'use memory economy translates as (-  Constant MEMORY_ECONOMY'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'memory economy'
                        PROPER_NOUN_NT'(-  Constant MEMORY_ECONOMY; '
                    SENTENCE_NT'use engineering notation translates as (-  Constant USE_E_NO'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'engineering notation'
                        PROPER_NOUN_NT'(-  Constant USE_E_NOTATION = 0; '
                    SENTENCE_NT'use unabbreviated object names translates as (-  Constant UN'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'unabbreviated object names'
                        PROPER_NOUN_NT'(-  Constant UNABBREVIATED_OBJECT_NAMES = 0; '
                    SENTENCE_NT'use predictable randomisation translates as (-  Constant FIX'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'predictable randomisation'
                        PROPER_NOUN_NT'(-  Constant FIX_RNG; '
                    SENTENCE_NT'use fast route-finding translates as (-  Constant FAST_ROUTE'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'fast route-finding'
                        PROPER_NOUN_NT'(-  Constant FAST_ROUTE_FINDING; '
                    SENTENCE_NT'use slow route-finding translates as (-  Constant SLOW_ROUTE'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'slow route-finding'
                        PROPER_NOUN_NT'(-  Constant SLOW_ROUTE_FINDING; '
                    SENTENCE_NT'use numbered rules translates as (-  Constant NUMBERED_RULES'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'numbered rules'
                        PROPER_NOUN_NT'(-  Constant NUMBERED_RULES; '
                    SENTENCE_NT'use telemetry recordings translates as (-  Constant TELEMETR'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'telemetry recordings'
                        PROPER_NOUN_NT'(-  Constant TELEMETRY_ON; '
                    SENTENCE_NT'use no deprecated features translates as (-  Constant NO_DEP'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'no deprecated features'
                        PROPER_NOUN_NT'(-  Constant NO_DEPRECATED_FEATURES; '
                    SENTENCE_NT'use gn testing version translates as (-  Constant GN_TESTING'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'gn testing version'
                        PROPER_NOUN_NT'(-  Constant GN_TESTING_VERSION; '
                    SENTENCE_NT'use authorial modesty translates as (-  Constant AUTHORIAL_M'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'authorial modesty'
                        PROPER_NOUN_NT'(-  Constant AUTHORIAL_MODESTY; '
                    SENTENCE_NT'use dynamic memory allocation of at least 8192 translates as'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'dynamic memory allocation of at least 8192'
                        PROPER_NOUN_NT'(-  Constant DynamicMemoryAllocation = {N}; '
                    SENTENCE_NT'use maximum text length of at least 1024 translates as (-  C'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'maximum text length of at least 1024'
                        PROPER_NOUN_NT'(-  Constant TEXT_TY_BufferSize = {N}+3; '
                    SENTENCE_NT'use index figure thumbnails of at least 50 translates as (- '
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'index figure thumbnails of at least 50'
                        PROPER_NOUN_NT'(-  Constant MAX_FIGURE_THUMBNAILS_IN_INDEX = {N}; '
                    SENTENCE_NT'use dynamic memory allocation of at least 8192'
                        VERB_NT'use'
                        PROPER_NOUN_NT'dynamic memory allocation of at least 8192'
                    SENTENCE_NT'use alloc_chunk_size of 32000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'alloc_chunk_size of 32000'
                    SENTENCE_NT'use max_arrays of 10000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_arrays of 10000'
                    SENTENCE_NT'use max_classes of 200'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_classes of 200'
                    SENTENCE_NT'use max_verbs of 255'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_verbs of 255'
                    SENTENCE_NT'use max_labels of 10000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_labels of 10000'
                    SENTENCE_NT'use max_zcode_size of 500000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_zcode_size of 500000'
                    SENTENCE_NT'use max_static_data of 180000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_static_data of 180000'
                    SENTENCE_NT'use max_prop_table_size of 200000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_prop_table_size of 200000'
                    SENTENCE_NT'use max_indiv_prop_table_size of 20000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_indiv_prop_table_size of 20000'
                    SENTENCE_NT'use max_stack_size of 65536'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_stack_size of 65536'
                    SENTENCE_NT'use max_symbols of 20000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_symbols of 20000'
                    SENTENCE_NT'use max_expression_nodes of 256'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_expression_nodes of 256'
                    SENTENCE_NT'use max_labels of 200000'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_labels of 200000'
                    SENTENCE_NT'use max_local_variables of 256'
                        VERB_NT'use'
                        PROPER_NOUN_NT'max_local_variables of 256'
                HEADING_NT'part two - miscellaneous definitions' (level 3)
                    SENTENCE_NT'an object has a value called variable initial value'
                        VERB_NT'has'
                        COMMON_NOUN_NT'object'
                        ALLOWED_NT
                            PROPERTYCALLED_NT'called'
                                PROPER_NOUN_NT'value'
                                PROPER_NOUN_NT'variable initial value'
                    SENTENCE_NT'an object has a text called specification'
                        VERB_NT'has'
                        COMMON_NOUN_NT'object'
                        ALLOWED_NT
                            PROPERTYCALLED_NT'called'
                                PROPER_NOUN_NT'text'
                                PROPER_NOUN_NT'specification'
                    SENTENCE_NT'an object has a text called indefinite appearance text'
                        VERB_NT'has'
                        COMMON_NOUN_NT'object'
                        ALLOWED_NT
                            PROPERTYCALLED_NT'called'
                                PROPER_NOUN_NT'text'
                                PROPER_NOUN_NT'indefinite appearance text'
                    SENTENCE_NT'an object has a text called printed name'
                        VERB_NT'has'
                        COMMON_NOUN_NT'object'
                        ALLOWED_NT
                            PROPERTYCALLED_NT'called'
                                PROPER_NOUN_NT'text'
                                PROPER_NOUN_NT'printed name'
                    SENTENCE_NT'an object has a text called printed plural name'
                        VERB_NT'has'
                        COMMON_NOUN_NT'object'
                        ALLOWED_NT
                            PROPERTYCALLED_NT'called'
                                PROPER_NOUN_NT'text'
                                PROPER_NOUN_NT'printed plural name'
                    SENTENCE_NT'an object has a text called an indefinite article'
                        VERB_NT'has'
                        COMMON_NOUN_NT'object'
                        ALLOWED_NT
                            PROPERTYCALLED_NT'called'
                                PROPER_NOUN_NT'text'
                                PROPER_NOUN_NT'indefinite article'
                    SENTENCE_NT'an object can be plural-named or singular-named'
                        VERB_NT'can be'
                        COMMON_NOUN_NT'an object'
                        PROPER_NOUN_NT'plural-named or singular-named'
                            AND_NT'or'
                                PROPER_NOUN_NT'plural-named'
                                PROPER_NOUN_NT'singular-named'
                    SENTENCE_NT'an object is usually singular-named'
                        VERB_NT'is usually'
                        COMMON_NOUN_NT'object'
                        ADJECTIVE_NT'singular-named'
                    SENTENCE_NT'an object can be proper-named or improper-named'
                        VERB_NT'can be'
                        COMMON_NOUN_NT'an object'
                        PROPER_NOUN_NT'proper-named or improper-named'
                            AND_NT'or'
                                PROPER_NOUN_NT'proper-named'
                                PROPER_NOUN_NT'improper-named'
                    SENTENCE_NT'an object is usually improper-named'
                        VERB_NT'is usually'
                        COMMON_NOUN_NT'object'
                        ADJECTIVE_NT'improper-named'
                    SENTENCE_NT'an object can be ambiguously plural'
                        VERB_NT'can be'
                        COMMON_NOUN_NT'an object'
                        PROPER_NOUN_NT'ambiguously plural'
                            PROPER_NOUN_NT'ambiguously plural'
                    SENTENCE_NT'the indefinite article property translates into i6 as articl'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'indefinite article property'
                        PROPER_NOUN_NT'article'
                    SENTENCE_NT'the printed plural name property translates into i6 as plura'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'printed plural name property'
                        PROPER_NOUN_NT'plural'
                    SENTENCE_NT'the printed name property translates into i6 as short_name'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'printed name property'
                        PROPER_NOUN_NT'short_name'
                    SENTENCE_NT'the plural-named property translates into i6 as pluralname'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'plural-named property'
                        PROPER_NOUN_NT'pluralname'
                    SENTENCE_NT'the ambiguously plural property translates into i6 as ambigp'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'ambiguously plural property'
                        PROPER_NOUN_NT'ambigpluralname'
                    SENTENCE_NT'the proper-named property translates into i6 as proper'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'proper-named property'
                        PROPER_NOUN_NT'proper'
                    SENTENCE_NT'a natural language is a kind of value'
                        VERB_NT'is'
                        COMMON_NOUN_NT'natural language'
                        KIND_NT'kind of value'
                            COMMON_NOUN_NT'value'
                    SENTENCE_NT'the language of play is a natural language that varies'
                        VERB_NT'is'
                        PROPER_NOUN_NT'language of play'
                        COMMON_NOUN_NT'natural language that varies'
                    SENTENCE_NT'the parameter-object is an object that varies'
                        VERB_NT'is'
                        PROPER_NOUN_NT'parameter-object'
                        COMMON_NOUN_NT'object that varies'
                    SENTENCE_NT'the parameter-object variable translates into i6 as paramete'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'parameter-object variable'
                        PROPER_NOUN_NT'parameter_value'
                    SENTENCE_NT'startup rules is a rulebook'
                        VERB_NT'is'
                        PROPER_NOUN_NT'startup rules'
                        COMMON_NOUN_NT'rulebook'
                    SENTENCE_NT'startup rules have outcomes allow startup ( success ) and de'
                        VERB_NT'have'
                        PROPER_NOUN_NT'startup rules'
                        PROPERTY_LIST_NT'and'
                            PROPER_NOUN_NT'outcomes allow startup ( success )'
                            PROPER_NOUN_NT'deny startup ( failure )'
                    SENTENCE_NT'shutdown rules is a rulebook'
                        VERB_NT'is'
                        PROPER_NOUN_NT'shutdown rules'
                        COMMON_NOUN_NT'rulebook'
                    SENTENCE_NT'starting the virtual machine ( documented at act_startvm ) i'
                        VERB_NT'is'
                        PROPER_NOUN_NT'starting the virtual machine ( documented at act_startvm )'
                        PROPER_NOUN_NT'an activity'
                    SENTENCE_NT'the enable glulx acceleration rule is listed first in for st'
                        VERB_NT'is'
                        PROPER_NOUN_NT'the enable glulx acceleration rule'
                        PROPER_NOUN_NT'first in for starting the virtual machine'
                    SENTENCE_NT'the enable glulx acceleration rule translates into i6 as ENA'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'enable glulx acceleration rule'
                        PROPER_NOUN_NT'ENABLE_GLULX_ACCEL_R'
                    SENTENCE_NT'printing the name of something ( documented at act_pn ) is a'
                        VERB_NT'is'
                        PROPER_NOUN_NT'printing the name of something ( documented at act_pn )'
                        PROPER_NOUN_NT'an activity'
                    SENTENCE_NT'the standard name printing rule is listed last in the for pr'
                        VERB_NT'is'
                        PROPER_NOUN_NT'the standard name printing rule'
                        PROPER_NOUN_NT'last in the for printing the name rulebook'
                    SENTENCE_NT'the standard name printing rule translates into i6 as STANDA'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'standard name printing rule'
                        PROPER_NOUN_NT'STANDARD_NAME_PRINTING_R'
                    SENTENCE_NT'printing the plural name of something ( documented at act_pp'
                        VERB_NT'is'
                        PROPER_NOUN_NT'printing the plural name of something ( documented at act_pp'
                        PROPER_NOUN_NT'an activity'
                    SENTENCE_NT'the standard printing the plural name rule is listed last in'
                        VERB_NT'is'
                        PROPER_NOUN_NT'the standard printing the plural name rule'
                        PROPER_NOUN_NT'last in the for printing the plural name rulebook'
                    SENTENCE_NT'the standard printing the plural name rule translates into i'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'standard printing the plural name rule'
                        PROPER_NOUN_NT'STANDARD_PLURAL_NAME_PRINTING_R'
                HEADING_NT'part three - phrasebook' (level 3)
                    HEADING_NT'chapter 1 - saying' (level 4)
                        HEADING_NT'section 1 - saying values' (level 5)
                            RULE_NT'to say ( val - sayable value of kind k ) ( documented at ph_'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-say:val:K} '
                            RULE_NT'to say ( something - number ) in words ( documented at phs_n'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (number) say__n=({something}); '
                            RULE_NT'to say s ( documented at phs_s )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  STextSubstitution(); '
                            RULE_NT'to showme ( val - value ) ( documented at ph_showme )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-show-me:val} '
                        HEADING_NT'section 2 - saying names' (level 5)
                            RULE_NT'to say a ( something - object ) ( documented at phs_a )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (a) {something}; '
                            RULE_NT'to say an ( something - object ) ( documented at phs_a )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (a) {something}; '
                            RULE_NT'to say a ( something - object ) ( documented at phs_a )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  CIndefArt({something}); '
                            RULE_NT'to say an ( something - object ) ( documented at phs_a )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  CIndefArt({something}); '
                            RULE_NT'to say the ( something - object ) ( documented at phs_the )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (the) {something}; '
                            RULE_NT'to say the ( something - object ) ( documented at phs_the )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (The) {something}; '
                        HEADING_NT'section 3 - saying special characters' (level 5)
                            RULE_NT'to say bracket -- running on ( documented at phs_bracket )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print "["; '
                            RULE_NT'to say close bracket -- running on ( documented at phs_close'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print "]"; '
                            RULE_NT'to say apostrophe/' -- running on ( documented at phs_apostr'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print "'"; '
                            RULE_NT'to say quotation mark -- running on ( documented at phs_quot'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print "~"; '
                        HEADING_NT'section 4 - saying line and paragraph breaks' (level 5)
                            RULE_NT'to say line break -- running on ( documented at phs_linebrea'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  new_line; '
                            RULE_NT'to say no line break -- running on ( documented at phs_nolin'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'do nothing'
                                        INVOCATION_NT'do nothing'
                            RULE_NT'to say conditional paragraph break -- running on ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  DivideParagraphPoint(); '
                            RULE_NT'to say paragraph break -- running on ( documented at phs_par'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  DivideParagraphPoint(); new_line; '
                            RULE_NT'to say run paragraph on -- running on ( documented at phs_ru'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RunParagraphOn(); '
                            RULE_NT'to decide if a paragraph break is pending ( documented at ph'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (say__p) '
                        HEADING_NT'section 5 - saying if and otherwise' (level 5)
                            RULE_NT'to say if ( c - condition ) ( documented at phs_if )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	if (~~({c})) jump {-label:Say};
                                    		'
                            RULE_NT'to say unless ( c - condition ) ( documented at phs_unless )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	if ({c}) jump {-label:Say};
                                    		'
                            RULE_NT'to say otherwise/else if ( c - condition ) ( documented at p'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	jump {-label:SayX}; .{-label:Say}{-counter-up:Say}; if '
                            RULE_NT'to say otherwise/else unless ( c - condition ) ( documented '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	jump {-label:SayX}; .{-label:Say}{-counter-up:Say}; if '
                            RULE_NT'to say otherwise ( documented at phs_otherwise )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	jump {-label:SayX}; .{-label:Say}{-counter-up:Say};
                                    		'
                            RULE_NT'to say else ( documented at phs_otherwise )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	jump {-label:SayX}; .{-label:Say}{-counter-up:Say};
                                    		'
                            RULE_NT'to say end if ( documented at phs_endif )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	.{-label:Say}{-counter-up:Say}; .{-label:SayX}{-counter'
                            RULE_NT'to say end unless ( documented at phs_endunless )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	.{-label:Say}{-counter-up:Say}; .{-label:SayX}{-counter'
                        HEADING_NT'section 6 - saying one of' (level 5)
                            RULE_NT'to say one of -- beginning say_one_of ( documented at phs_on'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	{-counter-makes-array:say_one_of}
                                    	{-counter-makes-arra'
                            RULE_NT'to say or -- continuing say_one_of ( documented at phs_or )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  @nop; {-segment-count}: '
                            RULE_NT'to say at random -- ending say_one_of with marker i7_soo_ran'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say purely at random -- ending say_one_of with marker i7_'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say then at random -- ending say_one_of with marker i7_so'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say then purely at random -- ending say_one_of with marke'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say sticky random -- ending say_one_of with marker i7_soo'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say as decreasingly likely outcomes -- ending say_one_of '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say in random order -- ending say_one_of with marker i7_s'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say cycling -- ending say_one_of with marker i7_soo_cyc ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say stopping -- ending say_one_of with marker i7_soo_stop'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                            RULE_NT'to say first time -- beginning say_first_time ( documented a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-counter-makes-array:say_first_time}
                                    	if ((say__comp =='
                            RULE_NT'to say only -- ending say_first_time ( documented at phs_fir'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-close-brace} '
                        HEADING_NT'section 7 - saying fonts and visual effects' (level 5)
                            RULE_NT'to say bold type -- running on ( documented at phs_bold )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  style bold; '
                            RULE_NT'to say italic type -- running on ( documented at phs_italic '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  style underline; '
                            RULE_NT'to say roman type -- running on ( documented at phs_roman )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  style roman; '
                            RULE_NT'to say fixed letter spacing -- running on ( documented at ph'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  font off; '
                            RULE_NT'to say variable letter spacing -- running on ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  font on; '
                        HEADING_NT'section 8 - saying lists of values' (level 5)
                            RULE_NT'to say ( l - a list of values ) in brace notation ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Say({-by-reference:L}, 1); '
                            RULE_NT'to say ( l - a list of objects ) with definite articles ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Say({-by-reference:L}, 2); '
                            RULE_NT'to say ( l - a list of objects ) with indefinite articles ( '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Say({-by-reference:L}, 3); '
                    HEADING_NT'chapter 2 - conditions and variables' (level 4)
                        HEADING_NT'section 1 - conditions' (level 5)
                            RULE_NT'to now ( cn - condition ) ( documented at ph_now )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {cn} '
                            RULE_NT'to decide what truth state is whether or not ( c - condition'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({C}) '
                        HEADING_NT'section 2 - assigning temporary variables' (level 5)
                            RULE_NT'to let ( t - nonexisting variable ) be ( u - value ) ( assig'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-unprotect:t}
                                    		{-copy:t:u}
                                    	'
                            RULE_NT'to let ( t - nonexisting variable ) be ( u - name of kind of'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-unprotect:t}
                                    		{-initialise:t}
                                    	'
                            RULE_NT'to let ( t - nonexisting variable ) be ( u - description of '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-unprotect:t}
                                    		{-initialise:t}
                                    		{-now-matches-descr'
                            RULE_NT'to let ( t - nonexisting variable ) be given by ( q - equati'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-unprotect:t}
                                    		{-primitive-definition:solve-equation'
                            RULE_NT'to let ( t - existing variable ) be ( u - value ) ( assignme'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	 	{-copy:t:u}
                                    	'
                            RULE_NT'to let ( t - existing variable ) be given by ( q - equation '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-primitive-definition:solve-equation};
                                    	'
                        HEADING_NT'section 3 - increase and decrease' (level 5)
                            RULE_NT'to increase ( s - storage ) by ( w - value ) ( assignment op'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-copy:S:+w};
                                    	'
                            RULE_NT'to decrease ( s - storage ) by ( w - value ) ( assignment op'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-copy:S:-w};
                                    	'
                            RULE_NT'to increment ( s - storage ) ( documented at ph_increment )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-copy:S:+};
                                    	'
                            RULE_NT'to decrement ( s - storage ) ( documented at ph_decrement )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-copy:S:-};
                                    	'
                    HEADING_NT'chapter 2 - arithmetic' (level 4)
                        HEADING_NT'section 1 - arithmetic operations' (level 5)
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is remainder after dividing'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is ( x - arithmetic value )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X:Y}) '
                            RULE_NT'to decide which arithmetic value is the square root of ( x -'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X}) '
                            RULE_NT'to decide which arithmetic value is the cube root of ( x - a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-arithmetic-operation:X}) '
                            RULE_NT'to decide which arithmetic value is total ( p - arithmetic v'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:total-of} '
                        HEADING_NT'section 2 - saying real numbers ( not for z-machine )' (level 5)
                            RULE_NT'to say ( r - a real number ) to ( n - number ) decimal place'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  Float({R}, {N}); '
                            RULE_NT'to say ( r - a real number ) in decimal notation ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FloatDec({R}); '
                            RULE_NT'to say ( r - a real number ) to ( n - number ) decimal place'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FloatDec({R}, {N}); '
                            RULE_NT'to say ( r - a real number ) in scientific notation ( docume'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FloatExp({R}); '
                            RULE_NT'to say ( r - a real number ) to ( n - number ) decimal place'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FloatExp({R}, {N}); '
                        HEADING_NT'section 3 - real arithmetic ( not for z-machine )' (level 5)
                            RULE_NT'to decide which real number is the reciprocal of ( r - a rea'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Reciprocal({R}) '
                            RULE_NT'to decide which real number is the absolute value of ( r - a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Abs({R}) '
                            RULE_NT'to decide which real number is the real square root of ( r -'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Root({R}) '
                            RULE_NT'to decide which real number is the real square of ( r - a re'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let x be given by x = r^2 where x is a real number'
                                        INVOCATION_NT'let x be given by x = r^2 where x is a real number'
                                            NEW_LOCAL_CONTEXT_NT'x'
                                                UNKNOWN_NT'x'
                                            RVALUE_CONTEXT_NT'x = r^2 where x is a real number'
                                                CONSTANT_NT'x = r^2 where x is a real number'-equation name
                                    INVOCATION_LIST_NT'decide on x'
                                        INVOCATION_NT'decide on x'
                                            RVALUE_CONTEXT_NT'x'
                                                LOCAL_VARIABLE_NT'x'(tmp_0;real number)
                            RULE_NT'to decide which real number is the ceiling of ( r - a real n'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Ceiling({R}) '
                            RULE_NT'to decide which real number is the floor of ( r - a real num'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Floor({R}) '
                            RULE_NT'to decide which number is ( r - a real number ) to the neare'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_to_NUMBER_TY({R}) '
                        HEADING_NT'section 4 - exponential functions ( not for z-machine )' (level 5)
                            RULE_NT'to decide which real number is the natural/-- logarithm of ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Log({R}) '
                            RULE_NT'to decide which real number is the logarithm to base ( n - a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_BLog({R}, {N}) '
                            RULE_NT'to decide which real number is the exponential of ( r - a re'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Exp({R}) '
                            RULE_NT'to decide which real number is ( r - a real number ) to the '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Pow({R}, {P}) '
                        HEADING_NT'section 5 - trigonometric functions ( not for z-machine )' (level 5)
                            RULE_NT'to decide which real number is ( r - a real number ) degrees'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Times({R}, $+0.0174532925) '
                            RULE_NT'to decide which real number is the sine of ( r - a real numb'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Sin({R}) '
                            RULE_NT'to decide which real number is the cosine of ( r - a real nu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Cos({R}) '
                            RULE_NT'to decide which real number is the tangent of ( r - a real n'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Tan({R}) '
                            RULE_NT'to decide which real number is the arcsine of ( r - a real n'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Arcsin({R}) '
                            RULE_NT'to decide which real number is the arccosine of ( r - a real'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Arccos({R}) '
                            RULE_NT'to decide which real number is the arctangent of ( r - a rea'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Arctan({R}) '
                        HEADING_NT'section 6 - trigonometric functions ( not for z-machine )' (level 5)
                            RULE_NT'to decide which real number is the hyperbolic sine of ( r - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Sinh({R}) '
                            RULE_NT'to decide which real number is the hyperbolic cosine of ( r '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Cosh({R}) '
                            RULE_NT'to decide which real number is the hyperbolic tangent of ( r'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  REAL_NUMBER_TY_Tanh({R}) '
                            RULE_NT'to decide which real number is the hyperbolic arcsine of ( r'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let x be given by x = log ( r + root ( r^2 + 1 ) ) where x i'
                                        INVOCATION_NT'let x be given by x = log ( r + root ( r^2 + 1 ) ) where x i'
                                            NEW_LOCAL_CONTEXT_NT'x'
                                                UNKNOWN_NT'x'
                                            RVALUE_CONTEXT_NT'x = log ( r + root ( r^2 + 1 ) ) where x is a real number'
                                                CONSTANT_NT'x = log ( r + root ( r^2 + 1 ) ) where x is a real number'-equation name
                                    INVOCATION_LIST_NT'decide on x'
                                        INVOCATION_NT'decide on x'
                                            RVALUE_CONTEXT_NT'x'
                                                LOCAL_VARIABLE_NT'x'(tmp_0;real number)
                            RULE_NT'to decide which real number is the hyperbolic arccosine of ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let x be given by x = log ( r + root ( r^2 - 1 ) ) where x i'
                                        INVOCATION_NT'let x be given by x = log ( r + root ( r^2 - 1 ) ) where x i'
                                            NEW_LOCAL_CONTEXT_NT'x'
                                                UNKNOWN_NT'x'
                                            RVALUE_CONTEXT_NT'x = log ( r + root ( r^2 - 1 ) ) where x is a real number'
                                                CONSTANT_NT'x = log ( r + root ( r^2 - 1 ) ) where x is a real number'-equation name
                                    INVOCATION_LIST_NT'decide on x'
                                        INVOCATION_NT'decide on x'
                                            RVALUE_CONTEXT_NT'x'
                                                LOCAL_VARIABLE_NT'x'(tmp_0;real number)
                            RULE_NT'to decide which real number is the hyperbolic arctangent of '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let x be given by x = 0.5* ( log ( 1+r ) - log ( 1-r ) ) whe'
                                        INVOCATION_NT'let x be given by x = 0.5* ( log ( 1+r ) - log ( 1-r ) ) whe'
                                            NEW_LOCAL_CONTEXT_NT'x'
                                                UNKNOWN_NT'x'
                                            RVALUE_CONTEXT_NT'x = 0.5* ( log ( 1+r ) - log ( 1-r ) ) where x is a real num'
                                                CONSTANT_NT'x = 0.5* ( log ( 1+r ) - log ( 1-r ) ) where x is a real num'-equation name
                                    INVOCATION_LIST_NT'decide on x'
                                        INVOCATION_NT'decide on x'
                                            RVALUE_CONTEXT_NT'x'
                                                LOCAL_VARIABLE_NT'x'(tmp_0;real number)
                    HEADING_NT'chapter 3 - control' (level 4)
                        HEADING_NT'section 1 - deciding outcomes' (level 5)
                            RULE_NT'to decide yes ( documented at ph_yes )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rtrue;  - in to decide if only'
                            RULE_NT'to decide no ( documented at ph_no )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rfalse;  - in to decide if only'
                            RULE_NT'to stop ( documented at ph_stop )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rtrue;  - in to only'
                            RULE_NT'to decide on ( something - value ) ( documented at ph_decide'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  return {-return-value:something}; '
                        HEADING_NT'section 2 - if and unless' (level 5)
                            RULE_NT'to if ( c - condition ) begin -- end conditional ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {c}  '
                            RULE_NT'to unless ( c - condition ) begin -- end conditional ( docum'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (~~{c})  '
                            RULE_NT'to if ( v - value ) is begin -- end conditional ( documented'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-   '
                            RULE_NT'to do nothing ( documented at ph_nothing )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ; '
                        HEADING_NT'section 3 - while and repeat' (level 5)
                            RULE_NT'to while ( c - condition ) begin -- end loop ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  while {c}  '
                            RULE_NT'to repeat with ( loopvar - nonexisting k variable ) running '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  for ({loopvar}={v}: {loopvar}<={w}: {loopvar}++)  '
                            RULE_NT'to repeat with ( loopvar - nonexisting k variable ) running '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  for ({loopvar}={v}: {loopvar}<={w}: {loopvar}++)  '
                            RULE_NT'to repeat with ( loopvar - nonexisting k variable ) running '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:repeat-through} '
                            RULE_NT'to repeat with ( loopvar - nonexisting object variable ) run'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:repeat-through-list} '
                            RULE_NT'to repeat through ( t - table name ) begin -- end loop ( doc'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		@push {-my:ct_0}; @push {-my:ct_1};
                                    		for ({-my:1}={T}'
                            RULE_NT'to repeat through ( t - table name ) in reverse order begin '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		@push {-my:ct_0}; @push {-my:ct_1};
                                    		for ({-my:1}={T}'
                            RULE_NT'to repeat through ( t - table name ) in ( tc - table column '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		@push {-my:ct_0}; @push {-my:ct_1};
                                    		for ({-my:1}={T}'
                            RULE_NT'to repeat through ( t - table name ) in reverse ( tc - table'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		@push {-my:ct_0}; @push {-my:ct_1};
                                    		for ({-my:1}={T}'
                        HEADING_NT'section 4 - loop flow' (level 5)
                            RULE_NT'to break -- in loop ( documented at ph_break )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:break} '
                            RULE_NT'to next -- in loop ( documented at ph_next )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  continue; '
                    HEADING_NT'chapter 4 - values' (level 4)
                        HEADING_NT'section 1 - enumerations' (level 5)
                            RULE_NT'to decide which number is number of ( s - description of val'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:number-of} '
                            RULE_NT'to decide which k is ( name of kind of enumerated value k ) '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-next-routine:K}({X}) '
                            RULE_NT'to decide which k is ( name of kind of enumerated value k ) '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-previous-routine:K}({X}) '
                            RULE_NT'to decide which k is the first value of ( name of kind of en'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'decide on the default value of k'
                            RULE_NT'to decide which k is the last value of ( name of kind of enu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'decide on k before the default value of k'
                        HEADING_NT'section 2 - randomness' (level 5)
                            RULE_NT'to decide which k is a/-- random ( s - description of values'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:random-of} '
                            RULE_NT'to decide which k is a random ( name of kind of arithmetic v'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-ranger-routine:K}({first value}, {second value}) '
                            RULE_NT'to decide which k is a random ( name of kind of arithmetic v'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-ranger-routine:K}({first value}, {second value}) '
                            RULE_NT'to decide which k is a random ( name of kind of enumerated v'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-ranger-routine:K}({first value}, {second value}) '
                            RULE_NT'to decide which k is a random ( name of kind of enumerated v'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-ranger-routine:K}({first value}, {second value}) '
                            RULE_NT'to decide whether a random chance of ( n - number ) in ( m -'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (GenerateRandomNumber(1, {M}) <= {N}) '
                            RULE_NT'to seed the random-number generator with ( n - number ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  VM_Seed_RNG({N}); '
                        HEADING_NT'section 3 - default values' (level 5)
                            RULE_NT'to decide what k is the default value of ( v - name of kind '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-new:K} '
                    HEADING_NT'chapter 5 - text' (level 4)
                        HEADING_NT'section 1 - breaking down text' (level 5)
                            RULE_NT'to decide what number is the number of characters in ( t - t'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_BlobAccess({-by-reference:T}, CHR_BLOB) '
                            RULE_NT'to decide what number is the number of words in ( t - text )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_BlobAccess({-by-reference:T}, WORD_BLOB) '
                            RULE_NT'to decide what number is the number of punctuated words in ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_BlobAccess({-by-reference:T}, PWORD_BLOB) '
                            RULE_NT'to decide what number is the number of unpunctuated words in'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_BlobAccess({-by-reference:T}, UWORD_BLOB) '
                            RULE_NT'to decide what number is the number of lines in ( t - text )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_BlobAccess({-by-reference:T}, LINE_BLOB) '
                            RULE_NT'to decide what number is the number of paragraphs in ( t - t'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_BlobAccess({-by-reference:T}, PARA_BLOB) '
                            RULE_NT'to decide what text is character number ( n - a number ) in '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_GetBlob({-new:text}, {-by-reference:T}, {N}, CHR'
                            RULE_NT'to decide what text is word number ( n - a number ) in ( t -'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_GetBlob({-new:text}, {-by-reference:T}, {N}, WOR'
                            RULE_NT'to decide what text is punctuated word number ( n - a number'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_GetBlob({-new:text}, {-by-reference:T}, {N}, PWO'
                            RULE_NT'to decide what text is unpunctuated word number ( n - a numb'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_GetBlob({-new:text}, {-by-reference:T}, {N}, UWO'
                            RULE_NT'to decide what text is line number ( n - a number ) in ( t -'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_GetBlob({-new:text}, {-by-reference:T}, {N}, LIN'
                            RULE_NT'to decide what text is paragraph number ( n - a number ) in '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_GetBlob({-new:text}, {-by-reference:T}, {N}, PAR'
                            RULE_NT'to decide what text is the substituted form of ( t - text ) '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_SubstitutedForm({-new:text}, {-by-reference:T}) '
                        HEADING_NT'section 2 - matching and replacing' (level 5)
                            RULE_NT'to decide if ( t - text ) exactly matches the text ( find - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(CHR_BLOB,{-by-reference:T},{-by-refer'
                            RULE_NT'to decide if ( t - text ) matches the text ( find - text ) ,'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(CHR_BLOB,{-by-reference:T},{-by-refer'
                            RULE_NT'to decide what number is number of times ( t - text ) matche'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(CHR_BLOB,{-by-reference:T},{-by-refer'
                            RULE_NT'to replace the text ( find - text ) in ( t - text ) with ( r'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(CHR_BLOB, {-lvalue-by-reference:T}, {'
                            RULE_NT'to replace the word ( find - text ) in ( t - text ) with ( r'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceText(WORD_BLOB, {-lvalue-by-reference:T},'
                            RULE_NT'to replace the punctuated word ( find - text ) in ( t - text'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceText(PWORD_BLOB, {-lvalue-by-reference:T}'
                            RULE_NT'to replace character number ( n - a number ) in ( t - text )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceBlob(CHR_BLOB, {-lvalue-by-reference:T}, '
                            RULE_NT'to replace word number ( n - a number ) in ( t - text ) with'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceBlob(WORD_BLOB, {-lvalue-by-reference:T},'
                            RULE_NT'to replace punctuated word number ( n - a number ) in ( t - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceBlob(PWORD_BLOB, {-lvalue-by-reference:T}'
                            RULE_NT'to replace unpunctuated word number ( n - a number ) in ( t '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceBlob(UWORD_BLOB, {-lvalue-by-reference:T}'
                            RULE_NT'to replace line number ( n - a number ) in ( t - text ) with'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceBlob(LINE_BLOB, {-lvalue-by-reference:T},'
                            RULE_NT'to replace paragraph number ( n - a number ) in ( t - text )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_ReplaceBlob(PARA_BLOB, {-lvalue-by-reference:T},'
                        HEADING_NT'section 3 - regular expressions' (level 5)
                            RULE_NT'to decide if ( t - text ) exactly matches the regular expres'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(REGEXP_BLOB,{-by-reference:T},{-by-re'
                            RULE_NT'to decide if ( t - text ) matches the regular expression ( f'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(REGEXP_BLOB,{-by-reference:T},{-by-re'
                            RULE_NT'to decide what text is text matching regular expression ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_RE_GetMatchVar(0) '
                            RULE_NT'to decide what text is text matching subexpression ( n - a n'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_RE_GetMatchVar({N}) '
                            RULE_NT'to decide what number is number of times ( t - text ) matche'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(REGEXP_BLOB,{-by-reference:T},{-by-re'
                            RULE_NT'to replace the regular expression ( find - text ) in ( t - t'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_Replace_RE(REGEXP_BLOB, {-lvalue-by-reference:T}'
                        HEADING_NT'section 4 - casing of text' (level 5)
                            RULE_NT'to decide what text is ( t - text ) in lower case ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_CharactersToCase({-new:text}, {-by-reference:T},'
                            RULE_NT'to decide what text is ( t - text ) in upper case ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_CharactersToCase({-new:text}, {-by-reference:T},'
                            RULE_NT'to decide what text is ( t - text ) in title case ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_CharactersToCase({-new:text}, {-by-reference:T},'
                            RULE_NT'to decide what text is ( t - text ) in sentence case ( docum'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_CharactersToCase({-new:text}, {-by-reference:T},'
                            RULE_NT'to decide if ( t - text ) is in lower case ( documented at p'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_CharactersOfCase({-by-reference:T}, 0) '
                            RULE_NT'to decide if ( t - text ) is in upper case ( documented at p'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TEXT_TY_CharactersOfCase({-by-reference:T}, 1) '
                        HEADING_NT'section 5 - adaptive text' (level 5)
                            RULE_NT'to say infinitive of ( v - a verb ) ( documented at phs_infi'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(1); '
                            RULE_NT'to say past participle of ( v - a verb ) ( documented at phs'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(2); '
                            RULE_NT'to say present participle of ( v - a verb ) ( documented at '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(3); '
                            RULE_NT'to say adapt ( v - verb ) ( documented at phs_adapt )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_POS, PNToVP(), story_tense); '
                            RULE_NT'to say adapt ( v - verb ) in ( t - grammatical tense ) ( doc'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_POS, PNToVP(), {T}); '
                            RULE_NT'to say adapt ( v - verb ) from ( p - narrative viewpoint ) ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_POS, {P}, story_tense); '
                            RULE_NT'to say adapt ( v - verb ) in ( t - grammatical tense ) from '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_POS, {P}, {T}); '
                            RULE_NT'to say negate ( v - verb ) ( documented at phs_negate )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_NEG, PNToVP(), story_tense); '
                            RULE_NT'to say negate ( v - verb ) in ( t - grammatical tense ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_NEG, PNToVP(), {T}); '
                            RULE_NT'to say negate ( v - verb ) from ( p - narrative viewpoint ) '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_NEG, {P}, story_tense); '
                            RULE_NT'to say negate ( v - verb ) in ( t - grammatical tense ) from'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_NEG, {P}, {T}); '
                            RULE_NT'to decide which relation of objects is meaning of ( v - a ve'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {V}(CV_MEANING) '
                    HEADING_NT'chapter 6 - data structures' (level 4)
                        HEADING_NT'section 1 - tables' (level 5)
                            RULE_NT'to choose a/the/-- row ( n - number ) in/from ( t - table na'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-my:ct_0} = {T}; {-my:ct_1} = {N}; '
                            RULE_NT'to choose a/the/-- row with ( tc - k valued table column ) o'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-my:ct_0} = {T}; {-my:ct_1} = TableRowCorr(ct_0, {TC}, '
                            RULE_NT'to choose a/the/-- blank row in/from ( t - table name ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-my:ct_0} = {T}; {-my:ct_1} = TableBlankRow(ct_0); '
                            RULE_NT'to choose a/the/-- random row in/from ( t - table name ) ( d'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-my:ct_0} = {T}; {-my:ct_1} = TableRandomRow(ct_0); '
                            RULE_NT'to decide which number is number of rows in/from ( t - table'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableRows({T}) '
                            RULE_NT'to decide which number is number of blank rows in/from ( t -'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableBlankRows({T}) '
                            RULE_NT'to decide which number is number of filled rows in/from ( t '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableFilledRows({T}) '
                            RULE_NT'to decide if there is ( tr - table-reference ) ( documented '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-reference-exists:TR}) '
                            RULE_NT'to decide if there is no ( tr - table-reference ) ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({-reference-exists:TR} == false) '
                            RULE_NT'to blank out ( tr - table-reference ) ( documented at ph_bla'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-by-reference-blank-out:tr}; '
                            RULE_NT'to blank out the whole row ( documented at ph_blankoutrow )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableBlankOutRow({-my:ct_0}, {-my:ct_1}); '
                            RULE_NT'to blank out the whole ( tc - table column ) in/from/of ( t '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableBlankOutColumn({T}, {TC}); '
                            RULE_NT'to blank out the whole of ( t - table name ) ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableBlankOutAll({T}); '
                            RULE_NT'to showme the contents of ( t - table name ) ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableDebug({T}); '
                            RULE_NT'to say the/-- current table row ( documented at phs_currentt'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableRowDebug({-my:ct_0}, {-my:ct_1}); '
                            RULE_NT'to say row ( n - number ) in/from ( t - table name ) ( docum'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableRowDebug({T}, {N}); '
                            RULE_NT'to say ( tc - table column ) in/from ( t - table name ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableColumnDebug({T}, {TC}); '
                        HEADING_NT'section 2 - sorting tables' (level 5)
                            RULE_NT'to sort ( t - table name ) in/into random order ( documented'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableShuffle({T}); '
                            RULE_NT'to sort ( t - table name ) in/into ( tc - table column ) ord'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableSort({T}, {TC}, 1); '
                            RULE_NT'to sort ( t - table name ) in/into reverse ( tc - table colu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TableSort({T}, {TC}, -1); '
                        HEADING_NT'section 3 - lists' (level 5)
                            RULE_NT'to add ( new entry - k ) to ( l - list of values of kind k )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_InsertItem({-lvalue-by-reference:L}, {new ent'
                            RULE_NT'to add ( new entry - k ) at entry ( e - number ) in ( l - li'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_InsertItem({-lvalue-by-reference:L}, {new ent'
                            RULE_NT'to add ( lx - list of ks ) to ( l - list of values of kind k'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_AppendList({-lvalue-by-reference:L}, {-by-ref'
                            RULE_NT'to add ( lx - list of ks ) at entry ( e - number ) in ( l - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_AppendList({-lvalue-by-reference:L}, {-by-ref'
                            RULE_NT'to remove ( existing entry - k ) from ( l - list of values o'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_RemoveValue({-lvalue-by-reference:L}, {existi'
                            RULE_NT'to remove ( n - list of ks ) from ( l - list of values of ki'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Remove_List({-lvalue-by-reference:L}, {-by-re'
                            RULE_NT'to remove entry ( n - number ) from ( l - list of values ) ,'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_RemoveItemRange({-lvalue-by-reference:L}, {N}'
                            RULE_NT'to remove entries ( n - number ) to ( n2 - number ) from ( l'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_RemoveItemRange({-lvalue-by-reference:L}, {N}'
                            RULE_NT'to decide if ( n - k ) is listed in ( l - list of values of '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (LIST_OF_TY_FindItem({-by-reference:L}, {N})) '
                            RULE_NT'to decide if ( n - k ) is not listed in ( l - list of values'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (LIST_OF_TY_FindItem({-by-reference:L}, {N}) == false) '
                            RULE_NT'to decide what list of ks is the list of ( d - description o'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-new-list-of:list of K} '
                        HEADING_NT'section 4 - length of lists' (level 5)
                            RULE_NT'to decide what number is the number of entries in/of ( l - a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_GetLength({-by-reference:L}) '
                            RULE_NT'to truncate ( l - a list of values ) to ( n - a number ) ent'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_SetLength({-lvalue-by-reference:L}, {N}, -1, '
                            RULE_NT'to truncate ( l - a list of values ) to the first ( n - a nu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_SetLength({-lvalue-by-reference:L}, {N}, -1, '
                            RULE_NT'to truncate ( l - a list of values ) to the last ( n - a num'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_SetLength({-lvalue-by-reference:L}, {N}, -1, '
                            RULE_NT'to extend ( l - a list of values ) to ( n - a number ) entri'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_SetLength({-lvalue-by-reference:L}, {N}, 1); '
                            RULE_NT'to change ( l - a list of values ) to have ( n - a number ) '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_SetLength({-lvalue-by-reference:L}, {N}, 0); '
                        HEADING_NT'section 5 - list operations' (level 5)
                            RULE_NT'to reverse ( l - a list of values ) ( documented at ph_rever'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Reverse({-lvalue-by-reference:L}); '
                            RULE_NT'to rotate ( l - a list of values ) ( documented at ph_rotate'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Rotate({-lvalue-by-reference:L}, 0); '
                            RULE_NT'to rotate ( l - a list of values ) backwards ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Rotate({-lvalue-by-reference:L}, 1); '
                            RULE_NT'to sort ( l - a list of values ) ( documented at ph_sortlist'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Sort({-lvalue-by-reference:L}, 1); '
                            RULE_NT'to sort ( l - a list of values ) in/into reverse order ( doc'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Sort({-lvalue-by-reference:L}, -1); '
                            RULE_NT'to sort ( l - a list of values ) in/into random order ( docu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Sort({-lvalue-by-reference:L}, 2); '
                            RULE_NT'to sort ( l - a list of objects ) in/into ( p - property ) o'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Sort({-lvalue-by-reference:L}, 1, {P}, {-prop'
                            RULE_NT'to sort ( l - a list of objects ) in/into reverse ( p - prop'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Sort({-lvalue-by-reference:L}, -1, {P}, {-pro'
                        HEADING_NT'section 6 - relations' (level 5)
                            RULE_NT'to show relation ( r - relation ) ( documented at ph_showrel'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-show-me:R}; RelationTest({-by-reference:R}, RELS_SHOW)'
                            RULE_NT'to decide which object is next step via ( r - relation of ob'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationRouteTo({-by-reference:R},{O1},{O2},false) '
                            RULE_NT'to decide which number is number of steps via ( r - relation'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationRouteTo({-by-reference:R},{O1},{O2},true) '
                            RULE_NT'to decide which list of ks is list of ( name of kind of valu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LIST, {-new:list of'
                            RULE_NT'to decide which list of ls is list of ( name of kind of valu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LIST, {-new:list of'
                            RULE_NT'to decide which list of ls is list of ( name of kind of valu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LIST, {-new:list of'
                            RULE_NT'to decide which list of ks is list of ( name of kind of valu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ALL_X, {Y}, '
                            RULE_NT'to decide which list of ls is list of ( name of kind of valu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ALL_Y, {X}, '
                            RULE_NT'to decide which list of ls is list of ( name of kind of valu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ALL_Y, {X}, '
                            RULE_NT'to decide whether ( name of kind of value k ) relates to ( y'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ANY, {Y}, RL'
                            RULE_NT'to decide whether ( x - k ) relates to ( name of kind of val'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ANY, {X}, RL'
                            RULE_NT'to decide which k is ( name of kind of value k ) that/which/'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ANY, {Y}, RL'
                            RULE_NT'to decide which l is ( name of kind of value l ) to which/wh'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ANY, {X}, RL'
                            RULE_NT'to decide which l is ( name of kind of value l ) that/which/'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RelationTest({-by-reference:R}, RELS_LOOKUP_ANY, {X}, RL'
                    HEADING_NT'chapter 7 - functional programming' (level 4)
                        HEADING_NT'section 1 - applying functions' (level 5)
                            RULE_NT'to decide whether ( val - k ) matches ( desc - description o'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:description-application} '
                            RULE_NT'to decide what k is ( function - phrase nothing -> value of '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application} '
                            RULE_NT'to decide what l is ( function - phrase value of kind k -> v'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application} '
                            RULE_NT'to decide what m is ( function - phrase ( value of kind k , '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application} '
                            RULE_NT'to decide what n is ( function - phrase ( value of kind k , '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application} '
                            RULE_NT'to apply ( function - phrase nothing -> nothing ) ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application}; '
                            RULE_NT'to apply ( function - phrase value of kind k -> nothing ) to'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application}; '
                            RULE_NT'to apply ( function - phrase ( value of kind k , value of ki'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application}; '
                            RULE_NT'to apply ( function - phrase ( value of kind k , value of ki'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:function-application}; '
                        HEADING_NT'section 2 - working with lists' (level 5)
                            RULE_NT'to decide what list of l is ( function - phrase k -> value o'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let the result be a list of ls'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'repeat with item running through the original list'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'let the mapped item be the function applied to the item'
                                            INVOCATION_LIST_NT'add the mapped item to the result'
                                    INVOCATION_LIST_NT'decide on the result'
                            RULE_NT'to decide what k is the ( function - phrase ( k , k ) -> k )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let the total be a k'
                                    INVOCATION_LIST_NT'let the count be 0'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'repeat with item running through the original list'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'increase the count by 1'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the count is 1'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'now the total is the item'
                                                        CONDITION_CONTEXT_NT'the total is the item'
                                                CODE_BLOCK_NT'otherwise'
                                                    INVOCATION_LIST_NT'now the total is the function applied to the total and the i'
                                                        CONDITION_CONTEXT_NT'the total is the function applied to the total and the item'
                                    INVOCATION_LIST_NT'decide on the total'
                            RULE_NT'to decide what list of k is the filter to ( criterion - desc'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let the filtered list be a list of k'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'repeat with item running through the full list'
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item matches the criterion'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'add the item to the filtered list'
                                    INVOCATION_LIST_NT'decide on the filtered list'
                    HEADING_NT'chapter 8 - rulebooks and activities' (level 4)
                        HEADING_NT'section 1 - carrying out activities' (level 5)
                            RULE_NT'to carry out the ( a - activity on nothing ) activity ( docu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  CarryOutActivity({A}); '
                            RULE_NT'to carry out the ( a - activity on value of kind k ) activit'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  CarryOutActivity({A}, {val}); '
                            RULE_NT'to continue the activity ( documented at ph_continueactivity'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rfalse;  - in to only'
                        HEADING_NT'section 2 - advanced activities' (level 5)
                            RULE_NT'to begin the ( a - activity on nothing ) activity ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  BeginActivity({A}); '
                            RULE_NT'to begin the ( a - activity on value of kind k ) activity wi'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  BeginActivity({A}, {val}); '
                            RULE_NT'to decide whether handling ( a - activity ) activity ( docum'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (~~(ForActivity({A}))) '
                            RULE_NT'to decide whether handling ( a - activity on value of kind k'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (~~(ForActivity({A}, {val}))) '
                            RULE_NT'to end the ( a - activity on nothing ) activity ( documented'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  EndActivity({A}); '
                            RULE_NT'to end the ( a - activity on value of kind k ) activity with'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  EndActivity({A}, {val}); '
                            RULE_NT'to abandon the ( a - activity on nothing ) activity ( docume'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  AbandonActivity({A}); '
                            RULE_NT'to abandon the ( a - activity on value of kind k ) activity '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  AbandonActivity({A}, {val}); '
                        HEADING_NT'section 3 - following rules' (level 5)
                            RULE_NT'to follow ( rl - a rule ) ( documented at ph_follow )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FollowRulebook({RL}); '
                            RULE_NT'to follow ( rl - value of kind k based rule producing a valu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FollowRulebook({RL}, {V}, true); '
                            RULE_NT'to follow ( rl - a nothing based rule ) ( documented at ph_f'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FollowRulebook({RL}); '
                            RULE_NT'to decide what k is the ( name of kind k ) produced by ( rl '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ResultOfRule({RL}, 0, true, {-strong-kind:K}) '
                            RULE_NT'to decide what l is the ( name of kind l ) produced by ( rl '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ResultOfRule({RL}, {V}, true, {-strong-kind:L}) '
                            RULE_NT'to decide what k is the ( name of kind k ) produced by ( rl '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ResultOfRule({RL}, 0, true, {-strong-kind:K}) '
                            RULE_NT'to abide by ( rl - a rule ) ( documented at ph_abide )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  if (FollowRulebook({RL})) rtrue;  - in to only'
                            RULE_NT'to abide by ( rl - value of kind k based rule producing a va'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  if (FollowRulebook({RL}, {V}, true)) rtrue;  - in to onl'
                            RULE_NT'to abide by ( rl - a nothing based rule ) ( documented at ph'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  if (FollowRulebook({RL})) rtrue;  - in to only'
                        HEADING_NT'section 4 - success and failure' (level 5)
                            RULE_NT'to make no decision ( documented at ph_nodecision )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rfalse;  - in to only'
                            RULE_NT'to rule succeeds ( documented at ph_succeeds )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RulebookSucceeds(); rtrue;  - in to only'
                            RULE_NT'to rule fails ( documented at ph_fails )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RulebookFails(); rtrue;  - in to only'
                            RULE_NT'to rule succeeds with result ( val - a value ) ( documented '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RulebookSucceeds({-weak-kind:rule-return-kind},{-return-'
                            RULE_NT'to decide if rule succeeded ( documented at ph_succeeded )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (RulebookSucceeded()) '
                            RULE_NT'to decide if rule failed ( documented at ph_failed )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (RulebookFailed()) '
                            RULE_NT'to decide which rulebook outcome is the outcome of the ruleb'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (ResultOfRule()) '
                    HEADING_NT'chapter 9 - external files ( not for z-machine )' (level 4)
                        HEADING_NT'section 1 - files of text' (level 5)
                            RULE_NT'to write ( t - text ) to ( fn - external file ) ( documented'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FileIO_PutContents({FN}, {T}, false); '
                            RULE_NT'to append ( t - text ) to ( fn - external file ) ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FileIO_PutContents({FN}, {T}, true); '
                            RULE_NT'to say text of ( fn - external file ) ( documented at ph_say'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FileIO_PrintContents({FN}); say__p = 1; '
                        HEADING_NT'section 2 - files of data' (level 5)
                            RULE_NT'to read ( filename - external file ) into ( t - table name )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FileIO_GetTable({filename}, {T}); '
                            RULE_NT'to write ( filename - external file ) from ( t - table name '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FileIO_PutTable({filename}, {T}); '
                        HEADING_NT'section 3 - file handling' (level 5)
                            RULE_NT'to decide if ( filename - external file ) exists ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (FileIO_Exists({filename}, false)) '
                            RULE_NT'to decide if ready to read ( filename - external file ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (FileIO_Ready({filename}, false)) '
                            RULE_NT'to mark ( filename - external file ) as ready to read ( docu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FileIO_MarkReady({filename}, true); '
                            RULE_NT'to mark ( filename - external file ) as not ready to read ( '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FileIO_MarkReady({filename}, false); '
                HEADING_NT'part four - adjectival definitions' (level 3)
                    HEADING_NT'section 1 - miscellaneous useful adjectives' (level 5)
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                    HEADING_NT'section 2 - adjectives for relations' (level 5)
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                    HEADING_NT'section 3 - adjectives for real numbers ( not for z-machine ' (level 5)
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        ENDHERE_NT'basic inform'
        INCLUSION_NT'include english language by graham nelson'
            HEADING_NT'version 1 of english language by graham nelson begins here' (level 0)
                BEGINHERE_NT'version 1 of english language by graham nelson'
                SENTENCE_NT'To make English the language of play.'
                SENTENCE_NT'use authorial modesty'
                    VERB_NT'use'
                    PROPER_NOUN_NT'authorial modesty'
                HEADING_NT'section 1 - modal verbs and contractions' (level 5)
                    SENTENCE_NT'to be able to is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to be able to'
                    SENTENCE_NT'to could is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to could'
                    SENTENCE_NT'to may is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to may'
                    SENTENCE_NT'to might is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to might'
                    SENTENCE_NT'to must is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to must'
                    SENTENCE_NT'to should is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to should'
                    SENTENCE_NT'to would is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to would'
                    SENTENCE_NT'to 're is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to 're'
                    SENTENCE_NT'to 've is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to 've'
                    SENTENCE_NT'to aren't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to aren't'
                    SENTENCE_NT'to can't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to can't'
                    SENTENCE_NT'to don't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to don't'
                    SENTENCE_NT'to haven't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to haven't'
                    SENTENCE_NT'to mustn't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to mustn't'
                    SENTENCE_NT'to mightn't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to mightn't'
                    SENTENCE_NT'to mayn't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to mayn't'
                    SENTENCE_NT'to wouldn't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to wouldn't'
                    SENTENCE_NT'to couldn't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to couldn't'
                    SENTENCE_NT'to shouldn't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to shouldn't'
                    SENTENCE_NT'to won't is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to won't'
                HEADING_NT'section 2 - fallback definitions ( not for interactive ficti' (level 5)
                HEADING_NT'section 1 - grammatical definitions' (level 5)
                    SENTENCE_NT'the language of play is a natural language that varies'
                        VERB_NT'is'
                        PROPER_NOUN_NT'language of play'
                        COMMON_NOUN_NT'natural language that varies'
                    SENTENCE_NT'the language of play is usually the english language'
                        VERB_NT'is usually'
                        PROPER_NOUN_NT'language of play'
                        PROPER_NOUN_NT'english language'
                    SENTENCE_NT'a grammatical tense is a kind of value'
                        VERB_NT'is'
                        COMMON_NOUN_NT'grammatical tense'
                        KIND_NT'kind of value'
                            COMMON_NOUN_NT'value'
                    SENTENCE_NT'the grammatical tenses are present tense , past tense , perf'
                        VERB_NT'are'
                        COMMON_NOUN_NT'grammatical tenses'
                        AND_NT','
                            PROPER_NOUN_NT'present tense'
                            AND_NT','
                                PROPER_NOUN_NT'past tense'
                                AND_NT','
                                    PROPER_NOUN_NT'perfect tense'
                                    AND_NT'and'
                                        PROPER_NOUN_NT'past perfect tense'
                                        PROPER_NOUN_NT'future tense'
                    SENTENCE_NT'a narrative viewpoint is a kind of value'
                        VERB_NT'is'
                        COMMON_NOUN_NT'narrative viewpoint'
                        KIND_NT'kind of value'
                            COMMON_NOUN_NT'value'
                    SENTENCE_NT'the narrative viewpoints are first person singular , second '
                        VERB_NT'are'
                        COMMON_NOUN_NT'narrative viewpoints'
                        AND_NT','
                            PROPER_NOUN_NT'first person singular'
                            AND_NT','
                                PROPER_NOUN_NT'second person singular'
                                AND_NT','
                                    PROPER_NOUN_NT'third person singular'
                                    AND_NT','
                                        PROPER_NOUN_NT'first person plural'
                                        AND_NT','
                                            PROPER_NOUN_NT'second person plural'
                                            PROPER_NOUN_NT'third person plural'
                    SENTENCE_NT'a natural language has a narrative viewpoint called the adap'
                        VERB_NT'has'
                        COMMON_NOUN_NT'natural language'
                        ALLOWED_NT
                            PROPERTYCALLED_NT'called'
                                PROPER_NOUN_NT'narrative viewpoint'
                                PROPER_NOUN_NT'adaptive text viewpoint'
                    SENTENCE_NT'the adaptive text viewpoint of the english language is first'
                        VERB_NT'is'
                        X_OF_Y_NT'adaptive text viewpoint of the english language'
                            PROPER_NOUN_NT'english language'
                            PROPER_NOUN_NT'adaptive text viewpoint'
                        PROPER_NOUN_NT'first person plural'
                    SENTENCE_NT'a grammatical case is a kind of value'
                        VERB_NT'is'
                        COMMON_NOUN_NT'grammatical case'
                        KIND_NT'kind of value'
                            COMMON_NOUN_NT'value'
                    SENTENCE_NT'the grammatical cases are nominative and accusative'
                        VERB_NT'are'
                        COMMON_NOUN_NT'grammatical cases'
                        AND_NT'and'
                            PROPER_NOUN_NT'nominative'
                            PROPER_NOUN_NT'accusative'
                    SENTENCE_NT'a grammatical gender is a kind of value'
                        VERB_NT'is'
                        COMMON_NOUN_NT'grammatical gender'
                        KIND_NT'kind of value'
                            COMMON_NOUN_NT'value'
                    SENTENCE_NT'the grammatical genders are neuter gender , masculine gender'
                        VERB_NT'are'
                        COMMON_NOUN_NT'grammatical genders'
                        AND_NT','
                            PROPER_NOUN_NT'neuter gender'
                            AND_NT','
                                PROPER_NOUN_NT'masculine gender'
                                PROPER_NOUN_NT'feminine gender'
                    SENTENCE_NT'the story tense is a grammatical tense that varies'
                        VERB_NT'is'
                        PROPER_NOUN_NT'story tense'
                        COMMON_NOUN_NT'grammatical tense that varies'
                    SENTENCE_NT'the story tense variable translates into i6 as story_tense'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'story tense variable'
                        PROPER_NOUN_NT'story_tense'
                    SENTENCE_NT'the story viewpoint is a narrative viewpoint that varies'
                        VERB_NT'is'
                        PROPER_NOUN_NT'story viewpoint'
                        COMMON_NOUN_NT'narrative viewpoint that varies'
                    SENTENCE_NT'the story viewpoint variable translates into i6 as story_vie'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'story viewpoint variable'
                        PROPER_NOUN_NT'story_viewpoint'
                    RULE_NT'to say regarding ( item - an object )'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'(-  RegardingSingleObject({item}); '
                    RULE_NT'to say regarding ( n - a number )'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'(-  RegardingNumber({N}); '
                    RULE_NT'to say regarding list writer internals'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'(-  RegardingLWI(); '
                    RULE_NT'to say regarding ( d - a description of objects )'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'(- 
                            	 	objectloop({-my:1} ofclass Object)
                            			if ({-matches-d'
                    RULE_NT'to decide if the prior naming context is plural'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'(-  ((prior_named_list >= 2) || (prior_named_noun && prior_n'
                HEADING_NT'section 2 - saying pronouns ( for interactive fiction langua' (level 5)
                    RULE_NT'to say we'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "I"'
                                        INVOCATION_LIST_SAY_NT'"I"'
                                            INVOCATION_NT'"I"'
                                                RVALUE_CONTEXT_NT'"I"'
                                                    CONSTANT_NT'"I"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "you"'
                                        INVOCATION_LIST_SAY_NT'"you"'
                                            INVOCATION_NT'"you"'
                                                RVALUE_CONTEXT_NT'"you"'
                                                    CONSTANT_NT'"you"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "he"'
                                                INVOCATION_LIST_SAY_NT'"he"'
                                                    INVOCATION_NT'"he"'
                                                        RVALUE_CONTEXT_NT'"he"'
                                                            CONSTANT_NT'"he"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "she"'
                                                INVOCATION_LIST_SAY_NT'"she"'
                                                    INVOCATION_NT'"she"'
                                                        RVALUE_CONTEXT_NT'"she"'
                                                            CONSTANT_NT'"she"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "we"'
                                        INVOCATION_LIST_SAY_NT'"we"'
                                            INVOCATION_NT'"we"'
                                                RVALUE_CONTEXT_NT'"we"'
                                                    CONSTANT_NT'"we"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "you"'
                                        INVOCATION_LIST_SAY_NT'"you"'
                                            INVOCATION_NT'"you"'
                                                RVALUE_CONTEXT_NT'"you"'
                                                    CONSTANT_NT'"you"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "they"'
                                        INVOCATION_LIST_SAY_NT'"they"'
                                            INVOCATION_NT'"they"'
                                                RVALUE_CONTEXT_NT'"they"'
                                                    CONSTANT_NT'"they"'-text
                    RULE_NT'to say us'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "me"'
                                        INVOCATION_LIST_SAY_NT'"me"'
                                            INVOCATION_NT'"me"'
                                                RVALUE_CONTEXT_NT'"me"'
                                                    CONSTANT_NT'"me"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "you"'
                                        INVOCATION_LIST_SAY_NT'"you"'
                                            INVOCATION_NT'"you"'
                                                RVALUE_CONTEXT_NT'"you"'
                                                    CONSTANT_NT'"you"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "him"'
                                                INVOCATION_LIST_SAY_NT'"him"'
                                                    INVOCATION_NT'"him"'
                                                        RVALUE_CONTEXT_NT'"him"'
                                                            CONSTANT_NT'"him"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "her"'
                                                INVOCATION_LIST_SAY_NT'"her"'
                                                    INVOCATION_NT'"her"'
                                                        RVALUE_CONTEXT_NT'"her"'
                                                            CONSTANT_NT'"her"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "us"'
                                        INVOCATION_LIST_SAY_NT'"us"'
                                            INVOCATION_NT'"us"'
                                                RVALUE_CONTEXT_NT'"us"'
                                                    CONSTANT_NT'"us"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "you"'
                                        INVOCATION_LIST_SAY_NT'"you"'
                                            INVOCATION_NT'"you"'
                                                RVALUE_CONTEXT_NT'"you"'
                                                    CONSTANT_NT'"you"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "them"'
                                        INVOCATION_LIST_SAY_NT'"them"'
                                            INVOCATION_NT'"them"'
                                                RVALUE_CONTEXT_NT'"them"'
                                                    CONSTANT_NT'"them"'-text
                    RULE_NT'to say ours'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "mine"'
                                        INVOCATION_LIST_SAY_NT'"mine"'
                                            INVOCATION_NT'"mine"'
                                                RVALUE_CONTEXT_NT'"mine"'
                                                    CONSTANT_NT'"mine"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "yours"'
                                        INVOCATION_LIST_SAY_NT'"yours"'
                                            INVOCATION_NT'"yours"'
                                                RVALUE_CONTEXT_NT'"yours"'
                                                    CONSTANT_NT'"yours"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "his"'
                                                INVOCATION_LIST_SAY_NT'"his"'
                                                    INVOCATION_NT'"his"'
                                                        RVALUE_CONTEXT_NT'"his"'
                                                            CONSTANT_NT'"his"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "hers"'
                                                INVOCATION_LIST_SAY_NT'"hers"'
                                                    INVOCATION_NT'"hers"'
                                                        RVALUE_CONTEXT_NT'"hers"'
                                                            CONSTANT_NT'"hers"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "ours"'
                                        INVOCATION_LIST_SAY_NT'"ours"'
                                            INVOCATION_NT'"ours"'
                                                RVALUE_CONTEXT_NT'"ours"'
                                                    CONSTANT_NT'"ours"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "yours"'
                                        INVOCATION_LIST_SAY_NT'"yours"'
                                            INVOCATION_NT'"yours"'
                                                RVALUE_CONTEXT_NT'"yours"'
                                                    CONSTANT_NT'"yours"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "theirs"'
                                        INVOCATION_LIST_SAY_NT'"theirs"'
                                            INVOCATION_NT'"theirs"'
                                                RVALUE_CONTEXT_NT'"theirs"'
                                                    CONSTANT_NT'"theirs"'-text
                    RULE_NT'to say ourselves'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "myself"'
                                        INVOCATION_LIST_SAY_NT'"myself"'
                                            INVOCATION_NT'"myself"'
                                                RVALUE_CONTEXT_NT'"myself"'
                                                    CONSTANT_NT'"myself"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "yourself"'
                                        INVOCATION_LIST_SAY_NT'"yourself"'
                                            INVOCATION_NT'"yourself"'
                                                RVALUE_CONTEXT_NT'"yourself"'
                                                    CONSTANT_NT'"yourself"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "himself"'
                                                INVOCATION_LIST_SAY_NT'"himself"'
                                                    INVOCATION_NT'"himself"'
                                                        RVALUE_CONTEXT_NT'"himself"'
                                                            CONSTANT_NT'"himself"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "herself"'
                                                INVOCATION_LIST_SAY_NT'"herself"'
                                                    INVOCATION_NT'"herself"'
                                                        RVALUE_CONTEXT_NT'"herself"'
                                                            CONSTANT_NT'"herself"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "ourselves"'
                                        INVOCATION_LIST_SAY_NT'"ourselves"'
                                            INVOCATION_NT'"ourselves"'
                                                RVALUE_CONTEXT_NT'"ourselves"'
                                                    CONSTANT_NT'"ourselves"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "yourselves"'
                                        INVOCATION_LIST_SAY_NT'"yourselves"'
                                            INVOCATION_NT'"yourselves"'
                                                RVALUE_CONTEXT_NT'"yourselves"'
                                                    CONSTANT_NT'"yourselves"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "themselves"'
                                        INVOCATION_LIST_SAY_NT'"themselves"'
                                            INVOCATION_NT'"themselves"'
                                                RVALUE_CONTEXT_NT'"themselves"'
                                                    CONSTANT_NT'"themselves"'-text
                    RULE_NT'to say our'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "my"'
                                        INVOCATION_LIST_SAY_NT'"my"'
                                            INVOCATION_NT'"my"'
                                                RVALUE_CONTEXT_NT'"my"'
                                                    CONSTANT_NT'"my"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "your"'
                                        INVOCATION_LIST_SAY_NT'"your"'
                                            INVOCATION_NT'"your"'
                                                RVALUE_CONTEXT_NT'"your"'
                                                    CONSTANT_NT'"your"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "his"'
                                                INVOCATION_LIST_SAY_NT'"his"'
                                                    INVOCATION_NT'"his"'
                                                        RVALUE_CONTEXT_NT'"his"'
                                                            CONSTANT_NT'"his"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "her"'
                                                INVOCATION_LIST_SAY_NT'"her"'
                                                    INVOCATION_NT'"her"'
                                                        RVALUE_CONTEXT_NT'"her"'
                                                            CONSTANT_NT'"her"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "our"'
                                        INVOCATION_LIST_SAY_NT'"our"'
                                            INVOCATION_NT'"our"'
                                                RVALUE_CONTEXT_NT'"our"'
                                                    CONSTANT_NT'"our"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "your"'
                                        INVOCATION_LIST_SAY_NT'"your"'
                                            INVOCATION_NT'"your"'
                                                RVALUE_CONTEXT_NT'"your"'
                                                    CONSTANT_NT'"your"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "their"'
                                        INVOCATION_LIST_SAY_NT'"their"'
                                            INVOCATION_NT'"their"'
                                                RVALUE_CONTEXT_NT'"their"'
                                                    CONSTANT_NT'"their"'-text
                    RULE_NT'to say we'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "I"'
                                        INVOCATION_LIST_SAY_NT'"I"'
                                            INVOCATION_NT'"I"'
                                                RVALUE_CONTEXT_NT'"I"'
                                                    CONSTANT_NT'"I"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "You"'
                                        INVOCATION_LIST_SAY_NT'"You"'
                                            INVOCATION_NT'"You"'
                                                RVALUE_CONTEXT_NT'"You"'
                                                    CONSTANT_NT'"You"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "He"'
                                                INVOCATION_LIST_SAY_NT'"He"'
                                                    INVOCATION_NT'"He"'
                                                        RVALUE_CONTEXT_NT'"He"'
                                                            CONSTANT_NT'"He"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "She"'
                                                INVOCATION_LIST_SAY_NT'"She"'
                                                    INVOCATION_NT'"She"'
                                                        RVALUE_CONTEXT_NT'"She"'
                                                            CONSTANT_NT'"She"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "We"'
                                        INVOCATION_LIST_SAY_NT'"We"'
                                            INVOCATION_NT'"We"'
                                                RVALUE_CONTEXT_NT'"We"'
                                                    CONSTANT_NT'"We"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "You"'
                                        INVOCATION_LIST_SAY_NT'"You"'
                                            INVOCATION_NT'"You"'
                                                RVALUE_CONTEXT_NT'"You"'
                                                    CONSTANT_NT'"You"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "They"'
                                        INVOCATION_LIST_SAY_NT'"They"'
                                            INVOCATION_NT'"They"'
                                                RVALUE_CONTEXT_NT'"They"'
                                                    CONSTANT_NT'"They"'-text
                    RULE_NT'to say us'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Me"'
                                        INVOCATION_LIST_SAY_NT'"Me"'
                                            INVOCATION_NT'"Me"'
                                                RVALUE_CONTEXT_NT'"Me"'
                                                    CONSTANT_NT'"Me"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "You"'
                                        INVOCATION_LIST_SAY_NT'"You"'
                                            INVOCATION_NT'"You"'
                                                RVALUE_CONTEXT_NT'"You"'
                                                    CONSTANT_NT'"You"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "Him"'
                                                INVOCATION_LIST_SAY_NT'"Him"'
                                                    INVOCATION_NT'"Him"'
                                                        RVALUE_CONTEXT_NT'"Him"'
                                                            CONSTANT_NT'"Him"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "Her"'
                                                INVOCATION_LIST_SAY_NT'"Her"'
                                                    INVOCATION_NT'"Her"'
                                                        RVALUE_CONTEXT_NT'"Her"'
                                                            CONSTANT_NT'"Her"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Us"'
                                        INVOCATION_LIST_SAY_NT'"Us"'
                                            INVOCATION_NT'"Us"'
                                                RVALUE_CONTEXT_NT'"Us"'
                                                    CONSTANT_NT'"Us"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "You"'
                                        INVOCATION_LIST_SAY_NT'"You"'
                                            INVOCATION_NT'"You"'
                                                RVALUE_CONTEXT_NT'"You"'
                                                    CONSTANT_NT'"You"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Them"'
                                        INVOCATION_LIST_SAY_NT'"Them"'
                                            INVOCATION_NT'"Them"'
                                                RVALUE_CONTEXT_NT'"Them"'
                                                    CONSTANT_NT'"Them"'-text
                    RULE_NT'to say ours'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Mine"'
                                        INVOCATION_LIST_SAY_NT'"Mine"'
                                            INVOCATION_NT'"Mine"'
                                                RVALUE_CONTEXT_NT'"Mine"'
                                                    CONSTANT_NT'"Mine"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Yours"'
                                        INVOCATION_LIST_SAY_NT'"Yours"'
                                            INVOCATION_NT'"Yours"'
                                                RVALUE_CONTEXT_NT'"Yours"'
                                                    CONSTANT_NT'"Yours"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "His"'
                                                INVOCATION_LIST_SAY_NT'"His"'
                                                    INVOCATION_NT'"His"'
                                                        RVALUE_CONTEXT_NT'"His"'
                                                            CONSTANT_NT'"His"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "Hers"'
                                                INVOCATION_LIST_SAY_NT'"Hers"'
                                                    INVOCATION_NT'"Hers"'
                                                        RVALUE_CONTEXT_NT'"Hers"'
                                                            CONSTANT_NT'"Hers"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Ours"'
                                        INVOCATION_LIST_SAY_NT'"Ours"'
                                            INVOCATION_NT'"Ours"'
                                                RVALUE_CONTEXT_NT'"Ours"'
                                                    CONSTANT_NT'"Ours"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Yours"'
                                        INVOCATION_LIST_SAY_NT'"Yours"'
                                            INVOCATION_NT'"Yours"'
                                                RVALUE_CONTEXT_NT'"Yours"'
                                                    CONSTANT_NT'"Yours"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Theirs"'
                                        INVOCATION_LIST_SAY_NT'"Theirs"'
                                            INVOCATION_NT'"Theirs"'
                                                RVALUE_CONTEXT_NT'"Theirs"'
                                                    CONSTANT_NT'"Theirs"'-text
                    RULE_NT'to say ourselves'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Myself"'
                                        INVOCATION_LIST_SAY_NT'"Myself"'
                                            INVOCATION_NT'"Myself"'
                                                RVALUE_CONTEXT_NT'"Myself"'
                                                    CONSTANT_NT'"Myself"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Yourself"'
                                        INVOCATION_LIST_SAY_NT'"Yourself"'
                                            INVOCATION_NT'"Yourself"'
                                                RVALUE_CONTEXT_NT'"Yourself"'
                                                    CONSTANT_NT'"Yourself"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "Himself"'
                                                INVOCATION_LIST_SAY_NT'"Himself"'
                                                    INVOCATION_NT'"Himself"'
                                                        RVALUE_CONTEXT_NT'"Himself"'
                                                            CONSTANT_NT'"Himself"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "Herself"'
                                                INVOCATION_LIST_SAY_NT'"Herself"'
                                                    INVOCATION_NT'"Herself"'
                                                        RVALUE_CONTEXT_NT'"Herself"'
                                                            CONSTANT_NT'"Herself"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Ourselves"'
                                        INVOCATION_LIST_SAY_NT'"Ourselves"'
                                            INVOCATION_NT'"Ourselves"'
                                                RVALUE_CONTEXT_NT'"Ourselves"'
                                                    CONSTANT_NT'"Ourselves"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Yourselves"'
                                        INVOCATION_LIST_SAY_NT'"Yourselves"'
                                            INVOCATION_NT'"Yourselves"'
                                                RVALUE_CONTEXT_NT'"Yourselves"'
                                                    CONSTANT_NT'"Yourselves"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Themselves"'
                                        INVOCATION_LIST_SAY_NT'"Themselves"'
                                            INVOCATION_NT'"Themselves"'
                                                RVALUE_CONTEXT_NT'"Themselves"'
                                                    CONSTANT_NT'"Themselves"'-text
                    RULE_NT'to say our'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the prior named object is the player'
                                CONDITION_CONTEXT_NT'the prior named object is the player'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person singular'
                                    INVOCATION_NT'if the story viewpoint is first person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is first person singular'(test: [ is('story viewpoint', 'first person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "My"'
                                        INVOCATION_LIST_SAY_NT'"My"'
                                            INVOCATION_NT'"My"'
                                                RVALUE_CONTEXT_NT'"My"'
                                                    CONSTANT_NT'"My"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person singular'
                                    INVOCATION_NT'if the story viewpoint is second person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is second person singular'(test: [ is('story viewpoint', 'second person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Your"'
                                        INVOCATION_LIST_SAY_NT'"Your"'
                                            INVOCATION_NT'"Your"'
                                                RVALUE_CONTEXT_NT'"Your"'
                                                    CONSTANT_NT'"Your"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person singular'
                                    INVOCATION_NT'if the story viewpoint is third person singular'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person singular'
                                            TEST_PROPOSITION_NT'story viewpoint is third person singular'(test: [ is('story viewpoint', 'third person singular') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is male'
                                            INVOCATION_NT'if the player is male'
                                                CONDITION_CONTEXT_NT'player is male'
                                                    TEST_PROPOSITION_NT'player is male'(test: [ A88'male'('player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "His"'
                                                INVOCATION_LIST_SAY_NT'"His"'
                                                    INVOCATION_NT'"His"'
                                                        RVALUE_CONTEXT_NT'"His"'
                                                            CONSTANT_NT'"His"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "Her"'
                                                INVOCATION_LIST_SAY_NT'"Her"'
                                                    INVOCATION_NT'"Her"'
                                                        RVALUE_CONTEXT_NT'"Her"'
                                                            CONSTANT_NT'"Her"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is first person plural'
                                    INVOCATION_NT'if the story viewpoint is first person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is first person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is first person plural'(test: [ is('story viewpoint', 'first person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Our"'
                                        INVOCATION_LIST_SAY_NT'"Our"'
                                            INVOCATION_NT'"Our"'
                                                RVALUE_CONTEXT_NT'"Our"'
                                                    CONSTANT_NT'"Our"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is second person plural'
                                    INVOCATION_NT'if the story viewpoint is second person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is second person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is second person plural'(test: [ is('story viewpoint', 'second person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Your"'
                                        INVOCATION_LIST_SAY_NT'"Your"'
                                            INVOCATION_NT'"Your"'
                                                RVALUE_CONTEXT_NT'"Your"'
                                                    CONSTANT_NT'"Your"'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the story viewpoint is third person plural'
                                    INVOCATION_NT'if the story viewpoint is third person plural'
                                        CONDITION_CONTEXT_NT'story viewpoint is third person plural'
                                            TEST_PROPOSITION_NT'story viewpoint is third person plural'(test: [ is('story viewpoint', 'third person plural') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Their"'
                                        INVOCATION_LIST_SAY_NT'"Their"'
                                            INVOCATION_NT'"Their"'
                                                RVALUE_CONTEXT_NT'"Their"'
                                                    CONSTANT_NT'"Their"'-text
                HEADING_NT'section 3 - further pronouns ( for interactive fiction langu' (level 5)
                    RULE_NT'to say those'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say those in the accusative'
                                INVOCATION_LIST_SAY_NT'those in the accusative'
                                    INVOCATION_NT'those in the accusative'
                                        RVALUE_CONTEXT_NT'accusative'
                                            CONSTANT_NT'accusative'-grammatical case(I_accusative)
                    RULE_NT'to say those'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say those in the nominative'
                                INVOCATION_LIST_SAY_NT'those in the nominative'
                                    INVOCATION_NT'those in the nominative'
                                        RVALUE_CONTEXT_NT'nominative'
                                            CONSTANT_NT'nominative'-grammatical case(I_nominative)
                    RULE_NT'to say those in ( case - grammatical case )'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the case is nominative'
                                    INVOCATION_NT'if the case is nominative'
                                        CONDITION_CONTEXT_NT'case is nominative'
                                            TEST_PROPOSITION_NT'case is nominative'(test: [ is('case', 'nominative') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let the item be the prior named object'
                                        INVOCATION_NT'let the item be the prior named object'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'prior named object'
                                                NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the prior naming context is plural'
                                            INVOCATION_NT'if the prior naming context is plural'
                                                CONDITION_CONTEXT_NT'prior naming context is plural'
                                                    TEST_VALUE_NT'prior naming context is plural'
                                                        PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                            INVOCATION_LIST_NT'prior naming context is plural'
                                                                INVOCATION_NT'prior naming context is plural'
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "those"'
                                                INVOCATION_LIST_SAY_NT'"those"'
                                                    INVOCATION_NT'"those"'
                                                        RVALUE_CONTEXT_NT'"those"'
                                                            CONSTANT_NT'"those"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is the player'
                                                    INVOCATION_NT'if the item is the player'
                                                        CONDITION_CONTEXT_NT'item is the player'
                                                            TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "[we]"'
                                                        INVOCATION_LIST_SAY_NT'we'
                                                            INVOCATION_NT'we'
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                            INVOCATION_NT'if the item is a male person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "he"'
                                                                INVOCATION_LIST_SAY_NT'"he"'
                                                                    INVOCATION_NT'"he"'
                                                                        RVALUE_CONTEXT_NT'"he"'
                                                                            CONSTANT_NT'"he"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                                    INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                        CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                            LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                                TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                                CODE_BLOCK_NT
                                                                    CODE_BLOCK_NT'say "she"'
                                                                        INVOCATION_LIST_SAY_NT'"she"'
                                                                            INVOCATION_NT'"she"'
                                                                                RVALUE_CONTEXT_NT'"she"'
                                                                                    CONSTANT_NT'"she"'-text
                                                                CODE_BLOCK_NT'otherwise'
                                                                    CODE_BLOCK_NT'say "that"'
                                                                        INVOCATION_LIST_SAY_NT'"that"'
                                                                            INVOCATION_NT'"that"'
                                                                                RVALUE_CONTEXT_NT'"that"'
                                                                                    CONSTANT_NT'"that"'-text
                                CODE_BLOCK_NT'otherwise'
                                    INVOCATION_LIST_NT'let the item be the prior named object'
                                        INVOCATION_NT'let the item be the prior named object'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'prior named object'
                                                NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the prior naming context is plural'
                                            INVOCATION_NT'if the prior naming context is plural'
                                                CONDITION_CONTEXT_NT'prior naming context is plural'
                                                    TEST_VALUE_NT'prior naming context is plural'
                                                        PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                            INVOCATION_LIST_NT'prior naming context is plural'
                                                                INVOCATION_NT'prior naming context is plural'
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "those"'
                                                INVOCATION_LIST_SAY_NT'"those"'
                                                    INVOCATION_NT'"those"'
                                                        RVALUE_CONTEXT_NT'"those"'
                                                            CONSTANT_NT'"those"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is the player'
                                                    INVOCATION_NT'if the item is the player'
                                                        CONDITION_CONTEXT_NT'item is the player'
                                                            TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "[we]"'
                                                        INVOCATION_LIST_SAY_NT'we'
                                                            INVOCATION_NT'we'
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                            INVOCATION_NT'if the item is a male person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "him"'
                                                                INVOCATION_LIST_SAY_NT'"him"'
                                                                    INVOCATION_NT'"him"'
                                                                        RVALUE_CONTEXT_NT'"him"'
                                                                            CONSTANT_NT'"him"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                                    INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                        CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                            LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                                TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                                CODE_BLOCK_NT
                                                                    CODE_BLOCK_NT'say "her"'
                                                                        INVOCATION_LIST_SAY_NT'"her"'
                                                                            INVOCATION_NT'"her"'
                                                                                RVALUE_CONTEXT_NT'"her"'
                                                                                    CONSTANT_NT'"her"'-text
                                                                CODE_BLOCK_NT'otherwise'
                                                                    CODE_BLOCK_NT'say "that"'
                                                                        INVOCATION_LIST_SAY_NT'"that"'
                                                                            INVOCATION_NT'"that"'
                                                                                RVALUE_CONTEXT_NT'"that"'
                                                                                    CONSTANT_NT'"that"'-text
                    RULE_NT'to say those in ( case - grammatical case )'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the case is nominative'
                                    INVOCATION_NT'if the case is nominative'
                                        CONDITION_CONTEXT_NT'case is nominative'
                                            TEST_PROPOSITION_NT'case is nominative'(test: [ is('case', 'nominative') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let the item be the prior named object'
                                        INVOCATION_NT'let the item be the prior named object'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'prior named object'
                                                NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the prior naming context is plural'
                                            INVOCATION_NT'if the prior naming context is plural'
                                                CONDITION_CONTEXT_NT'prior naming context is plural'
                                                    TEST_VALUE_NT'prior naming context is plural'
                                                        PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                            INVOCATION_LIST_NT'prior naming context is plural'
                                                                INVOCATION_NT'prior naming context is plural'
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "Those"'
                                                INVOCATION_LIST_SAY_NT'"Those"'
                                                    INVOCATION_NT'"Those"'
                                                        RVALUE_CONTEXT_NT'"Those"'
                                                            CONSTANT_NT'"Those"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is the player'
                                                    INVOCATION_NT'if the item is the player'
                                                        CONDITION_CONTEXT_NT'item is the player'
                                                            TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "[We]"'
                                                        INVOCATION_LIST_SAY_NT'we'
                                                            INVOCATION_NT'we'
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                            INVOCATION_NT'if the item is a male person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "He"'
                                                                INVOCATION_LIST_SAY_NT'"He"'
                                                                    INVOCATION_NT'"He"'
                                                                        RVALUE_CONTEXT_NT'"He"'
                                                                            CONSTANT_NT'"He"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                                    INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                        CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                            LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                                TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                                CODE_BLOCK_NT
                                                                    CODE_BLOCK_NT'say "She"'
                                                                        INVOCATION_LIST_SAY_NT'"She"'
                                                                            INVOCATION_NT'"She"'
                                                                                RVALUE_CONTEXT_NT'"She"'
                                                                                    CONSTANT_NT'"She"'-text
                                                                CODE_BLOCK_NT'otherwise'
                                                                    CODE_BLOCK_NT'say "That"'
                                                                        INVOCATION_LIST_SAY_NT'"That"'
                                                                            INVOCATION_NT'"That"'
                                                                                RVALUE_CONTEXT_NT'"That"'
                                                                                    CONSTANT_NT'"That"'-text
                                CODE_BLOCK_NT'otherwise'
                                    INVOCATION_LIST_NT'let the item be the prior named object'
                                        INVOCATION_NT'let the item be the prior named object'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'prior named object'
                                                NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the prior naming context is plural'
                                            INVOCATION_NT'if the prior naming context is plural'
                                                CONDITION_CONTEXT_NT'prior naming context is plural'
                                                    TEST_VALUE_NT'prior naming context is plural'
                                                        PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                            INVOCATION_LIST_NT'prior naming context is plural'
                                                                INVOCATION_NT'prior naming context is plural'
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "Those"'
                                                INVOCATION_LIST_SAY_NT'"Those"'
                                                    INVOCATION_NT'"Those"'
                                                        RVALUE_CONTEXT_NT'"Those"'
                                                            CONSTANT_NT'"Those"'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is the player'
                                                    INVOCATION_NT'if the item is the player'
                                                        CONDITION_CONTEXT_NT'item is the player'
                                                            TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "[We]"'
                                                        INVOCATION_LIST_SAY_NT'we'
                                                            INVOCATION_NT'we'
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                            INVOCATION_NT'if the item is a male person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "Him"'
                                                                INVOCATION_LIST_SAY_NT'"Him"'
                                                                    INVOCATION_NT'"Him"'
                                                                        RVALUE_CONTEXT_NT'"Him"'
                                                                            CONSTANT_NT'"Him"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                                    INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                        CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                            LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                                TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                                CODE_BLOCK_NT
                                                                    CODE_BLOCK_NT'say "Her"'
                                                                        INVOCATION_LIST_SAY_NT'"Her"'
                                                                            INVOCATION_NT'"Her"'
                                                                                RVALUE_CONTEXT_NT'"Her"'
                                                                                    CONSTANT_NT'"Her"'-text
                                                                CODE_BLOCK_NT'otherwise'
                                                                    CODE_BLOCK_NT'say "That"'
                                                                        INVOCATION_LIST_SAY_NT'"That"'
                                                                            INVOCATION_NT'"That"'
                                                                                RVALUE_CONTEXT_NT'"That"'
                                                                                    CONSTANT_NT'"That"'-text
                    RULE_NT'to say they'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "they"'
                                        INVOCATION_LIST_SAY_NT'"they"'
                                            INVOCATION_NT'"they"'
                                                RVALUE_CONTEXT_NT'"they"'
                                                    CONSTANT_NT'"they"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[we]"'
                                                INVOCATION_LIST_SAY_NT'we'
                                                    INVOCATION_NT'we'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "he"'
                                                        INVOCATION_LIST_SAY_NT'"he"'
                                                            INVOCATION_NT'"he"'
                                                                RVALUE_CONTEXT_NT'"he"'
                                                                    CONSTANT_NT'"he"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "she"'
                                                                INVOCATION_LIST_SAY_NT'"she"'
                                                                    INVOCATION_NT'"she"'
                                                                        RVALUE_CONTEXT_NT'"she"'
                                                                            CONSTANT_NT'"she"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "it"'
                                                                INVOCATION_LIST_SAY_NT'"it"'
                                                                    INVOCATION_NT'"it"'
                                                                        RVALUE_CONTEXT_NT'"it"'
                                                                            CONSTANT_NT'"it"'-text
                    RULE_NT'to say they'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "They"'
                                        INVOCATION_LIST_SAY_NT'"They"'
                                            INVOCATION_NT'"They"'
                                                RVALUE_CONTEXT_NT'"They"'
                                                    CONSTANT_NT'"They"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[We]"'
                                                INVOCATION_LIST_SAY_NT'we'
                                                    INVOCATION_NT'we'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "He"'
                                                        INVOCATION_LIST_SAY_NT'"He"'
                                                            INVOCATION_NT'"He"'
                                                                RVALUE_CONTEXT_NT'"He"'
                                                                    CONSTANT_NT'"He"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "She"'
                                                                INVOCATION_LIST_SAY_NT'"She"'
                                                                    INVOCATION_NT'"She"'
                                                                        RVALUE_CONTEXT_NT'"She"'
                                                                            CONSTANT_NT'"She"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "It"'
                                                                INVOCATION_LIST_SAY_NT'"It"'
                                                                    INVOCATION_NT'"It"'
                                                                        RVALUE_CONTEXT_NT'"It"'
                                                                            CONSTANT_NT'"It"'-text
                    RULE_NT'to say their'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "their"'
                                        INVOCATION_LIST_SAY_NT'"their"'
                                            INVOCATION_NT'"their"'
                                                RVALUE_CONTEXT_NT'"their"'
                                                    CONSTANT_NT'"their"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[our]"'
                                                INVOCATION_LIST_SAY_NT'our'
                                                    INVOCATION_NT'our'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "his"'
                                                        INVOCATION_LIST_SAY_NT'"his"'
                                                            INVOCATION_NT'"his"'
                                                                RVALUE_CONTEXT_NT'"his"'
                                                                    CONSTANT_NT'"his"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "her"'
                                                                INVOCATION_LIST_SAY_NT'"her"'
                                                                    INVOCATION_NT'"her"'
                                                                        RVALUE_CONTEXT_NT'"her"'
                                                                            CONSTANT_NT'"her"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "its"'
                                                                INVOCATION_LIST_SAY_NT'"its"'
                                                                    INVOCATION_NT'"its"'
                                                                        RVALUE_CONTEXT_NT'"its"'
                                                                            CONSTANT_NT'"its"'-text
                    RULE_NT'to say their'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Their"'
                                        INVOCATION_LIST_SAY_NT'"Their"'
                                            INVOCATION_NT'"Their"'
                                                RVALUE_CONTEXT_NT'"Their"'
                                                    CONSTANT_NT'"Their"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[Our]"'
                                                INVOCATION_LIST_SAY_NT'our'
                                                    INVOCATION_NT'our'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "His"'
                                                        INVOCATION_LIST_SAY_NT'"His"'
                                                            INVOCATION_NT'"His"'
                                                                RVALUE_CONTEXT_NT'"His"'
                                                                    CONSTANT_NT'"His"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "Her"'
                                                                INVOCATION_LIST_SAY_NT'"Her"'
                                                                    INVOCATION_NT'"Her"'
                                                                        RVALUE_CONTEXT_NT'"Her"'
                                                                            CONSTANT_NT'"Her"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "Its"'
                                                                INVOCATION_LIST_SAY_NT'"Its"'
                                                                    INVOCATION_NT'"Its"'
                                                                        RVALUE_CONTEXT_NT'"Its"'
                                                                            CONSTANT_NT'"Its"'-text
                    RULE_NT'to say them'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "them"'
                                        INVOCATION_LIST_SAY_NT'"them"'
                                            INVOCATION_NT'"them"'
                                                RVALUE_CONTEXT_NT'"them"'
                                                    CONSTANT_NT'"them"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[us]"'
                                                INVOCATION_LIST_SAY_NT'us'
                                                    INVOCATION_NT'us'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "him"'
                                                        INVOCATION_LIST_SAY_NT'"him"'
                                                            INVOCATION_NT'"him"'
                                                                RVALUE_CONTEXT_NT'"him"'
                                                                    CONSTANT_NT'"him"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "her"'
                                                                INVOCATION_LIST_SAY_NT'"her"'
                                                                    INVOCATION_NT'"her"'
                                                                        RVALUE_CONTEXT_NT'"her"'
                                                                            CONSTANT_NT'"her"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "it"'
                                                                INVOCATION_LIST_SAY_NT'"it"'
                                                                    INVOCATION_NT'"it"'
                                                                        RVALUE_CONTEXT_NT'"it"'
                                                                            CONSTANT_NT'"it"'-text
                    RULE_NT'to say them'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Them"'
                                        INVOCATION_LIST_SAY_NT'"Them"'
                                            INVOCATION_NT'"Them"'
                                                RVALUE_CONTEXT_NT'"Them"'
                                                    CONSTANT_NT'"Them"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[Us]"'
                                                INVOCATION_LIST_SAY_NT'us'
                                                    INVOCATION_NT'us'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "Him"'
                                                        INVOCATION_LIST_SAY_NT'"Him"'
                                                            INVOCATION_NT'"Him"'
                                                                RVALUE_CONTEXT_NT'"Him"'
                                                                    CONSTANT_NT'"Him"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "Her"'
                                                                INVOCATION_LIST_SAY_NT'"Her"'
                                                                    INVOCATION_NT'"Her"'
                                                                        RVALUE_CONTEXT_NT'"Her"'
                                                                            CONSTANT_NT'"Her"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "It"'
                                                                INVOCATION_LIST_SAY_NT'"It"'
                                                                    INVOCATION_NT'"It"'
                                                                        RVALUE_CONTEXT_NT'"It"'
                                                                            CONSTANT_NT'"It"'-text
                    RULE_NT'to say theirs'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "theirs"'
                                        INVOCATION_LIST_SAY_NT'"theirs"'
                                            INVOCATION_NT'"theirs"'
                                                RVALUE_CONTEXT_NT'"theirs"'
                                                    CONSTANT_NT'"theirs"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[ours]"'
                                                INVOCATION_LIST_SAY_NT'ours'
                                                    INVOCATION_NT'ours'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "his"'
                                                        INVOCATION_LIST_SAY_NT'"his"'
                                                            INVOCATION_NT'"his"'
                                                                RVALUE_CONTEXT_NT'"his"'
                                                                    CONSTANT_NT'"his"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "hers"'
                                                                INVOCATION_LIST_SAY_NT'"hers"'
                                                                    INVOCATION_NT'"hers"'
                                                                        RVALUE_CONTEXT_NT'"hers"'
                                                                            CONSTANT_NT'"hers"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "its"'
                                                                INVOCATION_LIST_SAY_NT'"its"'
                                                                    INVOCATION_NT'"its"'
                                                                        RVALUE_CONTEXT_NT'"its"'
                                                                            CONSTANT_NT'"its"'-text
                    RULE_NT'to say theirs'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Theirs"'
                                        INVOCATION_LIST_SAY_NT'"Theirs"'
                                            INVOCATION_NT'"Theirs"'
                                                RVALUE_CONTEXT_NT'"Theirs"'
                                                    CONSTANT_NT'"Theirs"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[Ours]"'
                                                INVOCATION_LIST_SAY_NT'ours'
                                                    INVOCATION_NT'ours'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "His"'
                                                        INVOCATION_LIST_SAY_NT'"His"'
                                                            INVOCATION_NT'"His"'
                                                                RVALUE_CONTEXT_NT'"His"'
                                                                    CONSTANT_NT'"His"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "Hers"'
                                                                INVOCATION_LIST_SAY_NT'"Hers"'
                                                                    INVOCATION_NT'"Hers"'
                                                                        RVALUE_CONTEXT_NT'"Hers"'
                                                                            CONSTANT_NT'"Hers"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "Its"'
                                                                INVOCATION_LIST_SAY_NT'"Its"'
                                                                    INVOCATION_NT'"Its"'
                                                                        RVALUE_CONTEXT_NT'"Its"'
                                                                            CONSTANT_NT'"Its"'-text
                    RULE_NT'to say themselves'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "themselves"'
                                        INVOCATION_LIST_SAY_NT'"themselves"'
                                            INVOCATION_NT'"themselves"'
                                                RVALUE_CONTEXT_NT'"themselves"'
                                                    CONSTANT_NT'"themselves"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[ourselves]"'
                                                INVOCATION_LIST_SAY_NT'ourselves'
                                                    INVOCATION_NT'ourselves'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "himself"'
                                                        INVOCATION_LIST_SAY_NT'"himself"'
                                                            INVOCATION_NT'"himself"'
                                                                RVALUE_CONTEXT_NT'"himself"'
                                                                    CONSTANT_NT'"himself"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "herself"'
                                                                INVOCATION_LIST_SAY_NT'"herself"'
                                                                    INVOCATION_NT'"herself"'
                                                                        RVALUE_CONTEXT_NT'"herself"'
                                                                            CONSTANT_NT'"herself"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "itself"'
                                                                INVOCATION_LIST_SAY_NT'"itself"'
                                                                    INVOCATION_NT'"itself"'
                                                                        RVALUE_CONTEXT_NT'"itself"'
                                                                            CONSTANT_NT'"itself"'-text
                    RULE_NT'to say themselves'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Themselves"'
                                        INVOCATION_LIST_SAY_NT'"Themselves"'
                                            INVOCATION_NT'"Themselves"'
                                                RVALUE_CONTEXT_NT'"Themselves"'
                                                    CONSTANT_NT'"Themselves"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[Ourselves]"'
                                                INVOCATION_LIST_SAY_NT'ourselves'
                                                    INVOCATION_NT'ourselves'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "Himself"'
                                                        INVOCATION_LIST_SAY_NT'"Himself"'
                                                            INVOCATION_NT'"Himself"'
                                                                RVALUE_CONTEXT_NT'"Himself"'
                                                                    CONSTANT_NT'"Himself"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "Herself"'
                                                                INVOCATION_LIST_SAY_NT'"Herself"'
                                                                    INVOCATION_NT'"Herself"'
                                                                        RVALUE_CONTEXT_NT'"Herself"'
                                                                            CONSTANT_NT'"Herself"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "Itself"'
                                                                INVOCATION_LIST_SAY_NT'"Itself"'
                                                                    INVOCATION_NT'"Itself"'
                                                                        RVALUE_CONTEXT_NT'"Itself"'
                                                                            CONSTANT_NT'"Itself"'-text
                    RULE_NT'to say they're'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "they"'
                                        INVOCATION_LIST_SAY_NT'"they"'
                                            INVOCATION_NT'"they"'
                                                RVALUE_CONTEXT_NT'"they"'
                                                    CONSTANT_NT'"they"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[we]"'
                                                INVOCATION_LIST_SAY_NT'we'
                                                    INVOCATION_NT'we'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "he"'
                                                        INVOCATION_LIST_SAY_NT'"he"'
                                                            INVOCATION_NT'"he"'
                                                                RVALUE_CONTEXT_NT'"he"'
                                                                    CONSTANT_NT'"he"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "she"'
                                                                INVOCATION_LIST_SAY_NT'"she"'
                                                                    INVOCATION_NT'"she"'
                                                                        RVALUE_CONTEXT_NT'"she"'
                                                                            CONSTANT_NT'"she"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "that"'
                                                                INVOCATION_LIST_SAY_NT'"that"'
                                                                    INVOCATION_NT'"that"'
                                                                        RVALUE_CONTEXT_NT'"that"'
                                                                            CONSTANT_NT'"that"'-text
                            CODE_BLOCK_NT'say "['re]"'
                                INVOCATION_LIST_SAY_NT''re'
                                    INVOCATION_NT''re'
                    RULE_NT'to say they're'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the prior naming context is plural'
                                    INVOCATION_NT'if the prior naming context is plural'
                                        CONDITION_CONTEXT_NT'prior naming context is plural'
                                            TEST_VALUE_NT'prior naming context is plural'
                                                PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                    INVOCATION_LIST_NT'prior naming context is plural'
                                                        INVOCATION_NT'prior naming context is plural'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "They"'
                                        INVOCATION_LIST_SAY_NT'"They"'
                                            INVOCATION_NT'"They"'
                                                RVALUE_CONTEXT_NT'"They"'
                                                    CONSTANT_NT'"They"'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the item is the player'
                                            INVOCATION_NT'if the item is the player'
                                                CONDITION_CONTEXT_NT'item is the player'
                                                    TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[We]"'
                                                INVOCATION_LIST_SAY_NT'we'
                                                    INVOCATION_NT'we'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if the item is a male person and item is not neuter'
                                                    INVOCATION_NT'if the item is a male person and item is not neuter'
                                                        CONDITION_CONTEXT_NT'item is a male person and item is not neuter'
                                                            LOGICAL_AND_NT'item is a male person and item is not neuter'
                                                                TEST_PROPOSITION_NT'item is a male person'(test: [ kind=person('item') ^ A88'male'('item') ])
                                                                TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                CODE_BLOCK_NT
                                                    CODE_BLOCK_NT'say "He"'
                                                        INVOCATION_LIST_SAY_NT'"He"'
                                                            INVOCATION_NT'"He"'
                                                                RVALUE_CONTEXT_NT'"He"'
                                                                    CONSTANT_NT'"He"'-text
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the item is a female person and item is not neuter'
                                                            INVOCATION_NT'if the item is a female person and item is not neuter'
                                                                CONDITION_CONTEXT_NT'item is a female person and item is not neuter'
                                                                    LOGICAL_AND_NT'item is a female person and item is not neuter'
                                                                        TEST_PROPOSITION_NT'item is a female person'(test: [ kind=person('item') ^ A87'female'('item') ])
                                                                        TEST_PROPOSITION_NT'item is not neuter'(test: [ NOT[ A89'neuter'('item') NOT] ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "She"'
                                                                INVOCATION_LIST_SAY_NT'"She"'
                                                                    INVOCATION_NT'"She"'
                                                                        RVALUE_CONTEXT_NT'"She"'
                                                                            CONSTANT_NT'"She"'-text
                                                        CODE_BLOCK_NT'otherwise'
                                                            CODE_BLOCK_NT'say "That"'
                                                                INVOCATION_LIST_SAY_NT'"That"'
                                                                    INVOCATION_NT'"That"'
                                                                        RVALUE_CONTEXT_NT'"That"'
                                                                            CONSTANT_NT'"That"'-text
                            CODE_BLOCK_NT'say "['re]"'
                                INVOCATION_LIST_SAY_NT''re'
                                    INVOCATION_NT''re'
                    RULE_NT'to say it'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]It"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"It"'
                                    INVOCATION_NT'"It"'
                                        RVALUE_CONTEXT_NT'"It"'
                                            CONSTANT_NT'"It"'-text
                    RULE_NT'to say there'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]There"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"There"'
                                    INVOCATION_NT'"There"'
                                        RVALUE_CONTEXT_NT'"There"'
                                            CONSTANT_NT'"There"'-text
                    RULE_NT'to say it'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]it"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"it"'
                                    INVOCATION_NT'"it"'
                                        RVALUE_CONTEXT_NT'"it"'
                                            CONSTANT_NT'"it"'-text
                    RULE_NT'to say there'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]there"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"there"'
                                    INVOCATION_NT'"there"'
                                        RVALUE_CONTEXT_NT'"there"'
                                            CONSTANT_NT'"there"'-text
                    RULE_NT'to say it's'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]It['re]"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"It"'
                                    INVOCATION_NT'"It"'
                                        RVALUE_CONTEXT_NT'"It"'
                                            CONSTANT_NT'"It"'-text
                                INVOCATION_LIST_SAY_NT''re'
                                    INVOCATION_NT''re'
                    RULE_NT'to say there's'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]There['re]"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"There"'
                                    INVOCATION_NT'"There"'
                                        RVALUE_CONTEXT_NT'"There"'
                                            CONSTANT_NT'"There"'-text
                                INVOCATION_LIST_SAY_NT''re'
                                    INVOCATION_NT''re'
                    RULE_NT'to say it's'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]it['re]"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"it"'
                                    INVOCATION_NT'"it"'
                                        RVALUE_CONTEXT_NT'"it"'
                                            CONSTANT_NT'"it"'-text
                                INVOCATION_LIST_SAY_NT''re'
                                    INVOCATION_NT''re'
                    RULE_NT'to say there's'
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[regarding nothing]there['re]"'
                                INVOCATION_LIST_SAY_NT'regarding nothing'
                                    INVOCATION_NT'regarding nothing'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                INVOCATION_LIST_SAY_NT'"there"'
                                    INVOCATION_NT'"there"'
                                        RVALUE_CONTEXT_NT'"there"'
                                            CONSTANT_NT'"there"'-text
                                INVOCATION_LIST_SAY_NT''re'
                                    INVOCATION_NT''re'
                    RULE_NT'to say possessive'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the item is the player'
                                    INVOCATION_NT'if the item is the player'
                                        CONDITION_CONTEXT_NT'item is the player'
                                            TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[our]"'
                                        INVOCATION_LIST_SAY_NT'our'
                                            INVOCATION_NT'our'
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the prior naming context is plural'
                                            INVOCATION_NT'if the prior naming context is plural'
                                                CONDITION_CONTEXT_NT'prior naming context is plural'
                                                    TEST_VALUE_NT'prior naming context is plural'
                                                        PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                            INVOCATION_LIST_NT'prior naming context is plural'
                                                                INVOCATION_NT'prior naming context is plural'
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[the item][apostrophe]"'
                                                INVOCATION_LIST_SAY_NT'the item'
                                                    INVOCATION_NT'the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;object)
                                                INVOCATION_LIST_SAY_NT'apostrophe'
                                                    INVOCATION_NT'apostrophe'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "[the item][apostrophe]s"'
                                                INVOCATION_LIST_SAY_NT'the item'
                                                    INVOCATION_NT'the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;object)
                                                INVOCATION_LIST_SAY_NT'apostrophe'
                                                    INVOCATION_NT'apostrophe'
                                                INVOCATION_LIST_SAY_NT'"s"'
                                                    INVOCATION_NT'"s"'
                                                        RVALUE_CONTEXT_NT'"s"'
                                                            CONSTANT_NT'"s"'-text
                    RULE_NT'to say possessive'
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let the item be the prior named object'
                                INVOCATION_NT'let the item be the prior named object'
                                    NEW_LOCAL_CONTEXT_NT'item'
                                        UNKNOWN_NT'item'
                                    RVALUE_CONTEXT_NT'prior named object'
                                        NONLOCAL_VARIABLE_NT'prior named object'('prior named object'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the item is the player'
                                    INVOCATION_NT'if the item is the player'
                                        CONDITION_CONTEXT_NT'item is the player'
                                            TEST_PROPOSITION_NT'item is the player'(test: [ is('item', 'the player') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[Our]"'
                                        INVOCATION_LIST_SAY_NT'our'
                                            INVOCATION_NT'our'
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the prior naming context is plural'
                                            INVOCATION_NT'if the prior naming context is plural'
                                                CONDITION_CONTEXT_NT'prior naming context is plural'
                                                    TEST_VALUE_NT'prior naming context is plural'
                                                        PHRASE_TO_DECIDE_VALUE_NT'prior naming context is plural'
                                                            INVOCATION_LIST_NT'prior naming context is plural'
                                                                INVOCATION_NT'prior naming context is plural'
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[The item][apostrophe]"'
                                                INVOCATION_LIST_SAY_NT'the item'
                                                    INVOCATION_NT'the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;object)
                                                INVOCATION_LIST_SAY_NT'apostrophe'
                                                    INVOCATION_NT'apostrophe'
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "[The item][apostrophe]s"'
                                                INVOCATION_LIST_SAY_NT'the item'
                                                    INVOCATION_NT'the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;object)
                                                INVOCATION_LIST_SAY_NT'apostrophe'
                                                    INVOCATION_NT'apostrophe'
                                                INVOCATION_LIST_SAY_NT'"s"'
                                                    INVOCATION_NT'"s"'
                                                        RVALUE_CONTEXT_NT'"s"'
                                                            CONSTANT_NT'"s"'-text
                    ENDHERE_NT'english language'
        INCLUSION_NT'include english language by graham nelson'
        INCLUSION_NT'include standard rules by graham nelson'
            HEADING_NT'version 6 of the standard rules by graham nelson begins here' (level 0)
                BEGINHERE_NT'version 6 of the standard rules by graham nelson'
                SENTENCE_NT'The Standard Rules, included in every project, define phrase'
                HEADING_NT'part one - preamble' (level 3)
                    SENTENCE_NT'the verb to begin when means the built-in scene-begins-when '
                        VERB_NT'means'
                        PROPER_NOUN_NT'to begin when'
                        PROPER_NOUN_NT'built-in scene-begins-when meaning'
                    SENTENCE_NT'the verb to end when means the built-in scene-ends-when mean'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to end when'
                        PROPER_NOUN_NT'built-in scene-ends-when meaning'
                    SENTENCE_NT'the verb to end + when means the built-in scene-ends-when me'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to end + when'
                        PROPER_NOUN_NT'built-in scene-ends-when meaning'
                    SENTENCE_NT'the verb to test + with in the imperative means the built-in'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to test + with'
                        PROPER_NOUN_NT'built-in test-with meaning'
                    SENTENCE_NT'the verb to understand + as in the imperative means the buil'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to understand + as'
                        PROPER_NOUN_NT'built-in understand-as meaning'
                    SENTENCE_NT'the verb to release along with in the imperative means the b'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to release along with'
                        PROPER_NOUN_NT'built-in release-along-with meaning'
                    SENTENCE_NT'the verb to index map with in the imperative means the built'
                        VERB_NT'means'
                        PROPER_NOUN_NT'to index map with'
                        PROPER_NOUN_NT'built-in index-map-with meaning'
                    SENTENCE_NT'use command line echoing translates as (-  Constant ECHO_COM'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'command line echoing'
                        PROPER_NOUN_NT'(-  Constant ECHO_COMMANDS; '
                    SENTENCE_NT'use full-length room descriptions translates as (-  #IFNDEF '
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'full-length room descriptions'
                        PROPER_NOUN_NT'(-  #IFNDEF I7_LOOKMODE; Constant I7_LOOKMODE = 2; #ENDIF; '
                    SENTENCE_NT'use abbreviated room descriptions translates as (-  #IFNDEF '
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'abbreviated room descriptions'
                        PROPER_NOUN_NT'(-  #IFNDEF I7_LOOKMODE; Constant I7_LOOKMODE = 3; #ENDIF; '
                    SENTENCE_NT'use scoring translates as (-  #IFNDEF USE_SCORING; Constant '
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'scoring'
                        PROPER_NOUN_NT'(-  #IFNDEF USE_SCORING; Constant USE_SCORING = 1; #ENDIF; '
                    SENTENCE_NT'use no scoring translates as (-  #IFNDEF USE_SCORING; Consta'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'no scoring'
                        PROPER_NOUN_NT'(-  #IFNDEF USE_SCORING; Constant USE_SCORING = 0; #ENDIF; '
                    SENTENCE_NT'use manual pronouns translates as (-  Constant MANUAL_PRONOU'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'manual pronouns'
                        PROPER_NOUN_NT'(-  Constant MANUAL_PRONOUNS; '
                    SENTENCE_NT'use undo prevention translates as (-  Constant PREVENT_UNDO;'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'undo prevention'
                        PROPER_NOUN_NT'(-  Constant PREVENT_UNDO; '
                    SENTENCE_NT'use verbose room descriptions translates as (-  Constant DEF'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'verbose room descriptions'
                        PROPER_NOUN_NT'(-  Constant DEFAULT_VERBOSE_DESCRIPTIONS; '
                    SENTENCE_NT'use brief room descriptions translates as (-  Constant DEFAU'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'brief room descriptions'
                        PROPER_NOUN_NT'(-  Constant DEFAULT_BRIEF_DESCRIPTIONS; '
                    SENTENCE_NT'use superbrief room descriptions translates as (-  Constant '
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'superbrief room descriptions'
                        PROPER_NOUN_NT'(-  Constant DEFAULT_SUPERBRIEF_DESCRIPTIONS; '
                    SENTENCE_NT'use maximum things understood at once of at least 100 transl'
                        VERB_NT'translates as'
                        PROPER_NOUN_NT'maximum things understood at once of at least 100'
                        PROPER_NOUN_NT'(-  Constant MATCH_LIST_WORDS = {N}; '
                    SENTENCE_NT'use maximum things understood at once of at least 100'
                        VERB_NT'use'
                        PROPER_NOUN_NT'maximum things understood at once of at least 100'
                HEADING_NT'part two - the physical world model' (level 3)
                    HEADING_NT'chapter 1 - verbs and relations' (level 4)
                        SENTENCE_NT'the verb to be in means the reversed containment relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be in'
                            PROPER_NOUN_NT'reversed containment relation'
                        SENTENCE_NT'the verb to be inside means the reversed containment relatio'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be inside'
                            PROPER_NOUN_NT'reversed containment relation'
                        SENTENCE_NT'the verb to be within means the reversed containment relatio'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be within'
                            PROPER_NOUN_NT'reversed containment relation'
                        SENTENCE_NT'the verb to be held in means the reversed containment relati'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be held in'
                            PROPER_NOUN_NT'reversed containment relation'
                        SENTENCE_NT'the verb to be held inside means the reversed containment re'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be held inside'
                            PROPER_NOUN_NT'reversed containment relation'
                        SENTENCE_NT'the verb to contain means the containment relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to contain'
                            PROPER_NOUN_NT'containment relation'
                        SENTENCE_NT'the verb to be contained in means the reversed containment r'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be contained in'
                            PROPER_NOUN_NT'reversed containment relation'
                        SENTENCE_NT'the verb to be on top of means the reversed support relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be on top of'
                            PROPER_NOUN_NT'reversed support relation'
                        SENTENCE_NT'the verb to be on means the reversed support relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be on'
                            PROPER_NOUN_NT'reversed support relation'
                        SENTENCE_NT'the verb to support means the support relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to support'
                            PROPER_NOUN_NT'support relation'
                        SENTENCE_NT'the verb to be supported on means the reversed support relat'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be supported on'
                            PROPER_NOUN_NT'reversed support relation'
                        SENTENCE_NT'the verb to incorporate means the incorporation relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to incorporate'
                            PROPER_NOUN_NT'incorporation relation'
                        SENTENCE_NT'the verb to be part of means the reversed incorporation rela'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be part of'
                            PROPER_NOUN_NT'reversed incorporation relation'
                        SENTENCE_NT'the verb to be a part of means the reversed incorporation re'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be a part of'
                            PROPER_NOUN_NT'reversed incorporation relation'
                        SENTENCE_NT'the verb to be parts of means the reversed incorporation rel'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be parts of'
                            PROPER_NOUN_NT'reversed incorporation relation'
                        SENTENCE_NT'the verb to enclose means the enclosure relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to enclose'
                            PROPER_NOUN_NT'enclosure relation'
                        SENTENCE_NT'the verb to carry means the carrying relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to carry'
                            PROPER_NOUN_NT'carrying relation'
                        SENTENCE_NT'the verb to hold means the holding relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to hold'
                            PROPER_NOUN_NT'holding relation'
                        SENTENCE_NT'the verb to wear means the wearing relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to wear'
                            PROPER_NOUN_NT'wearing relation'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        SENTENCE_NT'the verb to be able to see means the visibility relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be able to see'
                            PROPER_NOUN_NT'visibility relation'
                        SENTENCE_NT'the verb to be able to touch means the touchability relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to be able to touch'
                            PROPER_NOUN_NT'touchability relation'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        SENTENCE_NT'the verb to conceal ( he conceals , they conceal , he concea'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to conceal ( he conceals , they conceal , he concealed , it '
                            PROPER_NOUN_NT'concealment relation'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                        RULE_NT'definition'
                    HEADING_NT'chapter 2 - kinds for the physical world' (level 4)
                        HEADING_NT'section 1 - kind definitions' (level 5)
                            SENTENCE_NT'a room is a kind'
                                VERB_NT'is'
                                COMMON_NOUN_NT'room'
                                KIND_NT'kind'
                            SENTENCE_NT'a thing is a kind'
                                VERB_NT'is'
                                COMMON_NOUN_NT'thing'
                                KIND_NT'kind'
                            SENTENCE_NT'a direction is a kind'
                                VERB_NT'is'
                                COMMON_NOUN_NT'direction'
                                KIND_NT'kind'
                            SENTENCE_NT'a door is a kind of thing'
                                VERB_NT'is'
                                COMMON_NOUN_NT'door'
                                KIND_NT'kind of thing'
                                    COMMON_NOUN_NT'thing'
                            SENTENCE_NT'a container is a kind of thing'
                                VERB_NT'is'
                                COMMON_NOUN_NT'container'
                                KIND_NT'kind of thing'
                                    COMMON_NOUN_NT'thing'
                            SENTENCE_NT'a supporter is a kind of thing'
                                VERB_NT'is'
                                COMMON_NOUN_NT'supporter'
                                KIND_NT'kind of thing'
                                    COMMON_NOUN_NT'thing'
                            SENTENCE_NT'a backdrop is a kind of thing'
                                VERB_NT'is'
                                COMMON_NOUN_NT'backdrop'
                                KIND_NT'kind of thing'
                                    COMMON_NOUN_NT'thing'
                            SENTENCE_NT'the plural of person is people'
                                VERB_NT'is'
                                PROPER_NOUN_NT'person'
                                PROPER_NOUN_NT'people'
                            SENTENCE_NT'the plural of person is persons'
                                VERB_NT'is'
                                PROPER_NOUN_NT'person'
                                PROPER_NOUN_NT'persons'
                            SENTENCE_NT'a person is a kind of thing'
                                VERB_NT'is'
                                COMMON_NOUN_NT'person'
                                KIND_NT'kind of thing'
                                    COMMON_NOUN_NT'thing'
                            SENTENCE_NT'a region is a kind'
                                VERB_NT'is'
                                COMMON_NOUN_NT'region'
                                KIND_NT'kind'
                        HEADING_NT'section 2 - rooms' (level 5)
                            SENTENCE_NT'the specification of room is Represents geographical locatio'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of room'
                                    COMMON_NOUN_NT'room'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents geographical locations, both indoor
                                and outdoor, '
                            SENTENCE_NT'a room can be privately-named or publicly-named'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a room'
                                PROPER_NOUN_NT'privately-named or publicly-named'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'privately-named'
                                        PROPER_NOUN_NT'publicly-named'
                            SENTENCE_NT'a room is usually publicly-named'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'room'
                                ADJECTIVE_NT'publicly-named'
                            SENTENCE_NT'a room can be lighted or dark'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a room'
                                PROPER_NOUN_NT'lighted or dark'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'lighted'
                                        PROPER_NOUN_NT'dark'
                            SENTENCE_NT'a room is usually lighted'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'room'
                                ADJECTIVE_NT'lighted'
                            SENTENCE_NT'a room can be visited or unvisited'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a room'
                                PROPER_NOUN_NT'visited or unvisited'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'visited'
                                        PROPER_NOUN_NT'unvisited'
                            SENTENCE_NT'a room is usually unvisited'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'room'
                                ADJECTIVE_NT'unvisited'
                            SENTENCE_NT'a room has a text called description'
                                VERB_NT'has'
                                COMMON_NOUN_NT'room'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'text'
                                        PROPER_NOUN_NT'description'
                            SENTENCE_NT'a room has an object called map region'
                                VERB_NT'has'
                                COMMON_NOUN_NT'room'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'object'
                                        PROPER_NOUN_NT'map region'
                            SENTENCE_NT'the map region of a room is usually nothing'
                                VERB_NT'is usually'
                                X_OF_Y_NT'map region of a room'
                                    COMMON_NOUN_NT'room'
                                    PROPER_NOUN_NT'map region'
                                PROPER_NOUN_NT'nothing'
                            SENTENCE_NT'the verb to be adjacent to means the reversed adjacency rela'
                                VERB_NT'means'
                                PROPER_NOUN_NT'to be adjacent to'
                                PROPER_NOUN_NT'reversed adjacency relation'
                            RULE_NT'definition'
                            SENTENCE_NT'the verb to be regionally in means the reversed regional-con'
                                VERB_NT'means'
                                PROPER_NOUN_NT'to be regionally in'
                                PROPER_NOUN_NT'reversed regional-containment relation'
                            SENTENCE_NT'the specification of region is Represents a broader area tha'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of region'
                                    COMMON_NOUN_NT'region'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a broader area than a single
                                room, and allows rul'
                            SENTENCE_NT'a region can be privately-named or publicly-named'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a region'
                                PROPER_NOUN_NT'privately-named or publicly-named'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'privately-named'
                                        PROPER_NOUN_NT'publicly-named'
                            SENTENCE_NT'a region is usually publicly-named'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'region'
                                ADJECTIVE_NT'publicly-named'
                        HEADING_NT'section 3 - things' (level 5)
                            SENTENCE_NT'the specification of thing is Represents anything interactiv'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of thing'
                                    COMMON_NOUN_NT'thing'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents anything interactive in the model
                                world that is n'
                            SENTENCE_NT'a thing can be lit or unlit'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'lit or unlit'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'lit'
                                        PROPER_NOUN_NT'unlit'
                            SENTENCE_NT'a thing is usually unlit'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'thing'
                                ADJECTIVE_NT'unlit'
                            SENTENCE_NT'a thing can be edible or inedible'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'edible or inedible'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'edible'
                                        PROPER_NOUN_NT'inedible'
                            SENTENCE_NT'a thing is usually inedible'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'thing'
                                ADJECTIVE_NT'inedible'
                            SENTENCE_NT'a thing can be fixed in place or portable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'fixed in place or portable'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'fixed in place'
                                        PROPER_NOUN_NT'portable'
                            SENTENCE_NT'a thing is usually portable'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'thing'
                                ADJECTIVE_NT'portable'
                            SENTENCE_NT'a thing can be scenery'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'scenery'
                                    PROPER_NOUN_NT'scenery'
                            SENTENCE_NT'a thing can be wearable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'wearable'
                                    PROPER_NOUN_NT'wearable'
                            SENTENCE_NT'a thing can be pushable between rooms'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'pushable between rooms'
                                    PROPER_NOUN_NT'pushable between rooms'
                            SENTENCE_NT'a thing can be handled'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'handled'
                                    PROPER_NOUN_NT'handled'
                            SENTENCE_NT'a thing can be privately-named or publicly-named'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'privately-named or publicly-named'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'privately-named'
                                        PROPER_NOUN_NT'publicly-named'
                            SENTENCE_NT'a thing is usually publicly-named'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'thing'
                                ADJECTIVE_NT'publicly-named'
                            SENTENCE_NT'a thing can be undescribed or described'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'undescribed or described'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'undescribed'
                                        PROPER_NOUN_NT'described'
                            SENTENCE_NT'a thing is usually described'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'thing'
                                ADJECTIVE_NT'described'
                            SENTENCE_NT'a thing can be marked for listing or unmarked for listing'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'marked for listing or unmarked for listing'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'marked for listing'
                                        PROPER_NOUN_NT'unmarked for listing'
                            SENTENCE_NT'a thing is usually unmarked for listing'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'thing'
                                ADJECTIVE_NT'unmarked for listing'
                            SENTENCE_NT'a thing can be mentioned or unmentioned'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a thing'
                                PROPER_NOUN_NT'mentioned or unmentioned'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'mentioned'
                                        PROPER_NOUN_NT'unmentioned'
                            SENTENCE_NT'a thing is usually mentioned'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'thing'
                                ADJECTIVE_NT'mentioned'
                            SENTENCE_NT'a thing has a text called a description'
                                VERB_NT'has'
                                COMMON_NOUN_NT'thing'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'text'
                                        PROPER_NOUN_NT'description'
                            SENTENCE_NT'a thing has a text called an initial appearance'
                                VERB_NT'has'
                                COMMON_NOUN_NT'thing'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'text'
                                        PROPER_NOUN_NT'initial appearance'
                            SENTENCE_NT'scenery is usually fixed in place'
                                VERB_NT'is usually'
                                ADJECTIVE_NT'scenery'
                                ADJECTIVE_NT'fixed in place'
                        HEADING_NT'section 4 - directions' (level 5)
                            SENTENCE_NT'the specification of direction is Represents a direction of '
                                VERB_NT'is'
                                X_OF_Y_NT'specification of direction'
                                    COMMON_NOUN_NT'direction'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a direction of movement, such
                                as northeast or dow'
                            SENTENCE_NT'a direction can be privately-named or publicly-named'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a direction'
                                PROPER_NOUN_NT'privately-named or publicly-named'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'privately-named'
                                        PROPER_NOUN_NT'publicly-named'
                            SENTENCE_NT'a direction is usually publicly-named'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'direction'
                                ADJECTIVE_NT'publicly-named'
                            SENTENCE_NT'a direction can be marked for listing or unmarked for listin'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a direction'
                                PROPER_NOUN_NT'marked for listing or unmarked for listing'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'marked for listing'
                                        PROPER_NOUN_NT'unmarked for listing'
                            SENTENCE_NT'a direction is usually unmarked for listing'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'direction'
                                ADJECTIVE_NT'unmarked for listing'
                            SENTENCE_NT'a direction can be scenery'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a direction'
                                PROPER_NOUN_NT'scenery'
                                    PROPER_NOUN_NT'scenery'
                            SENTENCE_NT'a direction is always scenery'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'direction'
                                ADJECTIVE_NT'scenery'
                            SENTENCE_NT'a direction has a direction called an opposite'
                                VERB_NT'has'
                                COMMON_NOUN_NT'direction'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'direction'
                                        PROPER_NOUN_NT'opposite'
                            SENTENCE_NT'the north is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'north'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the northeast is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'northeast'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the northwest is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'northwest'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the south is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'south'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the southeast is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'southeast'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the southwest is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'southwest'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the east is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'east'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the west is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'west'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the up is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'up'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the down is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'down'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the inside is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'inside'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the outside is a direction'
                                VERB_NT'is'
                                PROPER_NOUN_NT'outside'
                                COMMON_NOUN_NT'direction'
                            SENTENCE_NT'the north has opposite south'
                                VERB_NT'has'
                                PROPER_NOUN_NT'north'
                                PROPERTY_LIST_NT'opposite south'
                            SENTENCE_NT'understand "n" as north'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"n"'
                                PROPER_NOUN_NT'north'
                            SENTENCE_NT'the northeast has opposite southwest'
                                VERB_NT'has'
                                PROPER_NOUN_NT'northeast'
                                PROPERTY_LIST_NT'opposite southwest'
                            SENTENCE_NT'understand "ne" as northeast'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"ne"'
                                PROPER_NOUN_NT'northeast'
                            SENTENCE_NT'the northwest has opposite southeast'
                                VERB_NT'has'
                                PROPER_NOUN_NT'northwest'
                                PROPERTY_LIST_NT'opposite southeast'
                            SENTENCE_NT'understand "nw" as northwest'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"nw"'
                                PROPER_NOUN_NT'northwest'
                            SENTENCE_NT'the south has opposite north'
                                VERB_NT'has'
                                PROPER_NOUN_NT'south'
                                PROPERTY_LIST_NT'opposite north'
                            SENTENCE_NT'understand "s" as south'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"s"'
                                PROPER_NOUN_NT'south'
                            SENTENCE_NT'the southeast has opposite northwest'
                                VERB_NT'has'
                                PROPER_NOUN_NT'southeast'
                                PROPERTY_LIST_NT'opposite northwest'
                            SENTENCE_NT'understand "se" as southeast'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"se"'
                                PROPER_NOUN_NT'southeast'
                            SENTENCE_NT'the southwest has opposite northeast'
                                VERB_NT'has'
                                PROPER_NOUN_NT'southwest'
                                PROPERTY_LIST_NT'opposite northeast'
                            SENTENCE_NT'understand "sw" as southwest'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"sw"'
                                PROPER_NOUN_NT'southwest'
                            SENTENCE_NT'the east has opposite west'
                                VERB_NT'has'
                                PROPER_NOUN_NT'east'
                                PROPERTY_LIST_NT'opposite west'
                            SENTENCE_NT'understand "e" as east'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"e"'
                                PROPER_NOUN_NT'east'
                            SENTENCE_NT'the west has opposite east'
                                VERB_NT'has'
                                PROPER_NOUN_NT'west'
                                PROPERTY_LIST_NT'opposite east'
                            SENTENCE_NT'understand "w" as west'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"w"'
                                PROPER_NOUN_NT'west'
                            SENTENCE_NT'up has opposite down'
                                VERB_NT'has'
                                PROPER_NOUN_NT'up'
                                PROPERTY_LIST_NT'opposite down'
                            SENTENCE_NT'understand "u" as up'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"u"'
                                PROPER_NOUN_NT'up'
                            SENTENCE_NT'down has opposite up'
                                VERB_NT'has'
                                PROPER_NOUN_NT'down'
                                PROPERTY_LIST_NT'opposite up'
                            SENTENCE_NT'understand "d" as down'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"d"'
                                PROPER_NOUN_NT'down'
                            SENTENCE_NT'inside has opposite outside'
                                VERB_NT'has'
                                PROPER_NOUN_NT'inside'
                                PROPERTY_LIST_NT'opposite outside'
                            SENTENCE_NT'understand "in" as inside'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"in"'
                                PROPER_NOUN_NT'inside'
                            SENTENCE_NT'outside has opposite inside'
                                VERB_NT'has'
                                PROPER_NOUN_NT'outside'
                                PROPERTY_LIST_NT'opposite inside'
                            SENTENCE_NT'understand "out" as outside'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"out"'
                                PROPER_NOUN_NT'outside'
                            SENTENCE_NT'the inside object translates into i6 as in_obj'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'inside object'
                                PROPER_NOUN_NT'in_obj'
                            SENTENCE_NT'the outside object translates into i6 as out_obj'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'outside object'
                                PROPER_NOUN_NT'out_obj'
                            SENTENCE_NT'the verb to be above means the reversed mapping up relation'
                                VERB_NT'means'
                                PROPER_NOUN_NT'to be above'
                                PROPER_NOUN_NT'reversed mapping up relation'
                            SENTENCE_NT'the verb to be mapped above means the reversed mapping up re'
                                VERB_NT'means'
                                PROPER_NOUN_NT'to be mapped above'
                                PROPER_NOUN_NT'reversed mapping up relation'
                            SENTENCE_NT'the verb to be below means the reversed mapping down relatio'
                                VERB_NT'means'
                                PROPER_NOUN_NT'to be below'
                                PROPER_NOUN_NT'reversed mapping down relation'
                            SENTENCE_NT'the verb to be mapped below means the reversed mapping down '
                                VERB_NT'means'
                                PROPER_NOUN_NT'to be mapped below'
                                PROPER_NOUN_NT'reversed mapping down relation'
                        HEADING_NT'section 5 - doors' (level 5)
                            SENTENCE_NT'the specification of door is Represents a conduit joining tw'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of door'
                                    COMMON_NOUN_NT'door'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a conduit joining two rooms, most
                                often a door or'
                            SENTENCE_NT'a door is always fixed in place'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'door'
                                ADJECTIVE_NT'fixed in place'
                            SENTENCE_NT'a door is never pushable between rooms'
                                VERB_NT'is never'
                                COMMON_NOUN_NT'door'
                                ADJECTIVE_NT'pushable between rooms'
                            SENTENCE_NT'a door has an object called other side'
                                VERB_NT'has'
                                COMMON_NOUN_NT'door'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'object'
                                        PROPER_NOUN_NT'other side'
                            SENTENCE_NT'the other side property translates into i6 as door_to'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'other side property'
                                PROPER_NOUN_NT'door_to'
                            SENTENCE_NT'leading-through relates one room ( called the other side ) t'
                                VERB_NT'relates'
                                PROPER_NOUN_NT'leading-through'
                                PROPER_NOUN_NT'one room ( called the other side )'
                                PROPER_NOUN_NT'various doors'
                            SENTENCE_NT'the verb to be through means the leading-through relation'
                                VERB_NT'means'
                                PROPER_NOUN_NT'to be through'
                                PROPER_NOUN_NT'leading-through relation'
                        HEADING_NT'section 6 - containers' (level 5)
                            SENTENCE_NT'the specification of container is Represents something into '
                                VERB_NT'is'
                                X_OF_Y_NT'specification of container'
                                    COMMON_NOUN_NT'container'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents something into which portable
                                things can be put, '
                            SENTENCE_NT'a container can be enterable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a container'
                                PROPER_NOUN_NT'enterable'
                                    PROPER_NOUN_NT'enterable'
                            SENTENCE_NT'a container can be transparent or opaque'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a container'
                                PROPER_NOUN_NT'transparent or opaque'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'transparent'
                                        PROPER_NOUN_NT'opaque'
                            SENTENCE_NT'a container is usually opaque'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'container'
                                ADJECTIVE_NT'opaque'
                            SENTENCE_NT'a container has a number called carrying capacity'
                                VERB_NT'has'
                                COMMON_NOUN_NT'container'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'number'
                                        PROPER_NOUN_NT'carrying capacity'
                            SENTENCE_NT'the carrying capacity of a container is usually 100'
                                VERB_NT'is usually'
                                X_OF_Y_NT'carrying capacity of a container'
                                    COMMON_NOUN_NT'container'
                                    PROPER_NOUN_NT'carrying capacity'
                                PROPER_NOUN_NT'100'
                        HEADING_NT'section 7 - supporters' (level 5)
                            SENTENCE_NT'the specification of supporter is Represents a surface on wh'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of supporter'
                                    COMMON_NOUN_NT'supporter'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a surface on which things can be
                                placed, such as '
                            SENTENCE_NT'a supporter can be enterable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a supporter'
                                PROPER_NOUN_NT'enterable'
                                    PROPER_NOUN_NT'enterable'
                            SENTENCE_NT'a supporter has a number called carrying capacity'
                                VERB_NT'has'
                                COMMON_NOUN_NT'supporter'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'number'
                                        PROPER_NOUN_NT'carrying capacity'
                            SENTENCE_NT'the carrying capacity of a supporter is usually 100'
                                VERB_NT'is usually'
                                X_OF_Y_NT'carrying capacity of a supporter'
                                    COMMON_NOUN_NT'supporter'
                                    PROPER_NOUN_NT'carrying capacity'
                                PROPER_NOUN_NT'100'
                            SENTENCE_NT'a supporter is usually fixed in place'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'supporter'
                                ADJECTIVE_NT'fixed in place'
                            SENTENCE_NT'a supporter can be transparent'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a supporter'
                                PROPER_NOUN_NT'transparent'
                                    PROPER_NOUN_NT'transparent'
                            SENTENCE_NT'a supporter is always transparent'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'supporter'
                                ADJECTIVE_NT'transparent'
                        HEADING_NT'section 8 - openability' (level 5)
                            SENTENCE_NT'a door can be open or closed'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a door'
                                PROPER_NOUN_NT'open or closed'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'open'
                                        PROPER_NOUN_NT'closed'
                            SENTENCE_NT'a door is usually closed'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'door'
                                ADJECTIVE_NT'closed'
                            SENTENCE_NT'a door can be openable or unopenable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a door'
                                PROPER_NOUN_NT'openable or unopenable'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'openable'
                                        PROPER_NOUN_NT'unopenable'
                            SENTENCE_NT'a door is usually openable'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'door'
                                ADJECTIVE_NT'openable'
                            SENTENCE_NT'a container can be open or closed'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a container'
                                PROPER_NOUN_NT'open or closed'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'open'
                                        PROPER_NOUN_NT'closed'
                            SENTENCE_NT'a container is usually open'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'container'
                                ADJECTIVE_NT'open'
                            SENTENCE_NT'a container can be openable or unopenable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a container'
                                PROPER_NOUN_NT'openable or unopenable'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'openable'
                                        PROPER_NOUN_NT'unopenable'
                            SENTENCE_NT'a container is usually unopenable'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'container'
                                ADJECTIVE_NT'unopenable'
                        HEADING_NT'section 9 - lockability' (level 5)
                            SENTENCE_NT'a door can be lockable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a door'
                                PROPER_NOUN_NT'lockable'
                                    PROPER_NOUN_NT'lockable'
                            SENTENCE_NT'a door is usually not lockable'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'door'
                                ADJECTIVE_NT'not lockable'
                            SENTENCE_NT'a door can be locked or unlocked'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a door'
                                PROPER_NOUN_NT'locked or unlocked'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'locked'
                                        PROPER_NOUN_NT'unlocked'
                            SENTENCE_NT'a door is usually unlocked'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'door'
                                ADJECTIVE_NT'unlocked'
                            SENTENCE_NT'a door has an object called a matching key'
                                VERB_NT'has'
                                COMMON_NOUN_NT'door'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'object'
                                        PROPER_NOUN_NT'matching key'
                            SENTENCE_NT'a locked door is usually lockable'
                                VERB_NT'is usually'
                                WITH_NT'locked door'
                                    COMMON_NOUN_NT'locked door'
                                    ADJECTIVE_NT
                                ADJECTIVE_NT'lockable'
                            SENTENCE_NT'a locked door is usually closed'
                                VERB_NT'is usually'
                                WITH_NT'locked door'
                                    COMMON_NOUN_NT'locked door'
                                    ADJECTIVE_NT
                                ADJECTIVE_NT'closed'
                            SENTENCE_NT'a lockable door is usually openable'
                                VERB_NT'is usually'
                                WITH_NT'lockable door'
                                    COMMON_NOUN_NT'lockable door'
                                    ADJECTIVE_NT
                                ADJECTIVE_NT'openable'
                            SENTENCE_NT'a container can be lockable'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a container'
                                PROPER_NOUN_NT'lockable'
                                    PROPER_NOUN_NT'lockable'
                            SENTENCE_NT'a container is usually not lockable'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'container'
                                ADJECTIVE_NT'not lockable'
                            SENTENCE_NT'a container can be locked or unlocked'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a container'
                                PROPER_NOUN_NT'locked or unlocked'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'locked'
                                        PROPER_NOUN_NT'unlocked'
                            SENTENCE_NT'a container is usually unlocked'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'container'
                                ADJECTIVE_NT'unlocked'
                            SENTENCE_NT'a container has an object called a matching key'
                                VERB_NT'has'
                                COMMON_NOUN_NT'container'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'object'
                                        PROPER_NOUN_NT'matching key'
                            SENTENCE_NT'a locked container is usually lockable'
                                VERB_NT'is usually'
                                WITH_NT'locked container'
                                    COMMON_NOUN_NT'locked container'
                                    ADJECTIVE_NT
                                ADJECTIVE_NT'lockable'
                            SENTENCE_NT'a locked container is usually closed'
                                VERB_NT'is usually'
                                WITH_NT'locked container'
                                    COMMON_NOUN_NT'locked container'
                                    ADJECTIVE_NT
                                ADJECTIVE_NT'closed'
                            SENTENCE_NT'a lockable container is usually openable'
                                VERB_NT'is usually'
                                WITH_NT'lockable container'
                                    COMMON_NOUN_NT'lockable container'
                                    ADJECTIVE_NT
                                ADJECTIVE_NT'openable'
                            SENTENCE_NT'lock-fitting relates one thing ( called the matching key ) t'
                                VERB_NT'relates'
                                PROPER_NOUN_NT'lock-fitting'
                                PROPER_NOUN_NT'one thing ( called the matching key )'
                                PROPER_NOUN_NT'various things'
                            SENTENCE_NT'the verb to unlock means the lock-fitting relation'
                                VERB_NT'means'
                                PROPER_NOUN_NT'to unlock'
                                PROPER_NOUN_NT'lock-fitting relation'
                        HEADING_NT'section 10 - backdrops' (level 5)
                            SENTENCE_NT'the specification of backdrop is Represents an aspect of the'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of backdrop'
                                    COMMON_NOUN_NT'backdrop'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents an aspect of the landscape
                                or architecture which '
                            SENTENCE_NT'a backdrop is usually scenery'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'backdrop'
                                ADJECTIVE_NT'scenery'
                            SENTENCE_NT'a backdrop is always fixed in place'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'backdrop'
                                ADJECTIVE_NT'fixed in place'
                            SENTENCE_NT'a backdrop is never pushable between rooms'
                                VERB_NT'is never'
                                COMMON_NOUN_NT'backdrop'
                                ADJECTIVE_NT'pushable between rooms'
                        HEADING_NT'section 11 - people' (level 5)
                            SENTENCE_NT'the specification of person is Despite the name, not necessa'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of person'
                                    COMMON_NOUN_NT'person'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Despite the name, not necessarily a human
                                being, but anythin'
                            SENTENCE_NT'a person can be female or male'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a person'
                                PROPER_NOUN_NT'female or male'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'female'
                                        PROPER_NOUN_NT'male'
                            SENTENCE_NT'a person is usually male'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'person'
                                ADJECTIVE_NT'male'
                            SENTENCE_NT'a person can be neuter'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a person'
                                PROPER_NOUN_NT'neuter'
                                    PROPER_NOUN_NT'neuter'
                            SENTENCE_NT'a person is usually not neuter'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'person'
                                ADJECTIVE_NT'not neuter'
                            SENTENCE_NT'a person has a number called carrying capacity'
                                VERB_NT'has'
                                COMMON_NOUN_NT'person'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'number'
                                        PROPER_NOUN_NT'carrying capacity'
                            SENTENCE_NT'the carrying capacity of a person is usually 100'
                                VERB_NT'is usually'
                                X_OF_Y_NT'carrying capacity of a person'
                                    COMMON_NOUN_NT'person'
                                    PROPER_NOUN_NT'carrying capacity'
                                PROPER_NOUN_NT'100'
                            SENTENCE_NT'a person can be transparent'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a person'
                                PROPER_NOUN_NT'transparent'
                                    PROPER_NOUN_NT'transparent'
                            SENTENCE_NT'a person is always transparent'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'person'
                                ADJECTIVE_NT'transparent'
                            SENTENCE_NT'the yourself is an undescribed person'
                                VERB_NT'is'
                                PROPER_NOUN_NT'yourself'
                                WITH_NT'undescribed person'
                                    COMMON_NOUN_NT'undescribed person'
                                    ADJECTIVE_NT
                            SENTENCE_NT'the yourself is proper-named'
                                VERB_NT'is'
                                PROPER_NOUN_NT'yourself'
                                ADJECTIVE_NT'proper-named'
                            SENTENCE_NT'the yourself is privately-named'
                                VERB_NT'is'
                                PROPER_NOUN_NT'yourself'
                                ADJECTIVE_NT'privately-named'
                            SENTENCE_NT'understand "your former self" or "my former self" or "former'
                                VERB_NT'understand'
                                PROPER_NOUN_NT'"your former self" or "my former self" or "former self" or "'
                                PROPER_NOUN_NT'yourself when the player is not yourself'
                            SENTENCE_NT'the description of yourself is usually "As good-looking as e'
                                VERB_NT'is usually'
                                X_OF_Y_NT'description of yourself'
                                    PROPER_NOUN_NT'yourself'
                                    PROPER_NOUN_NT'description'
                                PROPER_NOUN_NT'"As good-looking as ever."'
                            SENTENCE_NT'the yourself object translates into i6 as selfobj'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'yourself object'
                                PROPER_NOUN_NT'selfobj'
                        HEADING_NT'section 12 - animals , men and women' (level 5)
                            SENTENCE_NT'the plural of man is men'
                                VERB_NT'is'
                                PROPER_NOUN_NT'man'
                                PROPER_NOUN_NT'men'
                            SENTENCE_NT'the plural of woman is women'
                                VERB_NT'is'
                                PROPER_NOUN_NT'woman'
                                PROPER_NOUN_NT'women'
                            SENTENCE_NT'a man is a kind of person'
                                VERB_NT'is'
                                COMMON_NOUN_NT'man'
                                KIND_NT'kind of person'
                                    COMMON_NOUN_NT'person'
                            SENTENCE_NT'the specification of man is Represents a man or boy.'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of man'
                                    COMMON_NOUN_NT'man'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a man or boy.'
                            SENTENCE_NT'a man is always male'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'man'
                                ADJECTIVE_NT'male'
                            SENTENCE_NT'a man is never neuter'
                                VERB_NT'is never'
                                COMMON_NOUN_NT'man'
                                ADJECTIVE_NT'neuter'
                            SENTENCE_NT'a woman is a kind of person'
                                VERB_NT'is'
                                COMMON_NOUN_NT'woman'
                                KIND_NT'kind of person'
                                    COMMON_NOUN_NT'person'
                            SENTENCE_NT'the specification of woman is Represents a woman or girl.'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of woman'
                                    COMMON_NOUN_NT'woman'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a woman or girl.'
                            SENTENCE_NT'a woman is always female'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'woman'
                                ADJECTIVE_NT'female'
                            SENTENCE_NT'a woman is never neuter'
                                VERB_NT'is never'
                                COMMON_NOUN_NT'woman'
                                ADJECTIVE_NT'neuter'
                            SENTENCE_NT'an animal is a kind of person'
                                VERB_NT'is'
                                COMMON_NOUN_NT'animal'
                                KIND_NT'kind of person'
                                    COMMON_NOUN_NT'person'
                            SENTENCE_NT'the specification of animal is Represents an animal, or at a'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of animal'
                                    COMMON_NOUN_NT'animal'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents an animal, or at any rate a
                                non-human living crea'
                        HEADING_NT'section 13 - devices' (level 5)
                            SENTENCE_NT'a device is a kind of thing'
                                VERB_NT'is'
                                COMMON_NOUN_NT'device'
                                KIND_NT'kind of thing'
                                    COMMON_NOUN_NT'thing'
                            SENTENCE_NT'a device can be switched on or switched off'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a device'
                                PROPER_NOUN_NT'switched on or switched off'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'switched on'
                                        PROPER_NOUN_NT'switched off'
                            SENTENCE_NT'a device is usually switched off'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'device'
                                ADJECTIVE_NT'switched off'
                            SENTENCE_NT'the specification of device is Represents a machine or contr'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of device'
                                    COMMON_NOUN_NT'device'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a machine or contrivance of some
                                kind which can b'
                        HEADING_NT'section 14 - vehicles' (level 5)
                            SENTENCE_NT'a vehicle is a kind of container'
                                VERB_NT'is'
                                COMMON_NOUN_NT'vehicle'
                                KIND_NT'kind of container'
                                    COMMON_NOUN_NT'container'
                            SENTENCE_NT'the specification of vehicle is Represents a container large'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of vehicle'
                                    COMMON_NOUN_NT'vehicle'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a container large enough for
                                a person to enter, a'
                            SENTENCE_NT'a vehicle is always enterable'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'vehicle'
                                ADJECTIVE_NT'enterable'
                            SENTENCE_NT'a vehicle is usually not portable'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'vehicle'
                                ADJECTIVE_NT'not portable'
                        HEADING_NT'section 15 - player's holdall' (level 5)
                            SENTENCE_NT'a player's holdall is a kind of container'
                                VERB_NT'is'
                                COMMON_NOUN_NT'player's holdall'
                                KIND_NT'kind of container'
                                    COMMON_NOUN_NT'container'
                            SENTENCE_NT'the specification of player's holdall is Represents a contai'
                                VERB_NT'is'
                                X_OF_Y_NT'specification of player's holdall'
                                    COMMON_NOUN_NT'player's holdall'
                                    PROPER_NOUN_NT'specification'
                                PROPER_NOUN_NT'Represents a container which the
                                player can carry around as '
                            SENTENCE_NT'a player's holdall is always portable'
                                VERB_NT'is always'
                                COMMON_NOUN_NT'player's holdall'
                                ADJECTIVE_NT'portable'
                            SENTENCE_NT'a player's holdall is usually openable'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'player's holdall'
                                ADJECTIVE_NT'openable'
                        HEADING_NT'section 16 - inform 6 equivalents' (level 5)
                            SENTENCE_NT'the wearable property translates into i6 as clothing'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'wearable property'
                                PROPER_NOUN_NT'clothing'
                            SENTENCE_NT'the undescribed property translates into i6 as concealed'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'undescribed property'
                                PROPER_NOUN_NT'concealed'
                            SENTENCE_NT'the edible property translates into i6 as edible'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'edible property'
                                PROPER_NOUN_NT'edible'
                            SENTENCE_NT'the enterable property translates into i6 as enterable'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'enterable property'
                                PROPER_NOUN_NT'enterable'
                            SENTENCE_NT'the female property translates into i6 as female'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'female property'
                                PROPER_NOUN_NT'female'
                            SENTENCE_NT'the mentioned property translates into i6 as mentioned'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'mentioned property'
                                PROPER_NOUN_NT'mentioned'
                            SENTENCE_NT'the lit property translates into i6 as light'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'lit property'
                                PROPER_NOUN_NT'light'
                            SENTENCE_NT'the lighted property translates into i6 as light'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'lighted property'
                                PROPER_NOUN_NT'light'
                            SENTENCE_NT'the lockable property translates into i6 as lockable'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'lockable property'
                                PROPER_NOUN_NT'lockable'
                            SENTENCE_NT'the locked property translates into i6 as locked'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'locked property'
                                PROPER_NOUN_NT'locked'
                            SENTENCE_NT'the handled property translates into i6 as moved'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'handled property'
                                PROPER_NOUN_NT'moved'
                            SENTENCE_NT'the neuter property translates into i6 as neuter'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'neuter property'
                                PROPER_NOUN_NT'neuter'
                            SENTENCE_NT'the switched on property translates into i6 as on'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'switched on property'
                                PROPER_NOUN_NT'on'
                            SENTENCE_NT'the open property translates into i6 as open'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'open property'
                                PROPER_NOUN_NT'open'
                            SENTENCE_NT'the openable property translates into i6 as openable'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'openable property'
                                PROPER_NOUN_NT'openable'
                            SENTENCE_NT'the privately-named property translates into i6 as privately'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'privately-named property'
                                PROPER_NOUN_NT'privately_named'
                            SENTENCE_NT'the pushable between rooms property translates into i6 as pu'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'pushable between rooms property'
                                PROPER_NOUN_NT'pushable'
                            SENTENCE_NT'the scenery property translates into i6 as scenery'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'scenery property'
                                PROPER_NOUN_NT'scenery'
                            SENTENCE_NT'the fixed in place property translates into i6 as static'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'fixed in place property'
                                PROPER_NOUN_NT'static'
                            SENTENCE_NT'the transparent property translates into i6 as transparent'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'transparent property'
                                PROPER_NOUN_NT'transparent'
                            SENTENCE_NT'the visited property translates into i6 as visited'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'visited property'
                                PROPER_NOUN_NT'visited'
                            SENTENCE_NT'the marked for listing property translates into i6 as workfl'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'marked for listing property'
                                PROPER_NOUN_NT'workflag'
                            SENTENCE_NT'the list grouping key property translates into i6 as list_to'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'list grouping key property'
                                PROPER_NOUN_NT'list_together'
                            SENTENCE_NT'the carrying capacity property translates into i6 as capacit'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'carrying capacity property'
                                PROPER_NOUN_NT'capacity'
                            SENTENCE_NT'the description property translates into i6 as description'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'description property'
                                PROPER_NOUN_NT'description'
                            SENTENCE_NT'the initial appearance property translates into i6 as initia'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'initial appearance property'
                                PROPER_NOUN_NT'initial'
                            SENTENCE_NT'the map region property translates into i6 as map_region'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'map region property'
                                PROPER_NOUN_NT'map_region'
                            SENTENCE_NT'the matching key property translates into i6 as with_key'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'matching key property'
                                PROPER_NOUN_NT'with_key'
                HEADING_NT'part three - variables and rulebooks' (level 3)
                    HEADING_NT'chapter 1 - variables' (level 4)
                        HEADING_NT'section 1 - situation' (level 5)
                            SENTENCE_NT'the player is a person that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'player'
                                COMMON_NOUN_NT'person that varies'
                            SENTENCE_NT'the player variable translates into i6 as player'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'player variable'
                                PROPER_NOUN_NT'player'
                            SENTENCE_NT'the location -- documented at var_location -- is an object t'
                                VERB_NT'is'
                                PROPER_NOUN_NT'location'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the score -- documented at var_score -- is a number that var'
                                VERB_NT'is'
                                PROPER_NOUN_NT'score'
                                COMMON_NOUN_NT'number that varies'
                            SENTENCE_NT'the last notified score is a number that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'last notified score'
                                COMMON_NOUN_NT'number that varies'
                            SENTENCE_NT'the maximum score is a number that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'maximum score'
                                COMMON_NOUN_NT'number that varies'
                            SENTENCE_NT'the turn count is a number that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'turn count'
                                COMMON_NOUN_NT'number that varies'
                            SENTENCE_NT'the time of day -- documented at var_time -- is a time that '
                                VERB_NT'is'
                                PROPER_NOUN_NT'time of day'
                                COMMON_NOUN_NT'time that varies'
                            SENTENCE_NT'the darkness witnessed is a truth state that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'darkness witnessed'
                                COMMON_NOUN_NT'truth state that varies'
                            SENTENCE_NT'the location variable translates into i6 as real_location'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'location variable'
                                PROPER_NOUN_NT'real_location'
                            SENTENCE_NT'the score variable translates into i6 as score'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'score variable'
                                PROPER_NOUN_NT'score'
                            SENTENCE_NT'the last notified score variable translates into i6 as last_'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'last notified score variable'
                                PROPER_NOUN_NT'last_score'
                            SENTENCE_NT'the maximum score variable translates into i6 as MAX_SCORE'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'maximum score variable'
                                PROPER_NOUN_NT'MAX_SCORE'
                            SENTENCE_NT'the turn count variable translates into i6 as turns'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'turn count variable'
                                PROPER_NOUN_NT'turns'
                            SENTENCE_NT'the time of day variable translates into i6 as the_time'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'time of day variable'
                                PROPER_NOUN_NT'the_time'
                        HEADING_NT'section 2 - current action' (level 5)
                            SENTENCE_NT'the noun -- documented at var_noun -- is an object that vari'
                                VERB_NT'is'
                                PROPER_NOUN_NT'noun'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the second noun is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'second noun'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the person asked -- documented at var_person_asked -- is an '
                                VERB_NT'is'
                                PROPER_NOUN_NT'person asked'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the reason the action failed -- documented at var_reason -- '
                                VERB_NT'is'
                                PROPER_NOUN_NT'reason the action failed'
                                COMMON_NOUN_NT'action name based rule producing nothing that varies'
                            SENTENCE_NT'the item described is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'item described'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the noun variable translates into i6 as noun'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'noun variable'
                                PROPER_NOUN_NT'noun'
                            SENTENCE_NT'the second noun variable translates into i6 as second'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'second noun variable'
                                PROPER_NOUN_NT'second'
                            SENTENCE_NT'the person asked variable translates into i6 as actor'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'person asked variable'
                                PROPER_NOUN_NT'actor'
                            SENTENCE_NT'the reason the action failed variable translates into i6 as '
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'reason the action failed variable'
                                PROPER_NOUN_NT'reason_the_action_failed'
                            SENTENCE_NT'the item described variable translates into i6 as self'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'item described variable'
                                PROPER_NOUN_NT'self'
                        HEADING_NT'section 3 - used when ruling on accessibility' (level 5)
                            SENTENCE_NT'the person reaching -- documented at var_person_reaching -- '
                                VERB_NT'is'
                                PROPER_NOUN_NT'person reaching'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the container in question is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'container in question'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the supporter in question is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'supporter in question'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the particular possession -- documented at var_particular --'
                                VERB_NT'is'
                                PROPER_NOUN_NT'particular possession'
                                COMMON_NOUN_NT'thing that varies'
                            SENTENCE_NT'the person reaching variable translates into i6 as actor'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'person reaching variable'
                                PROPER_NOUN_NT'actor'
                            SENTENCE_NT'the container in question variable translates into i6 as par'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'container in question variable'
                                PROPER_NOUN_NT'parameter_object'
                            SENTENCE_NT'the supporter in question variable translates into i6 as par'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'supporter in question variable'
                                PROPER_NOUN_NT'parameter_object'
                            SENTENCE_NT'the particular possession variable translates into i6 as par'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'particular possession variable'
                                PROPER_NOUN_NT'particular_possession'
                        HEADING_NT'section 4 - used when understanding typed commands' (level 5)
                            SENTENCE_NT'the player's command -- documented at var_command -- is a sn'
                                VERB_NT'is'
                                PROPER_NOUN_NT'player's command'
                                COMMON_NOUN_NT'snippet that varies'
                            SENTENCE_NT'the matched text is a snippet that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'matched text'
                                COMMON_NOUN_NT'snippet that varies'
                            SENTENCE_NT'the number understood -- documented at var_understood -- is '
                                VERB_NT'is'
                                PROPER_NOUN_NT'number understood'
                                COMMON_NOUN_NT'number that varies'
                            SENTENCE_NT'the real number understood -- documented at var_understood -'
                                VERB_NT'is'
                                PROPER_NOUN_NT'real number understood'
                                COMMON_NOUN_NT'real number that varies'
                            SENTENCE_NT'the time understood is a time that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'time understood'
                                COMMON_NOUN_NT'time that varies'
                            SENTENCE_NT'the topic understood is a snippet that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'topic understood'
                                COMMON_NOUN_NT'snippet that varies'
                            SENTENCE_NT'the truth state understood is a truth state that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'truth state understood'
                                COMMON_NOUN_NT'truth state that varies'
                            SENTENCE_NT'the current item from the multiple object list is an object '
                                VERB_NT'is'
                                PROPER_NOUN_NT'current item from the multiple object list'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the player's command variable translates into i6 as players_'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'player's command variable'
                                PROPER_NOUN_NT'players_command'
                            SENTENCE_NT'the matched text variable translates into i6 as matched_text'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'matched text variable'
                                PROPER_NOUN_NT'matched_text'
                            SENTENCE_NT'the topic understood variable translates into i6 as parsed_n'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'topic understood variable'
                                PROPER_NOUN_NT'parsed_number'
                            SENTENCE_NT'the current item from the multiple object list variable tran'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'current item from the multiple object list variable'
                                PROPER_NOUN_NT'multiple_object_item'
                        HEADING_NT'section 5 - presentation on screen' (level 5)
                            SENTENCE_NT'the command prompt -- documented at var_prompt -- is a text '
                                VERB_NT'is'
                                PROPER_NOUN_NT'command prompt'
                                COMMON_NOUN_NT'text that varies'
                            SENTENCE_NT'the command prompt is ">"'
                                VERB_NT'is'
                                PROPER_NOUN_NT'command prompt'
                                PROPER_NOUN_NT'">"'
                            SENTENCE_NT'the left hand status line -- documented at var_sl -- is a te'
                                VERB_NT'is'
                                PROPER_NOUN_NT'left hand status line'
                                COMMON_NOUN_NT'text that varies'
                            SENTENCE_NT'the right hand status line is a text that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'right hand status line'
                                COMMON_NOUN_NT'text that varies'
                            SENTENCE_NT'the left hand status line variable translates into i6 as lef'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'left hand status line variable'
                                PROPER_NOUN_NT'left_hand_status_line'
                            SENTENCE_NT'the right hand status line variable translates into i6 as ri'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'right hand status line variable'
                                PROPER_NOUN_NT'right_hand_status_line'
                            SENTENCE_NT'the listing group size is a number that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'listing group size'
                                COMMON_NOUN_NT'number that varies'
                            SENTENCE_NT'the listing group size variable translates into i6 as listin'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'listing group size variable'
                                PROPER_NOUN_NT'listing_size'
                        HEADING_NT'section 6 - language generation' (level 5)
                            SENTENCE_NT'the prior named object is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'prior named object'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the prior named object variable translates into i6 as prior_'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'prior named object variable'
                                PROPER_NOUN_NT'prior_named_noun'
                            SENTENCE_NT'an object has a text called list grouping key'
                                VERB_NT'has'
                                COMMON_NOUN_NT'object'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'text'
                                        PROPER_NOUN_NT'list grouping key'
                        HEADING_NT'section 7 - unindexed standard rules variables - unindexed' (level 5)
                            SENTENCE_NT'the story title , the story author , the story headline , th'
                                VERB_NT'are'
                                AND_NT','
                                    PROPER_NOUN_NT'story title'
                                    AND_NT','
                                        PROPER_NOUN_NT'story author'
                                        AND_NT','
                                            PROPER_NOUN_NT'story headline'
                                            AND_NT'and'
                                                PROPER_NOUN_NT'story genre'
                                                PROPER_NOUN_NT'story description'
                                COMMON_NOUN_NT'text variables'
                            SENTENCE_NT'the release number and the story creation year are number va'
                                VERB_NT'are'
                                AND_NT'and'
                                    PROPER_NOUN_NT'release number'
                                    PROPER_NOUN_NT'story creation year'
                                COMMON_NOUN_NT'number variables'
                            SENTENCE_NT'the release number is usually 1'
                                VERB_NT'is usually'
                                PROPER_NOUN_NT'release number'
                                PROPER_NOUN_NT'1'
                            SENTENCE_NT'the story headline is usually "An Interactive Fiction"'
                                VERB_NT'is usually'
                                PROPER_NOUN_NT'story headline'
                                PROPER_NOUN_NT'"An Interactive Fiction"'
                            SENTENCE_NT'the story genre is usually "Fiction"'
                                VERB_NT'is usually'
                                PROPER_NOUN_NT'story genre'
                                PROPER_NOUN_NT'"Fiction"'
                            SENTENCE_NT'the story title variable translates into i6 as Story'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'story title variable'
                                PROPER_NOUN_NT'Story'
                        HEADING_NT'section sr2/6b - unindexed standard rules variables - uninde' (level 5)
                            SENTENCE_NT'figure of cover is the file of cover art ( The cover art. )'
                                VERB_NT'is'
                                PROPER_NOUN_NT'figure of cover'
                                PROPER_NOUN_NT'of cover art ( The cover art. )'
                        HEADING_NT'section 8 - unindexed standard rules variables - unindexed' (level 5)
                            SENTENCE_NT'the i6-nothing-constant is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'i6-nothing-constant'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the i6-nothing-constant variable translates into i6 as nothi'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'i6-nothing-constant variable'
                                PROPER_NOUN_NT'nothing'
                            SENTENCE_NT'the i6-varying-global is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'i6-varying-global'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the i6-varying-global variable translates into i6 as nothing'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'i6-varying-global variable'
                                PROPER_NOUN_NT'nothing'
                            SENTENCE_NT'the item-pushed-between-rooms is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'item-pushed-between-rooms'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the item-pushed-between-rooms variable translates into i6 as'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'item-pushed-between-rooms variable'
                                PROPER_NOUN_NT'move_pushing'
                            SENTENCE_NT'the actor-location is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'actor-location'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the actor-location variable translates into i6 as actor_loca'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'actor-location variable'
                                PROPER_NOUN_NT'actor_location'
                            SENTENCE_NT'the scene being changed is a scene that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'scene being changed'
                                COMMON_NOUN_NT'scene that varies'
                            SENTENCE_NT'the scene being changed variable translates into i6 as param'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'scene being changed variable'
                                PROPER_NOUN_NT'parameter_value'
                    HEADING_NT'chapter 2 - rulebooks' (level 4)
                        HEADING_NT'section 1 - the standard rulebooks' (level 5)
                            SENTENCE_NT'turn sequence rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'turn sequence rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'scene changing rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'scene changing rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'when play begins is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'when play begins'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'when play ends is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'when play ends'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'when scene begins is a scene based rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'when scene begins'
                                COMMON_NOUN_NT'scene based rulebook'
                            SENTENCE_NT'when scene ends is a scene based rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'when scene ends'
                                COMMON_NOUN_NT'scene based rulebook'
                            SENTENCE_NT'every turn rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'every turn rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'action-processing rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'action-processing rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'the action-processing rulebook has a person called the actor'
                                VERB_NT'has'
                                PROPER_NOUN_NT'action-processing rulebook'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'person'
                                        PROPER_NOUN_NT'actor'
                            SENTENCE_NT'setting action variables is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'setting action variables'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'the specific action-processing rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'specific action-processing rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'the specific action-processing rulebook has a truth state ca'
                                VERB_NT'has'
                                PROPER_NOUN_NT'specific action-processing rulebook'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'truth state'
                                        PROPER_NOUN_NT'action in world'
                            SENTENCE_NT'the specific action-processing rulebook has a truth state ca'
                                VERB_NT'has'
                                PROPER_NOUN_NT'specific action-processing rulebook'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'truth state'
                                        PROPER_NOUN_NT'action keeping silent'
                            SENTENCE_NT'the specific action-processing rulebook has a rulebook calle'
                                VERB_NT'has'
                                PROPER_NOUN_NT'specific action-processing rulebook'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'rulebook'
                                        PROPER_NOUN_NT'specific check rulebook'
                            SENTENCE_NT'the specific action-processing rulebook has a rulebook calle'
                                VERB_NT'has'
                                PROPER_NOUN_NT'specific action-processing rulebook'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'rulebook'
                                        PROPER_NOUN_NT'specific carry out rulebook'
                            SENTENCE_NT'the specific action-processing rulebook has a rulebook calle'
                                VERB_NT'has'
                                PROPER_NOUN_NT'specific action-processing rulebook'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'rulebook'
                                        PROPER_NOUN_NT'specific report rulebook'
                            SENTENCE_NT'the specific action-processing rulebook has a truth state ca'
                                VERB_NT'has'
                                PROPER_NOUN_NT'specific action-processing rulebook'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'truth state'
                                        PROPER_NOUN_NT'within the player's sight'
                            SENTENCE_NT'the player's action awareness rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'player's action awareness rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'accessibility rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'accessibility rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'reaching inside rules is an object-based rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'reaching inside rules'
                                COMMON_NOUN_NT'object-based rulebook'
                            SENTENCE_NT'reaching inside rules have outcomes allow access ( success )'
                                VERB_NT'have'
                                PROPER_NOUN_NT'reaching inside rules'
                                PROPERTY_LIST_NT'and'
                                    PROPER_NOUN_NT'outcomes allow access ( success )'
                                    PROPER_NOUN_NT'deny access ( failure )'
                            SENTENCE_NT'reaching outside rules is an object-based rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'reaching outside rules'
                                COMMON_NOUN_NT'object-based rulebook'
                            SENTENCE_NT'reaching outside rules have outcomes allow access ( success '
                                VERB_NT'have'
                                PROPER_NOUN_NT'reaching outside rules'
                                PROPERTY_LIST_NT'and'
                                    PROPER_NOUN_NT'outcomes allow access ( success )'
                                    PROPER_NOUN_NT'deny access ( failure )'
                            SENTENCE_NT'visibility rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'visibility rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'visibility rules have outcomes there is sufficient light ( f'
                                VERB_NT'have'
                                PROPER_NOUN_NT'visibility rules'
                                PROPERTY_LIST_NT'and'
                                    PROPER_NOUN_NT'outcomes there is sufficient light ( failure )'
                                    PROPER_NOUN_NT'there is insufficient light ( success )'
                            SENTENCE_NT'persuasion rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'persuasion rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'persuasion rules have outcomes persuasion succeeds ( success'
                                VERB_NT'have'
                                PROPER_NOUN_NT'persuasion rules'
                                PROPERTY_LIST_NT'and'
                                    PROPER_NOUN_NT'outcomes persuasion succeeds ( success )'
                                    PROPER_NOUN_NT'persuasion fails ( failure )'
                            SENTENCE_NT'unsuccessful attempt by is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'unsuccessful attempt by'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'before rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'before rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'instead rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'instead rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'check rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'check rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'carry out rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'carry out rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'after rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'after rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'report rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'report rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'the does the player mean rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'does the player mean rules'
                                COMMON_NOUN_NT'rulebook'
                            SENTENCE_NT'the does the player mean rules have outcomes it is very like'
                                VERB_NT'have'
                                PROPER_NOUN_NT'does the player mean rules'
                                PROPERTY_LIST_NT','
                                    PROPER_NOUN_NT'outcomes it is very likely'
                                    AND_NT','
                                        PROPER_NOUN_NT'it is likely'
                                        AND_NT','
                                            PROPER_NOUN_NT'it is possible'
                                            AND_NT'and'
                                                PROPER_NOUN_NT'it is unlikely'
                                                PROPER_NOUN_NT'it is very unlikely'
                            SENTENCE_NT'the multiple action processing rules is a rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'multiple action processing rules'
                                COMMON_NOUN_NT'rulebook'
                        HEADING_NT'section 2 - the standard rules' (level 5)
                            SENTENCE_NT'the little-used do nothing rule translates into i6 as LITTLE'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'little-used do nothing rule'
                                PROPER_NOUN_NT'LITTLE_USED_DO_NOTHING_R'
                            SENTENCE_NT'the start in the correct scenes rule is listed first in the '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the start in the correct scenes rule'
                                PROPER_NOUN_NT'first in the startup rulebook'
                            SENTENCE_NT'the position player in model world rule is listed first in t'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the position player in model world rule'
                                PROPER_NOUN_NT'first in the startup rulebook'
                            RULE_NT'this is the declare everything initially unmentioned rule'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'repeat with item running through things'
                                            INVOCATION_NT'repeat with item running through things'
                                                NEW_LOCAL_CONTEXT_NT'item'
                                                    UNKNOWN_NT'item'
                                                RVALUE_CONTEXT_NT'things'
                                                    CONSTANT_NT'things'-description of things
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'now the item is not mentioned'
                                                CONDITION_CONTEXT_NT'the item is not mentioned'
                            SENTENCE_NT'the declare everything initially unmentioned rule is listed '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the declare everything initially unmentioned rule'
                                PROPER_NOUN_NT'first in the startup rulebook'
                            SENTENCE_NT'the update chronological records rule is listed first in the'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the update chronological records rule'
                                PROPER_NOUN_NT'first in the startup rulebook'
                            SENTENCE_NT'the seed random number generator rule is listed first in the'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the seed random number generator rule'
                                PROPER_NOUN_NT'first in the startup rulebook'
                            SENTENCE_NT'the virtual machine startup rule is listed first in the star'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the virtual machine startup rule'
                                PROPER_NOUN_NT'first in the startup rulebook'
                            SENTENCE_NT'the initialise memory rule is listed first in the startup ru'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the initialise memory rule'
                                PROPER_NOUN_NT'first in the startup rulebook'
                            SENTENCE_NT'the virtual machine startup rule translates into i6 as VIRTU'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'virtual machine startup rule'
                                PROPER_NOUN_NT'VIRTUAL_MACHINE_STARTUP_R'
                            SENTENCE_NT'the initialise memory rule translates into i6 as INITIALISE_'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'initialise memory rule'
                                PROPER_NOUN_NT'INITIALISE_MEMORY_R'
                            SENTENCE_NT'the seed random number generator rule translates into i6 as '
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'seed random number generator rule'
                                PROPER_NOUN_NT'SEED_RANDOM_NUMBER_GENERATOR_R'
                            SENTENCE_NT'the update chronological records rule translates into i6 as '
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'update chronological records rule'
                                PROPER_NOUN_NT'UPDATE_CHRONOLOGICAL_RECORDS_R'
                            SENTENCE_NT'the position player in model world rule translates into i6 a'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'position player in model world rule'
                                PROPER_NOUN_NT'POSITION_PLAYER_IN_MODEL_R'
                            RULE_NT'this is the start in the correct scenes rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the scene changing rules'
                                        INVOCATION_NT'follow the scene changing rules'
                                            RVALUE_CONTEXT_NT'scene changing rules'
                                                CONSTANT_NT'scene changing rules'-rulebook
                            SENTENCE_NT'the when play begins stage rule is listed in the startup rul'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the when play begins stage rule'
                                PROPER_NOUN_NT'in the startup rulebook'
                            SENTENCE_NT'the fix baseline scoring rule is listed in the startup ruleb'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the fix baseline scoring rule'
                                PROPER_NOUN_NT'in the startup rulebook'
                            SENTENCE_NT'the display banner rule is listed in the startup rulebook'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the display banner rule'
                                PROPER_NOUN_NT'in the startup rulebook'
                            SENTENCE_NT'the initial room description rule is listed in the startup r'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the initial room description rule'
                                PROPER_NOUN_NT'in the startup rulebook'
                            RULE_NT'this is the when play begins stage rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the when play begins rulebook'
                                        INVOCATION_NT'follow the when play begins rulebook'
                                            RVALUE_CONTEXT_NT'when play begins rulebook'
                                                CONSTANT_NT'when play begins rulebook'-rulebook
                            RULE_NT'this is the fix baseline scoring rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'now the last notified score is the score'
                                        CONDITION_CONTEXT_NT'the last notified score is the score'
                            RULE_NT'this is the display banner rule'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[banner text]"'
                                        INVOCATION_LIST_SAY_NT'banner text'
                                            INVOCATION_NT'banner text'
                            RULE_NT'this is the initial room description rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'try looking'
                                        INVOCATION_NT'try looking'
                                            RVALUE_CONTEXT_NT'looking'
                                                CONSTANT_NT'looking'-action
                            RULE_NT'a first turn sequence rule ( this is the every turn stage ru'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the every turn rules'
                                        INVOCATION_NT'follow the every turn rules'
                                            RVALUE_CONTEXT_NT'every turn rules'
                                                CONSTANT_NT'every turn rules'-rulebook
                            RULE_NT'a first turn sequence rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the scene changing rules'
                                        INVOCATION_NT'follow the scene changing rules'
                                            RVALUE_CONTEXT_NT'scene changing rules'
                                                CONSTANT_NT'scene changing rules'-rulebook
                            SENTENCE_NT'the generate action rule is listed first in the turn sequenc'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the generate action rule'
                                PROPER_NOUN_NT'first in the turn sequence rulebook'
                            SENTENCE_NT'the declare everything initially unmentioned rule is listed '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the declare everything initially unmentioned rule'
                                PROPER_NOUN_NT'first in the turn sequence rulebook'
                            SENTENCE_NT'the parse command rule is listed first in the turn sequence '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the parse command rule'
                                PROPER_NOUN_NT'first in the turn sequence rulebook'
                            SENTENCE_NT'the timed events rule is listed in the turn sequence ruleboo'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the timed events rule'
                                PROPER_NOUN_NT'in the turn sequence rulebook'
                            SENTENCE_NT'the advance time rule is listed in the turn sequence ruleboo'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the advance time rule'
                                PROPER_NOUN_NT'in the turn sequence rulebook'
                            SENTENCE_NT'the update chronological records rule is listed in the turn '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the update chronological records rule'
                                PROPER_NOUN_NT'in the turn sequence rulebook'
                            RULE_NT'a last turn sequence rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the scene changing rules'
                                        INVOCATION_NT'follow the scene changing rules'
                                            RVALUE_CONTEXT_NT'scene changing rules'
                                                CONSTANT_NT'scene changing rules'-rulebook
                            SENTENCE_NT'the adjust light rule is listed last in the turn sequence ru'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the adjust light rule'
                                PROPER_NOUN_NT'last in the turn sequence rulebook'
                            SENTENCE_NT'the note object acquisitions rule is listed last in the turn'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the note object acquisitions rule'
                                PROPER_NOUN_NT'last in the turn sequence rulebook'
                            SENTENCE_NT'the notify score changes rule is listed last in the turn seq'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the notify score changes rule'
                                PROPER_NOUN_NT'last in the turn sequence rulebook'
                            RULE_NT'this is the notify score changes rule'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the score is not the last notified score'
                                            INVOCATION_NT'if the score is not the last notified score'
                                                CONDITION_CONTEXT_NT'score is not the last notified score'
                                                    TEST_PROPOSITION_NT'score is not the last notified score'(test: [ NOT[ is('score', 'the last notified score') NOT] ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'issue score notification message'
                                                INVOCATION_NT'issue score notification message'
                                            INVOCATION_LIST_NT'now the last notified score is the score'
                                                CONDITION_CONTEXT_NT'the last notified score is the score'
                            SENTENCE_NT'the adjust light rule translates into i6 as ADJUST_LIGHT_R w'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'adjust light rule'
                                PROPER_NOUN_NT'ADJUST_LIGHT_R'
                                    PROPER_NOUN_NT'"[It] [are] [if story tense is present tense]now [end if]pit'
                            SENTENCE_NT'the advance time rule translates into i6 as ADVANCE_TIME_R'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'advance time rule'
                                PROPER_NOUN_NT'ADVANCE_TIME_R'
                            SENTENCE_NT'the generate action rule translates into i6 as GENERATE_ACTI'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'generate action rule'
                                PROPER_NOUN_NT'GENERATE_ACTION_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'"(considering the first sixteen objects only)[command clarif'
                                        PROPER_NOUN_NT'"Nothing to do!" ( b )'
                            SENTENCE_NT'the note object acquisitions rule translates into i6 as NOTE'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'note object acquisitions rule'
                                PROPER_NOUN_NT'NOTE_OBJECT_ACQUISITIONS_R'
                            SENTENCE_NT'the parse command rule translates into i6 as PARSE_COMMAND_R'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'parse command rule'
                                PROPER_NOUN_NT'PARSE_COMMAND_R'
                            SENTENCE_NT'the timed events rule translates into i6 as TIMED_EVENTS_R'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'timed events rule'
                                PROPER_NOUN_NT'TIMED_EVENTS_R'
                            SENTENCE_NT'the when play ends stage rule is listed first in the shutdow'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the when play ends stage rule'
                                PROPER_NOUN_NT'first in the shutdown rulebook'
                            SENTENCE_NT'the resurrect player if asked rule is listed last in the shu'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the resurrect player if asked rule'
                                PROPER_NOUN_NT'last in the shutdown rulebook'
                            SENTENCE_NT'the print player's obituary rule is listed last in the shutd'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the print player's obituary rule'
                                PROPER_NOUN_NT'last in the shutdown rulebook'
                            SENTENCE_NT'the ask the final question rule is listed last in the shutdo'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the ask the final question rule'
                                PROPER_NOUN_NT'last in the shutdown rulebook'
                            RULE_NT'this is the when play ends stage rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the when play ends rulebook'
                                        INVOCATION_NT'follow the when play ends rulebook'
                                            RVALUE_CONTEXT_NT'when play ends rulebook'
                                                CONSTANT_NT'when play ends rulebook'-rulebook
                            RULE_NT'this is the print player's obituary rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'carry out the printing the player's obituary activity'
                                        INVOCATION_NT'carry out the printing the player's obituary activity'
                                            RVALUE_CONTEXT_NT'printing the player's obituary'
                                                CONSTANT_NT'printing the player's obituary'-activity
                            SENTENCE_NT'the resurrect player if asked rule translates into i6 as RES'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'resurrect player if asked rule'
                                PROPER_NOUN_NT'RESURRECT_PLAYER_IF_ASKED_R'
                            SENTENCE_NT'the ask the final question rule translates into i6 as ASK_FI'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'ask the final question rule'
                                PROPER_NOUN_NT'ASK_FINAL_QUESTION_R'
                            SENTENCE_NT'the scene change machinery rule is listed last in the scene '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the scene change machinery rule'
                                PROPER_NOUN_NT'last in the scene changing rulebook'
                            SENTENCE_NT'the scene change machinery rule translates into i6 as SCENE_'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'scene change machinery rule'
                                PROPER_NOUN_NT'SCENE_CHANGE_MACHINERY_R'
                        HEADING_NT'section 3 - the entire game scene' (level 5)
                            SENTENCE_NT'the entire game is a scene'
                                VERB_NT'is'
                                PROPER_NOUN_NT'entire game'
                                COMMON_NOUN_NT'scene'
                            SENTENCE_NT'the entire game begins when the story has not ended'
                                VERB_NT'begins when'
                                PROPER_NOUN_NT'the entire game'
                                PROPER_NOUN_NT'the story has not ended'
                            SENTENCE_NT'the entire game ends when the story has ended'
                                VERB_NT'ends when'
                                PROPER_NOUN_NT'the entire game'
                                PROPER_NOUN_NT'the story has ended'
                        HEADING_NT'section 4 - action processing' (level 5)
                            SENTENCE_NT'the before stage rule is listed first in the action-processi'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the before stage rule'
                                PROPER_NOUN_NT'first in the action-processing rules'
                            SENTENCE_NT'the set pronouns from items from multiple object lists rule '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the set pronouns from items from multiple object lists rule'
                                PROPER_NOUN_NT'first in the action-processing rules'
                            SENTENCE_NT'the announce items from multiple object lists rule is listed'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the announce items from multiple object lists rule'
                                PROPER_NOUN_NT'first in the action-processing rules'
                            SENTENCE_NT'the basic visibility rule is listed in the action-processing'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the basic visibility rule'
                                PROPER_NOUN_NT'in the action-processing rules'
                            SENTENCE_NT'the basic accessibility rule is listed in the action-process'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the basic accessibility rule'
                                PROPER_NOUN_NT'in the action-processing rules'
                            SENTENCE_NT'the carrying requirements rule is listed in the action-proce'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the carrying requirements rule'
                                PROPER_NOUN_NT'in the action-processing rules'
                            SENTENCE_NT'the instead stage rule is listed last in the action-processi'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the instead stage rule'
                                PROPER_NOUN_NT'last in the action-processing rules'
                            SENTENCE_NT'the requested actions require persuasion rule is listed last'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the requested actions require persuasion rule'
                                PROPER_NOUN_NT'last in the action-processing rules'
                            SENTENCE_NT'the carry out requested actions rule is listed last in the a'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the carry out requested actions rule'
                                PROPER_NOUN_NT'last in the action-processing rules'
                            SENTENCE_NT'the descend to specific action-processing rule is listed las'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the descend to specific action-processing rule'
                                PROPER_NOUN_NT'last in the action-processing rules'
                            SENTENCE_NT'the end action-processing in success rule is listed last in '
                                VERB_NT'is'
                                PROPER_NOUN_NT'the end action-processing in success rule'
                                PROPER_NOUN_NT'last in the action-processing rules'
                            RULE_NT'this is the set pronouns from items from multiple object lis'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the current item from the multiple object list is not not'
                                            INVOCATION_NT'if the current item from the multiple object list is not not'
                                                CONDITION_CONTEXT_NT'current item from the multiple object list is not nothing'
                                                    TEST_PROPOSITION_NT'current item from the multiple object list is not nothing'(test: [ NOT[ is('current item from the multiple object list', 'nothing') NOT] ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'set pronouns from the current item from the multiple object '
                                                INVOCATION_NT'set pronouns from the current item from the multiple object '
                                                    RVALUE_CONTEXT_NT'current item from the multiple object list'
                                                        NONLOCAL_VARIABLE_NT'current item from the multiple object list'('current item from the multiple object list'(var)[object])
                            RULE_NT'this is the announce items from multiple object lists rule'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the current item from the multiple object list is not not'
                                            INVOCATION_NT'if the current item from the multiple object list is not not'
                                                CONDITION_CONTEXT_NT'current item from the multiple object list is not nothing'
                                                    TEST_PROPOSITION_NT'current item from the multiple object list is not nothing'(test: [ NOT[ is('current item from the multiple object list', 'nothing') NOT] ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[current item from the multiple object list]: [run para'
                                                INVOCATION_LIST_SAY_NT'"[current item from the multiple object list]: [run paragrap'
                                                    INVOCATION_NT'"[current item from the multiple object list]: [run paragrap'
                                                        RVALUE_CONTEXT_NT'"[current item from the multiple object list]: [run paragrap'
                                                            CONSTANT_NT'"[current item from the multiple object list]: [run paragrap'-text
                            RULE_NT'this is the before stage rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'abide by the before rules'
                                        INVOCATION_NT'abide by the before rules'
                                            RVALUE_CONTEXT_NT'before rules'
                                                CONSTANT_NT'before rules'-rulebook
                            RULE_NT'this is the instead stage rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'abide by the instead rules'
                                        INVOCATION_NT'abide by the instead rules'
                                            RVALUE_CONTEXT_NT'instead rules'
                                                CONSTANT_NT'instead rules'-rulebook
                            RULE_NT'this is the end action-processing in success rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'rule succeeds'
                                        INVOCATION_NT'rule succeeds'
                            SENTENCE_NT'the basic accessibility rule translates into i6 as BASIC_ACC'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'basic accessibility rule'
                                PROPER_NOUN_NT'BASIC_ACCESSIBILITY_R'
                                    PROPER_NOUN_NT'"You must name something more substantial." ( a )'
                            SENTENCE_NT'the basic visibility rule translates into i6 as BASIC_VISIBI'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'basic visibility rule'
                                PROPER_NOUN_NT'BASIC_VISIBILITY_R'
                                    PROPER_NOUN_NT'"[It] [are] pitch dark, and [we] [can't see] a thing." ( a )'
                            SENTENCE_NT'the carrying requirements rule translates into i6 as CARRYIN'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'carrying requirements rule'
                                PROPER_NOUN_NT'CARRYING_REQUIREMENTS_R'
                            SENTENCE_NT'the requested actions require persuasion rule translates int'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'requested actions require persuasion rule'
                                PROPER_NOUN_NT'REQUESTED_ACTIONS_REQUIRE_R'
                                    PROPER_NOUN_NT'"[The noun] [have] better things to do." ( a )'
                            SENTENCE_NT'the carry out requested actions rule translates into i6 as C'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'carry out requested actions rule'
                                PROPER_NOUN_NT'CARRY_OUT_REQUESTED_ACTIONS_R'
                                    PROPER_NOUN_NT'"[The noun] [are] unable to do that." ( a )'
                            SENTENCE_NT'the descend to specific action-processing rule translates in'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'descend to specific action-processing rule'
                                PROPER_NOUN_NT'DESCEND_TO_SPECIFIC_ACTION_R'
                            SENTENCE_NT'the work out details of specific action rule is listed first'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the work out details of specific action rule'
                                PROPER_NOUN_NT'first in the specific action-processing rules'
                            RULE_NT'a specific action-processing rule ( this is the investigate '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the player's action awareness rules'
                                        INVOCATION_NT'follow the player's action awareness rules'
                                            RVALUE_CONTEXT_NT'player's action awareness rules'
                                                CONSTANT_NT'player's action awareness rules'-rulebook
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if rule succeeded'
                                            INVOCATION_NT'if rule succeeded'
                                                CONDITION_CONTEXT_NT'rule succeeded'
                                                    TEST_VALUE_NT'rule succeeded'
                                                        PHRASE_TO_DECIDE_VALUE_NT'rule succeeded'
                                                            INVOCATION_LIST_NT'rule succeeded'
                                                                INVOCATION_NT'rule succeeded'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'now within the player's sight is true'
                                                CONDITION_CONTEXT_NT'within the player's sight is true'
                                        CODE_BLOCK_NT'otherwise'
                                            INVOCATION_LIST_NT'now within the player's sight is false'
                                                CONDITION_CONTEXT_NT'within the player's sight is false'
                            RULE_NT'a specific action-processing rule ( this is the check stage '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'anonymously abide by the specific check rulebook'
                                        INVOCATION_NT'anonymously abide by the specific check rulebook'
                                            RVALUE_CONTEXT_NT'specific check rulebook'
                                                NONLOCAL_VARIABLE_NT'specific check rulebook'('specific check rulebook'(var)[rulebook])
                            RULE_NT'a specific action-processing rule ( this is the carry out st'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'follow the specific carry out rulebook'
                                        INVOCATION_NT'follow the specific carry out rulebook'
                                            RVALUE_CONTEXT_NT'specific carry out rulebook'
                                                NONLOCAL_VARIABLE_NT'specific carry out rulebook'('specific carry out rulebook'(var)[rulebook])
                            RULE_NT'a specific action-processing rule ( this is the after stage '
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if action in world is true'
                                            INVOCATION_NT'if action in world is true'
                                                CONDITION_CONTEXT_NT'action in world is true'
                                                    TEST_PROPOSITION_NT'action in world is true'(test: [ is('action in world', 'true') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'abide by the after rules'
                                                INVOCATION_NT'abide by the after rules'
                                                    RVALUE_CONTEXT_NT'after rules'
                                                        CONSTANT_NT'after rules'-rulebook
                            RULE_NT'a specific action-processing rule ( this is the investigate '
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if within the player's sight is false'
                                            INVOCATION_NT'if within the player's sight is false'
                                                CONDITION_CONTEXT_NT'within the player's sight is false'
                                                    TEST_PROPOSITION_NT'within the player's sight is false'(test: [ is('within the player's sight', 'false') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'follow the player's action awareness rules'
                                                INVOCATION_NT'follow the player's action awareness rules'
                                                    RVALUE_CONTEXT_NT'player's action awareness rules'
                                                        CONSTANT_NT'player's action awareness rules'-rulebook
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if rule succeeded'
                                                    INVOCATION_NT'if rule succeeded'
                                                        CONDITION_CONTEXT_NT'rule succeeded'
                                                            TEST_VALUE_NT'rule succeeded'
                                                                PHRASE_TO_DECIDE_VALUE_NT'rule succeeded'
                                                                    INVOCATION_LIST_NT'rule succeeded'
                                                                        INVOCATION_NT'rule succeeded'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'now within the player's sight is true'
                                                        CONDITION_CONTEXT_NT'within the player's sight is true'
                            RULE_NT'a specific action-processing rule ( this is the report stage'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if within the player's sight is true and action keeping sile'
                                            INVOCATION_NT'if within the player's sight is true and action keeping sile'
                                                CONDITION_CONTEXT_NT'within the player's sight is true and action keeping silent '
                                                    LOGICAL_AND_NT'within the player's sight is true and action keeping silent '
                                                        TEST_PROPOSITION_NT'within the player's sight is true'(test: [ is('within the player's sight', 'true') ])
                                                        TEST_PROPOSITION_NT'action keeping silent is false'(test: [ is('action keeping silent', 'false') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'follow the specific report rulebook'
                                                INVOCATION_NT'follow the specific report rulebook'
                                                    RVALUE_CONTEXT_NT'specific report rulebook'
                                                        NONLOCAL_VARIABLE_NT'specific report rulebook'('specific report rulebook'(var)[rulebook])
                            RULE_NT'the last specific action-processing rule'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'rule succeeds'
                                        INVOCATION_NT'rule succeeds'
                            SENTENCE_NT'the work out details of specific action rule translates into'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'work out details of specific action rule'
                                PROPER_NOUN_NT'WORK_OUT_DETAILS_OF_SPECIFIC_R'
                            RULE_NT'a player's action awareness rule ( this is the player aware '
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is the actor'
                                            INVOCATION_NT'if the player is the actor'
                                                CONDITION_CONTEXT_NT'player is the actor'
                                                    TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'rule succeeds'
                                                INVOCATION_NT'rule succeeds'
                            RULE_NT'a player's action awareness rule ( this is the player aware '
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the player is not the actor and the player can see the ac'
                                            INVOCATION_NT'if the player is not the actor and the player can see the ac'
                                                CONDITION_CONTEXT_NT'player is not the actor and the player can see the actor'
                                                    LOGICAL_AND_NT'player is not the actor and the player can see the actor'
                                                        TEST_PROPOSITION_NT'player is not the actor'(test: [ NOT[ is('player', 'the actor') NOT] ])
                                                        TEST_PROPOSITION_NT'the player can see the actor'(test: [ can-see('the player', 'the actor') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'rule succeeds'
                                                INVOCATION_NT'rule succeeds'
                            RULE_NT'a player's action awareness rule ( this is the player aware '
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the noun is a thing and the player can see the noun'
                                            INVOCATION_NT'if the noun is a thing and the player can see the noun'
                                                CONDITION_CONTEXT_NT'noun is a thing and the player can see the noun'
                                                    LOGICAL_AND_NT'noun is a thing and the player can see the noun'
                                                        TEST_PROPOSITION_NT'noun is a thing'(test: [ kind=thing('noun') ])
                                                        TEST_PROPOSITION_NT'the player can see the noun'(test: [ can-see('the player', 'the noun') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'rule succeeds'
                                                INVOCATION_NT'rule succeeds'
                            RULE_NT'a player's action awareness rule ( this is the player aware '
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the second noun is a thing and the player can see the sec'
                                            INVOCATION_NT'if the second noun is a thing and the player can see the sec'
                                                CONDITION_CONTEXT_NT'second noun is a thing and the player can see the second nou'
                                                    LOGICAL_AND_NT'second noun is a thing and the player can see the second nou'
                                                        TEST_PROPOSITION_NT'second noun is a thing'(test: [ kind=thing('second noun') ])
                                                        TEST_PROPOSITION_NT'the player can see the second noun'(test: [ can-see('the player', 'the second noun') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'rule succeeds'
                                                INVOCATION_NT'rule succeeds'
                        HEADING_NT'section 5 - accessibility' (level 5)
                            SENTENCE_NT'the access through barriers rule is listed last in the acces'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the access through barriers rule'
                                PROPER_NOUN_NT'last in the accessibility rules'
                            SENTENCE_NT'the access through barriers rule translates into i6 as ACCES'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'access through barriers rule'
                                PROPER_NOUN_NT'ACCESS_THROUGH_BARRIERS_R'
                                    PROPER_NOUN_NT'"[regarding the noun][Those] [aren't] available." ( a )'
                            SENTENCE_NT'the can't reach inside rooms rule is listed last in the reac'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the can't reach inside rooms rule'
                                PROPER_NOUN_NT'last in the reaching inside rules'
                            SENTENCE_NT'the can't reach inside closed containers rule is listed last'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the can't reach inside closed containers rule'
                                PROPER_NOUN_NT'last in the reaching inside rules'
                            SENTENCE_NT'the can't reach inside closed containers rule translates int'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'can't reach inside closed containers rule'
                                PROPER_NOUN_NT'CANT_REACH_INSIDE_CLOSED_R'
                                    PROPER_NOUN_NT'"[The noun] [aren't] open." ( a )'
                            SENTENCE_NT'the can't reach inside rooms rule translates into i6 as CANT'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'can't reach inside rooms rule'
                                PROPER_NOUN_NT'CANT_REACH_INSIDE_ROOMS_R'
                                    PROPER_NOUN_NT'"[We] [can't] reach into [the noun]." ( a )'
                            SENTENCE_NT'the can't reach outside closed containers rule is listed las'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the can't reach outside closed containers rule'
                                PROPER_NOUN_NT'last in the reaching outside rules'
                            SENTENCE_NT'the can't reach outside closed containers rule translates in'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'can't reach outside closed containers rule'
                                PROPER_NOUN_NT'CANT_REACH_OUTSIDE_CLOSED_R'
                                    PROPER_NOUN_NT'"[The noun] [aren't] open." ( a )'
                            SENTENCE_NT'the can't act in the dark rule is listed last in the visibil'
                                VERB_NT'is'
                                PROPER_NOUN_NT'the can't act in the dark rule'
                                PROPER_NOUN_NT'last in the visibility rules'
                            RULE_NT'the last visibility rule ( this is the can't act in the dark'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if in darkness'
                                            INVOCATION_NT'if in darkness'
                                                CONDITION_CONTEXT_NT'in darkness'
                                                    TEST_VALUE_NT'in darkness'
                                                        PHRASE_TO_DECIDE_VALUE_NT'in darkness'
                                                            INVOCATION_LIST_NT'in darkness'
                                                                INVOCATION_NT'in darkness'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'rule succeeds'
                                                INVOCATION_NT'rule succeeds'
                            RULE_NT'does the player mean taking something which is carried by th'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'it is very unlikely'
                        HEADING_NT'section 6 - adjectival definitions' (level 5)
                            SENTENCE_NT'a scene can be recurring or non-recurring'
                                VERB_NT'can be'
                                COMMON_NOUN_NT'a scene'
                                PROPER_NOUN_NT'recurring or non-recurring'
                                    AND_NT'or'
                                        PROPER_NOUN_NT'recurring'
                                        PROPER_NOUN_NT'non-recurring'
                            SENTENCE_NT'a scene is usually non-recurring'
                                VERB_NT'is usually'
                                COMMON_NOUN_NT'scene'
                                ADJECTIVE_NT'non-recurring'
                            SENTENCE_NT'the entire game is recurring'
                                VERB_NT'is'
                                PROPER_NOUN_NT'entire game'
                                ADJECTIVE_NT'recurring'
                        HEADING_NT'section 7 - scene descriptions' (level 5)
                            SENTENCE_NT'a scene has a text called description'
                                VERB_NT'has'
                                COMMON_NOUN_NT'scene'
                                ALLOWED_NT
                                    PROPERTYCALLED_NT'called'
                                        PROPER_NOUN_NT'text'
                                        PROPER_NOUN_NT'description'
                            RULE_NT'when a scene ( called the event ) begins ( this is the scene'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the description of the event is not ""'
                                            INVOCATION_NT'if the description of the event is not ""'
                                                CONDITION_CONTEXT_NT'description of the event is not ""'
                                                    TEST_PROPOSITION_NT'description of the event is not ""'(test: [ NOT[ is('description of the event', '""') NOT] ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[description of the event][paragraph break]"'
                                                INVOCATION_LIST_SAY_NT'description of the event'
                                                    INVOCATION_NT'description of the event'
                                                        RVALUE_CONTEXT_NT'description of the event'
                                                            PROPERTY_VALUE_NT'description of the event'
                                                                CONSTANT_NT-nothing valued property
                                                                LOCAL_VARIABLE_NT'the event'(tmp_0;scene)
                                                INVOCATION_LIST_SAY_NT'paragraph break'
                                                    INVOCATION_NT'paragraph break'
                        HEADING_NT'section 8 - command parser errors' (level 5)
                            SENTENCE_NT'a command parser error is a kind of value'
                                VERB_NT'is'
                                COMMON_NOUN_NT'command parser error'
                                KIND_NT'kind of value'
                                    COMMON_NOUN_NT'value'
                            SENTENCE_NT'the command parser errors are didn't understand error , only'
                                VERB_NT'are'
                                COMMON_NOUN_NT'command parser errors'
                                AND_NT','
                                    PROPER_NOUN_NT'didn't understand error'
                                    AND_NT','
                                        PROPER_NOUN_NT'only understood as far as error'
                                        AND_NT','
                                            PROPER_NOUN_NT'didn't understand that number error'
                                            AND_NT','
                                                PROPER_NOUN_NT'can only do that to something animate error'
                                                AND_NT','
                                                    PROPER_NOUN_NT'can't see any such thing error'
                                                    AND_NT','
                                                        PROPER_NOUN_NT'said too little error'
                                                        AND_NT','
                                                            PROPER_NOUN_NT'aren't holding that error'
                                                            AND_NT','
                                                                PROPER_NOUN_NT'can't use multiple objects error'
                                                                AND_NT','
                                                                    PROPER_NOUN_NT'can only use multiple objects error'
                                                                    AND_NT','
                                                                        PROPER_NOUN_NT'not sure what it refers to error'
                                                                        AND_NT','
                                                                            PROPER_NOUN_NT'excepted something not included error'
                                                                            AND_NT','
                                                                                PROPER_NOUN_NT'not a verb i recognise error'
                                                                                AND_NT','
                                                                                    PROPER_NOUN_NT'not something you need to refer to error'
                                                                                    AND_NT','
                                                                                        PROPER_NOUN_NT'can't see it at the moment error'
                                                                                        AND_NT','
                                                                                            PROPER_NOUN_NT'didn't understand the way that finished error'
                                                                                            AND_NT','
                                                                                                PROPER_NOUN_NT'not enough of those available error'
                                                                                                AND_NT','
                                                                                                    PROPER_NOUN_NT'nothing to do error'
                                                                                                    AND_NT','
                                                                                                        PROPER_NOUN_NT'noun did not make sense in that context error'
                                                                                                        AND_NT','
                                                                                                            PROPER_NOUN_NT'referred to a determination of scope error'
                                                                                                            AND_NT','
                                                                                                                PROPER_NOUN_NT'i beg your pardon error'
                                                                                                                AND_NT','
                                                                                                                    PROPER_NOUN_NT'can't again the addressee error'
                                                                                                                    AND_NT','
                                                                                                                        PROPER_NOUN_NT'comma can't begin error'
                                                                                                                        AND_NT','
                                                                                                                            PROPER_NOUN_NT'can't see whom to talk to error'
                                                                                                                            AND_NT','
                                                                                                                                PROPER_NOUN_NT'can't talk to inanimate things error'
                                                                                                                                PROPER_NOUN_NT'didn't understand addressee's last name error'
                            SENTENCE_NT'the latest parser error is a command parser error that varie'
                                VERB_NT'is'
                                PROPER_NOUN_NT'latest parser error'
                                COMMON_NOUN_NT'command parser error that varies'
                            SENTENCE_NT'the latest parser error variable translates into i6 as etype'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'latest parser error variable'
                                PROPER_NOUN_NT'etype'
                        HEADING_NT'section 9 - responses for internal rules' (level 5)
                            SENTENCE_NT'the list writer internal rule translates into i6 as LIST_WRI'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'list writer internal rule'
                                PROPER_NOUN_NT'LIST_WRITER_INTERNAL_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'" (" ( a )'
                                        AND_NT','
                                            PROPER_NOUN_NT'")" ( b )'
                                            AND_NT','
                                                PROPER_NOUN_NT'" and " ( c )'
                                                AND_NT','
                                                    PROPER_NOUN_NT'"providing light" ( d )'
                                                    AND_NT','
                                                        PROPER_NOUN_NT'"closed" ( e )'
                                                        AND_NT','
                                                            PROPER_NOUN_NT'"empty" ( f )'
                                                            AND_NT','
                                                                PROPER_NOUN_NT'"closed and empty" ( g )'
                                                                AND_NT','
                                                                    PROPER_NOUN_NT'"closed and providing light" ( h )'
                                                                    AND_NT','
                                                                        PROPER_NOUN_NT'"empty and providing light" ( i )'
                                                                        AND_NT','
                                                                            PROPER_NOUN_NT'"closed, empty[if serial comma option is active],[end if] an'
                                                                            AND_NT','
                                                                                PROPER_NOUN_NT'"providing light and being worn" ( k )'
                                                                                AND_NT','
                                                                                    PROPER_NOUN_NT'"being worn" ( l )'
                                                                                    AND_NT','
                                                                                        PROPER_NOUN_NT'"open" ( m )'
                                                                                        AND_NT','
                                                                                            PROPER_NOUN_NT'"open but empty" ( n )'
                                                                                            AND_NT','
                                                                                                PROPER_NOUN_NT'"closed" ( o )'
                                                                                                AND_NT','
                                                                                                    PROPER_NOUN_NT'"closed and locked" ( p )'
                                                                                                    AND_NT','
                                                                                                        PROPER_NOUN_NT'"containing" ( q )'
                                                                                                        AND_NT','
                                                                                                            PROPER_NOUN_NT'"on [if the noun is a person]whom[otherwise]which[end if] " '
                                                                                                            AND_NT','
                                                                                                                PROPER_NOUN_NT'", on top of [if the noun is a person]whom[otherwise]which[e'
                                                                                                                AND_NT','
                                                                                                                    PROPER_NOUN_NT'"in [if the noun is a person]whom[otherwise]which[end if] " '
                                                                                                                    AND_NT','
                                                                                                                        PROPER_NOUN_NT'", inside [if the noun is a person]whom[otherwise]which[end '
                                                                                                                        AND_NT','
                                                                                                                            PROPER_NOUN_NT'"[regarding list writer internals][are]" ( v )'
                                                                                                                            AND_NT','
                                                                                                                                PROPER_NOUN_NT'"[regarding list writer internals][are] nothing" ( w )'
                                                                                                                                AND_NT','
                                                                                                                                    PROPER_NOUN_NT'"Nothing" ( x )'
                                                                                                                                    PROPER_NOUN_NT'"nothing" ( y )'
                            SENTENCE_NT'the action processing internal rule translates into i6 as AC'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'action processing internal rule'
                                PROPER_NOUN_NT'ACTION_PROCESSING_INTERNAL_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'"[bracket]That command asks to do something outside of play,'
                                        AND_NT','
                                            PROPER_NOUN_NT'"You must name an object." ( b )'
                                            AND_NT','
                                                PROPER_NOUN_NT'"You may not name an object." ( c )'
                                                AND_NT','
                                                    PROPER_NOUN_NT'"You must supply a noun." ( d )'
                                                    AND_NT','
                                                        PROPER_NOUN_NT'"You may not supply a noun." ( e )'
                                                        AND_NT','
                                                            PROPER_NOUN_NT'"You must name a second object." ( f )'
                                                            AND_NT','
                                                                PROPER_NOUN_NT'"You may not name a second object." ( g )'
                                                                AND_NT','
                                                                    PROPER_NOUN_NT'"You must supply a second noun." ( h )'
                                                                    AND_NT','
                                                                        PROPER_NOUN_NT'"You may not supply a second noun." ( i )'
                                                                        AND_NT','
                                                                            PROPER_NOUN_NT'"(Since something dramatic has happened, your list of comman'
                                                                            PROPER_NOUN_NT'"I didn't understand that instruction." ( k )'
                            SENTENCE_NT'the parser error internal rule translates into i6 as PARSER_'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'parser error internal rule'
                                PROPER_NOUN_NT'PARSER_ERROR_INTERNAL_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'"I didn't understand that sentence." ( a )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"I only understood you as far as wanting to " ( b )'
                                            AND_NT','
                                                PROPER_NOUN_NT'"I only understood you as far as wanting to (go) " ( c )'
                                                AND_NT','
                                                    PROPER_NOUN_NT'"I didn't understand that number." ( d )'
                                                    AND_NT','
                                                        PROPER_NOUN_NT'"[We] [can't] see any such thing." ( e )'
                                                        AND_NT','
                                                            PROPER_NOUN_NT'"You seem to have said too little!" ( f )'
                                                            AND_NT','
                                                                PROPER_NOUN_NT'"[We] [aren't] holding that!" ( g )'
                                                                AND_NT','
                                                                    PROPER_NOUN_NT'"You can't use multiple objects with that verb." ( h )'
                                                                    AND_NT','
                                                                        PROPER_NOUN_NT'"You can only use multiple objects once on a line." ( i )'
                                                                        AND_NT','
                                                                            PROPER_NOUN_NT'"I'm not sure what ['][pronoun i6 dictionary word]['] refers'
                                                                            AND_NT','
                                                                                PROPER_NOUN_NT'"[We] [can't] see ['][pronoun i6 dictionary word]['] ([the n'
                                                                                AND_NT','
                                                                                    PROPER_NOUN_NT'"You excepted something not included anyway!" ( l )'
                                                                                    AND_NT','
                                                                                        PROPER_NOUN_NT'"You can only do that to something animate." ( m )'
                                                                                        AND_NT','
                                                                                            PROPER_NOUN_NT'"That's not a verb I [if American dialect option is
                                                                                            active]r'
                                                                                            AND_NT','
                                                                                                PROPER_NOUN_NT'"That's not something you need to refer to in the course of '
                                                                                                AND_NT','
                                                                                                    PROPER_NOUN_NT'"I didn't understand the way that finished." ( p )'
                                                                                                    AND_NT','
                                                                                                        PROPER_NOUN_NT'"[if number understood is 0]None[otherwise]Only [number unde'
                                                                                                        AND_NT','
                                                                                                            PROPER_NOUN_NT'"That noun did not make sense in this context." ( r )'
                                                                                                            AND_NT','
                                                                                                                PROPER_NOUN_NT'"To repeat a command like 'frog, jump', just say 'again', no'
                                                                                                                AND_NT','
                                                                                                                    PROPER_NOUN_NT'"You can't begin with a comma." ( t )'
                                                                                                                    AND_NT','
                                                                                                                        PROPER_NOUN_NT'"You seem to want to talk to someone, but I can't see whom."'
                                                                                                                        AND_NT','
                                                                                                                            PROPER_NOUN_NT'"You can't talk to [the noun]." ( v )'
                                                                                                                            AND_NT','
                                                                                                                                PROPER_NOUN_NT'"To talk to someone, try 'someone, hello' or some such." ( w'
                                                                                                                                PROPER_NOUN_NT'"I beg your pardon?" ( x )'
                            SENTENCE_NT'the parser nothing error internal rule translates into i6 as'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'parser nothing error internal rule'
                                PROPER_NOUN_NT'PARSER_N_ERROR_INTERNAL_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'"Nothing to do!" ( a )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"[There] [adapt the verb are from the third person plural] n'
                                            AND_NT','
                                                PROPER_NOUN_NT'"[regarding the noun][Those] [seem] to belong to [the noun].'
                                                AND_NT','
                                                    PROPER_NOUN_NT'"[regarding the noun][Those] [can't] contain things." ( d )'
                                                    AND_NT','
                                                        PROPER_NOUN_NT'"[The noun] [aren't] open." ( e )'
                                                        PROPER_NOUN_NT'"[The noun] [are] empty." ( f )'
                            SENTENCE_NT'the darkness name internal rule translates into i6 as DARKNE'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'darkness name internal rule'
                                PROPER_NOUN_NT'DARKNESS_NAME_INTERNAL_R'
                                    PROPER_NOUN_NT'"Darkness" ( a )'
                            SENTENCE_NT'the parser command internal rule translates into i6 as PARSE'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'parser command internal rule'
                                PROPER_NOUN_NT'PARSER_COMMAND_INTERNAL_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'"Sorry, that can't be corrected." ( a )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"Think nothing of it." ( b )'
                                            AND_NT','
                                                PROPER_NOUN_NT'"'Oops' can only correct a single word." ( c )'
                                                PROPER_NOUN_NT'"You can hardly repeat that." ( d )'
                            SENTENCE_NT'the parser clarification internal rule translates into i6 as'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'parser clarification internal rule'
                                PROPER_NOUN_NT'PARSER_CLARIF_INTERNAL_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'"Who do you mean, " ( a )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"Which do you mean, " ( b )'
                                            AND_NT','
                                                PROPER_NOUN_NT'"Sorry, you can only have one item here. Which exactly?" ( c'
                                                AND_NT','
                                                    PROPER_NOUN_NT'"Whom do you want [if the noun is not the player][the noun] '
                                                    AND_NT','
                                                        PROPER_NOUN_NT'"What do you want [if the noun is not the player][the noun] '
                                                        AND_NT','
                                                            PROPER_NOUN_NT'"those things" ( f )'
                                                            AND_NT','
                                                                PROPER_NOUN_NT'"that" ( g )'
                                                                PROPER_NOUN_NT'" or " ( h )'
                            SENTENCE_NT'the yes or no question internal rule translates into i6 as Y'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'yes or no question internal rule'
                                PROPER_NOUN_NT'YES_OR_NO_QUESTION_INTERNAL_R'
                                    PROPER_NOUN_NT'"Please answer yes or no." ( a )'
                            SENTENCE_NT'the print protagonist internal rule translates into i6 as PR'
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'print protagonist internal rule'
                                PROPER_NOUN_NT'PRINT_PROTAGONIST_INTERNAL_R'
                                    AND_NT','
                                        PROPER_NOUN_NT'"[We]" ( a )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"[ourselves]" ( b )'
                                            PROPER_NOUN_NT'"[our] former self" ( c )'
                HEADING_NT'part four - activities' (level 3)
                    HEADING_NT'section 1 - responses' (level 5)
                        SENTENCE_NT'issuing the response text of something -- documented at act_'
                            VERB_NT'is'
                            PROPER_NOUN_NT'issuing the response text of something'
                            COMMON_NOUN_NT'activity on responses'
                        SENTENCE_NT'the standard issuing the response text rule is listed last i'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard issuing the response text rule'
                            PROPER_NOUN_NT'last in for issuing the response text'
                        SENTENCE_NT'the standard issuing the response text rule translates into '
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard issuing the response text rule'
                            PROPER_NOUN_NT'STANDARD_RESPONSE_ISSUING_R'
                    HEADING_NT'section 2 - naming and listing' (level 5)
                        RULE_NT'before printing the name of a thing ( called the item being '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if expanding text for comparison purposes'
                                        INVOCATION_NT'if expanding text for comparison purposes'
                                            CONDITION_CONTEXT_NT'expanding text for comparison purposes'
                                                TEST_VALUE_NT'expanding text for comparison purposes'
                                                    PHRASE_TO_DECIDE_VALUE_NT'expanding text for comparison purposes'
                                                        INVOCATION_LIST_NT'expanding text for comparison purposes'
                                                            INVOCATION_NT'expanding text for comparison purposes'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the activity'
                                            INVOCATION_NT'continue the activity'
                                INVOCATION_LIST_NT'now the item being printed is mentioned'
                                    CONDITION_CONTEXT_NT'the item being printed is mentioned'
                        SENTENCE_NT'printing a number of something ( documented at act_pan ) is '
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing a number of something ( documented at act_pan )'
                            PROPER_NOUN_NT'an activity'
                        RULE_NT'rule for printing a number of something ( called the item ) '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say "[listing group size in words] "'
                                    INVOCATION_LIST_SAY_NT'listing group size in words'
                                        INVOCATION_NT'listing group size in words'
                                            RVALUE_CONTEXT_NT'listing group size'
                                                NONLOCAL_VARIABLE_NT'listing group size'('listing group size'(var)[number])
                                    INVOCATION_LIST_SAY_NT'" "'
                                        INVOCATION_NT'" "'
                                            RVALUE_CONTEXT_NT'" "'
                                                CONSTANT_NT'" "'-text
                                INVOCATION_LIST_NT'carry out the printing the plural name activity with the ite'
                                    INVOCATION_NT'carry out the printing the plural name activity with the ite'
                                        RVALUE_CONTEXT_NT'printing the plural name'
                                            CONSTANT_NT'printing the plural name'-activity on objects
                                        RVALUE_CONTEXT_NT'item'
                                            LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                        SENTENCE_NT'the standard printing a number of something rule is listed l'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard printing a number of something rule'
                            PROPER_NOUN_NT'last in the for printing a number rulebook'
                        SENTENCE_NT'printing room description details of something ( documented '
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing room description details of something ( documented '
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing inventory details of something ( documented at act_'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing inventory details of something ( documented at act_'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'listing contents of something ( documented at act_lc ) is an'
                            VERB_NT'is'
                            PROPER_NOUN_NT'listing contents of something ( documented at act_lc )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'the standard contents listing rule is listed last in the for'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard contents listing rule'
                            PROPER_NOUN_NT'last in the for listing contents rulebook'
                        SENTENCE_NT'the standard contents listing rule translates into i6 as STA'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard contents listing rule'
                            PROPER_NOUN_NT'STANDARD_CONTENTS_LISTING_R'
                        SENTENCE_NT'grouping together something ( documented at act_gt ) is an a'
                            VERB_NT'is'
                            PROPER_NOUN_NT'grouping together something ( documented at act_gt )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'writing a paragraph about something ( documented at act_wpa '
                            VERB_NT'is'
                            PROPER_NOUN_NT'writing a paragraph about something ( documented at act_wpa '
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'listing nondescript items of something ( documented at act_l'
                            VERB_NT'is'
                            PROPER_NOUN_NT'listing nondescript items of something ( documented at act_l'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing the name of a dark room ( documented at act_darknam'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing the name of a dark room ( documented at act_darknam'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing the description of a dark room ( documented at act_'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing the description of a dark room ( documented at act_'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing the announcement of darkness ( documented at act_no'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing the announcement of darkness ( documented at act_no'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing the announcement of light ( documented at act_nowli'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing the announcement of light ( documented at act_nowli'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing a refusal to act in the dark ( documented at act_to'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing a refusal to act in the dark ( documented at act_to'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'the look around once light available rule is listed last in '
                            VERB_NT'is'
                            PROPER_NOUN_NT'the look around once light available rule'
                            PROPER_NOUN_NT'last in for printing the announcement of light'
                        RULE_NT'this is the look around once light available rule'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'try looking'
                                    INVOCATION_NT'try looking'
                                        RVALUE_CONTEXT_NT'looking'
                                            CONSTANT_NT'looking'-action
                        SENTENCE_NT'constructing the status line ( documented at act_csl ) is an'
                            VERB_NT'is'
                            PROPER_NOUN_NT'constructing the status line ( documented at act_csl )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing the banner text ( documented at act_banner ) is an '
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing the banner text ( documented at act_banner )'
                            PROPER_NOUN_NT'an activity'
                    HEADING_NT'section 3 - command parsing' (level 5)
                        SENTENCE_NT'reading a command ( documented at act_reading ) is an activi'
                            VERB_NT'is'
                            PROPER_NOUN_NT'reading a command ( documented at act_reading )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'deciding the scope of something ( future action ) ( document'
                            VERB_NT'is'
                            PROPER_NOUN_NT'deciding the scope of something ( future action ) ( document'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'deciding the concealed possessions of something ( documented'
                            VERB_NT'is'
                            PROPER_NOUN_NT'deciding the concealed possessions of something ( documented'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'deciding whether all includes something ( future action ) ( '
                            VERB_NT'is'
                            PROPER_NOUN_NT'deciding whether all includes something ( future action ) ( '
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'the for deciding whether all includes rules have outcomes it'
                            VERB_NT'have'
                            PROPER_NOUN_NT'for deciding whether all includes rules'
                            PROPERTY_LIST_NT'and'
                                PROPER_NOUN_NT'outcomes it does not ( failure )'
                                PROPER_NOUN_NT'it does ( success )'
                        SENTENCE_NT'clarifying the parser's choice of something ( future action '
                            VERB_NT'is'
                            PROPER_NOUN_NT'clarifying the parser's choice of something ( future action '
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'asking which do you mean ( future action ) ( documented at a'
                            VERB_NT'is'
                            PROPER_NOUN_NT'asking which do you mean ( future action ) ( documented at a'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing a parser error ( documented at act_parsererror ) is'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing a parser error ( documented at act_parsererror )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'supplying a missing noun ( documented at act_smn ) is an act'
                            VERB_NT'is'
                            PROPER_NOUN_NT'supplying a missing noun ( documented at act_smn )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'supplying a missing second noun ( documented at act_smn ) is'
                            VERB_NT'is'
                            PROPER_NOUN_NT'supplying a missing second noun ( documented at act_smn )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'implicitly taking something ( documented at act_implicitly )'
                            VERB_NT'is'
                            PROPER_NOUN_NT'implicitly taking something ( documented at act_implicitly )'
                            PROPER_NOUN_NT'an activity'
                        RULE_NT'rule for deciding whether all includes scenery while taking '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'it does not'
                        RULE_NT'rule for deciding whether all includes people while taking o'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'it does not'
                        RULE_NT'rule for deciding whether all includes fixed in place things'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'it does not'
                        RULE_NT'rule for deciding whether all includes things enclosed by th'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'it does not'
                        RULE_NT'rule for deciding whether all includes a person while droppi'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'it does not'
                        RULE_NT'rule for supplying a missing noun while an actor smelling ( '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is the touchability ceiling of the player'
                                    CONDITION_CONTEXT_NT'the noun is the touchability ceiling of the player'
                        RULE_NT'rule for supplying a missing noun while an actor listening ('
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is the touchability ceiling of the player'
                                    CONDITION_CONTEXT_NT'the noun is the touchability ceiling of the player'
                        RULE_NT'rule for supplying a missing noun while an actor going ( thi'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say "You'll have to say which compass direction to go in." ('
                                    INVOCATION_LIST_SAY_NT'"You'll have to say which compass direction to go in." ( a )'
                                        INVOCATION_NT'"You'll have to say which compass direction to go in." ( a )'
                                            RVALUE_CONTEXT_NT'"You'll have to say which compass direction to go in." ( a )'
                                                CONSTANT_NT'"You'll have to say which compass direction to go in." ( a )'-text
                        SENTENCE_NT'the standard implicit taking rule is listed last in for impl'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard implicit taking rule'
                            PROPER_NOUN_NT'last in for implicitly taking'
                        SENTENCE_NT'the standard implicit taking rule translates into i6 as STAN'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard implicit taking rule'
                            PROPER_NOUN_NT'STANDARD_IMPLICIT_TAKING_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"(first taking [the noun])[command clarification break]" ( a'
                                    PROPER_NOUN_NT'"([the second noun] first taking [the noun])[command clarifi'
                    HEADING_NT'section 4 - posthumous activities' (level 5)
                        SENTENCE_NT'amusing a victorious player ( documented at act_amuse ) is a'
                            VERB_NT'is'
                            PROPER_NOUN_NT'amusing a victorious player ( documented at act_amuse )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'printing the player's obituary ( documented at act_obit ) is'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing the player's obituary ( documented at act_obit )'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'the print obituary headline rule is listed last in for print'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the print obituary headline rule'
                            PROPER_NOUN_NT'last in for printing the player's obituary'
                        SENTENCE_NT'the print final score rule is listed last in for printing th'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the print final score rule'
                            PROPER_NOUN_NT'last in for printing the player's obituary'
                        SENTENCE_NT'the display final status line rule is listed last in for pri'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the display final status line rule'
                            PROPER_NOUN_NT'last in for printing the player's obituary'
                        SENTENCE_NT'the print obituary headline rule translates into i6 as PRINT'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'print obituary headline rule'
                            PROPER_NOUN_NT'PRINT_OBITUARY_HEADLINE_R'
                                AND_NT','
                                    PROPER_NOUN_NT'" You have died " ( a )'
                                    AND_NT','
                                        PROPER_NOUN_NT'" You have won " ( b )'
                                        PROPER_NOUN_NT'" The End " ( c )'
                        SENTENCE_NT'the print final score rule translates into i6 as PRINT_FINAL'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'print final score rule'
                            PROPER_NOUN_NT'PRINT_FINAL_SCORE_R'
                        SENTENCE_NT'the display final status line rule translates into i6 as DIS'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'display final status line rule'
                            PROPER_NOUN_NT'DISPLAY_FINAL_STATUS_LINE_R'
                        SENTENCE_NT'handling the final question is an activity'
                            VERB_NT'is'
                            PROPER_NOUN_NT'handling the final question'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'the immediately restart the vm rule translates into i6 as IM'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'immediately restart the vm rule'
                            PROPER_NOUN_NT'IMMEDIATELY_RESTART_VM_R'
                        SENTENCE_NT'the immediately restore saved game rule translates into i6 a'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'immediately restore saved game rule'
                            PROPER_NOUN_NT'IMMEDIATELY_RESTORE_SAVED_R'
                        SENTENCE_NT'the immediately quit rule translates into i6 as IMMEDIATELY_'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'immediately quit rule'
                            PROPER_NOUN_NT'IMMEDIATELY_QUIT_R'
                        SENTENCE_NT'the immediately undo rule translates into i6 as IMMEDIATELY_'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'immediately undo rule'
                            PROPER_NOUN_NT'IMMEDIATELY_UNDO_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"The use of 'undo' is forbidden in this story." ( a )'
                                    AND_NT','
                                        PROPER_NOUN_NT'"You can't 'undo' what hasn't been done!" ( b )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"Your interpreter does not provide 'undo'. Sorry!" ( c )'
                                            AND_NT','
                                                PROPER_NOUN_NT'"'Undo' failed. Sorry!" ( d )'
                                                AND_NT','
                                                    PROPER_NOUN_NT'"[bracket]Previous turn undone.[close bracket]" ( e )'
                                                    PROPER_NOUN_NT'"'Undo' capacity exhausted. Sorry!" ( f )'
                        SENTENCE_NT'the print the final question rule is listed in before handli'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the print the final question rule'
                            PROPER_NOUN_NT'in before handling the final question'
                        SENTENCE_NT'the print the final prompt rule is listed in before handling'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the print the final prompt rule'
                            PROPER_NOUN_NT'in before handling the final question'
                        SENTENCE_NT'the read the final answer rule is listed last in before hand'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the read the final answer rule'
                            PROPER_NOUN_NT'last in before handling the final question'
                        SENTENCE_NT'the standard respond to final question rule is listed last i'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard respond to final question rule'
                            PROPER_NOUN_NT'last in for handling the final question'
                        RULE_NT'this is the print the final prompt rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say "> [run paragraph on]" ( a )'
                                    INVOCATION_LIST_SAY_NT'"> [run paragraph on]" ( a )'
                                        INVOCATION_NT'"> [run paragraph on]" ( a )'
                                            RVALUE_CONTEXT_NT'"> [run paragraph on]" ( a )'
                                                CONSTANT_NT'"> [run paragraph on]" ( a )'-text
                        SENTENCE_NT'the read the final answer rule translates into i6 as READ_FI'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'read the final answer rule'
                            PROPER_NOUN_NT'READ_FINAL_ANSWER_R'
                    HEADING_NT'section 5 - the final question' (level 5)
                        RULE_NT'this is the print the final question rule'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let named options count be 0'
                                    INVOCATION_NT'let named options count be 0'
                                        NEW_LOCAL_CONTEXT_NT'named options count'
                                            UNKNOWN_NT'named options count'
                                        RVALUE_CONTEXT_NT'0'
                                            CONSTANT_NT'0'-number
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat through the table of final question options'
                                        INVOCATION_NT'repeat through the table of final question options'
                                            RVALUE_CONTEXT_NT'table of final question options'
                                                CONSTANT_NT'table of final question options'-table name
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the only if victorious entry is false or the story has en'
                                                INVOCATION_NT'if the only if victorious entry is false or the story has en'
                                                    CONDITION_CONTEXT_NT'only if victorious entry is false or the story has ended fin'
                                                        LOGICAL_OR_NT'only if victorious entry is false or the story has ended fin'
                                                            TEST_PROPOSITION_NT'only if victorious entry is false'(test: [ is('only if victorious entry', 'false') ])
                                                            TEST_VALUE_NT'the story has ended finally'
                                                                PHRASE_TO_DECIDE_VALUE_NT'the story has ended finally'
                                                                    INVOCATION_LIST_NT'the story has ended finally'
                                                                        INVOCATION_NT'story has ended finally'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if there is a final response rule entry or the final respons'
                                                        INVOCATION_NT'if there is a final response rule entry or the final respons'
                                                            CONDITION_CONTEXT_NT'there is a final response rule entry or the final response a'
                                                                LOGICAL_OR_NT'there is a final response rule entry or the final response a'
                                                                    TEST_VALUE_NT'there is a final response rule entry'
                                                                        PHRASE_TO_DECIDE_VALUE_NT'there is a final response rule entry'
                                                                            INVOCATION_LIST_NT'there is a final response rule entry'
                                                                                INVOCATION_NT'there is a final response rule entry'
                                                                                    LVALUE_TR_CONTEXT_NT'a final response rule entry'
                                                                                        TABLE_ENTRY_NT'a final response rule entry'
                                                                                            CONSTANT_NT-nothing valued table column
                                                                    TEST_PROPOSITION_NT'the final response activity entry is not empty'(test: [ NOT[ A4'empty'('the final response activity entry') NOT] ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if there is a final question wording entry'
                                                                INVOCATION_NT'if there is a final question wording entry'
                                                                    CONDITION_CONTEXT_NT'there is a final question wording entry'
                                                                        TEST_VALUE_NT'there is a final question wording entry'
                                                                            PHRASE_TO_DECIDE_VALUE_NT'there is a final question wording entry'
                                                                                INVOCATION_LIST_NT'there is a final question wording entry'
                                                                                    INVOCATION_NT'there is a final question wording entry'
                                                                                        LVALUE_TR_CONTEXT_NT'a final question wording entry'
                                                                                            TABLE_ENTRY_NT'a final question wording entry'
                                                                                                CONSTANT_NT-nothing valued table column
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'increase named options count by 1'
                                                                    INVOCATION_NT'increase named options count by 1'
                                                                        LVALUE_CONTEXT_NT'named options count'
                                                                            LOCAL_VARIABLE_NT'named options count'(tmp_0;number)
                                                                        RVALUE_CONTEXT_NT'1'
                                                                            CONSTANT_NT'1'-number
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the named options count is less than 1'
                                        INVOCATION_NT'if the named options count is less than 1'
                                            CONDITION_CONTEXT_NT'named options count is less than 1'
                                                TEST_PROPOSITION_NT'named options count is less than 1'(test: [ less-than('named options count', '1') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'abide by the immediately quit rule'
                                            INVOCATION_NT'abide by the immediately quit rule'
                                                RVALUE_CONTEXT_NT'immediately quit rule'
                                                    CONSTANT_NT'immediately quit rule'-rule
                                CODE_BLOCK_NT'say "Would you like to " ( a )'
                                    INVOCATION_LIST_SAY_NT'"Would you like to " ( a )'
                                        INVOCATION_NT'"Would you like to " ( a )'
                                            RVALUE_CONTEXT_NT'"Would you like to " ( a )'
                                                CONSTANT_NT'"Would you like to " ( a )'-text
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat through the table of final question options'
                                        INVOCATION_NT'repeat through the table of final question options'
                                            RVALUE_CONTEXT_NT'table of final question options'
                                                CONSTANT_NT'table of final question options'-table name
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the only if victorious entry is false or the story has en'
                                                INVOCATION_NT'if the only if victorious entry is false or the story has en'
                                                    CONDITION_CONTEXT_NT'only if victorious entry is false or the story has ended fin'
                                                        LOGICAL_OR_NT'only if victorious entry is false or the story has ended fin'
                                                            TEST_PROPOSITION_NT'only if victorious entry is false'(test: [ is('only if victorious entry', 'false') ])
                                                            TEST_VALUE_NT'the story has ended finally'
                                                                PHRASE_TO_DECIDE_VALUE_NT'the story has ended finally'
                                                                    INVOCATION_LIST_NT'the story has ended finally'
                                                                        INVOCATION_NT'story has ended finally'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if there is a final response rule entry or the final respons'
                                                        INVOCATION_NT'if there is a final response rule entry or the final respons'
                                                            CONDITION_CONTEXT_NT'there is a final response rule entry or the final response a'
                                                                LOGICAL_OR_NT'there is a final response rule entry or the final response a'
                                                                    TEST_VALUE_NT'there is a final response rule entry'
                                                                        PHRASE_TO_DECIDE_VALUE_NT'there is a final response rule entry'
                                                                            INVOCATION_LIST_NT'there is a final response rule entry'
                                                                                INVOCATION_NT'there is a final response rule entry'
                                                                                    LVALUE_TR_CONTEXT_NT'a final response rule entry'
                                                                                        TABLE_ENTRY_NT'a final response rule entry'
                                                                                            CONSTANT_NT-nothing valued table column
                                                                    TEST_PROPOSITION_NT'the final response activity entry is not empty'(test: [ NOT[ A4'empty'('the final response activity entry') NOT] ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if there is a final question wording entry'
                                                                INVOCATION_NT'if there is a final question wording entry'
                                                                    CONDITION_CONTEXT_NT'there is a final question wording entry'
                                                                        TEST_VALUE_NT'there is a final question wording entry'
                                                                            PHRASE_TO_DECIDE_VALUE_NT'there is a final question wording entry'
                                                                                INVOCATION_LIST_NT'there is a final question wording entry'
                                                                                    INVOCATION_NT'there is a final question wording entry'
                                                                                        LVALUE_TR_CONTEXT_NT'a final question wording entry'
                                                                                            TABLE_ENTRY_NT'a final question wording entry'
                                                                                                CONSTANT_NT-nothing valued table column
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say final question wording entry'
                                                                    INVOCATION_LIST_SAY_NT'final question wording entry'
                                                                        INVOCATION_NT'final question wording entry'
                                                                            RVALUE_CONTEXT_NT'final question wording entry'
                                                                                TABLE_ENTRY_NT'final question wording entry'
                                                                                    CONSTANT_NT-nothing valued table column
                                                                INVOCATION_LIST_NT'decrease named options count by 1'
                                                                    INVOCATION_NT'decrease named options count by 1'
                                                                        LVALUE_CONTEXT_NT'named options count'
                                                                            LOCAL_VARIABLE_NT'named options count'(tmp_0;number)
                                                                        RVALUE_CONTEXT_NT'1'
                                                                            CONSTANT_NT'1'-number
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the named options count is 1'
                                                                        INVOCATION_NT'if the named options count is 1'
                                                                            CONDITION_CONTEXT_NT'named options count is 1'
                                                                                TEST_PROPOSITION_NT'named options count is 1'(test: [ is('named options count', '1') ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT
                                                                            INVOCATION_LIST_NT'if the serial comma option is active'
                                                                                INVOCATION_NT'if the serial comma option is active'
                                                                                    CONDITION_CONTEXT_NT'serial comma option is active'
                                                                                        TEST_PROPOSITION_NT'serial comma option is active'(test: [ A11'active'('serial comma option') ])
                                                                            CODE_BLOCK_NT
                                                                                CODE_BLOCK_NT'say ","'
                                                                                    INVOCATION_LIST_SAY_NT'","'
                                                                                        INVOCATION_NT'","'
                                                                                            RVALUE_CONTEXT_NT'","'
                                                                                                CONSTANT_NT'","'-text
                                                                        CODE_BLOCK_NT'say " or " ( b )'
                                                                            INVOCATION_LIST_SAY_NT'" or " ( b )'
                                                                                INVOCATION_NT'" or " ( b )'
                                                                                    RVALUE_CONTEXT_NT'" or " ( b )'
                                                                                        CONSTANT_NT'" or " ( b )'-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT
                                                                            INVOCATION_LIST_NT'if the named options count is 0'
                                                                                INVOCATION_NT'if the named options count is 0'
                                                                                    CONDITION_CONTEXT_NT'named options count is 0'
                                                                                        TEST_PROPOSITION_NT'named options count is 0'(test: [ is('named options count', '0') ])
                                                                            CODE_BLOCK_NT
                                                                                CODE_BLOCK_NT'say "?[line break]"'
                                                                                    INVOCATION_LIST_SAY_NT'"?"'
                                                                                        INVOCATION_NT'"?"'
                                                                                            RVALUE_CONTEXT_NT'"?"'
                                                                                                CONSTANT_NT'"?"'-text
                                                                                    INVOCATION_LIST_SAY_NT'line break'
                                                                                        INVOCATION_NT'line break'
                                                                            CODE_BLOCK_NT'otherwise'
                                                                                CODE_BLOCK_NT'say ", "'
                                                                                    INVOCATION_LIST_SAY_NT'", "'
                                                                                        INVOCATION_NT'", "'
                                                                                            RVALUE_CONTEXT_NT'", "'
                                                                                                CONSTANT_NT'", "'-text
                        RULE_NT'this is the standard respond to final question rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat through the table of final question options'
                                        INVOCATION_NT'repeat through the table of final question options'
                                            RVALUE_CONTEXT_NT'table of final question options'
                                                CONSTANT_NT'table of final question options'-table name
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the only if victorious entry is false or the story has en'
                                                INVOCATION_NT'if the only if victorious entry is false or the story has en'
                                                    CONDITION_CONTEXT_NT'only if victorious entry is false or the story has ended fin'
                                                        LOGICAL_OR_NT'only if victorious entry is false or the story has ended fin'
                                                            TEST_PROPOSITION_NT'only if victorious entry is false'(test: [ is('only if victorious entry', 'false') ])
                                                            TEST_VALUE_NT'the story has ended finally'
                                                                PHRASE_TO_DECIDE_VALUE_NT'the story has ended finally'
                                                                    INVOCATION_LIST_NT'the story has ended finally'
                                                                        INVOCATION_NT'story has ended finally'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if there is a final response rule entry or the final respons'
                                                        INVOCATION_NT'if there is a final response rule entry or the final respons'
                                                            CONDITION_CONTEXT_NT'there is a final response rule entry or the final response a'
                                                                LOGICAL_OR_NT'there is a final response rule entry or the final response a'
                                                                    TEST_VALUE_NT'there is a final response rule entry'
                                                                        PHRASE_TO_DECIDE_VALUE_NT'there is a final response rule entry'
                                                                            INVOCATION_LIST_NT'there is a final response rule entry'
                                                                                INVOCATION_NT'there is a final response rule entry'
                                                                                    LVALUE_TR_CONTEXT_NT'a final response rule entry'
                                                                                        TABLE_ENTRY_NT'a final response rule entry'
                                                                                            CONSTANT_NT-nothing valued table column
                                                                    TEST_PROPOSITION_NT'the final response activity entry is not empty'(test: [ NOT[ A4'empty'('the final response activity entry') NOT] ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the player's command matches the topic entry'
                                                                INVOCATION_NT'if the player's command matches the topic entry'
                                                                    CONDITION_CONTEXT_NT'player's command matches the topic entry'
                                                                        TEST_VALUE_NT'player's command matches the topic entry'
                                                                            PHRASE_TO_DECIDE_VALUE_NT'player's command matches the topic entry'
                                                                                INVOCATION_LIST_NT'player's command matches the topic entry'
                                                                                    INVOCATION_NT'player's command matches the topic entry'
                                                                                        RVALUE_CONTEXT_NT'player's command'
                                                                                            NONLOCAL_VARIABLE_NT'player's command'('player's command'(var)[snippet])
                                                                                        RVALUE_CONTEXT_NT'topic entry'
                                                                                            TABLE_ENTRY_NT'topic entry'
                                                                                                CONSTANT_NT-nothing valued table column
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if there is a final response rule entry'
                                                                        INVOCATION_NT'if there is a final response rule entry'
                                                                            CONDITION_CONTEXT_NT'there is a final response rule entry'
                                                                                TEST_VALUE_NT'there is a final response rule entry'
                                                                                    PHRASE_TO_DECIDE_VALUE_NT'there is a final response rule entry'
                                                                                        INVOCATION_LIST_NT'there is a final response rule entry'
                                                                                            INVOCATION_NT'there is a final response rule entry'
                                                                                                LVALUE_TR_CONTEXT_NT'a final response rule entry'
                                                                                                    TABLE_ENTRY_NT'a final response rule entry'
                                                                                                        CONSTANT_NT-nothing valued table column
                                                                    CODE_BLOCK_NT
                                                                        INVOCATION_LIST_NT'abide by final response rule entry'
                                                                            INVOCATION_NT'abide by final response rule entry'
                                                                                RVALUE_CONTEXT_NT'final response rule entry'
                                                                                    TABLE_ENTRY_NT'final response rule entry'
                                                                                        CONSTANT_NT-nothing valued table column
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        INVOCATION_LIST_NT'carry out the final response activity entry activity'
                                                                            INVOCATION_NT'carry out the final response activity entry activity'
                                                                                RVALUE_CONTEXT_NT'final response activity entry'
                                                                                    TABLE_ENTRY_NT'final response activity entry'
                                                                                        CONSTANT_NT-nothing valued table column
                                                                INVOCATION_LIST_NT'rule succeeds'
                                                                    INVOCATION_NT'rule succeeds'
                                CODE_BLOCK_NT'say "Please give one of the answers above." ( a )'
                                    INVOCATION_LIST_SAY_NT'"Please give one of the answers above." ( a )'
                                        INVOCATION_NT'"Please give one of the answers above." ( a )'
                                            RVALUE_CONTEXT_NT'"Please give one of the answers above." ( a )'
                                                CONSTANT_NT'"Please give one of the answers above." ( a )'-text
                    HEADING_NT'section 6 - final question options' (level 5)
                        TABLE_NT'table of final question options final question wording only '
                    HEADING_NT'section 7 - locale descriptions - unindexed' (level 5)
                        TABLE_NT'table of locale priorities notable-object ( an object ) loca'
                        RULE_NT'to describe locale for ( o - object )'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'carry out the printing the locale description activity with '
                                    INVOCATION_NT'carry out the printing the locale description activity with '
                                        RVALUE_CONTEXT_NT'printing the locale description'
                                            CONSTANT_NT'printing the locale description'-activity on objects
                                        RVALUE_CONTEXT_NT'o'
                                            LOCAL_VARIABLE_NT'o'(t_0;object)
                        RULE_NT'to set the/-- locale priority of ( o - an object ) to ( n - '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if o is a thing'
                                        INVOCATION_NT'if o is a thing'
                                            CONDITION_CONTEXT_NT'o is a thing'
                                                TEST_PROPOSITION_NT'o is a thing'(test: [ kind=thing('o') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if n <= 0'
                                                INVOCATION_NT'if n <= 0'
                                                    CONDITION_CONTEXT_NT'n <= 0'
                                                        TEST_PROPOSITION_NT'n <= 0'(test: [ at-most('n', '0') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now o is mentioned'
                                                    CONDITION_CONTEXT_NT'o is mentioned'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if there is a notable-object of o in the table of locale pri'
                                                INVOCATION_NT'if there is a notable-object of o in the table of locale pri'
                                                    CONDITION_CONTEXT_NT'there is a notable-object of o in the table of locale priori'
                                                        TEST_VALUE_NT'there is a notable-object of o in the table of locale priori'
                                                            PHRASE_TO_DECIDE_VALUE_NT'there is a notable-object of o in the table of locale priori'
                                                                INVOCATION_LIST_NT'there is a notable-object of o in the table of locale priori'
                                                                    INVOCATION_NT'there is a notable-object of o in the table of locale priori'
                                                                        LVALUE_TR_CONTEXT_NT'a notable-object of o in the table of locale priorities'
                                                                            TABLE_ENTRY_NT'a notable-object of o in the table of locale priorities'
                                                                                CONSTANT_NT-nothing valued table column
                                                                                CONSTANT_NT-nothing valued table column
                                                                                LOCAL_VARIABLE_NT'o'(t_0;object)
                                                                                CONSTANT_NT'the table of locale priorities'-table name
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'choose row with a notable-object of o in the table of locale'
                                                    INVOCATION_NT'choose row with a notable-object of o in the table of locale'
                                                        RVALUE_CONTEXT_NT'a notable-object'
                                                            CONSTANT_NT'a notable-object'-nothing valued table column
                                                        RVALUE_CONTEXT_NT'o'
                                                            LOCAL_VARIABLE_NT'o'(t_0;object)
                                                        RVALUE_CONTEXT_NT'table of locale priorities'
                                                            CONSTANT_NT'table of locale priorities'-table name
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if n <= 0'
                                                        INVOCATION_NT'if n <= 0'
                                                            CONDITION_CONTEXT_NT'n <= 0'
                                                                TEST_PROPOSITION_NT'n <= 0'(test: [ at-most('n', '0') ])
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'blank out the whole row'
                                                            INVOCATION_NT'blank out the whole row'
                                                    CODE_BLOCK_NT'otherwise'
                                                        INVOCATION_LIST_NT'now the locale description priority entry is n'
                                                            CONDITION_CONTEXT_NT'the locale description priority entry is n'
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if n is greater than 0'
                                                        INVOCATION_NT'if n is greater than 0'
                                                            CONDITION_CONTEXT_NT'n is greater than 0'
                                                                TEST_PROPOSITION_NT'n is greater than 0'(test: [ greater-than('n', '0') ])
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'choose a blank row in the table of locale priorities'
                                                            INVOCATION_NT'choose a blank row in the table of locale priorities'
                                                                RVALUE_CONTEXT_NT'table of locale priorities'
                                                                    CONSTANT_NT'table of locale priorities'-table name
                                                        INVOCATION_LIST_NT'now the notable-object entry is o'
                                                            CONDITION_CONTEXT_NT'the notable-object entry is o'
                                                        INVOCATION_LIST_NT'now the locale description priority entry is n'
                                                            CONDITION_CONTEXT_NT'the locale description priority entry is n'
                        SENTENCE_NT'printing the locale description of something ( documented at'
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing the locale description of something ( documented at'
                            PROPER_NOUN_NT'an activity'
                        SENTENCE_NT'the locale paragraph count is a number that varies'
                            VERB_NT'is'
                            PROPER_NOUN_NT'locale paragraph count'
                            COMMON_NOUN_NT'number that varies'
                        RULE_NT'before printing the locale description ( this is the initial'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the locale paragraph count is 0'
                                    CONDITION_CONTEXT_NT'the locale paragraph count is 0'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat through the table of locale priorities'
                                        INVOCATION_NT'repeat through the table of locale priorities'
                                            RVALUE_CONTEXT_NT'table of locale priorities'
                                                CONSTANT_NT'table of locale priorities'-table name
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'blank out the whole row'
                                            INVOCATION_NT'blank out the whole row'
                        RULE_NT'before printing the locale description ( this is the find no'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the domain be the parameter-object'
                                    INVOCATION_NT'let the domain be the parameter-object'
                                        NEW_LOCAL_CONTEXT_NT'domain'
                                            UNKNOWN_NT'domain'
                                        RVALUE_CONTEXT_NT'parameter-object'
                                            NONLOCAL_VARIABLE_NT'parameter-object'('parameter-object'(var)[object])
                                INVOCATION_LIST_NT'carry out the choosing notable locale objects activity with '
                                    INVOCATION_NT'carry out the choosing notable locale objects activity with '
                                        RVALUE_CONTEXT_NT'choosing notable locale objects'
                                            CONSTANT_NT'choosing notable locale objects'-activity on objects
                                        RVALUE_CONTEXT_NT'domain'
                                            LOCAL_VARIABLE_NT'domain'(tmp_0;object)
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing the locale description ( this is the interestin'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the domain be the parameter-object'
                                    INVOCATION_NT'let the domain be the parameter-object'
                                        NEW_LOCAL_CONTEXT_NT'domain'
                                            UNKNOWN_NT'domain'
                                        RVALUE_CONTEXT_NT'parameter-object'
                                            NONLOCAL_VARIABLE_NT'parameter-object'('parameter-object'(var)[object])
                                INVOCATION_LIST_NT'sort the table of locale priorities in locale description pr'
                                    INVOCATION_NT'sort the table of locale priorities in locale description pr'
                                        RVALUE_CONTEXT_NT'table of locale priorities'
                                            CONSTANT_NT'table of locale priorities'-table name
                                        RVALUE_CONTEXT_NT'locale description priority'
                                            CONSTANT_NT'locale description priority'-nothing valued table column
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat through the table of locale priorities'
                                        INVOCATION_NT'repeat through the table of locale priorities'
                                            RVALUE_CONTEXT_NT'table of locale priorities'
                                                CONSTANT_NT'table of locale priorities'-table name
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'carry out the printing a locale paragraph about activity wit'
                                            INVOCATION_NT'carry out the printing a locale paragraph about activity wit'
                                                RVALUE_CONTEXT_NT'printing a locale paragraph about'
                                                    CONSTANT_NT'printing a locale paragraph about'-activity on objects
                                                RVALUE_CONTEXT_NT'notable-object entry'
                                                    TABLE_ENTRY_NT'notable-object entry'
                                                        CONSTANT_NT-nothing valued table column
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing the locale description ( this is the you-can-al'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the domain be the parameter-object'
                                    INVOCATION_NT'let the domain be the parameter-object'
                                        NEW_LOCAL_CONTEXT_NT'domain'
                                            UNKNOWN_NT'domain'
                                        RVALUE_CONTEXT_NT'parameter-object'
                                            NONLOCAL_VARIABLE_NT'parameter-object'('parameter-object'(var)[object])
                                INVOCATION_LIST_NT'let the mentionable count be 0'
                                    INVOCATION_NT'let the mentionable count be 0'
                                        NEW_LOCAL_CONTEXT_NT'mentionable count'
                                            UNKNOWN_NT'mentionable count'
                                        RVALUE_CONTEXT_NT'0'
                                            CONSTANT_NT'0'-number
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat with item running through things'
                                        INVOCATION_NT'repeat with item running through things'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'things'
                                                CONSTANT_NT'things'-description of things
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the item is not marked for listing'
                                            CONDITION_CONTEXT_NT'the item is not marked for listing'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat through the table of locale priorities'
                                        INVOCATION_NT'repeat through the table of locale priorities'
                                            RVALUE_CONTEXT_NT'table of locale priorities'
                                                CONSTANT_NT'table of locale priorities'-table name
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the locale description priority entry is greater than 0'
                                                INVOCATION_NT'if the locale description priority entry is greater than 0'
                                                    CONDITION_CONTEXT_NT'locale description priority entry is greater than 0'
                                                        TEST_PROPOSITION_NT'locale description priority entry is greater than 0'(test: [ greater-than('locale description priority entry', '0') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the notable-object entry is marked for listing'
                                                    CONDITION_CONTEXT_NT'the notable-object entry is marked for listing'
                                        INVOCATION_LIST_NT'increase the mentionable count by 1'
                                            INVOCATION_NT'increase the mentionable count by 1'
                                                LVALUE_CONTEXT_NT'mentionable count'
                                                    LOCAL_VARIABLE_NT'mentionable count'(tmp_1;number)
                                                RVALUE_CONTEXT_NT'1'
                                                    CONSTANT_NT'1'-number
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the mentionable count is greater than 0'
                                        INVOCATION_NT'if the mentionable count is greater than 0'
                                            CONDITION_CONTEXT_NT'mentionable count is greater than 0'
                                                TEST_PROPOSITION_NT'mentionable count is greater than 0'(test: [ greater-than('mentionable count', '0') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'repeat with item running through things'
                                                INVOCATION_NT'repeat with item running through things'
                                                    NEW_LOCAL_CONTEXT_NT'item'
                                                        UNKNOWN_NT'item'
                                                    RVALUE_CONTEXT_NT'things'
                                                        CONSTANT_NT'things'-description of things
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the item is mentioned'
                                                        INVOCATION_NT'if the item is mentioned'
                                                            CONDITION_CONTEXT_NT'item is mentioned'
                                                                TEST_PROPOSITION_NT'item is mentioned'(test: [ A75'mentioned'('item') ])
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'now the item is not marked for listing'
                                                            CONDITION_CONTEXT_NT'the item is not marked for listing'
                                        INVOCATION_LIST_NT'begin the listing nondescript items activity with the domain'
                                            INVOCATION_NT'begin the listing nondescript items activity with the domain'
                                                RVALUE_CONTEXT_NT'listing nondescript items'
                                                    CONSTANT_NT'listing nondescript items'-activity on objects
                                                RVALUE_CONTEXT_NT'domain'
                                                    LOCAL_VARIABLE_NT'domain'(tmp_0;object)
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the number of marked for listing things is 0'
                                                INVOCATION_NT'if the number of marked for listing things is 0'
                                                    CONDITION_CONTEXT_NT'number of marked for listing things is 0'
                                                        TEST_PROPOSITION_NT'number of marked for listing things is 0'(test: [ is('number of marked for listing things', '0') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'abandon the listing nondescript items activity with the doma'
                                                    INVOCATION_NT'abandon the listing nondescript items activity with the doma'
                                                        RVALUE_CONTEXT_NT'listing nondescript items'
                                                            CONSTANT_NT'listing nondescript items'-activity on objects
                                                        RVALUE_CONTEXT_NT'domain'
                                                            LOCAL_VARIABLE_NT'domain'(tmp_0;object)
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if handling the listing nondescript items activity with the '
                                                        INVOCATION_NT'if handling the listing nondescript items activity with the '
                                                            CONDITION_CONTEXT_NT'handling the listing nondescript items activity with the dom'
                                                                TEST_VALUE_NT'handling the listing nondescript items activity with the dom'
                                                                    PHRASE_TO_DECIDE_VALUE_NT'handling the listing nondescript items activity with the dom'
                                                                        INVOCATION_LIST_NT'handling the listing nondescript items activity with the dom'
                                                                            INVOCATION_NT'handling the listing nondescript items activity with the dom'
                                                                                RVALUE_CONTEXT_NT'listing nondescript items'
                                                                                    CONSTANT_NT'listing nondescript items'-activity on objects
                                                                                RVALUE_CONTEXT_NT'domain'
                                                                                    LOCAL_VARIABLE_NT'domain'(tmp_0;object)
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the domain is the location'
                                                                INVOCATION_NT'if the domain is the location'
                                                                    CONDITION_CONTEXT_NT'domain is the location'
                                                                        TEST_PROPOSITION_NT'domain is the location'(test: [ is('domain', 'the location') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say "[We] " ( a )'
                                                                    INVOCATION_LIST_SAY_NT'"[We] " ( a )'
                                                                        INVOCATION_NT'"[We] " ( a )'
                                                                            RVALUE_CONTEXT_NT'"[We] " ( a )'
                                                                                CONSTANT_NT'"[We] " ( a )'-text
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the domain is a supporter or the domain is an animal'
                                                                        INVOCATION_NT'if the domain is a supporter or the domain is an animal'
                                                                            CONDITION_CONTEXT_NT'domain is a supporter or the domain is an animal'
                                                                                LOGICAL_OR_NT'domain is a supporter or the domain is an animal'
                                                                                    TEST_PROPOSITION_NT'domain is a supporter'(test: [ kind=supporter('domain') ])
                                                                                    TEST_PROPOSITION_NT'the domain is an animal'(test: [ kind=animal('the domain') ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT'say "On [the domain] [we] " ( b )'
                                                                            INVOCATION_LIST_SAY_NT'"On [the domain] [we] " ( b )'
                                                                                INVOCATION_NT'"On [the domain] [we] " ( b )'
                                                                                    RVALUE_CONTEXT_NT'"On [the domain] [we] " ( b )'
                                                                                        CONSTANT_NT'"On [the domain] [we] " ( b )'-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT'say "In [the domain] [we] " ( c )'
                                                                            INVOCATION_LIST_SAY_NT'"In [the domain] [we] " ( c )'
                                                                                INVOCATION_NT'"In [the domain] [we] " ( c )'
                                                                                    RVALUE_CONTEXT_NT'"In [the domain] [we] " ( c )'
                                                                                        CONSTANT_NT'"In [the domain] [we] " ( c )'-text
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the locale paragraph count is greater than 0'
                                                                INVOCATION_NT'if the locale paragraph count is greater than 0'
                                                                    CONDITION_CONTEXT_NT'locale paragraph count is greater than 0'
                                                                        TEST_PROPOSITION_NT'locale paragraph count is greater than 0'(test: [ greater-than('locale paragraph count', '0') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say "[regarding the player][can] also see " ( d )'
                                                                    INVOCATION_LIST_SAY_NT'"[regarding the player][can] also see " ( d )'
                                                                        INVOCATION_NT'"[regarding the player][can] also see " ( d )'
                                                                            RVALUE_CONTEXT_NT'"[regarding the player][can] also see " ( d )'
                                                                                CONSTANT_NT'"[regarding the player][can] also see " ( d )'-text
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT'say "[regarding the player][can] see " ( e )'
                                                                    INVOCATION_LIST_SAY_NT'"[regarding the player][can] see " ( e )'
                                                                        INVOCATION_NT'"[regarding the player][can] see " ( e )'
                                                                            RVALUE_CONTEXT_NT'"[regarding the player][can] see " ( e )'
                                                                                CONSTANT_NT'"[regarding the player][can] see " ( e )'-text
                                                        INVOCATION_LIST_NT'let the common holder be nothing'
                                                            INVOCATION_NT'let the common holder be nothing'
                                                                NEW_LOCAL_CONTEXT_NT'common holder'
                                                                    UNKNOWN_NT'common holder'
                                                                RVALUE_CONTEXT_NT'nothing'
                                                                    CONSTANT_NT'nothing'-object(-nothing-)
                                                        INVOCATION_LIST_NT'let contents form of list be true'
                                                            INVOCATION_NT'let contents form of list be true'
                                                                NEW_LOCAL_CONTEXT_NT'contents form of list'
                                                                    UNKNOWN_NT'contents form of list'
                                                                RVALUE_CONTEXT_NT'true'
                                                                    CONSTANT_NT'true'-truth state
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'repeat with list item running through marked for listing thi'
                                                                INVOCATION_NT'repeat with list item running through marked for listing thi'
                                                                    NEW_LOCAL_CONTEXT_NT'list item'
                                                                        UNKNOWN_NT'list item'
                                                                    RVALUE_CONTEXT_NT'marked for listing things'
                                                                        CONSTANT_NT'marked for listing things'-description of things
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the holder of the list item is not the common holder'
                                                                        INVOCATION_NT'if the holder of the list item is not the common holder'
                                                                            CONDITION_CONTEXT_NT'holder of the list item is not the common holder'
                                                                                TEST_PROPOSITION_NT'holder of the list item is not the common holder'(test: [ NOT[ is('holder of the list item', 'the common holder') NOT] ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT
                                                                            INVOCATION_LIST_NT'if the common holder is nothing'
                                                                                INVOCATION_NT'if the common holder is nothing'
                                                                                    CONDITION_CONTEXT_NT'common holder is nothing'
                                                                                        TEST_PROPOSITION_NT'common holder is nothing'(test: [ is('common holder', 'nothing') ])
                                                                            CODE_BLOCK_NT
                                                                                INVOCATION_LIST_NT'now the common holder is the holder of the list item'
                                                                                    CONDITION_CONTEXT_NT'the common holder is the holder of the list item'
                                                                            CODE_BLOCK_NT'otherwise'
                                                                                INVOCATION_LIST_NT'now contents form of list is false'
                                                                                    CONDITION_CONTEXT_NT'contents form of list is false'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the list item is mentioned'
                                                                        INVOCATION_NT'if the list item is mentioned'
                                                                            CONDITION_CONTEXT_NT'list item is mentioned'
                                                                                TEST_PROPOSITION_NT'list item is mentioned'(test: [ A75'mentioned'('list item') ])
                                                                    CODE_BLOCK_NT
                                                                        INVOCATION_LIST_NT'now the list item is not marked for listing'
                                                                            CONDITION_CONTEXT_NT'the list item is not marked for listing'
                                                        INVOCATION_LIST_NT'filter list recursion to unmentioned things'
                                                            INVOCATION_NT'filter list recursion to unmentioned things'
                                                                RVALUE_CONTEXT_NT'unmentioned things'
                                                                    CONSTANT_NT'unmentioned things'-description of things
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if contents form of list is true and the common holder is no'
                                                                INVOCATION_NT'if contents form of list is true and the common holder is no'
                                                                    CONDITION_CONTEXT_NT'contents form of list is true and the common holder is not n'
                                                                        LOGICAL_AND_NT'contents form of list is true and the common holder is not n'
                                                                            TEST_PROPOSITION_NT'contents form of list is true'(test: [ is('contents form of list', 'true') ])
                                                                            TEST_PROPOSITION_NT'the common holder is not nothing'(test: [ NOT[ is('the common holder', 'nothing') NOT] ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'list the contents of the common holder , as a sentence , inc'
                                                                    INVOCATION_NT'list the contents of the common holder'
                                                                        RVALUE_CONTEXT_NT'common holder'
                                                                            LOCAL_VARIABLE_NT'common holder'(tmp_2;object)
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT'say "[a list of marked for listing things including contents'
                                                                    INVOCATION_LIST_SAY_NT'a list of marked for listing things including contents'
                                                                        INVOCATION_NT'a list of marked for listing things including contents'
                                                                            RVALUE_CONTEXT_NT'marked for listing things'
                                                                                CONSTANT_NT'marked for listing things'-description of things
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the domain is the location'
                                                                INVOCATION_NT'if the domain is the location'
                                                                    CONDITION_CONTEXT_NT'domain is the location'
                                                                        TEST_PROPOSITION_NT'domain is the location'(test: [ is('domain', 'the location') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say " here" ( f )'
                                                                    INVOCATION_LIST_SAY_NT'" here" ( f )'
                                                                        INVOCATION_NT'" here" ( f )'
                                                                            RVALUE_CONTEXT_NT'" here" ( f )'
                                                                                CONSTANT_NT'" here" ( f )'-text
                                                        CODE_BLOCK_NT'say ".[paragraph break]"'
                                                            INVOCATION_LIST_SAY_NT'"."'
                                                                INVOCATION_NT'"."'
                                                                    RVALUE_CONTEXT_NT'"."'
                                                                        CONSTANT_NT'"."'-text
                                                            INVOCATION_LIST_SAY_NT'paragraph break'
                                                                INVOCATION_NT'paragraph break'
                                                        INVOCATION_LIST_NT'unfilter list recursion'
                                                            INVOCATION_NT'unfilter list recursion'
                                                INVOCATION_LIST_NT'end the listing nondescript items activity with the domain'
                                                    INVOCATION_NT'end the listing nondescript items activity with the domain'
                                                        RVALUE_CONTEXT_NT'listing nondescript items'
                                                            CONSTANT_NT'listing nondescript items'-activity on objects
                                                        RVALUE_CONTEXT_NT'domain'
                                                            LOCAL_VARIABLE_NT'domain'(tmp_0;object)
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        SENTENCE_NT'choosing notable locale objects of something ( documented at'
                            VERB_NT'is'
                            PROPER_NOUN_NT'choosing notable locale objects of something ( documented at'
                            PROPER_NOUN_NT'an activity'
                        RULE_NT'for choosing notable locale objects ( this is the standard n'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the domain be the parameter-object'
                                    INVOCATION_NT'let the domain be the parameter-object'
                                        NEW_LOCAL_CONTEXT_NT'domain'
                                            UNKNOWN_NT'domain'
                                        RVALUE_CONTEXT_NT'parameter-object'
                                            NONLOCAL_VARIABLE_NT'parameter-object'('parameter-object'(var)[object])
                                INVOCATION_LIST_NT'let the held item be the first thing held by the domain'
                                    INVOCATION_NT'let the held item be the first thing held by the domain'
                                        NEW_LOCAL_CONTEXT_NT'held item'
                                            UNKNOWN_NT'held item'
                                        RVALUE_CONTEXT_NT'first thing held by the domain'
                                            PHRASE_TO_DECIDE_VALUE_NT'first thing held by the domain'
                                                INVOCATION_LIST_NT'first thing held by the domain'
                                                    INVOCATION_NT'first thing held by the domain'
                                                        RVALUE_CONTEXT_NT'domain'
                                                            LOCAL_VARIABLE_NT'domain'(tmp_0;object)
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'while the held item is a thing'
                                        INVOCATION_NT'while the held item is a thing'
                                            CONDITION_CONTEXT_NT'held item is a thing'
                                                TEST_PROPOSITION_NT'held item is a thing'(test: [ kind=thing('held item') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'set the locale priority of the held item to 5'
                                            INVOCATION_NT'set the locale priority of the held item to 5'
                                                RVALUE_CONTEXT_NT'held item'
                                                    LOCAL_VARIABLE_NT'held item'(tmp_1;object)
                                                RVALUE_CONTEXT_NT'5'
                                                    CONSTANT_NT'5'-number
                                        INVOCATION_LIST_NT'now the held item is the next thing held after the held item'
                                            CONDITION_CONTEXT_NT'the held item is the next thing held after the held item'
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        SENTENCE_NT'printing a locale paragraph about something ( documented at '
                            VERB_NT'is'
                            PROPER_NOUN_NT'printing a locale paragraph about something ( documented at '
                            PROPER_NOUN_NT'an activity'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item encloses the player'
                                        INVOCATION_NT'if the item encloses the player'
                                            CONDITION_CONTEXT_NT'item encloses the player'
                                                TEST_PROPOSITION_NT'item encloses the player'(test: [ encloses('item', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'set the locale priority of the item to 0'
                                            INVOCATION_NT'set the locale priority of the item to 0'
                                                RVALUE_CONTEXT_NT'item'
                                                    LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                RVALUE_CONTEXT_NT'0'
                                                    CONSTANT_NT'0'-number
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item is scenery'
                                        INVOCATION_NT'if the item is scenery'
                                            CONDITION_CONTEXT_NT'item is scenery'
                                                TEST_PROPOSITION_NT'item is scenery'(test: [ A67'scenery'('item') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'set the locale priority of the item to 0'
                                            INVOCATION_NT'set the locale priority of the item to 0'
                                                RVALUE_CONTEXT_NT'item'
                                                    LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                RVALUE_CONTEXT_NT'0'
                                                    CONSTANT_NT'0'-number
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item is undescribed'
                                        INVOCATION_NT'if the item is undescribed'
                                            CONDITION_CONTEXT_NT'item is undescribed'
                                                TEST_PROPOSITION_NT'item is undescribed'(test: [ A71'undescribed'('item') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'set the locale priority of the item to 0'
                                            INVOCATION_NT'set the locale priority of the item to 0'
                                                RVALUE_CONTEXT_NT'item'
                                                    LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                RVALUE_CONTEXT_NT'0'
                                                    CONSTANT_NT'0'-number
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item is not mentioned'
                                        INVOCATION_NT'if the item is not mentioned'
                                            CONDITION_CONTEXT_NT'item is not mentioned'
                                                TEST_PROPOSITION_NT'item is not mentioned'(test: [ NOT[ A75'mentioned'('item') NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'set pronouns from the item'
                                            INVOCATION_NT'set pronouns from the item'
                                                RVALUE_CONTEXT_NT'item'
                                                    LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item is not mentioned'
                                        INVOCATION_NT'if the item is not mentioned'
                                            CONDITION_CONTEXT_NT'item is not mentioned'
                                                TEST_PROPOSITION_NT'item is not mentioned'(test: [ NOT[ A75'mentioned'('item') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if a paragraph break is pending'
                                                INVOCATION_NT'if a paragraph break is pending'
                                                    CONDITION_CONTEXT_NT'a paragraph break is pending'
                                                        TEST_VALUE_NT'a paragraph break is pending'
                                                            PHRASE_TO_DECIDE_VALUE_NT'a paragraph break is pending'
                                                                INVOCATION_LIST_NT'a paragraph break is pending'
                                                                    INVOCATION_NT'a paragraph break is pending'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[conditional paragraph break]"'
                                                    INVOCATION_LIST_SAY_NT'conditional paragraph break'
                                                        INVOCATION_NT'conditional paragraph break'
                                        INVOCATION_LIST_NT'carry out the writing a paragraph about activity with the it'
                                            INVOCATION_NT'carry out the writing a paragraph about activity with the it'
                                                RVALUE_CONTEXT_NT'writing a paragraph about'
                                                    CONSTANT_NT'writing a paragraph about'-activity on objects
                                                RVALUE_CONTEXT_NT'item'
                                                    LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if a paragraph break is pending'
                                                INVOCATION_NT'if a paragraph break is pending'
                                                    CONDITION_CONTEXT_NT'a paragraph break is pending'
                                                        TEST_VALUE_NT'a paragraph break is pending'
                                                            PHRASE_TO_DECIDE_VALUE_NT'a paragraph break is pending'
                                                                INVOCATION_LIST_NT'a paragraph break is pending'
                                                                    INVOCATION_NT'a paragraph break is pending'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'increase the locale paragraph count by 1'
                                                    INVOCATION_NT'increase the locale paragraph count by 1'
                                                        LVALUE_CONTEXT_NT'locale paragraph count'
                                                            NONLOCAL_VARIABLE_NT'locale paragraph count'('locale paragraph count'(var)[number])
                                                        RVALUE_CONTEXT_NT'1'
                                                            CONSTANT_NT'1'-number
                                                INVOCATION_LIST_NT'now the item is mentioned'
                                                    CONDITION_CONTEXT_NT'the item is mentioned'
                                                CODE_BLOCK_NT'say "[conditional paragraph break]"'
                                                    INVOCATION_LIST_SAY_NT'conditional paragraph break'
                                                        INVOCATION_NT'conditional paragraph break'
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item is not mentioned'
                                        INVOCATION_NT'if the item is not mentioned'
                                            CONDITION_CONTEXT_NT'item is not mentioned'
                                                TEST_PROPOSITION_NT'item is not mentioned'(test: [ NOT[ A75'mentioned'('item') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the item provides the property initial appearance and the'
                                                INVOCATION_NT'if the item provides the property initial appearance and the'
                                                    CONDITION_CONTEXT_NT'item provides the property initial appearance and the item i'
                                                        LOGICAL_AND_NT'item provides the property initial appearance and the item i'
                                                            TEST_PROPOSITION_NT'item provides the property initial appearance'(test: [ provides('item', 'the property initial appearance') ])
                                                            LOGICAL_AND_NT
                                                                TEST_PROPOSITION_NT'the item is not handled'(test: [ NOT[ A70'handled'('the item') NOT] ])
                                                                TEST_PROPOSITION_NT'the initial appearance of the item is not ""'(test: [ NOT[ is('the initial appearance of the item', '""') NOT] ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'increase the locale paragraph count by 1'
                                                    INVOCATION_NT'increase the locale paragraph count by 1'
                                                        LVALUE_CONTEXT_NT'locale paragraph count'
                                                            NONLOCAL_VARIABLE_NT'locale paragraph count'('locale paragraph count'(var)[number])
                                                        RVALUE_CONTEXT_NT'1'
                                                            CONSTANT_NT'1'-number
                                                CODE_BLOCK_NT'say "[initial appearance of the item]"'
                                                    INVOCATION_LIST_SAY_NT'initial appearance of the item'
                                                        INVOCATION_NT'initial appearance of the item'
                                                            RVALUE_CONTEXT_NT'initial appearance of the item'
                                                                PROPERTY_VALUE_NT'initial appearance of the item'
                                                                    CONSTANT_NT-nothing valued property
                                                                    LOCAL_VARIABLE_NT'the item'(tmp_0;thing)
                                                CODE_BLOCK_NT'say "[paragraph break]"'
                                                    INVOCATION_LIST_SAY_NT'paragraph break'
                                                        INVOCATION_NT'paragraph break'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if a locale-supportable thing is on the item'
                                                        INVOCATION_NT'if a locale-supportable thing is on the item'
                                                            CONDITION_CONTEXT_NT'a locale-supportable thing is on the item'
                                                                TEST_PROPOSITION_NT'a locale-supportable thing is on the item'(test: [ Exists x : kind=thing(x) ^ A41'locale-supportable'(x) ^ is('the item', {<schema: SupporterOf(*1)>:x}) ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'repeat with possibility running through things on the item'
                                                                INVOCATION_NT'repeat with possibility running through things on the item'
                                                                    NEW_LOCAL_CONTEXT_NT'possibility'
                                                                        UNKNOWN_NT'possibility'
                                                                    RVALUE_CONTEXT_NT'things on the item'
                                                                        CONSTANT_NT'things on the item'-description of things
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'now the possibility is marked for listing'
                                                                    CONDITION_CONTEXT_NT'the possibility is marked for listing'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the possibility is mentioned'
                                                                        INVOCATION_NT'if the possibility is mentioned'
                                                                            CONDITION_CONTEXT_NT'possibility is mentioned'
                                                                                TEST_PROPOSITION_NT'possibility is mentioned'(test: [ A75'mentioned'('possibility') ])
                                                                    CODE_BLOCK_NT
                                                                        INVOCATION_LIST_NT'now the possibility is not marked for listing'
                                                                            CONDITION_CONTEXT_NT'the possibility is not marked for listing'
                                                        CODE_BLOCK_NT'say "On [the item] " ( a )'
                                                            INVOCATION_LIST_SAY_NT'"On [the item] " ( a )'
                                                                INVOCATION_NT'"On [the item] " ( a )'
                                                                    RVALUE_CONTEXT_NT'"On [the item] " ( a )'
                                                                        CONSTANT_NT'"On [the item] " ( a )'-text
                                                        INVOCATION_LIST_NT'list the contents of the item , as a sentence , including co'
                                                            INVOCATION_NT'list the contents of the item'
                                                                RVALUE_CONTEXT_NT'item'
                                                                    LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                        CODE_BLOCK_NT'say ".[paragraph break]"'
                                                            INVOCATION_LIST_SAY_NT'"."'
                                                                INVOCATION_NT'"."'
                                                                    RVALUE_CONTEXT_NT'"."'
                                                                        CONSTANT_NT'"."'-text
                                                            INVOCATION_LIST_SAY_NT'paragraph break'
                                                                INVOCATION_NT'paragraph break'
                                                INVOCATION_LIST_NT'now the item is mentioned'
                                                    CONDITION_CONTEXT_NT'the item is mentioned'
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing a locale paragraph about a supporter ( called t'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat with item running through not handled things on the t'
                                        INVOCATION_NT'repeat with item running through not handled things on the t'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'not handled things on the tabletop which provide the propert'
                                                CONSTANT_NT'not handled things on the tabletop which provide the propert'-description of things
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the item is not a person and the initial appearance of th'
                                                INVOCATION_NT'if the item is not a person and the initial appearance of th'
                                                    CONDITION_CONTEXT_NT'item is not a person and the initial appearance of the item '
                                                        LOGICAL_AND_NT'item is not a person and the initial appearance of the item '
                                                            TEST_PROPOSITION_NT'item is not a person'(test: [ NOT[ kind=person('item') NOT] ])
                                                            LOGICAL_AND_NT
                                                                TEST_PROPOSITION_NT'the initial appearance of the item is not ""'(test: [ NOT[ is('the initial appearance of the item', '""') NOT] ])
                                                                TEST_PROPOSITION_NT'the item is not undescribed'(test: [ NOT[ A71'undescribed'('the item') NOT] ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the item is mentioned'
                                                    CONDITION_CONTEXT_NT'the item is mentioned'
                                                CODE_BLOCK_NT'say initial appearance of the item'
                                                    INVOCATION_LIST_SAY_NT'initial appearance of the item'
                                                        INVOCATION_NT'initial appearance of the item'
                                                            RVALUE_CONTEXT_NT'initial appearance of the item'
                                                                PROPERTY_VALUE_NT'initial appearance of the item'
                                                                    CONSTANT_NT-nothing valued property
                                                                    LOCAL_VARIABLE_NT'the item'(tmp_1;thing)
                                                CODE_BLOCK_NT'say paragraph break'
                                                    INVOCATION_LIST_SAY_NT'paragraph break'
                                                        INVOCATION_NT'paragraph break'
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'definition'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item is scenery and the item does not enclose the pla'
                                        INVOCATION_NT'if the item is scenery and the item does not enclose the pla'
                                            CONDITION_CONTEXT_NT'item is scenery and the item does not enclose the player'
                                                LOGICAL_AND_NT'item is scenery and the item does not enclose the player'
                                                    TEST_PROPOSITION_NT'item is scenery'(test: [ A67'scenery'('item') ])
                                                    TEST_PROPOSITION_NT'the item does not enclose the player'(test: [ NOT[ encloses('the item', 'the player') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if a locale-supportable thing is on the item'
                                                INVOCATION_NT'if a locale-supportable thing is on the item'
                                                    CONDITION_CONTEXT_NT'a locale-supportable thing is on the item'
                                                        TEST_PROPOSITION_NT'a locale-supportable thing is on the item'(test: [ Exists x : kind=thing(x) ^ A41'locale-supportable'(x) ^ is('the item', {<schema: SupporterOf(*1)>:x}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'set pronouns from the item'
                                                    INVOCATION_NT'set pronouns from the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'repeat with possibility running through things on the item'
                                                        INVOCATION_NT'repeat with possibility running through things on the item'
                                                            NEW_LOCAL_CONTEXT_NT'possibility'
                                                                UNKNOWN_NT'possibility'
                                                            RVALUE_CONTEXT_NT'things on the item'
                                                                CONSTANT_NT'things on the item'-description of things
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'now the possibility is marked for listing'
                                                            CONDITION_CONTEXT_NT'the possibility is marked for listing'
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the possibility is mentioned'
                                                                INVOCATION_NT'if the possibility is mentioned'
                                                                    CONDITION_CONTEXT_NT'possibility is mentioned'
                                                                        TEST_PROPOSITION_NT'possibility is mentioned'(test: [ A75'mentioned'('possibility') ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'now the possibility is not marked for listing'
                                                                    CONDITION_CONTEXT_NT'the possibility is not marked for listing'
                                                INVOCATION_LIST_NT'increase the locale paragraph count by 1'
                                                    INVOCATION_NT'increase the locale paragraph count by 1'
                                                        LVALUE_CONTEXT_NT'locale paragraph count'
                                                            NONLOCAL_VARIABLE_NT'locale paragraph count'('locale paragraph count'(var)[number])
                                                        RVALUE_CONTEXT_NT'1'
                                                            CONSTANT_NT'1'-number
                                                CODE_BLOCK_NT'say "On [the item] " ( a )'
                                                    INVOCATION_LIST_SAY_NT'"On [the item] " ( a )'
                                                        INVOCATION_NT'"On [the item] " ( a )'
                                                            RVALUE_CONTEXT_NT'"On [the item] " ( a )'
                                                                CONSTANT_NT'"On [the item] " ( a )'-text
                                                INVOCATION_LIST_NT'list the contents of the item , as a sentence , including co'
                                                    INVOCATION_NT'list the contents of the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                CODE_BLOCK_NT'say ".[paragraph break]"'
                                                    INVOCATION_LIST_SAY_NT'"."'
                                                        INVOCATION_NT'"."'
                                                            RVALUE_CONTEXT_NT'"."'
                                                                CONSTANT_NT'"."'-text
                                                    INVOCATION_LIST_SAY_NT'paragraph break'
                                                        INVOCATION_NT'paragraph break'
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                        RULE_NT'for printing a locale paragraph about a thing ( called the i'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the item is mentioned and the item is not undescribed and'
                                        INVOCATION_NT'if the item is mentioned and the item is not undescribed and'
                                            CONDITION_CONTEXT_NT'item is mentioned and the item is not undescribed and the it'
                                                LOGICAL_AND_NT'item is mentioned and the item is not undescribed and the it'
                                                    TEST_PROPOSITION_NT'item is mentioned'(test: [ A75'mentioned'('item') ])
                                                    LOGICAL_AND_NT
                                                        TEST_PROPOSITION_NT'the item is not undescribed'(test: [ NOT[ A71'undescribed'('the item') NOT] ])
                                                        LOGICAL_AND_NT
                                                            TEST_PROPOSITION_NT'the item is not scenery'(test: [ NOT[ A67'scenery'('the item') NOT] ])
                                                            TEST_PROPOSITION_NT'the item does not enclose the player'(test: [ NOT[ encloses('the item', 'the player') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if a locale-supportable thing is on the item'
                                                INVOCATION_NT'if a locale-supportable thing is on the item'
                                                    CONDITION_CONTEXT_NT'a locale-supportable thing is on the item'
                                                        TEST_PROPOSITION_NT'a locale-supportable thing is on the item'(test: [ Exists x : kind=thing(x) ^ A41'locale-supportable'(x) ^ is('the item', {<schema: SupporterOf(*1)>:x}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'set pronouns from the item'
                                                    INVOCATION_NT'set pronouns from the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'repeat with possibility running through things on the item'
                                                        INVOCATION_NT'repeat with possibility running through things on the item'
                                                            NEW_LOCAL_CONTEXT_NT'possibility'
                                                                UNKNOWN_NT'possibility'
                                                            RVALUE_CONTEXT_NT'things on the item'
                                                                CONSTANT_NT'things on the item'-description of things
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'now the possibility is marked for listing'
                                                            CONDITION_CONTEXT_NT'the possibility is marked for listing'
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the possibility is mentioned'
                                                                INVOCATION_NT'if the possibility is mentioned'
                                                                    CONDITION_CONTEXT_NT'possibility is mentioned'
                                                                        TEST_PROPOSITION_NT'possibility is mentioned'(test: [ A75'mentioned'('possibility') ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'now the possibility is not marked for listing'
                                                                    CONDITION_CONTEXT_NT'the possibility is not marked for listing'
                                                INVOCATION_LIST_NT'increase the locale paragraph count by 1'
                                                    INVOCATION_NT'increase the locale paragraph count by 1'
                                                        LVALUE_CONTEXT_NT'locale paragraph count'
                                                            NONLOCAL_VARIABLE_NT'locale paragraph count'('locale paragraph count'(var)[number])
                                                        RVALUE_CONTEXT_NT'1'
                                                            CONSTANT_NT'1'-number
                                                CODE_BLOCK_NT'say "On [the item] " ( a )'
                                                    INVOCATION_LIST_SAY_NT'"On [the item] " ( a )'
                                                        INVOCATION_NT'"On [the item] " ( a )'
                                                            RVALUE_CONTEXT_NT'"On [the item] " ( a )'
                                                                CONSTANT_NT'"On [the item] " ( a )'-text
                                                INVOCATION_LIST_NT'list the contents of the item , as a sentence , including co'
                                                    INVOCATION_NT'list the contents of the item'
                                                        RVALUE_CONTEXT_NT'item'
                                                            LOCAL_VARIABLE_NT'item'(tmp_0;thing)
                                                CODE_BLOCK_NT'say ".[paragraph break]"'
                                                    INVOCATION_LIST_SAY_NT'"."'
                                                        INVOCATION_NT'"."'
                                                            RVALUE_CONTEXT_NT'"."'
                                                                CONSTANT_NT'"."'-text
                                                    INVOCATION_LIST_SAY_NT'paragraph break'
                                                        INVOCATION_NT'paragraph break'
                                INVOCATION_LIST_NT'continue the activity'
                                    INVOCATION_NT'continue the activity'
                HEADING_NT'part five - actions' (level 3)
                    HEADING_NT'section 1 - verbs needed for adaptive text' (level 5)
                        SENTENCE_NT'to achieve is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to achieve'
                        SENTENCE_NT'to appreciate is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to appreciate'
                        SENTENCE_NT'to arrive is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to arrive'
                        SENTENCE_NT'to care is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to care'
                        SENTENCE_NT'to close is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to close'
                        SENTENCE_NT'to die is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to die'
                        SENTENCE_NT'to discover is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to discover'
                        SENTENCE_NT'to drop is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to drop'
                        SENTENCE_NT'to eat is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to eat'
                        SENTENCE_NT'to feel is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to feel'
                        SENTENCE_NT'to find is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to find'
                        SENTENCE_NT'to get is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to get'
                        SENTENCE_NT'to give is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to give'
                        SENTENCE_NT'to go is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to go'
                        SENTENCE_NT'to happen is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to happen'
                        SENTENCE_NT'to hear is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to hear'
                        SENTENCE_NT'to jump is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to jump'
                        SENTENCE_NT'to lack is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to lack'
                        SENTENCE_NT'to lead is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to lead'
                        SENTENCE_NT'to like is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to like'
                        SENTENCE_NT'to listen is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to listen'
                        SENTENCE_NT'to lock is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to lock'
                        SENTENCE_NT'to look is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to look'
                        SENTENCE_NT'to need is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to need'
                        SENTENCE_NT'to open is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to open'
                        SENTENCE_NT'to pass is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to pass'
                        SENTENCE_NT'to pick is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to pick'
                        SENTENCE_NT'to provoke is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to provoke'
                        SENTENCE_NT'to pull is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to pull'
                        SENTENCE_NT'to push is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to push'
                        SENTENCE_NT'to put is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to put'
                        SENTENCE_NT'to rub is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to rub'
                        SENTENCE_NT'to say is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to say'
                        SENTENCE_NT'to search is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to search'
                        SENTENCE_NT'to see is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to see'
                        SENTENCE_NT'to seem is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to seem'
                        SENTENCE_NT'to set is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to set'
                        SENTENCE_NT'to smell is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to smell'
                        SENTENCE_NT'to sniff is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to sniff'
                        SENTENCE_NT'to squeeze is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to squeeze'
                        SENTENCE_NT'to switch is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to switch'
                        SENTENCE_NT'to take is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to take'
                        SENTENCE_NT'to talk is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to talk'
                        SENTENCE_NT'to taste is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to taste'
                        SENTENCE_NT'to touch is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to touch'
                        SENTENCE_NT'to turn is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to turn'
                        SENTENCE_NT'to wait is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to wait'
                        SENTENCE_NT'to wave is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to wave'
                        SENTENCE_NT'to win is a verb'
                            VERB_NT'is'
                            PROPER_NOUN_NT'to win'
                    HEADING_NT'section 2 - standard actions concerning the actor's possessi' (level 5)
                        SENTENCE_NT'taking inventory is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'taking inventory'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the taking inventory action translates into i6 as Inv'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'taking inventory action'
                            PROPER_NOUN_NT'Inv'
                        SENTENCE_NT'the specification of the taking inventory action is Taking a'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the taking inventory action'
                                PROPER_NOUN_NT'taking inventory action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Taking an inventory of
                            one's immediate possessions: the thin'
                        RULE_NT'carry out taking inventory ( this is the print empty invento'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the first thing held by the player is nothing'
                                        INVOCATION_NT'if the first thing held by the player is nothing'
                                            CONDITION_CONTEXT_NT'first thing held by the player is nothing'
                                                TEST_PROPOSITION_NT'first thing held by the player is nothing'(test: [ is('first thing held by the player', 'nothing') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [are] carrying nothing." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [are] carrying nothing." ( a )'
                                                INVOCATION_NT'"[We] [are] carrying nothing." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [are] carrying nothing." ( a )'
                                                        CONSTANT_NT'"[We] [are] carrying nothing." ( a )'-text
                                        CODE_BLOCK_NT
                        RULE_NT'carry out taking inventory ( this is the print standard inve'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say "[We] [are] carrying:[line break]" ( a )'
                                    INVOCATION_LIST_SAY_NT'"[We] [are] carrying:[line break]" ( a )'
                                        INVOCATION_NT'"[We] [are] carrying:[line break]" ( a )'
                                            RVALUE_CONTEXT_NT'"[We] [are] carrying:[line break]" ( a )'
                                                CONSTANT_NT'"[We] [are] carrying:[line break]" ( a )'-text
                                INVOCATION_LIST_NT'list the contents of the player , with newlines , indented ,'
                                    INVOCATION_NT'list the contents of the player'
                                        RVALUE_CONTEXT_NT'player'
                                            NONLOCAL_VARIABLE_NT'player'('player'(var)[person])
                        RULE_NT'report an actor taking inventory ( this is the report other '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not the player and the action is not silent'
                                        INVOCATION_NT'if the actor is not the player and the action is not silent'
                                            CONDITION_CONTEXT_NT'actor is not the player and the action is not silent'
                                                LOGICAL_AND_NT'actor is not the player and the action is not silent'
                                                    TEST_PROPOSITION_NT'actor is not the player'(test: [ NOT[ is('actor', 'the player') NOT] ])
                                                    TEST_VALUE_NT'the action is not silent'
                                                        PHRASE_TO_DECIDE_VALUE_NT'the action is not silent'
                                                            INVOCATION_LIST_NT'the action is not silent'
                                                                INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [look] through [their] possessions." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [look] through [their] possessions." ( a )'
                                                INVOCATION_NT'"[The actor] [look] through [their] possessions." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [look] through [their] possessions." ( a )'
                                                        CONSTANT_NT'"[The actor] [look] through [their] possessions." ( a )'-text
                        SENTENCE_NT'taking is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'taking'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the taking action translates into i6 as Take'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'taking action'
                            PROPER_NOUN_NT'Take'
                        SENTENCE_NT'the specification of the taking action is The taking action '
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the taking action'
                                PROPER_NOUN_NT'taking action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The taking action is the only way
                            an action in the Standard '
                        RULE_NT'check an actor taking ( this is the can't take yourself rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the noun'
                                        INVOCATION_NT'if the actor is the noun'
                                            CONDITION_CONTEXT_NT'actor is the noun'
                                                TEST_PROPOSITION_NT'actor is the noun'(test: [ is('actor', 'the noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [are] always self-possessed." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [are] always self-possessed." ( a )'
                                                        INVOCATION_NT'"[We] [are] always self-possessed." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [are] always self-possessed." ( a )'
                                                                CONSTANT_NT'"[We] [are] always self-possessed." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't take other people '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a person'
                                        INVOCATION_NT'if the noun is a person'
                                            CONDITION_CONTEXT_NT'noun is a person'
                                                TEST_PROPOSITION_NT'noun is a person'(test: [ kind=person('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "I don't suppose [the noun] [would care] for that." ( a '
                                                    INVOCATION_LIST_SAY_NT'"I don't suppose [the noun] [would care] for that." ( a )'
                                                        INVOCATION_NT'"I don't suppose [the noun] [would care] for that." ( a )'
                                                            RVALUE_CONTEXT_NT'"I don't suppose [the noun] [would care] for that." ( a )'
                                                                CONSTANT_NT'"I don't suppose [the noun] [would care] for that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't take component par'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is part of something ( called the whole )'
                                        INVOCATION_NT'if the noun is part of something ( called the whole )'
                                            CONDITION_CONTEXT_NT'noun is part of something ( called the whole )'
                                                TEST_PROPOSITION_NT'noun is part of something ( called the whole )'(test: [ kind=thing_c({<schema: (*1.component_parent)>:'noun'}) ^ called='whole'(thing)({<schema: (*1.component_parent)>:'noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][Those] [seem] to be a part of [the'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][Those] [seem] to be a part of [the who'
                                                        INVOCATION_NT'"[regarding the noun][Those] [seem] to be a part of [the who'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][Those] [seem] to be a part of [the who'
                                                                CONSTANT_NT'"[regarding the noun][Those] [seem] to be a part of [the who'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't take people's poss'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the local ceiling be the common ancestor of the actor wi'
                                    INVOCATION_NT'let the local ceiling be the common ancestor of the actor wi'
                                        NEW_LOCAL_CONTEXT_NT'local ceiling'
                                            UNKNOWN_NT'local ceiling'
                                        RVALUE_CONTEXT_NT'common ancestor of the actor with the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'common ancestor of the actor with the noun'
                                                INVOCATION_LIST_NT'common ancestor of the actor with the noun'
                                                    INVOCATION_NT'common ancestor of the actor with the noun'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_NT'let the owner be the not-counting-parts holder of the noun'
                                    INVOCATION_NT'let the owner be the not-counting-parts holder of the noun'
                                        NEW_LOCAL_CONTEXT_NT'owner'
                                            UNKNOWN_NT'owner'
                                        RVALUE_CONTEXT_NT'not-counting-parts holder of the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'not-counting-parts holder of the noun'
                                                INVOCATION_LIST_NT'not-counting-parts holder of the noun'
                                                    INVOCATION_NT'not-counting-parts holder of the noun'
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'while the owner is not nothing and the owner is not the loca'
                                        INVOCATION_NT'while the owner is not nothing and the owner is not the loca'
                                            CONDITION_CONTEXT_NT'owner is not nothing and the owner is not the local ceiling'
                                                LOGICAL_AND_NT'owner is not nothing and the owner is not the local ceiling'
                                                    TEST_PROPOSITION_NT'owner is not nothing'(test: [ NOT[ is('owner', 'nothing') NOT] ])
                                                    TEST_PROPOSITION_NT'the owner is not the local ceiling'(test: [ NOT[ is('the owner', 'the local ceiling') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the owner is a person'
                                                INVOCATION_NT'if the owner is a person'
                                                    CONDITION_CONTEXT_NT'owner is a person'
                                                        TEST_PROPOSITION_NT'owner is a person'(test: [ kind=person('owner') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the actor is the player'
                                                        INVOCATION_NT'if the actor is the player'
                                                            CONDITION_CONTEXT_NT'actor is the player'
                                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[regarding the noun][Those] [seem] to belong to [the ow'
                                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'
                                                                INVOCATION_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'
                                                                    RVALUE_CONTEXT_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'
                                                                        CONSTANT_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'-text
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                                        INVOCATION_LIST_NT'let the owner be the not-counting-parts holder of the owner'
                                            INVOCATION_NT'let the owner be the not-counting-parts holder of the owner'
                                                LVALUE_LOCAL_CONTEXT_NT'owner'
                                                    LOCAL_VARIABLE_NT'owner'(tmp_1;object)
                                                RVALUE_CONTEXT_NT'not-counting-parts holder of the owner'
                                                    PHRASE_TO_DECIDE_VALUE_NT'not-counting-parts holder of the owner'
                                                        INVOCATION_LIST_NT'not-counting-parts holder of the owner'
                                                            INVOCATION_NT'not-counting-parts holder of the owner'
                                                                RVALUE_CONTEXT_NT'owner'
                                                                    LOCAL_VARIABLE_NT'owner'(tmp_1;object)
                        RULE_NT'check an actor taking ( this is the can't take items out of '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let h be the noun'
                                    INVOCATION_NT'let h be the noun'
                                        NEW_LOCAL_CONTEXT_NT'h'
                                            UNKNOWN_NT'h'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'while h is not nothing and h is not a room'
                                        INVOCATION_NT'while h is not nothing and h is not a room'
                                            CONDITION_CONTEXT_NT'h is not nothing and h is not a room'
                                                LOGICAL_AND_NT'h is not nothing and h is not a room'
                                                    TEST_PROPOSITION_NT'h is not nothing'(test: [ NOT[ is('h', 'nothing') NOT] ])
                                                    TEST_PROPOSITION_NT'h is not a room'(test: [ NOT[ kind=room('h') NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'let h be the not-counting-parts holder of h'
                                            INVOCATION_NT'let h be the not-counting-parts holder of h'
                                                LVALUE_LOCAL_CONTEXT_NT'h'
                                                    LOCAL_VARIABLE_NT'h'(tmp_0;object)
                                                RVALUE_CONTEXT_NT'not-counting-parts holder of h'
                                                    PHRASE_TO_DECIDE_VALUE_NT'not-counting-parts holder of h'
                                                        INVOCATION_LIST_NT'not-counting-parts holder of h'
                                                            INVOCATION_NT'not-counting-parts holder of h'
                                                                RVALUE_CONTEXT_NT'h'
                                                                    LOCAL_VARIABLE_NT'h'(tmp_0;object)
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if h is nothing'
                                        INVOCATION_NT'if h is nothing'
                                            CONDITION_CONTEXT_NT'h is nothing'
                                                TEST_PROPOSITION_NT'h is nothing'(test: [ is('h', 'nothing') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][Those] [aren't] available." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][Those] [aren't] available." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][Those] [aren't] available." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][Those] [aren't] available." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][Those] [aren't] available." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't take what you're i'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the local ceiling be the common ancestor of the actor wi'
                                    INVOCATION_NT'let the local ceiling be the common ancestor of the actor wi'
                                        NEW_LOCAL_CONTEXT_NT'local ceiling'
                                            UNKNOWN_NT'local ceiling'
                                        RVALUE_CONTEXT_NT'common ancestor of the actor with the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'common ancestor of the actor with the noun'
                                                INVOCATION_LIST_NT'common ancestor of the actor with the noun'
                                                    INVOCATION_NT'common ancestor of the actor with the noun'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the local ceiling is the noun'
                                        INVOCATION_NT'if the local ceiling is the noun'
                                            CONDITION_CONTEXT_NT'local ceiling is the noun'
                                                TEST_PROPOSITION_NT'local ceiling is the noun'(test: [ is('local ceiling', 'the noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [would have] to get
                                                [if noun is a supporter]off[ot'
                                                    INVOCATION_LIST_SAY_NT'"[We] [would have] to get
                                                    [if noun is a supporter]off[otherw'
                                                        INVOCATION_NT'"[We] [would have] to get
                                                        [if noun is a supporter]off[otherw'
                                                            RVALUE_CONTEXT_NT'"[We] [would have] to get
                                                            [if noun is a supporter]off[otherw'
                                                                CONSTANT_NT'"[We] [would have] to get
                                                                [if noun is a supporter]off[otherw'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't take what's alread'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is carrying the noun or the actor is wearing th'
                                        INVOCATION_NT'if the actor is carrying the noun or the actor is wearing th'
                                            CONDITION_CONTEXT_NT'actor is carrying the noun or the actor is wearing the noun'
                                                LOGICAL_OR_NT'actor is carrying the noun or the actor is wearing the noun'
                                                    TEST_PROPOSITION_NT'actor is carrying the noun'(test: [ is('actor', {<schema: CarrierOf(*1)>:'the noun'}) ])
                                                    TEST_PROPOSITION_NT'the actor is wearing the noun'(test: [ is('the actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] already [have] [regarding the noun][those]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] already [have] [regarding the noun][those]." ( a )'
                                                        INVOCATION_NT'"[We] already [have] [regarding the noun][those]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] already [have] [regarding the noun][those]." ( a )'
                                                                CONSTANT_NT'"[We] already [have] [regarding the noun][those]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't take scenery rule '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is scenery'
                                        INVOCATION_NT'if the noun is scenery'
                                            CONDITION_CONTEXT_NT'noun is scenery'
                                                TEST_PROPOSITION_NT'noun is scenery'(test: [ A67'scenery'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] hardly portable." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] hardly portable." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They're] hardly portable." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] hardly portable." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They're] hardly portable." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can only take things rul'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not a thing'
                                        INVOCATION_NT'if the noun is not a thing'
                                            CONDITION_CONTEXT_NT'noun is not a thing'
                                                TEST_PROPOSITION_NT'noun is not a thing'(test: [ NOT[ kind=thing('noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [cannot] carry [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [cannot] carry [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [cannot] carry [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [cannot] carry [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [cannot] carry [the noun]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't take what's fixed '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is fixed in place'
                                        INVOCATION_NT'if the noun is fixed in place'
                                            CONDITION_CONTEXT_NT'noun is fixed in place'
                                                TEST_PROPOSITION_NT'noun is fixed in place'(test: [ A65'fixed in place'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] fixed in place." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] fixed in place." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They're] fixed in place." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] fixed in place." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They're] fixed in place." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the use player's holdall to '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the number of things carried by the actor is at least the'
                                        INVOCATION_NT'if the number of things carried by the actor is at least the'
                                            CONDITION_CONTEXT_NT'number of things carried by the actor is at least the carryi'
                                                TEST_PROPOSITION_NT'number of things carried by the actor is at least the carryi'(test: [ at-least('number of things carried by the actor', 'the carrying capacity of the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is holding a player's holdall ( called the curr'
                                                INVOCATION_NT'if the actor is holding a player's holdall ( called the curr'
                                                    CONDITION_CONTEXT_NT'actor is holding a player's holdall ( called the current wor'
                                                        TEST_PROPOSITION_NT'actor is holding a player's holdall ( called the current wor'(test: [ Exists x : kind=player's holdall(x) ^ called='current working sack'(player's holdall)(x) ^ is('actor', {<schema: HolderOf(*1)>:x}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'let the transferred item be nothing'
                                                    INVOCATION_NT'let the transferred item be nothing'
                                                        NEW_LOCAL_CONTEXT_NT'transferred item'
                                                            UNKNOWN_NT'transferred item'
                                                        RVALUE_CONTEXT_NT'nothing'
                                                            CONSTANT_NT'nothing'-object(-nothing-)
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'repeat with the possible item running through things carried'
                                                        INVOCATION_NT'repeat with the possible item running through things carried'
                                                            NEW_LOCAL_CONTEXT_NT'possible item'
                                                                UNKNOWN_NT'possible item'
                                                            RVALUE_CONTEXT_NT'things carried by the actor'
                                                                CONSTANT_NT'things carried by the actor'-description of things
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the possible item is not lit and the possible item is not'
                                                                INVOCATION_NT'if the possible item is not lit and the possible item is not'
                                                                    CONDITION_CONTEXT_NT'possible item is not lit and the possible item is not the cu'
                                                                        LOGICAL_AND_NT'possible item is not lit and the possible item is not the cu'
                                                                            TEST_PROPOSITION_NT'possible item is not lit'(test: [ NOT[ A61'lit'('possible item') NOT] ])
                                                                            TEST_PROPOSITION_NT'the possible item is not the current working sack'(test: [ NOT[ is('the possible item', 'the current working sack') NOT] ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'let the transferred item be the possible item'
                                                                    INVOCATION_NT'let the transferred item be the possible item'
                                                                        LVALUE_LOCAL_CONTEXT_NT'transferred item'
                                                                            LOCAL_VARIABLE_NT'transferred item'(tmp_1;object)
                                                                        RVALUE_CONTEXT_NT'possible item'
                                                                            LOCAL_VARIABLE_NT'possible item'(tmp_2;thing)
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the transferred item is not nothing'
                                                        INVOCATION_NT'if the transferred item is not nothing'
                                                            CONDITION_CONTEXT_NT'transferred item is not nothing'
                                                                TEST_PROPOSITION_NT'transferred item is not nothing'(test: [ NOT[ is('transferred item', 'nothing') NOT] ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the actor is the player'
                                                                INVOCATION_NT'if the actor is the player'
                                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say "(putting [the transferred item] into [the current worki'
                                                                    INVOCATION_LIST_SAY_NT'"(putting [the transferred item] into [the current working s'
                                                                        INVOCATION_NT'"(putting [the transferred item] into [the current working s'
                                                                            RVALUE_CONTEXT_NT'"(putting [the transferred item] into [the current working s'
                                                                                CONSTANT_NT'"(putting [the transferred item] into [the current working s'-text
                                                        INVOCATION_LIST_NT'silently try the actor trying inserting the transferred item'
                                                            INVOCATION_NT'silently try the actor trying inserting the transferred item'
                                                                RVALUE_CONTEXT_NT'actor trying inserting the transferred item into the current'
                                                                    CONSTANT_NT'actor trying inserting the transferred item into the current'-action
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the transferred item is not in the current working sack'
                                                                INVOCATION_NT'if the transferred item is not in the current working sack'
                                                                    CONDITION_CONTEXT_NT'transferred item is not in the current working sack'
                                                                        TEST_PROPOSITION_NT'transferred item is not in the current working sack'(test: [ NOT[ is('the current working sack', {<schema: ContainerOf(*1)>:'transferred item'}) NOT] ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'stop the action'
                                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking ( this is the can't exceed carrying ca'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the number of things carried by the actor is at least the'
                                        INVOCATION_NT'if the number of things carried by the actor is at least the'
                                            CONDITION_CONTEXT_NT'number of things carried by the actor is at least the carryi'
                                                TEST_PROPOSITION_NT'number of things carried by the actor is at least the carryi'(test: [ at-least('number of things carried by the actor', 'the carrying capacity of the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We]['re] carrying too many things already." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We]['re] carrying too many things already." ( a )'
                                                        INVOCATION_NT'"[We]['re] carrying too many things already." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We]['re] carrying too many things already." ( a )'
                                                                CONSTANT_NT'"[We]['re] carrying too many things already." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor taking ( this is the standard taking rule'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the actor carries the noun'
                                    CONDITION_CONTEXT_NT'the actor carries the noun'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the noun is handled'
                                            CONDITION_CONTEXT_NT'the noun is handled'
                        RULE_NT'report an actor taking ( this is the standard report taking '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Taken." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Taken." ( a )'
                                                        INVOCATION_NT'"Taken." ( a )'
                                                            RVALUE_CONTEXT_NT'"Taken." ( a )'
                                                                CONSTANT_NT'"Taken." ( a )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The actor] [pick] up [the noun]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [pick] up [the noun]." ( b )'
                                                        INVOCATION_NT'"[The actor] [pick] up [the noun]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [pick] up [the noun]." ( b )'
                                                                CONSTANT_NT'"[The actor] [pick] up [the noun]." ( b )'-text
                        SENTENCE_NT'removing it from is an action applying to two things'
                            VERB_NT'is'
                            PROPER_NOUN_NT'removing it from'
                            PROPER_NOUN_NT'applying to two things'
                        SENTENCE_NT'the removing it from action translates into i6 as Remove'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'removing it from action'
                            PROPER_NOUN_NT'Remove'
                        SENTENCE_NT'the specification of the removing it from action is Removing'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the removing it from action'
                                PROPER_NOUN_NT'removing it from action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Removing is not really
                            an action in its own right. Whereas t'
                        RULE_NT'check an actor removing something from ( this is the can't r'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the holder of the noun is not the second noun'
                                        INVOCATION_NT'if the holder of the noun is not the second noun'
                                            CONDITION_CONTEXT_NT'holder of the noun is not the second noun'
                                                TEST_PROPOSITION_NT'holder of the noun is not the second noun'(test: [ NOT[ is('holder of the noun', 'the second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "But [regarding the noun][they] [aren't] there now." ( a'
                                                    INVOCATION_LIST_SAY_NT'"But [regarding the noun][they] [aren't] there now." ( a )'
                                                        INVOCATION_NT'"But [regarding the noun][they] [aren't] there now." ( a )'
                                                            RVALUE_CONTEXT_NT'"But [regarding the noun][they] [aren't] there now." ( a )'
                                                                CONSTANT_NT'"But [regarding the noun][they] [aren't] there now." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor removing something from ( this is the can't r'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the owner be the holder of the noun'
                                    INVOCATION_NT'let the owner be the holder of the noun'
                                        NEW_LOCAL_CONTEXT_NT'owner'
                                            UNKNOWN_NT'owner'
                                        RVALUE_CONTEXT_NT'holder of the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'holder of the noun'
                                                INVOCATION_LIST_NT'holder of the noun'
                                                    INVOCATION_NT'holder of the noun'
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the owner is a person'
                                        INVOCATION_NT'if the owner is a person'
                                            CONDITION_CONTEXT_NT'owner is a person'
                                                TEST_PROPOSITION_NT'owner is a person'(test: [ kind=person('owner') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the owner is the actor'
                                                INVOCATION_NT'if the owner is the actor'
                                                    CONDITION_CONTEXT_NT'owner is the actor'
                                                        TEST_PROPOSITION_NT'owner is the actor'(test: [ is('owner', 'the actor') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'convert to the taking off action on the noun'
                                                    INVOCATION_NT'convert to the taking off action on the noun'
                                                        RVALUE_CONTEXT_NT'taking off action'
                                                            CONSTANT_NT'taking off action'-action name
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][Those] [seem] to belong to [the ow'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'
                                                        INVOCATION_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'
                                                                CONSTANT_NT'"[regarding the noun][Those] [seem] to belong to [the owner]'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor removing something from ( this is the convert'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'convert to the taking action on the noun'
                                    INVOCATION_NT'convert to the taking action on the noun'
                                        RVALUE_CONTEXT_NT'taking action'
                                            CONSTANT_NT'taking action'-action name
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        SENTENCE_NT'the can't take component parts rule is listed before the can'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the can't take component parts rule'
                            PROPER_NOUN_NT'before the can't remove what's not inside rule in the check '
                        SENTENCE_NT'dropping is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'dropping'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the dropping action translates into i6 as Drop'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'dropping action'
                            PROPER_NOUN_NT'Drop'
                        SENTENCE_NT'the specification of the dropping action is Dropping is one '
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the dropping action'
                                PROPER_NOUN_NT'dropping action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Dropping is one of five actions
                            by which an actor can get ri'
                        RULE_NT'check an actor dropping ( this is the can't drop yourself ru'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is the actor'
                                        INVOCATION_NT'if the noun is the actor'
                                            CONDITION_CONTEXT_NT'noun is the actor'
                                                TEST_PROPOSITION_NT'noun is the actor'(test: [ is('noun', 'the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [lack] the dexterity." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [lack] the dexterity." ( a )'
                                                        INVOCATION_NT'"[We] [lack] the dexterity." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [lack] the dexterity." ( a )'
                                                                CONSTANT_NT'"[We] [lack] the dexterity." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor dropping something which is part of the actor'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [can't drop] part of [ourselves]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [can't drop] part of [ourselves]." ( a )'
                                                INVOCATION_NT'"[We] [can't drop] part of [ourselves]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [can't drop] part of [ourselves]." ( a )'
                                                        CONSTANT_NT'"[We] [can't drop] part of [ourselves]." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor dropping ( this is the can't drop what's alre'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is in the holder of the actor'
                                        INVOCATION_NT'if the noun is in the holder of the actor'
                                            CONDITION_CONTEXT_NT'noun is in the holder of the actor'
                                                TEST_PROPOSITION_NT'noun is in the holder of the actor'(test: [ is('the holder of the actor', {<schema: ContainerOf(*1)>:'noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [are] already here." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [are] already here." ( a )'
                                                        INVOCATION_NT'"[The noun] [are] already here." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [are] already here." ( a )'
                                                                CONSTANT_NT'"[The noun] [are] already here." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor dropping ( this is the can't drop what's not '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is carrying the noun'
                                        INVOCATION_NT'if the actor is carrying the noun'
                                            CONDITION_CONTEXT_NT'actor is carrying the noun'
                                                TEST_PROPOSITION_NT'actor is carrying the noun'(test: [ is('actor', {<schema: CarrierOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [haven't] got [regarding the noun][those]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [haven't] got [regarding the noun][those]." ( a )'
                                                INVOCATION_NT'"[We] [haven't] got [regarding the noun][those]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [haven't] got [regarding the noun][those]." ( a )'
                                                        CONSTANT_NT'"[We] [haven't] got [regarding the noun][those]." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor dropping ( this is the can't drop clothes bei'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "(first taking [the noun] off)[command clarification bre'
                                                    INVOCATION_LIST_SAY_NT'"(first taking [the noun] off)[command clarification break]"'
                                                        INVOCATION_NT'"(first taking [the noun] off)[command clarification break]"'
                                                            RVALUE_CONTEXT_NT'"(first taking [the noun] off)[command clarification break]"'
                                                                CONSTANT_NT'"(first taking [the noun] off)[command clarification break]"'-text
                                        INVOCATION_LIST_NT'silently try the actor trying taking off the noun'
                                            INVOCATION_NT'silently try the actor trying taking off the noun'
                                                RVALUE_CONTEXT_NT'actor trying taking off the noun'
                                                    CONSTANT_NT'actor trying taking off the noun'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is wearing the noun'
                                                INVOCATION_NT'if the actor is wearing the noun'
                                                    CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                        TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor dropping ( this is the can't drop if this exc'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the receptacle be the holder of the actor'
                                    INVOCATION_NT'let the receptacle be the holder of the actor'
                                        NEW_LOCAL_CONTEXT_NT'receptacle'
                                            UNKNOWN_NT'receptacle'
                                        RVALUE_CONTEXT_NT'holder of the actor'
                                            PHRASE_TO_DECIDE_VALUE_NT'holder of the actor'
                                                INVOCATION_LIST_NT'holder of the actor'
                                                    INVOCATION_NT'holder of the actor'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the receptacle is a room'
                                        INVOCATION_NT'if the receptacle is a room'
                                            CONDITION_CONTEXT_NT'receptacle is a room'
                                                TEST_PROPOSITION_NT'receptacle is a room'(test: [ kind=room('receptacle') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the receptacle provides the property carrying capacity'
                                        INVOCATION_NT'if the receptacle provides the property carrying capacity'
                                            CONDITION_CONTEXT_NT'receptacle provides the property carrying capacity'
                                                TEST_PROPOSITION_NT'receptacle provides the property carrying capacity'(test: [ provides('receptacle', 'the property carrying capacity') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the receptacle is a supporter'
                                                INVOCATION_NT'if the receptacle is a supporter'
                                                    CONDITION_CONTEXT_NT'receptacle is a supporter'
                                                        TEST_PROPOSITION_NT'receptacle is a supporter'(test: [ kind=supporter('receptacle') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the number of things on the receptacle is at least the ca'
                                                        INVOCATION_NT'if the number of things on the receptacle is at least the ca'
                                                            CONDITION_CONTEXT_NT'number of things on the receptacle is at least the carrying '
                                                                TEST_PROPOSITION_NT'number of things on the receptacle is at least the carrying '(test: [ at-least('number of things on the receptacle', 'the carrying capacity of the receptacle') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the actor is the player'
                                                                INVOCATION_NT'if the actor is the player'
                                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'now the prior named object is nothing'
                                                                    CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                                CODE_BLOCK_NT'say "[There] [are] no more room on [the receptacle]." ( a )'
                                                                    INVOCATION_LIST_SAY_NT'"[There] [are] no more room on [the receptacle]." ( a )'
                                                                        INVOCATION_NT'"[There] [are] no more room on [the receptacle]." ( a )'
                                                                            RVALUE_CONTEXT_NT'"[There] [are] no more room on [the receptacle]." ( a )'
                                                                                CONSTANT_NT'"[There] [are] no more room on [the receptacle]." ( a )'-text
                                                        INVOCATION_LIST_NT'stop the action'
                                                            INVOCATION_NT'stop the action'
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the receptacle is a container'
                                                        INVOCATION_NT'if the receptacle is a container'
                                                            CONDITION_CONTEXT_NT'receptacle is a container'
                                                                TEST_PROPOSITION_NT'receptacle is a container'(test: [ kind=container('receptacle') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the number of things in the receptacle is at least the ca'
                                                                INVOCATION_NT'if the number of things in the receptacle is at least the ca'
                                                                    CONDITION_CONTEXT_NT'number of things in the receptacle is at least the carrying '
                                                                        TEST_PROPOSITION_NT'number of things in the receptacle is at least the carrying '(test: [ at-least('number of things in the receptacle', 'the carrying capacity of the receptacle') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the actor is the player'
                                                                        INVOCATION_NT'if the actor is the player'
                                                                            CONDITION_CONTEXT_NT'actor is the player'
                                                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                                    CODE_BLOCK_NT
                                                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                                        CODE_BLOCK_NT'say "[There] [are] no more room in [the receptacle]." ( b )'
                                                                            INVOCATION_LIST_SAY_NT'"[There] [are] no more room in [the receptacle]." ( b )'
                                                                                INVOCATION_NT'"[There] [are] no more room in [the receptacle]." ( b )'
                                                                                    RVALUE_CONTEXT_NT'"[There] [are] no more room in [the receptacle]." ( b )'
                                                                                        CONSTANT_NT'"[There] [are] no more room in [the receptacle]." ( b )'-text
                                                                INVOCATION_LIST_NT'stop the action'
                                                                    INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor dropping ( this is the standard dropping '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is in the holder of the actor'
                                    CONDITION_CONTEXT_NT'the noun is in the holder of the actor'
                        RULE_NT'report an actor dropping ( this is the standard report dropp'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Dropped." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Dropped." ( a )'
                                                        INVOCATION_NT'"Dropped." ( a )'
                                                            RVALUE_CONTEXT_NT'"Dropped." ( a )'
                                                                CONSTANT_NT'"Dropped." ( a )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The actor] [put] down [the noun]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [put] down [the noun]." ( b )'
                                                        INVOCATION_NT'"[The actor] [put] down [the noun]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [put] down [the noun]." ( b )'
                                                                CONSTANT_NT'"[The actor] [put] down [the noun]." ( b )'-text
                        SENTENCE_NT'putting it on is an action applying to two things'
                            VERB_NT'is'
                            PROPER_NOUN_NT'putting it on'
                            PROPER_NOUN_NT'applying to two things'
                        SENTENCE_NT'the putting it on action translates into i6 as PutOn'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'putting it on action'
                            PROPER_NOUN_NT'PutOn'
                        SENTENCE_NT'the specification of the putting it on action is By this act'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the putting it on action'
                                PROPER_NOUN_NT'putting it on action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'By this action, an actor puts
                            something he is holding on top'
                        RULE_NT'check an actor putting something on ( this is the convert pu'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is down or the actor is on the second nou'
                                        INVOCATION_NT'if the second noun is down or the actor is on the second nou'
                                            CONDITION_CONTEXT_NT'second noun is down or the actor is on the second noun'
                                                LOGICAL_OR_NT'second noun is down or the actor is on the second noun'
                                                    TEST_PROPOSITION_NT'second noun is down'(test: [ is('second noun', 'down') ])
                                                    TEST_PROPOSITION_NT'the actor is on the second noun'(test: [ is('the second noun', {<schema: SupporterOf(*1)>:'the actor'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'convert to the dropping action on the noun'
                                            INVOCATION_NT'convert to the dropping action on the noun'
                                                RVALUE_CONTEXT_NT'dropping action'
                                                    CONSTANT_NT'dropping action'-action name
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        RULE_NT'check an actor putting something on ( this is the can't put '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is carrying the noun'
                                        INVOCATION_NT'if the actor is carrying the noun'
                                            CONDITION_CONTEXT_NT'actor is carrying the noun'
                                                TEST_PROPOSITION_NT'actor is carrying the noun'(test: [ is('actor', {<schema: CarrierOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                INVOCATION_LIST_NT'carry out the implicitly taking activity with the noun'
                                    INVOCATION_NT'carry out the implicitly taking activity with the noun'
                                        RVALUE_CONTEXT_NT'implicitly taking'
                                            CONSTANT_NT'implicitly taking'-activity on objects
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is carrying the noun'
                                        INVOCATION_NT'if the actor is carrying the noun'
                                            CONDITION_CONTEXT_NT'actor is carrying the noun'
                                                TEST_PROPOSITION_NT'actor is carrying the noun'(test: [ is('actor', {<schema: CarrierOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor putting something on ( this is the can't put '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the noun-cpc be the component parts core of the noun'
                                    INVOCATION_NT'let the noun-cpc be the component parts core of the noun'
                                        NEW_LOCAL_CONTEXT_NT'noun-cpc'
                                            UNKNOWN_NT'noun-cpc'
                                        RVALUE_CONTEXT_NT'component parts core of the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'component parts core of the noun'
                                                INVOCATION_LIST_NT'component parts core of the noun'
                                                    INVOCATION_NT'component parts core of the noun'
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_NT'let the second-cpc be the component parts core of the second'
                                    INVOCATION_NT'let the second-cpc be the component parts core of the second'
                                        NEW_LOCAL_CONTEXT_NT'second-cpc'
                                            UNKNOWN_NT'second-cpc'
                                        RVALUE_CONTEXT_NT'component parts core of the second noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'component parts core of the second noun'
                                                INVOCATION_LIST_NT'component parts core of the second noun'
                                                    INVOCATION_NT'component parts core of the second noun'
                                                        RVALUE_CONTEXT_NT'second noun'
                                                            NONLOCAL_VARIABLE_NT'second noun'('second noun'(var)[object])
                                INVOCATION_LIST_NT'let the transfer ceiling be the common ancestor of the noun-'
                                    INVOCATION_NT'let the transfer ceiling be the common ancestor of the noun-'
                                        NEW_LOCAL_CONTEXT_NT'transfer ceiling'
                                            UNKNOWN_NT'transfer ceiling'
                                        RVALUE_CONTEXT_NT'common ancestor of the noun-cpc with the second-cpc'
                                            PHRASE_TO_DECIDE_VALUE_NT'common ancestor of the noun-cpc with the second-cpc'
                                                INVOCATION_LIST_NT'common ancestor of the noun-cpc with the second-cpc'
                                                    INVOCATION_NT'common ancestor of the noun-cpc with the second-cpc'
                                                        RVALUE_CONTEXT_NT'noun-cpc'
                                                            LOCAL_VARIABLE_NT'noun-cpc'(tmp_0;object)
                                                        RVALUE_CONTEXT_NT'second-cpc'
                                                            LOCAL_VARIABLE_NT'second-cpc'(tmp_1;object)
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the transfer ceiling is the noun-cpc'
                                        INVOCATION_NT'if the transfer ceiling is the noun-cpc'
                                            CONDITION_CONTEXT_NT'transfer ceiling is the noun-cpc'
                                                TEST_PROPOSITION_NT'transfer ceiling is the noun-cpc'(test: [ is('transfer ceiling', 'the noun-cpc') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't put] something on top of itself." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't put] something on top of itself." ( a )'
                                                        INVOCATION_NT'"[We] [can't put] something on top of itself." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [can't put] something on top of itself." ( a )'
                                                                CONSTANT_NT'"[We] [can't put] something on top of itself." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor putting something on ( this is the can't put '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not a supporter'
                                        INVOCATION_NT'if the second noun is not a supporter'
                                            CONDITION_CONTEXT_NT'second noun is not a supporter'
                                                TEST_PROPOSITION_NT'second noun is not a supporter'(test: [ NOT[ kind=supporter('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Putting things on [the second noun] [would achieve] not'
                                                    INVOCATION_LIST_SAY_NT'"Putting things on [the second noun] [would achieve] nothing'
                                                        INVOCATION_NT'"Putting things on [the second noun] [would achieve] nothing'
                                                            RVALUE_CONTEXT_NT'"Putting things on [the second noun] [would achieve] nothing'
                                                                CONSTANT_NT'"Putting things on [the second noun] [would achieve] nothing'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor putting something on ( this is the can't put '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "(first taking [regarding the noun][them] off)[command c'
                                                    INVOCATION_LIST_SAY_NT'"(first taking [regarding the noun][them] off)[command clari'
                                                        INVOCATION_NT'"(first taking [regarding the noun][them] off)[command clari'
                                                            RVALUE_CONTEXT_NT'"(first taking [regarding the noun][them] off)[command clari'
                                                                CONSTANT_NT'"(first taking [regarding the noun][them] off)[command clari'-text
                                        INVOCATION_LIST_NT'silently try the actor trying taking off the noun'
                                            INVOCATION_NT'silently try the actor trying taking off the noun'
                                                RVALUE_CONTEXT_NT'actor trying taking off the noun'
                                                    CONSTANT_NT'actor trying taking off the noun'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is wearing the noun'
                                                INVOCATION_NT'if the actor is wearing the noun'
                                                    CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                        TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor putting something on ( this is the can't put '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun provides the property carrying capacity'
                                        INVOCATION_NT'if the second noun provides the property carrying capacity'
                                            CONDITION_CONTEXT_NT'second noun provides the property carrying capacity'
                                                TEST_PROPOSITION_NT'second noun provides the property carrying capacity'(test: [ provides('second noun', 'the property carrying capacity') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the number of things on the second noun is at least the c'
                                                INVOCATION_NT'if the number of things on the second noun is at least the c'
                                                    CONDITION_CONTEXT_NT'number of things on the second noun is at least the carrying'
                                                        TEST_PROPOSITION_NT'number of things on the second noun is at least the carrying'(test: [ at-least('number of things on the second noun', 'the carrying capacity of the second noun') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the actor is the player'
                                                        INVOCATION_NT'if the actor is the player'
                                                            CONDITION_CONTEXT_NT'actor is the player'
                                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[There] [are] no more room on [the second noun]." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[There] [are] no more room on [the second noun]." ( a )'
                                                                INVOCATION_NT'"[There] [are] no more room on [the second noun]." ( a )'
                                                                    RVALUE_CONTEXT_NT'"[There] [are] no more room on [the second noun]." ( a )'
                                                                        CONSTANT_NT'"[There] [are] no more room on [the second noun]." ( a )'-text
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor putting something on ( this is the standa'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is on the second noun'
                                    CONDITION_CONTEXT_NT'the noun is on the second noun'
                        RULE_NT'report an actor putting something on ( this is the concise r'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player and the i6 parser is running mult'
                                                INVOCATION_NT'if the actor is the player and the i6 parser is running mult'
                                                    CONDITION_CONTEXT_NT'actor is the player and the i6 parser is running multiple ac'
                                                        LOGICAL_AND_NT'actor is the player and the i6 parser is running multiple ac'
                                                            TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                            TEST_VALUE_NT'the i6 parser is running multiple actions'
                                                                PHRASE_TO_DECIDE_VALUE_NT'the i6 parser is running multiple actions'
                                                                    INVOCATION_LIST_NT'the i6 parser is running multiple actions'
                                                                        INVOCATION_NT'i6 parser is running multiple actions'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Done." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Done." ( a )'
                                                        INVOCATION_NT'"Done." ( a )'
                                                            RVALUE_CONTEXT_NT'"Done." ( a )'
                                                                CONSTANT_NT'"Done." ( a )'-text
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'report an actor putting something on ( this is the standard '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [put] [the noun] on [the second noun]." ( a'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [put] [the noun] on [the second noun]." ( a )'
                                                INVOCATION_NT'"[The actor] [put] [the noun] on [the second noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [put] [the noun] on [the second noun]." ( a )'
                                                        CONSTANT_NT'"[The actor] [put] [the noun] on [the second noun]." ( a )'-text
                        SENTENCE_NT'inserting it into is an action applying to two things'
                            VERB_NT'is'
                            PROPER_NOUN_NT'inserting it into'
                            PROPER_NOUN_NT'applying to two things'
                        SENTENCE_NT'the inserting it into action translates into i6 as Insert'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'inserting it into action'
                            PROPER_NOUN_NT'Insert'
                        SENTENCE_NT'the specification of the inserting it into action is By this'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the inserting it into action'
                                PROPER_NOUN_NT'inserting it into action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'By this action, an actor puts
                            something he is holding into a'
                        RULE_NT'check an actor inserting something into ( this is the conver'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is down or the actor is in the second nou'
                                        INVOCATION_NT'if the second noun is down or the actor is in the second nou'
                                            CONDITION_CONTEXT_NT'second noun is down or the actor is in the second noun'
                                                LOGICAL_OR_NT'second noun is down or the actor is in the second noun'
                                                    TEST_PROPOSITION_NT'second noun is down'(test: [ is('second noun', 'down') ])
                                                    TEST_PROPOSITION_NT'the actor is in the second noun'(test: [ is('the second noun', {<schema: ContainerOf(*1)>:'the actor'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'convert to the dropping action on the noun'
                                            INVOCATION_NT'convert to the dropping action on the noun'
                                                RVALUE_CONTEXT_NT'dropping action'
                                                    CONSTANT_NT'dropping action'-action name
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        RULE_NT'check an actor inserting something into ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is carrying the noun'
                                        INVOCATION_NT'if the actor is carrying the noun'
                                            CONDITION_CONTEXT_NT'actor is carrying the noun'
                                                TEST_PROPOSITION_NT'actor is carrying the noun'(test: [ is('actor', {<schema: CarrierOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                INVOCATION_LIST_NT'carry out the implicitly taking activity with the noun'
                                    INVOCATION_NT'carry out the implicitly taking activity with the noun'
                                        RVALUE_CONTEXT_NT'implicitly taking'
                                            CONSTANT_NT'implicitly taking'-activity on objects
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is carrying the noun'
                                        INVOCATION_NT'if the actor is carrying the noun'
                                            CONDITION_CONTEXT_NT'actor is carrying the noun'
                                                TEST_PROPOSITION_NT'actor is carrying the noun'(test: [ is('actor', {<schema: CarrierOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor inserting something into ( this is the can't '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the noun-cpc be the component parts core of the noun'
                                    INVOCATION_NT'let the noun-cpc be the component parts core of the noun'
                                        NEW_LOCAL_CONTEXT_NT'noun-cpc'
                                            UNKNOWN_NT'noun-cpc'
                                        RVALUE_CONTEXT_NT'component parts core of the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'component parts core of the noun'
                                                INVOCATION_LIST_NT'component parts core of the noun'
                                                    INVOCATION_NT'component parts core of the noun'
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_NT'let the second-cpc be the component parts core of the second'
                                    INVOCATION_NT'let the second-cpc be the component parts core of the second'
                                        NEW_LOCAL_CONTEXT_NT'second-cpc'
                                            UNKNOWN_NT'second-cpc'
                                        RVALUE_CONTEXT_NT'component parts core of the second noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'component parts core of the second noun'
                                                INVOCATION_LIST_NT'component parts core of the second noun'
                                                    INVOCATION_NT'component parts core of the second noun'
                                                        RVALUE_CONTEXT_NT'second noun'
                                                            NONLOCAL_VARIABLE_NT'second noun'('second noun'(var)[object])
                                INVOCATION_LIST_NT'let the transfer ceiling be the common ancestor of the noun-'
                                    INVOCATION_NT'let the transfer ceiling be the common ancestor of the noun-'
                                        NEW_LOCAL_CONTEXT_NT'transfer ceiling'
                                            UNKNOWN_NT'transfer ceiling'
                                        RVALUE_CONTEXT_NT'common ancestor of the noun-cpc with the second-cpc'
                                            PHRASE_TO_DECIDE_VALUE_NT'common ancestor of the noun-cpc with the second-cpc'
                                                INVOCATION_LIST_NT'common ancestor of the noun-cpc with the second-cpc'
                                                    INVOCATION_NT'common ancestor of the noun-cpc with the second-cpc'
                                                        RVALUE_CONTEXT_NT'noun-cpc'
                                                            LOCAL_VARIABLE_NT'noun-cpc'(tmp_0;object)
                                                        RVALUE_CONTEXT_NT'second-cpc'
                                                            LOCAL_VARIABLE_NT'second-cpc'(tmp_1;object)
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the transfer ceiling is the noun-cpc'
                                        INVOCATION_NT'if the transfer ceiling is the noun-cpc'
                                            CONDITION_CONTEXT_NT'transfer ceiling is the noun-cpc'
                                                TEST_PROPOSITION_NT'transfer ceiling is the noun-cpc'(test: [ is('transfer ceiling', 'the noun-cpc') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't put] something inside itself." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't put] something inside itself." ( a )'
                                                        INVOCATION_NT'"[We] [can't put] something inside itself." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [can't put] something inside itself." ( a )'
                                                                CONSTANT_NT'"[We] [can't put] something inside itself." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor inserting something into ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is a closed container'
                                        INVOCATION_NT'if the second noun is a closed container'
                                            CONDITION_CONTEXT_NT'second noun is a closed container'
                                                TEST_PROPOSITION_NT'second noun is a closed container'(test: [ kind=container('second noun') ^ A81'closed'('second noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The second noun] [are] closed." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The second noun] [are] closed." ( a )'
                                                        INVOCATION_NT'"[The second noun] [are] closed." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The second noun] [are] closed." ( a )'
                                                                CONSTANT_NT'"[The second noun] [are] closed." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor inserting something into ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not a container'
                                        INVOCATION_NT'if the second noun is not a container'
                                            CONDITION_CONTEXT_NT'second noun is not a container'
                                                TEST_PROPOSITION_NT'second noun is not a container'(test: [ NOT[ kind=container('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the second noun][Those] [can't contain] thin'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the second noun][Those] [can't contain] things."'
                                                        INVOCATION_NT'"[regarding the second noun][Those] [can't contain] things."'
                                                            RVALUE_CONTEXT_NT'"[regarding the second noun][Those] [can't contain] things."'
                                                                CONSTANT_NT'"[regarding the second noun][Those] [can't contain] things."'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor inserting something into ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "(first taking [regarding the noun][them] off)[command c'
                                                    INVOCATION_LIST_SAY_NT'"(first taking [regarding the noun][them] off)[command clari'
                                                        INVOCATION_NT'"(first taking [regarding the noun][them] off)[command clari'
                                                            RVALUE_CONTEXT_NT'"(first taking [regarding the noun][them] off)[command clari'
                                                                CONSTANT_NT'"(first taking [regarding the noun][them] off)[command clari'-text
                                        INVOCATION_LIST_NT'silently try the actor trying taking off the noun'
                                            INVOCATION_NT'silently try the actor trying taking off the noun'
                                                RVALUE_CONTEXT_NT'actor trying taking off the noun'
                                                    CONSTANT_NT'actor trying taking off the noun'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is wearing the noun'
                                                INVOCATION_NT'if the actor is wearing the noun'
                                                    CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                        TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor inserting something into ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun provides the property carrying capacity'
                                        INVOCATION_NT'if the second noun provides the property carrying capacity'
                                            CONDITION_CONTEXT_NT'second noun provides the property carrying capacity'
                                                TEST_PROPOSITION_NT'second noun provides the property carrying capacity'(test: [ provides('second noun', 'the property carrying capacity') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the number of things in the second noun is at least the c'
                                                INVOCATION_NT'if the number of things in the second noun is at least the c'
                                                    CONDITION_CONTEXT_NT'number of things in the second noun is at least the carrying'
                                                        TEST_PROPOSITION_NT'number of things in the second noun is at least the carrying'(test: [ at-least('number of things in the second noun', 'the carrying capacity of the second noun') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the actor is the player'
                                                        INVOCATION_NT'if the actor is the player'
                                                            CONDITION_CONTEXT_NT'actor is the player'
                                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                        CODE_BLOCK_NT'say "[There] [are] no more room in [the second noun]." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[There] [are] no more room in [the second noun]." ( a )'
                                                                INVOCATION_NT'"[There] [are] no more room in [the second noun]." ( a )'
                                                                    RVALUE_CONTEXT_NT'"[There] [are] no more room in [the second noun]." ( a )'
                                                                        CONSTANT_NT'"[There] [are] no more room in [the second noun]." ( a )'-text
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor inserting something into ( this is the st'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is in the second noun'
                                    CONDITION_CONTEXT_NT'the noun is in the second noun'
                        RULE_NT'report an actor inserting something into ( this is the conci'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player and the i6 parser is running mult'
                                                INVOCATION_NT'if the actor is the player and the i6 parser is running mult'
                                                    CONDITION_CONTEXT_NT'actor is the player and the i6 parser is running multiple ac'
                                                        LOGICAL_AND_NT'actor is the player and the i6 parser is running multiple ac'
                                                            TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                            TEST_VALUE_NT'the i6 parser is running multiple actions'
                                                                PHRASE_TO_DECIDE_VALUE_NT'the i6 parser is running multiple actions'
                                                                    INVOCATION_LIST_NT'the i6 parser is running multiple actions'
                                                                        INVOCATION_NT'i6 parser is running multiple actions'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Done." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Done." ( a )'
                                                        INVOCATION_NT'"Done." ( a )'
                                                            RVALUE_CONTEXT_NT'"Done." ( a )'
                                                                CONSTANT_NT'"Done." ( a )'-text
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'report an actor inserting something into ( this is the stand'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [put] [the noun] into [the second noun]." ('
                                            INVOCATION_LIST_SAY_NT'"[The actor] [put] [the noun] into [the second noun]." ( a )'
                                                INVOCATION_NT'"[The actor] [put] [the noun] into [the second noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [put] [the noun] into [the second noun]." ( a )'
                                                        CONSTANT_NT'"[The actor] [put] [the noun] into [the second noun]." ( a )'-text
                        SENTENCE_NT'eating is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'eating'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the eating action translates into i6 as Eat'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'eating action'
                            PROPER_NOUN_NT'Eat'
                        SENTENCE_NT'the specification of the eating action is Eating is the only'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the eating action'
                                PROPER_NOUN_NT'eating action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Eating is the only one of the
                            built-in actions which can, in'
                        RULE_NT'check an actor eating ( this is the can't eat unless edible '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not a thing or the noun is not edible'
                                        INVOCATION_NT'if the noun is not a thing or the noun is not edible'
                                            CONDITION_CONTEXT_NT'noun is not a thing or the noun is not edible'
                                                LOGICAL_OR_NT'noun is not a thing or the noun is not edible'
                                                    TEST_PROPOSITION_NT'noun is not a thing'(test: [ NOT[ kind=thing('noun') NOT] ])
                                                    TEST_PROPOSITION_NT'the noun is not edible'(test: [ NOT[ A63'edible'('the noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] plainly inedible." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] plainly inedible." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They're] plainly inedible." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] plainly inedible." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They're] plainly inedible." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor eating ( this is the can't eat clothing witho'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "(first taking [the noun] off)[command clarification bre'
                                                    INVOCATION_LIST_SAY_NT'"(first taking [the noun] off)[command clarification break]"'
                                                        INVOCATION_NT'"(first taking [the noun] off)[command clarification break]"'
                                                            RVALUE_CONTEXT_NT'"(first taking [the noun] off)[command clarification break]"'
                                                                CONSTANT_NT'"(first taking [the noun] off)[command clarification break]"'-text
                                        INVOCATION_LIST_NT'try the actor trying taking off the noun'
                                            INVOCATION_NT'try the actor trying taking off the noun'
                                                RVALUE_CONTEXT_NT'actor trying taking off the noun'
                                                    CONSTANT_NT'actor trying taking off the noun'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is wearing the noun'
                                                INVOCATION_NT'if the actor is wearing the noun'
                                                    CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                        TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor eating ( this is the can't eat other people's'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is enclosed by a person ( called the owner ) who'
                                        INVOCATION_NT'if the noun is enclosed by a person ( called the owner ) who'
                                            CONDITION_CONTEXT_NT'noun is enclosed by a person ( called the owner ) who is not'
                                                TEST_PROPOSITION_NT'noun is enclosed by a person ( called the owner ) who is not'(test: [ Exists x : kind=person(x) ^ called='owner'(person)(x) ^ NOT[ is(x, 'the actor') NOT] ^ encloses(x, 'noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The owner] [might not appreciate] that." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The owner] [might not appreciate] that." ( a )'
                                                        INVOCATION_NT'"[The owner] [might not appreciate] that." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The owner] [might not appreciate] that." ( a )'
                                                                CONSTANT_NT'"[The owner] [might not appreciate] that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor eating ( this is the can't eat portable food '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is portable and the actor is not carrying the no'
                                        INVOCATION_NT'if the noun is portable and the actor is not carrying the no'
                                            CONDITION_CONTEXT_NT'noun is portable and the actor is not carrying the noun'
                                                LOGICAL_AND_NT'noun is portable and the actor is not carrying the noun'
                                                    TEST_PROPOSITION_NT'noun is portable'(test: [ A66'portable'('noun') ])
                                                    TEST_PROPOSITION_NT'the actor is not carrying the noun'(test: [ NOT[ is('the actor', {<schema: CarrierOf(*1)>:'the noun'}) NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'carry out the implicitly taking activity with the noun'
                                            INVOCATION_NT'carry out the implicitly taking activity with the noun'
                                                RVALUE_CONTEXT_NT'implicitly taking'
                                                    CONSTANT_NT'implicitly taking'-activity on objects
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is not carrying the noun'
                                                INVOCATION_NT'if the actor is not carrying the noun'
                                                    CONDITION_CONTEXT_NT'actor is not carrying the noun'
                                                        TEST_PROPOSITION_NT'actor is not carrying the noun'(test: [ NOT[ is('actor', {<schema: CarrierOf(*1)>:'the noun'}) NOT] ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor eating ( this is the standard eating rule'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is nowhere'
                                    CONDITION_CONTEXT_NT'the noun is nowhere'
                        RULE_NT'report an actor eating ( this is the standard report eating '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [eat] [the noun]. Not bad." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [eat] [the noun]. Not bad." ( a )'
                                                        INVOCATION_NT'"[We] [eat] [the noun]. Not bad." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [eat] [the noun]. Not bad." ( a )'
                                                                CONSTANT_NT'"[We] [eat] [the noun]. Not bad." ( a )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The actor] [eat] [the noun]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [eat] [the noun]." ( b )'
                                                        INVOCATION_NT'"[The actor] [eat] [the noun]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [eat] [the noun]." ( b )'
                                                                CONSTANT_NT'"[The actor] [eat] [the noun]." ( b )'-text
                    HEADING_NT'section 3 - standard actions which move the actor' (level 5)
                        SENTENCE_NT'going is an action applying to one visible thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'going'
                            PROPER_NOUN_NT'applying to one visible thing'
                        SENTENCE_NT'the going action translates into i6 as Go'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'going action'
                            PROPER_NOUN_NT'Go'
                        SENTENCE_NT'the specification of the going action is This is the action '
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the going action'
                                PROPER_NOUN_NT'going action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'This is the action which allows people
                            to move from one room'
                        SENTENCE_NT'the going action has a room called the room gone from ( matc'
                            VERB_NT'has'
                            PROPER_NOUN_NT'going action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'room'
                                    PROPER_NOUN_NT'room gone from ( matched as from )'
                        SENTENCE_NT'the going action has an object called the room gone to ( mat'
                            VERB_NT'has'
                            PROPER_NOUN_NT'going action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'object'
                                    PROPER_NOUN_NT'room gone to ( matched as to )'
                        SENTENCE_NT'the going action has an object called the door gone through '
                            VERB_NT'has'
                            PROPER_NOUN_NT'going action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'object'
                                    PROPER_NOUN_NT'door gone through ( matched as through )'
                        SENTENCE_NT'the going action has an object called the vehicle gone by ( '
                            VERB_NT'has'
                            PROPER_NOUN_NT'going action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'object'
                                    PROPER_NOUN_NT'vehicle gone by ( matched as by )'
                        SENTENCE_NT'the going action has an object called the thing gone with ( '
                            VERB_NT'has'
                            PROPER_NOUN_NT'going action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'object'
                                    PROPER_NOUN_NT'thing gone with ( matched as with )'
                        RULE_NT'rule for setting action variables for going ( this is the st'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the thing gone with is the item-pushed-between-rooms'
                                    CONDITION_CONTEXT_NT'the thing gone with is the item-pushed-between-rooms'
                                INVOCATION_LIST_NT'now the room gone from is the location of the actor'
                                    CONDITION_CONTEXT_NT'the room gone from is the location of the actor'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is in an enterable vehicle ( called the carriag'
                                        INVOCATION_NT'if the actor is in an enterable vehicle ( called the carriag'
                                            CONDITION_CONTEXT_NT'actor is in an enterable vehicle ( called the carriage )'
                                                TEST_PROPOSITION_NT'actor is in an enterable vehicle ( called the carriage )'(test: [ kind=vehicle({<schema: ContainerOf(*1)>:'actor'}) ^ A77'enterable'({<schema: ContainerOf(*1)>:'actor'}) ^ called='carriage'(vehicle)({<schema: ContainerOf(*1)>:'actor'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the vehicle gone by is the carriage'
                                            CONDITION_CONTEXT_NT'the vehicle gone by is the carriage'
                                INVOCATION_LIST_NT'let the target be nothing'
                                    INVOCATION_NT'let the target be nothing'
                                        NEW_LOCAL_CONTEXT_NT'target'
                                            UNKNOWN_NT'target'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a direction'
                                        INVOCATION_NT'if the noun is a direction'
                                            CONDITION_CONTEXT_NT'noun is a direction'
                                                TEST_PROPOSITION_NT'noun is a direction'(test: [ kind=direction('noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'let direction d be the noun'
                                            INVOCATION_NT'let direction d be the noun'
                                                NEW_LOCAL_CONTEXT_NT'direction d'
                                                    UNKNOWN_NT'direction d'
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        INVOCATION_LIST_NT'let the target be the room-or-door direction d from the room'
                                            INVOCATION_NT'let the target be the room-or-door direction d from the room'
                                                LVALUE_LOCAL_CONTEXT_NT'target'
                                                    LOCAL_VARIABLE_NT'target'(tmp_1;object)
                                                RVALUE_CONTEXT_NT'room-or-door direction d from the room gone from'
                                                    PHRASE_TO_DECIDE_VALUE_NT'room-or-door direction d from the room gone from'
                                                        INVOCATION_LIST_NT'room-or-door direction d from the room gone from'
                                                            INVOCATION_NT'room-or-door direction d from the room gone from'
                                                                RVALUE_CONTEXT_NT'direction d'
                                                                    LOCAL_VARIABLE_NT'direction d'(tmp_2;object)
                                                                RVALUE_CONTEXT_NT'room gone from'
                                                                    NONLOCAL_VARIABLE_NT'room gone from'('room gone from'(var)[room])
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the noun is a door'
                                                INVOCATION_NT'if the noun is a door'
                                                    CONDITION_CONTEXT_NT'noun is a door'
                                                        TEST_PROPOSITION_NT'noun is a door'(test: [ kind=door('noun') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'let the target be the noun'
                                                    INVOCATION_NT'let the target be the noun'
                                                        LVALUE_LOCAL_CONTEXT_NT'target'
                                                            LOCAL_VARIABLE_NT'target'(tmp_1;object)
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the target is a door'
                                        INVOCATION_NT'if the target is a door'
                                            CONDITION_CONTEXT_NT'target is a door'
                                                TEST_PROPOSITION_NT'target is a door'(test: [ kind=door('target') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the door gone through is the target'
                                            CONDITION_CONTEXT_NT'the door gone through is the target'
                                        INVOCATION_LIST_NT'now the target is the other side of the target from the room'
                                            CONDITION_CONTEXT_NT'the target is the other side of the target from the room gon'
                                INVOCATION_LIST_NT'now the room gone to is the target'
                                    CONDITION_CONTEXT_NT'the room gone to is the target'
                        RULE_NT'check an actor going when the actor is on a supporter ( call'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "(first getting off [the chaise])[command clarification '
                                            INVOCATION_LIST_SAY_NT'"(first getting off [the chaise])[command clarification brea'
                                                INVOCATION_NT'"(first getting off [the chaise])[command clarification brea'
                                                    RVALUE_CONTEXT_NT'"(first getting off [the chaise])[command clarification brea'
                                                        CONSTANT_NT'"(first getting off [the chaise])[command clarification brea'-text
                                INVOCATION_LIST_NT'silently try the actor exiting'
                                    INVOCATION_NT'silently try the actor exiting'
                                        RVALUE_CONTEXT_NT'actor exiting'
                                            CONSTANT_NT'actor exiting'-action
                        RULE_NT'check an actor going ( this is the can't travel in what's no'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let nonvehicle be the holder of the actor'
                                    INVOCATION_NT'let nonvehicle be the holder of the actor'
                                        NEW_LOCAL_CONTEXT_NT'nonvehicle'
                                            UNKNOWN_NT'nonvehicle'
                                        RVALUE_CONTEXT_NT'holder of the actor'
                                            PHRASE_TO_DECIDE_VALUE_NT'holder of the actor'
                                                INVOCATION_LIST_NT'holder of the actor'
                                                    INVOCATION_NT'holder of the actor'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if nonvehicle is the room gone from'
                                        INVOCATION_NT'if nonvehicle is the room gone from'
                                            CONDITION_CONTEXT_NT'nonvehicle is the room gone from'
                                                TEST_PROPOSITION_NT'nonvehicle is the room gone from'(test: [ is('nonvehicle', 'the room gone from') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if nonvehicle is the vehicle gone by'
                                        INVOCATION_NT'if nonvehicle is the vehicle gone by'
                                            CONDITION_CONTEXT_NT'nonvehicle is the vehicle gone by'
                                                TEST_PROPOSITION_NT'nonvehicle is the vehicle gone by'(test: [ is('nonvehicle', 'the vehicle gone by') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if nonvehicle is a supporter'
                                                INVOCATION_NT'if nonvehicle is a supporter'
                                                    CONDITION_CONTEXT_NT'nonvehicle is a supporter'
                                                        TEST_PROPOSITION_NT'nonvehicle is a supporter'(test: [ kind=supporter('nonvehicle') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [would have] to get off [the nonvehicle] first." ('
                                                    INVOCATION_LIST_SAY_NT'"[We] [would have] to get off [the nonvehicle] first." ( a )'
                                                        INVOCATION_NT'"[We] [would have] to get off [the nonvehicle] first." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [would have] to get off [the nonvehicle] first." ( a )'
                                                                CONSTANT_NT'"[We] [would have] to get off [the nonvehicle] first." ( a )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[We] [would have] to get out of [the nonvehicle] first.'
                                                    INVOCATION_LIST_SAY_NT'"[We] [would have] to get out of [the nonvehicle] first." ( '
                                                        INVOCATION_NT'"[We] [would have] to get out of [the nonvehicle] first." ( '
                                                            RVALUE_CONTEXT_NT'"[We] [would have] to get out of [the nonvehicle] first." ( '
                                                                CONSTANT_NT'"[We] [would have] to get out of [the nonvehicle] first." ( '-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor going ( this is the can't go through undescri'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the door gone through is not nothing and the door gone th'
                                        INVOCATION_NT'if the door gone through is not nothing and the door gone th'
                                            CONDITION_CONTEXT_NT'door gone through is not nothing and the door gone through i'
                                                LOGICAL_AND_NT'door gone through is not nothing and the door gone through i'
                                                    TEST_PROPOSITION_NT'door gone through is not nothing'(test: [ NOT[ is('door gone through', 'nothing') NOT] ])
                                                    TEST_PROPOSITION_NT'the door gone through is undescribed'(test: [ A71'undescribed'('the door gone through') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't go] that way." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't go] that way." ( a )'
                                                        INVOCATION_NT'"[We] [can't go] that way." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [can't go] that way." ( a )'
                                                                CONSTANT_NT'"[We] [can't go] that way." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor going ( this is the can't go through closed d'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the door gone through is not nothing and the door gone th'
                                        INVOCATION_NT'if the door gone through is not nothing and the door gone th'
                                            CONDITION_CONTEXT_NT'door gone through is not nothing and the door gone through i'
                                                LOGICAL_AND_NT'door gone through is not nothing and the door gone through i'
                                                    TEST_PROPOSITION_NT'door gone through is not nothing'(test: [ NOT[ is('door gone through', 'nothing') NOT] ])
                                                    TEST_PROPOSITION_NT'the door gone through is closed'(test: [ A81'closed'('the door gone through') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "(first opening [the door gone through])[command clarifi'
                                                    INVOCATION_LIST_SAY_NT'"(first opening [the door gone through])[command clarificati'
                                                        INVOCATION_NT'"(first opening [the door gone through])[command clarificati'
                                                            RVALUE_CONTEXT_NT'"(first opening [the door gone through])[command clarificati'
                                                                CONSTANT_NT'"(first opening [the door gone through])[command clarificati'-text
                                        INVOCATION_LIST_NT'silently try the actor opening the door gone through'
                                            INVOCATION_NT'silently try the actor opening the door gone through'
                                                RVALUE_CONTEXT_NT'actor opening the door gone through'
                                                    CONSTANT_NT'actor opening the door gone through'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the door gone through is open'
                                                INVOCATION_NT'if the door gone through is open'
                                                    CONDITION_CONTEXT_NT'door gone through is open'
                                                        TEST_PROPOSITION_NT'door gone through is open'(test: [ A80'open'('door gone through') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'continue the action'
                                                    INVOCATION_NT'continue the action'
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor going ( this is the determine map connection '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the target be nothing'
                                    INVOCATION_NT'let the target be nothing'
                                        NEW_LOCAL_CONTEXT_NT'target'
                                            UNKNOWN_NT'target'
                                        RVALUE_CONTEXT_NT'nothing'
                                            CONSTANT_NT'nothing'-object(-nothing-)
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a direction'
                                        INVOCATION_NT'if the noun is a direction'
                                            CONDITION_CONTEXT_NT'noun is a direction'
                                                TEST_PROPOSITION_NT'noun is a direction'(test: [ kind=direction('noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'let direction d be the noun'
                                            INVOCATION_NT'let direction d be the noun'
                                                NEW_LOCAL_CONTEXT_NT'direction d'
                                                    UNKNOWN_NT'direction d'
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        INVOCATION_LIST_NT'let the target be the room-or-door direction d from the room'
                                            INVOCATION_NT'let the target be the room-or-door direction d from the room'
                                                LVALUE_LOCAL_CONTEXT_NT'target'
                                                    LOCAL_VARIABLE_NT'target'(tmp_0;object)
                                                RVALUE_CONTEXT_NT'room-or-door direction d from the room gone from'
                                                    PHRASE_TO_DECIDE_VALUE_NT'room-or-door direction d from the room gone from'
                                                        INVOCATION_LIST_NT'room-or-door direction d from the room gone from'
                                                            INVOCATION_NT'room-or-door direction d from the room gone from'
                                                                RVALUE_CONTEXT_NT'direction d'
                                                                    LOCAL_VARIABLE_NT'direction d'(tmp_1;object)
                                                                RVALUE_CONTEXT_NT'room gone from'
                                                                    NONLOCAL_VARIABLE_NT'room gone from'('room gone from'(var)[room])
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the noun is a door'
                                                INVOCATION_NT'if the noun is a door'
                                                    CONDITION_CONTEXT_NT'noun is a door'
                                                        TEST_PROPOSITION_NT'noun is a door'(test: [ kind=door('noun') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'let the target be the noun'
                                                    INVOCATION_NT'let the target be the noun'
                                                        LVALUE_LOCAL_CONTEXT_NT'target'
                                                            LOCAL_VARIABLE_NT'target'(tmp_0;object)
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the target is a door'
                                        INVOCATION_NT'if the target is a door'
                                            CONDITION_CONTEXT_NT'target is a door'
                                                TEST_PROPOSITION_NT'target is a door'(test: [ kind=door('target') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the target is the other side of the target from the room'
                                            CONDITION_CONTEXT_NT'the target is the other side of the target from the room gon'
                                INVOCATION_LIST_NT'now the room gone to is the target'
                                    CONDITION_CONTEXT_NT'the room gone to is the target'
                        RULE_NT'check an actor going ( this is the can't go that way rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the room gone to is nothing'
                                        INVOCATION_NT'if the room gone to is nothing'
                                            CONDITION_CONTEXT_NT'room gone to is nothing'
                                                TEST_PROPOSITION_NT'room gone to is nothing'(test: [ is('room gone to', 'nothing') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the door gone through is nothing'
                                                INVOCATION_NT'if the door gone through is nothing'
                                                    CONDITION_CONTEXT_NT'door gone through is nothing'
                                                        TEST_PROPOSITION_NT'door gone through is nothing'(test: [ is('door gone through', 'nothing') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the actor is the player'
                                                        INVOCATION_NT'if the actor is the player'
                                                            CONDITION_CONTEXT_NT'actor is the player'
                                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[We] [can't go] that way." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[We] [can't go] that way." ( a )'
                                                                INVOCATION_NT'"[We] [can't go] that way." ( a )'
                                                                    RVALUE_CONTEXT_NT'"[We] [can't go] that way." ( a )'
                                                                        CONSTANT_NT'"[We] [can't go] that way." ( a )'-text
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't], since [the door gone through] [lead] nowh'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't], since [the door gone through] [lead] nowhere.'
                                                        INVOCATION_NT'"[We] [can't], since [the door gone through] [lead] nowhere.'
                                                            RVALUE_CONTEXT_NT'"[We] [can't], since [the door gone through] [lead] nowhere.'
                                                                CONSTANT_NT'"[We] [can't], since [the door gone through] [lead] nowhere.'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor going ( this is the move player and vehic'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the vehicle gone by is nothing'
                                        INVOCATION_NT'if the vehicle gone by is nothing'
                                            CONDITION_CONTEXT_NT'vehicle gone by is nothing'
                                                TEST_PROPOSITION_NT'vehicle gone by is nothing'(test: [ is('vehicle gone by', 'nothing') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'surreptitiously move the actor to the room gone to during go'
                                            INVOCATION_NT'surreptitiously move the actor to the room gone to during go'
                                                RVALUE_CONTEXT_NT'actor'
                                                    NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                                RVALUE_CONTEXT_NT'room gone to'
                                                    NONLOCAL_VARIABLE_NT'room gone to'('room gone to'(var)[object])
                                    CODE_BLOCK_NT'otherwise'
                                        INVOCATION_LIST_NT'surreptitiously move the vehicle gone by to the room gone to'
                                            INVOCATION_NT'surreptitiously move the vehicle gone by to the room gone to'
                                                RVALUE_CONTEXT_NT'vehicle gone by'
                                                    NONLOCAL_VARIABLE_NT'vehicle gone by'('vehicle gone by'(var)[object])
                                                RVALUE_CONTEXT_NT'room gone to'
                                                    NONLOCAL_VARIABLE_NT'room gone to'('room gone to'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the location is not the location of the player'
                                        INVOCATION_NT'if the location is not the location of the player'
                                            CONDITION_CONTEXT_NT'location is not the location of the player'
                                                TEST_PROPOSITION_NT'location is not the location of the player'(test: [ NOT[ is('location', 'the location of the player') NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the location is the location of the player'
                                            CONDITION_CONTEXT_NT'the location is the location of the player'
                        RULE_NT'carry out an actor going ( this is the move floating objects'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player or the player is within the vehic'
                                        INVOCATION_NT'if the actor is the player or the player is within the vehic'
                                            CONDITION_CONTEXT_NT'actor is the player or the player is within the vehicle gone'
                                                LOGICAL_OR_NT'actor is the player or the player is within the vehicle gone'
                                                    TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    LOGICAL_OR_NT
                                                        TEST_PROPOSITION_NT'the player is within the vehicle gone by'(test: [ is('the vehicle gone by', {<schema: ContainerOf(*1)>:'the player'}) ])
                                                        TEST_PROPOSITION_NT'the player is within the thing gone with'(test: [ is('the thing gone with', {<schema: ContainerOf(*1)>:'the player'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'update backdrop positions'
                                            INVOCATION_NT'update backdrop positions'
                        RULE_NT'carry out an actor going ( this is the check light in new lo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player or the player is within the vehic'
                                        INVOCATION_NT'if the actor is the player or the player is within the vehic'
                                            CONDITION_CONTEXT_NT'actor is the player or the player is within the vehicle gone'
                                                LOGICAL_OR_NT'actor is the player or the player is within the vehicle gone'
                                                    TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    LOGICAL_OR_NT
                                                        TEST_PROPOSITION_NT'the player is within the vehicle gone by'(test: [ is('the vehicle gone by', {<schema: ContainerOf(*1)>:'the player'}) ])
                                                        TEST_PROPOSITION_NT'the player is within the thing gone with'(test: [ is('the thing gone with', {<schema: ContainerOf(*1)>:'the player'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'surreptitiously reckon darkness'
                                            INVOCATION_NT'surreptitiously reckon darkness'
                        RULE_NT'report an actor going ( this is the describe room gone into '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the player is the actor'
                                        INVOCATION_NT'if the player is the actor'
                                            CONDITION_CONTEXT_NT'player is the actor'
                                                TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'produce a room description with going spacing conventions'
                                                    INVOCATION_NT'produce a room description with going spacing conventions'
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the noun is a direction'
                                                INVOCATION_NT'if the noun is a direction'
                                                    CONDITION_CONTEXT_NT'noun is a direction'
                                                        TEST_PROPOSITION_NT'noun is a direction'(test: [ kind=direction('noun') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the location is the room gone from or the player is withi'
                                                        INVOCATION_NT'if the location is the room gone from or the player is withi'
                                                            CONDITION_CONTEXT_NT'location is the room gone from or the player is within the v'
                                                                LOGICAL_OR_NT'location is the room gone from or the player is within the v'
                                                                    TEST_PROPOSITION_NT'location is the room gone from'(test: [ is('location', 'the room gone from') ])
                                                                    LOGICAL_OR_NT
                                                                        TEST_PROPOSITION_NT'the player is within the vehicle gone by'(test: [ is('the vehicle gone by', {<schema: ContainerOf(*1)>:'the player'}) ])
                                                                        TEST_PROPOSITION_NT'the player is within the thing gone with'(test: [ is('the thing gone with', {<schema: ContainerOf(*1)>:'the player'}) ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the room gone from is the room gone to'
                                                                INVOCATION_NT'if the room gone from is the room gone to'
                                                                    CONDITION_CONTEXT_NT'room gone from is the room gone to'
                                                                        TEST_PROPOSITION_NT'room gone from is the room gone to'(test: [ is('room gone from', 'the room gone to') ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'continue the action'
                                                                    INVOCATION_NT'continue the action'
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the noun is up'
                                                                        INVOCATION_NT'if the noun is up'
                                                                            CONDITION_CONTEXT_NT'noun is up'
                                                                                TEST_PROPOSITION_NT'noun is up'(test: [ is('noun', 'up') ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT'say "[The actor] [go] up" ( a )'
                                                                            INVOCATION_LIST_SAY_NT'"[The actor] [go] up" ( a )'
                                                                                INVOCATION_NT'"[The actor] [go] up" ( a )'
                                                                                    RVALUE_CONTEXT_NT'"[The actor] [go] up" ( a )'
                                                                                        CONSTANT_NT'"[The actor] [go] up" ( a )'-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT
                                                                            INVOCATION_LIST_NT'if the noun is down'
                                                                                INVOCATION_NT'if the noun is down'
                                                                                    CONDITION_CONTEXT_NT'noun is down'
                                                                                        TEST_PROPOSITION_NT'noun is down'(test: [ is('noun', 'down') ])
                                                                            CODE_BLOCK_NT
                                                                                CODE_BLOCK_NT'say "[The actor] [go] down" ( b )'
                                                                                    INVOCATION_LIST_SAY_NT'"[The actor] [go] down" ( b )'
                                                                                        INVOCATION_NT'"[The actor] [go] down" ( b )'
                                                                                            RVALUE_CONTEXT_NT'"[The actor] [go] down" ( b )'
                                                                                                CONSTANT_NT'"[The actor] [go] down" ( b )'-text
                                                                            CODE_BLOCK_NT'otherwise'
                                                                                CODE_BLOCK_NT'say "[The actor] [go] [noun]" ( c )'
                                                                                    INVOCATION_LIST_SAY_NT'"[The actor] [go] [noun]" ( c )'
                                                                                        INVOCATION_NT'"[The actor] [go] [noun]" ( c )'
                                                                                            RVALUE_CONTEXT_NT'"[The actor] [go] [noun]" ( c )'
                                                                                                CONSTANT_NT'"[The actor] [go] [noun]" ( c )'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        INVOCATION_LIST_NT'let the back way be the opposite of the noun'
                                                            INVOCATION_NT'let the back way be the opposite of the noun'
                                                                NEW_LOCAL_CONTEXT_NT'back way'
                                                                    UNKNOWN_NT'back way'
                                                                RVALUE_CONTEXT_NT'opposite of the noun'
                                                                    PROPERTY_VALUE_NT'opposite of the noun'
                                                                        CONSTANT_NT-nothing valued property
                                                                        NONLOCAL_VARIABLE_NT'the noun'('noun'(var)[object])
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the location is the room gone to'
                                                                INVOCATION_NT'if the location is the room gone to'
                                                                    CONDITION_CONTEXT_NT'location is the room gone to'
                                                                        TEST_PROPOSITION_NT'location is the room gone to'(test: [ is('location', 'the room gone to') ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'let the room back the other way be the room back way from th'
                                                                    INVOCATION_NT'let the room back the other way be the room back way from th'
                                                                        NEW_LOCAL_CONTEXT_NT'room back the other way'
                                                                            UNKNOWN_NT'room back the other way'
                                                                        RVALUE_CONTEXT_NT'room back way from the location'
                                                                            PHRASE_TO_DECIDE_VALUE_NT'room back way from the location'
                                                                                INVOCATION_LIST_NT'room back way from the location'
                                                                                    INVOCATION_NT'room back way from the location'
                                                                                        RVALUE_CONTEXT_NT'back way'
                                                                                            LOCAL_VARIABLE_NT'back way'(tmp_0;direction)
                                                                                        RVALUE_CONTEXT_NT'location'
                                                                                            NONLOCAL_VARIABLE_NT'location'('location'(var)[object])
                                                                INVOCATION_LIST_NT'let the room normally this way be the room noun from the roo'
                                                                    INVOCATION_NT'let the room normally this way be the room noun from the roo'
                                                                        NEW_LOCAL_CONTEXT_NT'room normally this way'
                                                                            UNKNOWN_NT'room normally this way'
                                                                        RVALUE_CONTEXT_NT'room noun from the room gone from'
                                                                            PHRASE_TO_DECIDE_VALUE_NT'room noun from the room gone from'
                                                                                INVOCATION_LIST_NT'room noun from the room gone from'
                                                                                    INVOCATION_NT'room noun from the room gone from'
                                                                                        RVALUE_CONTEXT_NT'noun'
                                                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                                                                        RVALUE_CONTEXT_NT'room gone from'
                                                                                            NONLOCAL_VARIABLE_NT'room gone from'('room gone from'(var)[room])
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the room back the other way is the room gone from or the '
                                                                        INVOCATION_NT'if the room back the other way is the room gone from or the '
                                                                            CONDITION_CONTEXT_NT'room back the other way is the room gone from or the room ba'
                                                                                LOGICAL_OR_NT'room back the other way is the room gone from or the room ba'
                                                                                    TEST_PROPOSITION_NT'room back the other way is the room gone from'(test: [ is('room back the other way', 'the room gone from') ])
                                                                                    TEST_PROPOSITION_NT'the room back the other way is the room normally this way'(test: [ is('the room back the other way', 'the room normally this way') ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT
                                                                            INVOCATION_LIST_NT'if the back way is up'
                                                                                INVOCATION_NT'if the back way is up'
                                                                                    CONDITION_CONTEXT_NT'back way is up'
                                                                                        TEST_PROPOSITION_NT'back way is up'(test: [ is('back way', 'up') ])
                                                                            CODE_BLOCK_NT
                                                                                CODE_BLOCK_NT'say "[The actor] [arrive] from above" ( d )'
                                                                                    INVOCATION_LIST_SAY_NT'"[The actor] [arrive] from above" ( d )'
                                                                                        INVOCATION_NT'"[The actor] [arrive] from above" ( d )'
                                                                                            RVALUE_CONTEXT_NT'"[The actor] [arrive] from above" ( d )'
                                                                                                CONSTANT_NT'"[The actor] [arrive] from above" ( d )'-text
                                                                            CODE_BLOCK_NT'otherwise'
                                                                                CODE_BLOCK_NT
                                                                                    INVOCATION_LIST_NT'if the back way is down'
                                                                                        INVOCATION_NT'if the back way is down'
                                                                                            CONDITION_CONTEXT_NT'back way is down'
                                                                                                TEST_PROPOSITION_NT'back way is down'(test: [ is('back way', 'down') ])
                                                                                    CODE_BLOCK_NT
                                                                                        CODE_BLOCK_NT'say "[The actor] [arrive] from below" ( e )'
                                                                                            INVOCATION_LIST_SAY_NT'"[The actor] [arrive] from below" ( e )'
                                                                                                INVOCATION_NT'"[The actor] [arrive] from below" ( e )'
                                                                                                    RVALUE_CONTEXT_NT'"[The actor] [arrive] from below" ( e )'
                                                                                                        CONSTANT_NT'"[The actor] [arrive] from below" ( e )'-text
                                                                                    CODE_BLOCK_NT'otherwise'
                                                                                        CODE_BLOCK_NT'say "[The actor] [arrive] from [the back way]" ( f )'
                                                                                            INVOCATION_LIST_SAY_NT'"[The actor] [arrive] from [the back way]" ( f )'
                                                                                                INVOCATION_NT'"[The actor] [arrive] from [the back way]" ( f )'
                                                                                                    RVALUE_CONTEXT_NT'"[The actor] [arrive] from [the back way]" ( f )'
                                                                                                        CONSTANT_NT'"[The actor] [arrive] from [the back way]" ( f )'-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT'say "[The actor] [arrive]" ( g )'
                                                                            INVOCATION_LIST_SAY_NT'"[The actor] [arrive]" ( g )'
                                                                                INVOCATION_NT'"[The actor] [arrive]" ( g )'
                                                                                    RVALUE_CONTEXT_NT'"[The actor] [arrive]" ( g )'
                                                                                        CONSTANT_NT'"[The actor] [arrive]" ( g )'-text
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the back way is up'
                                                                        INVOCATION_NT'if the back way is up'
                                                                            CONDITION_CONTEXT_NT'back way is up'
                                                                                TEST_PROPOSITION_NT'back way is up'(test: [ is('back way', 'up') ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT'say "[The actor] [arrive] at [the room gone to] from above" '
                                                                            INVOCATION_LIST_SAY_NT'"[The actor] [arrive] at [the room gone to] from above" ( h '
                                                                                INVOCATION_NT'"[The actor] [arrive] at [the room gone to] from above" ( h '
                                                                                    RVALUE_CONTEXT_NT'"[The actor] [arrive] at [the room gone to] from above" ( h '
                                                                                        CONSTANT_NT'"[The actor] [arrive] at [the room gone to] from above" ( h '-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT
                                                                            INVOCATION_LIST_NT'if the back way is down'
                                                                                INVOCATION_NT'if the back way is down'
                                                                                    CONDITION_CONTEXT_NT'back way is down'
                                                                                        TEST_PROPOSITION_NT'back way is down'(test: [ is('back way', 'down') ])
                                                                            CODE_BLOCK_NT
                                                                                CODE_BLOCK_NT'say "[The actor] [arrive] at [the room gone to] from below" '
                                                                                    INVOCATION_LIST_SAY_NT'"[The actor] [arrive] at [the room gone to] from below" ( i '
                                                                                        INVOCATION_NT'"[The actor] [arrive] at [the room gone to] from below" ( i '
                                                                                            RVALUE_CONTEXT_NT'"[The actor] [arrive] at [the room gone to] from below" ( i '
                                                                                                CONSTANT_NT'"[The actor] [arrive] at [the room gone to] from below" ( i '-text
                                                                            CODE_BLOCK_NT'otherwise'
                                                                                CODE_BLOCK_NT'say "[The actor] [arrive] at [the room gone to] from [the ba'
                                                                                    INVOCATION_LIST_SAY_NT'"[The actor] [arrive] at [the room gone to] from [the back w'
                                                                                        INVOCATION_NT'"[The actor] [arrive] at [the room gone to] from [the back w'
                                                                                            RVALUE_CONTEXT_NT'"[The actor] [arrive] at [the room gone to] from [the back w'
                                                                                                CONSTANT_NT'"[The actor] [arrive] at [the room gone to] from [the back w'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the location is the room gone from'
                                                        INVOCATION_NT'if the location is the room gone from'
                                                            CONDITION_CONTEXT_NT'location is the room gone from'
                                                                TEST_PROPOSITION_NT'location is the room gone from'(test: [ is('location', 'the room gone from') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[The actor] [go] through [the noun]" ( k )'
                                                            INVOCATION_LIST_SAY_NT'"[The actor] [go] through [the noun]" ( k )'
                                                                INVOCATION_NT'"[The actor] [go] through [the noun]" ( k )'
                                                                    RVALUE_CONTEXT_NT'"[The actor] [go] through [the noun]" ( k )'
                                                                        CONSTANT_NT'"[The actor] [go] through [the noun]" ( k )'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT'say "[The actor] [arrive] from [the noun]" ( l )'
                                                            INVOCATION_LIST_SAY_NT'"[The actor] [arrive] from [the noun]" ( l )'
                                                                INVOCATION_NT'"[The actor] [arrive] from [the noun]" ( l )'
                                                                    RVALUE_CONTEXT_NT'"[The actor] [arrive] from [the noun]" ( l )'
                                                                        CONSTANT_NT'"[The actor] [arrive] from [the noun]" ( l )'-text
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the vehicle gone by is not nothing'
                                                INVOCATION_NT'if the vehicle gone by is not nothing'
                                                    CONDITION_CONTEXT_NT'vehicle gone by is not nothing'
                                                        TEST_PROPOSITION_NT'vehicle gone by is not nothing'(test: [ NOT[ is('vehicle gone by', 'nothing') NOT] ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say " "'
                                                    INVOCATION_LIST_SAY_NT'" "'
                                                        INVOCATION_NT'" "'
                                                            RVALUE_CONTEXT_NT'" "'
                                                                CONSTANT_NT'" "'-text
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the vehicle gone by is a supporter'
                                                        INVOCATION_NT'if the vehicle gone by is a supporter'
                                                            CONDITION_CONTEXT_NT'vehicle gone by is a supporter'
                                                                TEST_PROPOSITION_NT'vehicle gone by is a supporter'(test: [ kind=supporter('vehicle gone by') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "on [the vehicle gone by]" ( m )'
                                                            INVOCATION_LIST_SAY_NT'"on [the vehicle gone by]" ( m )'
                                                                INVOCATION_NT'"on [the vehicle gone by]" ( m )'
                                                                    RVALUE_CONTEXT_NT'"on [the vehicle gone by]" ( m )'
                                                                        CONSTANT_NT'"on [the vehicle gone by]" ( m )'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT'say "in [the vehicle gone by]" ( n )'
                                                            INVOCATION_LIST_SAY_NT'"in [the vehicle gone by]" ( n )'
                                                                INVOCATION_NT'"in [the vehicle gone by]" ( n )'
                                                                    RVALUE_CONTEXT_NT'"in [the vehicle gone by]" ( n )'
                                                                        CONSTANT_NT'"in [the vehicle gone by]" ( n )'-text
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the thing gone with is not nothing'
                                                INVOCATION_NT'if the thing gone with is not nothing'
                                                    CONDITION_CONTEXT_NT'thing gone with is not nothing'
                                                        TEST_PROPOSITION_NT'thing gone with is not nothing'(test: [ NOT[ is('thing gone with', 'nothing') NOT] ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the player is within the thing gone with'
                                                        INVOCATION_NT'if the player is within the thing gone with'
                                                            CONDITION_CONTEXT_NT'player is within the thing gone with'
                                                                TEST_PROPOSITION_NT'player is within the thing gone with'(test: [ is('the thing gone with', {<schema: ContainerOf(*1)>:'player'}) ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say ", pushing [the thing gone with] in front, and [us] alon'
                                                            INVOCATION_LIST_SAY_NT'", pushing [the thing gone with] in front, and [us] along to'
                                                                INVOCATION_NT'", pushing [the thing gone with] in front, and [us] along to'
                                                                    RVALUE_CONTEXT_NT'", pushing [the thing gone with] in front, and [us] along to'
                                                                        CONSTANT_NT'", pushing [the thing gone with] in front, and [us] along to'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the player is within the vehicle gone by'
                                                                INVOCATION_NT'if the player is within the vehicle gone by'
                                                                    CONDITION_CONTEXT_NT'player is within the vehicle gone by'
                                                                        TEST_PROPOSITION_NT'player is within the vehicle gone by'(test: [ is('the vehicle gone by', {<schema: ContainerOf(*1)>:'player'}) ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say ", pushing [the thing gone with] in front" ( p )'
                                                                    INVOCATION_LIST_SAY_NT'", pushing [the thing gone with] in front" ( p )'
                                                                        INVOCATION_NT'", pushing [the thing gone with] in front" ( p )'
                                                                            RVALUE_CONTEXT_NT'", pushing [the thing gone with] in front" ( p )'
                                                                                CONSTANT_NT'", pushing [the thing gone with] in front" ( p )'-text
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the location is the room gone from'
                                                                        INVOCATION_NT'if the location is the room gone from'
                                                                            CONDITION_CONTEXT_NT'location is the room gone from'
                                                                                TEST_PROPOSITION_NT'location is the room gone from'(test: [ is('location', 'the room gone from') ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT'say ", pushing [the thing gone with] away" ( q )'
                                                                            INVOCATION_LIST_SAY_NT'", pushing [the thing gone with] away" ( q )'
                                                                                INVOCATION_NT'", pushing [the thing gone with] away" ( q )'
                                                                                    RVALUE_CONTEXT_NT'", pushing [the thing gone with] away" ( q )'
                                                                                        CONSTANT_NT'", pushing [the thing gone with] away" ( q )'-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT'say ", pushing [the thing gone with] in" ( r )'
                                                                            INVOCATION_LIST_SAY_NT'", pushing [the thing gone with] in" ( r )'
                                                                                INVOCATION_NT'", pushing [the thing gone with] in" ( r )'
                                                                                    RVALUE_CONTEXT_NT'", pushing [the thing gone with] in" ( r )'
                                                                                        CONSTANT_NT'", pushing [the thing gone with] in" ( r )'-text
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is within the vehicle gone by and the player i'
                                                INVOCATION_NT'if the player is within the vehicle gone by and the player i'
                                                    CONDITION_CONTEXT_NT'player is within the vehicle gone by and the player is not w'
                                                        LOGICAL_AND_NT'player is within the vehicle gone by and the player is not w'
                                                            TEST_PROPOSITION_NT'player is within the vehicle gone by'(test: [ is('the vehicle gone by', {<schema: ContainerOf(*1)>:'player'}) ])
                                                            TEST_PROPOSITION_NT'the player is not within the thing gone with'(test: [ NOT[ is('the thing gone with', {<schema: ContainerOf(*1)>:'the player'}) NOT] ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say ", taking [us] along" ( s )'
                                                    INVOCATION_LIST_SAY_NT'", taking [us] along" ( s )'
                                                        INVOCATION_NT'", taking [us] along" ( s )'
                                                            RVALUE_CONTEXT_NT'", taking [us] along" ( s )'
                                                                CONSTANT_NT'", taking [us] along" ( s )'-text
                                                CODE_BLOCK_NT'say "."'
                                                    INVOCATION_LIST_SAY_NT'"."'
                                                        INVOCATION_NT'"."'
                                                            RVALUE_CONTEXT_NT'"."'
                                                                CONSTANT_NT'"."'-text
                                                INVOCATION_LIST_NT'try looking'
                                                    INVOCATION_NT'try looking'
                                                        RVALUE_CONTEXT_NT'looking'
                                                            CONSTANT_NT'looking'-action
                                                INVOCATION_LIST_NT'continue the action'
                                                    INVOCATION_NT'continue the action'
                                        CODE_BLOCK_NT'say "."'
                                            INVOCATION_LIST_SAY_NT'"."'
                                                INVOCATION_NT'"."'
                                                    RVALUE_CONTEXT_NT'"."'
                                                        CONSTANT_NT'"."'-text
                        SENTENCE_NT'entering is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'entering'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the entering action translates into i6 as Enter'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'entering action'
                            PROPER_NOUN_NT'Enter'
                        SENTENCE_NT'the specification of the entering action is Whereas the goin'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the entering action'
                                PROPER_NOUN_NT'entering action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Whereas the going action allows
                            people to move from one loca'
                        RULE_NT'rule for supplying a missing noun while entering ( this is t'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if something enterable ( called the box ) is in the location'
                                        INVOCATION_NT'if something enterable ( called the box ) is in the location'
                                            CONDITION_CONTEXT_NT'something enterable ( called the box ) is in the location'
                                                TEST_PROPOSITION_NT'something enterable ( called the box ) is in the location'(test: [ Exists x : kind=thing_c(x) ^ A77'enterable'(x) ^ called='box'(thing)(x) ^ is('the location', {<schema: ContainerOf(*1)>:x}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the noun is the box'
                                            CONDITION_CONTEXT_NT'the noun is the box'
                                    CODE_BLOCK_NT'otherwise'
                                        INVOCATION_LIST_NT'continue the activity'
                                            INVOCATION_NT'continue the activity'
                        SENTENCE_NT'the find what to enter rule is listed last in the for supply'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the find what to enter rule'
                            PROPER_NOUN_NT'last in the for supplying a missing noun rulebook'
                        RULE_NT'check an actor entering ( this is the convert enter door int'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a door'
                                        INVOCATION_NT'if the noun is a door'
                                            CONDITION_CONTEXT_NT'noun is a door'
                                                TEST_PROPOSITION_NT'noun is a door'(test: [ kind=door('noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'convert to the going action on the noun'
                                            INVOCATION_NT'convert to the going action on the noun'
                                                RVALUE_CONTEXT_NT'going action'
                                                    CONSTANT_NT'going action'-action name
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        RULE_NT'check an actor entering ( this is the convert enter compass '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a direction'
                                        INVOCATION_NT'if the noun is a direction'
                                            CONDITION_CONTEXT_NT'noun is a direction'
                                                TEST_PROPOSITION_NT'noun is a direction'(test: [ kind=direction('noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'convert to the going action on the noun'
                                            INVOCATION_NT'convert to the going action on the noun'
                                                RVALUE_CONTEXT_NT'going action'
                                                    CONSTANT_NT'going action'-action name
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        RULE_NT'check an actor entering ( this is the can't enter what's alr'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the noun'
                                        INVOCATION_NT'if the actor is the noun'
                                            CONDITION_CONTEXT_NT'actor is the noun'
                                                TEST_PROPOSITION_NT'actor is the noun'(test: [ is('actor', 'the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'make no decision'
                                            INVOCATION_NT'make no decision'
                                INVOCATION_LIST_NT'let the local ceiling be the common ancestor of the actor wi'
                                    INVOCATION_NT'let the local ceiling be the common ancestor of the actor wi'
                                        NEW_LOCAL_CONTEXT_NT'local ceiling'
                                            UNKNOWN_NT'local ceiling'
                                        RVALUE_CONTEXT_NT'common ancestor of the actor with the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'common ancestor of the actor with the noun'
                                                INVOCATION_LIST_NT'common ancestor of the actor with the noun'
                                                    INVOCATION_NT'common ancestor of the actor with the noun'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the local ceiling is the noun'
                                        INVOCATION_NT'if the local ceiling is the noun'
                                            CONDITION_CONTEXT_NT'local ceiling is the noun'
                                                TEST_PROPOSITION_NT'local ceiling is the noun'(test: [ is('local ceiling', 'the noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the noun is a supporter'
                                                        INVOCATION_NT'if the noun is a supporter'
                                                            CONDITION_CONTEXT_NT'noun is a supporter'
                                                                TEST_PROPOSITION_NT'noun is a supporter'(test: [ kind=supporter('noun') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "But [we]['re] already on [the noun]." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"But [we]['re] already on [the noun]." ( a )'
                                                                INVOCATION_NT'"But [we]['re] already on [the noun]." ( a )'
                                                                    RVALUE_CONTEXT_NT'"But [we]['re] already on [the noun]." ( a )'
                                                                        CONSTANT_NT'"But [we]['re] already on [the noun]." ( a )'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT'say "But [we]['re] already in [the noun]." ( b )'
                                                            INVOCATION_LIST_SAY_NT'"But [we]['re] already in [the noun]." ( b )'
                                                                INVOCATION_NT'"But [we]['re] already in [the noun]." ( b )'
                                                                    RVALUE_CONTEXT_NT'"But [we]['re] already in [the noun]." ( b )'
                                                                        CONSTANT_NT'"But [we]['re] already in [the noun]." ( b )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor entering ( this is the can't enter what's not'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not enterable'
                                        INVOCATION_NT'if the noun is not enterable'
                                            CONDITION_CONTEXT_NT'noun is not enterable'
                                                TEST_PROPOSITION_NT'noun is not enterable'(test: [ NOT[ A77'enterable'('noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the player's command includes "stand"'
                                                        INVOCATION_NT'if the player's command includes "stand"'
                                                            CONDITION_CONTEXT_NT'player's command includes "stand"'
                                                                TEST_VALUE_NT'player's command includes "stand"'
                                                                    PHRASE_TO_DECIDE_VALUE_NT'player's command includes "stand"'
                                                                        INVOCATION_LIST_NT'player's command includes "stand"'
                                                                            INVOCATION_NT'player's command includes "stand"'
                                                                                RVALUE_CONTEXT_NT'player's command'
                                                                                    NONLOCAL_VARIABLE_NT'player's command'('player's command'(var)[snippet])
                                                                                RVALUE_CONTEXT_NT'"stand"'
                                                                                    CONSTANT_NT'"stand"'-topic
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[regarding the noun][They're] not something [we] [can] '
                                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] not something [we] [can] stan'
                                                                INVOCATION_NT'"[regarding the noun][They're] not something [we] [can] stan'
                                                                    RVALUE_CONTEXT_NT'"[regarding the noun][They're] not something [we] [can] stan'
                                                                        CONSTANT_NT'"[regarding the noun][They're] not something [we] [can] stan'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the player's command includes "sit"'
                                                                INVOCATION_NT'if the player's command includes "sit"'
                                                                    CONDITION_CONTEXT_NT'player's command includes "sit"'
                                                                        TEST_VALUE_NT'player's command includes "sit"'
                                                                            PHRASE_TO_DECIDE_VALUE_NT'player's command includes "sit"'
                                                                                INVOCATION_LIST_NT'player's command includes "sit"'
                                                                                    INVOCATION_NT'player's command includes "sit"'
                                                                                        RVALUE_CONTEXT_NT'player's command'
                                                                                            NONLOCAL_VARIABLE_NT'player's command'('player's command'(var)[snippet])
                                                                                        RVALUE_CONTEXT_NT'"sit"'
                                                                                            CONSTANT_NT'"sit"'-topic
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say "[regarding the noun][They're] not something [we] [can] '
                                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] not something [we] [can] sit '
                                                                        INVOCATION_NT'"[regarding the noun][They're] not something [we] [can] sit '
                                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] not something [we] [can] sit '
                                                                                CONSTANT_NT'"[regarding the noun][They're] not something [we] [can] sit '-text
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the player's command includes "lie"'
                                                                        INVOCATION_NT'if the player's command includes "lie"'
                                                                            CONDITION_CONTEXT_NT'player's command includes "lie"'
                                                                                TEST_VALUE_NT'player's command includes "lie"'
                                                                                    PHRASE_TO_DECIDE_VALUE_NT'player's command includes "lie"'
                                                                                        INVOCATION_LIST_NT'player's command includes "lie"'
                                                                                            INVOCATION_NT'player's command includes "lie"'
                                                                                                RVALUE_CONTEXT_NT'player's command'
                                                                                                    NONLOCAL_VARIABLE_NT'player's command'('player's command'(var)[snippet])
                                                                                                RVALUE_CONTEXT_NT'"lie"'
                                                                                                    CONSTANT_NT'"lie"'-topic
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT'say "[regarding the noun][They're] not something [we] [can] '
                                                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] not something [we] [can] lie '
                                                                                INVOCATION_NT'"[regarding the noun][They're] not something [we] [can] lie '
                                                                                    RVALUE_CONTEXT_NT'"[regarding the noun][They're] not something [we] [can] lie '
                                                                                        CONSTANT_NT'"[regarding the noun][They're] not something [we] [can] lie '-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT'say "[regarding the noun][They're] not something [we] [can] '
                                                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] not something [we] [can] ente'
                                                                                INVOCATION_NT'"[regarding the noun][They're] not something [we] [can] ente'
                                                                                    RVALUE_CONTEXT_NT'"[regarding the noun][They're] not something [we] [can] ente'
                                                                                        CONSTANT_NT'"[regarding the noun][They're] not something [we] [can] ente'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor entering ( this is the can't enter closed con'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a closed container'
                                        INVOCATION_NT'if the noun is a closed container'
                                            CONDITION_CONTEXT_NT'noun is a closed container'
                                                TEST_PROPOSITION_NT'noun is a closed container'(test: [ kind=container('noun') ^ A81'closed'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't get] into the closed [noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't get] into the closed [noun]." ( a )'
                                                        INVOCATION_NT'"[We] [can't get] into the closed [noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [can't get] into the closed [noun]." ( a )'
                                                                CONSTANT_NT'"[We] [can't get] into the closed [noun]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor entering ( this is the can't enter if this ex'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property carrying capacity'
                                        INVOCATION_NT'if the noun provides the property carrying capacity'
                                            CONDITION_CONTEXT_NT'noun provides the property carrying capacity'
                                                TEST_PROPOSITION_NT'noun provides the property carrying capacity'(test: [ provides('noun', 'the property carrying capacity') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the noun is a supporter'
                                                INVOCATION_NT'if the noun is a supporter'
                                                    CONDITION_CONTEXT_NT'noun is a supporter'
                                                        TEST_PROPOSITION_NT'noun is a supporter'(test: [ kind=supporter('noun') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the number of things on the noun is at least the carrying'
                                                        INVOCATION_NT'if the number of things on the noun is at least the carrying'
                                                            CONDITION_CONTEXT_NT'number of things on the noun is at least the carrying capaci'
                                                                TEST_PROPOSITION_NT'number of things on the noun is at least the carrying capaci'(test: [ at-least('number of things on the noun', 'the carrying capacity of the noun') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the actor is the player'
                                                                INVOCATION_NT'if the actor is the player'
                                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                            CODE_BLOCK_NT
                                                                INVOCATION_LIST_NT'now the prior named object is nothing'
                                                                    CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                                CODE_BLOCK_NT'say "[There] [are] no more room on [the noun]." ( a )'
                                                                    INVOCATION_LIST_SAY_NT'"[There] [are] no more room on [the noun]." ( a )'
                                                                        INVOCATION_NT'"[There] [are] no more room on [the noun]." ( a )'
                                                                            RVALUE_CONTEXT_NT'"[There] [are] no more room on [the noun]." ( a )'
                                                                                CONSTANT_NT'"[There] [are] no more room on [the noun]." ( a )'-text
                                                        INVOCATION_LIST_NT'stop the action'
                                                            INVOCATION_NT'stop the action'
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the noun is a container'
                                                        INVOCATION_NT'if the noun is a container'
                                                            CONDITION_CONTEXT_NT'noun is a container'
                                                                TEST_PROPOSITION_NT'noun is a container'(test: [ kind=container('noun') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the number of things in the noun is at least the carrying'
                                                                INVOCATION_NT'if the number of things in the noun is at least the carrying'
                                                                    CONDITION_CONTEXT_NT'number of things in the noun is at least the carrying capaci'
                                                                        TEST_PROPOSITION_NT'number of things in the noun is at least the carrying capaci'(test: [ at-least('number of things in the noun', 'the carrying capacity of the noun') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the actor is the player'
                                                                        INVOCATION_NT'if the actor is the player'
                                                                            CONDITION_CONTEXT_NT'actor is the player'
                                                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                                    CODE_BLOCK_NT
                                                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                                        CODE_BLOCK_NT'say "[There] [are] no more room in [the noun]." ( b )'
                                                                            INVOCATION_LIST_SAY_NT'"[There] [are] no more room in [the noun]." ( b )'
                                                                                INVOCATION_NT'"[There] [are] no more room in [the noun]." ( b )'
                                                                                    RVALUE_CONTEXT_NT'"[There] [are] no more room in [the noun]." ( b )'
                                                                                        CONSTANT_NT'"[There] [are] no more room in [the noun]." ( b )'-text
                                                                INVOCATION_LIST_NT'stop the action'
                                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor entering ( this is the can't enter something '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the local ceiling be the common ancestor of the actor wi'
                                    INVOCATION_NT'let the local ceiling be the common ancestor of the actor wi'
                                        NEW_LOCAL_CONTEXT_NT'local ceiling'
                                            UNKNOWN_NT'local ceiling'
                                        RVALUE_CONTEXT_NT'common ancestor of the actor with the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'common ancestor of the actor with the noun'
                                                INVOCATION_LIST_NT'common ancestor of the actor with the noun'
                                                    INVOCATION_NT'common ancestor of the actor with the noun'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the local ceiling is the actor'
                                        INVOCATION_NT'if the local ceiling is the actor'
                                            CONDITION_CONTEXT_NT'local ceiling is the actor'
                                                TEST_PROPOSITION_NT'local ceiling is the actor'(test: [ is('local ceiling', 'the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can] only get into something free-standing." ( a '
                                                    INVOCATION_LIST_SAY_NT'"[We] [can] only get into something free-standing." ( a )'
                                                        INVOCATION_NT'"[We] [can] only get into something free-standing." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [can] only get into something free-standing." ( a )'
                                                                CONSTANT_NT'"[We] [can] only get into something free-standing." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor entering ( this is the implicitly pass throug'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the holder of the actor is the holder of the noun'
                                        INVOCATION_NT'if the holder of the actor is the holder of the noun'
                                            CONDITION_CONTEXT_NT'holder of the actor is the holder of the noun'
                                                TEST_PROPOSITION_NT'holder of the actor is the holder of the noun'(test: [ is('holder of the actor', 'the holder of the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                INVOCATION_LIST_NT'let the local ceiling be the common ancestor of the actor wi'
                                    INVOCATION_NT'let the local ceiling be the common ancestor of the actor wi'
                                        NEW_LOCAL_CONTEXT_NT'local ceiling'
                                            UNKNOWN_NT'local ceiling'
                                        RVALUE_CONTEXT_NT'common ancestor of the actor with the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'common ancestor of the actor with the noun'
                                                INVOCATION_LIST_NT'common ancestor of the actor with the noun'
                                                    INVOCATION_NT'common ancestor of the actor with the noun'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'while the holder of the actor is not the local ceiling'
                                        INVOCATION_NT'while the holder of the actor is not the local ceiling'
                                            CONDITION_CONTEXT_NT'holder of the actor is not the local ceiling'
                                                TEST_PROPOSITION_NT'holder of the actor is not the local ceiling'(test: [ NOT[ is('holder of the actor', 'the local ceiling') NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'let the current home be the holder of the actor'
                                            INVOCATION_NT'let the current home be the holder of the actor'
                                                NEW_LOCAL_CONTEXT_NT'current home'
                                                    UNKNOWN_NT'current home'
                                                RVALUE_CONTEXT_NT'holder of the actor'
                                                    PHRASE_TO_DECIDE_VALUE_NT'holder of the actor'
                                                        INVOCATION_LIST_NT'holder of the actor'
                                                            INVOCATION_NT'holder of the actor'
                                                                RVALUE_CONTEXT_NT'actor'
                                                                    NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the current home is a supporter or the current home is an'
                                                        INVOCATION_NT'if the current home is a supporter or the current home is an'
                                                            CONDITION_CONTEXT_NT'current home is a supporter or the current home is an animal'
                                                                LOGICAL_OR_NT'current home is a supporter or the current home is an animal'
                                                                    TEST_PROPOSITION_NT'current home is a supporter'(test: [ kind=supporter('current home') ])
                                                                    TEST_PROPOSITION_NT'the current home is an animal'(test: [ kind=animal('the current home') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "(getting off [the current home])[command clarification '
                                                            INVOCATION_LIST_SAY_NT'"(getting off [the current home])[command clarification brea'
                                                                INVOCATION_NT'"(getting off [the current home])[command clarification brea'
                                                                    RVALUE_CONTEXT_NT'"(getting off [the current home])[command clarification brea'
                                                                        CONSTANT_NT'"(getting off [the current home])[command clarification brea'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT'say "(getting out of [the current home])[command clarificati'
                                                            INVOCATION_LIST_SAY_NT'"(getting out of [the current home])[command clarification b'
                                                                INVOCATION_NT'"(getting out of [the current home])[command clarification b'
                                                                    RVALUE_CONTEXT_NT'"(getting out of [the current home])[command clarification b'
                                                                        CONSTANT_NT'"(getting out of [the current home])[command clarification b'-text
                                        INVOCATION_LIST_NT'silently try the actor trying exiting'
                                            INVOCATION_NT'silently try the actor trying exiting'
                                                RVALUE_CONTEXT_NT'actor trying exiting'
                                                    CONSTANT_NT'actor trying exiting'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the holder of the actor is the current home'
                                                INVOCATION_NT'if the holder of the actor is the current home'
                                                    CONDITION_CONTEXT_NT'holder of the actor is the current home'
                                                        TEST_PROPOSITION_NT'holder of the actor is the current home'(test: [ is('holder of the actor', 'the current home') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the holder of the actor is the noun'
                                        INVOCATION_NT'if the holder of the actor is the noun'
                                            CONDITION_CONTEXT_NT'holder of the actor is the noun'
                                                TEST_PROPOSITION_NT'holder of the actor is the noun'(test: [ is('holder of the actor', 'the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the holder of the actor is the holder of the noun'
                                        INVOCATION_NT'if the holder of the actor is the holder of the noun'
                                            CONDITION_CONTEXT_NT'holder of the actor is the holder of the noun'
                                                TEST_PROPOSITION_NT'holder of the actor is the holder of the noun'(test: [ is('holder of the actor', 'the holder of the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                INVOCATION_LIST_NT'let the target be the holder of the noun'
                                    INVOCATION_NT'let the target be the holder of the noun'
                                        NEW_LOCAL_CONTEXT_NT'target'
                                            UNKNOWN_NT'target'
                                        RVALUE_CONTEXT_NT'holder of the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'holder of the noun'
                                                INVOCATION_LIST_NT'holder of the noun'
                                                    INVOCATION_NT'holder of the noun'
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is part of the target'
                                        INVOCATION_NT'if the noun is part of the target'
                                            CONDITION_CONTEXT_NT'noun is part of the target'
                                                TEST_PROPOSITION_NT'noun is part of the target'(test: [ is('the target', {<schema: (*1.component_parent)>:'noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'let the target be the holder of the target'
                                            INVOCATION_NT'let the target be the holder of the target'
                                                LVALUE_LOCAL_CONTEXT_NT'target'
                                                    LOCAL_VARIABLE_NT'target'(tmp_1;object)
                                                RVALUE_CONTEXT_NT'holder of the target'
                                                    PHRASE_TO_DECIDE_VALUE_NT'holder of the target'
                                                        INVOCATION_LIST_NT'holder of the target'
                                                            INVOCATION_NT'holder of the target'
                                                                RVALUE_CONTEXT_NT'target'
                                                                    LOCAL_VARIABLE_NT'target'(tmp_1;object)
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'while the target is a thing'
                                        INVOCATION_NT'while the target is a thing'
                                            CONDITION_CONTEXT_NT'target is a thing'
                                                TEST_PROPOSITION_NT'target is a thing'(test: [ kind=thing('target') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the holder of the target is the local ceiling'
                                                INVOCATION_NT'if the holder of the target is the local ceiling'
                                                    CONDITION_CONTEXT_NT'holder of the target is the local ceiling'
                                                        TEST_PROPOSITION_NT'holder of the target is the local ceiling'(test: [ is('holder of the target', 'the local ceiling') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the player is the actor'
                                                        INVOCATION_NT'if the player is the actor'
                                                            CONDITION_CONTEXT_NT'player is the actor'
                                                                TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if the target is a supporter'
                                                                INVOCATION_NT'if the target is a supporter'
                                                                    CONDITION_CONTEXT_NT'target is a supporter'
                                                                        TEST_PROPOSITION_NT'target is a supporter'(test: [ kind=supporter('target') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT'say "(getting onto [the target])[command clarification break'
                                                                    INVOCATION_LIST_SAY_NT'"(getting onto [the target])[command clarification break]" ('
                                                                        INVOCATION_NT'"(getting onto [the target])[command clarification break]" ('
                                                                            RVALUE_CONTEXT_NT'"(getting onto [the target])[command clarification break]" ('
                                                                                CONSTANT_NT'"(getting onto [the target])[command clarification break]" ('-text
                                                            CODE_BLOCK_NT'otherwise'
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the target is a container'
                                                                        INVOCATION_NT'if the target is a container'
                                                                            CONDITION_CONTEXT_NT'target is a container'
                                                                                TEST_PROPOSITION_NT'target is a container'(test: [ kind=container('target') ])
                                                                    CODE_BLOCK_NT
                                                                        CODE_BLOCK_NT'say "(getting into [the target])[command clarification break'
                                                                            INVOCATION_LIST_SAY_NT'"(getting into [the target])[command clarification break]" ('
                                                                                INVOCATION_NT'"(getting into [the target])[command clarification break]" ('
                                                                                    RVALUE_CONTEXT_NT'"(getting into [the target])[command clarification break]" ('
                                                                                        CONSTANT_NT'"(getting into [the target])[command clarification break]" ('-text
                                                                    CODE_BLOCK_NT'otherwise'
                                                                        CODE_BLOCK_NT'say "(entering [the target])[command clarification break]" ('
                                                                            INVOCATION_LIST_SAY_NT'"(entering [the target])[command clarification break]" ( e )'
                                                                                INVOCATION_NT'"(entering [the target])[command clarification break]" ( e )'
                                                                                    RVALUE_CONTEXT_NT'"(entering [the target])[command clarification break]" ( e )'
                                                                                        CONSTANT_NT'"(entering [the target])[command clarification break]" ( e )'-text
                                                INVOCATION_LIST_NT'silently try the actor trying entering the target'
                                                    INVOCATION_NT'silently try the actor trying entering the target'
                                                        RVALUE_CONTEXT_NT'actor trying entering the target'
                                                            CONSTANT_NT'actor trying entering the target'-action
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the holder of the actor is not the target'
                                                        INVOCATION_NT'if the holder of the actor is not the target'
                                                            CONDITION_CONTEXT_NT'holder of the actor is not the target'
                                                                TEST_PROPOSITION_NT'holder of the actor is not the target'(test: [ NOT[ is('holder of the actor', 'the target') NOT] ])
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'stop the action'
                                                            INVOCATION_NT'stop the action'
                                                INVOCATION_LIST_NT'convert to the entering action on the noun'
                                                    INVOCATION_NT'convert to the entering action on the noun'
                                                        RVALUE_CONTEXT_NT'entering action'
                                                            CONSTANT_NT'entering action'-action name
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                                INVOCATION_LIST_NT'continue the action'
                                                    INVOCATION_NT'continue the action'
                                        INVOCATION_LIST_NT'let the target be the holder of the target'
                                            INVOCATION_NT'let the target be the holder of the target'
                                                LVALUE_LOCAL_CONTEXT_NT'target'
                                                    LOCAL_VARIABLE_NT'target'(tmp_1;object)
                                                RVALUE_CONTEXT_NT'holder of the target'
                                                    PHRASE_TO_DECIDE_VALUE_NT'holder of the target'
                                                        INVOCATION_LIST_NT'holder of the target'
                                                            INVOCATION_NT'holder of the target'
                                                                RVALUE_CONTEXT_NT'target'
                                                                    LOCAL_VARIABLE_NT'target'(tmp_1;object)
                        RULE_NT'carry out an actor entering ( this is the standard entering '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'surreptitiously move the actor to the noun'
                                    INVOCATION_NT'surreptitiously move the actor to the noun'
                                        RVALUE_CONTEXT_NT'actor'
                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        RULE_NT'report an actor entering ( this is the standard report enter'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the noun is a supporter'
                                                        INVOCATION_NT'if the noun is a supporter'
                                                            CONDITION_CONTEXT_NT'noun is a supporter'
                                                                TEST_PROPOSITION_NT'noun is a supporter'(test: [ kind=supporter('noun') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[We] [get] onto [the noun]." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[We] [get] onto [the noun]." ( a )'
                                                                INVOCATION_NT'"[We] [get] onto [the noun]." ( a )'
                                                                    RVALUE_CONTEXT_NT'"[We] [get] onto [the noun]." ( a )'
                                                                        CONSTANT_NT'"[We] [get] onto [the noun]." ( a )'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT'say "[We] [get] into [the noun]." ( b )'
                                                            INVOCATION_LIST_SAY_NT'"[We] [get] into [the noun]." ( b )'
                                                                INVOCATION_NT'"[We] [get] into [the noun]." ( b )'
                                                                    RVALUE_CONTEXT_NT'"[We] [get] into [the noun]." ( b )'
                                                                        CONSTANT_NT'"[We] [get] into [the noun]." ( b )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the noun is a container'
                                                INVOCATION_NT'if the noun is a container'
                                                    CONDITION_CONTEXT_NT'noun is a container'
                                                        TEST_PROPOSITION_NT'noun is a container'(test: [ kind=container('noun') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The actor] [get] into [the noun]." ( c )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [get] into [the noun]." ( c )'
                                                        INVOCATION_NT'"[The actor] [get] into [the noun]." ( c )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [get] into [the noun]." ( c )'
                                                                CONSTANT_NT'"[The actor] [get] into [the noun]." ( c )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The actor] [get] onto [the noun]." ( d )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [get] onto [the noun]." ( d )'
                                                        INVOCATION_NT'"[The actor] [get] onto [the noun]." ( d )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [get] onto [the noun]." ( d )'
                                                                CONSTANT_NT'"[The actor] [get] onto [the noun]." ( d )'-text
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'report an actor entering ( this is the describe contents ent'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'describe locale for the noun'
                                            INVOCATION_NT'describe locale for the noun'
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        SENTENCE_NT'exiting is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'exiting'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the exiting action translates into i6 as Exit'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'exiting action'
                            PROPER_NOUN_NT'Exit'
                        SENTENCE_NT'the exiting action has an object called the container exited'
                            VERB_NT'has'
                            PROPER_NOUN_NT'exiting action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'object'
                                    PROPER_NOUN_NT'container exited from ( matched as from )'
                        SENTENCE_NT'the specification of the exiting action is Whereas the going'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the exiting action'
                                PROPER_NOUN_NT'exiting action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Whereas the going action allows
                            people to move from one loca'
                        RULE_NT'setting action variables for exiting'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the container exited from is the holder of the actor'
                                    CONDITION_CONTEXT_NT'the container exited from is the holder of the actor'
                        RULE_NT'check an actor exiting ( this is the convert exit into go ou'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the local room be the location of the actor'
                                    INVOCATION_NT'let the local room be the location of the actor'
                                        NEW_LOCAL_CONTEXT_NT'local room'
                                            UNKNOWN_NT'local room'
                                        RVALUE_CONTEXT_NT'location of the actor'
                                            PHRASE_TO_DECIDE_VALUE_NT'location of the actor'
                                                INVOCATION_LIST_NT'location of the actor'
                                                    INVOCATION_NT'location of the actor'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the container exited from is the local room'
                                        INVOCATION_NT'if the container exited from is the local room'
                                            CONDITION_CONTEXT_NT'container exited from is the local room'
                                                TEST_PROPOSITION_NT'container exited from is the local room'(test: [ is('container exited from', 'the local room') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the room-or-door outside from the local room is not nothi'
                                                INVOCATION_NT'if the room-or-door outside from the local room is not nothi'
                                                    CONDITION_CONTEXT_NT'room-or-door outside from the local room is not nothing'
                                                        TEST_PROPOSITION_NT'room-or-door outside from the local room is not nothing'(test: [ NOT[ is('room-or-door outside from the local room', 'nothing') NOT] ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'convert to the going action on the outside'
                                                    INVOCATION_NT'convert to the going action on the outside'
                                                        RVALUE_CONTEXT_NT'going action'
                                                            CONSTANT_NT'going action'-action name
                                                        RVALUE_CONTEXT_NT'outside'
                                                            CONSTANT_NT'outside'-direction(out_obj)(I33'outside')
                        RULE_NT'check an actor exiting ( this is the can't exit when not ins'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the local room be the location of the actor'
                                    INVOCATION_NT'let the local room be the location of the actor'
                                        NEW_LOCAL_CONTEXT_NT'local room'
                                            UNKNOWN_NT'local room'
                                        RVALUE_CONTEXT_NT'location of the actor'
                                            PHRASE_TO_DECIDE_VALUE_NT'location of the actor'
                                                INVOCATION_LIST_NT'location of the actor'
                                                    INVOCATION_NT'location of the actor'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the container exited from is the local room'
                                        INVOCATION_NT'if the container exited from is the local room'
                                            CONDITION_CONTEXT_NT'container exited from is the local room'
                                                TEST_PROPOSITION_NT'container exited from is the local room'(test: [ is('container exited from', 'the local room') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "But [we] [aren't] in anything at the [if story tense is'
                                                    INVOCATION_LIST_SAY_NT'"But [we] [aren't] in anything at the [if story tense is pre'
                                                        INVOCATION_NT'"But [we] [aren't] in anything at the [if story tense is pre'
                                                            RVALUE_CONTEXT_NT'"But [we] [aren't] in anything at the [if story tense is pre'
                                                                CONSTANT_NT'"But [we] [aren't] in anything at the [if story tense is pre'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor exiting ( this is the can't exit closed conta'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is in a closed container ( called the cage )'
                                        INVOCATION_NT'if the actor is in a closed container ( called the cage )'
                                            CONDITION_CONTEXT_NT'actor is in a closed container ( called the cage )'
                                                TEST_PROPOSITION_NT'actor is in a closed container ( called the cage )'(test: [ kind=container({<schema: ContainerOf(*1)>:'actor'}) ^ A81'closed'({<schema: ContainerOf(*1)>:'actor'}) ^ called='cage'(container)({<schema: ContainerOf(*1)>:'actor'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "You can't get out of the closed [cage]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"You can't get out of the closed [cage]." ( a )'
                                                        INVOCATION_NT'"You can't get out of the closed [cage]." ( a )'
                                                            RVALUE_CONTEXT_NT'"You can't get out of the closed [cage]." ( a )'
                                                                CONSTANT_NT'"You can't get out of the closed [cage]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor exiting ( this is the convert exit into get o'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is on a supporter ( called the platform )'
                                        INVOCATION_NT'if the actor is on a supporter ( called the platform )'
                                            CONDITION_CONTEXT_NT'actor is on a supporter ( called the platform )'
                                                TEST_PROPOSITION_NT'actor is on a supporter ( called the platform )'(test: [ kind=supporter({<schema: SupporterOf(*1)>:'actor'}) ^ called='platform'(supporter)({<schema: SupporterOf(*1)>:'actor'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'convert to the getting off action on the platform'
                                            INVOCATION_NT'convert to the getting off action on the platform'
                                                RVALUE_CONTEXT_NT'getting off action'
                                                    CONSTANT_NT'getting off action'-action name
                                                RVALUE_CONTEXT_NT'platform'
                                                    LOCAL_VARIABLE_NT'platform'(tmp_0;supporter)
                        RULE_NT'carry out an actor exiting ( this is the standard exiting ru'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the former exterior be the not-counting-parts holder of '
                                    INVOCATION_NT'let the former exterior be the not-counting-parts holder of '
                                        NEW_LOCAL_CONTEXT_NT'former exterior'
                                            UNKNOWN_NT'former exterior'
                                        RVALUE_CONTEXT_NT'not-counting-parts holder of the container exited from'
                                            PHRASE_TO_DECIDE_VALUE_NT'not-counting-parts holder of the container exited from'
                                                INVOCATION_LIST_NT'not-counting-parts holder of the container exited from'
                                                    INVOCATION_NT'not-counting-parts holder of the container exited from'
                                                        RVALUE_CONTEXT_NT'container exited from'
                                                            NONLOCAL_VARIABLE_NT'container exited from'('container exited from'(var)[object])
                                INVOCATION_LIST_NT'surreptitiously move the actor to the former exterior'
                                    INVOCATION_NT'surreptitiously move the actor to the former exterior'
                                        RVALUE_CONTEXT_NT'actor'
                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                        RVALUE_CONTEXT_NT'former exterior'
                                            LOCAL_VARIABLE_NT'former exterior'(tmp_0;object)
                        RULE_NT'report an actor exiting ( this is the standard report exitin'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the container exited from is a supporter'
                                                        INVOCATION_NT'if the container exited from is a supporter'
                                                            CONDITION_CONTEXT_NT'container exited from is a supporter'
                                                                TEST_PROPOSITION_NT'container exited from is a supporter'(test: [ kind=supporter('container exited from') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[We] [get] off [the container exited from]." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[We] [get] off [the container exited from]." ( a )'
                                                                INVOCATION_NT'"[We] [get] off [the container exited from]." ( a )'
                                                                    RVALUE_CONTEXT_NT'"[We] [get] off [the container exited from]." ( a )'
                                                                        CONSTANT_NT'"[We] [get] off [the container exited from]." ( a )'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT'say "[We] [get] out of [the container exited from]." ( b )'
                                                            INVOCATION_LIST_SAY_NT'"[We] [get] out of [the container exited from]." ( b )'
                                                                INVOCATION_NT'"[We] [get] out of [the container exited from]." ( b )'
                                                                    RVALUE_CONTEXT_NT'"[We] [get] out of [the container exited from]." ( b )'
                                                                        CONSTANT_NT'"[We] [get] out of [the container exited from]." ( b )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The actor] [get] out of [the container exited from]." '
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [get] out of [the container exited from]." ( c '
                                                        INVOCATION_NT'"[The actor] [get] out of [the container exited from]." ( c '
                                                            RVALUE_CONTEXT_NT'"[The actor] [get] out of [the container exited from]." ( c '
                                                                CONSTANT_NT'"[The actor] [get] out of [the container exited from]." ( c '-text
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'report an actor exiting ( this is the describe room emerged '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'surreptitiously reckon darkness'
                                            INVOCATION_NT'surreptitiously reckon darkness'
                                        INVOCATION_LIST_NT'produce a room description with going spacing conventions'
                                            INVOCATION_NT'produce a room description with going spacing conventions'
                        SENTENCE_NT'getting off is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'getting off'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the getting off action translates into i6 as GetOff'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'getting off action'
                            PROPER_NOUN_NT'GetOff'
                        SENTENCE_NT'the specification of the getting off action is The getting o'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the getting off action'
                                PROPER_NOUN_NT'getting off action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The getting off action is for
                            actors who are currently on to'
                        RULE_NT'check an actor getting off ( this is the can't get off thing'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is on the noun'
                                        INVOCATION_NT'if the actor is on the noun'
                                            CONDITION_CONTEXT_NT'actor is on the noun'
                                                TEST_PROPOSITION_NT'actor is on the noun'(test: [ is('the noun', {<schema: SupporterOf(*1)>:'actor'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is carried by the noun'
                                        INVOCATION_NT'if the actor is carried by the noun'
                                            CONDITION_CONTEXT_NT'actor is carried by the noun'
                                                TEST_PROPOSITION_NT'actor is carried by the noun'(test: [ is('the noun', {<schema: CarrierOf(*1)>:'actor'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "But [we] [aren't] on [the noun] at the [if story tense '
                                            INVOCATION_LIST_SAY_NT'"But [we] [aren't] on [the noun] at the [if story tense is p'
                                                INVOCATION_NT'"But [we] [aren't] on [the noun] at the [if story tense is p'
                                                    RVALUE_CONTEXT_NT'"But [we] [aren't] on [the noun] at the [if story tense is p'
                                                        CONSTANT_NT'"But [we] [aren't] on [the noun] at the [if story tense is p'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor getting off ( this is the standard gettin'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'let the former exterior be the not-counting-parts holder of '
                                    INVOCATION_NT'let the former exterior be the not-counting-parts holder of '
                                        NEW_LOCAL_CONTEXT_NT'former exterior'
                                            UNKNOWN_NT'former exterior'
                                        RVALUE_CONTEXT_NT'not-counting-parts holder of the noun'
                                            PHRASE_TO_DECIDE_VALUE_NT'not-counting-parts holder of the noun'
                                                INVOCATION_LIST_NT'not-counting-parts holder of the noun'
                                                    INVOCATION_NT'not-counting-parts holder of the noun'
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_NT'surreptitiously move the actor to the former exterior'
                                    INVOCATION_NT'surreptitiously move the actor to the former exterior'
                                        RVALUE_CONTEXT_NT'actor'
                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                        RVALUE_CONTEXT_NT'former exterior'
                                            LOCAL_VARIABLE_NT'former exterior'(tmp_0;object)
                        RULE_NT'report an actor getting off ( this is the standard report ge'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [get] off [the noun]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [get] off [the noun]." ( a )'
                                                INVOCATION_NT'"[The actor] [get] off [the noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [get] off [the noun]." ( a )'
                                                        CONSTANT_NT'"[The actor] [get] off [the noun]." ( a )'-text
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'report an actor getting off ( this is the describe room stoo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'produce a room description with going spacing conventions'
                                            INVOCATION_NT'produce a room description with going spacing conventions'
                    HEADING_NT'section 4 - standard actions concerning the actor's vision' (level 5)
                        SENTENCE_NT'looking is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'looking'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the looking action translates into i6 as Look'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'looking action'
                            PROPER_NOUN_NT'Look'
                        SENTENCE_NT'the specification of the looking action is The looking actio'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the looking action'
                                PROPER_NOUN_NT'looking action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The looking action describes the
                            player's current room and a'
                        SENTENCE_NT'the looking action has an action name called the room-descri'
                            VERB_NT'has'
                            PROPER_NOUN_NT'looking action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'action name'
                                    PROPER_NOUN_NT'room-describing action'
                        SENTENCE_NT'the looking action has a truth state called abbreviated form'
                            VERB_NT'has'
                            PROPER_NOUN_NT'looking action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'truth state'
                                    PROPER_NOUN_NT'abbreviated form allowed'
                        SENTENCE_NT'the looking action has a number called the visibility level '
                            VERB_NT'has'
                            PROPER_NOUN_NT'looking action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'number'
                                    PROPER_NOUN_NT'visibility level count'
                        SENTENCE_NT'the looking action has an object called the visibility ceili'
                            VERB_NT'has'
                            PROPER_NOUN_NT'looking action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'object'
                                    PROPER_NOUN_NT'visibility ceiling'
                        RULE_NT'setting action variables for looking ( this is the determine'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'calculate visibility ceiling at low level'
                                            INVOCATION_NT'calculate visibility ceiling at low level'
                                INVOCATION_LIST_NT'now the visibility level count is the visibility ceiling cou'
                                    CONDITION_CONTEXT_NT'the visibility level count is the visibility ceiling count c'
                                INVOCATION_LIST_NT'now the visibility ceiling is the visibility ceiling calcula'
                                    CONDITION_CONTEXT_NT'the visibility ceiling is the visibility ceiling calculated'
                                INVOCATION_LIST_NT'now the room-describing action is the looking action'
                                    CONDITION_CONTEXT_NT'the room-describing action is the looking action'
                        RULE_NT'carry out looking ( this is the declare everything unmention'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat with item running through things'
                                        INVOCATION_NT'repeat with item running through things'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'things'
                                                CONSTANT_NT'things'-description of things
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the item is not mentioned'
                                            CONDITION_CONTEXT_NT'the item is not mentioned'
                        RULE_NT'carry out looking ( this is the room description heading rul'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say bold type'
                                    INVOCATION_LIST_SAY_NT'bold type'
                                        INVOCATION_NT'bold type'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the visibility level count is 0'
                                        INVOCATION_NT'if the visibility level count is 0'
                                            CONDITION_CONTEXT_NT'visibility level count is 0'
                                                TEST_PROPOSITION_NT'visibility level count is 0'(test: [ is('visibility level count', '0') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'begin the printing the name of a dark room activity'
                                            INVOCATION_NT'begin the printing the name of a dark room activity'
                                                RVALUE_CONTEXT_NT'printing the name of a dark room'
                                                    CONSTANT_NT'printing the name of a dark room'-activity
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if handling the printing the name of a dark room activity'
                                                INVOCATION_NT'if handling the printing the name of a dark room activity'
                                                    CONDITION_CONTEXT_NT'handling the printing the name of a dark room activity'
                                                        TEST_VALUE_NT'handling the printing the name of a dark room activity'
                                                            PHRASE_TO_DECIDE_VALUE_NT'handling the printing the name of a dark room activity'
                                                                INVOCATION_LIST_NT'handling the printing the name of a dark room activity'
                                                                    INVOCATION_NT'handling the printing the name of a dark room activity'
                                                                        RVALUE_CONTEXT_NT'printing the name of a dark room'
                                                                            CONSTANT_NT'printing the name of a dark room'-activity
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Darkness" ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Darkness" ( a )'
                                                        INVOCATION_NT'"Darkness" ( a )'
                                                            RVALUE_CONTEXT_NT'"Darkness" ( a )'
                                                                CONSTANT_NT'"Darkness" ( a )'-text
                                        INVOCATION_LIST_NT'end the printing the name of a dark room activity'
                                            INVOCATION_NT'end the printing the name of a dark room activity'
                                                RVALUE_CONTEXT_NT'printing the name of a dark room'
                                                    CONSTANT_NT'printing the name of a dark room'-activity
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the visibility ceiling is the location'
                                                INVOCATION_NT'if the visibility ceiling is the location'
                                                    CONDITION_CONTEXT_NT'visibility ceiling is the location'
                                                        TEST_PROPOSITION_NT'visibility ceiling is the location'(test: [ is('visibility ceiling', 'the location') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[visibility ceiling]"'
                                                    INVOCATION_LIST_SAY_NT'visibility ceiling'
                                                        INVOCATION_NT'visibility ceiling'
                                                            RVALUE_CONTEXT_NT'visibility ceiling'
                                                                NONLOCAL_VARIABLE_NT'visibility ceiling'('visibility ceiling'(var)[object])
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The visibility ceiling]"'
                                                    INVOCATION_LIST_SAY_NT'the visibility ceiling'
                                                        INVOCATION_NT'the visibility ceiling'
                                                            RVALUE_CONTEXT_NT'visibility ceiling'
                                                                NONLOCAL_VARIABLE_NT'visibility ceiling'('visibility ceiling'(var)[object])
                                CODE_BLOCK_NT'say roman type'
                                    INVOCATION_LIST_SAY_NT'roman type'
                                        INVOCATION_NT'roman type'
                                INVOCATION_LIST_NT'let intermediate level be the visibility-holder of the actor'
                                    INVOCATION_NT'let intermediate level be the visibility-holder of the actor'
                                        NEW_LOCAL_CONTEXT_NT'intermediate level'
                                            UNKNOWN_NT'intermediate level'
                                        RVALUE_CONTEXT_NT'visibility-holder of the actor'
                                            PHRASE_TO_DECIDE_VALUE_NT'visibility-holder of the actor'
                                                INVOCATION_LIST_NT'visibility-holder of the actor'
                                                    INVOCATION_NT'visibility-holder of the actor'
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat with intermediate level count running from 2 to the v'
                                        INVOCATION_NT'repeat with intermediate level count running from 2 to the v'
                                            NEW_LOCAL_CONTEXT_NT'intermediate level count'
                                                UNKNOWN_NT'intermediate level count'
                                            RVALUE_CONTEXT_NT'2'
                                                CONSTANT_NT'2'-number
                                            RVALUE_CONTEXT_NT'visibility level count'
                                                NONLOCAL_VARIABLE_NT'visibility level count'('visibility level count'(var)[number])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the intermediate level is a supporter or the intermediate'
                                                INVOCATION_NT'if the intermediate level is a supporter or the intermediate'
                                                    CONDITION_CONTEXT_NT'intermediate level is a supporter or the intermediate level '
                                                        LOGICAL_OR_NT'intermediate level is a supporter or the intermediate level '
                                                            TEST_PROPOSITION_NT'intermediate level is a supporter'(test: [ kind=supporter('intermediate level') ])
                                                            TEST_PROPOSITION_NT'the intermediate level is an animal'(test: [ kind=animal('the intermediate level') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say " (on [the intermediate level])" ( b )'
                                                    INVOCATION_LIST_SAY_NT'" (on [the intermediate level])" ( b )'
                                                        INVOCATION_NT'" (on [the intermediate level])" ( b )'
                                                            RVALUE_CONTEXT_NT'" (on [the intermediate level])" ( b )'
                                                                CONSTANT_NT'" (on [the intermediate level])" ( b )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say " (in [the intermediate level])" ( c )'
                                                    INVOCATION_LIST_SAY_NT'" (in [the intermediate level])" ( c )'
                                                        INVOCATION_NT'" (in [the intermediate level])" ( c )'
                                                            RVALUE_CONTEXT_NT'" (in [the intermediate level])" ( c )'
                                                                CONSTANT_NT'" (in [the intermediate level])" ( c )'-text
                                        INVOCATION_LIST_NT'let the intermediate level be the visibility-holder of the i'
                                            INVOCATION_NT'let the intermediate level be the visibility-holder of the i'
                                                LVALUE_LOCAL_CONTEXT_NT'intermediate level'
                                                    LOCAL_VARIABLE_NT'intermediate level'(tmp_0;object)
                                                RVALUE_CONTEXT_NT'visibility-holder of the intermediate level'
                                                    PHRASE_TO_DECIDE_VALUE_NT'visibility-holder of the intermediate level'
                                                        INVOCATION_LIST_NT'visibility-holder of the intermediate level'
                                                            INVOCATION_NT'visibility-holder of the intermediate level'
                                                                RVALUE_CONTEXT_NT'intermediate level'
                                                                    LOCAL_VARIABLE_NT'intermediate level'(tmp_0;object)
                                CODE_BLOCK_NT'say line break'
                                    INVOCATION_LIST_SAY_NT'line break'
                                        INVOCATION_NT'line break'
                                CODE_BLOCK_NT'say run paragraph on with special look spacing'
                                    INVOCATION_LIST_SAY_NT'run paragraph on with special look spacing'
                                        INVOCATION_NT'run paragraph on with special look spacing'
                        RULE_NT'carry out looking ( this is the room description body text r'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the visibility level count is 0'
                                        INVOCATION_NT'if the visibility level count is 0'
                                            CONDITION_CONTEXT_NT'visibility level count is 0'
                                                TEST_PROPOSITION_NT'visibility level count is 0'(test: [ is('visibility level count', '0') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if set to abbreviated room descriptions'
                                                INVOCATION_NT'if set to abbreviated room descriptions'
                                                    CONDITION_CONTEXT_NT'set to abbreviated room descriptions'
                                                        TEST_VALUE_NT'set to abbreviated room descriptions'
                                                            PHRASE_TO_DECIDE_VALUE_NT'set to abbreviated room descriptions'
                                                                INVOCATION_LIST_NT'set to abbreviated room descriptions'
                                                                    INVOCATION_NT'set to abbreviated room descriptions'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'continue the action'
                                                    INVOCATION_NT'continue the action'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if set to sometimes abbreviated room descriptions and abbrev'
                                                INVOCATION_NT'if set to sometimes abbreviated room descriptions and abbrev'
                                                    CONDITION_CONTEXT_NT'set to sometimes abbreviated room descriptions and abbreviat'
                                                        LOGICAL_AND_NT'set to sometimes abbreviated room descriptions and abbreviat'
                                                            TEST_VALUE_NT'set to sometimes abbreviated room descriptions'
                                                                PHRASE_TO_DECIDE_VALUE_NT'set to sometimes abbreviated room descriptions'
                                                                    INVOCATION_LIST_NT'set to sometimes abbreviated room descriptions'
                                                                        INVOCATION_NT'set to sometimes abbreviated room descriptions'
                                                            LOGICAL_AND_NT
                                                                TEST_PROPOSITION_NT'abbreviated form allowed is true'(test: [ is('abbreviated form allowed', 'true') ])
                                                                TEST_PROPOSITION_NT'darkness witnessed is true'(test: [ is('darkness witnessed', 'true') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'continue the action'
                                                    INVOCATION_NT'continue the action'
                                        INVOCATION_LIST_NT'begin the printing the description of a dark room activity'
                                            INVOCATION_NT'begin the printing the description of a dark room activity'
                                                RVALUE_CONTEXT_NT'printing the description of a dark room'
                                                    CONSTANT_NT'printing the description of a dark room'-activity
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if handling the printing the description of a dark room acti'
                                                INVOCATION_NT'if handling the printing the description of a dark room acti'
                                                    CONDITION_CONTEXT_NT'handling the printing the description of a dark room activit'
                                                        TEST_VALUE_NT'handling the printing the description of a dark room activit'
                                                            PHRASE_TO_DECIDE_VALUE_NT'handling the printing the description of a dark room activit'
                                                                INVOCATION_LIST_NT'handling the printing the description of a dark room activit'
                                                                    INVOCATION_NT'handling the printing the description of a dark room activit'
                                                                        RVALUE_CONTEXT_NT'printing the description of a dark room'
                                                                            CONSTANT_NT'printing the description of a dark room'-activity
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the prior named object is nothing'
                                                    CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                CODE_BLOCK_NT'say "[It] [are] pitch dark, and [we] [can't see] a thing." ('
                                                    INVOCATION_LIST_SAY_NT'"[It] [are] pitch dark, and [we] [can't see] a thing." ( a )'
                                                        INVOCATION_NT'"[It] [are] pitch dark, and [we] [can't see] a thing." ( a )'
                                                            RVALUE_CONTEXT_NT'"[It] [are] pitch dark, and [we] [can't see] a thing." ( a )'
                                                                CONSTANT_NT'"[It] [are] pitch dark, and [we] [can't see] a thing." ( a )'-text
                                        INVOCATION_LIST_NT'end the printing the description of a dark room activity'
                                            INVOCATION_NT'end the printing the description of a dark room activity'
                                                RVALUE_CONTEXT_NT'printing the description of a dark room'
                                                    CONSTANT_NT'printing the description of a dark room'-activity
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the visibility ceiling is the location'
                                                INVOCATION_NT'if the visibility ceiling is the location'
                                                    CONDITION_CONTEXT_NT'visibility ceiling is the location'
                                                        TEST_PROPOSITION_NT'visibility ceiling is the location'(test: [ is('visibility ceiling', 'the location') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if set to abbreviated room descriptions'
                                                        INVOCATION_NT'if set to abbreviated room descriptions'
                                                            CONDITION_CONTEXT_NT'set to abbreviated room descriptions'
                                                                TEST_VALUE_NT'set to abbreviated room descriptions'
                                                                    PHRASE_TO_DECIDE_VALUE_NT'set to abbreviated room descriptions'
                                                                        INVOCATION_LIST_NT'set to abbreviated room descriptions'
                                                                            INVOCATION_NT'set to abbreviated room descriptions'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'continue the action'
                                                            INVOCATION_NT'continue the action'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if set to sometimes abbreviated room descriptions and abbrev'
                                                        INVOCATION_NT'if set to sometimes abbreviated room descriptions and abbrev'
                                                            CONDITION_CONTEXT_NT'set to sometimes abbreviated room descriptions and abbreviat'
                                                                LOGICAL_AND_NT'set to sometimes abbreviated room descriptions and abbreviat'
                                                                    TEST_VALUE_NT'set to sometimes abbreviated room descriptions'
                                                                        PHRASE_TO_DECIDE_VALUE_NT'set to sometimes abbreviated room descriptions'
                                                                            INVOCATION_LIST_NT'set to sometimes abbreviated room descriptions'
                                                                                INVOCATION_NT'set to sometimes abbreviated room descriptions'
                                                                    LOGICAL_AND_NT
                                                                        TEST_PROPOSITION_NT'abbreviated form allowed is true'(test: [ is('abbreviated form allowed', 'true') ])
                                                                        TEST_PROPOSITION_NT'the location is visited'(test: [ A59'visited'('the location') ])
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'continue the action'
                                                            INVOCATION_NT'continue the action'
                                                INVOCATION_LIST_NT'print the location's description'
                                                    INVOCATION_NT'print the location's description'
                        RULE_NT'carry out looking ( this is the room description paragraphs '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the visibility level count is greater than 0'
                                        INVOCATION_NT'if the visibility level count is greater than 0'
                                            CONDITION_CONTEXT_NT'visibility level count is greater than 0'
                                                TEST_PROPOSITION_NT'visibility level count is greater than 0'(test: [ greater-than('visibility level count', '0') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'let the intermediate position be the actor'
                                            INVOCATION_NT'let the intermediate position be the actor'
                                                NEW_LOCAL_CONTEXT_NT'intermediate position'
                                                    UNKNOWN_NT'intermediate position'
                                                RVALUE_CONTEXT_NT'actor'
                                                    NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                        INVOCATION_LIST_NT'let the ip count be the visibility level count'
                                            INVOCATION_NT'let the ip count be the visibility level count'
                                                NEW_LOCAL_CONTEXT_NT'ip count'
                                                    UNKNOWN_NT'ip count'
                                                RVALUE_CONTEXT_NT'visibility level count'
                                                    NONLOCAL_VARIABLE_NT'visibility level count'('visibility level count'(var)[number])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'while the ip count is greater than 0'
                                                INVOCATION_NT'while the ip count is greater than 0'
                                                    CONDITION_CONTEXT_NT'ip count is greater than 0'
                                                        TEST_PROPOSITION_NT'ip count is greater than 0'(test: [ greater-than('ip count', '0') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the intermediate position is marked for listing'
                                                    CONDITION_CONTEXT_NT'the intermediate position is marked for listing'
                                                INVOCATION_LIST_NT'let the intermediate position be the visibility-holder of th'
                                                    INVOCATION_NT'let the intermediate position be the visibility-holder of th'
                                                        LVALUE_LOCAL_CONTEXT_NT'intermediate position'
                                                            LOCAL_VARIABLE_NT'intermediate position'(tmp_0;thing)
                                                        RVALUE_CONTEXT_NT'visibility-holder of the intermediate position'
                                                            PHRASE_TO_DECIDE_VALUE_NT'visibility-holder of the intermediate position'
                                                                INVOCATION_LIST_NT'visibility-holder of the intermediate position'
                                                                    INVOCATION_NT'visibility-holder of the intermediate position'
                                                                        RVALUE_CONTEXT_NT'intermediate position'
                                                                            LOCAL_VARIABLE_NT'intermediate position'(tmp_0;thing)
                                                INVOCATION_LIST_NT'decrease the ip count by 1'
                                                    INVOCATION_NT'decrease the ip count by 1'
                                                        LVALUE_CONTEXT_NT'ip count'
                                                            LOCAL_VARIABLE_NT'ip count'(tmp_1;number)
                                                        RVALUE_CONTEXT_NT'1'
                                                            CONSTANT_NT'1'-number
                                        INVOCATION_LIST_NT'let the top-down ip count be the visibility level count'
                                            INVOCATION_NT'let the top-down ip count be the visibility level count'
                                                NEW_LOCAL_CONTEXT_NT'top-down ip count'
                                                    UNKNOWN_NT'top-down ip count'
                                                RVALUE_CONTEXT_NT'visibility level count'
                                                    NONLOCAL_VARIABLE_NT'visibility level count'('visibility level count'(var)[number])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'while the top-down ip count is greater than 0'
                                                INVOCATION_NT'while the top-down ip count is greater than 0'
                                                    CONDITION_CONTEXT_NT'top-down ip count is greater than 0'
                                                        TEST_PROPOSITION_NT'top-down ip count is greater than 0'(test: [ greater-than('top-down ip count', '0') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'let the intermediate position be the actor'
                                                    INVOCATION_NT'let the intermediate position be the actor'
                                                        LVALUE_LOCAL_CONTEXT_NT'intermediate position'
                                                            LOCAL_VARIABLE_NT'intermediate position'(tmp_0;thing)
                                                        RVALUE_CONTEXT_NT'actor'
                                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                                                INVOCATION_LIST_NT'let the ip count be 0'
                                                    INVOCATION_NT'let the ip count be 0'
                                                        LVALUE_LOCAL_CONTEXT_NT'ip count'
                                                            LOCAL_VARIABLE_NT'ip count'(tmp_1;number)
                                                        RVALUE_CONTEXT_NT'0'
                                                            CONSTANT_NT'0'-number
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'while the ip count is less than the top-down ip count'
                                                        INVOCATION_NT'while the ip count is less than the top-down ip count'
                                                            CONDITION_CONTEXT_NT'ip count is less than the top-down ip count'
                                                                TEST_PROPOSITION_NT'ip count is less than the top-down ip count'(test: [ less-than('ip count', 'the top-down ip count') ])
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'let the intermediate position be the visibility-holder of th'
                                                            INVOCATION_NT'let the intermediate position be the visibility-holder of th'
                                                                LVALUE_LOCAL_CONTEXT_NT'intermediate position'
                                                                    LOCAL_VARIABLE_NT'intermediate position'(tmp_0;thing)
                                                                RVALUE_CONTEXT_NT'visibility-holder of the intermediate position'
                                                                    PHRASE_TO_DECIDE_VALUE_NT'visibility-holder of the intermediate position'
                                                                        INVOCATION_LIST_NT'visibility-holder of the intermediate position'
                                                                            INVOCATION_NT'visibility-holder of the intermediate position'
                                                                                RVALUE_CONTEXT_NT'intermediate position'
                                                                                    LOCAL_VARIABLE_NT'intermediate position'(tmp_0;thing)
                                                        INVOCATION_LIST_NT'increase the ip count by 1'
                                                            INVOCATION_NT'increase the ip count by 1'
                                                                LVALUE_CONTEXT_NT'ip count'
                                                                    LOCAL_VARIABLE_NT'ip count'(tmp_1;number)
                                                                RVALUE_CONTEXT_NT'1'
                                                                    CONSTANT_NT'1'-number
                                                INVOCATION_LIST_NT'describe locale for the intermediate position'
                                                    INVOCATION_NT'describe locale for the intermediate position'
                                                        RVALUE_CONTEXT_NT'intermediate position'
                                                            LOCAL_VARIABLE_NT'intermediate position'(tmp_0;thing)
                                                INVOCATION_LIST_NT'decrease the top-down ip count by 1'
                                                    INVOCATION_NT'decrease the top-down ip count by 1'
                                                        LVALUE_CONTEXT_NT'top-down ip count'
                                                            LOCAL_VARIABLE_NT'top-down ip count'(tmp_2;number)
                                                        RVALUE_CONTEXT_NT'1'
                                                            CONSTANT_NT'1'-number
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'carry out looking ( this is the check new arrival rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if in darkness'
                                        INVOCATION_NT'if in darkness'
                                            CONDITION_CONTEXT_NT'in darkness'
                                                TEST_VALUE_NT'in darkness'
                                                    PHRASE_TO_DECIDE_VALUE_NT'in darkness'
                                                        INVOCATION_LIST_NT'in darkness'
                                                            INVOCATION_NT'in darkness'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the darkness witnessed is true'
                                            CONDITION_CONTEXT_NT'the darkness witnessed is true'
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the location is a room'
                                                INVOCATION_NT'if the location is a room'
                                                    CONDITION_CONTEXT_NT'location is a room'
                                                        TEST_PROPOSITION_NT'location is a room'(test: [ kind=room('location') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the location is visited'
                                                    CONDITION_CONTEXT_NT'the location is visited'
                        RULE_NT'report an actor looking ( this is the other people looking r'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not the player'
                                        INVOCATION_NT'if the actor is not the player'
                                            CONDITION_CONTEXT_NT'actor is not the player'
                                                TEST_PROPOSITION_NT'actor is not the player'(test: [ NOT[ is('actor', 'the player') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [look] around." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [look] around." ( a )'
                                                INVOCATION_NT'"[The actor] [look] around." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [look] around." ( a )'
                                                        CONSTANT_NT'"[The actor] [look] around." ( a )'-text
                        SENTENCE_NT'examining is an action applying to one visible thing and req'
                            VERB_NT'is'
                            PROPER_NOUN_NT'examining'
                            PROPER_NOUN_NT'applying to one visible thing and requiring light'
                        SENTENCE_NT'the examining action translates into i6 as Examine'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'examining action'
                            PROPER_NOUN_NT'Examine'
                        SENTENCE_NT'the specification of the examining action is The act of look'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the examining action'
                                PROPER_NOUN_NT'examining action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The act of looking closely at
                            something. Note that the noun '
                        SENTENCE_NT'the examining action has a truth state called examine text p'
                            VERB_NT'has'
                            PROPER_NOUN_NT'examining action'
                            ALLOWED_NT
                                PROPERTYCALLED_NT'called'
                                    PROPER_NOUN_NT'truth state'
                                    PROPER_NOUN_NT'examine text printed'
                        RULE_NT'carry out examining ( this is the standard examining rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property description and the descri'
                                        INVOCATION_NT'if the noun provides the property description and the descri'
                                            CONDITION_CONTEXT_NT'noun provides the property description and the description o'
                                                LOGICAL_AND_NT'noun provides the property description and the description o'
                                                    TEST_PROPOSITION_NT'noun provides the property description'(test: [ provides('noun', 'the property description') ])
                                                    TEST_PROPOSITION_NT'the description of the noun is not ""'(test: [ NOT[ is('the description of the noun', '""') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[description of the noun][line break]"'
                                            INVOCATION_LIST_SAY_NT'description of the noun'
                                                INVOCATION_NT'description of the noun'
                                                    RVALUE_CONTEXT_NT'description of the noun'
                                                        PROPERTY_VALUE_NT'description of the noun'
                                                            CONSTANT_NT-nothing valued property
                                                            NONLOCAL_VARIABLE_NT'the noun'('noun'(var)[object])
                                            INVOCATION_LIST_SAY_NT'line break'
                                                INVOCATION_NT'line break'
                                        INVOCATION_LIST_NT'now examine text printed is true'
                                            CONDITION_CONTEXT_NT'examine text printed is true'
                        RULE_NT'carry out examining ( this is the examine directions rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a direction'
                                        INVOCATION_NT'if the noun is a direction'
                                            CONDITION_CONTEXT_NT'noun is a direction'
                                                TEST_PROPOSITION_NT'noun is a direction'(test: [ kind=direction('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [see] nothing unexpected in that direction." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [see] nothing unexpected in that direction." ( a )'
                                                INVOCATION_NT'"[We] [see] nothing unexpected in that direction." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [see] nothing unexpected in that direction." ( a )'
                                                        CONSTANT_NT'"[We] [see] nothing unexpected in that direction." ( a )'-text
                                        INVOCATION_LIST_NT'now examine text printed is true'
                                            CONDITION_CONTEXT_NT'examine text printed is true'
                        RULE_NT'carry out examining ( this is the examine containers rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a container'
                                        INVOCATION_NT'if the noun is a container'
                                            CONDITION_CONTEXT_NT'noun is a container'
                                                TEST_PROPOSITION_NT'noun is a container'(test: [ kind=container('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the noun is open or the noun is transparent'
                                                INVOCATION_NT'if the noun is open or the noun is transparent'
                                                    CONDITION_CONTEXT_NT'noun is open or the noun is transparent'
                                                        LOGICAL_OR_NT'noun is open or the noun is transparent'
                                                            TEST_PROPOSITION_NT'noun is open'(test: [ A80'open'('noun') ])
                                                            TEST_PROPOSITION_NT'the noun is transparent'(test: [ A78'transparent'('the noun') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if something described which is not scenery is in the noun a'
                                                        INVOCATION_NT'if something described which is not scenery is in the noun a'
                                                            CONDITION_CONTEXT_NT'something described which is not scenery is in the noun and '
                                                                LOGICAL_AND_NT'something described which is not scenery is in the noun and '
                                                                    TEST_PROPOSITION_NT'something described which is not scenery is in the noun'(test: [ Exists x : kind=thing_c(x) ^ A72'described'(x) ^ NOT[ A67'scenery'(x) NOT] ^ is('the noun', {<schema: ContainerOf(*1)>:x}) ])
                                                                    TEST_PROPOSITION_NT'something which is not the player is in the noun'(test: [ Exists x : kind=thing_c(x) ^ NOT[ is(x, 'the player') NOT] ^ is('the noun', {<schema: ContainerOf(*1)>:x}) ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "In [the noun] " ( a )'
                                                            INVOCATION_LIST_SAY_NT'"In [the noun] " ( a )'
                                                                INVOCATION_NT'"In [the noun] " ( a )'
                                                                    RVALUE_CONTEXT_NT'"In [the noun] " ( a )'
                                                                        CONSTANT_NT'"In [the noun] " ( a )'-text
                                                        INVOCATION_LIST_NT'list the contents of the noun , as a sentence , tersely , no'
                                                            INVOCATION_NT'list the contents of the noun'
                                                                RVALUE_CONTEXT_NT'noun'
                                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                                        CODE_BLOCK_NT'say "."'
                                                            INVOCATION_LIST_SAY_NT'"."'
                                                                INVOCATION_NT'"."'
                                                                    RVALUE_CONTEXT_NT'"."'
                                                                        CONSTANT_NT'"."'-text
                                                        INVOCATION_LIST_NT'now examine text printed is true'
                                                            CONDITION_CONTEXT_NT'examine text printed is true'
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT
                                                            INVOCATION_LIST_NT'if examine text printed is false'
                                                                INVOCATION_NT'if examine text printed is false'
                                                                    CONDITION_CONTEXT_NT'examine text printed is false'
                                                                        TEST_PROPOSITION_NT'examine text printed is false'(test: [ is('examine text printed', 'false') ])
                                                            CODE_BLOCK_NT
                                                                CODE_BLOCK_NT
                                                                    INVOCATION_LIST_NT'if the player is in the noun'
                                                                        INVOCATION_NT'if the player is in the noun'
                                                                            CONDITION_CONTEXT_NT'player is in the noun'
                                                                                TEST_PROPOSITION_NT'player is in the noun'(test: [ is('the noun', {<schema: ContainerOf(*1)>:'player'}) ])
                                                                    CODE_BLOCK_NT
                                                                        INVOCATION_LIST_NT'make no decision'
                                                                            INVOCATION_NT'make no decision'
                                                                CODE_BLOCK_NT'say "[The noun] [are] empty." ( b )'
                                                                    INVOCATION_LIST_SAY_NT'"[The noun] [are] empty." ( b )'
                                                                        INVOCATION_NT'"[The noun] [are] empty." ( b )'
                                                                            RVALUE_CONTEXT_NT'"[The noun] [are] empty." ( b )'
                                                                                CONSTANT_NT'"[The noun] [are] empty." ( b )'-text
                                                                INVOCATION_LIST_NT'now examine text printed is true'
                                                                    CONDITION_CONTEXT_NT'examine text printed is true'
                        RULE_NT'carry out examining ( this is the examine supporters rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a supporter'
                                        INVOCATION_NT'if the noun is a supporter'
                                            CONDITION_CONTEXT_NT'noun is a supporter'
                                                TEST_PROPOSITION_NT'noun is a supporter'(test: [ kind=supporter('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if something described which is not scenery is on the noun a'
                                                INVOCATION_NT'if something described which is not scenery is on the noun a'
                                                    CONDITION_CONTEXT_NT'something described which is not scenery is on the noun and '
                                                        LOGICAL_AND_NT'something described which is not scenery is on the noun and '
                                                            TEST_PROPOSITION_NT'something described which is not scenery is on the noun'(test: [ Exists x : kind=thing_c(x) ^ A72'described'(x) ^ NOT[ A67'scenery'(x) NOT] ^ is('the noun', {<schema: SupporterOf(*1)>:x}) ])
                                                            TEST_PROPOSITION_NT'something which is not the player is on the noun'(test: [ Exists x : kind=thing_c(x) ^ NOT[ is(x, 'the player') NOT] ^ is('the noun', {<schema: SupporterOf(*1)>:x}) ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "On [the noun] " ( a )'
                                                    INVOCATION_LIST_SAY_NT'"On [the noun] " ( a )'
                                                        INVOCATION_NT'"On [the noun] " ( a )'
                                                            RVALUE_CONTEXT_NT'"On [the noun] " ( a )'
                                                                CONSTANT_NT'"On [the noun] " ( a )'-text
                                                INVOCATION_LIST_NT'list the contents of the noun , as a sentence , tersely , no'
                                                    INVOCATION_NT'list the contents of the noun'
                                                        RVALUE_CONTEXT_NT'noun'
                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                                CODE_BLOCK_NT'say "."'
                                                    INVOCATION_LIST_SAY_NT'"."'
                                                        INVOCATION_NT'"."'
                                                            RVALUE_CONTEXT_NT'"."'
                                                                CONSTANT_NT'"."'-text
                                                INVOCATION_LIST_NT'now examine text printed is true'
                                                    CONDITION_CONTEXT_NT'examine text printed is true'
                        RULE_NT'carry out examining ( this is the examine devices rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a device'
                                        INVOCATION_NT'if the noun is a device'
                                            CONDITION_CONTEXT_NT'noun is a device'
                                                TEST_PROPOSITION_NT'noun is a device'(test: [ kind=device('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The noun] [are] [if story tense is present tense]curre'
                                            INVOCATION_LIST_SAY_NT'"[The noun] [are] [if story tense is present tense]currently'
                                                INVOCATION_NT'"[The noun] [are] [if story tense is present tense]currently'
                                                    RVALUE_CONTEXT_NT'"[The noun] [are] [if story tense is present tense]currently'
                                                        CONSTANT_NT'"[The noun] [are] [if story tense is present tense]currently'-text
                                        INVOCATION_LIST_NT'now examine text printed is true'
                                            CONDITION_CONTEXT_NT'examine text printed is true'
                        RULE_NT'carry out examining ( this is the examine undescribed things'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if examine text printed is false'
                                        INVOCATION_NT'if examine text printed is false'
                                            CONDITION_CONTEXT_NT'examine text printed is false'
                                                TEST_PROPOSITION_NT'examine text printed is false'(test: [ is('examine text printed', 'false') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [see] nothing special about [the noun]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [see] nothing special about [the noun]." ( a )'
                                                INVOCATION_NT'"[We] [see] nothing special about [the noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [see] nothing special about [the noun]." ( a )'
                                                        CONSTANT_NT'"[We] [see] nothing special about [the noun]." ( a )'-text
                        RULE_NT'report an actor examining ( this is the report other people '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not the player'
                                        INVOCATION_NT'if the actor is not the player'
                                            CONDITION_CONTEXT_NT'actor is not the player'
                                                TEST_PROPOSITION_NT'actor is not the player'(test: [ NOT[ is('actor', 'the player') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [look] closely at [the noun]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [look] closely at [the noun]." ( a )'
                                                INVOCATION_NT'"[The actor] [look] closely at [the noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [look] closely at [the noun]." ( a )'
                                                        CONSTANT_NT'"[The actor] [look] closely at [the noun]." ( a )'-text
                        SENTENCE_NT'looking under is an action applying to one visible thing and'
                            VERB_NT'is'
                            PROPER_NOUN_NT'looking under'
                            PROPER_NOUN_NT'applying to one visible thing and requiring light'
                        SENTENCE_NT'the looking under action translates into i6 as LookUnder'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'looking under action'
                            PROPER_NOUN_NT'LookUnder'
                        SENTENCE_NT'the specification of the looking under action is The standar'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the looking under action'
                                PROPER_NOUN_NT'looking under action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The standard Inform world
                            model does not have a concept of t'
                        RULE_NT'carry out an actor looking under ( this is the standard look'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the player is the actor'
                                        INVOCATION_NT'if the player is the actor'
                                            CONDITION_CONTEXT_NT'player is the actor'
                                                TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [find] nothing of interest." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [find] nothing of interest." ( a )'
                                                INVOCATION_NT'"[We] [find] nothing of interest." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [find] nothing of interest." ( a )'
                                                        CONSTANT_NT'"[We] [find] nothing of interest." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'report an actor looking under ( this is the report other peo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is not the player'
                                                INVOCATION_NT'if the actor is not the player'
                                                    CONDITION_CONTEXT_NT'actor is not the player'
                                                        TEST_PROPOSITION_NT'actor is not the player'(test: [ NOT[ is('actor', 'the player') NOT] ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The actor] [look] under [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [look] under [the noun]." ( a )'
                                                        INVOCATION_NT'"[The actor] [look] under [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [look] under [the noun]." ( a )'
                                                                CONSTANT_NT'"[The actor] [look] under [the noun]." ( a )'-text
                        SENTENCE_NT'searching is an action applying to one thing and requiring l'
                            VERB_NT'is'
                            PROPER_NOUN_NT'searching'
                            PROPER_NOUN_NT'applying to one thing and requiring light'
                        SENTENCE_NT'the searching action translates into i6 as Search'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'searching action'
                            PROPER_NOUN_NT'Search'
                        SENTENCE_NT'the specification of the searching action is Searching looks'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the searching action'
                                PROPER_NOUN_NT'searching action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Searching looks at the contents
                            of an open or transparent co'
                        RULE_NT'check an actor searching ( this is the can't search unless c'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not a container and the noun is not a support'
                                        INVOCATION_NT'if the noun is not a container and the noun is not a support'
                                            CONDITION_CONTEXT_NT'noun is not a container and the noun is not a supporter'
                                                LOGICAL_AND_NT'noun is not a container and the noun is not a supporter'
                                                    TEST_PROPOSITION_NT'noun is not a container'(test: [ NOT[ kind=container('noun') NOT] ])
                                                    TEST_PROPOSITION_NT'the noun is not a supporter'(test: [ NOT[ kind=supporter('the noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [find] nothing of interest." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [find] nothing of interest." ( a )'
                                                        INVOCATION_NT'"[We] [find] nothing of interest." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [find] nothing of interest." ( a )'
                                                                CONSTANT_NT'"[We] [find] nothing of interest." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor searching ( this is the can't search closed o'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a closed opaque container'
                                        INVOCATION_NT'if the noun is a closed opaque container'
                                            CONDITION_CONTEXT_NT'noun is a closed opaque container'
                                                TEST_PROPOSITION_NT'noun is a closed opaque container'(test: [ kind=container('noun') ^ A81'closed'('noun') ^ A79'opaque'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the actor'
                                                INVOCATION_NT'if the player is the actor'
                                                    CONDITION_CONTEXT_NT'player is the actor'
                                                        TEST_PROPOSITION_NT'player is the actor'(test: [ is('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't see] inside, since [the noun] [are] closed.'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't see] inside, since [the noun] [are] closed." ( '
                                                        INVOCATION_NT'"[We] [can't see] inside, since [the noun] [are] closed." ( '
                                                            RVALUE_CONTEXT_NT'"[We] [can't see] inside, since [the noun] [are] closed." ( '
                                                                CONSTANT_NT'"[We] [can't see] inside, since [the noun] [are] closed." ( '-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report searching a container ( this is the standard search c'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun contains a described thing which is not scenery'
                                        INVOCATION_NT'if the noun contains a described thing which is not scenery'
                                            CONDITION_CONTEXT_NT'noun contains a described thing which is not scenery'
                                                TEST_PROPOSITION_NT'noun contains a described thing which is not scenery'(test: [ Exists x : kind=thing(x) ^ A72'described'(x) ^ NOT[ A67'scenery'(x) NOT] ^ is('noun', {<schema: ContainerOf(*1)>:x}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "In [the noun] " ( a )'
                                            INVOCATION_LIST_SAY_NT'"In [the noun] " ( a )'
                                                INVOCATION_NT'"In [the noun] " ( a )'
                                                    RVALUE_CONTEXT_NT'"In [the noun] " ( a )'
                                                        CONSTANT_NT'"In [the noun] " ( a )'-text
                                        INVOCATION_LIST_NT'list the contents of the noun , as a sentence , tersely , no'
                                            INVOCATION_NT'list the contents of the noun'
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        CODE_BLOCK_NT'say "."'
                                            INVOCATION_LIST_SAY_NT'"."'
                                                INVOCATION_NT'"."'
                                                    RVALUE_CONTEXT_NT'"."'
                                                        CONSTANT_NT'"."'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The noun] [are] empty." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The noun] [are] empty." ( b )'
                                                INVOCATION_NT'"[The noun] [are] empty." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The noun] [are] empty." ( b )'
                                                        CONSTANT_NT'"[The noun] [are] empty." ( b )'-text
                        RULE_NT'report searching a supporter ( this is the standard search s'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun supports a described thing which is not scenery'
                                        INVOCATION_NT'if the noun supports a described thing which is not scenery'
                                            CONDITION_CONTEXT_NT'noun supports a described thing which is not scenery'
                                                TEST_PROPOSITION_NT'noun supports a described thing which is not scenery'(test: [ Exists x : kind=thing(x) ^ A72'described'(x) ^ NOT[ A67'scenery'(x) NOT] ^ is('noun', {<schema: SupporterOf(*1)>:x}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "On [the noun] " ( a )'
                                            INVOCATION_LIST_SAY_NT'"On [the noun] " ( a )'
                                                INVOCATION_NT'"On [the noun] " ( a )'
                                                    RVALUE_CONTEXT_NT'"On [the noun] " ( a )'
                                                        CONSTANT_NT'"On [the noun] " ( a )'-text
                                        INVOCATION_LIST_NT'list the contents of the noun , as a sentence , tersely , no'
                                            INVOCATION_NT'list the contents of the noun'
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        CODE_BLOCK_NT'say "."'
                                            INVOCATION_LIST_SAY_NT'"."'
                                                INVOCATION_NT'"."'
                                                    RVALUE_CONTEXT_NT'"."'
                                                        CONSTANT_NT'"."'-text
                                    CODE_BLOCK_NT'otherwise'
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "[There] [are] nothing on [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[There] [are] nothing on [the noun]." ( b )'
                                                INVOCATION_NT'"[There] [are] nothing on [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[There] [are] nothing on [the noun]." ( b )'
                                                        CONSTANT_NT'"[There] [are] nothing on [the noun]." ( b )'-text
                        RULE_NT'report an actor searching ( this is the report other people '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not the player'
                                        INVOCATION_NT'if the actor is not the player'
                                            CONDITION_CONTEXT_NT'actor is not the player'
                                                TEST_PROPOSITION_NT'actor is not the player'(test: [ NOT[ is('actor', 'the player') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [search] [the noun]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [search] [the noun]." ( a )'
                                                INVOCATION_NT'"[The actor] [search] [the noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [search] [the noun]." ( a )'
                                                        CONSTANT_NT'"[The actor] [search] [the noun]." ( a )'-text
                        SENTENCE_NT'consulting it about is an action applying to one thing and o'
                            VERB_NT'is'
                            PROPER_NOUN_NT'consulting it about'
                            PROPER_NOUN_NT'applying to one thing and one topic'
                        SENTENCE_NT'the consulting it about action translates into i6 as Consult'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'consulting it about action'
                            PROPER_NOUN_NT'Consult'
                        SENTENCE_NT'the specification of the consulting it about action is Consu'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the consulting it about action'
                                PROPER_NOUN_NT'consulting it about action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Consulting is a very
                            flexible and potentially powerful actio'
                        RULE_NT'report an actor consulting something about ( this is the blo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [discover] nothing of interest in [the noun]." ( a'
                                            INVOCATION_LIST_SAY_NT'"[We] [discover] nothing of interest in [the noun]." ( a )'
                                                INVOCATION_NT'"[We] [discover] nothing of interest in [the noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [discover] nothing of interest in [the noun]." ( a )'
                                                        CONSTANT_NT'"[We] [discover] nothing of interest in [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [look] at [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [look] at [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [look] at [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [look] at [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [look] at [the noun]." ( b )'-text
                    HEADING_NT'section 5 - standard actions which change the state of thing' (level 5)
                        SENTENCE_NT'locking it with is an action applying to one thing and one c'
                            VERB_NT'is'
                            PROPER_NOUN_NT'locking it with'
                            PROPER_NOUN_NT'applying to one thing and one carried thing'
                        SENTENCE_NT'the locking it with action translates into i6 as Lock'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'locking it with action'
                            PROPER_NOUN_NT'Lock'
                        SENTENCE_NT'the specification of the locking it with action is Locking i'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the locking it with action'
                                PROPER_NOUN_NT'locking it with action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Locking is the act of
                            using an object such as a key to ensur'
                        RULE_NT'check an actor locking something with ( this is the can't lo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property lockable and the noun is l'
                                        INVOCATION_NT'if the noun provides the property lockable and the noun is l'
                                            CONDITION_CONTEXT_NT'noun provides the property lockable and the noun is lockable'
                                                LOGICAL_AND_NT'noun provides the property lockable and the noun is lockable'
                                                    TEST_PROPOSITION_NT'noun provides the property lockable'(test: [ provides('noun', CONSTANT_NT-either/or property) ])
                                                    TEST_PROPOSITION_NT'the noun is lockable'(test: [ A84'lockable'('the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[regarding the noun][Those] [don't] seem to be somethin'
                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][Those] [don't] seem to be something [w'
                                                INVOCATION_NT'"[regarding the noun][Those] [don't] seem to be something [w'
                                                    RVALUE_CONTEXT_NT'"[regarding the noun][Those] [don't] seem to be something [w'
                                                        CONSTANT_NT'"[regarding the noun][Those] [don't] seem to be something [w'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor locking something with ( this is the can't lo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is locked'
                                        INVOCATION_NT'if the noun is locked'
                                            CONDITION_CONTEXT_NT'noun is locked'
                                                TEST_PROPOSITION_NT'noun is locked'(test: [ A85'locked'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] locked at the [if story t'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] locked at the [if story tense'
                                                        INVOCATION_NT'"[regarding the noun][They're] locked at the [if story tense'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] locked at the [if story tense'
                                                                CONSTANT_NT'"[regarding the noun][They're] locked at the [if story tense'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor locking something with ( this is the can't lo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is open'
                                        INVOCATION_NT'if the noun is open'
                                            CONDITION_CONTEXT_NT'noun is open'
                                                TEST_PROPOSITION_NT'noun is open'(test: [ A80'open'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "First [we] [would have] to close [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"First [we] [would have] to close [the noun]." ( a )'
                                                        INVOCATION_NT'"First [we] [would have] to close [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"First [we] [would have] to close [the noun]." ( a )'
                                                                CONSTANT_NT'"First [we] [would have] to close [the noun]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor locking something with ( this is the can't lo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the holder of the second noun is not the actor or the nou'
                                        INVOCATION_NT'if the holder of the second noun is not the actor or the nou'
                                            CONDITION_CONTEXT_NT'holder of the second noun is not the actor or the noun does '
                                                LOGICAL_OR_NT'holder of the second noun is not the actor or the noun does '
                                                    TEST_PROPOSITION_NT'holder of the second noun is not the actor'(test: [ NOT[ is('holder of the second noun', 'the actor') NOT] ])
                                                    LOGICAL_OR_NT
                                                        TEST_PROPOSITION_NT'the noun does not provide the property matching key'(test: [ NOT[ provides('the noun', 'the property matching key') NOT] ])
                                                        TEST_PROPOSITION_NT'the matching key of the noun is not the second noun'(test: [ NOT[ is('the matching key of the noun', 'the second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the second noun][Those] [don't] seem to fit '
                                                    INVOCATION_LIST_SAY_NT'"[regarding the second noun][Those] [don't] seem to fit the '
                                                        INVOCATION_NT'"[regarding the second noun][Those] [don't] seem to fit the '
                                                            RVALUE_CONTEXT_NT'"[regarding the second noun][Those] [don't] seem to fit the '
                                                                CONSTANT_NT'"[regarding the second noun][Those] [don't] seem to fit the '-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor locking something with ( this is the stan'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is locked'
                                    CONDITION_CONTEXT_NT'the noun is locked'
                        RULE_NT'report an actor locking something with ( this is the standar'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [lock] [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [lock] [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [lock] [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [lock] [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [lock] [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is visible'
                                                INVOCATION_NT'if the actor is visible'
                                                    CONDITION_CONTEXT_NT'actor is visible'
                                                        TEST_PROPOSITION_NT'actor is visible'(test: [ A30'visible'('actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The actor] [lock] [the noun]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [lock] [the noun]." ( b )'
                                                        INVOCATION_NT'"[The actor] [lock] [the noun]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [lock] [the noun]." ( b )'
                                                                CONSTANT_NT'"[The actor] [lock] [the noun]." ( b )'-text
                        SENTENCE_NT'unlocking it with is an action applying to one thing and one'
                            VERB_NT'is'
                            PROPER_NOUN_NT'unlocking it with'
                            PROPER_NOUN_NT'applying to one thing and one carried thing'
                        SENTENCE_NT'the unlocking it with action translates into i6 as Unlock'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'unlocking it with action'
                            PROPER_NOUN_NT'Unlock'
                        SENTENCE_NT'the specification of the unlocking it with action is Unlocki'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the unlocking it with action'
                                PROPER_NOUN_NT'unlocking it with action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Unlocking undoes the
                            effect of locking, and renders the noun'
                        RULE_NT'check an actor unlocking something with ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property lockable and the noun is l'
                                        INVOCATION_NT'if the noun provides the property lockable and the noun is l'
                                            CONDITION_CONTEXT_NT'noun provides the property lockable and the noun is lockable'
                                                LOGICAL_AND_NT'noun provides the property lockable and the noun is lockable'
                                                    TEST_PROPOSITION_NT'noun provides the property lockable'(test: [ provides('noun', CONSTANT_NT-either/or property) ])
                                                    TEST_PROPOSITION_NT'the noun is lockable'(test: [ A84'lockable'('the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[regarding the noun][Those] [don't] seem to be somethin'
                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][Those] [don't] seem to be something [w'
                                                INVOCATION_NT'"[regarding the noun][Those] [don't] seem to be something [w'
                                                    RVALUE_CONTEXT_NT'"[regarding the noun][Those] [don't] seem to be something [w'
                                                        CONSTANT_NT'"[regarding the noun][Those] [don't] seem to be something [w'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor unlocking something with ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not locked'
                                        INVOCATION_NT'if the noun is not locked'
                                            CONDITION_CONTEXT_NT'noun is not locked'
                                                TEST_PROPOSITION_NT'noun is not locked'(test: [ NOT[ A85'locked'('noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] unlocked at the [if story'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] unlocked at the [if story ten'
                                                        INVOCATION_NT'"[regarding the noun][They're] unlocked at the [if story ten'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] unlocked at the [if story ten'
                                                                CONSTANT_NT'"[regarding the noun][They're] unlocked at the [if story ten'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor unlocking something with ( this is the can't '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the holder of the second noun is not the actor or the nou'
                                        INVOCATION_NT'if the holder of the second noun is not the actor or the nou'
                                            CONDITION_CONTEXT_NT'holder of the second noun is not the actor or the noun does '
                                                LOGICAL_OR_NT'holder of the second noun is not the actor or the noun does '
                                                    TEST_PROPOSITION_NT'holder of the second noun is not the actor'(test: [ NOT[ is('holder of the second noun', 'the actor') NOT] ])
                                                    LOGICAL_OR_NT
                                                        TEST_PROPOSITION_NT'the noun does not provide the property matching key'(test: [ NOT[ provides('the noun', 'the property matching key') NOT] ])
                                                        TEST_PROPOSITION_NT'the matching key of the noun is not the second noun'(test: [ NOT[ is('the matching key of the noun', 'the second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the second noun][Those] [don't] seem to fit '
                                                    INVOCATION_LIST_SAY_NT'"[regarding the second noun][Those] [don't] seem to fit the '
                                                        INVOCATION_NT'"[regarding the second noun][Those] [don't] seem to fit the '
                                                            RVALUE_CONTEXT_NT'"[regarding the second noun][Those] [don't] seem to fit the '
                                                                CONSTANT_NT'"[regarding the second noun][Those] [don't] seem to fit the '-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor unlocking something with ( this is the st'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is not locked'
                                    CONDITION_CONTEXT_NT'the noun is not locked'
                        RULE_NT'report an actor unlocking something with ( this is the stand'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [unlock] [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [unlock] [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [unlock] [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [unlock] [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [unlock] [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is visible'
                                                INVOCATION_NT'if the actor is visible'
                                                    CONDITION_CONTEXT_NT'actor is visible'
                                                        TEST_PROPOSITION_NT'actor is visible'(test: [ A30'visible'('actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The actor] [unlock] [the noun]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [unlock] [the noun]." ( b )'
                                                        INVOCATION_NT'"[The actor] [unlock] [the noun]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [unlock] [the noun]." ( b )'
                                                                CONSTANT_NT'"[The actor] [unlock] [the noun]." ( b )'-text
                        SENTENCE_NT'switching on is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'switching on'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the switching on action translates into i6 as SwitchOn'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switching on action'
                            PROPER_NOUN_NT'SwitchOn'
                        SENTENCE_NT'the specification of the switching on action is The switchin'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the switching on action'
                                PROPER_NOUN_NT'switching on action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The switching on and switching
                            off actions are for the simpl'
                        RULE_NT'check an actor switching on ( this is the can't switch on un'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property switched on'
                                        INVOCATION_NT'if the noun provides the property switched on'
                                            CONDITION_CONTEXT_NT'noun provides the property switched on'
                                                TEST_PROPOSITION_NT'noun provides the property switched on'(test: [ provides('noun', CONSTANT_NT-either/or property) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[regarding the noun][They] [aren't] something [we] [can'
                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'
                                                INVOCATION_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'
                                                    RVALUE_CONTEXT_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'
                                                        CONSTANT_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor switching on ( this is the can't switch on wh'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is switched on'
                                        INVOCATION_NT'if the noun is switched on'
                                            CONDITION_CONTEXT_NT'noun is switched on'
                                                TEST_PROPOSITION_NT'noun is switched on'(test: [ A90'switched on'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] already on." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] already on." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They're] already on." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] already on." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They're] already on." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor switching on ( this is the standard switc'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is switched on'
                                    CONDITION_CONTEXT_NT'the noun is switched on'
                        RULE_NT'report an actor switching on ( this is the standard report s'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [switch] [the noun] on." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [switch] [the noun] on." ( a )'
                                                INVOCATION_NT'"[The actor] [switch] [the noun] on." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [switch] [the noun] on." ( a )'
                                                        CONSTANT_NT'"[The actor] [switch] [the noun] on." ( a )'-text
                        SENTENCE_NT'switching off is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'switching off'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the switching off action translates into i6 as SwitchOff'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switching off action'
                            PROPER_NOUN_NT'SwitchOff'
                        SENTENCE_NT'the specification of the switching off action is The switchi'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the switching off action'
                                PROPER_NOUN_NT'switching off action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The switching off and switching
                            on actions are for the simpl'
                        RULE_NT'check an actor switching off ( this is the can't switch off '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property switched on'
                                        INVOCATION_NT'if the noun provides the property switched on'
                                            CONDITION_CONTEXT_NT'noun provides the property switched on'
                                                TEST_PROPOSITION_NT'noun provides the property switched on'(test: [ provides('noun', CONSTANT_NT-either/or property) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[regarding the noun][They] [aren't] something [we] [can'
                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'
                                                INVOCATION_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'
                                                    RVALUE_CONTEXT_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'
                                                        CONSTANT_NT'"[regarding the noun][They] [aren't] something [we] [can] sw'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor switching off ( this is the can't switch off '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is switched off'
                                        INVOCATION_NT'if the noun is switched off'
                                            CONDITION_CONTEXT_NT'noun is switched off'
                                                TEST_PROPOSITION_NT'noun is switched off'(test: [ A91'switched off'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] already off." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] already off." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They're] already off." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] already off." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They're] already off." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor switching off ( this is the standard swit'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is switched off'
                                    CONDITION_CONTEXT_NT'the noun is switched off'
                        RULE_NT'report an actor switching off ( this is the standard report '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the action is not silent'
                                        INVOCATION_NT'if the action is not silent'
                                            CONDITION_CONTEXT_NT'action is not silent'
                                                TEST_VALUE_NT'action is not silent'
                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                        INVOCATION_LIST_NT'action is not silent'
                                                            INVOCATION_NT'action is not silent'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The actor] [switch] [the noun] off." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [switch] [the noun] off." ( a )'
                                                INVOCATION_NT'"[The actor] [switch] [the noun] off." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [switch] [the noun] off." ( a )'
                                                        CONSTANT_NT'"[The actor] [switch] [the noun] off." ( a )'-text
                        SENTENCE_NT'opening is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'opening'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the opening action translates into i6 as Open'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'opening action'
                            PROPER_NOUN_NT'Open'
                        SENTENCE_NT'the specification of the opening action is Opening makes som'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the opening action'
                                PROPER_NOUN_NT'opening action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Opening makes something no longer
                            a physical barrier. The ac'
                        RULE_NT'check an actor opening ( this is the can't open unless opena'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property openable and the noun is o'
                                        INVOCATION_NT'if the noun provides the property openable and the noun is o'
                                            CONDITION_CONTEXT_NT'noun provides the property openable and the noun is openable'
                                                LOGICAL_AND_NT'noun provides the property openable and the noun is openable'
                                                    TEST_PROPOSITION_NT'noun provides the property openable'(test: [ provides('noun', CONSTANT_NT-either/or property) ])
                                                    TEST_PROPOSITION_NT'the noun is openable'(test: [ A82'openable'('the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[regarding the noun][They] [aren't] something [we] [can'
                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [aren't] something [we] [can] op'
                                                INVOCATION_NT'"[regarding the noun][They] [aren't] something [we] [can] op'
                                                    RVALUE_CONTEXT_NT'"[regarding the noun][They] [aren't] something [we] [can] op'
                                                        CONSTANT_NT'"[regarding the noun][They] [aren't] something [we] [can] op'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor opening ( this is the can't open what's locke'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property lockable and the noun is l'
                                        INVOCATION_NT'if the noun provides the property lockable and the noun is l'
                                            CONDITION_CONTEXT_NT'noun provides the property lockable and the noun is locked'
                                                LOGICAL_AND_NT'noun provides the property lockable and the noun is locked'
                                                    TEST_PROPOSITION_NT'noun provides the property lockable'(test: [ provides('noun', CONSTANT_NT-either/or property) ])
                                                    TEST_PROPOSITION_NT'the noun is locked'(test: [ A85'locked'('the noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They] [seem] to be locked." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [seem] to be locked." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They] [seem] to be locked." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They] [seem] to be locked." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They] [seem] to be locked." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor opening ( this is the can't open what's alrea'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is open'
                                        INVOCATION_NT'if the noun is open'
                                            CONDITION_CONTEXT_NT'noun is open'
                                                TEST_PROPOSITION_NT'noun is open'(test: [ A80'open'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] already open." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] already open." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They're] already open." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] already open." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They're] already open." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor opening ( this is the standard opening ru'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is open'
                                    CONDITION_CONTEXT_NT'the noun is open'
                        RULE_NT'report an actor opening ( this is the reveal any newly visib'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player and the noun is an opaque contain'
                                        INVOCATION_NT'if the actor is the player and the noun is an opaque contain'
                                            CONDITION_CONTEXT_NT'actor is the player and the noun is an opaque container and '
                                                LOGICAL_AND_NT'actor is the player and the noun is an opaque container and '
                                                    TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    LOGICAL_AND_NT
                                                        TEST_PROPOSITION_NT'the noun is an opaque container'(test: [ kind=container('the noun') ^ A79'opaque'('the noun') ])
                                                        LOGICAL_AND_NT
                                                            TEST_PROPOSITION_NT'the first thing held by the noun is not nothing'(test: [ NOT[ is('the first thing held by the noun', 'nothing') NOT] ])
                                                            TEST_PROPOSITION_NT'the noun does not enclose the actor'(test: [ NOT[ encloses('the noun', 'the actor') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the actor is the player'
                                                        INVOCATION_NT'if the actor is the player'
                                                            CONDITION_CONTEXT_NT'actor is the player'
                                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[We] [open] [the noun], revealing " ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[We] [open] [the noun], revealing " ( a )'
                                                                INVOCATION_NT'"[We] [open] [the noun], revealing " ( a )'
                                                                    RVALUE_CONTEXT_NT'"[We] [open] [the noun], revealing " ( a )'
                                                                        CONSTANT_NT'"[We] [open] [the noun], revealing " ( a )'-text
                                                        INVOCATION_LIST_NT'list the contents of the noun , as a sentence , tersely , no'
                                                            INVOCATION_NT'list the contents of the noun'
                                                                RVALUE_CONTEXT_NT'noun'
                                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                                        CODE_BLOCK_NT'say "."'
                                                            INVOCATION_LIST_SAY_NT'"."'
                                                                INVOCATION_NT'"."'
                                                                    RVALUE_CONTEXT_NT'"."'
                                                                        CONSTANT_NT'"."'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor opening ( this is the standard report openin'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [open] [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [open] [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [open] [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [open] [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [open] [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player can see the actor'
                                                INVOCATION_NT'if the player can see the actor'
                                                    CONDITION_CONTEXT_NT'player can see the actor'
                                                        TEST_PROPOSITION_NT'player can see the actor'(test: [ can-see('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The actor] [open] [the noun]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [open] [the noun]." ( b )'
                                                        INVOCATION_NT'"[The actor] [open] [the noun]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [open] [the noun]." ( b )'
                                                                CONSTANT_NT'"[The actor] [open] [the noun]." ( b )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The noun] [open]." ( c )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [open]." ( c )'
                                                        INVOCATION_NT'"[The noun] [open]." ( c )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [open]." ( c )'
                                                                CONSTANT_NT'"[The noun] [open]." ( c )'-text
                        SENTENCE_NT'closing is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'closing'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the closing action translates into i6 as Close'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'closing action'
                            PROPER_NOUN_NT'Close'
                        SENTENCE_NT'the specification of the closing action is Closing makes som'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the closing action'
                                PROPER_NOUN_NT'closing action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Closing makes something into
                            a physical barrier. The action '
                        RULE_NT'check an actor closing ( this is the can't close unless open'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun provides the property openable and the noun is o'
                                        INVOCATION_NT'if the noun provides the property openable and the noun is o'
                                            CONDITION_CONTEXT_NT'noun provides the property openable and the noun is openable'
                                                LOGICAL_AND_NT'noun provides the property openable and the noun is openable'
                                                    TEST_PROPOSITION_NT'noun provides the property openable'(test: [ provides('noun', CONSTANT_NT-either/or property) ])
                                                    TEST_PROPOSITION_NT'the noun is openable'(test: [ A82'openable'('the noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[regarding the noun][They] [aren't] something [we] [can'
                                            INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [aren't] something [we] [can] cl'
                                                INVOCATION_NT'"[regarding the noun][They] [aren't] something [we] [can] cl'
                                                    RVALUE_CONTEXT_NT'"[regarding the noun][They] [aren't] something [we] [can] cl'
                                                        CONSTANT_NT'"[regarding the noun][They] [aren't] something [we] [can] cl'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor closing ( this is the can't close what's alre'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is closed'
                                        INVOCATION_NT'if the noun is closed'
                                            CONDITION_CONTEXT_NT'noun is closed'
                                                TEST_PROPOSITION_NT'noun is closed'(test: [ A81'closed'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They're] already closed." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They're] already closed." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They're] already closed." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They're] already closed." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They're] already closed." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor closing ( this is the standard closing ru'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the noun is closed'
                                    CONDITION_CONTEXT_NT'the noun is closed'
                        RULE_NT'report an actor closing ( this is the standard report closin'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [close] [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [close] [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [close] [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [close] [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [close] [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player can see the actor'
                                                INVOCATION_NT'if the player can see the actor'
                                                    CONDITION_CONTEXT_NT'player can see the actor'
                                                        TEST_PROPOSITION_NT'player can see the actor'(test: [ can-see('player', 'the actor') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The actor] [close] [the noun]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [close] [the noun]." ( b )'
                                                        INVOCATION_NT'"[The actor] [close] [the noun]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [close] [the noun]." ( b )'
                                                                CONSTANT_NT'"[The actor] [close] [the noun]." ( b )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The noun] [close]." ( c )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [close]." ( c )'
                                                        INVOCATION_NT'"[The noun] [close]." ( c )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [close]." ( c )'
                                                                CONSTANT_NT'"[The noun] [close]." ( c )'-text
                        SENTENCE_NT'wearing is an action applying to one carried thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'wearing'
                            PROPER_NOUN_NT'applying to one carried thing'
                        SENTENCE_NT'the wearing action translates into i6 as Wear'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'wearing action'
                            PROPER_NOUN_NT'Wear'
                        SENTENCE_NT'the specification of the wearing action is The Standard Rule'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the wearing action'
                                PROPER_NOUN_NT'wearing action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules give Inform
                            only a simple model of clothi'
                        RULE_NT'check an actor wearing ( this is the can't wear what's not c'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not a thing or the noun is not wearable'
                                        INVOCATION_NT'if the noun is not a thing or the noun is not wearable'
                                            CONDITION_CONTEXT_NT'noun is not a thing or the noun is not wearable'
                                                LOGICAL_OR_NT'noun is not a thing or the noun is not wearable'
                                                    TEST_PROPOSITION_NT'noun is not a thing'(test: [ NOT[ kind=thing('noun') NOT] ])
                                                    TEST_PROPOSITION_NT'the noun is not wearable'(test: [ NOT[ A68'wearable'('the noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't wear] [regarding the noun][those]!" ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't wear] [regarding the noun][those]!" ( a )'
                                                        INVOCATION_NT'"[We] [can't wear] [regarding the noun][those]!" ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [can't wear] [regarding the noun][those]!" ( a )'
                                                                CONSTANT_NT'"[We] [can't wear] [regarding the noun][those]!" ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor wearing ( this is the can't wear what's not h'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the holder of the noun is not the actor'
                                        INVOCATION_NT'if the holder of the noun is not the actor'
                                            CONDITION_CONTEXT_NT'holder of the noun is not the actor'
                                                TEST_PROPOSITION_NT'holder of the noun is not the actor'(test: [ NOT[ is('holder of the noun', 'the actor') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [aren't] holding [regarding the noun][those]!" ( a'
                                                    INVOCATION_LIST_SAY_NT'"[We] [aren't] holding [regarding the noun][those]!" ( a )'
                                                        INVOCATION_NT'"[We] [aren't] holding [regarding the noun][those]!" ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [aren't] holding [regarding the noun][those]!" ( a )'
                                                                CONSTANT_NT'"[We] [aren't] holding [regarding the noun][those]!" ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor wearing ( this is the can't wear what's alrea'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We]['re] already wearing [regarding the noun][those]!"'
                                                    INVOCATION_LIST_SAY_NT'"[We]['re] already wearing [regarding the noun][those]!" ( a'
                                                        INVOCATION_NT'"[We]['re] already wearing [regarding the noun][those]!" ( a'
                                                            RVALUE_CONTEXT_NT'"[We]['re] already wearing [regarding the noun][those]!" ( a'
                                                                CONSTANT_NT'"[We]['re] already wearing [regarding the noun][those]!" ( a'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor wearing ( this is the standard wearing ru'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the actor wears the noun'
                                    CONDITION_CONTEXT_NT'the actor wears the noun'
                        RULE_NT'report an actor wearing ( this is the standard report wearin'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [put] on [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [put] on [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [put] on [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [put] on [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [put] on [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [put] on [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [put] on [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [put] on [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [put] on [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [put] on [the noun]." ( b )'-text
                        SENTENCE_NT'taking off is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'taking off'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the taking off action translates into i6 as Disrobe'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'taking off action'
                            PROPER_NOUN_NT'Disrobe'
                        RULE_NT'does the player mean taking off something worn'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'it is very likely'
                        SENTENCE_NT'the specification of the taking off action is The Standard R'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the taking off action'
                                PROPER_NOUN_NT'taking off action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules give Inform
                            only a simple model of clothi'
                        RULE_NT'check an actor taking off ( this is the can't take off what''
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not wearing the noun'
                                        INVOCATION_NT'if the actor is not wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is not wearing the noun'
                                                TEST_PROPOSITION_NT'actor is not wearing the noun'(test: [ NOT[ is('actor', {<schema: WearerOf(*1)>:'the noun'}) NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [aren't] wearing [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [aren't] wearing [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [aren't] wearing [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [aren't] wearing [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [aren't] wearing [the noun]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor taking off ( this is the can't exceed carryin'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the number of things carried by the actor is at least the'
                                        INVOCATION_NT'if the number of things carried by the actor is at least the'
                                            CONDITION_CONTEXT_NT'number of things carried by the actor is at least the carryi'
                                                TEST_PROPOSITION_NT'number of things carried by the actor is at least the carryi'(test: [ at-least('number of things carried by the actor', 'the carrying capacity of the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We]['re] carrying too many things already." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We]['re] carrying too many things already." ( a )'
                                                        INVOCATION_NT'"[We]['re] carrying too many things already." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We]['re] carrying too many things already." ( a )'
                                                                CONSTANT_NT'"[We]['re] carrying too many things already." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor taking off ( this is the standard taking '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the actor carries the noun'
                                    CONDITION_CONTEXT_NT'the actor carries the noun'
                        RULE_NT'report an actor taking off ( this is the standard report tak'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [take] off [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [take] off [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [take] off [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [take] off [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [take] off [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [take] off [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [take] off [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [take] off [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [take] off [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [take] off [the noun]." ( b )'-text
                    HEADING_NT'section 6 - standard actions concerning other people' (level 5)
                        SENTENCE_NT'giving it to is an action applying to one carried thing and '
                            VERB_NT'is'
                            PROPER_NOUN_NT'giving it to'
                            PROPER_NOUN_NT'applying to one carried thing and one thing'
                        SENTENCE_NT'the giving it to action translates into i6 as Give'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'giving it to action'
                            PROPER_NOUN_NT'Give'
                        SENTENCE_NT'the specification of the giving it to action is This action '
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the giving it to action'
                                PROPER_NOUN_NT'giving it to action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'This action is indexed by
                            Inform under 'Actions concerning o'
                        RULE_NT'check an actor giving something to ( this is the can't give '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not the holder of the noun'
                                        INVOCATION_NT'if the actor is not the holder of the noun'
                                            CONDITION_CONTEXT_NT'actor is not the holder of the noun'
                                                TEST_PROPOSITION_NT'actor is not the holder of the noun'(test: [ NOT[ is('actor', 'the holder of the noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [aren't] holding [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [aren't] holding [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [aren't] holding [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [aren't] holding [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [aren't] holding [the noun]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor giving something to ( this is the can't give '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the second noun'
                                        INVOCATION_NT'if the actor is the second noun'
                                            CONDITION_CONTEXT_NT'actor is the second noun'
                                                TEST_PROPOSITION_NT'actor is the second noun'(test: [ is('actor', 'the second noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [can't give] [the noun] to [ourselves]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [can't give] [the noun] to [ourselves]." ( a )'
                                                        INVOCATION_NT'"[We] [can't give] [the noun] to [ourselves]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [can't give] [the noun] to [ourselves]." ( a )'
                                                                CONSTANT_NT'"[We] [can't give] [the noun] to [ourselves]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor giving something to ( this is the can't give '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not a person'
                                        INVOCATION_NT'if the second noun is not a person'
                                            CONDITION_CONTEXT_NT'second noun is not a person'
                                                TEST_PROPOSITION_NT'second noun is not a person'(test: [ NOT[ kind=person('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The second noun] [aren't] able to receive things." ( a'
                                                    INVOCATION_LIST_SAY_NT'"[The second noun] [aren't] able to receive things." ( a )'
                                                        INVOCATION_NT'"[The second noun] [aren't] able to receive things." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The second noun] [aren't] able to receive things." ( a )'
                                                                CONSTANT_NT'"[The second noun] [aren't] able to receive things." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor giving something to ( this is the can't give '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "(first taking [the noun] off)[command clarification bre'
                                            INVOCATION_LIST_SAY_NT'"(first taking [the noun] off)[command clarification break]"'
                                                INVOCATION_NT'"(first taking [the noun] off)[command clarification break]"'
                                                    RVALUE_CONTEXT_NT'"(first taking [the noun] off)[command clarification break]"'
                                                        CONSTANT_NT'"(first taking [the noun] off)[command clarification break]"'-text
                                        INVOCATION_LIST_NT'silently try the actor trying taking off the noun'
                                            INVOCATION_NT'silently try the actor trying taking off the noun'
                                                RVALUE_CONTEXT_NT'actor trying taking off the noun'
                                                    CONSTANT_NT'actor trying taking off the noun'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is wearing the noun'
                                                INVOCATION_NT'if the actor is wearing the noun'
                                                    CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                        TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor giving something to ( this is the block givin'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The second noun] [don't] seem interested." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The second noun] [don't] seem interested." ( a )'
                                                INVOCATION_NT'"[The second noun] [don't] seem interested." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The second noun] [don't] seem interested." ( a )'
                                                        CONSTANT_NT'"[The second noun] [don't] seem interested." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor giving something to ( this is the can't excee'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the number of things carried by the second noun is at lea'
                                        INVOCATION_NT'if the number of things carried by the second noun is at lea'
                                            CONDITION_CONTEXT_NT'number of things carried by the second noun is at least the '
                                                TEST_PROPOSITION_NT'number of things carried by the second noun is at least the '(test: [ at-least('number of things carried by the second noun', 'the carrying capacity of the second noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The second noun] [are] carrying too many things alread'
                                                    INVOCATION_LIST_SAY_NT'"[The second noun] [are] carrying too many things already." '
                                                        INVOCATION_NT'"[The second noun] [are] carrying too many things already." '
                                                            RVALUE_CONTEXT_NT'"[The second noun] [are] carrying too many things already." '
                                                                CONSTANT_NT'"[The second noun] [are] carrying too many things already." '-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'carry out an actor giving something to ( this is the standar'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'move the noun to the second noun'
                                    INVOCATION_NT'move the noun to the second noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        RVALUE_CONTEXT_NT'second noun'
                                            NONLOCAL_VARIABLE_NT'second noun'('second noun'(var)[object])
                        RULE_NT'report an actor giving something to ( this is the standard r'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [give] [the noun] to [the second noun]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [give] [the noun] to [the second noun]." ( a )'
                                                INVOCATION_NT'"[We] [give] [the noun] to [the second noun]." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [give] [the noun] to [the second noun]." ( a )'
                                                        CONSTANT_NT'"[We] [give] [the noun] to [the second noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the second noun is the player'
                                                INVOCATION_NT'if the second noun is the player'
                                                    CONDITION_CONTEXT_NT'second noun is the player'
                                                        TEST_PROPOSITION_NT'second noun is the player'(test: [ is('second noun', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The actor] [give] [the noun] to [us]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [give] [the noun] to [us]." ( b )'
                                                        INVOCATION_NT'"[The actor] [give] [the noun] to [us]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [give] [the noun] to [us]." ( b )'
                                                                CONSTANT_NT'"[The actor] [give] [the noun] to [us]." ( b )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The actor] [give] [the noun] to [the second noun]." ( '
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [give] [the noun] to [the second noun]." ( c )'
                                                        INVOCATION_NT'"[The actor] [give] [the noun] to [the second noun]." ( c )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [give] [the noun] to [the second noun]." ( c )'
                                                                CONSTANT_NT'"[The actor] [give] [the noun] to [the second noun]." ( c )'-text
                        SENTENCE_NT'showing it to is an action applying to one carried thing and'
                            VERB_NT'is'
                            PROPER_NOUN_NT'showing it to'
                            PROPER_NOUN_NT'applying to one carried thing and one visible thing'
                        SENTENCE_NT'the showing it to action translates into i6 as Show'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'showing it to action'
                            PROPER_NOUN_NT'Show'
                        SENTENCE_NT'the specification of the showing it to action is Anyone can '
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the showing it to action'
                                PROPER_NOUN_NT'showing it to action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Anyone can show anyone
                            else something which they are carryin'
                        RULE_NT'check an actor showing something to ( this is the can't show'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not the holder of the noun'
                                        INVOCATION_NT'if the actor is not the holder of the noun'
                                            CONDITION_CONTEXT_NT'actor is not the holder of the noun'
                                                TEST_PROPOSITION_NT'actor is not the holder of the noun'(test: [ NOT[ is('actor', 'the holder of the noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [aren't] holding [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [aren't] holding [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [aren't] holding [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [aren't] holding [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [aren't] holding [the noun]." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor showing something to ( this is the convert sh'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the second noun'
                                        INVOCATION_NT'if the actor is the second noun'
                                            CONDITION_CONTEXT_NT'actor is the second noun'
                                                TEST_PROPOSITION_NT'actor is the second noun'(test: [ is('actor', 'the second noun') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'convert to the examining action on the noun'
                                            INVOCATION_NT'convert to the examining action on the noun'
                                                RVALUE_CONTEXT_NT'examining action'
                                                    CONSTANT_NT'examining action'-action name
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        RULE_NT'check an actor showing something to ( this is the block show'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The second noun] [are] unimpressed." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The second noun] [are] unimpressed." ( a )'
                                                INVOCATION_NT'"[The second noun] [are] unimpressed." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The second noun] [are] unimpressed." ( a )'
                                                        CONSTANT_NT'"[The second noun] [are] unimpressed." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'waking is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'waking'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the waking action translates into i6 as WakeOther'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'waking action'
                            PROPER_NOUN_NT'WakeOther'
                        SENTENCE_NT'the specification of the waking action is This is the act of'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the waking action'
                                PROPER_NOUN_NT'waking action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'This is the act of jostling
                            a sleeping person to wake him or'
                        RULE_NT'check an actor waking ( this is the block waking rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "That [seem] unnecessary." ( a )'
                                            INVOCATION_LIST_SAY_NT'"That [seem] unnecessary." ( a )'
                                                INVOCATION_NT'"That [seem] unnecessary." ( a )'
                                                    RVALUE_CONTEXT_NT'"That [seem] unnecessary." ( a )'
                                                        CONSTANT_NT'"That [seem] unnecessary." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'throwing it at is an action applying to one carried thing an'
                            VERB_NT'is'
                            PROPER_NOUN_NT'throwing it at'
                            PROPER_NOUN_NT'applying to one carried thing and one visible thing'
                        SENTENCE_NT'the throwing it at action translates into i6 as ThrowAt'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'throwing it at action'
                            PROPER_NOUN_NT'ThrowAt'
                        SENTENCE_NT'the specification of the throwing it at action is Throwing s'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the throwing it at action'
                                PROPER_NOUN_NT'throwing it at action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Throwing something at
                            someone or something is difficult for '
                        RULE_NT'check an actor throwing something at ( this is the implicitl'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is wearing the noun'
                                        INVOCATION_NT'if the actor is wearing the noun'
                                            CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "(first taking [the noun] off)[command clarification bre'
                                            INVOCATION_LIST_SAY_NT'"(first taking [the noun] off)[command clarification break]"'
                                                INVOCATION_NT'"(first taking [the noun] off)[command clarification break]"'
                                                    RVALUE_CONTEXT_NT'"(first taking [the noun] off)[command clarification break]"'
                                                        CONSTANT_NT'"(first taking [the noun] off)[command clarification break]"'-text
                                        INVOCATION_LIST_NT'silently try the actor trying taking off the noun'
                                            INVOCATION_NT'silently try the actor trying taking off the noun'
                                                RVALUE_CONTEXT_NT'actor trying taking off the noun'
                                                    CONSTANT_NT'actor trying taking off the noun'-action
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is wearing the noun'
                                                INVOCATION_NT'if the actor is wearing the noun'
                                                    CONDITION_CONTEXT_NT'actor is wearing the noun'
                                                        TEST_PROPOSITION_NT'actor is wearing the noun'(test: [ is('actor', {<schema: WearerOf(*1)>:'the noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'stop the action'
                                                    INVOCATION_NT'stop the action'
                        RULE_NT'check an actor throwing something at ( this is the futile to'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not a person'
                                        INVOCATION_NT'if the second noun is not a person'
                                            CONDITION_CONTEXT_NT'second noun is not a person'
                                                TEST_PROPOSITION_NT'second noun is not a person'(test: [ NOT[ kind=person('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Futile." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Futile." ( a )'
                                                        INVOCATION_NT'"Futile." ( a )'
                                                            RVALUE_CONTEXT_NT'"Futile." ( a )'
                                                                CONSTANT_NT'"Futile." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor throwing something at ( this is the block thr'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [lack] the nerve when it [if story tense is the pa'
                                            INVOCATION_LIST_SAY_NT'"[We] [lack] the nerve when it [if story tense is the past
                                            t'
                                                INVOCATION_NT'"[We] [lack] the nerve when it [if story tense is the past
                                                t'
                                                    RVALUE_CONTEXT_NT'"[We] [lack] the nerve when it [if story tense is the past
                                                    t'
                                                        CONSTANT_NT'"[We] [lack] the nerve when it [if story tense is the past
                                                        t'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'attacking is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'attacking'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the attacking action translates into i6 as Attack'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'attacking action'
                            PROPER_NOUN_NT'Attack'
                        SENTENCE_NT'the specification of the attacking action is Violence is sel'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the attacking action'
                                PROPER_NOUN_NT'attacking action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Violence is seldom the answer,
                            and attempts to attack anothe'
                        RULE_NT'check an actor attacking ( this is the block attacking rule '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "Violence [aren't] the answer to this one." ( a )'
                                            INVOCATION_LIST_SAY_NT'"Violence [aren't] the answer to this one." ( a )'
                                                INVOCATION_NT'"Violence [aren't] the answer to this one." ( a )'
                                                    RVALUE_CONTEXT_NT'"Violence [aren't] the answer to this one." ( a )'
                                                        CONSTANT_NT'"Violence [aren't] the answer to this one." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'kissing is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'kissing'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the kissing action translates into i6 as Kiss'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'kissing action'
                            PROPER_NOUN_NT'Kiss'
                        SENTENCE_NT'the specification of the kissing action is Possibly because '
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the kissing action'
                                PROPER_NOUN_NT'kissing action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Possibly because Inform was
                            originally written by an English'
                        RULE_NT'check an actor kissing ( this is the kissing yourself rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is the actor'
                                        INVOCATION_NT'if the noun is the actor'
                                            CONDITION_CONTEXT_NT'noun is the actor'
                                                TEST_PROPOSITION_NT'noun is the actor'(test: [ is('noun', 'the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [don't] get much from that." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [don't] get much from that." ( a )'
                                                        INVOCATION_NT'"[We] [don't] get much from that." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [don't] get much from that." ( a )'
                                                                CONSTANT_NT'"[We] [don't] get much from that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor kissing ( this is the block kissing rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The noun] [might not] like that." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[The noun] [might not] like that." ( a )'
                                                INVOCATION_NT'"[The noun] [might not] like that." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The noun] [might not] like that." ( a )'
                                                        CONSTANT_NT'"[The noun] [might not] like that." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'answering it that is an action applying to one thing and one'
                            VERB_NT'is'
                            PROPER_NOUN_NT'answering it that'
                            PROPER_NOUN_NT'applying to one thing and one topic'
                        SENTENCE_NT'the answering it that action translates into i6 as Answer'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'answering it that action'
                            PROPER_NOUN_NT'Answer'
                        SENTENCE_NT'the specification of the answering it that action is The Sta'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the answering it that action'
                                PROPER_NOUN_NT'answering it that action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules do
                            not include any systematic way to hand'
                        RULE_NT'report an actor answering something that ( this is the block'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "[There] [are] no reply." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[There] [are] no reply." ( a )'
                                                INVOCATION_NT'"[There] [are] no reply." ( a )'
                                                    RVALUE_CONTEXT_NT'"[There] [are] no reply." ( a )'
                                                        CONSTANT_NT'"[There] [are] no reply." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'telling it about is an action applying to one thing and one '
                            VERB_NT'is'
                            PROPER_NOUN_NT'telling it about'
                            PROPER_NOUN_NT'applying to one thing and one topic'
                        SENTENCE_NT'the telling it about action translates into i6 as Tell'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'telling it about action'
                            PROPER_NOUN_NT'Tell'
                        SENTENCE_NT'the specification of the telling it about action is The Stan'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the telling it about action'
                                PROPER_NOUN_NT'telling it about action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules do
                            not include any systematic way to hand'
                        RULE_NT'check an actor telling something about ( this is the telling'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the noun'
                                        INVOCATION_NT'if the actor is the noun'
                                            CONDITION_CONTEXT_NT'actor is the noun'
                                                TEST_PROPOSITION_NT'actor is the noun'(test: [ is('actor', 'the noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [talk] to [ourselves] a while." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [talk] to [ourselves] a while." ( a )'
                                                        INVOCATION_NT'"[We] [talk] to [ourselves] a while." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [talk] to [ourselves] a while." ( a )'
                                                                CONSTANT_NT'"[We] [talk] to [ourselves] a while." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor telling something about ( this is the block '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "This [provoke] no reaction." ( a )'
                                            INVOCATION_LIST_SAY_NT'"This [provoke] no reaction." ( a )'
                                                INVOCATION_NT'"This [provoke] no reaction." ( a )'
                                                    RVALUE_CONTEXT_NT'"This [provoke] no reaction." ( a )'
                                                        CONSTANT_NT'"This [provoke] no reaction." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'asking it about is an action applying to one thing and one t'
                            VERB_NT'is'
                            PROPER_NOUN_NT'asking it about'
                            PROPER_NOUN_NT'applying to one thing and one topic'
                        SENTENCE_NT'the asking it about action translates into i6 as Ask'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'asking it about action'
                            PROPER_NOUN_NT'Ask'
                        SENTENCE_NT'the specification of the asking it about action is The Stand'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the asking it about action'
                                PROPER_NOUN_NT'asking it about action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules do
                            not include any systematic way to hand'
                        RULE_NT'report an actor asking something about ( this is the block a'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "[There] [are] no reply." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[There] [are] no reply." ( a )'
                                                INVOCATION_NT'"[There] [are] no reply." ( a )'
                                                    RVALUE_CONTEXT_NT'"[There] [are] no reply." ( a )'
                                                        CONSTANT_NT'"[There] [are] no reply." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'asking it for is an action applying to two things'
                            VERB_NT'is'
                            PROPER_NOUN_NT'asking it for'
                            PROPER_NOUN_NT'applying to two things'
                        SENTENCE_NT'the asking it for action translates into i6 as AskFor'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'asking it for action'
                            PROPER_NOUN_NT'AskFor'
                        SENTENCE_NT'the specification of the asking it for action is The Standar'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the asking it for action'
                                PROPER_NOUN_NT'asking it for action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules do
                            not include any systematic way to hand'
                        RULE_NT'check an actor asking something for ( this is the asking you'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the noun and the actor is the player'
                                        INVOCATION_NT'if the actor is the noun and the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the noun and the actor is the player'
                                                LOGICAL_AND_NT'actor is the noun and the actor is the player'
                                                    TEST_PROPOSITION_NT'actor is the noun'(test: [ is('actor', 'the noun') ])
                                                    TEST_PROPOSITION_NT'the actor is the player'(test: [ is('the actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'try taking inventory'
                                            INVOCATION_NT'try taking inventory'
                                                RVALUE_CONTEXT_NT'taking inventory'
                                                    CONSTANT_NT'taking inventory'-action
                                        CODE_BLOCK_NT
                        RULE_NT'check an actor asking something for ( this is the translate '
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'convert to request of the noun to perform giving it to actio'
                                    INVOCATION_NT'convert to request of the noun to perform giving it to actio'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                        RVALUE_CONTEXT_NT'giving it to action'
                                            CONSTANT_NT'giving it to action'-action name
                                        RVALUE_CONTEXT_NT'second noun'
                                            NONLOCAL_VARIABLE_NT'second noun'('second noun'(var)[object])
                                        RVALUE_CONTEXT_NT'actor'
                                            NONLOCAL_VARIABLE_NT'actor'('actor'(var)[person])
                    HEADING_NT'section 7 - standard actions which are checked but then do n' (level 5)
                        SENTENCE_NT'waiting is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'waiting'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the waiting action translates into i6 as Wait'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'waiting action'
                            PROPER_NOUN_NT'Wait'
                        SENTENCE_NT'the specification of the waiting action is The inaction acti'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the waiting action'
                                PROPER_NOUN_NT'waiting action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The inaction action: where would
                            we be without waiting? Wait'
                        RULE_NT'report an actor waiting ( this is the standard report waitin'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the prior named object is nothing'
                                                    CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                CODE_BLOCK_NT'say "Time [pass]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Time [pass]." ( a )'
                                                        INVOCATION_NT'"Time [pass]." ( a )'
                                                            RVALUE_CONTEXT_NT'"Time [pass]." ( a )'
                                                                CONSTANT_NT'"Time [pass]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [wait]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [wait]." ( b )'
                                                INVOCATION_NT'"[The actor] [wait]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [wait]." ( b )'
                                                        CONSTANT_NT'"[The actor] [wait]." ( b )'-text
                        SENTENCE_NT'touching is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'touching'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the touching action translates into i6 as Touch'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'touching action'
                            PROPER_NOUN_NT'Touch'
                        SENTENCE_NT'the specification of the touching action is Touching is just'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the touching action'
                                PROPER_NOUN_NT'touching action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Touching is just that, touching
                            something without applying p'
                        RULE_NT'report an actor touching ( this is the report touching yours'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is the actor'
                                        INVOCATION_NT'if the noun is the actor'
                                            CONDITION_CONTEXT_NT'noun is the actor'
                                                TEST_PROPOSITION_NT'noun is the actor'(test: [ is('noun', 'the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the action is not silent'
                                                        INVOCATION_NT'if the action is not silent'
                                                            CONDITION_CONTEXT_NT'action is not silent'
                                                                TEST_VALUE_NT'action is not silent'
                                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                        INVOCATION_LIST_NT'action is not silent'
                                                                            INVOCATION_NT'action is not silent'
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[We] [achieve] nothing by this." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[We] [achieve] nothing by this." ( a )'
                                                                INVOCATION_NT'"[We] [achieve] nothing by this." ( a )'
                                                                    RVALUE_CONTEXT_NT'"[We] [achieve] nothing by this." ( a )'
                                                                        CONSTANT_NT'"[We] [achieve] nothing by this." ( a )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT'say "[The actor] [touch] [themselves]." ( b )'
                                                    INVOCATION_LIST_SAY_NT'"[The actor] [touch] [themselves]." ( b )'
                                                        INVOCATION_NT'"[The actor] [touch] [themselves]." ( b )'
                                                            RVALUE_CONTEXT_NT'"[The actor] [touch] [themselves]." ( b )'
                                                                CONSTANT_NT'"[The actor] [touch] [themselves]." ( b )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'report an actor touching ( this is the report touching other'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a person'
                                        INVOCATION_NT'if the noun is a person'
                                            CONDITION_CONTEXT_NT'noun is a person'
                                                TEST_PROPOSITION_NT'noun is a person'(test: [ kind=person('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the action is not silent'
                                                        INVOCATION_NT'if the action is not silent'
                                                            CONDITION_CONTEXT_NT'action is not silent'
                                                                TEST_VALUE_NT'action is not silent'
                                                                    PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                        INVOCATION_LIST_NT'action is not silent'
                                                                            INVOCATION_NT'action is not silent'
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[The noun] [might not like] that." ( a )'
                                                            INVOCATION_LIST_SAY_NT'"[The noun] [might not like] that." ( a )'
                                                                INVOCATION_NT'"[The noun] [might not like] that." ( a )'
                                                                    RVALUE_CONTEXT_NT'"[The noun] [might not like] that." ( a )'
                                                                        CONSTANT_NT'"[The noun] [might not like] that." ( a )'-text
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the noun is the player'
                                                        INVOCATION_NT'if the noun is the player'
                                                            CONDITION_CONTEXT_NT'noun is the player'
                                                                TEST_PROPOSITION_NT'noun is the player'(test: [ is('noun', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "[The actor] [touch] [us]." ( b )'
                                                            INVOCATION_LIST_SAY_NT'"[The actor] [touch] [us]." ( b )'
                                                                INVOCATION_NT'"[The actor] [touch] [us]." ( b )'
                                                                    RVALUE_CONTEXT_NT'"[The actor] [touch] [us]." ( b )'
                                                                        CONSTANT_NT'"[The actor] [touch] [us]." ( b )'-text
                                                    CODE_BLOCK_NT'otherwise'
                                                        CODE_BLOCK_NT'say "[The actor] [touch] [the noun]." ( c )'
                                                            INVOCATION_LIST_SAY_NT'"[The actor] [touch] [the noun]." ( c )'
                                                                INVOCATION_NT'"[The actor] [touch] [the noun]." ( c )'
                                                                    RVALUE_CONTEXT_NT'"[The actor] [touch] [the noun]." ( c )'
                                                                        CONSTANT_NT'"[The actor] [touch] [the noun]." ( c )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'continue the action'
                                    INVOCATION_NT'continue the action'
                        RULE_NT'report an actor touching ( this is the report touching thing'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [feel] nothing unexpected." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [feel] nothing unexpected." ( a )'
                                                        INVOCATION_NT'"[We] [feel] nothing unexpected." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [feel] nothing unexpected." ( a )'
                                                                CONSTANT_NT'"[We] [feel] nothing unexpected." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [touch] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [touch] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [touch] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [touch] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [touch] [the noun]." ( b )'-text
                        SENTENCE_NT'waving is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'waving'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the waving action translates into i6 as Wave'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'waving action'
                            PROPER_NOUN_NT'Wave'
                        SENTENCE_NT'the specification of the waving action is Waving in this sen'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the waving action'
                                PROPER_NOUN_NT'waving action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Waving in this sense is like
                            waving a sceptre: the item to b'
                        RULE_NT'check an actor waving ( this is the can't wave what's not he'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is not the holder of the noun'
                                        INVOCATION_NT'if the actor is not the holder of the noun'
                                            CONDITION_CONTEXT_NT'actor is not the holder of the noun'
                                                TEST_PROPOSITION_NT'actor is not the holder of the noun'(test: [ NOT[ is('actor', 'the holder of the noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "But [we] [aren't] holding [regarding the noun][those]."'
                                                    INVOCATION_LIST_SAY_NT'"But [we] [aren't] holding [regarding the noun][those]." ( a'
                                                        INVOCATION_NT'"But [we] [aren't] holding [regarding the noun][those]." ( a'
                                                            RVALUE_CONTEXT_NT'"But [we] [aren't] holding [regarding the noun][those]." ( a'
                                                                CONSTANT_NT'"But [we] [aren't] holding [regarding the noun][those]." ( a'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor waving ( this is the report waving things ru'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [wave] [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [wave] [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [wave] [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [wave] [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [wave] [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [wave] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [wave] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [wave] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [wave] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [wave] [the noun]." ( b )'-text
                        SENTENCE_NT'pulling is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'pulling'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the pulling action translates into i6 as Pull'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'pulling action'
                            PROPER_NOUN_NT'Pull'
                        SENTENCE_NT'the specification of the pulling action is Pulling is the ac'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the pulling action'
                                PROPER_NOUN_NT'pulling action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Pulling is the act of pulling
                            something not grossly larger t'
                        RULE_NT'check an actor pulling ( this is the can't pull what's fixed'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is fixed in place'
                                        INVOCATION_NT'if the noun is fixed in place'
                                            CONDITION_CONTEXT_NT'noun is fixed in place'
                                                TEST_PROPOSITION_NT'noun is fixed in place'(test: [ A65'fixed in place'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They] [are] fixed in place." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They] [are] fixed in place." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pulling ( this is the can't pull scenery rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is scenery'
                                        INVOCATION_NT'if the noun is scenery'
                                            CONDITION_CONTEXT_NT'noun is scenery'
                                                TEST_PROPOSITION_NT'noun is scenery'(test: [ A67'scenery'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [are] unable to." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [are] unable to." ( a )'
                                                        INVOCATION_NT'"[We] [are] unable to." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [are] unable to." ( a )'
                                                                CONSTANT_NT'"[We] [are] unable to." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pulling ( this is the can't pull people rule '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a person'
                                        INVOCATION_NT'if the noun is a person'
                                            CONDITION_CONTEXT_NT'noun is a person'
                                                TEST_PROPOSITION_NT'noun is a person'(test: [ kind=person('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [might not like] that." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [might not like] that." ( a )'
                                                        INVOCATION_NT'"[The noun] [might not like] that." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [might not like] that." ( a )'
                                                                CONSTANT_NT'"[The noun] [might not like] that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor pulling ( this is the report pulling rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the prior named object is nothing'
                                                    CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                CODE_BLOCK_NT'say "Nothing obvious [happen]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Nothing obvious [happen]." ( a )'
                                                        INVOCATION_NT'"Nothing obvious [happen]." ( a )'
                                                            RVALUE_CONTEXT_NT'"Nothing obvious [happen]." ( a )'
                                                                CONSTANT_NT'"Nothing obvious [happen]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [pull] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [pull] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [pull] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [pull] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [pull] [the noun]." ( b )'-text
                        SENTENCE_NT'pushing is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'pushing'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the pushing action translates into i6 as Push'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'pushing action'
                            PROPER_NOUN_NT'Push'
                        SENTENCE_NT'the specification of the pushing action is Pushing is the ac'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the pushing action'
                                PROPER_NOUN_NT'pushing action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Pushing is the act of pushing
                            something not grossly larger t'
                        RULE_NT'check an actor pushing something ( this is the can't push wh'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is fixed in place'
                                        INVOCATION_NT'if the noun is fixed in place'
                                            CONDITION_CONTEXT_NT'noun is fixed in place'
                                                TEST_PROPOSITION_NT'noun is fixed in place'(test: [ A65'fixed in place'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They] [are] fixed in place." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They] [are] fixed in place." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pushing something ( this is the can't push sc'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is scenery'
                                        INVOCATION_NT'if the noun is scenery'
                                            CONDITION_CONTEXT_NT'noun is scenery'
                                                TEST_PROPOSITION_NT'noun is scenery'(test: [ A67'scenery'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [are] unable to." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [are] unable to." ( a )'
                                                        INVOCATION_NT'"[We] [are] unable to." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [are] unable to." ( a )'
                                                                CONSTANT_NT'"[We] [are] unable to." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pushing something ( this is the can't push pe'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a person'
                                        INVOCATION_NT'if the noun is a person'
                                            CONDITION_CONTEXT_NT'noun is a person'
                                                TEST_PROPOSITION_NT'noun is a person'(test: [ kind=person('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [might not like] that." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [might not like] that." ( a )'
                                                        INVOCATION_NT'"[The noun] [might not like] that." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [might not like] that." ( a )'
                                                                CONSTANT_NT'"[The noun] [might not like] that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor pushing something ( this is the report pushi'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the prior named object is nothing'
                                                    CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                CODE_BLOCK_NT'say "Nothing obvious [happen]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Nothing obvious [happen]." ( a )'
                                                        INVOCATION_NT'"Nothing obvious [happen]." ( a )'
                                                            RVALUE_CONTEXT_NT'"Nothing obvious [happen]." ( a )'
                                                                CONSTANT_NT'"Nothing obvious [happen]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [push] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [push] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [push] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [push] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [push] [the noun]." ( b )'-text
                        SENTENCE_NT'turning is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'turning'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the turning action translates into i6 as Turn'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'turning action'
                            PROPER_NOUN_NT'Turn'
                        SENTENCE_NT'the specification of the turning action is Turning is the ac'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the turning action'
                                PROPER_NOUN_NT'turning action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Turning is the act of rotating
                            something - say, a dial.In '
                        RULE_NT'check an actor turning ( this is the can't turn what's fixed'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is fixed in place'
                                        INVOCATION_NT'if the noun is fixed in place'
                                            CONDITION_CONTEXT_NT'noun is fixed in place'
                                                TEST_PROPOSITION_NT'noun is fixed in place'(test: [ A65'fixed in place'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They] [are] fixed in place." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They] [are] fixed in place." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They] [are] fixed in place." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor turning ( this is the can't turn scenery rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is scenery'
                                        INVOCATION_NT'if the noun is scenery'
                                            CONDITION_CONTEXT_NT'noun is scenery'
                                                TEST_PROPOSITION_NT'noun is scenery'(test: [ A67'scenery'('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [are] unable to." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [are] unable to." ( a )'
                                                        INVOCATION_NT'"[We] [are] unable to." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [are] unable to." ( a )'
                                                                CONSTANT_NT'"[We] [are] unable to." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor turning ( this is the can't turn people rule '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a person'
                                        INVOCATION_NT'if the noun is a person'
                                            CONDITION_CONTEXT_NT'noun is a person'
                                                TEST_PROPOSITION_NT'noun is a person'(test: [ kind=person('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [might not like] that." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [might not like] that." ( a )'
                                                        INVOCATION_NT'"[The noun] [might not like] that." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [might not like] that." ( a )'
                                                                CONSTANT_NT'"[The noun] [might not like] that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor turning ( this is the report turning rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the prior named object is nothing'
                                                    CONDITION_CONTEXT_NT'the prior named object is nothing'
                                                CODE_BLOCK_NT'say "Nothing obvious [happen]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"Nothing obvious [happen]." ( a )'
                                                        INVOCATION_NT'"Nothing obvious [happen]." ( a )'
                                                            RVALUE_CONTEXT_NT'"Nothing obvious [happen]." ( a )'
                                                                CONSTANT_NT'"Nothing obvious [happen]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [turn] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [turn] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [turn] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [turn] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [turn] [the noun]." ( b )'-text
                        SENTENCE_NT'pushing it to is an action applying to one thing and one vis'
                            VERB_NT'is'
                            PROPER_NOUN_NT'pushing it to'
                            PROPER_NOUN_NT'applying to one thing and one visible thing'
                        SENTENCE_NT'the pushing it to action translates into i6 as PushDir'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'pushing it to action'
                            PROPER_NOUN_NT'PushDir'
                        SENTENCE_NT'the specification of the pushing it to action is This action'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the pushing it to action'
                                PROPER_NOUN_NT'pushing it to action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'This action covers pushing
                            a large object, not being carried'
                        RULE_NT'check an actor pushing something to ( this is the can't push'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not pushable between rooms'
                                        INVOCATION_NT'if the noun is not pushable between rooms'
                                            CONDITION_CONTEXT_NT'noun is not pushable between rooms'
                                                TEST_PROPOSITION_NT'noun is not pushable between rooms'(test: [ NOT[ A69'pushable between rooms'('noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [cannot] be pushed from place to place." ( a'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [cannot] be pushed from place to place." ( a )'
                                                        INVOCATION_NT'"[The noun] [cannot] be pushed from place to place." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [cannot] be pushed from place to place." ( a )'
                                                                CONSTANT_NT'"[The noun] [cannot] be pushed from place to place." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pushing something to ( this is the can't push'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not a direction'
                                        INVOCATION_NT'if the second noun is not a direction'
                                            CONDITION_CONTEXT_NT'second noun is not a direction'
                                                TEST_PROPOSITION_NT'second noun is not a direction'(test: [ NOT[ kind=direction('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[regarding the noun][They] [aren't] a direction." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[regarding the noun][They] [aren't] a direction." ( a )'
                                                        INVOCATION_NT'"[regarding the noun][They] [aren't] a direction." ( a )'
                                                            RVALUE_CONTEXT_NT'"[regarding the noun][They] [aren't] a direction." ( a )'
                                                                CONSTANT_NT'"[regarding the noun][They] [aren't] a direction." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pushing something to ( this is the can't push'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is up or the second noun is down'
                                        INVOCATION_NT'if the second noun is up or the second noun is down'
                                            CONDITION_CONTEXT_NT'second noun is up or the second noun is down'
                                                LOGICAL_OR_NT'second noun is up or the second noun is down'
                                                    TEST_PROPOSITION_NT'second noun is up'(test: [ is('second noun', 'up') ])
                                                    TEST_PROPOSITION_NT'the second noun is down'(test: [ is('the second noun', 'down') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [cannot] be pushed up or down." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [cannot] be pushed up or down." ( a )'
                                                        INVOCATION_NT'"[The noun] [cannot] be pushed up or down." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [cannot] be pushed up or down." ( a )'
                                                                CONSTANT_NT'"[The noun] [cannot] be pushed up or down." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pushing something to ( this is the can't push'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun encloses the actor'
                                        INVOCATION_NT'if the noun encloses the actor'
                                            CONDITION_CONTEXT_NT'noun encloses the actor'
                                                TEST_PROPOSITION_NT'noun encloses the actor'(test: [ encloses('noun', 'the actor') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [cannot] be pushed from here." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [cannot] be pushed from here." ( a )'
                                                        INVOCATION_NT'"[The noun] [cannot] be pushed from here." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [cannot] be pushed from here." ( a )'
                                                                CONSTANT_NT'"[The noun] [cannot] be pushed from here." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'check an actor pushing something to ( this is the standard p'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'convert to special going-with-push action'
                                    INVOCATION_NT'convert to special going-with-push action'
                        RULE_NT'check an actor pushing something to ( this is the block push'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[The noun] [cannot] be pushed from place to place." ( a'
                                            INVOCATION_LIST_SAY_NT'"[The noun] [cannot] be pushed from place to place." ( a )'
                                                INVOCATION_NT'"[The noun] [cannot] be pushed from place to place." ( a )'
                                                    RVALUE_CONTEXT_NT'"[The noun] [cannot] be pushed from place to place." ( a )'
                                                        CONSTANT_NT'"[The noun] [cannot] be pushed from place to place." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'squeezing is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'squeezing'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the squeezing action translates into i6 as Squeeze'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'squeezing action'
                            PROPER_NOUN_NT'Squeeze'
                        SENTENCE_NT'the specification of the squeezing action is Squeezing is an'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the squeezing action'
                                PROPER_NOUN_NT'squeezing action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'Squeezing is an action which
                            can conveniently vary from sque'
                        RULE_NT'check an actor squeezing ( this is the innuendo about squeez'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a person'
                                        INVOCATION_NT'if the noun is a person'
                                            CONDITION_CONTEXT_NT'noun is a person'
                                                TEST_PROPOSITION_NT'noun is a person'(test: [ kind=person('noun') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [might not like] that." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [might not like] that." ( a )'
                                                        INVOCATION_NT'"[The noun] [might not like] that." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [might not like] that." ( a )'
                                                                CONSTANT_NT'"[The noun] [might not like] that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor squeezing ( this is the report squeezing rul'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [achieve] nothing by this." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [achieve] nothing by this." ( a )'
                                                        INVOCATION_NT'"[We] [achieve] nothing by this." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [achieve] nothing by this." ( a )'
                                                                CONSTANT_NT'"[We] [achieve] nothing by this." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [squeeze] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [squeeze] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [squeeze] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [squeeze] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [squeeze] [the noun]." ( b )'-text
                    HEADING_NT'section 8 - standard actions which always do nothing unless ' (level 5)
                        SENTENCE_NT'saying yes is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'saying yes'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the saying yes action translates into i6 as Yes'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'saying yes action'
                            PROPER_NOUN_NT'Yes'
                        SENTENCE_NT'the specification of the saying yes action is The Standard R'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the saying yes action'
                                PROPER_NOUN_NT'saying yes action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor saying yes ( this is the block saying yes rul'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "That was a rhetorical question." ( a )'
                                            INVOCATION_LIST_SAY_NT'"That was a rhetorical question." ( a )'
                                                INVOCATION_NT'"That was a rhetorical question." ( a )'
                                                    RVALUE_CONTEXT_NT'"That was a rhetorical question." ( a )'
                                                        CONSTANT_NT'"That was a rhetorical question." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'saying no is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'saying no'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the saying no action translates into i6 as No'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'saying no action'
                            PROPER_NOUN_NT'No'
                        SENTENCE_NT'the specification of the saying no action is The Standard Ru'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the saying no action'
                                PROPER_NOUN_NT'saying no action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor saying no ( this is the block saying no rule '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "That was a rhetorical question." ( a )'
                                            INVOCATION_LIST_SAY_NT'"That was a rhetorical question." ( a )'
                                                INVOCATION_NT'"That was a rhetorical question." ( a )'
                                                    RVALUE_CONTEXT_NT'"That was a rhetorical question." ( a )'
                                                        CONSTANT_NT'"That was a rhetorical question." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'burning is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'burning'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the burning action translates into i6 as Burn'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'burning action'
                            PROPER_NOUN_NT'Burn'
                        SENTENCE_NT'the specification of the burning action is The Standard Rule'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the burning action'
                                PROPER_NOUN_NT'burning action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor burning ( this is the block burning rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "This dangerous act [would achieve] little." ( a )'
                                            INVOCATION_LIST_SAY_NT'"This dangerous act [would achieve] little." ( a )'
                                                INVOCATION_NT'"This dangerous act [would achieve] little." ( a )'
                                                    RVALUE_CONTEXT_NT'"This dangerous act [would achieve] little." ( a )'
                                                        CONSTANT_NT'"This dangerous act [would achieve] little." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'waking up is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'waking up'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the waking up action translates into i6 as Wake'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'waking up action'
                            PROPER_NOUN_NT'Wake'
                        SENTENCE_NT'the specification of the waking up action is The Standard Ru'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the waking up action'
                                PROPER_NOUN_NT'waking up action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor waking up ( this is the block waking up rule '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "The dreadful truth [are], this [are not] a dream." ( a '
                                            INVOCATION_LIST_SAY_NT'"The dreadful truth [are], this [are not] a dream." ( a )'
                                                INVOCATION_NT'"The dreadful truth [are], this [are not] a dream." ( a )'
                                                    RVALUE_CONTEXT_NT'"The dreadful truth [are], this [are not] a dream." ( a )'
                                                        CONSTANT_NT'"The dreadful truth [are], this [are not] a dream." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'thinking is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'thinking'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the thinking action translates into i6 as Think'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'thinking action'
                            PROPER_NOUN_NT'Think'
                        SENTENCE_NT'the specification of the thinking action is The Standard Rul'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the thinking action'
                                PROPER_NOUN_NT'thinking action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor thinking ( this is the block thinking rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "What a good idea." ( a )'
                                            INVOCATION_LIST_SAY_NT'"What a good idea." ( a )'
                                                INVOCATION_NT'"What a good idea." ( a )'
                                                    RVALUE_CONTEXT_NT'"What a good idea." ( a )'
                                                        CONSTANT_NT'"What a good idea." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'smelling is an action applying to nothing or one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'smelling'
                            PROPER_NOUN_NT'applying to nothing or one thing'
                        SENTENCE_NT'the smelling action translates into i6 as Smell'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'smelling action'
                            PROPER_NOUN_NT'Smell'
                        SENTENCE_NT'the specification of the smelling action is The Standard Rul'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the smelling action'
                                PROPER_NOUN_NT'smelling action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'report an actor smelling ( this is the report smelling rule '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [smell] nothing unexpected." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [smell] nothing unexpected." ( a )'
                                                        INVOCATION_NT'"[We] [smell] nothing unexpected." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [smell] nothing unexpected." ( a )'
                                                                CONSTANT_NT'"[We] [smell] nothing unexpected." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [sniff]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [sniff]." ( b )'
                                                INVOCATION_NT'"[The actor] [sniff]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [sniff]." ( b )'
                                                        CONSTANT_NT'"[The actor] [sniff]." ( b )'-text
                        SENTENCE_NT'listening to is an action applying to nothing or one thing a'
                            VERB_NT'is'
                            PROPER_NOUN_NT'listening to'
                            PROPER_NOUN_NT'applying to nothing or one thing and abbreviable'
                        SENTENCE_NT'the listening to action translates into i6 as Listen'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'listening to action'
                            PROPER_NOUN_NT'Listen'
                        SENTENCE_NT'the specification of the listening to action is The Standard'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the listening to action'
                                PROPER_NOUN_NT'listening to action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'report an actor listening to ( this is the report listening '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [hear] nothing unexpected." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [hear] nothing unexpected." ( a )'
                                                        INVOCATION_NT'"[We] [hear] nothing unexpected." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [hear] nothing unexpected." ( a )'
                                                                CONSTANT_NT'"[We] [hear] nothing unexpected." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [listen]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [listen]." ( b )'
                                                INVOCATION_NT'"[The actor] [listen]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [listen]." ( b )'
                                                        CONSTANT_NT'"[The actor] [listen]." ( b )'-text
                        SENTENCE_NT'tasting is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'tasting'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the tasting action translates into i6 as Taste'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'tasting action'
                            PROPER_NOUN_NT'Taste'
                        SENTENCE_NT'the specification of the tasting action is The Standard Rule'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the tasting action'
                                PROPER_NOUN_NT'tasting action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'report an actor tasting ( this is the report tasting rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [taste] nothing unexpected." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [taste] nothing unexpected." ( a )'
                                                        INVOCATION_NT'"[We] [taste] nothing unexpected." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [taste] nothing unexpected." ( a )'
                                                                CONSTANT_NT'"[We] [taste] nothing unexpected." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [taste] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [taste] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [taste] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [taste] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [taste] [the noun]." ( b )'-text
                        SENTENCE_NT'cutting is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'cutting'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the cutting action translates into i6 as Cut'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'cutting action'
                            PROPER_NOUN_NT'Cut'
                        SENTENCE_NT'the specification of the cutting action is The Standard Rule'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the cutting action'
                                PROPER_NOUN_NT'cutting action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor cutting ( this is the block cutting rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "Cutting [regarding the noun][them] up [would achieve] l'
                                            INVOCATION_LIST_SAY_NT'"Cutting [regarding the noun][them] up [would achieve] littl'
                                                INVOCATION_NT'"Cutting [regarding the noun][them] up [would achieve] littl'
                                                    RVALUE_CONTEXT_NT'"Cutting [regarding the noun][them] up [would achieve] littl'
                                                        CONSTANT_NT'"Cutting [regarding the noun][them] up [would achieve] littl'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'jumping is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'jumping'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the jumping action translates into i6 as Jump'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'jumping action'
                            PROPER_NOUN_NT'Jump'
                        SENTENCE_NT'the specification of the jumping action is The Standard Rule'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the jumping action'
                                PROPER_NOUN_NT'jumping action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'report an actor jumping ( this is the report jumping rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [jump] on the spot." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [jump] on the spot." ( a )'
                                                        INVOCATION_NT'"[We] [jump] on the spot." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [jump] on the spot." ( a )'
                                                                CONSTANT_NT'"[We] [jump] on the spot." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [jump] on the spot." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [jump] on the spot." ( b )'
                                                INVOCATION_NT'"[The actor] [jump] on the spot." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [jump] on the spot." ( b )'
                                                        CONSTANT_NT'"[The actor] [jump] on the spot." ( b )'-text
                        SENTENCE_NT'tying it to is an action applying to two things'
                            VERB_NT'is'
                            PROPER_NOUN_NT'tying it to'
                            PROPER_NOUN_NT'applying to two things'
                        SENTENCE_NT'the tying it to action translates into i6 as Tie'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'tying it to action'
                            PROPER_NOUN_NT'Tie'
                        SENTENCE_NT'the specification of the tying it to action is The Standard '
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the tying it to action'
                                PROPER_NOUN_NT'tying it to action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor tying something to ( this is the block tying '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [would achieve] nothing by this." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [would achieve] nothing by this." ( a )'
                                                INVOCATION_NT'"[We] [would achieve] nothing by this." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [would achieve] nothing by this." ( a )'
                                                        CONSTANT_NT'"[We] [would achieve] nothing by this." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'drinking is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'drinking'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the drinking action translates into i6 as Drink'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'drinking action'
                            PROPER_NOUN_NT'Drink'
                        SENTENCE_NT'the specification of the drinking action is The Standard Rul'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the drinking action'
                                PROPER_NOUN_NT'drinking action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor drinking ( this is the block drinking rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "[There's] nothing suitable to drink here." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[There's] nothing suitable to drink here." ( a )'
                                                INVOCATION_NT'"[There's] nothing suitable to drink here." ( a )'
                                                    RVALUE_CONTEXT_NT'"[There's] nothing suitable to drink here." ( a )'
                                                        CONSTANT_NT'"[There's] nothing suitable to drink here." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'saying sorry is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'saying sorry'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the saying sorry action translates into i6 as Sorry'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'saying sorry action'
                            PROPER_NOUN_NT'Sorry'
                        SENTENCE_NT'the specification of the saying sorry action is The Standard'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the saying sorry action'
                                PROPER_NOUN_NT'saying sorry action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor saying sorry ( this is the block saying sorry'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "Oh, don't [if American dialect option is
                                        active]apologi'
                                            INVOCATION_LIST_SAY_NT'"Oh, don't [if American dialect option is
                                            active]apologize[o'
                                                INVOCATION_NT'"Oh, don't [if American dialect option is
                                                active]apologize[o'
                                                    RVALUE_CONTEXT_NT'"Oh, don't [if American dialect option is
                                                    active]apologize[o'
                                                        CONSTANT_NT'"Oh, don't [if American dialect option is
                                                        active]apologize[o'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'swinging is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'swinging'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the swinging action translates into i6 as Swing'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'swinging action'
                            PROPER_NOUN_NT'Swing'
                        SENTENCE_NT'the specification of the swinging action is The Standard Rul'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the swinging action'
                                PROPER_NOUN_NT'swinging action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor swinging ( this is the block swinging rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "[There's] nothing sensible to swing here." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[There's] nothing sensible to swing here." ( a )'
                                                INVOCATION_NT'"[There's] nothing sensible to swing here." ( a )'
                                                    RVALUE_CONTEXT_NT'"[There's] nothing sensible to swing here." ( a )'
                                                        CONSTANT_NT'"[There's] nothing sensible to swing here." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'rubbing is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'rubbing'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the rubbing action translates into i6 as Rub'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'rubbing action'
                            PROPER_NOUN_NT'Rub'
                        SENTENCE_NT'the specification of the rubbing action is The Standard Rule'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the rubbing action'
                                PROPER_NOUN_NT'rubbing action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor rubbing ( this is the can't rub another perso'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is a person who is not the actor'
                                        INVOCATION_NT'if the noun is a person who is not the actor'
                                            CONDITION_CONTEXT_NT'noun is a person who is not the actor'
                                                TEST_PROPOSITION_NT'noun is a person who is not the actor'(test: [ kind=person('noun') ^ NOT[ is('noun', 'the actor') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the actor is the player'
                                                INVOCATION_NT'if the actor is the player'
                                                    CONDITION_CONTEXT_NT'actor is the player'
                                                        TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The noun] [might not like] that." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The noun] [might not like] that." ( a )'
                                                        INVOCATION_NT'"[The noun] [might not like] that." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The noun] [might not like] that." ( a )'
                                                                CONSTANT_NT'"[The noun] [might not like] that." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'report an actor rubbing ( this is the report rubbing rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [rub] [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [rub] [the noun]." ( a )'
                                                        INVOCATION_NT'"[We] [rub] [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [rub] [the noun]." ( a )'
                                                                CONSTANT_NT'"[We] [rub] [the noun]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [rub] [the noun]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [rub] [the noun]." ( b )'
                                                INVOCATION_NT'"[The actor] [rub] [the noun]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [rub] [the noun]." ( b )'
                                                        CONSTANT_NT'"[The actor] [rub] [the noun]." ( b )'-text
                        SENTENCE_NT'setting it to is an action applying to one thing and one top'
                            VERB_NT'is'
                            PROPER_NOUN_NT'setting it to'
                            PROPER_NOUN_NT'applying to one thing and one topic'
                        SENTENCE_NT'the setting it to action translates into i6 as SetTo'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'setting it to action'
                            PROPER_NOUN_NT'SetTo'
                        SENTENCE_NT'the specification of the setting it to action is The Standar'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the setting it to action'
                                PROPER_NOUN_NT'setting it to action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor setting something to ( this is the block sett'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "No, [we] [can't set] [regarding the noun][those] to any'
                                            INVOCATION_LIST_SAY_NT'"No, [we] [can't set] [regarding the noun][those] to anythin'
                                                INVOCATION_NT'"No, [we] [can't set] [regarding the noun][those] to anythin'
                                                    RVALUE_CONTEXT_NT'"No, [we] [can't set] [regarding the noun][those] to anythin'
                                                        CONSTANT_NT'"No, [we] [can't set] [regarding the noun][those] to anythin'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'waving hands is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'waving hands'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the waving hands action translates into i6 as WaveHands'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'waving hands action'
                            PROPER_NOUN_NT'WaveHands'
                        SENTENCE_NT'the specification of the waving hands action is The Standard'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the waving hands action'
                                PROPER_NOUN_NT'waving hands action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'report an actor waving hands ( this is the report waving han'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the action is not silent'
                                                INVOCATION_NT'if the action is not silent'
                                                    CONDITION_CONTEXT_NT'action is not silent'
                                                        TEST_VALUE_NT'action is not silent'
                                                            PHRASE_TO_DECIDE_VALUE_NT'action is not silent'
                                                                INVOCATION_LIST_NT'action is not silent'
                                                                    INVOCATION_NT'action is not silent'
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[We] [wave]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[We] [wave]." ( a )'
                                                        INVOCATION_NT'"[We] [wave]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[We] [wave]." ( a )'
                                                                CONSTANT_NT'"[We] [wave]." ( a )'-text
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "[The actor] [wave]." ( b )'
                                            INVOCATION_LIST_SAY_NT'"[The actor] [wave]." ( b )'
                                                INVOCATION_NT'"[The actor] [wave]." ( b )'
                                                    RVALUE_CONTEXT_NT'"[The actor] [wave]." ( b )'
                                                        CONSTANT_NT'"[The actor] [wave]." ( b )'-text
                        SENTENCE_NT'buying is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'buying'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the buying action translates into i6 as Buy'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'buying action'
                            PROPER_NOUN_NT'Buy'
                        SENTENCE_NT'the specification of the buying action is The Standard Rules'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the buying action'
                                PROPER_NOUN_NT'buying action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor buying ( this is the block buying rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the prior named object is nothing'
                                            CONDITION_CONTEXT_NT'the prior named object is nothing'
                                        CODE_BLOCK_NT'say "Nothing [are] on sale." ( a )'
                                            INVOCATION_LIST_SAY_NT'"Nothing [are] on sale." ( a )'
                                                INVOCATION_NT'"Nothing [are] on sale." ( a )'
                                                    RVALUE_CONTEXT_NT'"Nothing [are] on sale." ( a )'
                                                        CONSTANT_NT'"Nothing [are] on sale." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'climbing is an action applying to one thing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'climbing'
                            PROPER_NOUN_NT'applying to one thing'
                        SENTENCE_NT'the climbing action translates into i6 as Climb'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'climbing action'
                            PROPER_NOUN_NT'Climb'
                        SENTENCE_NT'the specification of the climbing action is The Standard Rul'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the climbing action'
                                PROPER_NOUN_NT'climbing action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor climbing ( this is the block climbing rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "Little [are] to be achieved by that." ( a )'
                                            INVOCATION_LIST_SAY_NT'"Little [are] to be achieved by that." ( a )'
                                                INVOCATION_NT'"Little [are] to be achieved by that." ( a )'
                                                    RVALUE_CONTEXT_NT'"Little [are] to be achieved by that." ( a )'
                                                        CONSTANT_NT'"Little [are] to be achieved by that." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                        SENTENCE_NT'sleeping is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'sleeping'
                            PROPER_NOUN_NT'applying to nothing'
                        SENTENCE_NT'the sleeping action translates into i6 as Sleep'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'sleeping action'
                            PROPER_NOUN_NT'Sleep'
                        SENTENCE_NT'the specification of the sleeping action is The Standard Rul'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of the sleeping action'
                                PROPER_NOUN_NT'sleeping action'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'The Standard Rules define this action in only a minimal way,'
                        RULE_NT'check an actor sleeping ( this is the block sleeping rule )'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the actor is the player'
                                        INVOCATION_NT'if the actor is the player'
                                            CONDITION_CONTEXT_NT'actor is the player'
                                                TEST_PROPOSITION_NT'actor is the player'(test: [ is('actor', 'the player') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT'say "[We] [aren't] feeling especially drowsy." ( a )'
                                            INVOCATION_LIST_SAY_NT'"[We] [aren't] feeling especially drowsy." ( a )'
                                                INVOCATION_NT'"[We] [aren't] feeling especially drowsy." ( a )'
                                                    RVALUE_CONTEXT_NT'"[We] [aren't] feeling especially drowsy." ( a )'
                                                        CONSTANT_NT'"[We] [aren't] feeling especially drowsy." ( a )'-text
                                INVOCATION_LIST_NT'stop the action'
                                    INVOCATION_NT'stop the action'
                    HEADING_NT'section 9 - standard actions which happen out of world' (level 5)
                        SENTENCE_NT'quitting the game is an action out of world and applying to '
                            VERB_NT'is'
                            PROPER_NOUN_NT'quitting the game'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the quitting the game action translates into i6 as Quit'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'quitting the game action'
                            PROPER_NOUN_NT'Quit'
                        SENTENCE_NT'the quit the game rule is listed in the carry out quitting t'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the quit the game rule'
                            PROPER_NOUN_NT'in the carry out quitting the game rulebook'
                        SENTENCE_NT'the quit the game rule translates into i6 as QUIT_THE_GAME_R'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'quit the game rule'
                            PROPER_NOUN_NT'QUIT_THE_GAME_R'
                                PROPER_NOUN_NT'"Are you sure you want to quit? " ( a )'
                        SENTENCE_NT'saving the game is an action out of world and applying to no'
                            VERB_NT'is'
                            PROPER_NOUN_NT'saving the game'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the saving the game action translates into i6 as Save'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'saving the game action'
                            PROPER_NOUN_NT'Save'
                        SENTENCE_NT'the save the game rule is listed in the carry out saving the'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the save the game rule'
                            PROPER_NOUN_NT'in the carry out saving the game rulebook'
                        SENTENCE_NT'the save the game rule translates into i6 as SAVE_THE_GAME_R'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'save the game rule'
                            PROPER_NOUN_NT'SAVE_THE_GAME_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"Save failed." ( a )'
                                    PROPER_NOUN_NT'"Ok." ( b )'
                        SENTENCE_NT'restoring the game is an action out of world and applying to'
                            VERB_NT'is'
                            PROPER_NOUN_NT'restoring the game'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the restoring the game action translates into i6 as Restore'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'restoring the game action'
                            PROPER_NOUN_NT'Restore'
                        SENTENCE_NT'the restore the game rule is listed in the carry out restori'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the restore the game rule'
                            PROPER_NOUN_NT'in the carry out restoring the game rulebook'
                        SENTENCE_NT'the restore the game rule translates into i6 as RESTORE_THE_'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'restore the game rule'
                            PROPER_NOUN_NT'RESTORE_THE_GAME_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"Restore failed." ( a )'
                                    PROPER_NOUN_NT'"Ok." ( b )'
                        SENTENCE_NT'restarting the game is an action out of world and applying t'
                            VERB_NT'is'
                            PROPER_NOUN_NT'restarting the game'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the restarting the game action translates into i6 as Restart'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'restarting the game action'
                            PROPER_NOUN_NT'Restart'
                        SENTENCE_NT'the restart the game rule is listed in the carry out restart'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the restart the game rule'
                            PROPER_NOUN_NT'in the carry out restarting the game rulebook'
                        SENTENCE_NT'the restart the game rule translates into i6 as RESTART_THE_'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'restart the game rule'
                            PROPER_NOUN_NT'RESTART_THE_GAME_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"Are you sure you want to restart? " ( a )'
                                    PROPER_NOUN_NT'"Failed." ( b )'
                        SENTENCE_NT'verifying the story file is an action out of world and apply'
                            VERB_NT'is'
                            PROPER_NOUN_NT'verifying the story file'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the verifying the story file action translates into i6 as Ve'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'verifying the story file action'
                            PROPER_NOUN_NT'Verify'
                        SENTENCE_NT'the verify the story file rule is listed in the carry out ve'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the verify the story file rule'
                            PROPER_NOUN_NT'in the carry out verifying the story file rulebook'
                        SENTENCE_NT'the verify the story file rule translates into i6 as VERIFY_'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'verify the story file rule'
                            PROPER_NOUN_NT'VERIFY_THE_STORY_FILE_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"The game file has verified as intact." ( a )'
                                    PROPER_NOUN_NT'"The game file did not verify as intact, and may be corrupt.'
                        SENTENCE_NT'switching the story transcript on is an action out of world '
                            VERB_NT'is'
                            PROPER_NOUN_NT'switching the story transcript on'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the switching the story transcript on action translates into'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switching the story transcript on action'
                            PROPER_NOUN_NT'ScriptOn'
                        SENTENCE_NT'the switch the story transcript on rule is listed in the car'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the switch the story transcript on rule'
                            PROPER_NOUN_NT'in the carry out switching the story transcript on rulebook'
                        SENTENCE_NT'the switch the story transcript on rule translates into i6 a'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switch the story transcript on rule'
                            PROPER_NOUN_NT'SWITCH_TRANSCRIPT_ON_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"Transcripting is already on." ( a )'
                                    AND_NT','
                                        PROPER_NOUN_NT'"Start of a transcript of" ( b )'
                                        PROPER_NOUN_NT'"Attempt to begin transcript failed." ( c )'
                        SENTENCE_NT'switching the story transcript off is an action out of world'
                            VERB_NT'is'
                            PROPER_NOUN_NT'switching the story transcript off'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the switching the story transcript off action translates int'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switching the story transcript off action'
                            PROPER_NOUN_NT'ScriptOff'
                        SENTENCE_NT'the switch the story transcript off rule is listed in the ca'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the switch the story transcript off rule'
                            PROPER_NOUN_NT'in the carry out switching the story transcript off rulebook'
                        SENTENCE_NT'the switch the story transcript off rule translates into i6 '
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switch the story transcript off rule'
                            PROPER_NOUN_NT'SWITCH_TRANSCRIPT_OFF_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"Transcripting is already off." ( a )'
                                    AND_NT','
                                        PROPER_NOUN_NT'"[line break]End of transcript." ( b )'
                                        PROPER_NOUN_NT'"Attempt to end transcript failed." ( c )'
                        SENTENCE_NT'requesting the story file version is an action out of world '
                            VERB_NT'is'
                            PROPER_NOUN_NT'requesting the story file version'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the requesting the story file version action translates into'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'requesting the story file version action'
                            PROPER_NOUN_NT'Version'
                        SENTENCE_NT'the announce the story file version rule is listed in the ca'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the announce the story file version rule'
                            PROPER_NOUN_NT'in the carry out requesting the story file version rulebook'
                        SENTENCE_NT'the announce the story file version rule translates into i6 '
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'announce the story file version rule'
                            PROPER_NOUN_NT'ANNOUNCE_STORY_FILE_VERSION_R'
                        SENTENCE_NT'requesting the score is an action out of world and applying '
                            VERB_NT'is'
                            PROPER_NOUN_NT'requesting the score'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the requesting the score action translates into i6 as Score'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'requesting the score action'
                            PROPER_NOUN_NT'Score'
                        SENTENCE_NT'the announce the score rule is listed in the carry out reque'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the announce the score rule'
                            PROPER_NOUN_NT'in the carry out requesting the score rulebook'
                        SENTENCE_NT'the announce the score rule translates into i6 as ANNOUNCE_S'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'announce the score rule'
                            PROPER_NOUN_NT'ANNOUNCE_SCORE_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"[if the story has ended]In that game you scored[otherwise]Y'
                                    AND_NT','
                                        PROPER_NOUN_NT'", earning you the rank of " ( b )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"[There] [are] no score in this story." ( c )'
                                            AND_NT','
                                                PROPER_NOUN_NT'"[bracket]Your score has just gone up by [number understood '
                                                PROPER_NOUN_NT'"[bracket]Your score has just gone down by [number understoo'
                        SENTENCE_NT'preferring abbreviated room descriptions is an action out of'
                            VERB_NT'is'
                            PROPER_NOUN_NT'preferring abbreviated room descriptions'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the preferring abbreviated room descriptions action translat'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'preferring abbreviated room descriptions action'
                            PROPER_NOUN_NT'LMode3'
                        SENTENCE_NT'the prefer abbreviated room descriptions rule is listed in t'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the prefer abbreviated room descriptions rule'
                            PROPER_NOUN_NT'in the carry out preferring abbreviated room descriptions ru'
                        SENTENCE_NT'the prefer abbreviated room descriptions rule translates int'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'prefer abbreviated room descriptions rule'
                            PROPER_NOUN_NT'PREFER_ABBREVIATED_R'
                        SENTENCE_NT'the standard report preferring abbreviated room descriptions'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard report preferring abbreviated room descriptions'
                            PROPER_NOUN_NT'in the report preferring abbreviated room descriptions ruleb'
                        SENTENCE_NT'the standard report preferring abbreviated room descriptions'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard report preferring abbreviated room descriptions rul'
                            PROPER_NOUN_NT'REP_PREFER_ABBREVIATED_R'
                                PROPER_NOUN_NT'" is now in its 'superbrief' mode, which always gives short '
                        SENTENCE_NT'preferring unabbreviated room descriptions is an action out '
                            VERB_NT'is'
                            PROPER_NOUN_NT'preferring unabbreviated room descriptions'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the preferring unabbreviated room descriptions action transl'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'preferring unabbreviated room descriptions action'
                            PROPER_NOUN_NT'LMode2'
                        SENTENCE_NT'the prefer unabbreviated room descriptions rule is listed in'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the prefer unabbreviated room descriptions rule'
                            PROPER_NOUN_NT'in the carry out preferring unabbreviated room descriptions '
                        SENTENCE_NT'the prefer unabbreviated room descriptions rule translates i'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'prefer unabbreviated room descriptions rule'
                            PROPER_NOUN_NT'PREFER_UNABBREVIATED_R'
                        SENTENCE_NT'the standard report preferring unabbreviated room descriptio'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard report preferring unabbreviated room descriptio'
                            PROPER_NOUN_NT'in the report preferring unabbreviated room descriptions rul'
                        SENTENCE_NT'the standard report preferring unabbreviated room descriptio'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard report preferring unabbreviated room descriptions r'
                            PROPER_NOUN_NT'REP_PREFER_UNABBREVIATED_R'
                                PROPER_NOUN_NT'" is now in its 'verbose' mode, which always gives long desc'
                        SENTENCE_NT'preferring sometimes abbreviated room descriptions is an act'
                            VERB_NT'is'
                            PROPER_NOUN_NT'preferring sometimes abbreviated room descriptions'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the preferring sometimes abbreviated room descriptions actio'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'preferring sometimes abbreviated room descriptions action'
                            PROPER_NOUN_NT'LMode1'
                        SENTENCE_NT'the prefer sometimes abbreviated room descriptions rule is l'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the prefer sometimes abbreviated room descriptions rule'
                            PROPER_NOUN_NT'in the carry out preferring sometimes abbreviated room descr'
                        SENTENCE_NT'the prefer sometimes abbreviated room descriptions rule tran'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'prefer sometimes abbreviated room descriptions rule'
                            PROPER_NOUN_NT'PREFER_SOMETIMES_ABBREVIATED_R'
                        SENTENCE_NT'the standard report preferring sometimes abbreviated room de'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard report preferring sometimes abbreviated room de'
                            PROPER_NOUN_NT'in the report preferring sometimes abbreviated room descript'
                        SENTENCE_NT'the standard report preferring sometimes abbreviated room de'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard report preferring sometimes abbreviated room descri'
                            PROPER_NOUN_NT'REP_PREFER_SOMETIMES_ABBR_R'
                                PROPER_NOUN_NT'" is now in its 'brief' printing mode, which gives long desc'
                        SENTENCE_NT'switching score notification on is an action out of world an'
                            VERB_NT'is'
                            PROPER_NOUN_NT'switching score notification on'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the switching score notification on action translates into i'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switching score notification on action'
                            PROPER_NOUN_NT'NotifyOn'
                        SENTENCE_NT'the switch score notification on rule is listed in the carry'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the switch score notification on rule'
                            PROPER_NOUN_NT'in the carry out switching score notification on rulebook'
                        SENTENCE_NT'the switch score notification on rule translates into i6 as '
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switch score notification on rule'
                            PROPER_NOUN_NT'SWITCH_SCORE_NOTIFY_ON_R'
                        SENTENCE_NT'the standard report switching score notification on rule is '
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard report switching score notification on rule'
                            PROPER_NOUN_NT'in the report switching score notification on rulebook'
                        SENTENCE_NT'the standard report switching score notification on rule tra'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard report switching score notification on rule'
                            PROPER_NOUN_NT'REP_SWITCH_NOTIFY_ON_R'
                                PROPER_NOUN_NT'"Score notification on." ( a )'
                        SENTENCE_NT'switching score notification off is an action out of world a'
                            VERB_NT'is'
                            PROPER_NOUN_NT'switching score notification off'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the switching score notification off action translates into '
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switching score notification off action'
                            PROPER_NOUN_NT'NotifyOff'
                        SENTENCE_NT'the switch score notification off rule is listed in the carr'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the switch score notification off rule'
                            PROPER_NOUN_NT'in the carry out switching score notification off rulebook'
                        SENTENCE_NT'the switch score notification off rule translates into i6 as'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'switch score notification off rule'
                            PROPER_NOUN_NT'SWITCH_SCORE_NOTIFY_OFF_R'
                        SENTENCE_NT'the standard report switching score notification off rule is'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the standard report switching score notification off rule'
                            PROPER_NOUN_NT'in the report switching score notification off rulebook'
                        SENTENCE_NT'the standard report switching score notification off rule tr'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'standard report switching score notification off rule'
                            PROPER_NOUN_NT'REP_SWITCH_NOTIFY_OFF_R'
                                PROPER_NOUN_NT'"Score notification off." ( a )'
                        SENTENCE_NT'requesting the pronoun meanings is an action out of world an'
                            VERB_NT'is'
                            PROPER_NOUN_NT'requesting the pronoun meanings'
                            PROPER_NOUN_NT'out of world and applying to nothing'
                        SENTENCE_NT'the requesting the pronoun meanings action translates into i'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'requesting the pronoun meanings action'
                            PROPER_NOUN_NT'Pronouns'
                        SENTENCE_NT'the announce the pronoun meanings rule is listed in the carr'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the announce the pronoun meanings rule'
                            PROPER_NOUN_NT'in the carry out requesting the pronoun meanings rulebook'
                        SENTENCE_NT'the announce the pronoun meanings rule translates into i6 as'
                            VERB_NT'translates into'
                            PROPER_NOUN_NT'announce the pronoun meanings rule'
                            PROPER_NOUN_NT'ANNOUNCE_PRONOUN_MEANINGS_R'
                                AND_NT','
                                    PROPER_NOUN_NT'"At the moment, " ( a )'
                                    AND_NT','
                                        PROPER_NOUN_NT'"means " ( b )'
                                        AND_NT','
                                            PROPER_NOUN_NT'"is unset" ( c )'
                                            PROPER_NOUN_NT'"no pronouns are known to the game." ( d )'
                HEADING_NT'part six - grammar' (level 3)
                    SENTENCE_NT'understand "take [things]" as taking'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"take [things]"'
                        PROPER_NOUN_NT'taking'
                    SENTENCE_NT'understand "take off [something]" as taking off'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"take off [something]"'
                        PROPER_NOUN_NT'taking off'
                    SENTENCE_NT'understand "take [something] off" as taking off'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"take [something] off"'
                        PROPER_NOUN_NT'taking off'
                    SENTENCE_NT'understand "take [things inside] from [something]" as removi'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"take [things inside] from [something]"'
                        PROPER_NOUN_NT'removing it from'
                    SENTENCE_NT'understand "take [things inside] off [something]" as removin'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"take [things inside] off [something]"'
                        PROPER_NOUN_NT'removing it from'
                    SENTENCE_NT'understand "take inventory" as taking inventory'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"take inventory"'
                        PROPER_NOUN_NT'taking inventory'
                    SENTENCE_NT'understand the commands carry and hold as take'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands carry and hold'
                        PROPER_NOUN_NT'take'
                    SENTENCE_NT'understand "get in/on" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"get in/on"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand "get out/off/down/up" as exiting'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"get out/off/down/up"'
                        PROPER_NOUN_NT'exiting'
                    SENTENCE_NT'understand "get [things]" as taking'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"get [things]"'
                        PROPER_NOUN_NT'taking'
                    SENTENCE_NT'understand "get in/into/on/onto [something]" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"get in/into/on/onto [something]"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand "get off/down [something]" as getting off'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"get off/down [something]"'
                        PROPER_NOUN_NT'getting off'
                    SENTENCE_NT'understand "get [things inside] from [something]" as removin'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"get [things inside] from [something]"'
                        PROPER_NOUN_NT'removing it from'
                    SENTENCE_NT'understand "pick up [things]" or "pick [things] up" as takin'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"pick up [things]" or "pick [things] up"'
                        PROPER_NOUN_NT'taking'
                    SENTENCE_NT'understand "stand" or "stand up" as exiting'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"stand" or "stand up"'
                        PROPER_NOUN_NT'exiting'
                    SENTENCE_NT'understand "stand on [something]" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"stand on [something]"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand "remove [something preferably held]" as taking of'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"remove [something preferably held]"'
                        PROPER_NOUN_NT'taking off'
                    SENTENCE_NT'understand "remove [things inside] from [something]" as remo'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"remove [things inside] from [something]"'
                        PROPER_NOUN_NT'removing it from'
                    SENTENCE_NT'understand "shed [something preferably held]" as taking off'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"shed [something preferably held]"'
                        PROPER_NOUN_NT'taking off'
                    SENTENCE_NT'understand the commands doff and disrobe as shed'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands doff and disrobe'
                        PROPER_NOUN_NT'shed'
                    SENTENCE_NT'understand "wear [something preferably held]" as wearing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"wear [something preferably held]"'
                        PROPER_NOUN_NT'wearing'
                    SENTENCE_NT'understand the command don as wear'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command don'
                        PROPER_NOUN_NT'wear'
                    SENTENCE_NT'understand "put [other things] in/inside/into [something]" a'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"put [other things] in/inside/into [something]"'
                        PROPER_NOUN_NT'inserting it into'
                    SENTENCE_NT'understand "put [other things] on/onto [something]" as putti'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"put [other things] on/onto [something]"'
                        PROPER_NOUN_NT'putting it on'
                    SENTENCE_NT'understand "put on [something preferably held]" as wearing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"put on [something preferably held]"'
                        PROPER_NOUN_NT'wearing'
                    SENTENCE_NT'understand "put [something preferably held] on" as wearing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"put [something preferably held] on"'
                        PROPER_NOUN_NT'wearing'
                    SENTENCE_NT'understand "put down [things preferably held]" or "put [thin'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"put down [things preferably held]" or "put [things preferab'
                        PROPER_NOUN_NT'dropping'
                    SENTENCE_NT'understand "insert [other things] in/into [something]" as in'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"insert [other things] in/into [something]"'
                        PROPER_NOUN_NT'inserting it into'
                    SENTENCE_NT'understand "drop [things preferably held]" as dropping'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"drop [things preferably held]"'
                        PROPER_NOUN_NT'dropping'
                    SENTENCE_NT'understand "drop [other things] in/into/down [something]" as'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"drop [other things] in/into/down [something]"'
                        PROPER_NOUN_NT'inserting it into'
                    SENTENCE_NT'understand "drop [other things] on/onto [something]" as putt'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"drop [other things] on/onto [something]"'
                        PROPER_NOUN_NT'putting it on'
                    SENTENCE_NT'understand "drop [something preferably held] at/against [som'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"drop [something preferably held] at/against [something]"'
                        PROPER_NOUN_NT'throwing it at'
                    SENTENCE_NT'understand the commands throw and discard as drop'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands throw and discard'
                        PROPER_NOUN_NT'drop'
                    SENTENCE_NT'understand "give [something preferably held] to [someone]" a'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"give [something preferably held] to [someone]"'
                        PROPER_NOUN_NT'giving it to'
                    SENTENCE_NT'understand "give [someone] [something preferably held]" as g'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"give [someone] [something preferably held]"'
                        PROPER_NOUN_NT'giving it to ( with nouns reversed )'
                    SENTENCE_NT'understand the commands pay and offer and feed as give'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands pay and offer and feed'
                        PROPER_NOUN_NT'give'
                    SENTENCE_NT'understand "show [someone] [something preferably held]" as s'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"show [someone] [something preferably held]"'
                        PROPER_NOUN_NT'showing it to ( with nouns reversed )'
                    SENTENCE_NT'understand "show [something preferably held] to [someone]" a'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"show [something preferably held] to [someone]"'
                        PROPER_NOUN_NT'showing it to'
                    SENTENCE_NT'understand the commands present and display as show'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands present and display'
                        PROPER_NOUN_NT'show'
                    SENTENCE_NT'understand "go" as going'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"go"'
                        PROPER_NOUN_NT'going'
                    SENTENCE_NT'understand "go [direction]" as going'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"go [direction]"'
                        PROPER_NOUN_NT'going'
                    SENTENCE_NT'understand "go [something]" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"go [something]"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand "go into/in/inside/through [something]" as enteri'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"go into/in/inside/through [something]"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand the commands walk and run as go'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands walk and run'
                        PROPER_NOUN_NT'go'
                    SENTENCE_NT'understand "inventory" as taking inventory'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"inventory"'
                        PROPER_NOUN_NT'taking inventory'
                    SENTENCE_NT'understand the commands i and inv as inventory'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands i and inv'
                        PROPER_NOUN_NT'inventory'
                    SENTENCE_NT'understand "look" as looking'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"look"'
                        PROPER_NOUN_NT'looking'
                    SENTENCE_NT'understand "look at [something]" as examining'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"look at [something]"'
                        PROPER_NOUN_NT'examining'
                    SENTENCE_NT'understand "look [something]" as examining'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"look [something]"'
                        PROPER_NOUN_NT'examining'
                    SENTENCE_NT'understand "look inside/in/into/through [something]" as sear'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"look inside/in/into/through [something]"'
                        PROPER_NOUN_NT'searching'
                    SENTENCE_NT'understand "look under [something]" as looking under'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"look under [something]"'
                        PROPER_NOUN_NT'looking under'
                    SENTENCE_NT'understand "look up [text] in [something]" as consulting it '
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"look up [text] in [something]"'
                        PROPER_NOUN_NT'consulting it about ( with nouns reversed )'
                    SENTENCE_NT'understand the command l as look'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command l'
                        PROPER_NOUN_NT'look'
                    SENTENCE_NT'understand "consult [something] on/about [text]" as consulti'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"consult [something] on/about [text]"'
                        PROPER_NOUN_NT'consulting it about'
                    SENTENCE_NT'understand "open [something]" as opening'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"open [something]"'
                        PROPER_NOUN_NT'opening'
                    SENTENCE_NT'understand "open [something] with [something preferably held'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"open [something] with [something preferably held]"'
                        PROPER_NOUN_NT'unlocking it with'
                    SENTENCE_NT'understand the commands unwrap , uncover as open'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands unwrap , uncover'
                        PROPER_NOUN_NT'open'
                    SENTENCE_NT'understand "close [something]" as closing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"close [something]"'
                        PROPER_NOUN_NT'closing'
                    SENTENCE_NT'understand "close up [something]" as closing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"close up [something]"'
                        PROPER_NOUN_NT'closing'
                    SENTENCE_NT'understand "close off [something]" as switching off'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"close off [something]"'
                        PROPER_NOUN_NT'switching off'
                    SENTENCE_NT'understand the commands shut and cover as close'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands shut and cover'
                        PROPER_NOUN_NT'close'
                    SENTENCE_NT'understand "enter" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"enter"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand "enter [something]" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"enter [something]"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand the command cross as enter'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command cross'
                        PROPER_NOUN_NT'enter'
                    SENTENCE_NT'understand "sit on top of [something]" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"sit on top of [something]"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand "sit on/in/inside [something]" as entering'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"sit on/in/inside [something]"'
                        PROPER_NOUN_NT'entering'
                    SENTENCE_NT'understand "exit" as exiting'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"exit"'
                        PROPER_NOUN_NT'exiting'
                    SENTENCE_NT'understand the commands leave and out as exit'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands leave and out'
                        PROPER_NOUN_NT'exit'
                    SENTENCE_NT'understand "examine [something]" as examining'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"examine [something]"'
                        PROPER_NOUN_NT'examining'
                    SENTENCE_NT'understand the commands x , watch , describe and check as ex'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands x , watch , describe and check'
                        PROPER_NOUN_NT'examine'
                    SENTENCE_NT'understand "read [something]" as examining'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"read [something]"'
                        PROPER_NOUN_NT'examining'
                    SENTENCE_NT'understand "read about [text] in [something]" as consulting '
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"read about [text] in [something]"'
                        PROPER_NOUN_NT'consulting it about ( with nouns reversed )'
                    SENTENCE_NT'understand "read [text] in [something]" as consulting it abo'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"read [text] in [something]"'
                        PROPER_NOUN_NT'consulting it about ( with nouns reversed )'
                    SENTENCE_NT'understand "yes" as saying yes'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"yes"'
                        PROPER_NOUN_NT'saying yes'
                    SENTENCE_NT'understand the command y as yes'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command y'
                        PROPER_NOUN_NT'yes'
                    SENTENCE_NT'understand "no" as saying no'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"no"'
                        PROPER_NOUN_NT'saying no'
                    SENTENCE_NT'understand "sorry" as saying sorry'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"sorry"'
                        PROPER_NOUN_NT'saying sorry'
                    SENTENCE_NT'understand "search [something]" as searching'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"search [something]"'
                        PROPER_NOUN_NT'searching'
                    SENTENCE_NT'understand "wave" as waving hands'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"wave"'
                        PROPER_NOUN_NT'waving hands'
                    SENTENCE_NT'understand "wave [something]" as waving'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"wave [something]"'
                        PROPER_NOUN_NT'waving'
                    SENTENCE_NT'understand "set [something] to [text]" as setting it to'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"set [something] to [text]"'
                        PROPER_NOUN_NT'setting it to'
                    SENTENCE_NT'understand the command adjust as set'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command adjust'
                        PROPER_NOUN_NT'set'
                    SENTENCE_NT'understand "pull [something]" as pulling'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"pull [something]"'
                        PROPER_NOUN_NT'pulling'
                    SENTENCE_NT'understand the command drag as pull'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command drag'
                        PROPER_NOUN_NT'pull'
                    SENTENCE_NT'understand "push [something]" as pushing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"push [something]"'
                        PROPER_NOUN_NT'pushing'
                    SENTENCE_NT'understand "push [something] [direction]" or "push [somethin'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"push [something] [direction]" or "push [something] to [dire'
                        PROPER_NOUN_NT'pushing it to'
                    SENTENCE_NT'understand the commands move , shift , clear and press as pu'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands move , shift , clear and press'
                        PROPER_NOUN_NT'push'
                    SENTENCE_NT'understand "turn [something]" as turning'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"turn [something]"'
                        PROPER_NOUN_NT'turning'
                    SENTENCE_NT'understand "turn [something] on" or "turn on [something]" as'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"turn [something] on" or "turn on [something]"'
                        PROPER_NOUN_NT'switching on'
                    SENTENCE_NT'understand "turn [something] off" or "turn off [something]" '
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"turn [something] off" or "turn off [something]"'
                        PROPER_NOUN_NT'switching off'
                    SENTENCE_NT'understand the commands rotate , twist , unscrew and screw a'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands rotate , twist , unscrew and screw'
                        PROPER_NOUN_NT'turn'
                    SENTENCE_NT'understand "switch [something switched on]" as switching off'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"switch [something switched on]"'
                        PROPER_NOUN_NT'switching off'
                    SENTENCE_NT'understand "switch [something]" or "switch on [something]" o'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"switch [something]" or "switch on [something]" or "switch ['
                        PROPER_NOUN_NT'switching on'
                    SENTENCE_NT'understand "switch [something] off" or "switch off [somethin'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"switch [something] off" or "switch off [something]"'
                        PROPER_NOUN_NT'switching off'
                    SENTENCE_NT'understand "lock [something] with [something preferably held'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"lock [something] with [something preferably held]"'
                        PROPER_NOUN_NT'locking it with'
                    SENTENCE_NT'understand "unlock [something] with [something preferably he'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"unlock [something] with [something preferably held]"'
                        PROPER_NOUN_NT'unlocking it with'
                    SENTENCE_NT'understand "attack [something]" as attacking'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"attack [something]"'
                        PROPER_NOUN_NT'attacking'
                    SENTENCE_NT'understand the commands break , smash , hit , fight , tortur'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands break , smash , hit , fight , torture , wreck ,'
                        PROPER_NOUN_NT'attack'
                    SENTENCE_NT'understand "wait" as waiting'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"wait"'
                        PROPER_NOUN_NT'waiting'
                    SENTENCE_NT'understand the command z as wait'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command z'
                        PROPER_NOUN_NT'wait'
                    SENTENCE_NT'understand "answer [text] to [someone]" as answering it that'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"answer [text] to [someone]"'
                        PROPER_NOUN_NT'answering it that ( with nouns reversed )'
                    SENTENCE_NT'understand the commands say , shout and speak as answer'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands say , shout and speak'
                        PROPER_NOUN_NT'answer'
                    SENTENCE_NT'understand "tell [someone] about [text]" as telling it about'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"tell [someone] about [text]"'
                        PROPER_NOUN_NT'telling it about'
                    SENTENCE_NT'understand "ask [someone] about [text]" as asking it about'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"ask [someone] about [text]"'
                        PROPER_NOUN_NT'asking it about'
                    SENTENCE_NT'understand "ask [someone] for [something]" as asking it for'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"ask [someone] for [something]"'
                        PROPER_NOUN_NT'asking it for'
                    SENTENCE_NT'understand "eat [something preferably held]" as eating'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"eat [something preferably held]"'
                        PROPER_NOUN_NT'eating'
                    SENTENCE_NT'understand "sleep" as sleeping'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"sleep"'
                        PROPER_NOUN_NT'sleeping'
                    SENTENCE_NT'understand the command nap as sleep'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command nap'
                        PROPER_NOUN_NT'sleep'
                    SENTENCE_NT'understand "climb [something]" or "climb up/over [something]'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"climb [something]" or "climb up/over [something]"'
                        PROPER_NOUN_NT'climbing'
                    SENTENCE_NT'understand the command scale as climb'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command scale'
                        PROPER_NOUN_NT'climb'
                    SENTENCE_NT'understand "buy [something]" as buying'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"buy [something]"'
                        PROPER_NOUN_NT'buying'
                    SENTENCE_NT'understand the command purchase as buy'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command purchase'
                        PROPER_NOUN_NT'buy'
                    SENTENCE_NT'understand "squeeze [something]" as squeezing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"squeeze [something]"'
                        PROPER_NOUN_NT'squeezing'
                    SENTENCE_NT'understand the command squash as squeeze'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command squash'
                        PROPER_NOUN_NT'squeeze'
                    SENTENCE_NT'understand "swing [something]" or "swing on [something]" as '
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"swing [something]" or "swing on [something]"'
                        PROPER_NOUN_NT'swinging'
                    SENTENCE_NT'understand "wake" or "wake up" as waking up'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"wake" or "wake up"'
                        PROPER_NOUN_NT'waking up'
                    SENTENCE_NT'understand "wake [someone]" or "wake [someone] up" or "wake '
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"wake [someone]" or "wake [someone] up" or "wake up [someone'
                        PROPER_NOUN_NT'waking'
                    SENTENCE_NT'understand the commands awake and awaken as wake'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands awake and awaken'
                        PROPER_NOUN_NT'wake'
                    SENTENCE_NT'understand "kiss [someone]" as kissing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"kiss [someone]"'
                        PROPER_NOUN_NT'kissing'
                    SENTENCE_NT'understand the commands embrace and hug as kiss'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands embrace and hug'
                        PROPER_NOUN_NT'kiss'
                    SENTENCE_NT'understand "think" as thinking'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"think"'
                        PROPER_NOUN_NT'thinking'
                    SENTENCE_NT'understand "smell" as smelling'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"smell"'
                        PROPER_NOUN_NT'smelling'
                    SENTENCE_NT'understand "smell [something]" as smelling'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"smell [something]"'
                        PROPER_NOUN_NT'smelling'
                    SENTENCE_NT'understand the command sniff as smell'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command sniff'
                        PROPER_NOUN_NT'smell'
                    SENTENCE_NT'understand "listen" as listening to'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"listen"'
                        PROPER_NOUN_NT'listening to'
                    SENTENCE_NT'understand "hear [something]" as listening to'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"hear [something]"'
                        PROPER_NOUN_NT'listening to'
                    SENTENCE_NT'understand "listen to [something]" as listening to'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"listen to [something]"'
                        PROPER_NOUN_NT'listening to'
                    SENTENCE_NT'understand "taste [something]" as tasting'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"taste [something]"'
                        PROPER_NOUN_NT'tasting'
                    SENTENCE_NT'understand "touch [something]" as touching'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"touch [something]"'
                        PROPER_NOUN_NT'touching'
                    SENTENCE_NT'understand the command feel as touch'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command feel'
                        PROPER_NOUN_NT'touch'
                    SENTENCE_NT'understand "rub [something]" as rubbing'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"rub [something]"'
                        PROPER_NOUN_NT'rubbing'
                    SENTENCE_NT'understand the commands shine , polish , sweep , clean , dus'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands shine , polish , sweep , clean , dust , wipe an'
                        PROPER_NOUN_NT'rub'
                    SENTENCE_NT'understand "tie [something] to [something]" as tying it to'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"tie [something] to [something]"'
                        PROPER_NOUN_NT'tying it to'
                    SENTENCE_NT'understand the commands attach and fasten as tie'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands attach and fasten'
                        PROPER_NOUN_NT'tie'
                    SENTENCE_NT'understand "burn [something]" as burning'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"burn [something]"'
                        PROPER_NOUN_NT'burning'
                    SENTENCE_NT'understand the command light as burn'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the command light'
                        PROPER_NOUN_NT'burn'
                    SENTENCE_NT'understand "drink [something]" as drinking'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"drink [something]"'
                        PROPER_NOUN_NT'drinking'
                    SENTENCE_NT'understand the commands swallow and sip as drink'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands swallow and sip'
                        PROPER_NOUN_NT'drink'
                    SENTENCE_NT'understand "cut [something]" as cutting'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"cut [something]"'
                        PROPER_NOUN_NT'cutting'
                    SENTENCE_NT'understand the commands slice , prune and chop as cut'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands slice , prune and chop'
                        PROPER_NOUN_NT'cut'
                    SENTENCE_NT'understand "jump" as jumping'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"jump"'
                        PROPER_NOUN_NT'jumping'
                    SENTENCE_NT'understand the commands skip and hop as jump'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'the commands skip and hop'
                        PROPER_NOUN_NT'jump'
                    SENTENCE_NT'understand "score" as requesting the score'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"score"'
                        PROPER_NOUN_NT'requesting the score'
                    SENTENCE_NT'understand "quit" or "q" as quitting the game'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"quit" or "q"'
                        PROPER_NOUN_NT'quitting the game'
                    SENTENCE_NT'understand "save" as saving the game'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"save"'
                        PROPER_NOUN_NT'saving the game'
                    SENTENCE_NT'understand "restart" as restarting the game'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"restart"'
                        PROPER_NOUN_NT'restarting the game'
                    SENTENCE_NT'understand "restore" as restoring the game'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"restore"'
                        PROPER_NOUN_NT'restoring the game'
                    SENTENCE_NT'understand "verify" as verifying the story file'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"verify"'
                        PROPER_NOUN_NT'verifying the story file'
                    SENTENCE_NT'understand "version" as requesting the story file version'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"version"'
                        PROPER_NOUN_NT'requesting the story file version'
                    SENTENCE_NT'understand "script" or "script on" or "transcript" or "trans'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"script" or "script on" or "transcript" or "transcript on"'
                        PROPER_NOUN_NT'switching the story transcript on'
                    SENTENCE_NT'understand "script off" or "transcript off" as switching the'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"script off" or "transcript off"'
                        PROPER_NOUN_NT'switching the story transcript off'
                    SENTENCE_NT'understand "superbrief" or "short" as preferring abbreviated'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"superbrief" or "short"'
                        PROPER_NOUN_NT'preferring abbreviated room descriptions'
                    SENTENCE_NT'understand "verbose" or "long" as preferring unabbreviated r'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"verbose" or "long"'
                        PROPER_NOUN_NT'preferring unabbreviated room descriptions'
                    SENTENCE_NT'understand "brief" or "normal" as preferring sometimes abbre'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"brief" or "normal"'
                        PROPER_NOUN_NT'preferring sometimes abbreviated room descriptions'
                    SENTENCE_NT'understand "nouns" or "pronouns" as requesting the pronoun m'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"nouns" or "pronouns"'
                        PROPER_NOUN_NT'requesting the pronoun meanings'
                    SENTENCE_NT'understand "notify" or "notify on" as switching score notifi'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"notify" or "notify on"'
                        PROPER_NOUN_NT'switching score notification on'
                    SENTENCE_NT'understand "notify off" as switching score notification off'
                        VERB_NT'understand'
                        PROPER_NOUN_NT'"notify off"'
                        PROPER_NOUN_NT'switching score notification off'
                    SENTENCE_NT'the understand token a time period translates into i6 as REL'
                        VERB_NT'translates into'
                        PROPER_NOUN_NT'understand token a time period'
                        PROPER_NOUN_NT'RELATIVE_TIME_TOKEN'
                HEADING_NT'part seven - phrasebook' (level 3)
                    HEADING_NT'chapter 1 - saying' (level 4)
                        HEADING_NT'section 1 - time values' (level 5)
                            RULE_NT'to say ( something - time ) in words ( documented at phs_tim'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (PrintTimeOfDayEnglish) {something}; '
                            RULE_NT'to say here ( documented at phs_here )'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[if story tense is present tense]here[otherwise]there"'
                                        INVOCATION_LIST_SAY_NT'if story tense is present tense'
                                            INVOCATION_NT'if story tense is present tense'
                                                CONDITION_CONTEXT_NT'story tense is present tense'
                                                    TEST_PROPOSITION_NT'story tense is present tense'(test: [ is('story tense', 'present tense') ])
                                        INVOCATION_LIST_SAY_NT'"here"'
                                            INVOCATION_NT'"here"'
                                                RVALUE_CONTEXT_NT'"here"'
                                                    CONSTANT_NT'"here"'-text
                                        INVOCATION_LIST_SAY_NT'otherwise'
                                            INVOCATION_NT'otherwise'
                                        INVOCATION_LIST_SAY_NT'"there"'
                                            INVOCATION_NT'"there"'
                                                RVALUE_CONTEXT_NT'"there"'
                                                    CONSTANT_NT'"there"'-text
                            RULE_NT'to say now ( documented at phs_now )'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[if story tense is present tense]now[otherwise]then"'
                                        INVOCATION_LIST_SAY_NT'if story tense is present tense'
                                            INVOCATION_NT'if story tense is present tense'
                                                CONDITION_CONTEXT_NT'story tense is present tense'
                                                    TEST_PROPOSITION_NT'story tense is present tense'(test: [ is('story tense', 'present tense') ])
                                        INVOCATION_LIST_SAY_NT'"now"'
                                            INVOCATION_NT'"now"'
                                                RVALUE_CONTEXT_NT'"now"'
                                                    CONSTANT_NT'"now"'-text
                                        INVOCATION_LIST_SAY_NT'otherwise'
                                            INVOCATION_NT'otherwise'
                                        INVOCATION_LIST_SAY_NT'"then"'
                                            INVOCATION_NT'"then"'
                                                RVALUE_CONTEXT_NT'"then"'
                                                    CONSTANT_NT'"then"'-text
                        HEADING_NT'section 2 - boxed quotations' (level 5)
                            RULE_NT'to display the boxed quotation ( q - text ) ( documented at '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  DisplayBoxedQuotation({-box-quotation-text:Q}); '
                        HEADING_NT'section 3 - some built-in texts' (level 5)
                            RULE_NT'to say the/-- banner text ( documented at phs_banner )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  Banner(); '
                            RULE_NT'to say the/-- list of extension credits ( documented at phs_'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ShowExtensionVersions(); '
                            RULE_NT'to say the/-- complete list of extension credits ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ShowFullExtensionVersions(); '
                            RULE_NT'to say the/-- player's surroundings ( documented at phs_surr'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SL_Location(true); '
                            RULE_NT'to say run paragraph on with special look spacing -- running'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SpecialLookSpacingBreak(); '
                            RULE_NT'to say command clarification break -- running on ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  CommandClarificationBreak(); '
                        HEADING_NT'section 4 - responses' (level 5)
                            RULE_NT'to say text of ( r - response ) ( documented at phs_response'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'carry out the issuing the response text activity with r'
                                        INVOCATION_NT'carry out the issuing the response text activity with r'
                                            RVALUE_CONTEXT_NT'issuing the response text'
                                                CONSTANT_NT'issuing the response text'-activity on responses
                                            RVALUE_CONTEXT_NT'r'
                                                LOCAL_VARIABLE_NT'r'(t_0;response)
                        HEADING_NT'section 5 - saying lists of things' (level 5)
                            RULE_NT'to list the contents of ( o - an object ) , with newlines , '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  WriteListFrom(child({O}), {phrase options}); '
                            RULE_NT'to say a list of ( os - description of objects ) ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	 	objectloop({-my:1} ofclass Object)
                                    			if ({-matches-d'
                            RULE_NT'to say a list of ( os - description of objects ) ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                            RULE_NT'to say list of ( os - description of objects ) ( documented '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                            RULE_NT'to say the list of ( os - description of objects ) ( documen'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                            RULE_NT'to say the list of ( os - description of objects ) ( documen'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                            RULE_NT'to say is-are a list of ( os - description of objects ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                            RULE_NT'to say is-are list of ( os - description of objects ) ( docu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                            RULE_NT'to say is-are the list of ( os - description of objects ) ( '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                            RULE_NT'to say a list of ( os - description of objects ) including c'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} ofclass Object)
                                    			if ({-matches-de'
                        HEADING_NT'section 6 - group in and omit from lists' (level 5)
                            RULE_NT'to group ( os - description of objects ) together ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} provides list_together)
                                    			if ({-ma'
                            RULE_NT'to group ( os - description of objects ) together giving art'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		objectloop({-my:1} provides list_together)
                                    			if ({-ma'
                            RULE_NT'to group ( os - description of objects ) together as ( t - t'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    		{-my:2} = BlkValueCreate(TEXT_TY);
                                    		{-my:2} = TEXT_TY'
                            RULE_NT'to omit contents in listing ( documented at ph_omit )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  c_style = c_style &~ (RECURSE_BIT+FULLINV_BIT+PARTINV_BI'
                        HEADING_NT'section 7 - filtering contents of lists - unindexed' (level 5)
                            RULE_NT'to filter list recursion to ( d - description of objects )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  list_filter_routine = {D}; '
                            RULE_NT'to unfilter list recursion'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  list_filter_routine = 0; '
                    HEADING_NT'chapter 2 - multimedia' (level 4)
                        HEADING_NT'section 1 - figures ( for figures language element only )' (level 5)
                            RULE_NT'to display ( f - figure name ) , one time only ( documented '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  DisplayFigure(ResourceIDsOfFigures-->{F}, {phrase option'
                            RULE_NT'to decide which number is the glulx resource id of ( f - fig'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ResourceIDsOfFigures-->{F} '
                        HEADING_NT'section 2 - sound effects ( for sounds language element only' (level 5)
                            RULE_NT'to play ( sfx - sound name ) , one time only ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  PlaySound(ResourceIDsOfSounds-->{SFX}, {phrase options})'
                            RULE_NT'to decide which number is the glulx resource id of ( sfx - s'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ResourceIDsOfSounds-->{SFX} '
                    HEADING_NT'chapter 3 - actions , activities and rules' (level 4)
                        HEADING_NT'section 1 - trying actions' (level 5)
                            RULE_NT'to try ( s - action ) ( documented at ph_try )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-try-action:S} '
                            RULE_NT'to silently try ( s - action ) ( documented at ph_trysilentl'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-try-action-silently:S} '
                            RULE_NT'to try silently ( s - action ) ( documented at ph_trysilentl'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-try-action-silently:S} '
                            RULE_NT'to decide whether the action is not silent'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (keep_silent == false) '
                        HEADING_NT'section 2 - action requirements' (level 5)
                            RULE_NT'to decide whether the action requires a touchable noun ( doc'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (NeedToTouchNoun()) '
                            RULE_NT'to decide whether the action requires a touchable second nou'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (NeedToTouchSecondNoun()) '
                            RULE_NT'to decide whether the action requires a carried noun ( docum'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (NeedToCarryNoun()) '
                            RULE_NT'to decide whether the action requires a carried second noun '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (NeedToCarrySecondNoun()) '
                            RULE_NT'to decide whether the action requires light ( documented at '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (NeedLightForAction()) '
                            RULE_NT'to anonymously abide by ( rl - a rule ) ( documented at ph_a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  if (temporary_value = FollowRulebook({RL})) {
                                    		if (Rule'
                            RULE_NT'to anonymously abide by ( rl - value of kind k based rule pr'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  if (temporary_value = FollowRulebook({RL}, {V}, true)) {'
                            RULE_NT'to anonymously abide by ( rl - a nothing based rule ) ( docu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  if (temporary_value = FollowRulebook({RL})) {
                                    		if (Rule'
                        HEADING_NT'section 3 - stop or continue' (level 5)
                            RULE_NT'to stop the action ( documented at ph_stopaction )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rtrue;  - in to only'
                            RULE_NT'to continue the action ( documented at ph_continueaction )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rfalse;  - in to only'
                        HEADING_NT'section 4 - actions as values' (level 5)
                            RULE_NT'to decide what action is the current action ( documented at '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  STORED_ACTION_TY_Current({-new:action}) '
                            RULE_NT'to decide what action is the action of ( a - action ) ( docu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {A} '
                            RULE_NT'to decide if ( act - a action ) involves ( x - an object ) ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (STORED_ACTION_TY_Involves({-by-reference:act}, {X})) '
                            RULE_NT'to decide what action name is the action name part of ( act '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (STORED_ACTION_TY_Part({-by-reference:act}, STORA_ACTION'
                            RULE_NT'to decide what object is the noun part of ( act - a action )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (STORED_ACTION_TY_Part({-by-reference:act}, STORA_NOUN_F'
                            RULE_NT'to decide what object is the second noun part of ( act - a a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (STORED_ACTION_TY_Part({-by-reference:act}, STORA_SECOND'
                            RULE_NT'to decide what object is the actor part of ( act - a action '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (STORED_ACTION_TY_Part({-by-reference:act}, STORA_ACTOR_'
                    HEADING_NT'chapter 4 - the model world' (level 4)
                        HEADING_NT'section 1 - ending the story' (level 5)
                            RULE_NT'to end the story ( documented at ph_end )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  deadflag=3; story_complete=false; '
                            RULE_NT'to end the story finally ( documented at ph_endfinally )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  deadflag=3; story_complete=true; '
                            RULE_NT'to end the story saying ( finale - text ) ( documented at ph'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  deadflag={-by-reference:finale}; story_complete=false; '
                            RULE_NT'to end the story finally saying ( finale - text ) ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  deadflag={-by-reference:finale}; story_complete=true; '
                            RULE_NT'to decide whether the story has ended ( documented at ph_end'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (deadflag~=0) '
                            RULE_NT'to decide whether the story has ended finally ( documented a'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (story_complete) '
                            RULE_NT'to decide whether the story has not ended ( documented at ph'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (deadflag==0) '
                            RULE_NT'to decide whether the story has not ended finally ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (story_complete==false) '
                            RULE_NT'to resume the story ( documented at ph_resume )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  resurrect_please = true; '
                        HEADING_NT'section 2 - times of day' (level 5)
                            RULE_NT'to decide which number is the minutes part of ( t - time ) ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({t}%ONE_HOUR) '
                            RULE_NT'to decide which number is the hours part of ( t - time ) ( d'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ({t}/ONE_HOUR) '
                            RULE_NT'to decide if ( t - time ) is before ( t2 - time ) ( document'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ((({t}+20*ONE_HOUR)%(TWENTY_FOUR_HOURS))<(({t2}+20*ONE_H'
                            RULE_NT'to decide if ( t - time ) is after ( t2 - time ) ( documente'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ((({t}+20*ONE_HOUR)%(TWENTY_FOUR_HOURS))>(({t2}+20*ONE_H'
                            RULE_NT'to decide which time is ( t - time ) before ( t2 - time ) ( '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (({t2}-{t}+TWENTY_FOUR_HOURS)%(TWENTY_FOUR_HOURS)) '
                            RULE_NT'to decide which time is ( t - time ) after ( t2 - time ) ( d'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (({t2}+{t}+TWENTY_FOUR_HOURS)%(TWENTY_FOUR_HOURS)) '
                        HEADING_NT'section 3 - durations' (level 5)
                            RULE_NT'to decide which time is ( n - number ) minutes ( documented '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (({n})%(TWENTY_FOUR_HOURS)) '
                            RULE_NT'to decide which time is ( n - number ) hours ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (({n}*ONE_HOUR)%(TWENTY_FOUR_HOURS)) '
                        HEADING_NT'section 4 - timed events' (level 5)
                            RULE_NT'to ( r - rule ) in ( t - number ) turn/turns from now ( docu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SetTimedEvent({-mark-event-used:R}, {t}+1, 0); '
                            RULE_NT'to ( r - rule ) at ( t - time ) ( documented at ph_attime )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SetTimedEvent({-mark-event-used:R}, {t}, 1); '
                            RULE_NT'to ( r - rule ) in ( t - time ) from now ( documented at ph_'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SetTimedEvent({-mark-event-used:R}, (the_time+{t})%(TWEN'
                        HEADING_NT'section 5 - scenes' (level 5)
                            RULE_NT'to decide if ( sc - scene ) has happened ( documented at ph_'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (scene_endings-->({sc}-1)) '
                            RULE_NT'to decide if ( sc - scene ) has not happened ( documented at'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (scene_endings-->({sc}-1) == 0) '
                            RULE_NT'to decide if ( sc - scene ) has ended ( documented at ph_has'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (scene_endings-->({sc}-1) > 1) '
                            RULE_NT'to decide if ( sc - scene ) has not ended ( documented at ph'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (scene_endings-->({sc}-1) <= 1) '
                        HEADING_NT'section 6 - timing of scenes' (level 5)
                            RULE_NT'to decide which time is the time since ( sc - scene ) began '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (SceneUtility({sc}, 1)) '
                            RULE_NT'to decide which time is the time when ( sc - scene ) began ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (SceneUtility({sc}, 2)) '
                            RULE_NT'to decide which time is the time since ( sc - scene ) ended '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (SceneUtility({sc}, 3)) '
                            RULE_NT'to decide which time is the time when ( sc - scene ) ended ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (SceneUtility({sc}, 4)) '
                        HEADING_NT'section 7 - player's identity and location' (level 5)
                            RULE_NT'to decide whether in darkness ( documented at ph_indarkness '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (location==thedark) '
                        HEADING_NT'section 8 - moving and removing things' (level 5)
                            RULE_NT'to move ( something - object ) to ( something else - object '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MoveObject({something}, {something else}, {phrase option'
                            RULE_NT'to remove ( something - object ) from play ( deprecated ) ( '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RemoveFromPlay({something}); '
                            RULE_NT'to move ( o - object ) backdrop to all ( d - description of '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MoveBackdrop({O}, {D}); '
                            RULE_NT'to update backdrop positions ( documented at ph_updatebackdr'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MoveFloatingObjects(); '
                        HEADING_NT'section 9 - the map' (level 5)
                            RULE_NT'to decide which room is location of ( o - object ) ( documen'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LocationOf({O}) '
                            RULE_NT'to decide which room is room ( d - direction ) from/of ( r1 '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MapConnection({R1},{D}) '
                            RULE_NT'to decide which door is door ( d - direction ) from/of ( r1 '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  DoorFrom({R1},{D}) '
                            RULE_NT'to decide which object is the other side of ( d - door ) fro'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  OtherSideOfDoor({D},{R1}) '
                            RULE_NT'to decide which object is the direction of ( d - door ) from'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  DirectionDoorLeadsIn({D},{R1}) '
                            RULE_NT'to decide which object is room-or-door ( d - direction ) fro'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RoomOrDoorFrom({R1},{D}) '
                            RULE_NT'to change ( d - direction ) exit of ( r1 - room ) to ( r2 - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  AssertMapConnection({R1},{D},{R2}); '
                            RULE_NT'to change ( d - direction ) exit of ( r1 - room ) to nothing'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  AssertMapConnection({R1},{D},nothing); '
                            RULE_NT'to decide which room is the front side of ( d - object ) ( d'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FrontSideOfDoor({D}) '
                            RULE_NT'to decide which room is the back side of ( d - object ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  BackSideOfDoor({D}) '
                        HEADING_NT'section 10 - route-finding' (level 5)
                            RULE_NT'to decide which object is best route from ( r1 - object ) to'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MapRouteTo({R1},{R2},0,{phrase options}) '
                            RULE_NT'to decide which number is number of moves from ( r1 - object'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MapRouteTo({R1},{R2},0,{phrase options},true) '
                            RULE_NT'to decide which object is best route from ( r1 - object ) to'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MapRouteTo({R1},{R2},{RS},{phrase options}) '
                            RULE_NT'to decide which number is number of moves from ( r1 - object'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MapRouteTo({R1},{R2},{RS},{phrase options},true) '
                        HEADING_NT'section 11 - the object tree' (level 5)
                            RULE_NT'to decide which object is holder of ( something - object ) ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (HolderOf({something})) '
                            RULE_NT'to decide which object is next thing held after ( something '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (sibling({something})) '
                            RULE_NT'to decide which object is first thing held by ( something - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (child({something})) '
                    HEADING_NT'chapter 5 - understanding' (level 4)
                        HEADING_NT'section 1 - asking yes/no questions' (level 5)
                            RULE_NT'to decide whether player consents ( documented at ph_consent'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  YesOrNo() '
                        HEADING_NT'section 2 - the player's command' (level 5)
                            RULE_NT'to decide if ( s - a snippet ) matches ( t - a topic ) ( doc'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (SnippetMatches({S}, {T})) '
                            RULE_NT'to decide if ( s - a snippet ) does not match ( t - a topic '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (SnippetMatches({S}, {T}) == false) '
                            RULE_NT'to decide if ( s - a snippet ) includes ( t - a topic ) ( do'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (matched_text=SnippetIncludes({T},{S})) '
                            RULE_NT'to decide if ( s - a snippet ) does not include ( t - a topi'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (SnippetIncludes({T},{S})==0) '
                        HEADING_NT'section 3 - changing the player's command' (level 5)
                            RULE_NT'to change the text of the player's command to ( t - text ) ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SetPlayersCommand({-by-reference:T}); '
                            RULE_NT'to replace ( s - a snippet ) with ( t - text ) ( documented '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SpliceSnippet({S}, {-by-reference:T}); '
                            RULE_NT'to cut ( s - a snippet ) ( documented at ph_cutsnippet )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SpliceSnippet({S}, 0); '
                            RULE_NT'to reject the player's command ( documented at ph_rejectcomm'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  RulebookFails(); rtrue;  - in to only'
                        HEADING_NT'section 4 - scope and pronouns' (level 5)
                            RULE_NT'to place ( o - an object ) in scope , but not its contents ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  PlaceInScope({O}, {phrase options}); '
                            RULE_NT'to place the/-- contents of ( o - an object ) in scope ( doc'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  ScopeWithin({O}); '
                            RULE_NT'to set pronouns from ( o - an object ) ( documented at ph_se'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  PronounNotice({O}); '
                        HEADING_NT'section 5 - the multiple object list' (level 5)
                            RULE_NT'to decide what list of objects is the multiple object list ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Mol({-new:list of objects}) '
                            RULE_NT'to alter the multiple object list to ( l - list of objects )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LIST_OF_TY_Set_Mol({-by-reference:L}); '
                        HEADING_NT'section sr5/8/1 - message support - issuance - unindexed' (level 5)
                            RULE_NT'to issue score notification message'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  NotifyTheScore(); '
                            RULE_NT'to say pronoun dictionary word'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (address) pronoun_word; '
                            RULE_NT'to say recap of command'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  PrintCommand(); '
                            SENTENCE_NT'the pronoun reference object is an object that varies'
                                VERB_NT'is'
                                PROPER_NOUN_NT'pronoun reference object'
                                COMMON_NOUN_NT'object that varies'
                            SENTENCE_NT'the pronoun reference object variable translates into i6 as '
                                VERB_NT'translates into'
                                PROPER_NOUN_NT'pronoun reference object variable'
                                PROPER_NOUN_NT'pronoun_obj'
                            RULE_NT'to say pronoun i6 dictionary word'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  print (address) pronoun_word; '
                            RULE_NT'to say parser command so far'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  PrintCommand(); '
                    HEADING_NT'chapter 6 - deprecated or private phrases - unindexed' (level 4)
                        HEADING_NT'section 1 - spatial modelling - unindexed' (level 5)
                            RULE_NT'to decide which object is the component parts core of ( x - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  CoreOf({X}) '
                            RULE_NT'to decide which object is the common ancestor of ( o - an ob'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (CommonAncestor({O}, {P})) '
                            RULE_NT'to decide which object is the not-counting-parts holder of ('
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (CoreOfParentOfCoreOf({O})) '
                            RULE_NT'to decide which object is the visibility-holder of ( o - obj'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  VisibilityParent({O}) '
                            RULE_NT'to calculate visibility ceiling at low level'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  FindVisibilityLevels(); '
                            RULE_NT'to decide which object is the touchability ceiling of ( o - '
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  TouchabilityCeiling({O}) '
                            RULE_NT'to decide which number is the visibility ceiling count calcu'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  visibility_levels '
                            RULE_NT'to decide which object is the visibility ceiling calculated'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  visibility_ceiling '
                        HEADING_NT'section 2 - room descriptions - unindexed' (level 5)
                            RULE_NT'to produce a room description with going spacing conventions'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  LookAfterGoing(); '
                            RULE_NT'to print the location's description'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  PrintOrRun(location, description); '
                            RULE_NT'to decide if set to sometimes abbreviated room descriptions'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (lookmode == 1) '
                            RULE_NT'to decide if set to unabbreviated room descriptions'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (lookmode == 2) '
                            RULE_NT'to decide if set to abbreviated room descriptions'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (lookmode == 3) '
                        HEADING_NT'section 3 - action conversion - unindexed' (level 5)
                            RULE_NT'to convert to ( an - an action name ) on ( o - an object )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  return GVS_Convert({AN},{O},0);  - in to only'
                            RULE_NT'to convert to request of ( x - object ) to perform ( an - ac'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  return ConvertToRequest({X}, {AN}, {Y}, {Z}); '
                            RULE_NT'to convert to special going-with-push action'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  return ConvertToGoingWithPush(); '
                        HEADING_NT'section 4 - surreptitious violation of invariants - unindexe' (level 5)
                            RULE_NT'to surreptitiously move ( something - object ) to ( somethin'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  move {something} to {something else}; '
                            RULE_NT'to surreptitiously move ( something - object ) to ( somethin'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  MoveDuringGoing({something}, {something else}); '
                            RULE_NT'to surreptitiously reckon darkness'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  SilentlyConsiderLight(); '
                        HEADING_NT'section 5 - capitalised list-writing - unindexed' (level 5)
                            RULE_NT'to say list-writer list of marked objects'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	 	WriteListOfMarkedObjects(ENGLISH_BIT);
                                    	'
                            RULE_NT'to say list-writer articled list of marked objects'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(- 
                                    	 	WriteListOfMarkedObjects(ENGLISH_BIT+DEFART_BIT+CFIRS'
                        HEADING_NT'section 6 - printing names - unindexed' (level 5)
                            RULE_NT'to decide if expanding text for comparison purposes'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  say__comp '
                        HEADING_NT'section 7 - command parsing - unindexed' (level 5)
                            RULE_NT'to decide whether the i6 parser is running multiple actions'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  (multiflag==1) '
                        HEADING_NT'section 8 - deprecated inform - unindexed' (level 5)
                            RULE_NT'to yes ( documented at ph_yes )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rtrue;  - in to decide if only'
                            RULE_NT'to no ( documented at ph_no )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  rfalse;  - in to decide if only'
                        HEADING_NT'section 9 - debugging inform - unindexed' (level 5)
                            RULE_NT'to ***'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:verbose-checking} '
                            RULE_NT'to *** ( t - text )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'(-  {-primitive-definition:verbose-checking} '
                            ENDHERE_NT'the standard rules'
        INCLUSION_NT'include standard rules by graham nelson'
    HEADING_NT'use the serial comma and no scoring' (level 0)
        SENTENCE_NT'use the serial comma and no scoring'
            VERB_NT'use'
            AND_NT'and'
                PROPER_NOUN_NT'serial comma'
                PROPER_NOUN_NT'no scoring'
        SENTENCE_NT'understand "about" as asking for information'
            VERB_NT'understand'
            PROPER_NOUN_NT'"about"'
            PROPER_NOUN_NT'asking for information'
        SENTENCE_NT'asking for information is an action out of world'
            VERB_NT'is'
            PROPER_NOUN_NT'asking for information'
            PROPER_NOUN_NT'out of world'
        RULE_NT'carry out asking for information'
            CODE_BLOCK_NT
                CODE_BLOCK_NT'say "An implementation of the following creative brief:Peo'
                    INVOCATION_LIST_SAY_NT'"An implementation of the following creative brief:People '
                        INVOCATION_NT'"An implementation of the following creative brief:People '
                            RVALUE_CONTEXT_NT'"An implementation of the following creative brief:People '
                                CONSTANT_NT'"An implementation of the following creative brief:People '-text
        RULE_NT'when play begins'
            CODE_BLOCK_NT
                CODE_BLOCK_NT'say "Gelato's Syndrome. It's struck, and it's struck hard. I'
                    INVOCATION_LIST_SAY_NT'"Gelato's Syndrome. It's struck, and it's struck hard. In th'
                        INVOCATION_NT'"Gelato's Syndrome. It's struck, and it's struck hard. In th'
                            RVALUE_CONTEXT_NT'"Gelato's Syndrome. It's struck, and it's struck hard. In th'
                                CONSTANT_NT'"Gelato's Syndrome. It's struck, and it's struck hard. In th'-text
                INVOCATION_LIST_NT'now the command prompt is "[if the destination of the player'
                    CONDITION_CONTEXT_NT'the command prompt is "[if the destination of the player is '
        HEADING_NT'section 1 - errands' (level 5)
            SENTENCE_NT'the current actor is a person which varies'
                VERB_NT'is'
                PROPER_NOUN_NT'current actor'
                COMMON_NOUN_NT'person which varies'
            SENTENCE_NT'the current owner is a person which varies'
                VERB_NT'is'
                PROPER_NOUN_NT'current owner'
                COMMON_NOUN_NT'person which varies'
            RULE_NT'every turn'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if player is active'
                            INVOCATION_NT'if player is active'
                                CONDITION_CONTEXT_NT'player is active'
                                    TEST_PROPOSITION_NT'player is active'(test: [ A11'active'('player') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'follow the character movement rules'
                                INVOCATION_NT'follow the character movement rules'
                                    RVALUE_CONTEXT_NT'character movement rules'
                                        CONSTANT_NT'character movement rules'-rulebook
            RULE_NT'every turn'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the last person named is the player'
                        CONDITION_CONTEXT_NT'the last person named is the player'
                    INVOCATION_LIST_NT'now the last thing named is the player'
                        CONDITION_CONTEXT_NT'the last thing named is the player'
                    INVOCATION_LIST_NT'now every person is active'
                        CONDITION_CONTEXT_NT'every person is active'
            SENTENCE_NT'a person can be active or passive'
                VERB_NT'can be'
                COMMON_NOUN_NT'a person'
                PROPER_NOUN_NT'active or passive'
                    AND_NT'or'
                        PROPER_NOUN_NT'active'
                        PROPER_NOUN_NT'passive'
            SENTENCE_NT'the player is passive'
                VERB_NT'is'
                PROPER_NOUN_NT'player'
                ADJECTIVE_NT'passive'
            SENTENCE_NT'the character movement rules are a rulebook'
                VERB_NT'are'
                PROPER_NOUN_NT'character movement rules'
                COMMON_NOUN_NT'rulebook'
            RULE_NT'the first character movement rule'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now group size is 1'
                        CONDITION_CONTEXT_NT'group size is 1'
                    INVOCATION_LIST_NT'now the last person named is the player'
                        CONDITION_CONTEXT_NT'the last person named is the player'
                    INVOCATION_LIST_NT'now the last thing named is the player'
                        CONDITION_CONTEXT_NT'the last thing named is the player'
                    INVOCATION_LIST_NT'now the player is passive'
                        CONDITION_CONTEXT_NT'the player is passive'
            RULE_NT'a character movement rule'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat with mover running through innocent people'
                            INVOCATION_NT'repeat with mover running through innocent people'
                                NEW_LOCAL_CONTEXT_NT'mover'
                                    UNKNOWN_NT'mover'
                                RVALUE_CONTEXT_NT'innocent people'
                                    CONSTANT_NT'innocent people'-description of people
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the current actor is the mover'
                                CONDITION_CONTEXT_NT'the current actor is the mover'
                            INVOCATION_LIST_NT'follow the shopper rules'
                                INVOCATION_NT'follow the shopper rules'
                                    RVALUE_CONTEXT_NT'shopper rules'
                                        CONSTANT_NT'shopper rules'-rulebook
                            INVOCATION_LIST_NT'now the current actor is passive'
                                CONDITION_CONTEXT_NT'the current actor is passive'
                    INVOCATION_LIST_NT'follow the movement reporting rule'
                        INVOCATION_NT'follow the movement reporting rule'
                            RVALUE_CONTEXT_NT'movement reporting rule'
                                CONSTANT_NT'movement reporting rule'-rule
            RULE_NT'a character movement rule'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat with next mover running through mercantile people'
                            INVOCATION_NT'repeat with next mover running through mercantile people'
                                NEW_LOCAL_CONTEXT_NT'next mover'
                                    UNKNOWN_NT'next mover'
                                RVALUE_CONTEXT_NT'mercantile people'
                                    CONSTANT_NT'mercantile people'-description of people
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the current owner is the next mover'
                                CONDITION_CONTEXT_NT'the current owner is the next mover'
                            INVOCATION_LIST_NT'follow the shopowner rules'
                                INVOCATION_NT'follow the shopowner rules'
                                    RVALUE_CONTEXT_NT'shopowner rules'
                                        CONSTANT_NT'shopowner rules'-rulebook
                            INVOCATION_LIST_NT'now the current owner is passive'
                                CONDITION_CONTEXT_NT'the current owner is passive'
                    INVOCATION_LIST_NT'follow the infection rule'
                        INVOCATION_NT'follow the infection rule'
                            RVALUE_CONTEXT_NT'infection rule'
                                CONSTANT_NT'infection rule'-rule
            RULE_NT'to decide whether movement has not yet occurred'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the player is passive'
                            INVOCATION_NT'if the player is passive'
                                CONDITION_CONTEXT_NT'player is passive'
                                    TEST_PROPOSITION_NT'player is passive'(test: [ A94'passive'('player') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'no'
                                INVOCATION_NT'no'
                    INVOCATION_LIST_NT'yes'
                        INVOCATION_NT'yes'
            RULE_NT'definition'
            RULE_NT'definition'
            SENTENCE_NT'the shopowner rules is a rulebook'
                VERB_NT'is'
                PROPER_NOUN_NT'shopowner rules'
                COMMON_NOUN_NT'rulebook'
            RULE_NT'a shopowner rule'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let the shop be a random room owned by the current owner'
                        INVOCATION_NT'let the shop be a random room owned by the current owner'
                            NEW_LOCAL_CONTEXT_NT'shop'
                                UNKNOWN_NT'shop'
                            RVALUE_CONTEXT_NT'a random room owned by the current owner'
                                PHRASE_TO_DECIDE_VALUE_NT'a random room owned by the current owner'
                                    INVOCATION_LIST_NT'a random room owned by the current owner'
                                        INVOCATION_NT'a random room owned by the current owner'
                                            RVALUE_CONTEXT_NT'room owned by the current owner'
                                                CONSTANT_NT'room owned by the current owner'-description of rooms
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the shop is air-conditioned and an open door ( called the'
                            INVOCATION_NT'if the shop is air-conditioned and an open door ( called the'
                                CONDITION_CONTEXT_NT'shop is air-conditioned and an open door ( called the escape'
                                    LOGICAL_AND_NT'shop is air-conditioned and an open door ( called the escape'
                                        TEST_PROPOSITION_NT'shop is air-conditioned'(test: [ A44'air-conditioned'('shop') ])
                                        TEST_PROPOSITION_NT'an open door ( called the escape ) protects the shop'(test: [ Exists x : kind=door(x) ^ A80'open'(x) ^ called='escape'(door)(x) ^ protection(x, 'the shop') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'try the current owner closing the escape'
                                INVOCATION_NT'try the current owner closing the escape'
                                    RVALUE_CONTEXT_NT'current owner closing the escape'
                                        CONSTANT_NT'current owner closing the escape'-action
                            CODE_BLOCK_NT
            RULE_NT'report someone closing a door when the person asked owns the'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The person asked], muttering darkly about air-conditio'
                        INVOCATION_LIST_SAY_NT'the person asked'
                            INVOCATION_NT'the person asked'
                                RVALUE_CONTEXT_NT'person asked'
                                    NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        INVOCATION_LIST_SAY_NT'", muttering darkly about air-conditioning and electricity, '
                            INVOCATION_NT'", muttering darkly about air-conditioning and electricity, '
                                RVALUE_CONTEXT_NT'", muttering darkly about air-conditioning and electricity, '
                                    CONSTANT_NT'", muttering darkly about air-conditioning and electricity, '-text
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'"."'
                            INVOCATION_NT'"."'
                                RVALUE_CONTEXT_NT'"."'
                                    CONSTANT_NT'"."'-text
                    CODE_BLOCK_NT
            RULE_NT'report vanessa closing the metal door when the metal door is'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if vanessa is visible'
                            INVOCATION_NT'if vanessa is visible'
                                CONDITION_CONTEXT_NT'vanessa is visible'
                                    TEST_PROPOSITION_NT'vanessa is visible'(test: [ A30'visible'('vanessa') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "Vanessa watches serenely as the metal door slides autom'
                                INVOCATION_LIST_SAY_NT'"Vanessa watches serenely as the metal door slides automatic'
                                    INVOCATION_NT'"Vanessa watches serenely as the metal door slides automatic'
                                        RVALUE_CONTEXT_NT'"Vanessa watches serenely as the metal door slides automatic'
                                            CONSTANT_NT'"Vanessa watches serenely as the metal door slides automatic'-text
                            CODE_BLOCK_NT
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT'say "The metal door slides heavily back into place."'
                                INVOCATION_LIST_SAY_NT'"The metal door slides heavily back into place."'
                                    INVOCATION_NT'"The metal door slides heavily back into place."'
                                        RVALUE_CONTEXT_NT'"The metal door slides heavily back into place."'
                                            CONSTANT_NT'"The metal door slides heavily back into place."'-text
                            CODE_BLOCK_NT
            RULE_NT'a shopowner rule'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the location of the current owner encloses a submitted ar'
                            INVOCATION_NT'if the location of the current owner encloses a submitted ar'
                                CONDITION_CONTEXT_NT'location of the current owner encloses a submitted artwork ('
                                    TEST_PROPOSITION_NT'location of the current owner encloses a submitted artwork ('(test: [ Exists x : kind=artwork(x) ^ A95'submitted'(x) ^ called='target'(artwork)(x) ^ encloses('location of the current owner', x) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'try the current owner filing the target'
                                INVOCATION_NT'try the current owner filing the target'
                                    RVALUE_CONTEXT_NT'current owner filing the target'
                                        CONSTANT_NT'current owner filing the target'-action
            SENTENCE_NT'filing is an action applying to one thing'
                VERB_NT'is'
                PROPER_NOUN_NT'filing'
                PROPER_NOUN_NT'applying to one thing'
            RULE_NT'before someone filing something which is not carried by the '
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try the person asked taking the noun'
                        INVOCATION_NT'try the person asked taking the noun'
                            RVALUE_CONTEXT_NT'person asked taking the noun'
                                CONSTANT_NT'person asked taking the noun'-action
                    CODE_BLOCK_NT
            RULE_NT'carry out someone filing'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked does not carry the noun and the person a'
                            INVOCATION_NT'if the person asked does not carry the noun and the person a'
                                CONDITION_CONTEXT_NT'person asked does not carry the noun and the person asked is'
                                    LOGICAL_AND_NT'person asked does not carry the noun and the person asked is'
                                        TEST_PROPOSITION_NT'person asked does not carry the noun'(test: [ NOT[ is('person asked', {<schema: CarrierOf(*1)>:'the noun'}) NOT] ])
                                        TEST_PROPOSITION_NT'the person asked is visible'(test: [ A30'visible'('the person asked') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The person asked] tries unsuccessfully to get [the nou'
                                INVOCATION_LIST_SAY_NT'the person asked'
                                    INVOCATION_NT'the person asked'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                INVOCATION_LIST_SAY_NT'" tries unsuccessfully to get "'
                                    INVOCATION_NT'" tries unsuccessfully to get "'
                                        RVALUE_CONTEXT_NT'" tries unsuccessfully to get "'
                                            CONSTANT_NT'" tries unsuccessfully to get "'-text
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'"."'
                                    INVOCATION_NT'"."'
                                        RVALUE_CONTEXT_NT'"."'
                                            CONSTANT_NT'"."'-text
                            CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is nowhere'
                        CONDITION_CONTEXT_NT'the noun is nowhere'
            RULE_NT'report someone filing'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The person asked] registers [the noun] and files it aw'
                        INVOCATION_LIST_SAY_NT'the person asked'
                            INVOCATION_NT'the person asked'
                                RVALUE_CONTEXT_NT'person asked'
                                    NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        INVOCATION_LIST_SAY_NT'" registers "'
                            INVOCATION_NT'" registers "'
                                RVALUE_CONTEXT_NT'" registers "'
                                    CONSTANT_NT'" registers "'-text
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'" and files it away."'
                            INVOCATION_NT'" and files it away."'
                                RVALUE_CONTEXT_NT'" and files it away."'
                                    CONSTANT_NT'" and files it away."'-text
            SENTENCE_NT'the shopper rules is a rulebook'
                VERB_NT'is'
                PROPER_NOUN_NT'shopper rules'
                COMMON_NOUN_NT'rulebook'
            RULE_NT'a shopper rule'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the current actor carries something ( called the problem '
                            INVOCATION_NT'if the current actor carries something ( called the problem '
                                CONDITION_CONTEXT_NT'current actor carries something ( called the problem )'
                                    TEST_PROPOSITION_NT'current actor carries something ( called the problem )'(test: [ Exists x : kind=thing_c(x) ^ called='problem'(thing)(x) ^ is('current actor', {<schema: CarrierOf(*1)>:x}) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'try the current actor resolving the problem'
                                INVOCATION_NT'try the current actor resolving the problem'
                                    RVALUE_CONTEXT_NT'current actor resolving the problem'
                                        CONSTANT_NT'current actor resolving the problem'-action
                            CODE_BLOCK_NT
            RULE_NT'a shopper rule'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the current actor is not in the pool hall and the air con'
                            INVOCATION_NT'if the current actor is not in the pool hall and the air con'
                                CONDITION_CONTEXT_NT'current actor is not in the pool hall and the air conditione'
                                    LOGICAL_AND_NT'current actor is not in the pool hall and the air conditione'
                                        TEST_PROPOSITION_NT'current actor is not in the pool hall'(test: [ NOT[ is('the pool hall', {<schema: ContainerOf(*1)>:'current actor'}) NOT] ])
                                        TEST_PROPOSITION_NT'the air conditioner is switched on'(test: [ A90'switched on'('the air conditioner') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'try the current actor approaching the pool hall'
                                INVOCATION_NT'try the current actor approaching the pool hall'
                                    RVALUE_CONTEXT_NT'current actor approaching the pool hall'
                                        CONSTANT_NT'current actor approaching the pool hall'-action
                        CODE_BLOCK_NT'otherwise'
                            INVOCATION_LIST_NT'let way be a random direction'
                                INVOCATION_NT'let way be a random direction'
                                    NEW_LOCAL_CONTEXT_NT'way'
                                        UNKNOWN_NT'way'
                                    RVALUE_CONTEXT_NT'a random direction'
                                        PHRASE_TO_DECIDE_VALUE_NT'a random direction'
                                            INVOCATION_LIST_NT'a random direction'
                                                INVOCATION_NT'a random direction'
                                                    RVALUE_CONTEXT_NT'direction'
                                                        CONSTANT_NT'direction'-description of directions
                            INVOCATION_LIST_NT'try the current actor going the way'
                                INVOCATION_NT'try the current actor going the way'
                                    RVALUE_CONTEXT_NT'current actor going the way'
                                        CONSTANT_NT'current actor going the way'-action
            RULE_NT'definition'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if it is outdoors'
                            INVOCATION_NT'if it is outdoors'
                                CONDITION_CONTEXT_NT'it is outdoors'
                                    TEST_PROPOSITION_NT'it is outdoors'(test: [ A128'outdoors'('it') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'no'
                                INVOCATION_NT'no'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if it is the pool hall and the air conditioner is switched o'
                            INVOCATION_NT'if it is the pool hall and the air conditioner is switched o'
                                CONDITION_CONTEXT_NT'it is the pool hall and the air conditioner is switched off'
                                    LOGICAL_AND_NT'it is the pool hall and the air conditioner is switched off'
                                        TEST_PROPOSITION_NT'it is the pool hall'(test: [ is('it', 'the pool hall') ])
                                        TEST_PROPOSITION_NT'the air conditioner is switched off'(test: [ A91'switched off'('the air conditioner') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'no'
                                INVOCATION_NT'no'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if it is protected by a door'
                            INVOCATION_NT'if it is protected by a door'
                                CONDITION_CONTEXT_NT'it is protected by a door'
                                    TEST_PROPOSITION_NT'it is protected by a door'(test: [ Exists x : kind=door(x) ^ protection(x, 'it') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'yes'
                                INVOCATION_NT'yes'
                    INVOCATION_LIST_NT'no'
                        INVOCATION_NT'no'
            SENTENCE_NT'protection relates a door ( called x ) to a room ( called y '
                VERB_NT'relates'
                PROPER_NOUN_NT'protection'
                PROPER_NOUN_NT'a door ( called x )'
                PROPER_NOUN_NT'a room ( called y ) when the front side of x is y or the bac'
            SENTENCE_NT'the verb to protect means the protection relation'
                VERB_NT'means'
                PROPER_NOUN_NT'to protect'
                PROPER_NOUN_NT'protection relation'
            SENTENCE_NT'ownership relates one person to various rooms'
                VERB_NT'relates'
                PROPER_NOUN_NT'ownership'
                PROPER_NOUN_NT'one person'
                PROPER_NOUN_NT'various rooms'
            SENTENCE_NT'the verb to own means the ownership relation'
                VERB_NT'means'
                PROPER_NOUN_NT'to own'
                PROPER_NOUN_NT'ownership relation'
            SENTENCE_NT'resolving is an action applying to one thing'
                VERB_NT'is'
                PROPER_NOUN_NT'resolving'
                PROPER_NOUN_NT'applying to one thing'
            SENTENCE_NT'an artwork is a kind of thing'
                VERB_NT'is'
                COMMON_NOUN_NT'artwork'
                KIND_NT'kind of thing'
                    COMMON_NOUN_NT'thing'
            RULE_NT'before printing the name of an artwork'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say italic type'
                        INVOCATION_LIST_SAY_NT'italic type'
                            INVOCATION_NT'italic type'
            RULE_NT'after printing the name of an artwork'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say roman type'
                        INVOCATION_LIST_SAY_NT'roman type'
                            INVOCATION_NT'roman type'
            SENTENCE_NT'an artwork can be submitted or reserved'
                VERB_NT'can be'
                COMMON_NOUN_NT'an artwork'
                PROPER_NOUN_NT'submitted or reserved'
                    AND_NT'or'
                        PROPER_NOUN_NT'submitted'
                        PROPER_NOUN_NT'reserved'
            SENTENCE_NT'a book is a kind of artwork'
                VERB_NT'is'
                COMMON_NOUN_NT'book'
                KIND_NT'kind of artwork'
                    COMMON_NOUN_NT'artwork'
            RULE_NT'before someone resolving a book when the person asked is not'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try the person asked approaching the public library'
                        INVOCATION_NT'try the person asked approaching the public library'
                            RVALUE_CONTEXT_NT'person asked approaching the public library'
                                CONSTANT_NT'person asked approaching the public library'-action
                    CODE_BLOCK_NT
            RULE_NT'carry out someone resolving a book'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'move the noun to the public library'
                        INVOCATION_NT'move the noun to the public library'
                            RVALUE_CONTEXT_NT'noun'
                                NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                            RVALUE_CONTEXT_NT'public library'
                                CONSTANT_NT'public library'-room(I_public_library)(I110'public library')
                    INVOCATION_LIST_NT'now the noun is submitted'
                        CONDITION_CONTEXT_NT'the noun is submitted'
            RULE_NT'report someone resolving a book'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The person asked] turns in [the noun]."'
                        INVOCATION_LIST_SAY_NT'the person asked'
                            INVOCATION_NT'the person asked'
                                RVALUE_CONTEXT_NT'person asked'
                                    NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        INVOCATION_LIST_SAY_NT'" turns in "'
                            INVOCATION_NT'" turns in "'
                                RVALUE_CONTEXT_NT'" turns in "'
                                    CONSTANT_NT'" turns in "'-text
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'"."'
                            INVOCATION_NT'"."'
                                RVALUE_CONTEXT_NT'"."'
                                    CONSTANT_NT'"."'-text
            RULE_NT'before listing contents'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'group books together'
                        INVOCATION_NT'group books together'
                            RVALUE_CONTEXT_NT'books'
                                CONSTANT_NT'books'-description of books
            RULE_NT'before grouping together books'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "books entitled "'
                        INVOCATION_LIST_SAY_NT'"books entitled "'
                            INVOCATION_NT'"books entitled "'
                                RVALUE_CONTEXT_NT'"books entitled "'
                                    CONSTANT_NT'"books entitled "'-text
            SENTENCE_NT'a stamped envelope is a kind of thing'
                VERB_NT'is'
                COMMON_NOUN_NT'stamped envelope'
                KIND_NT'kind of thing'
                    COMMON_NOUN_NT'thing'
            RULE_NT'before someone resolving a stamped envelope when the person '
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try the person asked approaching the post office'
                        INVOCATION_NT'try the person asked approaching the post office'
                            RVALUE_CONTEXT_NT'person asked approaching the post office'
                                CONSTANT_NT'person asked approaching the post office'-action
                    CODE_BLOCK_NT
            RULE_NT'carry out someone resolving a stamped envelope'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is nowhere'
                        CONDITION_CONTEXT_NT'the noun is nowhere'
            RULE_NT'report someone resolving a stamped envelope'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The person asked] slips [a noun] into the outgoing mai'
                        INVOCATION_LIST_SAY_NT'the person asked'
                            INVOCATION_NT'the person asked'
                                RVALUE_CONTEXT_NT'person asked'
                                    NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        INVOCATION_LIST_SAY_NT'" slips "'
                            INVOCATION_NT'" slips "'
                                RVALUE_CONTEXT_NT'" slips "'
                                    CONSTANT_NT'" slips "'-text
                        INVOCATION_LIST_SAY_NT'a noun'
                            INVOCATION_NT'a noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'" into the outgoing mail slot."'
                            INVOCATION_NT'" into the outgoing mail slot."'
                                RVALUE_CONTEXT_NT'" into the outgoing mail slot."'
                                    CONSTANT_NT'" into the outgoing mail slot."'-text
            RULE_NT'instead of someone resolving a stamped envelope when the per'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is visible'
                            INVOCATION_NT'if the person asked is visible'
                                CONDITION_CONTEXT_NT'person asked is visible'
                                    TEST_PROPOSITION_NT'person asked is visible'(test: [ A30'visible'('person asked') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The person asked] shoves into the mail slot [a list of'
                                INVOCATION_LIST_SAY_NT'the person asked'
                                    INVOCATION_NT'the person asked'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                INVOCATION_LIST_SAY_NT'" shoves into the mail slot "'
                                    INVOCATION_NT'" shoves into the mail slot "'
                                        RVALUE_CONTEXT_NT'" shoves into the mail slot "'
                                            CONSTANT_NT'" shoves into the mail slot "'-text
                                INVOCATION_LIST_SAY_NT'a list of stamped envelopes carried by the person asked'
                                    INVOCATION_NT'a list of stamped envelopes carried by the person asked'
                                        RVALUE_CONTEXT_NT'stamped envelopes carried by the person asked'
                                            CONSTANT_NT'stamped envelopes carried by the person asked'-description of stamped envelopes
                                INVOCATION_LIST_SAY_NT'"."'
                                    INVOCATION_NT'"."'
                                        RVALUE_CONTEXT_NT'"."'
                                            CONSTANT_NT'"."'-text
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat with item running through stamped envelopes carried b'
                            INVOCATION_NT'repeat with item running through stamped envelopes carried b'
                                NEW_LOCAL_CONTEXT_NT'item'
                                    UNKNOWN_NT'item'
                                RVALUE_CONTEXT_NT'stamped envelopes carried by the person asked'
                                    CONSTANT_NT'stamped envelopes carried by the person asked'-description of stamped envelopes
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the item is nowhere'
                                CONDITION_CONTEXT_NT'the item is nowhere'
            SENTENCE_NT'a dvd is a kind of artwork'
                VERB_NT'is'
                COMMON_NOUN_NT'dvd'
                KIND_NT'kind of artwork'
                    COMMON_NOUN_NT'artwork'
            RULE_NT'before someone resolving a dvd when the person asked is not '
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try the person asked approaching the rental store'
                        INVOCATION_NT'try the person asked approaching the rental store'
                            RVALUE_CONTEXT_NT'person asked approaching the rental store'
                                CONSTANT_NT'person asked approaching the rental store'-action
                    CODE_BLOCK_NT
            RULE_NT'carry out someone resolving a dvd'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is submitted'
                        CONDITION_CONTEXT_NT'the noun is submitted'
                    INVOCATION_LIST_NT'move the noun to the movie rental store'
                        INVOCATION_NT'move the noun to the movie rental store'
                            RVALUE_CONTEXT_NT'noun'
                                NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                            RVALUE_CONTEXT_NT'movie rental store'
                                CONSTANT_NT'movie rental store'-room(I_movie_rental_store)(I104'movie rental store')
            RULE_NT'report someone resolving a dvd'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The person asked] returns [the noun]."'
                        INVOCATION_LIST_SAY_NT'the person asked'
                            INVOCATION_NT'the person asked'
                                RVALUE_CONTEXT_NT'person asked'
                                    NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        INVOCATION_LIST_SAY_NT'" returns "'
                            INVOCATION_NT'" returns "'
                                RVALUE_CONTEXT_NT'" returns "'
                                    CONSTANT_NT'" returns "'-text
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'"."'
                            INVOCATION_NT'"."'
                                RVALUE_CONTEXT_NT'"."'
                                    CONSTANT_NT'"."'-text
            RULE_NT'instead of someone resolving a dvd when the person asked car'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is visible'
                            INVOCATION_NT'if the person asked is visible'
                                CONDITION_CONTEXT_NT'person asked is visible'
                                    TEST_PROPOSITION_NT'person asked is visible'(test: [ A30'visible'('person asked') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The person asked] turns in [a list of DVDs carried by '
                                INVOCATION_LIST_SAY_NT'the person asked'
                                    INVOCATION_NT'the person asked'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                INVOCATION_LIST_SAY_NT'" turns in "'
                                    INVOCATION_NT'" turns in "'
                                        RVALUE_CONTEXT_NT'" turns in "'
                                            CONSTANT_NT'" turns in "'-text
                                INVOCATION_LIST_SAY_NT'a list of dvds carried by the person asked'
                                    INVOCATION_NT'a list of dvds carried by the person asked'
                                        RVALUE_CONTEXT_NT'dvds carried by the person asked'
                                            CONSTANT_NT'dvds carried by the person asked'-description of dvds
                                INVOCATION_LIST_SAY_NT'"."'
                                    INVOCATION_NT'"."'
                                        RVALUE_CONTEXT_NT'"."'
                                            CONSTANT_NT'"."'-text
                    INVOCATION_LIST_NT'now every dvd carried by the person asked is submitted'
                        CONDITION_CONTEXT_NT'every dvd carried by the person asked is submitted'
                    INVOCATION_LIST_NT'now every dvd carried by the person asked is in the location'
                        CONDITION_CONTEXT_NT'every dvd carried by the person asked is in the location of '
            RULE_NT'before listing contents'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'group dvds together'
                        INVOCATION_NT'group dvds together'
                            RVALUE_CONTEXT_NT'dvds'
                                CONSTANT_NT'dvds'-description of dvds
            RULE_NT'before grouping together dvds'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "DVDs of "'
                        INVOCATION_LIST_SAY_NT'"DVDs of "'
                            INVOCATION_NT'"DVDs of "'
                                RVALUE_CONTEXT_NT'"DVDs of "'
                                    CONSTANT_NT'"DVDs of "'-text
            SENTENCE_NT'approaching is an action applying to one thing'
                VERB_NT'is'
                PROPER_NOUN_NT'approaching'
                PROPER_NOUN_NT'applying to one thing'
            RULE_NT'carry out someone approaching'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let the way be the best route from the location of the perso'
                        INVOCATION_NT'let the way be the best route from the location of the perso'
                            NEW_LOCAL_CONTEXT_NT'way'
                                UNKNOWN_NT'way'
                            RVALUE_CONTEXT_NT'best route from the location of the person asked to the noun'
                                PHRASE_TO_DECIDE_VALUE_NT'best route from the location of the person asked to the noun'
                                    INVOCATION_LIST_NT'best route from the location of the person asked to the noun'
                                        INVOCATION_NT'best route from the location of the person asked to the noun'
                                            RVALUE_CONTEXT_NT'location of the person asked'
                                                PHRASE_TO_DECIDE_VALUE_NT'location of the person asked'
                                                    INVOCATION_LIST_NT'location of the person asked'
                                                        INVOCATION_NT'location of the person asked'
                                                            RVALUE_CONTEXT_NT'person asked'
                                                                NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                            RVALUE_CONTEXT_NT'noun'
                                                NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the way is a direction'
                            INVOCATION_NT'if the way is a direction'
                                CONDITION_CONTEXT_NT'way is a direction'
                                    TEST_PROPOSITION_NT'way is a direction'(test: [ kind=direction('way') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'try the person asked going the way'
                                INVOCATION_NT'try the person asked going the way'
                                    RVALUE_CONTEXT_NT'person asked going the way'
                                        CONSTANT_NT'person asked going the way'-action
                        CODE_BLOCK_NT'otherwise'
                            INVOCATION_LIST_NT'stop the action'
                                INVOCATION_NT'stop the action'
            SENTENCE_NT'a coupon is a kind of thing'
                VERB_NT'is'
                COMMON_NOUN_NT'coupon'
                KIND_NT'kind of thing'
                    COMMON_NOUN_NT'thing'
            RULE_NT'carry out someone resolving a coupon'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try the person asked giving the noun to vanessa'
                        INVOCATION_NT'try the person asked giving the noun to vanessa'
                            RVALUE_CONTEXT_NT'person asked giving the noun to vanessa'
                                CONSTANT_NT'person asked giving the noun to vanessa'-action
            SENTENCE_NT'the block giving rule is not listed in any rulebook'
                VERB_NT'is'
                PROPER_NOUN_NT'the block giving rule'
                PROPER_NOUN_NT'in any rulebook'
            RULE_NT'check giving something to someone ( this is the block player'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'abide by the block giving rule'
                        INVOCATION_NT'abide by the block giving rule'
                            RVALUE_CONTEXT_NT'block giving rule'
                                CONSTANT_NT'block giving rule'-rule
            RULE_NT'before someone resolving a coupon when the person asked is n'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try the person asked approaching cold comfort'
                        INVOCATION_NT'try the person asked approaching cold comfort'
                            RVALUE_CONTEXT_NT'person asked approaching cold comfort'
                                CONSTANT_NT'person asked approaching cold comfort'-action
                    CODE_BLOCK_NT
            RULE_NT'after someone giving a coupon to vanessa'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let the reward be a random ice cream cone'
                        INVOCATION_NT'let the reward be a random ice cream cone'
                            NEW_LOCAL_CONTEXT_NT'reward'
                                UNKNOWN_NT'reward'
                            RVALUE_CONTEXT_NT'a random ice cream cone'
                                PHRASE_TO_DECIDE_VALUE_NT'a random ice cream cone'
                                    INVOCATION_LIST_NT'a random ice cream cone'
                                        INVOCATION_NT'a random ice cream cone'
                                            RVALUE_CONTEXT_NT'ice cream cone'
                                                CONSTANT_NT'ice cream cone'-description of ice cream cones
                    INVOCATION_LIST_NT'let the new flavor be a random infection color'
                        INVOCATION_NT'let the new flavor be a random infection color'
                            NEW_LOCAL_CONTEXT_NT'new flavor'
                                UNKNOWN_NT'new flavor'
                            RVALUE_CONTEXT_NT'a random infection color'
                                PHRASE_TO_DECIDE_VALUE_NT'a random infection color'
                                    INVOCATION_LIST_NT'a random infection color'
                                        INVOCATION_NT'a random infection color'
                                            RVALUE_CONTEXT_NT'infection color'
                                                CONSTANT_NT'infection color'-description of infection colors
                    INVOCATION_LIST_NT'now the infection color of the reward is the new flavor'
                        CONDITION_CONTEXT_NT'the infection color of the reward is the new flavor'
                    INVOCATION_LIST_NT'move the reward to the person asked'
                        INVOCATION_NT'move the reward to the person asked'
                            RVALUE_CONTEXT_NT'reward'
                                LOCAL_VARIABLE_NT'reward'(tmp_0;thing)
                            RVALUE_CONTEXT_NT'person asked'
                                NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                    INVOCATION_LIST_NT'now the noun is nowhere'
                        CONDITION_CONTEXT_NT'the noun is nowhere'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if vanessa is visible'
                            INVOCATION_NT'if vanessa is visible'
                                CONDITION_CONTEXT_NT'vanessa is visible'
                                    TEST_PROPOSITION_NT'vanessa is visible'(test: [ A30'visible'('vanessa') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The person asked] trades in [the noun] and receives [a'
                                INVOCATION_LIST_SAY_NT'the person asked'
                                    INVOCATION_NT'the person asked'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                INVOCATION_LIST_SAY_NT'" trades in "'
                                    INVOCATION_NT'" trades in "'
                                        RVALUE_CONTEXT_NT'" trades in "'
                                            CONSTANT_NT'" trades in "'-text
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'" and receives "'
                                    INVOCATION_NT'" and receives "'
                                        RVALUE_CONTEXT_NT'" and receives "'
                                            CONSTANT_NT'" and receives "'-text
                                INVOCATION_LIST_SAY_NT'a reward'
                                    INVOCATION_NT'a reward'
                                        RVALUE_CONTEXT_NT'reward'
                                            LOCAL_VARIABLE_NT'reward'(tmp_0;thing)
                                INVOCATION_LIST_SAY_NT'" from Vanessa."'
                                    INVOCATION_NT'" from Vanessa."'
                                        RVALUE_CONTEXT_NT'" from Vanessa."'
                                            CONSTANT_NT'" from Vanessa."'-text
            SENTENCE_NT'infection color is a kind of value'
                VERB_NT'is'
                COMMON_NOUN_NT'infection color'
                KIND_NT'kind of value'
                    COMMON_NOUN_NT'value'
            SENTENCE_NT'the infection colors are french vanilla , whole-bean vanilla'
                VERB_NT'are'
                COMMON_NOUN_NT'infection colors'
                AND_NT','
                    PROPER_NOUN_NT'french vanilla'
                    AND_NT','
                        PROPER_NOUN_NT'whole-bean vanilla'
                        AND_NT','
                            PROPER_NOUN_NT'mint'
                            AND_NT','
                                PROPER_NOUN_NT'chocolate'
                                AND_NT','
                                    PROPER_NOUN_NT'dark chocolate'
                                    AND_NT','
                                        PROPER_NOUN_NT'chocolate chip'
                                        AND_NT','
                                            PROPER_NOUN_NT'chocolate fudge'
                                            AND_NT','
                                                PROPER_NOUN_NT'mint chocolate chip'
                                                AND_NT','
                                                    PROPER_NOUN_NT'chocolate chocolate chip'
                                                    AND_NT','
                                                        PROPER_NOUN_NT'triple chocolate'
                                                        AND_NT','
                                                            PROPER_NOUN_NT'white chocolate'
                                                            AND_NT','
                                                                PROPER_NOUN_NT'white chocolate chip'
                                                                AND_NT','
                                                                    PROPER_NOUN_NT'aztec cocoa-chili'
                                                                    AND_NT','
                                                                        PROPER_NOUN_NT'raspberry ripple'
                                                                        AND_NT','
                                                                            PROPER_NOUN_NT'neapolitan'
                                                                            AND_NT','
                                                                                PROPER_NOUN_NT'rum raisin'
                                                                                AND_NT','
                                                                                    PROPER_NOUN_NT'dulce de leche'
                                                                                    AND_NT','
                                                                                        PROPER_NOUN_NT'strawberry chunk'
                                                                                        AND_NT','
                                                                                            PROPER_NOUN_NT'rocky road'
                                                                                            AND_NT','
                                                                                                PROPER_NOUN_NT'blackberry sorbet'
                                                                                                AND_NT','
                                                                                                    PROPER_NOUN_NT'lemon sherbet'
                                                                                                    AND_NT','
                                                                                                        PROPER_NOUN_NT'lime ice'
                                                                                                        AND_NT','
                                                                                                            PROPER_NOUN_NT'caramel swirl'
                                                                                                            AND_NT','
                                                                                                                PROPER_NOUN_NT'mango'
                                                                                                                AND_NT','
                                                                                                                    PROPER_NOUN_NT'saffron silk'
                                                                                                                    PROPER_NOUN_NT'cookie dough cream'
            RULE_NT'to say list of flavors'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let current color be french vanilla'
                        INVOCATION_NT'let current color be french vanilla'
                            NEW_LOCAL_CONTEXT_NT'current color'
                                UNKNOWN_NT'current color'
                            RVALUE_CONTEXT_NT'french vanilla'
                                CONSTANT_NT'french vanilla'-infection color(I_french_vanilla)
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'while current color is not cookie dough cream'
                            INVOCATION_NT'while current color is not cookie dough cream'
                                CONDITION_CONTEXT_NT'current color is not cookie dough cream'
                                    TEST_PROPOSITION_NT'current color is not cookie dough cream'(test: [ NOT[ is('current color', 'cookie dough cream') NOT] ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[current color], "'
                                INVOCATION_LIST_SAY_NT'current color'
                                    INVOCATION_NT'current color'
                                        RVALUE_CONTEXT_NT'current color'
                                            LOCAL_VARIABLE_NT'current color'(tmp_0;infection color)
                                INVOCATION_LIST_SAY_NT'", "'
                                    INVOCATION_NT'", "'
                                        RVALUE_CONTEXT_NT'", "'
                                            CONSTANT_NT'", "'-text
                            INVOCATION_LIST_NT'now current color is the infection color after the current c'
                                CONDITION_CONTEXT_NT'current color is the infection color after the current color'
                    CODE_BLOCK_NT'say "and [current color]"'
                        INVOCATION_LIST_SAY_NT'"and "'
                            INVOCATION_NT'"and "'
                                RVALUE_CONTEXT_NT'"and "'
                                    CONSTANT_NT'"and "'-text
                        INVOCATION_LIST_SAY_NT'current color'
                            INVOCATION_NT'current color'
                                RVALUE_CONTEXT_NT'current color'
                                    LOCAL_VARIABLE_NT'current color'(tmp_0;infection color)
            SENTENCE_NT'understand "ask vanessa for [flavored ice cream]" as buying '
                VERB_NT'understand'
                PROPER_NOUN_NT'"ask vanessa for [flavored ice cream]"'
                PROPER_NOUN_NT'buying the flavor'
            SENTENCE_NT'understand "buy [flavored ice cream]" as buying the flavor'
                VERB_NT'understand'
                PROPER_NOUN_NT'"buy [flavored ice cream]"'
                PROPER_NOUN_NT'buying the flavor'
            SENTENCE_NT'buying the flavor is an action applying to one infection col'
                VERB_NT'is'
                PROPER_NOUN_NT'buying the flavor'
                PROPER_NOUN_NT'applying to one infection color'
            RULE_NT'check buying the flavor'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'unless the player can see vanessa'
                            INVOCATION_NT'unless the player can see vanessa'
                                CONDITION_CONTEXT_NT'player can see vanessa'
                                    TEST_PROPOSITION_NT'player can see vanessa'(test: [ can-see('player', 'vanessa') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "It would help if you were in the presence of an ice cre'
                                INVOCATION_LIST_SAY_NT'"It would help if you were in the presence of an ice cream s'
                                    INVOCATION_NT'"It would help if you were in the presence of an ice cream s'
                                        RVALUE_CONTEXT_NT'"It would help if you were in the presence of an ice cream s'
                                            CONSTANT_NT'"It would help if you were in the presence of an ice cream s'-text
                            CODE_BLOCK_NT
            RULE_NT'carry out buying the flavor'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "'Do you have a coupon?' Vanessa demands. You admit you '
                        INVOCATION_LIST_SAY_NT'"'Do you have a coupon?' Vanessa demands. You admit you do n'
                            INVOCATION_NT'"'Do you have a coupon?' Vanessa demands. You admit you do n'
                                RVALUE_CONTEXT_NT'"'Do you have a coupon?' Vanessa demands. You admit you do n'
                                    CONSTANT_NT'"'Do you have a coupon?' Vanessa demands. You admit you do n'-text
                        INVOCATION_LIST_SAY_NT'infection color understood'
                            INVOCATION_NT'infection color understood'
                                RVALUE_CONTEXT_NT'infection color understood'
                                    NONLOCAL_VARIABLE_NT'infection color understood'('infection color understood'(var)[infection color])
                        INVOCATION_LIST_SAY_NT'" for you!'"'
                            INVOCATION_NT'" for you!'"'
                                RVALUE_CONTEXT_NT'" for you!'"'
                                    CONSTANT_NT'" for you!'"'-text
            SENTENCE_NT'understand "ice cream" or "cream" or "ice" or "sherbet" or "'
                VERB_NT'understand'
                PROPER_NOUN_NT'"ice cream" or "cream" or "ice" or "sherbet" or "sorbet"'
                PROPER_NOUN_NT'"[ice cream]"'
            SENTENCE_NT'understand "[infection color]" or "[infection color] [ice cr'
                VERB_NT'understand'
                PROPER_NOUN_NT'"[infection color]" or "[infection color] [ice cream]"'
                PROPER_NOUN_NT'"[flavored ice cream]"'
            SENTENCE_NT'an ice cream cone is a kind of thing'
                VERB_NT'is'
                COMMON_NOUN_NT'ice cream cone'
                KIND_NT'kind of thing'
                    COMMON_NOUN_NT'thing'
            SENTENCE_NT'an ice cream cone is always edible'
                VERB_NT'is always'
                COMMON_NOUN_NT'ice cream cone'
                ADJECTIVE_NT'edible'
            SENTENCE_NT'an ice cream cone has an infection color'
                VERB_NT'has'
                COMMON_NOUN_NT'ice cream cone'
                ALLOWED_NT
                    PROPER_NOUN_NT'infection color'
            SENTENCE_NT'an ice cream cone can be half-eaten or fresh'
                VERB_NT'can be'
                COMMON_NOUN_NT'an ice cream cone'
                PROPER_NOUN_NT'half-eaten or fresh'
                    AND_NT'or'
                        PROPER_NOUN_NT'half-eaten'
                        PROPER_NOUN_NT'fresh'
            SENTENCE_NT'understand the infection color property as referring to an i'
                VERB_NT'understand'
                PROPER_NOUN_NT'the infection color property'
                PROPER_NOUN_NT'referring to an ice cream cone'
            RULE_NT'carry out someone resolving an ice cream cone'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try the person asked eating the noun'
                        INVOCATION_NT'try the person asked eating the noun'
                            RVALUE_CONTEXT_NT'person asked eating the noun'
                                CONSTANT_NT'person asked eating the noun'-action
                    CODE_BLOCK_NT
            RULE_NT'instead of someone eating a fresh ice cream cone'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is half-eaten'
                        CONDITION_CONTEXT_NT'the noun is half-eaten'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is visible'
                            INVOCATION_NT'if the person asked is visible'
                                CONDITION_CONTEXT_NT'person asked is visible'
                                    TEST_PROPOSITION_NT'person asked is visible'(test: [ A30'visible'('person asked') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The person asked] licks [the noun]."'
                                INVOCATION_LIST_SAY_NT'the person asked'
                                    INVOCATION_NT'the person asked'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                INVOCATION_LIST_SAY_NT'" licks "'
                                    INVOCATION_NT'" licks "'
                                        RVALUE_CONTEXT_NT'" licks "'
                                            CONSTANT_NT'" licks "'-text
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'"."'
                                    INVOCATION_NT'"."'
                                        RVALUE_CONTEXT_NT'"."'
                                            CONSTANT_NT'"."'-text
            RULE_NT'report someone eating an ice cream cone'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The person asked] pops the end of [the noun] into [if '
                        INVOCATION_LIST_SAY_NT'the person asked'
                            INVOCATION_NT'the person asked'
                                RVALUE_CONTEXT_NT'person asked'
                                    NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        INVOCATION_LIST_SAY_NT'" pops the end of "'
                            INVOCATION_NT'" pops the end of "'
                                RVALUE_CONTEXT_NT'" pops the end of "'
                                    CONSTANT_NT'" pops the end of "'-text
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'" into "'
                            INVOCATION_NT'" into "'
                                RVALUE_CONTEXT_NT'" into "'
                                    CONSTANT_NT'" into "'-text
                        INVOCATION_LIST_SAY_NT'if the person asked is female'
                            INVOCATION_NT'if the person asked is female'
                                CONDITION_CONTEXT_NT'person asked is female'
                                    TEST_PROPOSITION_NT'person asked is female'(test: [ A87'female'('person asked') ])
                        INVOCATION_LIST_SAY_NT'"her"'
                            INVOCATION_NT'"her"'
                                RVALUE_CONTEXT_NT'"her"'
                                    CONSTANT_NT'"her"'-text
                        INVOCATION_LIST_SAY_NT'otherwise'
                            INVOCATION_NT'otherwise'
                        INVOCATION_LIST_SAY_NT'"his"'
                            INVOCATION_NT'"his"'
                                RVALUE_CONTEXT_NT'"his"'
                                    CONSTANT_NT'"his"'-text
                        INVOCATION_LIST_SAY_NT'end if'
                            INVOCATION_NT'end if'
                        INVOCATION_LIST_SAY_NT'" mouth and swallows."'
                            INVOCATION_NT'" mouth and swallows."'
                                RVALUE_CONTEXT_NT'" mouth and swallows."'
                                    CONSTANT_NT'" mouth and swallows."'-text
                    CODE_BLOCK_NT
            RULE_NT'before printing the name of an ice cream cone'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[if half-eaten]half-eaten [end if][infection color] "'
                        INVOCATION_LIST_SAY_NT'if half-eaten'
                            INVOCATION_NT'if half-eaten'
                                CONDITION_CONTEXT_NT'half-eaten'
                                    TEST_PROPOSITION_NT'half-eaten'(test: [ A123'half-eaten'(CONSTANT_NT-object(-self-)) ])
                        INVOCATION_LIST_SAY_NT'"half-eaten "'
                            INVOCATION_NT'"half-eaten "'
                                RVALUE_CONTEXT_NT'"half-eaten "'
                                    CONSTANT_NT'"half-eaten "'-text
                        INVOCATION_LIST_SAY_NT'end if'
                            INVOCATION_NT'end if'
                        INVOCATION_LIST_SAY_NT'infection color'
                            INVOCATION_NT'infection color'
                                RVALUE_CONTEXT_NT'infection color'
                                    PROPERTY_VALUE_NT'infection color'
                                        CONSTANT_NT'infection color'-infection colors valued property
                                        CONSTANT_NT-object(-self-)
                        INVOCATION_LIST_SAY_NT'" "'
                            INVOCATION_NT'" "'
                                RVALUE_CONTEXT_NT'" "'
                                    CONSTANT_NT'" "'-text
        HEADING_NT'section 2 - infection rules' (level 5)
            RULE_NT'this is the infection rule'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if an infected person ( called typhoid mary ) can see a clea'
                            INVOCATION_NT'if an infected person ( called typhoid mary ) can see a clea'
                                CONDITION_CONTEXT_NT'an infected person ( called typhoid mary ) can see a clean p'
                                    LOGICAL_AND_NT'an infected person ( called typhoid mary ) can see a clean p'
                                        TEST_PROPOSITION_NT'an infected person ( called typhoid mary ) can see a clean p'(test: [ Exists x : kind=person(x) ^ A125'infected'(x) ^ called='typhoid mary'(person)(x) ^ Exists y : kind=person(y) ^ A126'clean'(y) ^ called='random bystander'(person)(y) ^ can-see(x, y) ])
                                        TEST_VALUE_NT'a random chance of 1 in 3 succeeds'
                                            PHRASE_TO_DECIDE_VALUE_NT'a random chance of 1 in 3 succeeds'
                                                INVOCATION_LIST_NT'a random chance of 1 in 3 succeeds'
                                                    INVOCATION_NT'a random chance of 1 in 3 succeeds'
                                                        RVALUE_CONTEXT_NT'1'
                                                            CONSTANT_NT'1'-number
                                                        RVALUE_CONTEXT_NT'3'
                                                            CONSTANT_NT'3'-number
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'try typhoid mary sneezing on the random bystander'
                                INVOCATION_NT'try typhoid mary sneezing on the random bystander'
                                    RVALUE_CONTEXT_NT'typhoid mary sneezing on the random bystander'
                                        CONSTANT_NT'typhoid mary sneezing on the random bystander'-action
            SENTENCE_NT'a person can be infected or clean'
                VERB_NT'can be'
                COMMON_NOUN_NT'a person'
                PROPER_NOUN_NT'infected or clean'
                    AND_NT'or'
                        PROPER_NOUN_NT'infected'
                        PROPER_NOUN_NT'clean'
            SENTENCE_NT'a person has an infection color'
                VERB_NT'has'
                COMMON_NOUN_NT'person'
                ALLOWED_NT
                    PROPER_NOUN_NT'infection color'
            RULE_NT'every turn'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the player is infected'
                            INVOCATION_NT'if the player is infected'
                                CONDITION_CONTEXT_NT'player is infected'
                                    TEST_PROPOSITION_NT'player is infected'(test: [ A125'infected'('player') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "You feel itchy."'
                                INVOCATION_LIST_SAY_NT'"You feel itchy."'
                                    INVOCATION_NT'"You feel itchy."'
                                        RVALUE_CONTEXT_NT'"You feel itchy."'
                                            CONSTANT_NT'"You feel itchy."'-text
            RULE_NT'definition'
            RULE_NT'definition'
            RULE_NT'when play begins'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now right hand status line is "Sick: [number of infected peo'
                        CONDITION_CONTEXT_NT'right hand status line is "Sick: [number of infected people]'
            RULE_NT'every turn'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if every person is infected'
                            INVOCATION_NT'if every person is infected'
                                CONDITION_CONTEXT_NT'every person is infected'
                                    TEST_PROPOSITION_NT'every person is infected'(test: [ ForAll x IN[ kind=person(x) IN] : A125'infected'(x) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'end the story saying "Everyone succumbs"'
                                INVOCATION_NT'end the story saying "Everyone succumbs"'
                                    RVALUE_CONTEXT_NT'"Everyone succumbs"'
                                        CONSTANT_NT'"Everyone succumbs"'-text
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if every person is clean'
                            INVOCATION_NT'if every person is clean'
                                CONDITION_CONTEXT_NT'every person is clean'
                                    TEST_PROPOSITION_NT'every person is clean'(test: [ ForAll x IN[ kind=person(x) IN] : A126'clean'(x) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'end the story finally saying "The Syndrome is eradicated"'
                                INVOCATION_NT'end the story finally saying "The Syndrome is eradicated"'
                                    RVALUE_CONTEXT_NT'"The Syndrome is eradicated"'
                                        CONSTANT_NT'"The Syndrome is eradicated"'-text
            SENTENCE_NT'understand "sneeze on [something]" as sneezing on'
                VERB_NT'understand'
                PROPER_NOUN_NT'"sneeze on [something]"'
                PROPER_NOUN_NT'sneezing on'
            SENTENCE_NT'sneezing on is an action applying to one thing'
                VERB_NT'is'
                PROPER_NOUN_NT'sneezing on'
                PROPER_NOUN_NT'applying to one thing'
            RULE_NT'check sneezing on'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the player is clean'
                            INVOCATION_NT'if the player is clean'
                                CONDITION_CONTEXT_NT'player is clean'
                                    TEST_PROPOSITION_NT'player is clean'(test: [ A126'clean'('player') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "You're not sickly."'
                                INVOCATION_LIST_SAY_NT'"You're not sickly."'
                                    INVOCATION_NT'"You're not sickly."'
                                        RVALUE_CONTEXT_NT'"You're not sickly."'
                                            CONSTANT_NT'"You're not sickly."'-text
                            CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the noun is the player'
                            INVOCATION_NT'if the noun is the player'
                                CONDITION_CONTEXT_NT'noun is the player'
                                    TEST_PROPOSITION_NT'noun is the player'(test: [ is('noun', 'the player') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "Ew."'
                                INVOCATION_LIST_SAY_NT'"Ew."'
                                    INVOCATION_NT'"Ew."'
                                        RVALUE_CONTEXT_NT'"Ew."'
                                            CONSTANT_NT'"Ew."'-text
                            CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the noun is not a person'
                            INVOCATION_NT'if the noun is not a person'
                                CONDITION_CONTEXT_NT'noun is not a person'
                                    TEST_PROPOSITION_NT'noun is not a person'(test: [ NOT[ kind=person('noun') NOT] ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The noun] cannot be infected."'
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'" cannot be infected."'
                                    INVOCATION_NT'" cannot be infected."'
                                        RVALUE_CONTEXT_NT'" cannot be infected."'
                                            CONSTANT_NT'" cannot be infected."'-text
                            CODE_BLOCK_NT
            RULE_NT'carry out sneezing on'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is infected'
                        CONDITION_CONTEXT_NT'the noun is infected'
                    INVOCATION_LIST_NT'now the infection color of the noun is a random infection co'
                        CONDITION_CONTEXT_NT'the infection color of the noun is a random infection color'
            RULE_NT'carry out someone sneezing on'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is infected'
                        CONDITION_CONTEXT_NT'the noun is infected'
                    INVOCATION_LIST_NT'now the infection color of the noun is a random infection co'
                        CONDITION_CONTEXT_NT'the infection color of the noun is a random infection color'
            RULE_NT'report sneezing on'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "Unable to control yourself, you sneeze on [noun]."'
                        INVOCATION_LIST_SAY_NT'"Unable to control yourself, you sneeze on "'
                            INVOCATION_NT'"Unable to control yourself, you sneeze on "'
                                RVALUE_CONTEXT_NT'"Unable to control yourself, you sneeze on "'
                                    CONSTANT_NT'"Unable to control yourself, you sneeze on "'-text
                        INVOCATION_LIST_SAY_NT'noun'
                            INVOCATION_NT'noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'"."'
                            INVOCATION_NT'"."'
                                RVALUE_CONTEXT_NT'"."'
                                    CONSTANT_NT'"."'-text
            RULE_NT'report someone sneezing on'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The person asked] sneezes on [if the noun is the playe'
                        INVOCATION_LIST_SAY_NT'the person asked'
                            INVOCATION_NT'the person asked'
                                RVALUE_CONTEXT_NT'person asked'
                                    NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        INVOCATION_LIST_SAY_NT'" sneezes on "'
                            INVOCATION_NT'" sneezes on "'
                                RVALUE_CONTEXT_NT'" sneezes on "'
                                    CONSTANT_NT'" sneezes on "'-text
                        INVOCATION_LIST_SAY_NT'if the noun is the player'
                            INVOCATION_NT'if the noun is the player'
                                CONDITION_CONTEXT_NT'noun is the player'
                                    TEST_PROPOSITION_NT'noun is the player'(test: [ is('noun', 'the player') ])
                        INVOCATION_LIST_SAY_NT'"you"'
                            INVOCATION_NT'"you"'
                                RVALUE_CONTEXT_NT'"you"'
                                    CONSTANT_NT'"you"'-text
                        INVOCATION_LIST_SAY_NT'otherwise'
                            INVOCATION_NT'otherwise'
                        INVOCATION_LIST_SAY_NT'noun'
                            INVOCATION_NT'noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'end if'
                            INVOCATION_NT'end if'
                        INVOCATION_LIST_SAY_NT'"!"'
                            INVOCATION_NT'"!"'
                                RVALUE_CONTEXT_NT'"!"'
                                    CONSTANT_NT'"!"'-text
            SENTENCE_NT'understand "inject [someone] with [something]" as injecting '
                VERB_NT'understand'
                PROPER_NOUN_NT'"inject [someone] with [something]"'
                PROPER_NOUN_NT'injecting it with'
            SENTENCE_NT'understand "inject [someone] with [syringe]" as injecting it'
                VERB_NT'understand'
                PROPER_NOUN_NT'"inject [someone] with [syringe]"'
                PROPER_NOUN_NT'injecting it with'
            SENTENCE_NT'understand "use [syringe] on [someone]" as injecting it with'
                VERB_NT'understand'
                PROPER_NOUN_NT'"use [syringe] on [someone]"'
                PROPER_NOUN_NT'injecting it with'
            SENTENCE_NT'understand the commands innoculate and vaccinate as inject'
                VERB_NT'understand'
                PROPER_NOUN_NT'the commands innoculate and vaccinate'
                PROPER_NOUN_NT'inject'
            SENTENCE_NT'injecting it with is an action applying to two things'
                VERB_NT'is'
                PROPER_NOUN_NT'injecting it with'
                PROPER_NOUN_NT'applying to two things'
            RULE_NT'check injecting it with'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the second noun is not the syringe'
                            INVOCATION_NT'if the second noun is not the syringe'
                                CONDITION_CONTEXT_NT'second noun is not the syringe'
                                    TEST_PROPOSITION_NT'second noun is not the syringe'(test: [ NOT[ is('second noun', 'the syringe') NOT] ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The second noun] cannot inject anything."'
                                INVOCATION_LIST_SAY_NT'the second noun'
                                    INVOCATION_NT'the second noun'
                                        RVALUE_CONTEXT_NT'second noun'
                                            NONLOCAL_VARIABLE_NT'second noun'('second noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'" cannot inject anything."'
                                    INVOCATION_NT'" cannot inject anything."'
                                        RVALUE_CONTEXT_NT'" cannot inject anything."'
                                            CONSTANT_NT'" cannot inject anything."'-text
                            CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the noun is clean'
                            INVOCATION_NT'if the noun is clean'
                                CONDITION_CONTEXT_NT'noun is clean'
                                    TEST_PROPOSITION_NT'noun is clean'(test: [ A126'clean'('noun') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the noun is the player'
                                    INVOCATION_NT'if the noun is the player'
                                        CONDITION_CONTEXT_NT'noun is the player'
                                            TEST_PROPOSITION_NT'noun is the player'(test: [ is('noun', 'the player') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "You're not infected yet."'
                                        INVOCATION_LIST_SAY_NT'"You're not infected yet."'
                                            INVOCATION_NT'"You're not infected yet."'
                                                RVALUE_CONTEXT_NT'"You're not infected yet."'
                                                    CONSTANT_NT'"You're not infected yet."'-text
                                    CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The noun] is not infected, and the syringe contains a '
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'" is not infected, and the syringe contains a cure, not a va'
                                    INVOCATION_NT'" is not infected, and the syringe contains a cure, not a va'
                                        RVALUE_CONTEXT_NT'" is not infected, and the syringe contains a cure, not a va'
                                            CONSTANT_NT'" is not infected, and the syringe contains a cure, not a va'-text
                            CODE_BLOCK_NT
            RULE_NT'carry out injecting it with'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is clean'
                        CONDITION_CONTEXT_NT'the noun is clean'
            RULE_NT'after injecting the player with something'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "You inject yourself, wincing at the sting. But the itch'
                        INVOCATION_LIST_SAY_NT'"You inject yourself, wincing at the sting. But the itching '
                            INVOCATION_NT'"You inject yourself, wincing at the sting. But the itching '
                                RVALUE_CONTEXT_NT'"You inject yourself, wincing at the sting. But the itching '
                                    CONSTANT_NT'"You inject yourself, wincing at the sting. But the itching '-text
            RULE_NT'report injecting it with'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "You inject [the noun], who is now cured (but could easi'
                        INVOCATION_LIST_SAY_NT'"You inject "'
                            INVOCATION_NT'"You inject "'
                                RVALUE_CONTEXT_NT'"You inject "'
                                    CONSTANT_NT'"You inject "'-text
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'", who is now cured (but could easily be reinfected)."'
                            INVOCATION_NT'", who is now cured (but could easily be reinfected)."'
                                RVALUE_CONTEXT_NT'", who is now cured (but could easily be reinfected)."'
                                    CONSTANT_NT'", who is now cured (but could easily be reinfected)."'-text
        HEADING_NT'section 3 - geography' (level 5)
            INCLUSION_NT'include locksmith by emily short'
                HEADING_NT'version 12 of locksmith by emily short begins here' (level 0)
                    BEGINHERE_NT'version 12 of locksmith by emily short'
                    SENTENCE_NT'Implicit handling of doors and containers so that lock manip'
                    SENTENCE_NT'use authorial modesty'
                        VERB_NT'use'
                        PROPER_NOUN_NT'authorial modesty'
                    SENTENCE_NT'to open is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to open'
                    SENTENCE_NT'to lack is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to lack'
                    SENTENCE_NT'to fit is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to fit'
                    SENTENCE_NT'to lock is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to lock'
                    SENTENCE_NT'to unlock is a verb'
                        VERB_NT'is'
                        PROPER_NOUN_NT'to unlock'
                    HEADING_NT'volume 1 - automatic locking and unlocking with necessary ac' (level 1)
                        SENTENCE_NT'use sequential action translates as (-  Constant SEQUENTIAL_'
                            VERB_NT'translates as'
                            PROPER_NOUN_NT'sequential action'
                            PROPER_NOUN_NT'(-  Constant SEQUENTIAL_ACTION; '
                        RULE_NT'before going through a closed door ( called the blocking doo'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if sequential action option is active'
                                        INVOCATION_NT'if sequential action option is active'
                                            CONDITION_CONTEXT_NT'sequential action option is active'
                                                TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'try opening the blocking door'
                                            INVOCATION_NT'try opening the blocking door'
                                                RVALUE_CONTEXT_NT'opening the blocking door'
                                                    CONSTANT_NT'opening the blocking door'-action
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "(first opening [the blocking door])[command clarificati'
                                            INVOCATION_LIST_SAY_NT'"(first opening [the blocking door])[command clarification b'
                                                INVOCATION_NT'"(first opening [the blocking door])[command clarification b'
                                                    RVALUE_CONTEXT_NT'"(first opening [the blocking door])[command clarification b'
                                                        CONSTANT_NT'"(first opening [the blocking door])[command clarification b'-text
                                        INVOCATION_LIST_NT'silently try opening the blocking door'
                                            INVOCATION_NT'silently try opening the blocking door'
                                                RVALUE_CONTEXT_NT'opening the blocking door'
                                                    CONSTANT_NT'opening the blocking door'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the blocking door is closed'
                                        INVOCATION_NT'if the blocking door is closed'
                                            CONDITION_CONTEXT_NT'blocking door is closed'
                                                TEST_PROPOSITION_NT'blocking door is closed'(test: [ A81'closed'('blocking door') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'before locking an open thing ( called the door ajar ) with s'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if sequential action option is active'
                                        INVOCATION_NT'if sequential action option is active'
                                            CONDITION_CONTEXT_NT'sequential action option is active'
                                                TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'try closing the door ajar'
                                            INVOCATION_NT'try closing the door ajar'
                                                RVALUE_CONTEXT_NT'closing the door ajar'
                                                    CONSTANT_NT'closing the door ajar'-action
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "(first closing [the door ajar])[command clarification b'
                                            INVOCATION_LIST_SAY_NT'"(first closing [the door ajar])[command clarification break'
                                                INVOCATION_NT'"(first closing [the door ajar])[command clarification break'
                                                    RVALUE_CONTEXT_NT'"(first closing [the door ajar])[command clarification break'
                                                        CONSTANT_NT'"(first closing [the door ajar])[command clarification break'-text
                                        INVOCATION_LIST_NT'silently try closing the door ajar'
                                            INVOCATION_NT'silently try closing the door ajar'
                                                RVALUE_CONTEXT_NT'closing the door ajar'
                                                    CONSTANT_NT'closing the door ajar'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the door ajar is open'
                                        INVOCATION_NT'if the door ajar is open'
                                            CONDITION_CONTEXT_NT'door ajar is open'
                                                TEST_PROPOSITION_NT'door ajar is open'(test: [ A80'open'('door ajar') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'before locking keylessly an open thing ( called the door aja'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if sequential action option is active'
                                        INVOCATION_NT'if sequential action option is active'
                                            CONDITION_CONTEXT_NT'sequential action option is active'
                                                TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'try closing the door ajar'
                                            INVOCATION_NT'try closing the door ajar'
                                                RVALUE_CONTEXT_NT'closing the door ajar'
                                                    CONSTANT_NT'closing the door ajar'-action
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "(first closing [the door ajar])[command clarification b'
                                            INVOCATION_LIST_SAY_NT'"(first closing [the door ajar])[command clarification break'
                                                INVOCATION_NT'"(first closing [the door ajar])[command clarification break'
                                                    RVALUE_CONTEXT_NT'"(first closing [the door ajar])[command clarification break'
                                                        CONSTANT_NT'"(first closing [the door ajar])[command clarification break'-text
                                        INVOCATION_LIST_NT'silently try closing the door ajar'
                                            INVOCATION_NT'silently try closing the door ajar'
                                                RVALUE_CONTEXT_NT'closing the door ajar'
                                                    CONSTANT_NT'closing the door ajar'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the door ajar is open'
                                        INVOCATION_NT'if the door ajar is open'
                                            CONDITION_CONTEXT_NT'door ajar is open'
                                                TEST_PROPOSITION_NT'door ajar is open'(test: [ A80'open'('door ajar') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'before opening a locked thing ( called the sealed chest ) ( '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if sequential action option is active'
                                        INVOCATION_NT'if sequential action option is active'
                                            CONDITION_CONTEXT_NT'sequential action option is active'
                                                TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'try unlocking keylessly the sealed chest'
                                            INVOCATION_NT'try unlocking keylessly the sealed chest'
                                                RVALUE_CONTEXT_NT'unlocking keylessly the sealed chest'
                                                    CONSTANT_NT'unlocking keylessly the sealed chest'-action
                                    CODE_BLOCK_NT'otherwise'
                                        CODE_BLOCK_NT'say "(first unlocking [the sealed chest])[command clarificat'
                                            INVOCATION_LIST_SAY_NT'"(first unlocking [the sealed chest])[command clarification '
                                                INVOCATION_NT'"(first unlocking [the sealed chest])[command clarification '
                                                    RVALUE_CONTEXT_NT'"(first unlocking [the sealed chest])[command clarification '
                                                        CONSTANT_NT'"(first unlocking [the sealed chest])[command clarification '-text
                                        INVOCATION_LIST_NT'silently try unlocking keylessly the sealed chest'
                                            INVOCATION_NT'silently try unlocking keylessly the sealed chest'
                                                RVALUE_CONTEXT_NT'unlocking keylessly the sealed chest'
                                                    CONSTANT_NT'unlocking keylessly the sealed chest'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the sealed chest is locked'
                                        INVOCATION_NT'if the sealed chest is locked'
                                            CONDITION_CONTEXT_NT'sealed chest is locked'
                                                TEST_PROPOSITION_NT'sealed chest is locked'(test: [ A85'locked'('sealed chest') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'before someone trying going through a closed door ( called t'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'try the person asked trying opening the blocking door'
                                    INVOCATION_NT'try the person asked trying opening the blocking door'
                                        RVALUE_CONTEXT_NT'person asked trying opening the blocking door'
                                            CONSTANT_NT'person asked trying opening the blocking door'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the blocking door is closed'
                                        INVOCATION_NT'if the blocking door is closed'
                                            CONDITION_CONTEXT_NT'blocking door is closed'
                                                TEST_PROPOSITION_NT'blocking door is closed'(test: [ A81'closed'('blocking door') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'before someone trying locking an open thing ( called the doo'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'try the person asked trying closing the door ajar'
                                    INVOCATION_NT'try the person asked trying closing the door ajar'
                                        RVALUE_CONTEXT_NT'person asked trying closing the door ajar'
                                            CONSTANT_NT'person asked trying closing the door ajar'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the door ajar is open'
                                        INVOCATION_NT'if the door ajar is open'
                                            CONDITION_CONTEXT_NT'door ajar is open'
                                                TEST_PROPOSITION_NT'door ajar is open'(test: [ A80'open'('door ajar') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'before someone trying locking keylessly an open thing ( call'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'try the person asked trying closing the door ajar'
                                    INVOCATION_NT'try the person asked trying closing the door ajar'
                                        RVALUE_CONTEXT_NT'person asked trying closing the door ajar'
                                            CONSTANT_NT'person asked trying closing the door ajar'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the door ajar is open'
                                        INVOCATION_NT'if the door ajar is open'
                                            CONDITION_CONTEXT_NT'door ajar is open'
                                                TEST_PROPOSITION_NT'door ajar is open'(test: [ A80'open'('door ajar') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                        RULE_NT'before someone trying opening a locked thing ( called the se'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'try the person asked trying unlocking keylessly the sealed c'
                                    INVOCATION_NT'try the person asked trying unlocking keylessly the sealed c'
                                        RVALUE_CONTEXT_NT'person asked trying unlocking keylessly the sealed chest'
                                            CONSTANT_NT'person asked trying unlocking keylessly the sealed chest'-action
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the sealed chest is locked'
                                        INVOCATION_NT'if the sealed chest is locked'
                                            CONDITION_CONTEXT_NT'sealed chest is locked'
                                                TEST_PROPOSITION_NT'sealed chest is locked'(test: [ A85'locked'('sealed chest') ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                    HEADING_NT'volume 2 - default locking and unlocking' (level 1)
                        HEADING_NT'part 1 - the matching key rule' (level 3)
                            RULE_NT'this is the need a matching key rule'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the person asked encloses something ( called item ) which'
                                            INVOCATION_NT'if the person asked encloses something ( called item ) which'
                                                CONDITION_CONTEXT_NT'person asked encloses something ( called item ) which unlock'
                                                    TEST_PROPOSITION_NT'person asked encloses something ( called item ) which unlock'(test: [ kind=thing_c({<schema: (QUOTED_INAME_0_00000053(*1))>:'the noun'}) ^ called='item'(thing)({<schema: (QUOTED_INAME_0_00000053(*1))>:'the noun'}) ^ encloses('person asked', {<schema: (QUOTED_INAME_0_00000053(*1))>:'the noun'}) ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'now the second noun is the item'
                                                CONDITION_CONTEXT_NT'the second noun is the item'
                                            INVOCATION_LIST_NT'abide by the must have accessible the second noun rule'
                                                INVOCATION_NT'abide by the must have accessible the second noun rule'
                                                    RVALUE_CONTEXT_NT'must have accessible the second noun rule'
                                                        CONSTANT_NT'must have accessible the second noun rule'-rule
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'if a visible passkey ( called item ) unbolts the noun'
                                                    INVOCATION_NT'if a visible passkey ( called item ) unbolts the noun'
                                                        CONDITION_CONTEXT_NT'a visible passkey ( called item ) unbolts the noun'
                                                            TEST_PROPOSITION_NT'a visible passkey ( called item ) unbolts the noun'(test: [ kind=passkey({<schema: (QUOTED_INAME_0_00000103(*1))>:'the noun'}) ^ A30'visible'({<schema: (QUOTED_INAME_0_00000103(*1))>:'the noun'}) ^ called='item'(passkey)({<schema: (QUOTED_INAME_0_00000103(*1))>:'the noun'}) ])
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'now the second noun is the item'
                                                        CONDITION_CONTEXT_NT'the second noun is the item'
                                                    INVOCATION_LIST_NT'abide by the must have accessible the second noun rule'
                                                        INVOCATION_NT'abide by the must have accessible the second noun rule'
                                                            RVALUE_CONTEXT_NT'must have accessible the second noun rule'
                                                                CONSTANT_NT'must have accessible the second noun rule'-rule
                                                CODE_BLOCK_NT'otherwise'
                                                    CODE_BLOCK_NT
                                                        INVOCATION_LIST_NT'if the player is the person asked'
                                                            INVOCATION_NT'if the player is the person asked'
                                                                CONDITION_CONTEXT_NT'player is the person asked'
                                                                    TEST_PROPOSITION_NT'player is the person asked'(test: [ is('player', 'the person asked') ])
                                                        CODE_BLOCK_NT
                                                            CODE_BLOCK_NT'say "[key-refusal for noun]"'
                                                                INVOCATION_LIST_SAY_NT'key-refusal for noun'
                                                                    INVOCATION_NT'key-refusal for noun'
                                                                        RVALUE_CONTEXT_NT'noun'
                                                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                                    INVOCATION_LIST_NT'stop the action'
                                                        INVOCATION_NT'stop the action'
                            RULE_NT'to say key-refusal for ( locked-thing - an object )'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'carry out the refusing keys activity with the locked-thing'
                                        INVOCATION_NT'carry out the refusing keys activity with the locked-thing'
                                            RVALUE_CONTEXT_NT'refusing keys'
                                                CONSTANT_NT'refusing keys'-activity on objects
                                            RVALUE_CONTEXT_NT'locked-thing'
                                                LOCAL_VARIABLE_NT'locked-thing'(t_0;object)
                            SENTENCE_NT'refusing keys of something is an activity'
                                VERB_NT'is'
                                PROPER_NOUN_NT'refusing keys of something'
                                PROPER_NOUN_NT'an activity'
                            RULE_NT'rule for refusing keys of something ( called locked-thing ) '
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[We] [lack] a key that fits [the locked-thing]." ( a )'
                                        INVOCATION_LIST_SAY_NT'"[We] [lack] a key that fits [the locked-thing]." ( a )'
                                            INVOCATION_NT'"[We] [lack] a key that fits [the locked-thing]." ( a )'
                                                RVALUE_CONTEXT_NT'"[We] [lack] a key that fits [the locked-thing]." ( a )'
                                                    CONSTANT_NT'"[We] [lack] a key that fits [the locked-thing]." ( a )'-text
                            RULE_NT'definition'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the person asked carries it'
                                            INVOCATION_NT'if the person asked carries it'
                                                CONDITION_CONTEXT_NT'person asked carries it'
                                                    TEST_PROPOSITION_NT'person asked carries it'(test: [ is('person asked', {<schema: CarrierOf(*1)>:'it'}) ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'yes'
                                                INVOCATION_NT'yes'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if it is on a keychain which is carried by the person asked'
                                            INVOCATION_NT'if it is on a keychain which is carried by the person asked'
                                                CONDITION_CONTEXT_NT'it is on a keychain which is carried by the person asked'
                                                    TEST_PROPOSITION_NT'it is on a keychain which is carried by the person asked'(test: [ kind=keychain({<schema: SupporterOf(*1)>:'it'}) ^ is('the person asked', {<schema: CarrierOf(*1)>:{<schema: SupporterOf(*1)>:'it'}}) ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'yes'
                                                INVOCATION_NT'yes'
                                    INVOCATION_LIST_NT'no'
                                        INVOCATION_NT'no'
                        HEADING_NT'part 2 - unlocking' (level 3)
                            HEADING_NT'section 1 - regular unlocking' (level 5)
                                SENTENCE_NT'understand the command unlock as something new'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'the command unlock'
                                    PROPER_NOUN_NT'something new'
                                SENTENCE_NT'understand "unlock
                                [something] with [something]" as unlockin'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"unlock
                                    [something] with [something]"'
                                    PROPER_NOUN_NT'unlocking it with'
                                SENTENCE_NT'understand "unlock [a
                                locked lockable thing] with [something'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"unlock [a
                                    locked lockable thing] with [something]"'
                                    PROPER_NOUN_NT'unlocking it with'
                                SENTENCE_NT'understand "unlock [a lockable thing] with [something]" as u'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"unlock [a lockable thing] with [something]"'
                                    PROPER_NOUN_NT'unlocking it with'
                                SENTENCE_NT'understand the commands open and uncover and unwrap as somet'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'the commands open and uncover and unwrap'
                                    PROPER_NOUN_NT'something new'
                                SENTENCE_NT'understand "open [something]" or "uncover [something]" or "u'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"open [something]" or "uncover [something]" or "unwrap [some'
                                    PROPER_NOUN_NT'opening'
                                SENTENCE_NT'understand "open [something] with [something]" as unlocking '
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"open [something] with [something]"'
                                    PROPER_NOUN_NT'unlocking it with'
                                SENTENCE_NT'understand "open [a locked lockable thing] with [something]"'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"open [a locked lockable thing] with [something]"'
                                    PROPER_NOUN_NT'unlocking it with'
                                SENTENCE_NT'understand "open [a lockable thing] with [something]" as unl'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"open [a lockable thing] with [something]"'
                                    PROPER_NOUN_NT'unlocking it with'
                                RULE_NT'check unlocking it with ( this is the must be able to reach '
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'abide by the must have accessible the second noun rule'
                                            INVOCATION_NT'abide by the must have accessible the second noun rule'
                                                RVALUE_CONTEXT_NT'must have accessible the second noun rule'
                                                    CONSTANT_NT'must have accessible the second noun rule'-rule
                                SENTENCE_NT'the right second rule is listed instead of the can't unlock '
                                    VERB_NT'is'
                                    PROPER_NOUN_NT'the right second rule'
                                    PROPER_NOUN_NT'instead of the can't unlock without the correct key rule in '
                                RULE_NT'this is the right second rule'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the second noun does not unlock the noun'
                                                INVOCATION_NT'if the second noun does not unlock the noun'
                                                    CONDITION_CONTEXT_NT'second noun does not unlock the noun'
                                                        TEST_PROPOSITION_NT'second noun does not unlock the noun'(test: [ NOT[ is('second noun', {<schema: (QUOTED_INAME_0_00000053(*1))>:'the noun'}) NOT] ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "[The second noun] [do not fit] [the noun]." ( a )'
                                                    INVOCATION_LIST_SAY_NT'"[The second noun] [do not fit] [the noun]." ( a )'
                                                        INVOCATION_NT'"[The second noun] [do not fit] [the noun]." ( a )'
                                                            RVALUE_CONTEXT_NT'"[The second noun] [do not fit] [the noun]." ( a )'
                                                                CONSTANT_NT'"[The second noun] [do not fit] [the noun]." ( a )'-text
                                                CODE_BLOCK_NT
                            HEADING_NT'section 2 - keylessly' (level 5)
                                SENTENCE_NT'understand "unlock [something]" as unlocking keylessly'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"unlock [something]"'
                                    PROPER_NOUN_NT'unlocking keylessly'
                                SENTENCE_NT'understand "unlock [a
                                locked lockable thing]" as unlocking k'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"unlock [a
                                    locked lockable thing]"'
                                    PROPER_NOUN_NT'unlocking keylessly'
                                SENTENCE_NT'understand "unlock [a lockable
                                thing]" as unlocking keylessl'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"unlock [a lockable
                                    thing]"'
                                    PROPER_NOUN_NT'unlocking keylessly'
                                SENTENCE_NT'unlocking keylessly is an action applying to one thing'
                                    VERB_NT'is'
                                    PROPER_NOUN_NT'unlocking keylessly'
                                    PROPER_NOUN_NT'applying to one thing'
                                SENTENCE_NT'the unlocking keylessly action has an object called the key '
                                    VERB_NT'has'
                                    PROPER_NOUN_NT'unlocking keylessly action'
                                    ALLOWED_NT
                                        PROPERTYCALLED_NT'called'
                                            PROPER_NOUN_NT'object'
                                            PROPER_NOUN_NT'key unlocked with'
                                RULE_NT'check an actor unlocking keylessly ( this is the check keyle'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'abide by the can't unlock without a lock rule'
                                            INVOCATION_NT'abide by the can't unlock without a lock rule'
                                                RVALUE_CONTEXT_NT'can't unlock without a lock rule'
                                                    CONSTANT_NT'can't unlock without a lock rule'-rule
                                        INVOCATION_LIST_NT'abide by the can't unlock what's already unlocked rule'
                                            INVOCATION_NT'abide by the can't unlock what's already unlocked rule'
                                                RVALUE_CONTEXT_NT'can't unlock what's already unlocked rule'
                                                    CONSTANT_NT'can't unlock what's already unlocked rule'-rule
                                        INVOCATION_LIST_NT'abide by the need a matching key rule'
                                            INVOCATION_NT'abide by the need a matching key rule'
                                                RVALUE_CONTEXT_NT'need a matching key rule'
                                                    CONSTANT_NT'need a matching key rule'-rule
                                        INVOCATION_LIST_NT'now the key unlocked with is the second noun'
                                            CONDITION_CONTEXT_NT'the key unlocked with is the second noun'
                                RULE_NT'carry out an actor unlocking keylessly ( this is the standar'
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if sequential action option is active'
                                                INVOCATION_NT'if sequential action option is active'
                                                    CONDITION_CONTEXT_NT'sequential action option is active'
                                                        TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'do nothing'
                                                    INVOCATION_NT'do nothing'
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the person asked is the player'
                                                        INVOCATION_NT'if the person asked is the player'
                                                            CONDITION_CONTEXT_NT'person asked is the player'
                                                                TEST_PROPOSITION_NT'person asked is the player'(test: [ is('person asked', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "(with [the key unlocked with])[command clarification br'
                                                            INVOCATION_LIST_SAY_NT'"(with [the key unlocked with])[command clarification break]'
                                                                INVOCATION_NT'"(with [the key unlocked with])[command clarification break]'
                                                                    RVALUE_CONTEXT_NT'"(with [the key unlocked with])[command clarification break]'
                                                                        CONSTANT_NT'"(with [the key unlocked with])[command clarification break]'-text
                                        INVOCATION_LIST_NT'try the person asked unlocking the noun with the key unlocke'
                                            INVOCATION_NT'try the person asked unlocking the noun with the key unlocke'
                                                RVALUE_CONTEXT_NT'person asked unlocking the noun with the key unlocked with'
                                                    CONSTANT_NT'person asked unlocking the noun with the key unlocked with'-action
                        HEADING_NT'part 3 - locking' (level 3)
                            HEADING_NT'section 1 - regular locking' (level 5)
                                SENTENCE_NT'understand the command lock as something new'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'the command lock'
                                    PROPER_NOUN_NT'something new'
                                SENTENCE_NT'understand "lock [something]
                                with [something]" as locking it'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"lock [something]
                                    with [something]"'
                                    PROPER_NOUN_NT'locking it with'
                                SENTENCE_NT'understand "lock [an unlocked lockable
                                thing] with [somethin'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"lock [an unlocked lockable
                                    thing] with [something]"'
                                    PROPER_NOUN_NT'locking it with'
                                SENTENCE_NT'understand "lock [a lockable
                                thing] with [something]" as loc'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"lock [a lockable
                                    thing] with [something]"'
                                    PROPER_NOUN_NT'locking it with'
                                RULE_NT'check locking it with'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'abide by the must have accessible the second noun rule'
                                            INVOCATION_NT'abide by the must have accessible the second noun rule'
                                                RVALUE_CONTEXT_NT'must have accessible the second noun rule'
                                                    CONSTANT_NT'must have accessible the second noun rule'-rule
                                SENTENCE_NT'the right second rule is listed instead of the can't lock wi'
                                    VERB_NT'is'
                                    PROPER_NOUN_NT'the right second rule'
                                    PROPER_NOUN_NT'instead of the can't lock without the correct key rule in th'
                            HEADING_NT'section 2 - keylessly' (level 5)
                                SENTENCE_NT'understand "lock [something]" as locking keylessly'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"lock [something]"'
                                    PROPER_NOUN_NT'locking keylessly'
                                SENTENCE_NT'understand "lock [an
                                unlocked lockable thing]" as locking ke'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"lock [an
                                    unlocked lockable thing]"'
                                    PROPER_NOUN_NT'locking keylessly'
                                SENTENCE_NT'understand "lock [a lockable
                                thing]" as locking keylessly'
                                    VERB_NT'understand'
                                    PROPER_NOUN_NT'"lock [a lockable
                                    thing]"'
                                    PROPER_NOUN_NT'locking keylessly'
                                SENTENCE_NT'locking keylessly is an action applying to one thing'
                                    VERB_NT'is'
                                    PROPER_NOUN_NT'locking keylessly'
                                    PROPER_NOUN_NT'applying to one thing'
                                SENTENCE_NT'the locking keylessly action has an object called the key lo'
                                    VERB_NT'has'
                                    PROPER_NOUN_NT'locking keylessly action'
                                    ALLOWED_NT
                                        PROPERTYCALLED_NT'called'
                                            PROPER_NOUN_NT'object'
                                            PROPER_NOUN_NT'key locked with'
                                RULE_NT'check an actor locking keylessly ( this is the check keyless'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'abide by the can't lock without a lock rule'
                                            INVOCATION_NT'abide by the can't lock without a lock rule'
                                                RVALUE_CONTEXT_NT'can't lock without a lock rule'
                                                    CONSTANT_NT'can't lock without a lock rule'-rule
                                        INVOCATION_LIST_NT'abide by the can't lock what's already locked rule'
                                            INVOCATION_NT'abide by the can't lock what's already locked rule'
                                                RVALUE_CONTEXT_NT'can't lock what's already locked rule'
                                                    CONSTANT_NT'can't lock what's already locked rule'-rule
                                        INVOCATION_LIST_NT'abide by the can't lock what's open rule'
                                            INVOCATION_NT'abide by the can't lock what's open rule'
                                                RVALUE_CONTEXT_NT'can't lock what's open rule'
                                                    CONSTANT_NT'can't lock what's open rule'-rule
                                        INVOCATION_LIST_NT'abide by the need a matching key rule'
                                            INVOCATION_NT'abide by the need a matching key rule'
                                                RVALUE_CONTEXT_NT'need a matching key rule'
                                                    CONSTANT_NT'need a matching key rule'-rule
                                        INVOCATION_LIST_NT'now the key locked with is the second noun'
                                            CONDITION_CONTEXT_NT'the key locked with is the second noun'
                                RULE_NT'carry out an actor locking keylessly ( this is the standard '
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if sequential action option is active'
                                                INVOCATION_NT'if sequential action option is active'
                                                    CONDITION_CONTEXT_NT'sequential action option is active'
                                                        TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'do nothing'
                                                    INVOCATION_NT'do nothing'
                                            CODE_BLOCK_NT'otherwise'
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'if the person asked is the player'
                                                        INVOCATION_NT'if the person asked is the player'
                                                            CONDITION_CONTEXT_NT'person asked is the player'
                                                                TEST_PROPOSITION_NT'person asked is the player'(test: [ is('person asked', 'the player') ])
                                                    CODE_BLOCK_NT
                                                        CODE_BLOCK_NT'say "(with [the key locked with])[command clarification brea'
                                                            INVOCATION_LIST_SAY_NT'"(with [the key locked with])[command clarification break]" '
                                                                INVOCATION_NT'"(with [the key locked with])[command clarification break]" '
                                                                    RVALUE_CONTEXT_NT'"(with [the key locked with])[command clarification break]" '
                                                                        CONSTANT_NT'"(with [the key locked with])[command clarification break]" '-text
                                        INVOCATION_LIST_NT'try the person asked locking the noun with the key locked wi'
                                            INVOCATION_NT'try the person asked locking the noun with the key locked wi'
                                                RVALUE_CONTEXT_NT'person asked locking the noun with the key locked with'
                                                    CONSTANT_NT'person asked locking the noun with the key locked with'-action
                    HEADING_NT'volume 3 - the passkey kind , needed only if you want keys t' (level 1)
                        SENTENCE_NT'a passkey is a kind of thing'
                            VERB_NT'is'
                            COMMON_NOUN_NT'passkey'
                            KIND_NT'kind of thing'
                                COMMON_NOUN_NT'thing'
                        SENTENCE_NT'the specification of a passkey is A kind of key
                        whose invent'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of a passkey'
                                COMMON_NOUN_NT'passkey'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'A kind of key
                            whose inventory listing changes to reflect the'
                        RULE_NT'definition'
                        SENTENCE_NT'unbolting relates one passkey to various things'
                            VERB_NT'relates'
                            PROPER_NOUN_NT'unbolting'
                            PROPER_NOUN_NT'one passkey'
                            PROPER_NOUN_NT'various things'
                        SENTENCE_NT'the verb to unbolt means the unbolting relation'
                            VERB_NT'means'
                            PROPER_NOUN_NT'to unbolt'
                            PROPER_NOUN_NT'unbolting relation'
                        RULE_NT'after printing the name of an identified passkey ( called th'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the prior named object is the item'
                                    CONDITION_CONTEXT_NT'the prior named object is the item'
                                CODE_BLOCK_NT'say " (which [open] [the list of things unbolted by the item'
                                    INVOCATION_LIST_SAY_NT'" (which [open] [the list of things unbolted by the item])" '
                                        INVOCATION_NT'" (which [open] [the list of things unbolted by the item])" '
                                            RVALUE_CONTEXT_NT'" (which [open] [the list of things unbolted by the item])" '
                                                CONSTANT_NT'" (which [open] [the list of things unbolted by the item])" '-text
                        RULE_NT'after examining an identified passkey ( this is the passkey '
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say "[The noun] [unlock] [the list of things unbolted by the'
                                    INVOCATION_LIST_SAY_NT'"[The noun] [unlock] [the list of things unbolted by the nou'
                                        INVOCATION_NT'"[The noun] [unlock] [the list of things unbolted by the nou'
                                            RVALUE_CONTEXT_NT'"[The noun] [unlock] [the list of things unbolted by the nou'
                                                CONSTANT_NT'"[The noun] [unlock] [the list of things unbolted by the nou'-text
                        RULE_NT'carry out unlocking something with a passkey ( this is the s'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun unlocks the noun'
                                        INVOCATION_NT'if the second noun unlocks the noun'
                                            CONDITION_CONTEXT_NT'second noun unlocks the noun'
                                                TEST_PROPOSITION_NT'second noun unlocks the noun'(test: [ is('second noun', {<schema: (QUOTED_INAME_0_00000053(*1))>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the second noun unbolts the noun'
                                            CONDITION_CONTEXT_NT'the second noun unbolts the noun'
                        RULE_NT'report someone trying unlocking something with a passkey ( t'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the second noun unbolts the noun'
                                    CONDITION_CONTEXT_NT'the second noun unbolts the noun'
                        RULE_NT'carry out locking something with a passkey ( this is the sta'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun unlocks the noun'
                                        INVOCATION_NT'if the second noun unlocks the noun'
                                            CONDITION_CONTEXT_NT'second noun unlocks the noun'
                                                TEST_PROPOSITION_NT'second noun unlocks the noun'(test: [ is('second noun', {<schema: (QUOTED_INAME_0_00000053(*1))>:'the noun'}) ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the second noun unbolts the noun'
                                            CONDITION_CONTEXT_NT'the second noun unbolts the noun'
                        RULE_NT'report someone trying locking something with a passkey ( thi'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'now the second noun unbolts the noun'
                                    CONDITION_CONTEXT_NT'the second noun unbolts the noun'
                    HEADING_NT'volume 4 - the keychain kind , needed only if you want a key' (level 1)
                        SENTENCE_NT'a keychain is a kind of supporter that is portable'
                            VERB_NT'is'
                            COMMON_NOUN_NT'keychain'
                            KIND_NT'kind of supporter that is portable'
                                WITH_NT'supporter that is portable'
                                    COMMON_NOUN_NT'supporter that is portable'
                                    ADJECTIVE_NT
                        SENTENCE_NT'the specification of a keychain is A keychain which can hold'
                            VERB_NT'is'
                            X_OF_Y_NT'specification of a keychain'
                                COMMON_NOUN_NT'keychain'
                                PROPER_NOUN_NT'specification'
                            PROPER_NOUN_NT'A keychain which can hold the player's keys without forcing '
                        RULE_NT'instead of putting something which is not a passkey on a key'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say "[The noun] [are] not a key." ( a )'
                                    INVOCATION_LIST_SAY_NT'"[The noun] [are] not a key." ( a )'
                                        INVOCATION_NT'"[The noun] [are] not a key." ( a )'
                                            RVALUE_CONTEXT_NT'"[The noun] [are] not a key." ( a )'
                                                CONSTANT_NT'"[The noun] [are] not a key." ( a )'-text
                        SENTENCE_NT'the keychain-aware carrying requirements rule is listed inst'
                            VERB_NT'is'
                            PROPER_NOUN_NT'the keychain-aware carrying requirements rule'
                            PROPER_NOUN_NT'instead of the carrying requirements rule in the action-proc'
                        RULE_NT'this is the keychain-aware carrying requirements rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if locking or unlocking something with something which is on'
                                        INVOCATION_NT'if locking or unlocking something with something which is on'
                                            CONDITION_CONTEXT_NT'locking or unlocking something with something which is on a '
                                                LOGICAL_OR_NT'locking or unlocking something with something which is on a '
                                                    TEST_VALUE_NT'locking'
                                                        CONSTANT_NT'locking'-described action
                                                    TEST_VALUE_NT'unlocking something with something which is on a keychain wh'
                                                        CONSTANT_NT'unlocking something with something which is on a keychain wh'-described action
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'continue the action'
                                            INVOCATION_NT'continue the action'
                                INVOCATION_LIST_NT'abide by the carrying requirements rule'
                                    INVOCATION_NT'abide by the carrying requirements rule'
                                        RVALUE_CONTEXT_NT'carrying requirements rule'
                                            CONSTANT_NT'carrying requirements rule'-rule
                        SENTENCE_NT'understand "put [passkey] on [keychain]" as putting it on'
                            VERB_NT'understand'
                            PROPER_NOUN_NT'"put [passkey] on [keychain]"'
                            PROPER_NOUN_NT'putting it on'
                        RULE_NT'rule for deciding whether all includes passkeys which are on'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not a keychain'
                                        INVOCATION_NT'if the second noun is not a keychain'
                                            CONDITION_CONTEXT_NT'second noun is not a keychain'
                                                TEST_PROPOSITION_NT'second noun is not a keychain'(test: [ NOT[ kind=keychain('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'it does not'
                    HEADING_NT'volume 5 - support materials' (level 1)
                        RULE_NT'this is the noun autotaking rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if sequential action option is active'
                                        INVOCATION_NT'if sequential action option is active'
                                            CONDITION_CONTEXT_NT'sequential action option is active'
                                                TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the person asked'
                                                INVOCATION_NT'if the player is the person asked'
                                                    CONDITION_CONTEXT_NT'player is the person asked'
                                                        TEST_PROPOSITION_NT'player is the person asked'(test: [ is('player', 'the person asked') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'try taking the noun'
                                                    INVOCATION_NT'try taking the noun'
                                                        RVALUE_CONTEXT_NT'taking the noun'
                                                            CONSTANT_NT'taking the noun'-action
                                            CODE_BLOCK_NT'otherwise'
                                                INVOCATION_LIST_NT'try the person asked trying taking the noun'
                                                    INVOCATION_NT'try the person asked trying taking the noun'
                                                        RVALUE_CONTEXT_NT'person asked trying taking the noun'
                                                            CONSTANT_NT'person asked trying taking the noun'-action
                                    CODE_BLOCK_NT'otherwise'
                                        INVOCATION_LIST_NT'carry out the implicitly taking activity with the noun'
                                            INVOCATION_NT'carry out the implicitly taking activity with the noun'
                                                RVALUE_CONTEXT_NT'implicitly taking'
                                                    CONSTANT_NT'implicitly taking'-activity on objects
                                                RVALUE_CONTEXT_NT'noun'
                                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        RULE_NT'this is the second noun autotaking rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if sequential action option is active'
                                        INVOCATION_NT'if sequential action option is active'
                                            CONDITION_CONTEXT_NT'sequential action option is active'
                                                TEST_PROPOSITION_NT'sequential action option is active'(test: [ A11'active'('sequential action option') ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the person asked'
                                                INVOCATION_NT'if the player is the person asked'
                                                    CONDITION_CONTEXT_NT'player is the person asked'
                                                        TEST_PROPOSITION_NT'player is the person asked'(test: [ is('player', 'the person asked') ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'try taking the second noun'
                                                    INVOCATION_NT'try taking the second noun'
                                                        RVALUE_CONTEXT_NT'taking the second noun'
                                                            CONSTANT_NT'taking the second noun'-action
                                            CODE_BLOCK_NT'otherwise'
                                                INVOCATION_LIST_NT'try the person asked trying taking the second noun'
                                                    INVOCATION_NT'try the person asked trying taking the second noun'
                                                        RVALUE_CONTEXT_NT'person asked trying taking the second noun'
                                                            CONSTANT_NT'person asked trying taking the second noun'-action
                                    CODE_BLOCK_NT'otherwise'
                                        INVOCATION_LIST_NT'carry out the implicitly taking activity with the second nou'
                                            INVOCATION_NT'carry out the implicitly taking activity with the second nou'
                                                RVALUE_CONTEXT_NT'implicitly taking'
                                                    CONSTANT_NT'implicitly taking'-activity on objects
                                                RVALUE_CONTEXT_NT'second noun'
                                                    NONLOCAL_VARIABLE_NT'second noun'('second noun'(var)[object])
                        RULE_NT'this is the must hold the noun rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the person asked does not have the noun'
                                        INVOCATION_NT'if the person asked does not have the noun'
                                            CONDITION_CONTEXT_NT'person asked does not have the noun'
                                                TEST_PROPOSITION_NT'person asked does not have the noun'(test: [ NOT[ is('person asked', {<schema: OwnerOf(*1)>:'the noun'}) NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'follow the noun autotaking rule'
                                            INVOCATION_NT'follow the noun autotaking rule'
                                                RVALUE_CONTEXT_NT'noun autotaking rule'
                                                    CONSTANT_NT'noun autotaking rule'-rule
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the person asked does not have the noun'
                                        INVOCATION_NT'if the person asked does not have the noun'
                                            CONDITION_CONTEXT_NT'person asked does not have the noun'
                                                TEST_PROPOSITION_NT'person asked does not have the noun'(test: [ NOT[ is('person asked', {<schema: OwnerOf(*1)>:'the noun'}) NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'make no decision'
                                    INVOCATION_NT'make no decision'
                        RULE_NT'this is the must hold the second noun rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the person asked does not have the second noun'
                                        INVOCATION_NT'if the person asked does not have the second noun'
                                            CONDITION_CONTEXT_NT'person asked does not have the second noun'
                                                TEST_PROPOSITION_NT'person asked does not have the second noun'(test: [ NOT[ is('person asked', {<schema: OwnerOf(*1)>:'the second noun'}) NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'follow the second noun autotaking rule'
                                            INVOCATION_NT'follow the second noun autotaking rule'
                                                RVALUE_CONTEXT_NT'second noun autotaking rule'
                                                    CONSTANT_NT'second noun autotaking rule'-rule
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the person asked does not have the second noun'
                                        INVOCATION_NT'if the person asked does not have the second noun'
                                            CONDITION_CONTEXT_NT'person asked does not have the second noun'
                                                TEST_PROPOSITION_NT'person asked does not have the second noun'(test: [ NOT[ is('person asked', {<schema: OwnerOf(*1)>:'the second noun'}) NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'make no decision'
                                    INVOCATION_NT'make no decision'
                        RULE_NT'this is the must have accessible the noun rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not key-accessible'
                                        INVOCATION_NT'if the noun is not key-accessible'
                                            CONDITION_CONTEXT_NT'noun is not key-accessible'
                                                TEST_PROPOSITION_NT'noun is not key-accessible'(test: [ NOT[ A47'key-accessible'('noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the noun is on a keychain ( called the containing keychai'
                                                INVOCATION_NT'if the noun is on a keychain ( called the containing keychai'
                                                    CONDITION_CONTEXT_NT'noun is on a keychain ( called the containing keychain )'
                                                        TEST_PROPOSITION_NT'noun is on a keychain ( called the containing keychain )'(test: [ kind=keychain({<schema: SupporterOf(*1)>:'noun'}) ^ called='containing keychain'(keychain)({<schema: SupporterOf(*1)>:'noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the noun is the containing keychain'
                                                    CONDITION_CONTEXT_NT'the noun is the containing keychain'
                                        INVOCATION_LIST_NT'follow the noun autotaking rule'
                                            INVOCATION_NT'follow the noun autotaking rule'
                                                RVALUE_CONTEXT_NT'noun autotaking rule'
                                                    CONSTANT_NT'noun autotaking rule'-rule
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the noun is not key-accessible'
                                        INVOCATION_NT'if the noun is not key-accessible'
                                            CONDITION_CONTEXT_NT'noun is not key-accessible'
                                                TEST_PROPOSITION_NT'noun is not key-accessible'(test: [ NOT[ A47'key-accessible'('noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the person asked'
                                                INVOCATION_NT'if the player is the person asked'
                                                    CONDITION_CONTEXT_NT'player is the person asked'
                                                        TEST_PROPOSITION_NT'player is the person asked'(test: [ is('player', 'the person asked') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Without holding [the noun], [we] [can] do nothing." ( a'
                                                    INVOCATION_LIST_SAY_NT'"Without holding [the noun], [we] [can] do nothing." ( a )'
                                                        INVOCATION_NT'"Without holding [the noun], [we] [can] do nothing." ( a )'
                                                            RVALUE_CONTEXT_NT'"Without holding [the noun], [we] [can] do nothing." ( a )'
                                                                CONSTANT_NT'"Without holding [the noun], [we] [can] do nothing." ( a )'-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'make no decision'
                                    INVOCATION_NT'make no decision'
                        RULE_NT'this is the must have accessible the second noun rule'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not key-accessible'
                                        INVOCATION_NT'if the second noun is not key-accessible'
                                            CONDITION_CONTEXT_NT'second noun is not key-accessible'
                                                TEST_PROPOSITION_NT'second noun is not key-accessible'(test: [ NOT[ A47'key-accessible'('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'let the held second noun be the second noun'
                                            INVOCATION_NT'let the held second noun be the second noun'
                                                NEW_LOCAL_CONTEXT_NT'held second noun'
                                                    UNKNOWN_NT'held second noun'
                                                RVALUE_CONTEXT_NT'second noun'
                                                    NONLOCAL_VARIABLE_NT'second noun'('second noun'(var)[object])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the second noun is on a keychain ( called the containing '
                                                INVOCATION_NT'if the second noun is on a keychain ( called the containing '
                                                    CONDITION_CONTEXT_NT'second noun is on a keychain ( called the containing keychai'
                                                        TEST_PROPOSITION_NT'second noun is on a keychain ( called the containing keychai'(test: [ kind=keychain({<schema: SupporterOf(*1)>:'second noun'}) ^ called='containing keychain'(keychain)({<schema: SupporterOf(*1)>:'second noun'}) ])
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'now the second noun is the containing keychain'
                                                    CONDITION_CONTEXT_NT'the second noun is the containing keychain'
                                        INVOCATION_LIST_NT'follow the second noun autotaking rule'
                                            INVOCATION_NT'follow the second noun autotaking rule'
                                                RVALUE_CONTEXT_NT'second noun autotaking rule'
                                                    CONSTANT_NT'second noun autotaking rule'-rule
                                        INVOCATION_LIST_NT'now the second noun is the held second noun'
                                            CONDITION_CONTEXT_NT'the second noun is the held second noun'
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'if the second noun is not key-accessible'
                                        INVOCATION_NT'if the second noun is not key-accessible'
                                            CONDITION_CONTEXT_NT'second noun is not key-accessible'
                                                TEST_PROPOSITION_NT'second noun is not key-accessible'(test: [ NOT[ A47'key-accessible'('second noun') NOT] ])
                                    CODE_BLOCK_NT
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'if the player is the person asked'
                                                INVOCATION_NT'if the player is the person asked'
                                                    CONDITION_CONTEXT_NT'player is the person asked'
                                                        TEST_PROPOSITION_NT'player is the person asked'(test: [ is('player', 'the person asked') ])
                                            CODE_BLOCK_NT
                                                CODE_BLOCK_NT'say "Without holding [the second noun], [we] [can] do nothin'
                                                    INVOCATION_LIST_SAY_NT'"Without holding [the second noun], [we] [can] do nothing." '
                                                        INVOCATION_NT'"Without holding [the second noun], [we] [can] do nothing." '
                                                            RVALUE_CONTEXT_NT'"Without holding [the second noun], [we] [can] do nothing." '
                                                                CONSTANT_NT'"Without holding [the second noun], [we] [can] do nothing." '-text
                                        INVOCATION_LIST_NT'stop the action'
                                            INVOCATION_NT'stop the action'
                                INVOCATION_LIST_NT'make no decision'
                                    INVOCATION_NT'make no decision'
                    HEADING_NT'volume 6 - unlocking all - not for release' (level 1)
                        SENTENCE_NT'understand "unlockall" as universal unlocking'
                            VERB_NT'understand'
                            PROPER_NOUN_NT'"unlockall"'
                            PROPER_NOUN_NT'universal unlocking'
                        SENTENCE_NT'universal unlocking is an action applying to nothing'
                            VERB_NT'is'
                            PROPER_NOUN_NT'universal unlocking'
                            PROPER_NOUN_NT'applying to nothing'
                        RULE_NT'carry out universal unlocking ( this is the lock debugging r'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'repeat with item running through locked things'
                                        INVOCATION_NT'repeat with item running through locked things'
                                            NEW_LOCAL_CONTEXT_NT'item'
                                                UNKNOWN_NT'item'
                                            RVALUE_CONTEXT_NT'locked things'
                                                CONSTANT_NT'locked things'-description of things
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'now the item is unlocked'
                                            CONDITION_CONTEXT_NT'the item is unlocked'
                                        CODE_BLOCK_NT'say "Unlocking [the item]." ( a )'
                                            INVOCATION_LIST_SAY_NT'"Unlocking [the item]." ( a )'
                                                INVOCATION_NT'"Unlocking [the item]." ( a )'
                                                    RVALUE_CONTEXT_NT'"Unlocking [the item]." ( a )'
                                                        CONSTANT_NT'"Unlocking [the item]." ( a )'-text
                        RULE_NT'report universal unlocking ( this is the report universal un'
                            CODE_BLOCK_NT
                                CODE_BLOCK_NT'say "A loud stereophonic click assures you that everything i'
                                    INVOCATION_LIST_SAY_NT'"A loud stereophonic click assures you that everything in th'
                                        INVOCATION_NT'"A loud stereophonic click assures you that everything in th'
                                            RVALUE_CONTEXT_NT'"A loud stereophonic click assures you that everything in th'
                                                CONSTANT_NT'"A loud stereophonic click assures you that everything in th'-text
                        ENDHERE_NT'locksmith'
            SENTENCE_NT'understand "go to/toward/into [any room]" as going toward'
                VERB_NT'understand'
                PROPER_NOUN_NT'"go to/toward/into [any room]"'
                PROPER_NOUN_NT'going toward'
            SENTENCE_NT'understand "enter [any room]" as going toward'
                VERB_NT'understand'
                PROPER_NOUN_NT'"enter [any room]"'
                PROPER_NOUN_NT'going toward'
            SENTENCE_NT'a person has a room called the destination'
                VERB_NT'has'
                COMMON_NOUN_NT'person'
                ALLOWED_NT
                    PROPERTYCALLED_NT'called'
                        PROPER_NOUN_NT'room'
                        PROPER_NOUN_NT'destination'
            SENTENCE_NT'going toward is an action applying to one thing'
                VERB_NT'is'
                PROPER_NOUN_NT'going toward'
                PROPER_NOUN_NT'applying to one thing'
            RULE_NT'check going toward'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the noun is the location'
                            INVOCATION_NT'if the noun is the location'
                                CONDITION_CONTEXT_NT'noun is the location'
                                    TEST_PROPOSITION_NT'noun is the location'(test: [ is('noun', 'the location') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "You're already in [the location]."'
                                INVOCATION_LIST_SAY_NT'"You're already in "'
                                    INVOCATION_NT'"You're already in "'
                                        RVALUE_CONTEXT_NT'"You're already in "'
                                            CONSTANT_NT'"You're already in "'-text
                                INVOCATION_LIST_SAY_NT'the location'
                                    INVOCATION_NT'the location'
                                        RVALUE_CONTEXT_NT'location'
                                            NONLOCAL_VARIABLE_NT'location'('location'(var)[object])
                                INVOCATION_LIST_SAY_NT'"."'
                                    INVOCATION_NT'"."'
                                        RVALUE_CONTEXT_NT'"."'
                                            CONSTANT_NT'"."'-text
                            CODE_BLOCK_NT
            RULE_NT'carry out going toward'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the destination of the player is the noun'
                        CONDITION_CONTEXT_NT'the destination of the player is the noun'
                    INVOCATION_LIST_NT'let heading be the best route from the location to the noun '
                        INVOCATION_NT'let heading be the best route from the location to the noun '
                            NEW_LOCAL_CONTEXT_NT'heading'
                                UNKNOWN_NT'heading'
                            RVALUE_CONTEXT_NT'best route from the location to the noun , using even locked'
                                PHRASE_TO_DECIDE_VALUE_NT'best route from the location to the noun , using even locked'
                                    INVOCATION_LIST_NT'best route from the location to the noun , using even locked'
                                        INVOCATION_NT'best route from the location to the noun'
                                            RVALUE_CONTEXT_NT'location'
                                                NONLOCAL_VARIABLE_NT'location'('location'(var)[object])
                                            RVALUE_CONTEXT_NT'noun'
                                                NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if heading is not a direction'
                            INVOCATION_NT'if heading is not a direction'
                                CONDITION_CONTEXT_NT'heading is not a direction'
                                    TEST_PROPOSITION_NT'heading is not a direction'(test: [ NOT[ kind=direction('heading') NOT] ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "You can't think how to get there from here."'
                                INVOCATION_LIST_SAY_NT'"You can't think how to get there from here."'
                                    INVOCATION_NT'"You can't think how to get there from here."'
                                        RVALUE_CONTEXT_NT'"You can't think how to get there from here."'
                                            CONSTANT_NT'"You can't think how to get there from here."'-text
                            CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try going heading'
                        INVOCATION_NT'try going heading'
                            RVALUE_CONTEXT_NT'going heading'
                                CONSTANT_NT'going heading'-action
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the location is the destination of the player'
                            INVOCATION_NT'if the location is the destination of the player'
                                CONDITION_CONTEXT_NT'location is the destination of the player'
                                    TEST_PROPOSITION_NT'location is the destination of the player'(test: [ is('location', 'the destination of the player') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the destination of the player is blank'
                                CONDITION_CONTEXT_NT'the destination of the player is blank'
            RULE_NT'instead of waiting when the destination of the player is not'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the destination of the player is the location'
                            INVOCATION_NT'if the destination of the player is the location'
                                CONDITION_CONTEXT_NT'destination of the player is the location'
                                    TEST_PROPOSITION_NT'destination of the player is the location'(test: [ is('destination of the player', 'the location') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the destination of the player is blank'
                                CONDITION_CONTEXT_NT'the destination of the player is blank'
                        CODE_BLOCK_NT'otherwise'
                            INVOCATION_LIST_NT'try going toward destination of the player'
                                INVOCATION_NT'try going toward destination of the player'
                                    RVALUE_CONTEXT_NT'going toward destination of the player'
                                        CONSTANT_NT'going toward destination of the player'-action
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the location is the destination of the player'
                                    INVOCATION_NT'if the location is the destination of the player'
                                        CONDITION_CONTEXT_NT'location is the destination of the player'
                                            TEST_PROPOSITION_NT'location is the destination of the player'(test: [ is('location', 'the destination of the player') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'now the destination of the player is blank'
                                        CONDITION_CONTEXT_NT'the destination of the player is blank'
            SENTENCE_NT'understand "stop" or "cease" as stopping'
                VERB_NT'understand'
                PROPER_NOUN_NT'"stop" or "cease"'
                PROPER_NOUN_NT'stopping'
            SENTENCE_NT'stopping is an action applying to nothing'
                VERB_NT'is'
                PROPER_NOUN_NT'stopping'
                PROPER_NOUN_NT'applying to nothing'
            RULE_NT'carry out stopping'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the destination of the player is blank'
                        CONDITION_CONTEXT_NT'the destination of the player is blank'
            RULE_NT'report stopping'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "You stop in your tracks."'
                        INVOCATION_LIST_SAY_NT'"You stop in your tracks."'
                            INVOCATION_NT'"You stop in your tracks."'
                                RVALUE_CONTEXT_NT'"You stop in your tracks."'
                                    CONSTANT_NT'"You stop in your tracks."'-text
            RULE_NT'after going to an air-conditioned room'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "You step into the mercifully air-conditioned surroundin'
                        INVOCATION_LIST_SAY_NT'"You step into the mercifully air-conditioned surroundings o'
                            INVOCATION_NT'"You step into the mercifully air-conditioned surroundings o'
                                RVALUE_CONTEXT_NT'"You step into the mercifully air-conditioned surroundings o'
                                    CONSTANT_NT'"You step into the mercifully air-conditioned surroundings o'-text
                    INVOCATION_LIST_NT'continue the action'
                        INVOCATION_NT'continue the action'
            RULE_NT'after going from an air-conditioned room'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "You emerge from the air-conditioning into heat like a w'
                        INVOCATION_LIST_SAY_NT'"You emerge from the air-conditioning into heat like a wall.'
                            INVOCATION_NT'"You emerge from the air-conditioning into heat like a wall.'
                                RVALUE_CONTEXT_NT'"You emerge from the air-conditioning into heat like a wall.'
                                    CONSTANT_NT'"You emerge from the air-conditioning into heat like a wall.'-text
                    INVOCATION_LIST_NT'continue the action'
                        INVOCATION_NT'continue the action'
            RULE_NT'instead of listening to an air-conditioned room'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "The air-conditioning hums softly."'
                        INVOCATION_LIST_SAY_NT'"The air-conditioning hums softly."'
                            INVOCATION_NT'"The air-conditioning hums softly."'
                                RVALUE_CONTEXT_NT'"The air-conditioning hums softly."'
                                    CONSTANT_NT'"The air-conditioning hums softly."'-text
            SENTENCE_NT'the alfred cralle pool hall is a room'
                VERB_NT'is'
                PROPER_NOUN_NT'alfred cralle pool hall'
                COMMON_NOUN_NT'room'
            SENTENCE_NT'"The town's most popular gathering-place, the pool hall is d'
            SENTENCE_NT'the air conditioner is a device in the pool hall'
                VERB_NT'is'
                PROPER_NOUN_NT'air conditioner'
                COMMON_NOUN_NT'device in the pool hall'
            SENTENCE_NT'"[if switched off]An air conditioner sits in the corner, unh'
            SENTENCE_NT'the felt door is west of the pool hall'
                VERB_NT'is west of'
                PROPER_NOUN_NT'felt door'
                RELATIONSHIP_NT'is west of'
                    PROPER_NOUN_NT'pool hall'
                    PROPER_NOUN_NT'west'
            SENTENCE_NT'the felt door is a door'
                VERB_NT'is'
                PROPER_NOUN_NT'felt door'
                COMMON_NOUN_NT'door'
            SENTENCE_NT'the felt door is open'
                VERB_NT'is'
                PROPER_NOUN_NT'felt door'
                ADJECTIVE_NT'open'
            SENTENCE_NT'the felt door is lockable and unlocked'
                VERB_NT'is'
                PROPER_NOUN_NT'felt door'
                AND_NT'and'
                    ADJECTIVE_NT'lockable'
                    ADJECTIVE_NT'unlocked'
            SENTENCE_NT'the key to the city unlocks the felt door'
                VERB_NT'unlocks'
                PROPER_NOUN_NT'key to the city'
                RELATIONSHIP_NT'unlocks'
                    PROPER_NOUN_NT'felt door'
            SENTENCE_NT'the description of the felt door is "It has a prominent lock'
                VERB_NT'is'
                X_OF_Y_NT'description of the felt door'
                    PROPER_NOUN_NT'felt door'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"It has a prominent lock, designed for an old-fashioned key.'
            RULE_NT'after locking a door with something in the presence of an ot'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The audience] looks a little non-plussed when you lock'
                        INVOCATION_LIST_SAY_NT'the audience'
                            INVOCATION_NT'the audience'
                                RVALUE_CONTEXT_NT'audience'
                                    LOCAL_VARIABLE_NT'audience'(tmp_0;person)
                        INVOCATION_LIST_SAY_NT'" looks a little non-plussed when you lock "'
                            INVOCATION_NT'" looks a little non-plussed when you lock "'
                                RVALUE_CONTEXT_NT'" looks a little non-plussed when you lock "'
                                    CONSTANT_NT'" looks a little non-plussed when you lock "'-text
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'", but shrugs."'
                            INVOCATION_NT'", but shrugs."'
                                RVALUE_CONTEXT_NT'", but shrugs."'
                                    CONSTANT_NT'", but shrugs."'-text
            SENTENCE_NT'nancy johnson memorial square is west of the felt door'
                VERB_NT'is west of'
                PROPER_NOUN_NT'nancy johnson memorial square'
                RELATIONSHIP_NT'is west of'
                    PROPER_NOUN_NT'felt door'
                    PROPER_NOUN_NT'west'
            SENTENCE_NT'the description of nancy johnson memorial square is "Waves o'
                VERB_NT'is'
                X_OF_Y_NT'description of nancy johnson memorial square'
                    PROPER_NOUN_NT'nancy johnson memorial square'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"Waves of August heat rise from the pavement: more than once'
            SENTENCE_NT'the statue is scenery in memorial square'
                VERB_NT'is'
                PROPER_NOUN_NT'statue'
                COMMON_NOUN_NT'scenery in memorial square'
            SENTENCE_NT'understand "nancy" or "johnson" or "mrs" as the statue'
                VERB_NT'understand'
                PROPER_NOUN_NT'"nancy" or "johnson" or "mrs"'
                PROPER_NOUN_NT'the statue'
            SENTENCE_NT'the description of the statue is "Mrs. Johnson is pictured w'
                VERB_NT'is'
                X_OF_Y_NT'description of the statue'
                    PROPER_NOUN_NT'statue'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"Mrs. Johnson is pictured with a hand-cranked ice cream free'
            SENTENCE_NT'a hand-cranked ice cream freezer is part of the statue'
                VERB_NT'is part of'
                PROPER_NOUN_NT'hand-cranked ice cream freezer'
                RELATIONSHIP_NT'is part of'
                    PROPER_NOUN_NT'statue'
            SENTENCE_NT'the description is "The hand-cranked ice cream freezer was M'
                VERB_NT'is'
                PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"The hand-cranked ice cream freezer was Mrs. Johnson's inven'
            SENTENCE_NT'the scoop is part of the statue'
                VERB_NT'is part of'
                PROPER_NOUN_NT'scoop'
                RELATIONSHIP_NT'is part of'
                    PROPER_NOUN_NT'statue'
            SENTENCE_NT'the description of the scoop is "An anachronism: Alfred Cral'
                VERB_NT'is'
                X_OF_Y_NT'description of the scoop'
                    PROPER_NOUN_NT'scoop'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"An anachronism: Alfred Cralle would not invent the tool unt'
            SENTENCE_NT'the post office is northwest of nancy johnson memorial squar'
                VERB_NT'is northwest of'
                PROPER_NOUN_NT'post office'
                RELATIONSHIP_NT'is northwest of'
                    PROPER_NOUN_NT'nancy johnson memorial square'
                    PROPER_NOUN_NT'northwest'
            SENTENCE_NT'"Service at the post office is on the slow side since everyt'
            SENTENCE_NT'the slot is scenery in the post office'
                VERB_NT'is'
                PROPER_NOUN_NT'slot'
                COMMON_NOUN_NT'scenery in the post office'
            SENTENCE_NT'the slot is a container'
                VERB_NT'is'
                PROPER_NOUN_NT'slot'
                COMMON_NOUN_NT'container'
            RULE_NT'carry out inserting something into the slot'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the noun is nowhere'
                        CONDITION_CONTEXT_NT'the noun is nowhere'
            RULE_NT'report inserting something into the slot'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[The noun] falls out of sight, and you know you will ne'
                        INVOCATION_LIST_SAY_NT'the noun'
                            INVOCATION_NT'the noun'
                                RVALUE_CONTEXT_NT'noun'
                                    NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                        INVOCATION_LIST_SAY_NT'" falls out of sight, and you know you will never see it aga'
                            INVOCATION_NT'" falls out of sight, and you know you will never see it aga'
                                RVALUE_CONTEXT_NT'" falls out of sight, and you know you will never see it aga'
                                    CONSTANT_NT'" falls out of sight, and you know you will never see it aga'-text
            SENTENCE_NT'hamwi street is northeast of an iron gate'
                VERB_NT'is northeast of'
                PROPER_NOUN_NT'hamwi street'
                RELATIONSHIP_NT'is northeast of'
                    PROPER_NOUN_NT'iron gate'
                    PROPER_NOUN_NT'northeast'
            SENTENCE_NT'"A U-shaped street running from Main Street around to the Me'
            SENTENCE_NT'the iron gate is northeast of nancy johnson memorial square'
                VERB_NT'is northeast of'
                PROPER_NOUN_NT'iron gate'
                RELATIONSHIP_NT'is northeast of'
                    PROPER_NOUN_NT'nancy johnson memorial square'
                    PROPER_NOUN_NT'northeast'
            SENTENCE_NT'the iron gate is a door'
                VERB_NT'is'
                PROPER_NOUN_NT'iron gate'
                COMMON_NOUN_NT'door'
            SENTENCE_NT'it is lockable and unlocked'
                VERB_NT'is'
                PROPER_NOUN_NT'it'
                AND_NT'and'
                    ADJECTIVE_NT'lockable'
                    ADJECTIVE_NT'unlocked'
            RULE_NT'before printing the name of the iron gate while not opening '
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is the player'
                            INVOCATION_NT'if the person asked is the player'
                                CONDITION_CONTEXT_NT'person asked is the player'
                                    TEST_PROPOSITION_NT'person asked is the player'(test: [ is('person asked', 'the player') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the gate is open'
                                    INVOCATION_NT'if the gate is open'
                                        CONDITION_CONTEXT_NT'gate is open'
                                            TEST_PROPOSITION_NT'gate is open'(test: [ A80'open'('gate') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "open "'
                                        INVOCATION_LIST_SAY_NT'"open "'
                                            INVOCATION_NT'"open "'
                                                RVALUE_CONTEXT_NT'"open "'
                                                    CONSTANT_NT'"open "'-text
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the gate is locked'
                                    INVOCATION_NT'if the gate is locked'
                                        CONDITION_CONTEXT_NT'gate is locked'
                                            TEST_PROPOSITION_NT'gate is locked'(test: [ A85'locked'('gate') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "locked "'
                                        INVOCATION_LIST_SAY_NT'"locked "'
                                            INVOCATION_NT'"locked "'
                                                RVALUE_CONTEXT_NT'"locked "'
                                                    CONSTANT_NT'"locked "'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the gate is closed'
                                            INVOCATION_NT'if the gate is closed'
                                                CONDITION_CONTEXT_NT'gate is closed'
                                                    TEST_PROPOSITION_NT'gate is closed'(test: [ A81'closed'('gate') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "closed "'
                                                INVOCATION_LIST_SAY_NT'"closed "'
                                                    INVOCATION_NT'"closed "'
                                                        RVALUE_CONTEXT_NT'"closed "'
                                                            CONSTANT_NT'"closed "'-text
            SENTENCE_NT'cold comfort ice cream is north of a metal door'
                VERB_NT'is north of'
                PROPER_NOUN_NT'cold comfort ice cream'
                RELATIONSHIP_NT'is north of'
                    PROPER_NOUN_NT'metal door'
                    PROPER_NOUN_NT'north'
            SENTENCE_NT'the metal door is north of hamwi street'
                VERB_NT'is north of'
                PROPER_NOUN_NT'metal door'
                RELATIONSHIP_NT'is north of'
                    PROPER_NOUN_NT'hamwi street'
                    PROPER_NOUN_NT'north'
            SENTENCE_NT'a poster is fixed in place in cold comfort'
                VERB_NT'is'
                PROPER_NOUN_NT'poster'
                COMMON_NOUN_NT'fixed in place in cold comfort'
            SENTENCE_NT'"A poster fills one wall with the blazing promise of treats '
            SENTENCE_NT'the description of the poster is "Coming soon! Thai ice crea'
                VERB_NT'is'
                X_OF_Y_NT'description of the poster'
                    PROPER_NOUN_NT'poster'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"Coming soon! Thai ice creams! Durian, jackfruit, taro, and '
            SENTENCE_NT'the metal door is a door'
                VERB_NT'is'
                PROPER_NOUN_NT'metal door'
                COMMON_NOUN_NT'door'
            SENTENCE_NT'"A frosty metallic door separates [the location] from [the o'
            SENTENCE_NT'the metal door is lockable and unlocked'
                VERB_NT'is'
                PROPER_NOUN_NT'metal door'
                AND_NT'and'
                    ADJECTIVE_NT'lockable'
                    ADJECTIVE_NT'unlocked'
            SENTENCE_NT'the key to the city unlocks the metal door'
                VERB_NT'unlocks'
                PROPER_NOUN_NT'key to the city'
                RELATIONSHIP_NT'unlocks'
                    PROPER_NOUN_NT'metal door'
            SENTENCE_NT'marciony street is southeast of nancy johnson memorial squar'
                VERB_NT'is southeast of'
                PROPER_NOUN_NT'marciony street'
                RELATIONSHIP_NT'is southeast of'
                    PROPER_NOUN_NT'nancy johnson memorial square'
                    PROPER_NOUN_NT'southeast'
            SENTENCE_NT'"A semi-circular terrace, named somewhat fancifully after on'
            SENTENCE_NT'the movie rental store is west of a glass door'
                VERB_NT'is west of'
                PROPER_NOUN_NT'movie rental store'
                RELATIONSHIP_NT'is west of'
                    PROPER_NOUN_NT'glass door'
                    PROPER_NOUN_NT'west'
            SENTENCE_NT'the glass door is a door'
                VERB_NT'is'
                PROPER_NOUN_NT'glass door'
                COMMON_NOUN_NT'door'
            SENTENCE_NT'it is west of marciony street'
                VERB_NT'is west of'
                PROPER_NOUN_NT'it'
                RELATIONSHIP_NT'is west of'
                    PROPER_NOUN_NT'marciony street'
                    PROPER_NOUN_NT'west'
            SENTENCE_NT'the glass door is lockable and unlocked'
                VERB_NT'is'
                PROPER_NOUN_NT'glass door'
                AND_NT'and'
                    ADJECTIVE_NT'lockable'
                    ADJECTIVE_NT'unlocked'
            SENTENCE_NT'the key to the city unlocks the glass door'
                VERB_NT'unlocks'
                PROPER_NOUN_NT'key to the city'
                RELATIONSHIP_NT'unlocks'
                    PROPER_NOUN_NT'glass door'
            SENTENCE_NT'main street is southeast of hamwi street'
                VERB_NT'is southeast of'
                PROPER_NOUN_NT'main street'
                RELATIONSHIP_NT'is southeast of'
                    PROPER_NOUN_NT'hamwi street'
                    PROPER_NOUN_NT'southeast'
            SENTENCE_NT'main street is northeast of some bronze gates'
                VERB_NT'is northeast of'
                PROPER_NOUN_NT'main street'
                RELATIONSHIP_NT'is northeast of'
                    PROPER_NOUN_NT'bronze gates'
                    PROPER_NOUN_NT'northeast'
            SENTENCE_NT'the emergency box is in main street'
                VERB_NT'is in'
                PROPER_NOUN_NT'emergency box'
                RELATIONSHIP_NT'is in'
                    PROPER_NOUN_NT'main street'
            SENTENCE_NT'the emergency box is fixed in place'
                VERB_NT'is'
                PROPER_NOUN_NT'emergency box'
                ADJECTIVE_NT'fixed in place'
            SENTENCE_NT'"A fire-red box with a glass front faces the sidewalk, with '
            SENTENCE_NT'the emergency box is closed and transparent'
                VERB_NT'is'
                PROPER_NOUN_NT'emergency box'
                AND_NT'and'
                    ADJECTIVE_NT'closed'
                    ADJECTIVE_NT'transparent'
            SENTENCE_NT'understand "glass" as the box'
                VERB_NT'understand'
                PROPER_NOUN_NT'"glass"'
                PROPER_NOUN_NT'the box'
            RULE_NT'instead of attacking the closed emergency box'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "You hit the emergency box, which shatters open."'
                        INVOCATION_LIST_SAY_NT'"You hit the emergency box, which shatters open."'
                            INVOCATION_NT'"You hit the emergency box, which shatters open."'
                                RVALUE_CONTEXT_NT'"You hit the emergency box, which shatters open."'
                                    CONSTANT_NT'"You hit the emergency box, which shatters open."'-text
                    INVOCATION_LIST_NT'now the emergency box is open'
                        CONDITION_CONTEXT_NT'the emergency box is open'
            RULE_NT'instead of attacking the open emergency box'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "The glass has already been thoroughly broken."'
                        INVOCATION_LIST_SAY_NT'"The glass has already been thoroughly broken."'
                            INVOCATION_NT'"The glass has already been thoroughly broken."'
                                RVALUE_CONTEXT_NT'"The glass has already been thoroughly broken."'
                                    CONSTANT_NT'"The glass has already been thoroughly broken."'-text
            SENTENCE_NT'the syringe is in the emergency box'
                VERB_NT'is in'
                PROPER_NOUN_NT'syringe'
                RELATIONSHIP_NT'is in'
                    PROPER_NOUN_NT'emergency box'
            SENTENCE_NT'the description of the syringe is "It contains the cure for '
                VERB_NT'is'
                X_OF_Y_NT'description of the syringe'
                    PROPER_NOUN_NT'syringe'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"It contains the cure for Gelato's Syndrome. You can inject '
            SENTENCE_NT'the bronze gates are northeast of marciony street'
                VERB_NT'are northeast of'
                PROPER_NOUN_NT'bronze gates'
                RELATIONSHIP_NT'are northeast of'
                    PROPER_NOUN_NT'marciony street'
                    PROPER_NOUN_NT'northeast'
            SENTENCE_NT'the bronze gates are a door'
                VERB_NT'are'
                PROPER_NOUN_NT'bronze gates'
                COMMON_NOUN_NT'door'
            SENTENCE_NT'the bronze gates are lockable and unlocked'
                VERB_NT'are'
                PROPER_NOUN_NT'bronze gates'
                AND_NT'and'
                    ADJECTIVE_NT'lockable'
                    ADJECTIVE_NT'unlocked'
            SENTENCE_NT'the description of the bronze gates is "Erected during the m'
                VERB_NT'is'
                X_OF_Y_NT'description of the bronze gates'
                    PROPER_NOUN_NT'bronze gates'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"Erected during the milk-taint revolution of 1937, they were'
            SENTENCE_NT'the public library is east of main street'
                VERB_NT'is east of'
                PROPER_NOUN_NT'public library'
                RELATIONSHIP_NT'is east of'
                    PROPER_NOUN_NT'main street'
                    PROPER_NOUN_NT'east'
            SENTENCE_NT'"Built in the 1920s during the height of the dairy boom, the'
            SENTENCE_NT'the incongruous sign is scenery in the public library'
                VERB_NT'is'
                PROPER_NOUN_NT'incongruous sign'
                COMMON_NOUN_NT'scenery in the public library'
            SENTENCE_NT'the description of the incongruous sign is "Eating and drink'
                VERB_NT'is'
                X_OF_Y_NT'description of the incongruous sign'
                    PROPER_NOUN_NT'incongruous sign'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"Eating and drinking in the library is STRICTLY PROHIBITED."'
            SENTENCE_NT'town hall is southeast of main street'
                VERB_NT'is southeast of'
                PROPER_NOUN_NT'town hall'
                RELATIONSHIP_NT'is southeast of'
                    PROPER_NOUN_NT'main street'
                    PROPER_NOUN_NT'southeast'
            SENTENCE_NT'"Town Hall was built during the slow days of the ice-cream b'
            SENTENCE_NT'the key to the city is in town hall'
                VERB_NT'is in'
                PROPER_NOUN_NT'key to the city'
                RELATIONSHIP_NT'is in'
                    PROPER_NOUN_NT'town hall'
            SENTENCE_NT'it unlocks the iron gate'
                VERB_NT'unlocks'
                PROPER_NOUN_NT'it'
                RELATIONSHIP_NT'unlocks'
                    PROPER_NOUN_NT'iron gate'
            SENTENCE_NT'it unlocks the bronze gates'
                VERB_NT'unlocks'
                PROPER_NOUN_NT'it'
                RELATIONSHIP_NT'unlocks'
                    PROPER_NOUN_NT'bronze gates'
            SENTENCE_NT'the description of the key to the city is "A skeleton key."'
                VERB_NT'is'
                X_OF_Y_NT'description of the key to the city'
                    PROPER_NOUN_NT'key to the city'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"A skeleton key."'
            SENTENCE_NT'a room can be indoors or outdoors'
                VERB_NT'can be'
                COMMON_NOUN_NT'a room'
                PROPER_NOUN_NT'indoors or outdoors'
                    AND_NT'or'
                        PROPER_NOUN_NT'indoors'
                        PROPER_NOUN_NT'outdoors'
            SENTENCE_NT'the post office , the alfred cralle pool hall , the store , '
                VERB_NT'are'
                AND_NT','
                    PROPER_NOUN_NT'post office'
                    AND_NT','
                        PROPER_NOUN_NT'alfred cralle pool hall'
                        AND_NT','
                            PROPER_NOUN_NT'store'
                            AND_NT','
                                PROPER_NOUN_NT'cold comfort'
                                AND_NT','
                                    PROPER_NOUN_NT'town hall'
                                    PROPER_NOUN_NT'library'
                ADJECTIVE_NT'indoors'
            SENTENCE_NT'use full-length room descriptions'
                VERB_NT'use'
                PROPER_NOUN_NT'full-length room descriptions'
            RULE_NT'after looking in an outdoors room'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let started printing be false'
                        INVOCATION_NT'let started printing be false'
                            NEW_LOCAL_CONTEXT_NT'started printing'
                                UNKNOWN_NT'started printing'
                            RVALUE_CONTEXT_NT'false'
                                CONSTANT_NT'false'-truth state
                    INVOCATION_LIST_NT'now every proximate door is not mentioned'
                        CONDITION_CONTEXT_NT'every proximate door is not mentioned'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if an indoors room is adjacent'
                            INVOCATION_NT'if an indoors room is adjacent'
                                CONDITION_CONTEXT_NT'an indoors room is adjacent'
                                    TEST_PROPOSITION_NT'an indoors room is adjacent'(test: [ Exists x : kind=room(x) ^ A127'indoors'(x) ^ A40'adjacent'(x) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let started printing be true'
                                INVOCATION_NT'let started printing be true'
                                    LVALUE_LOCAL_CONTEXT_NT'started printing'
                                        LOCAL_VARIABLE_NT'started printing'(tmp_0;truth state)
                                    RVALUE_CONTEXT_NT'true'
                                        CONSTANT_NT'true'-truth state
                            CODE_BLOCK_NT'say "From here you can head into [the list of adjacent indoo'
                                INVOCATION_LIST_SAY_NT'"From here you can head into "'
                                    INVOCATION_NT'"From here you can head into "'
                                        RVALUE_CONTEXT_NT'"From here you can head into "'
                                            CONSTANT_NT'"From here you can head into "'-text
                                INVOCATION_LIST_SAY_NT'the list of adjacent indoors rooms'
                                    INVOCATION_NT'the list of adjacent indoors rooms'
                                        RVALUE_CONTEXT_NT'adjacent indoors rooms'
                                            CONSTANT_NT'adjacent indoors rooms'-description of rooms
                                INVOCATION_LIST_SAY_NT'if a proximate door is not mentioned'
                                    INVOCATION_NT'if a proximate door is not mentioned'
                                        CONDITION_CONTEXT_NT'a proximate door is not mentioned'
                                            TEST_PROPOSITION_NT'a proximate door is not mentioned'(test: [ Exists x : kind=door(x) ^ A49'proximate'(x) ^ NOT[ A75'mentioned'(x) NOT] ])
                                INVOCATION_LIST_SAY_NT'", or go through "'
                                    INVOCATION_NT'", or go through "'
                                        RVALUE_CONTEXT_NT'", or go through "'
                                            CONSTANT_NT'", or go through "'-text
                                INVOCATION_LIST_SAY_NT'the list of proximate doors which are not mentioned'
                                    INVOCATION_NT'the list of proximate doors which are not mentioned'
                                        RVALUE_CONTEXT_NT'proximate doors which are not mentioned'
                                            CONSTANT_NT'proximate doors which are not mentioned'-description of doors
                                INVOCATION_LIST_SAY_NT'end if'
                                    INVOCATION_NT'end if'
                                INVOCATION_LIST_SAY_NT'". "'
                                    INVOCATION_NT'". "'
                                        RVALUE_CONTEXT_NT'". "'
                                            CONSTANT_NT'". "'-text
                                INVOCATION_LIST_SAY_NT'run paragraph on'
                                    INVOCATION_NT'run paragraph on'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if an outdoors room is adjacent'
                            INVOCATION_NT'if an outdoors room is adjacent'
                                CONDITION_CONTEXT_NT'an outdoors room is adjacent'
                                    TEST_PROPOSITION_NT'an outdoors room is adjacent'(test: [ Exists x : kind=room(x) ^ A128'outdoors'(x) ^ A40'adjacent'(x) ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "You could[if started printing is true] also[end if] go '
                                INVOCATION_LIST_SAY_NT'"You could"'
                                    INVOCATION_NT'"You could"'
                                        RVALUE_CONTEXT_NT'"You could"'
                                            CONSTANT_NT'"You could"'-text
                                INVOCATION_LIST_SAY_NT'if started printing is true'
                                    INVOCATION_NT'if started printing is true'
                                        CONDITION_CONTEXT_NT'started printing is true'
                                            TEST_PROPOSITION_NT'started printing is true'(test: [ is('started printing', 'true') ])
                                INVOCATION_LIST_SAY_NT'" also"'
                                    INVOCATION_NT'" also"'
                                        RVALUE_CONTEXT_NT'" also"'
                                            CONSTANT_NT'" also"'-text
                                INVOCATION_LIST_SAY_NT'end if'
                                    INVOCATION_NT'end if'
                                INVOCATION_LIST_SAY_NT'" go "'
                                    INVOCATION_NT'" go "'
                                        RVALUE_CONTEXT_NT'" go "'
                                            CONSTANT_NT'" go "'-text
                            INVOCATION_LIST_NT'let count be the number of adjacent outdoors rooms'
                                INVOCATION_NT'let count be the number of adjacent outdoors rooms'
                                    NEW_LOCAL_CONTEXT_NT'count'
                                        UNKNOWN_NT'count'
                                    RVALUE_CONTEXT_NT'number of adjacent outdoors rooms'
                                        PHRASE_TO_DECIDE_VALUE_NT'number of adjacent outdoors rooms'
                                            INVOCATION_LIST_NT'number of adjacent outdoors rooms'
                                                INVOCATION_NT'number of adjacent outdoors rooms'
                                                    RVALUE_CONTEXT_NT'adjacent outdoors rooms'
                                                        CONSTANT_NT'adjacent outdoors rooms'-description of rooms
                            INVOCATION_LIST_NT'let index be count'
                                INVOCATION_NT'let index be count'
                                    NEW_LOCAL_CONTEXT_NT'index'
                                        UNKNOWN_NT'index'
                                    RVALUE_CONTEXT_NT'count'
                                        LOCAL_VARIABLE_NT'count'(tmp_1;object)
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'repeat with next room running through adjacent outdoors room'
                                    INVOCATION_NT'repeat with next room running through adjacent outdoors room'
                                        NEW_LOCAL_CONTEXT_NT'next room'
                                            UNKNOWN_NT'next room'
                                        RVALUE_CONTEXT_NT'adjacent outdoors rooms'
                                            CONSTANT_NT'adjacent outdoors rooms'-description of rooms
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let way be the best route from the location to the next room'
                                        INVOCATION_NT'let way be the best route from the location to the next room'
                                            NEW_LOCAL_CONTEXT_NT'way'
                                                UNKNOWN_NT'way'
                                            RVALUE_CONTEXT_NT'best route from the location to the next room'
                                                PHRASE_TO_DECIDE_VALUE_NT'best route from the location to the next room'
                                                    INVOCATION_LIST_NT'best route from the location to the next room'
                                                        INVOCATION_NT'best route from the location to the next room'
                                                            RVALUE_CONTEXT_NT'location'
                                                                NONLOCAL_VARIABLE_NT'location'('location'(var)[object])
                                                            RVALUE_CONTEXT_NT'next room'
                                                                LOCAL_VARIABLE_NT'next room'(tmp_3;room)
                                    CODE_BLOCK_NT'say "[way] to [the next room]"'
                                        INVOCATION_LIST_SAY_NT'way'
                                            INVOCATION_NT'way'
                                                RVALUE_CONTEXT_NT'way'
                                                    LOCAL_VARIABLE_NT'way'(tmp_5;object)
                                        INVOCATION_LIST_SAY_NT'" to "'
                                            INVOCATION_NT'" to "'
                                                RVALUE_CONTEXT_NT'" to "'
                                                    CONSTANT_NT'" to "'-text
                                        INVOCATION_LIST_SAY_NT'the next room'
                                            INVOCATION_NT'the next room'
                                                RVALUE_CONTEXT_NT'next room'
                                                    LOCAL_VARIABLE_NT'next room'(tmp_3;room)
                                    INVOCATION_LIST_NT'decrement index'
                                        INVOCATION_NT'decrement index'
                                            LVALUE_CONTEXT_NT'index'
                                                LOCAL_VARIABLE_NT'index'(tmp_2;number)
                            INVOCATION_LIST_NT'make delimiter index of count , continuing'
                                INVOCATION_NT'make delimiter index of count'
                                    RVALUE_CONTEXT_NT'index'
                                        LOCAL_VARIABLE_NT'index'(tmp_2;number)
                                    RVALUE_CONTEXT_NT'count'
                                        LOCAL_VARIABLE_NT'count'(tmp_1;object)
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if a proximate door is not mentioned'
                            INVOCATION_NT'if a proximate door is not mentioned'
                                CONDITION_CONTEXT_NT'a proximate door is not mentioned'
                                    TEST_PROPOSITION_NT'a proximate door is not mentioned'(test: [ Exists x : kind=door(x) ^ A49'proximate'(x) ^ NOT[ A75'mentioned'(x) NOT] ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let started printing be true'
                                INVOCATION_NT'let started printing be true'
                                    LVALUE_LOCAL_CONTEXT_NT'started printing'
                                        LOCAL_VARIABLE_NT'started printing'(tmp_0;truth state)
                                    RVALUE_CONTEXT_NT'true'
                                        CONSTANT_NT'true'-truth state
                            CODE_BLOCK_NT'say "[if started printing is true]Also available[otherwise]Y'
                                INVOCATION_LIST_SAY_NT'if started printing is true'
                                    INVOCATION_NT'if started printing is true'
                                        CONDITION_CONTEXT_NT'started printing is true'
                                            TEST_PROPOSITION_NT'started printing is true'(test: [ is('started printing', 'true') ])
                                INVOCATION_LIST_SAY_NT'"Also available"'
                                    INVOCATION_NT'"Also available"'
                                        RVALUE_CONTEXT_NT'"Also available"'
                                            CONSTANT_NT'"Also available"'-text
                                INVOCATION_LIST_SAY_NT'otherwise'
                                    INVOCATION_NT'otherwise'
                                INVOCATION_LIST_SAY_NT'"Your available exits"'
                                    INVOCATION_NT'"Your available exits"'
                                        RVALUE_CONTEXT_NT'"Your available exits"'
                                            CONSTANT_NT'"Your available exits"'-text
                                INVOCATION_LIST_SAY_NT'end if'
                                    INVOCATION_NT'end if'
                                INVOCATION_LIST_SAY_NT'" "'
                                    INVOCATION_NT'" "'
                                        RVALUE_CONTEXT_NT'" "'
                                            CONSTANT_NT'" "'-text
                                INVOCATION_LIST_SAY_NT'is-are the list of proximate doors which are not mentioned'
                                    INVOCATION_NT'is-are the list of proximate doors which are not mentioned'
                                        RVALUE_CONTEXT_NT'proximate doors which are not mentioned'
                                            CONSTANT_NT'proximate doors which are not mentioned'-description of doors
                                INVOCATION_LIST_SAY_NT'"."'
                                    INVOCATION_NT'"."'
                                        RVALUE_CONTEXT_NT'"."'
                                            CONSTANT_NT'"."'-text
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if started printing is true'
                                    INVOCATION_NT'if started printing is true'
                                        CONDITION_CONTEXT_NT'started printing is true'
                                            TEST_PROPOSITION_NT'started printing is true'(test: [ is('started printing', 'true') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say paragraph break'
                                        INVOCATION_LIST_SAY_NT'paragraph break'
                                            INVOCATION_NT'paragraph break'
            RULE_NT'definition'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the front side of it is the location'
                            INVOCATION_NT'if the front side of it is the location'
                                CONDITION_CONTEXT_NT'front side of it is the location'
                                    TEST_PROPOSITION_NT'front side of it is the location'(test: [ is('front side of it', 'the location') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'yes'
                                INVOCATION_NT'yes'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the back side of it is the location'
                            INVOCATION_NT'if the back side of it is the location'
                                CONDITION_CONTEXT_NT'back side of it is the location'
                                    TEST_PROPOSITION_NT'back side of it is the location'(test: [ is('back side of it', 'the location') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'yes'
                                INVOCATION_NT'yes'
                    INVOCATION_LIST_NT'no'
                        INVOCATION_NT'no'
            RULE_NT'before exiting when the player is in an indoors room'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the player can see a door ( called nearest exit )'
                            INVOCATION_NT'if the player can see a door ( called nearest exit )'
                                CONDITION_CONTEXT_NT'player can see a door ( called nearest exit )'
                                    TEST_PROPOSITION_NT'player can see a door ( called nearest exit )'(test: [ Exists x : kind=door(x) ^ called='nearest exit'(door)(x) ^ can-see('player', x) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'try entering the nearest exit'
                                INVOCATION_NT'try entering the nearest exit'
                                    RVALUE_CONTEXT_NT'entering the nearest exit'
                                        CONSTANT_NT'entering the nearest exit'-action
                            CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat with way running through directions'
                            INVOCATION_NT'repeat with way running through directions'
                                NEW_LOCAL_CONTEXT_NT'way'
                                    UNKNOWN_NT'way'
                                RVALUE_CONTEXT_NT'directions'
                                    CONSTANT_NT'directions'-description of directions
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let next room be the room way from the location'
                                INVOCATION_NT'let next room be the room way from the location'
                                    NEW_LOCAL_CONTEXT_NT'next room'
                                        UNKNOWN_NT'next room'
                                    RVALUE_CONTEXT_NT'room way from the location'
                                        PHRASE_TO_DECIDE_VALUE_NT'room way from the location'
                                            INVOCATION_LIST_NT'room way from the location'
                                                INVOCATION_NT'room way from the location'
                                                    RVALUE_CONTEXT_NT'way'
                                                        LOCAL_VARIABLE_NT'way'(tmp_1;direction)
                                                    RVALUE_CONTEXT_NT'location'
                                                        NONLOCAL_VARIABLE_NT'location'('location'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the next room is a room'
                                    INVOCATION_NT'if the next room is a room'
                                        CONDITION_CONTEXT_NT'next room is a room'
                                            TEST_PROPOSITION_NT'next room is a room'(test: [ kind=room('next room') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'try going way'
                                        INVOCATION_NT'try going way'
                                            RVALUE_CONTEXT_NT'going way'
                                                CONSTANT_NT'going way'-action
                                    CODE_BLOCK_NT
            SENTENCE_NT'blank is a room'
                VERB_NT'is'
                PROPER_NOUN_NT'blank'
                COMMON_NOUN_NT'room'
            SENTENCE_NT'the destination of the player is blank'
                VERB_NT'is'
                X_OF_Y_NT'destination of the player'
                    PROPER_NOUN_NT'player'
                    PROPER_NOUN_NT'destination'
                PROPER_NOUN_NT'blank'
            SENTENCE_NT'blank contains 15 ice cream cones'
                VERB_NT'contains'
                PROPER_NOUN_NT'blank'
                RELATIONSHIP_NT'contains'
                    AND_NT
                        PROPER_NOUN_NT
                        AND_NT
                            PROPER_NOUN_NT
                            AND_NT
                                PROPER_NOUN_NT
                                AND_NT
                                    PROPER_NOUN_NT
                                    AND_NT
                                        PROPER_NOUN_NT
                                        AND_NT
                                            PROPER_NOUN_NT
                                            AND_NT
                                                PROPER_NOUN_NT
                                                AND_NT
                                                    PROPER_NOUN_NT
                                                    AND_NT
                                                        PROPER_NOUN_NT
                                                        AND_NT
                                                            PROPER_NOUN_NT
                                                            AND_NT
                                                                PROPER_NOUN_NT
                                                                AND_NT
                                                                    PROPER_NOUN_NT
                                                                    AND_NT
                                                                        PROPER_NOUN_NT
                                                                        AND_NT
                                                                            PROPER_NOUN_NT
                                                                            PROPER_NOUN_NT
        HEADING_NT'section 4 - other players' (level 5)
            SENTENCE_NT'vanessa is a woman in cold comfort'
                VERB_NT'is'
                PROPER_NOUN_NT'vanessa'
                COMMON_NOUN_NT'woman in cold comfort'
            SENTENCE_NT'vanessa owns cold comfort'
                VERB_NT'owns'
                PROPER_NOUN_NT'vanessa'
                RELATIONSHIP_NT'owns'
                    PROPER_NOUN_NT'cold comfort'
            SENTENCE_NT'francine is a woman in the public library'
                VERB_NT'is'
                PROPER_NOUN_NT'francine'
                COMMON_NOUN_NT'woman in the public library'
            SENTENCE_NT'francine carries a book called phlox for phyllis'
                VERB_NT'carries'
                PROPER_NOUN_NT'francine'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'phlox for phyllis'
            SENTENCE_NT'francine carries a stamped envelope called a pink stamped en'
                VERB_NT'carries'
                PROPER_NOUN_NT'francine'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'pink stamped envelope'
            SENTENCE_NT'lewis is a man in the alfred cralle pool hall'
                VERB_NT'is'
                PROPER_NOUN_NT'lewis'
                COMMON_NOUN_NT'man in the alfred cralle pool hall'
            SENTENCE_NT'lewis carries 3 stamped envelopes'
                VERB_NT'carries'
                PROPER_NOUN_NT'lewis'
                RELATIONSHIP_NT'carries'
                    AND_NT
                        PROPER_NOUN_NT
                        AND_NT
                            PROPER_NOUN_NT
                            PROPER_NOUN_NT
            SENTENCE_NT'lewis carries a book called idiot's guide to dating'
                VERB_NT'carries'
                PROPER_NOUN_NT'lewis'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'idiot's guide to dating'
            SENTENCE_NT'lewis carries a book called how to meet women'
                VERB_NT'carries'
                PROPER_NOUN_NT'lewis'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'how to meet women'
            SENTENCE_NT'lewis carries a book called seduction in three easy steps'
                VERB_NT'carries'
                PROPER_NOUN_NT'lewis'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'seduction in three easy steps'
            SENTENCE_NT'lewis carries a dvd called sleepless in seattle'
                VERB_NT'carries'
                PROPER_NOUN_NT'lewis'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'sleepless in seattle'
            SENTENCE_NT'gene is a man in nancy johnson memorial square'
                VERB_NT'is'
                PROPER_NOUN_NT'gene'
                COMMON_NOUN_NT'man in nancy johnson memorial square'
            SENTENCE_NT'gene carries a stamped envelope'
                VERB_NT'carries'
                PROPER_NOUN_NT'gene'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT
            SENTENCE_NT'gene carries a dvd called casablanca'
                VERB_NT'carries'
                PROPER_NOUN_NT'gene'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'casablanca'
            SENTENCE_NT'gene carries a coupon'
                VERB_NT'carries'
                PROPER_NOUN_NT'gene'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT
            SENTENCE_NT'rhoda is a woman in marciony street'
                VERB_NT'is'
                PROPER_NOUN_NT'rhoda'
                COMMON_NOUN_NT'woman in marciony street'
            SENTENCE_NT'rhoda carries a book called the marciony street murders'
                VERB_NT'carries'
                PROPER_NOUN_NT'rhoda'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'the marciony street murders'
            SENTENCE_NT'rhoda carries a dvd called unsolved serial killings xviii'
                VERB_NT'carries'
                PROPER_NOUN_NT'rhoda'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'unsolved serial killings xviii'
            SENTENCE_NT'rhoda carries a stamped envelope called a squashy package'
                VERB_NT'carries'
                PROPER_NOUN_NT'rhoda'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'squashy package'
            SENTENCE_NT'martin is a man in main street'
                VERB_NT'is'
                PROPER_NOUN_NT'martin'
                COMMON_NOUN_NT'man in main street'
            SENTENCE_NT'martin carries a dvd called the lifecycle of the south sea t'
                VERB_NT'carries'
                PROPER_NOUN_NT'martin'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'the lifecycle of the south sea tortoise'
            SENTENCE_NT'martin carries a coupon'
                VERB_NT'carries'
                PROPER_NOUN_NT'martin'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT
            SENTENCE_NT'antony is a man in movie rental'
                VERB_NT'is'
                PROPER_NOUN_NT'antony'
                COMMON_NOUN_NT'man in movie rental'
            SENTENCE_NT'antony carries a coupon'
                VERB_NT'carries'
                PROPER_NOUN_NT'antony'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT
            SENTENCE_NT'antony carries a stamped envelope called a postcard'
                VERB_NT'carries'
                PROPER_NOUN_NT'antony'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'postcard'
            SENTENCE_NT'shelby is a man in the town hall'
                VERB_NT'is'
                PROPER_NOUN_NT'shelby'
                COMMON_NOUN_NT'man in the town hall'
            SENTENCE_NT'shelby carries a dvd called conducting an orderly meeting'
                VERB_NT'carries'
                PROPER_NOUN_NT'shelby'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT'conducting an orderly meeting'
            SENTENCE_NT'shelby carries 5 stamped envelopes'
                VERB_NT'carries'
                PROPER_NOUN_NT'shelby'
                RELATIONSHIP_NT'carries'
                    AND_NT
                        PROPER_NOUN_NT
                        AND_NT
                            PROPER_NOUN_NT
                            AND_NT
                                PROPER_NOUN_NT
                                AND_NT
                                    PROPER_NOUN_NT
                                    PROPER_NOUN_NT
            SENTENCE_NT'shelby carries an ice cream cone'
                VERB_NT'carries'
                PROPER_NOUN_NT'shelby'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT
            SENTENCE_NT'shelby carries a coupon'
                VERB_NT'carries'
                PROPER_NOUN_NT'shelby'
                RELATIONSHIP_NT'carries'
                    PROPER_NOUN_NT
            SENTENCE_NT'christopher is a man in the library'
                VERB_NT'is'
                PROPER_NOUN_NT'christopher'
                COMMON_NOUN_NT'man in the library'
            SENTENCE_NT'christopher owns the library'
                VERB_NT'owns'
                PROPER_NOUN_NT'christopher'
                RELATIONSHIP_NT'owns'
                    PROPER_NOUN_NT'library'
            SENTENCE_NT'linnea is a woman in the alfred cralle pool hall'
                VERB_NT'is'
                PROPER_NOUN_NT'linnea'
                COMMON_NOUN_NT'woman in the alfred cralle pool hall'
            SENTENCE_NT'linnea owns the alfred cralle pool hall'
                VERB_NT'owns'
                PROPER_NOUN_NT'linnea'
                RELATIONSHIP_NT'owns'
                    PROPER_NOUN_NT'alfred cralle pool hall'
            SENTENCE_NT'ned is a man in the movie rental store'
                VERB_NT'is'
                PROPER_NOUN_NT'ned'
                COMMON_NOUN_NT'man in the movie rental store'
            SENTENCE_NT'ned owns the movie rental'
                VERB_NT'owns'
                PROPER_NOUN_NT'ned'
                RELATIONSHIP_NT'owns'
                    PROPER_NOUN_NT'movie rental'
            RULE_NT'after printing the name of someone ( called target ) while l'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the target owns the location of the target'
                            INVOCATION_NT'if the target owns the location of the target'
                                CONDITION_CONTEXT_NT'target owns the location of the target'
                                    TEST_PROPOSITION_NT'target owns the location of the target'(test: [ is('target', {<schema: (QUOTED_INAME_0_0000005d(*1))>:'the location of the target'}) ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say " (the owner)"'
                                INVOCATION_LIST_SAY_NT'" (the owner)"'
                                    INVOCATION_NT'" (the owner)"'
                                        RVALUE_CONTEXT_NT'" (the owner)"'
                                            CONSTANT_NT'" (the owner)"'-text
            SENTENCE_NT'the description of a person is usually "[The noun] [if the n'
                VERB_NT'is usually'
                X_OF_Y_NT'description of a person'
                    COMMON_NOUN_NT'person'
                    PROPER_NOUN_NT'description'
                PROPER_NOUN_NT'"[The noun] [if the noun is clean]looks healthy[otherwise]is'
            RULE_NT'after examining another person who is carrying something'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT'say "[if the noun is female]She[otherwise]He[end if] is carr'
                        INVOCATION_LIST_SAY_NT'if the noun is female'
                            INVOCATION_NT'if the noun is female'
                                CONDITION_CONTEXT_NT'noun is female'
                                    TEST_PROPOSITION_NT'noun is female'(test: [ A87'female'('noun') ])
                        INVOCATION_LIST_SAY_NT'"She"'
                            INVOCATION_NT'"She"'
                                RVALUE_CONTEXT_NT'"She"'
                                    CONSTANT_NT'"She"'-text
                        INVOCATION_LIST_SAY_NT'otherwise'
                            INVOCATION_NT'otherwise'
                        INVOCATION_LIST_SAY_NT'"He"'
                            INVOCATION_NT'"He"'
                                RVALUE_CONTEXT_NT'"He"'
                                    CONSTANT_NT'"He"'-text
                        INVOCATION_LIST_SAY_NT'end if'
                            INVOCATION_NT'end if'
                        INVOCATION_LIST_SAY_NT'" is carrying "'
                            INVOCATION_NT'" is carrying "'
                                RVALUE_CONTEXT_NT'" is carrying "'
                                    CONSTANT_NT'" is carrying "'-text
                        INVOCATION_LIST_SAY_NT'a list of things carried by the noun'
                            INVOCATION_NT'a list of things carried by the noun'
                                RVALUE_CONTEXT_NT'things carried by the noun'
                                    CONSTANT_NT'things carried by the noun'-description of things
                        INVOCATION_LIST_SAY_NT'"."'
                            INVOCATION_NT'"."'
                                RVALUE_CONTEXT_NT'"."'
                                    CONSTANT_NT'"."'-text
            RULE_NT'when play begins'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let patient zero be a random other person'
                        INVOCATION_NT'let patient zero be a random other person'
                            NEW_LOCAL_CONTEXT_NT'patient zero'
                                UNKNOWN_NT'patient zero'
                            RVALUE_CONTEXT_NT'a random other person'
                                PHRASE_TO_DECIDE_VALUE_NT'a random other person'
                                    INVOCATION_LIST_NT'a random other person'
                                        INVOCATION_NT'a random other person'
                                            RVALUE_CONTEXT_NT'other person'
                                                CONSTANT_NT'other person'-description of people
                    INVOCATION_LIST_NT'now patient zero is infected'
                        CONDITION_CONTEXT_NT'patient zero is infected'
        HEADING_NT'section 5 - conversation' (level 5)
            SENTENCE_NT'a person has a table name called conversation'
                VERB_NT'has'
                COMMON_NOUN_NT'person'
                ALLOWED_NT
                    PROPERTYCALLED_NT'called'
                        PROPER_NOUN_NT'table name'
                        PROPER_NOUN_NT'conversation'
            RULE_NT'instead of asking someone about something'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let the source be the conversation of the noun'
                        INVOCATION_NT'let the source be the conversation of the noun'
                            NEW_LOCAL_CONTEXT_NT'source'
                                UNKNOWN_NT'source'
                            RVALUE_CONTEXT_NT'conversation of the noun'
                                PROPERTY_VALUE_NT'conversation of the noun'
                                    CONSTANT_NT-nothing valued property
                                    NONLOCAL_VARIABLE_NT'the noun'('noun'(var)[object])
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if topic understood is a topic listed in source'
                            INVOCATION_NT'if topic understood is a topic listed in source'
                                CONDITION_CONTEXT_NT'topic understood is a topic listed in source'
                                    TEST_PROPOSITION_NT'topic understood is a topic listed in source'(test: [ kind=snippet('topic understood') ^ listed_in('topic understood', 'source') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if there is a turn stamp entry'
                                    INVOCATION_NT'if there is a turn stamp entry'
                                        CONDITION_CONTEXT_NT'there is a turn stamp entry'
                                            TEST_VALUE_NT'there is a turn stamp entry'
                                                PHRASE_TO_DECIDE_VALUE_NT'there is a turn stamp entry'
                                                    INVOCATION_LIST_NT'there is a turn stamp entry'
                                                        INVOCATION_NT'there is a turn stamp entry'
                                                            LVALUE_TR_CONTEXT_NT'a turn stamp entry'
                                                                TABLE_ENTRY_NT'a turn stamp entry'
                                                                    CONSTANT_NT-nothing valued table column
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "You have already heard that [summary entry]."'
                                        INVOCATION_LIST_SAY_NT'"You have already heard that "'
                                            INVOCATION_NT'"You have already heard that "'
                                                RVALUE_CONTEXT_NT'"You have already heard that "'
                                                    CONSTANT_NT'"You have already heard that "'-text
                                        INVOCATION_LIST_SAY_NT'summary entry'
                                            INVOCATION_NT'summary entry'
                                                RVALUE_CONTEXT_NT'summary entry'
                                                    TABLE_ENTRY_NT'summary entry'
                                                        CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'"."'
                                            INVOCATION_NT'"."'
                                                RVALUE_CONTEXT_NT'"."'
                                                    CONSTANT_NT'"."'-text
                                CODE_BLOCK_NT'otherwise'
                                    INVOCATION_LIST_NT'now turn stamp entry is the turn count'
                                        CONDITION_CONTEXT_NT'turn stamp entry is the turn count'
                                    INVOCATION_LIST_NT'now the character entry is the noun'
                                        CONDITION_CONTEXT_NT'the character entry is the noun'
                                    CODE_BLOCK_NT'say "[reply entry][paragraph break]"'
                                        INVOCATION_LIST_SAY_NT'reply entry'
                                            INVOCATION_NT'reply entry'
                                                RVALUE_CONTEXT_NT'reply entry'
                                                    TABLE_ENTRY_NT'reply entry'
                                                        CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'paragraph break'
                                            INVOCATION_NT'paragraph break'
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT'say "[The noun] stares at you blankly."'
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'" stares at you blankly."'
                                    INVOCATION_NT'" stares at you blankly."'
                                        RVALUE_CONTEXT_NT'" stares at you blankly."'
                                            CONSTANT_NT'" stares at you blankly."'-text
            RULE_NT'instead of telling someone about something'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'try asking the noun about it'
                        INVOCATION_NT'try asking the noun about it'
                            RVALUE_CONTEXT_NT'asking the noun about it'
                                CONSTANT_NT'asking the noun about it'-action
            SENTENCE_NT'understand "recap" or "recall" or "review" as recalling conv'
                VERB_NT'understand'
                PROPER_NOUN_NT'"recap" or "recall" or "review"'
                PROPER_NOUN_NT'recalling conversations'
            SENTENCE_NT'recalling conversations is an action applying to nothing'
                VERB_NT'is'
                PROPER_NOUN_NT'recalling conversations'
                PROPER_NOUN_NT'applying to nothing'
            RULE_NT'carry out recalling conversations'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat with speaker running through other people'
                            INVOCATION_NT'repeat with speaker running through other people'
                                NEW_LOCAL_CONTEXT_NT'speaker'
                                    UNKNOWN_NT'speaker'
                                RVALUE_CONTEXT_NT'other people'
                                    CONSTANT_NT'other people'-description of people
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let source be the conversation of the speaker'
                                INVOCATION_NT'let source be the conversation of the speaker'
                                    NEW_LOCAL_CONTEXT_NT'source'
                                        UNKNOWN_NT'source'
                                    RVALUE_CONTEXT_NT'conversation of the speaker'
                                        PROPERTY_VALUE_NT'conversation of the speaker'
                                            CONSTANT_NT-nothing valued property
                                            LOCAL_VARIABLE_NT'the speaker'(tmp_0;person)
                            INVOCATION_LIST_NT'sort source in turn stamp order'
                                INVOCATION_NT'sort source in turn stamp order'
                                    RVALUE_CONTEXT_NT'source'
                                        LOCAL_VARIABLE_NT'source'(tmp_2;table name)
                                    RVALUE_CONTEXT_NT'turn stamp'
                                        CONSTANT_NT'turn stamp'-nothing valued table column
                            CODE_BLOCK_NT'say "[The speaker] has so far told you: [line break]"'
                                INVOCATION_LIST_SAY_NT'the speaker'
                                    INVOCATION_NT'the speaker'
                                        RVALUE_CONTEXT_NT'speaker'
                                            LOCAL_VARIABLE_NT'speaker'(tmp_0;person)
                                INVOCATION_LIST_SAY_NT'" has so far told you: "'
                                    INVOCATION_NT'" has so far told you: "'
                                        RVALUE_CONTEXT_NT'" has so far told you: "'
                                            CONSTANT_NT'" has so far told you: "'-text
                                INVOCATION_LIST_SAY_NT'line break'
                                    INVOCATION_NT'line break'
                            INVOCATION_LIST_NT'let index be 0'
                                INVOCATION_NT'let index be 0'
                                    NEW_LOCAL_CONTEXT_NT'index'
                                        UNKNOWN_NT'index'
                                    RVALUE_CONTEXT_NT'0'
                                        CONSTANT_NT'0'-number
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'repeat through source'
                                    INVOCATION_NT'repeat through source'
                                        RVALUE_CONTEXT_NT'source'
                                            LOCAL_VARIABLE_NT'source'(tmp_2;table name)
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if there is a turn stamp entry and the speaker is character '
                                            INVOCATION_NT'if there is a turn stamp entry and the speaker is character '
                                                CONDITION_CONTEXT_NT'there is a turn stamp entry and the speaker is character ent'
                                                    LOGICAL_AND_NT'there is a turn stamp entry and the speaker is character ent'
                                                        TEST_VALUE_NT'there is a turn stamp entry'
                                                            PHRASE_TO_DECIDE_VALUE_NT'there is a turn stamp entry'
                                                                INVOCATION_LIST_NT'there is a turn stamp entry'
                                                                    INVOCATION_NT'there is a turn stamp entry'
                                                                        LVALUE_TR_CONTEXT_NT'a turn stamp entry'
                                                                            TABLE_ENTRY_NT'a turn stamp entry'
                                                                                CONSTANT_NT-nothing valued table column
                                                        TEST_PROPOSITION_NT'the speaker is character entry'(test: [ is('the speaker', 'character entry') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'let index be 1'
                                                INVOCATION_NT'let index be 1'
                                                    LVALUE_LOCAL_CONTEXT_NT'index'
                                                        LOCAL_VARIABLE_NT'index'(tmp_3;number)
                                                    RVALUE_CONTEXT_NT'1'
                                                        CONSTANT_NT'1'-number
                                            CODE_BLOCK_NT'say "  [summary entry][line break]"'
                                                INVOCATION_LIST_SAY_NT'"  "'
                                                    INVOCATION_NT'"  "'
                                                        RVALUE_CONTEXT_NT'"  "'
                                                            CONSTANT_NT'"  "'-text
                                                INVOCATION_LIST_SAY_NT'summary entry'
                                                    INVOCATION_NT'summary entry'
                                                        RVALUE_CONTEXT_NT'summary entry'
                                                            TABLE_ENTRY_NT'summary entry'
                                                                CONSTANT_NT-nothing valued table column
                                                INVOCATION_LIST_SAY_NT'line break'
                                                    INVOCATION_NT'line break'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if index is 0'
                                    INVOCATION_NT'if index is 0'
                                        CONDITION_CONTEXT_NT'index is 0'
                                            TEST_PROPOSITION_NT'index is 0'(test: [ is('index', '0') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "  absolutely nothing[line break]"'
                                        INVOCATION_LIST_SAY_NT'"  absolutely nothing"'
                                            INVOCATION_NT'"  absolutely nothing"'
                                                RVALUE_CONTEXT_NT'"  absolutely nothing"'
                                                    CONSTANT_NT'"  absolutely nothing"'-text
                                        INVOCATION_LIST_SAY_NT'line break'
                                            INVOCATION_NT'line break'
                            CODE_BLOCK_NT'say line break'
                                INVOCATION_LIST_SAY_NT'line break'
                                    INVOCATION_NT'line break'
            SENTENCE_NT'the conversation of a person is usually table of general chi'
                VERB_NT'is usually'
                X_OF_Y_NT'conversation of a person'
                    COMMON_NOUN_NT'person'
                    PROPER_NOUN_NT'conversation'
                PROPER_NOUN_NT'table of general chitchat'
            TABLE_NT'table of general chitchat topic reply summary turn stamp cha'
            SENTENCE_NT'the conversation of vanessa is the table of vanessa chatter'
                VERB_NT'is'
                X_OF_Y_NT'conversation of vanessa'
                    PROPER_NOUN_NT'vanessa'
                    PROPER_NOUN_NT'conversation'
                PROPER_NOUN_NT'table of vanessa chatter'
            TABLE_NT'table of vanessa chatter topic reply summary turn stamp char'
            RULE_NT'after reading a command'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'while player's command includes "the"'
                            INVOCATION_NT'while player's command includes "the"'
                                CONDITION_CONTEXT_NT'player's command includes "the"'
                                    TEST_VALUE_NT'player's command includes "the"'
                                        PHRASE_TO_DECIDE_VALUE_NT'player's command includes "the"'
                                            INVOCATION_LIST_NT'player's command includes "the"'
                                                INVOCATION_NT'player's command includes "the"'
                                                    RVALUE_CONTEXT_NT'player's command'
                                                        NONLOCAL_VARIABLE_NT'player's command'('player's command'(var)[snippet])
                                                    RVALUE_CONTEXT_NT'"the"'
                                                        CONSTANT_NT'"the"'-topic
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'cut the matched text'
                                INVOCATION_NT'cut the matched text'
                                    RVALUE_CONTEXT_NT'matched text'
                                        NONLOCAL_VARIABLE_NT'matched text'('matched text'(var)[snippet])
        HEADING_NT'section 6 - movement description' (level 5)
            SENTENCE_NT'a person has some text called walk style'
                VERB_NT'has'
                COMMON_NOUN_NT'person'
                ALLOWED_NT
                    PROPERTYCALLED_NT'called'
                        PROPER_NOUN_NT'text'
                        PROPER_NOUN_NT'walk style'
            SENTENCE_NT'the walk style of a man is usually "stride"'
                VERB_NT'is usually'
                X_OF_Y_NT'walk style of a man'
                    COMMON_NOUN_NT'man'
                    PROPER_NOUN_NT'walk style'
                PROPER_NOUN_NT'"stride"'
            SENTENCE_NT'the walk style of a woman is usually "strut"'
                VERB_NT'is usually'
                X_OF_Y_NT'walk style of a woman'
                    COMMON_NOUN_NT'woman'
                    PROPER_NOUN_NT'walk style'
                PROPER_NOUN_NT'"strut"'
            SENTENCE_NT'the walk style of gene is "[one of]wander[or]stroll[purely a'
                VERB_NT'is'
                X_OF_Y_NT'walk style of gene'
                    PROPER_NOUN_NT'gene'
                    PROPER_NOUN_NT'walk style'
                PROPER_NOUN_NT'"[one of]wander[or]stroll[purely at random]"'
            SENTENCE_NT'the walk style of francine is "waddle"'
                VERB_NT'is'
                X_OF_Y_NT'walk style of francine'
                    PROPER_NOUN_NT'francine'
                    PROPER_NOUN_NT'walk style'
                PROPER_NOUN_NT'"waddle"'
            SENTENCE_NT'the walk style of antony is "scamper"'
                VERB_NT'is'
                X_OF_Y_NT'walk style of antony'
                    PROPER_NOUN_NT'antony'
                    PROPER_NOUN_NT'walk style'
                PROPER_NOUN_NT'"scamper"'
            SENTENCE_NT'the walk style of rhoda is "sashay"'
                VERB_NT'is'
                X_OF_Y_NT'walk style of rhoda'
                    PROPER_NOUN_NT'rhoda'
                    PROPER_NOUN_NT'walk style'
                PROPER_NOUN_NT'"sashay"'
            TABLE_NT'table of visible exits character second third heading chosen'
            TABLE_NT'table of visible entrances character second third heading ch'
            RULE_NT'to clear ( current table - a table name )'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat through current table'
                            INVOCATION_NT'repeat through current table'
                                RVALUE_CONTEXT_NT'current table'
                                    LOCAL_VARIABLE_NT'current table'(t_0;table name)
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'blank out the whole row'
                                INVOCATION_NT'blank out the whole row'
            RULE_NT'to tidy departures of ( current table - a table name )'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let next direction be up'
                        INVOCATION_NT'let next direction be up'
                            NEW_LOCAL_CONTEXT_NT'next direction'
                                UNKNOWN_NT'next direction'
                            RVALUE_CONTEXT_NT'up'
                                CONSTANT_NT'up'-direction(I_up)(I30'up')
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat through current table'
                            INVOCATION_NT'repeat through current table'
                                RVALUE_CONTEXT_NT'current table'
                                    LOCAL_VARIABLE_NT'current table'(t_0;table name)
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if heading chosen entry is next direction'
                                    INVOCATION_NT'if heading chosen entry is next direction'
                                        CONDITION_CONTEXT_NT'heading chosen entry is next direction'
                                            TEST_PROPOSITION_NT'heading chosen entry is next direction'(test: [ is('heading chosen entry', 'next direction') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'let accomplice be character entry'
                                        INVOCATION_NT'let accomplice be character entry'
                                            NEW_LOCAL_CONTEXT_NT'accomplice'
                                                UNKNOWN_NT'accomplice'
                                            RVALUE_CONTEXT_NT'character entry'
                                                TABLE_ENTRY_NT'character entry'
                                                    CONSTANT_NT-nothing valued table column
                                    INVOCATION_LIST_NT'choose row with heading chosen of next direction in the curr'
                                        INVOCATION_NT'choose row with heading chosen of next direction in the curr'
                                            RVALUE_CONTEXT_NT'heading chosen'
                                                CONSTANT_NT'heading chosen'-nothing valued table column
                                            RVALUE_CONTEXT_NT'next direction'
                                                LOCAL_VARIABLE_NT'next direction'(tmp_0;direction)
                                            RVALUE_CONTEXT_NT'current table'
                                                LOCAL_VARIABLE_NT'current table'(t_0;table name)
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if total entry is 1'
                                            INVOCATION_NT'if total entry is 1'
                                                CONDITION_CONTEXT_NT'total entry is 1'
                                                    TEST_PROPOSITION_NT'total entry is 1'(test: [ is('total entry', '1') ])
                                        CODE_BLOCK_NT
                                            INVOCATION_LIST_NT'now second entry is accomplice'
                                                CONDITION_CONTEXT_NT'second entry is accomplice'
                                            INVOCATION_LIST_NT'now total entry is 2'
                                                CONDITION_CONTEXT_NT'total entry is 2'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if total entry is 2'
                                            INVOCATION_NT'if total entry is 2'
                                                CONDITION_CONTEXT_NT'total entry is 2'
                                                    TEST_PROPOSITION_NT'total entry is 2'(test: [ is('total entry', '2') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT
                                                INVOCATION_LIST_NT'unless the second entry is accomplice'
                                                    INVOCATION_NT'unless the second entry is accomplice'
                                                        CONDITION_CONTEXT_NT'second entry is accomplice'
                                                            TEST_PROPOSITION_NT'second entry is accomplice'(test: [ is('second entry', 'accomplice') ])
                                                CODE_BLOCK_NT
                                                    INVOCATION_LIST_NT'now third entry is accomplice'
                                                        CONDITION_CONTEXT_NT'third entry is accomplice'
                                                    INVOCATION_LIST_NT'now total entry is 3'
                                                        CONDITION_CONTEXT_NT'total entry is 3'
                                    INVOCATION_LIST_NT'choose row with character of accomplice in the current table'
                                        INVOCATION_NT'choose row with character of accomplice in the current table'
                                            RVALUE_CONTEXT_NT'character'
                                                CONSTANT_NT'character'-nothing valued table column
                                            RVALUE_CONTEXT_NT'accomplice'
                                                LOCAL_VARIABLE_NT'accomplice'(tmp_3;thing)
                                            RVALUE_CONTEXT_NT'current table'
                                                LOCAL_VARIABLE_NT'current table'(t_0;table name)
                                    INVOCATION_LIST_NT'blank out the whole row'
                                        INVOCATION_NT'blank out the whole row'
                                CODE_BLOCK_NT'otherwise'
                                    INVOCATION_LIST_NT'let next direction be heading chosen entry'
                                        INVOCATION_NT'let next direction be heading chosen entry'
                                            LVALUE_LOCAL_CONTEXT_NT'next direction'
                                                LOCAL_VARIABLE_NT'next direction'(tmp_0;direction)
                                            RVALUE_CONTEXT_NT'heading chosen entry'
                                                TABLE_ENTRY_NT'heading chosen entry'
                                                    CONSTANT_NT-nothing valued table column
            SENTENCE_NT'a door has a person called last opener'
                VERB_NT'has'
                COMMON_NOUN_NT'door'
                ALLOWED_NT
                    PROPERTYCALLED_NT'called'
                        PROPER_NOUN_NT'person'
                        PROPER_NOUN_NT'last opener'
            RULE_NT'report someone opening a door'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now group size is 1'
                        CONDITION_CONTEXT_NT'group size is 1'
                    INVOCATION_LIST_NT'now the last opener of the noun is the person asked'
                        CONDITION_CONTEXT_NT'the last opener of the noun is the person asked'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is visible'
                            INVOCATION_NT'if the person asked is visible'
                                CONDITION_CONTEXT_NT'person asked is visible'
                                    TEST_PROPOSITION_NT'person asked is visible'(test: [ A30'visible'('person asked') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The person asked] opens [the noun]. [run paragraph on]'
                                INVOCATION_LIST_SAY_NT'the person asked'
                                    INVOCATION_NT'the person asked'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                INVOCATION_LIST_SAY_NT'" opens "'
                                    INVOCATION_NT'" opens "'
                                        RVALUE_CONTEXT_NT'" opens "'
                                            CONSTANT_NT'" opens "'-text
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'". "'
                                    INVOCATION_NT'". "'
                                        RVALUE_CONTEXT_NT'". "'
                                            CONSTANT_NT'". "'-text
                                INVOCATION_LIST_SAY_NT'run paragraph on'
                                    INVOCATION_NT'run paragraph on'
                            CODE_BLOCK_NT
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT'say "[The noun] opens from the other side. [run paragraph on'
                                INVOCATION_LIST_SAY_NT'the noun'
                                    INVOCATION_NT'the noun'
                                        RVALUE_CONTEXT_NT'noun'
                                            NONLOCAL_VARIABLE_NT'noun'('noun'(var)[object])
                                INVOCATION_LIST_SAY_NT'" opens from the other side. "'
                                    INVOCATION_NT'" opens from the other side. "'
                                        RVALUE_CONTEXT_NT'" opens from the other side. "'
                                            CONSTANT_NT'" opens from the other side. "'-text
                                INVOCATION_LIST_SAY_NT'run paragraph on'
                                    INVOCATION_NT'run paragraph on'
                            CODE_BLOCK_NT
            RULE_NT'report someone going through a door ( called route )'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is not the last opener of the route'
                            INVOCATION_NT'if the person asked is not the last opener of the route'
                                CONDITION_CONTEXT_NT'person asked is not the last opener of the route'
                                    TEST_PROPOSITION_NT'person asked is not the last opener of the route'(test: [ NOT[ is('person asked', 'the last opener of the route') NOT] ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'continue the action'
                                INVOCATION_NT'continue the action'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is the last person named'
                            INVOCATION_NT'if the person asked is the last person named'
                                CONDITION_CONTEXT_NT'person asked is the last person named'
                                    TEST_PROPOSITION_NT'person asked is the last person named'(test: [ is('person asked', 'the last person named') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "[The person asked as pronoun]"'
                                INVOCATION_LIST_SAY_NT'the person asked as pronoun'
                                    [1/2] INVOCATION_NT'the person asked as pronoun'/1
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                                    [2/2] INVOCATION_NT'the person asked as pronoun'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT'say "[The person asked]"'
                                INVOCATION_LIST_SAY_NT'the person asked'
                                    INVOCATION_NT'the person asked'
                                        RVALUE_CONTEXT_NT'person asked'
                                            NONLOCAL_VARIABLE_NT'person asked'('person asked'(var)[object])
                    CODE_BLOCK_NT'say " [if the person asked is in the location]comes[otherwis'
                        INVOCATION_LIST_SAY_NT'" "'
                            INVOCATION_NT'" "'
                                RVALUE_CONTEXT_NT'" "'
                                    CONSTANT_NT'" "'-text
                        INVOCATION_LIST_SAY_NT'if the person asked is in the location'
                            INVOCATION_NT'if the person asked is in the location'
                                CONDITION_CONTEXT_NT'person asked is in the location'
                                    TEST_PROPOSITION_NT'person asked is in the location'(test: [ is('the location', {<schema: ContainerOf(*1)>:'person asked'}) ])
                        INVOCATION_LIST_SAY_NT'"comes"'
                            INVOCATION_NT'"comes"'
                                RVALUE_CONTEXT_NT'"comes"'
                                    CONSTANT_NT'"comes"'-text
                        INVOCATION_LIST_SAY_NT'otherwise'
                            INVOCATION_NT'otherwise'
                        INVOCATION_LIST_SAY_NT'"goes"'
                            INVOCATION_NT'"goes"'
                                RVALUE_CONTEXT_NT'"goes"'
                                    CONSTANT_NT'"goes"'-text
                        INVOCATION_LIST_SAY_NT'end if'
                            INVOCATION_NT'end if'
                        INVOCATION_LIST_SAY_NT'" through"'
                            INVOCATION_NT'" through"'
                                RVALUE_CONTEXT_NT'" through"'
                                    CONSTANT_NT'" through"'-text
                        INVOCATION_LIST_SAY_NT'if the last thing named is not the route'
                            INVOCATION_NT'if the last thing named is not the route'
                                CONDITION_CONTEXT_NT'last thing named is not the route'
                                    TEST_PROPOSITION_NT'last thing named is not the route'(test: [ NOT[ is('last thing named', 'the route') NOT] ])
                        INVOCATION_LIST_SAY_NT'" "'
                            INVOCATION_NT'" "'
                                RVALUE_CONTEXT_NT'" "'
                                    CONSTANT_NT'" "'-text
                        INVOCATION_LIST_SAY_NT'the route'
                            INVOCATION_NT'the route'
                                RVALUE_CONTEXT_NT'route'
                                    LOCAL_VARIABLE_NT'route'(tmp_0;door)
                        INVOCATION_LIST_SAY_NT'end if'
                            INVOCATION_NT'end if'
                        INVOCATION_LIST_SAY_NT'"."'
                            INVOCATION_NT'"."'
                                RVALUE_CONTEXT_NT'"."'
                                    CONSTANT_NT'"."'-text
                    CODE_BLOCK_NT
            SENTENCE_NT'the last thing named is a thing that varies'
                VERB_NT'is'
                PROPER_NOUN_NT'last thing named'
                COMMON_NOUN_NT'thing that varies'
            RULE_NT'before printing the name of something ( called target ) whic'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the last thing named is the target'
                        CONDITION_CONTEXT_NT'the last thing named is the target'
            RULE_NT'report someone going a direction'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is in the location'
                            INVOCATION_NT'if the person asked is in the location'
                                CONDITION_CONTEXT_NT'person asked is in the location'
                                    TEST_PROPOSITION_NT'person asked is in the location'(test: [ is('the location', {<schema: ContainerOf(*1)>:'person asked'}) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'choose a blank row in the table of visible entrances'
                                INVOCATION_NT'choose a blank row in the table of visible entrances'
                                    RVALUE_CONTEXT_NT'table of visible entrances'
                                        CONSTANT_NT'table of visible entrances'-table name
                        CODE_BLOCK_NT'otherwise'
                            INVOCATION_LIST_NT'choose a blank row in the table of visible exits'
                                INVOCATION_NT'choose a blank row in the table of visible exits'
                                    RVALUE_CONTEXT_NT'table of visible exits'
                                        CONSTANT_NT'table of visible exits'-table name
                    INVOCATION_LIST_NT'now character entry is the person asked'
                        CONDITION_CONTEXT_NT'character entry is the person asked'
                    INVOCATION_LIST_NT'now total entry is 1'
                        CONDITION_CONTEXT_NT'total entry is 1'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the person asked is in the location'
                            INVOCATION_NT'if the person asked is in the location'
                                CONDITION_CONTEXT_NT'person asked is in the location'
                                    TEST_PROPOSITION_NT'person asked is in the location'(test: [ is('the location', {<schema: ContainerOf(*1)>:'person asked'}) ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now heading chosen entry is the opposite of the noun'
                                CONDITION_CONTEXT_NT'heading chosen entry is the opposite of the noun'
                        CODE_BLOCK_NT'otherwise'
                            INVOCATION_LIST_NT'now heading chosen entry is the noun'
                                CONDITION_CONTEXT_NT'heading chosen entry is the noun'
                    INVOCATION_LIST_NT'stop the action'
                        INVOCATION_NT'stop the action'
            RULE_NT'this is the movement reporting rule'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'sort the table of visible entrances in heading chosen order'
                        INVOCATION_NT'sort the table of visible entrances in heading chosen order'
                            RVALUE_CONTEXT_NT'table of visible entrances'
                                CONSTANT_NT'table of visible entrances'-table name
                            RVALUE_CONTEXT_NT'heading chosen'
                                CONSTANT_NT'heading chosen'-nothing valued table column
                    INVOCATION_LIST_NT'tidy departures of the table of visible entrances'
                        INVOCATION_NT'tidy departures of the table of visible entrances'
                            RVALUE_CONTEXT_NT'table of visible entrances'
                                CONSTANT_NT'table of visible entrances'-table name
                    INVOCATION_LIST_NT'sort the table of visible exits in heading chosen order'
                        INVOCATION_NT'sort the table of visible exits in heading chosen order'
                            RVALUE_CONTEXT_NT'table of visible exits'
                                CONSTANT_NT'table of visible exits'-table name
                            RVALUE_CONTEXT_NT'heading chosen'
                                CONSTANT_NT'heading chosen'-nothing valued table column
                    INVOCATION_LIST_NT'tidy departures of the table of visible exits'
                        INVOCATION_NT'tidy departures of the table of visible exits'
                            RVALUE_CONTEXT_NT'table of visible exits'
                                CONSTANT_NT'table of visible exits'-table name
                    INVOCATION_LIST_NT'let total row count be the number of filled rows in the tabl'
                        INVOCATION_NT'let total row count be the number of filled rows in the tabl'
                            NEW_LOCAL_CONTEXT_NT'total row count'
                                UNKNOWN_NT'total row count'
                            RVALUE_CONTEXT_NT'number of filled rows in the table of visible entrances plus'
                                PHRASE_TO_DECIDE_VALUE_NT'number of filled rows in the table of visible entrances plus'
                                    INVOCATION_LIST_NT'number of filled rows in the table of visible entrances plus'
                                        INVOCATION_NT'number of filled rows in the table of visible entrances plus'
                                            RVALUE_CONTEXT_NT'number of filled rows in the table of visible entrances'
                                                PHRASE_TO_DECIDE_VALUE_NT'number of filled rows in the table of visible entrances'
                                                    INVOCATION_LIST_NT'number of filled rows in the table of visible entrances'
                                                        INVOCATION_NT'number of filled rows in the table of visible entrances'
                                                            RVALUE_CONTEXT_NT'table of visible entrances'
                                                                CONSTANT_NT'table of visible entrances'-table name
                                            RVALUE_CONTEXT_NT'number of filled rows in the table of visible exits'
                                                PHRASE_TO_DECIDE_VALUE_NT'number of filled rows in the table of visible exits'
                                                    INVOCATION_LIST_NT'number of filled rows in the table of visible exits'
                                                        INVOCATION_NT'number of filled rows in the table of visible exits'
                                                            RVALUE_CONTEXT_NT'table of visible exits'
                                                                CONSTANT_NT'table of visible exits'-table name
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if total row count is 0'
                            INVOCATION_NT'if total row count is 0'
                                CONDITION_CONTEXT_NT'total row count is 0'
                                    TEST_PROPOSITION_NT'total row count is 0'(test: [ is('total row count', '0') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'rule succeeds'
                                INVOCATION_NT'rule succeeds'
                    INVOCATION_LIST_NT'generate descriptions from the table of visible entrances'
                        INVOCATION_NT'generate descriptions from the table of visible entrances'
                            RVALUE_CONTEXT_NT'table of visible entrances'
                                CONSTANT_NT'table of visible entrances'-table name
                    INVOCATION_LIST_NT'generate descriptions from the table of visible exits'
                        INVOCATION_NT'generate descriptions from the table of visible exits'
                            RVALUE_CONTEXT_NT'table of visible exits'
                                CONSTANT_NT'table of visible exits'-table name
                    INVOCATION_LIST_NT'clear the table of visible entrances'
                        INVOCATION_NT'clear the table of visible entrances'
                            RVALUE_CONTEXT_NT'table of visible entrances'
                                CONSTANT_NT'table of visible entrances'-table name
                    INVOCATION_LIST_NT'clear the table of visible exits'
                        INVOCATION_NT'clear the table of visible exits'
                            RVALUE_CONTEXT_NT'table of visible exits'
                                CONSTANT_NT'table of visible exits'-table name
            RULE_NT'to generate descriptions from ( current table - a table name'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let count be the number of filled rows in the current table'
                        INVOCATION_NT'let count be the number of filled rows in the current table'
                            NEW_LOCAL_CONTEXT_NT'count'
                                UNKNOWN_NT'count'
                            RVALUE_CONTEXT_NT'number of filled rows in the current table'
                                PHRASE_TO_DECIDE_VALUE_NT'number of filled rows in the current table'
                                    INVOCATION_LIST_NT'number of filled rows in the current table'
                                        INVOCATION_NT'number of filled rows in the current table'
                                            RVALUE_CONTEXT_NT'current table'
                                                LOCAL_VARIABLE_NT'current table'(t_0;table name)
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if count is 0'
                            INVOCATION_NT'if count is 0'
                                CONDITION_CONTEXT_NT'count is 0'
                                    TEST_PROPOSITION_NT'count is 0'(test: [ is('count', '0') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'rule succeeds'
                                INVOCATION_NT'rule succeeds'
                    INVOCATION_LIST_NT'let index be count'
                        INVOCATION_NT'let index be count'
                            NEW_LOCAL_CONTEXT_NT'index'
                                UNKNOWN_NT'index'
                            RVALUE_CONTEXT_NT'count'
                                LOCAL_VARIABLE_NT'count'(tmp_0;number)
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat through the current table'
                            INVOCATION_NT'repeat through the current table'
                                RVALUE_CONTEXT_NT'current table'
                                    LOCAL_VARIABLE_NT'current table'(t_0;table name)
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let accomplice be character entry'
                                INVOCATION_NT'let accomplice be character entry'
                                    NEW_LOCAL_CONTEXT_NT'accomplice'
                                        UNKNOWN_NT'accomplice'
                                    RVALUE_CONTEXT_NT'character entry'
                                        TABLE_ENTRY_NT'character entry'
                                            CONSTANT_NT-nothing valued table column
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if character entry is a person'
                                    INVOCATION_NT'if character entry is a person'
                                        CONDITION_CONTEXT_NT'character entry is a person'
                                            TEST_PROPOSITION_NT'character entry is a person'(test: [ kind=person('character entry') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'now character entry is marked for listing'
                                        CONDITION_CONTEXT_NT'character entry is marked for listing'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if there is a second entry and second entry is a person'
                                    INVOCATION_NT'if there is a second entry and second entry is a person'
                                        CONDITION_CONTEXT_NT'there is a second entry and second entry is a person'
                                            LOGICAL_AND_NT'there is a second entry and second entry is a person'
                                                TEST_VALUE_NT'there is a second entry'
                                                    PHRASE_TO_DECIDE_VALUE_NT'there is a second entry'
                                                        INVOCATION_LIST_NT'there is a second entry'
                                                            INVOCATION_NT'there is a second entry'
                                                                LVALUE_TR_CONTEXT_NT'a second entry'
                                                                    TABLE_ENTRY_NT'a second entry'
                                                                        CONSTANT_NT-nothing valued table column
                                                TEST_PROPOSITION_NT'second entry is a person'(test: [ kind=person('second entry') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'now second entry is marked for listing'
                                        CONDITION_CONTEXT_NT'second entry is marked for listing'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if there is a third entry and third entry is a person'
                                    INVOCATION_NT'if there is a third entry and third entry is a person'
                                        CONDITION_CONTEXT_NT'there is a third entry and third entry is a person'
                                            LOGICAL_AND_NT'there is a third entry and third entry is a person'
                                                TEST_VALUE_NT'there is a third entry'
                                                    PHRASE_TO_DECIDE_VALUE_NT'there is a third entry'
                                                        INVOCATION_LIST_NT'there is a third entry'
                                                            INVOCATION_NT'there is a third entry'
                                                                LVALUE_TR_CONTEXT_NT'a third entry'
                                                                    TABLE_ENTRY_NT'a third entry'
                                                                        CONSTANT_NT-nothing valued table column
                                                TEST_PROPOSITION_NT'third entry is a person'(test: [ kind=person('third entry') ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'now third entry is marked for listing'
                                        CONDITION_CONTEXT_NT'third entry is marked for listing'
                            INVOCATION_LIST_NT'let target be the room the heading chosen entry from the loc'
                                INVOCATION_NT'let target be the room the heading chosen entry from the loc'
                                    NEW_LOCAL_CONTEXT_NT'target'
                                        UNKNOWN_NT'target'
                                    RVALUE_CONTEXT_NT'room the heading chosen entry from the location'
                                        PHRASE_TO_DECIDE_VALUE_NT'room the heading chosen entry from the location'
                                            INVOCATION_LIST_NT'room the heading chosen entry from the location'
                                                INVOCATION_NT'room the heading chosen entry from the location'
                                                    RVALUE_CONTEXT_NT'heading chosen entry'
                                                        TABLE_ENTRY_NT'heading chosen entry'
                                                            CONSTANT_NT-nothing valued table column
                                                    RVALUE_CONTEXT_NT'location'
                                                        NONLOCAL_VARIABLE_NT'location'('location'(var)[object])
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if total entry is 3'
                                    INVOCATION_NT'if total entry is 3'
                                        CONDITION_CONTEXT_NT'total entry is 3'
                                            TEST_PROPOSITION_NT'total entry is 3'(test: [ is('total entry', '3') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[The character entry], [the second entry][optional comm'
                                        INVOCATION_LIST_SAY_NT'the character entry'
                                            INVOCATION_NT'the character entry'
                                                RVALUE_CONTEXT_NT'character entry'
                                                    TABLE_ENTRY_NT'character entry'
                                                        CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'", "'
                                            INVOCATION_NT'", "'
                                                RVALUE_CONTEXT_NT'", "'
                                                    CONSTANT_NT'", "'-text
                                        INVOCATION_LIST_SAY_NT'the second entry'
                                            INVOCATION_NT'the second entry'
                                                RVALUE_CONTEXT_NT'second entry'
                                                    TABLE_ENTRY_NT'second entry'
                                                        CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'optional comma'
                                            INVOCATION_NT'optional comma'
                                        INVOCATION_LIST_SAY_NT'" and "'
                                            INVOCATION_NT'" and "'
                                                RVALUE_CONTEXT_NT'" and "'
                                                    CONSTANT_NT'" and "'-text
                                        INVOCATION_LIST_SAY_NT'the third entry'
                                            INVOCATION_NT'the third entry'
                                                RVALUE_CONTEXT_NT'third entry'
                                                    TABLE_ENTRY_NT'third entry'
                                                        CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'" "'
                                            INVOCATION_NT'" "'
                                                RVALUE_CONTEXT_NT'" "'
                                                    CONSTANT_NT'" "'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if total entry is 2'
                                    INVOCATION_NT'if total entry is 2'
                                        CONDITION_CONTEXT_NT'total entry is 2'
                                            TEST_PROPOSITION_NT'total entry is 2'(test: [ is('total entry', '2') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[The character entry] and [the second entry] "'
                                        INVOCATION_LIST_SAY_NT'the character entry'
                                            INVOCATION_NT'the character entry'
                                                RVALUE_CONTEXT_NT'character entry'
                                                    TABLE_ENTRY_NT'character entry'
                                                        CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'" and "'
                                            INVOCATION_NT'" and "'
                                                RVALUE_CONTEXT_NT'" and "'
                                                    CONSTANT_NT'" and "'-text
                                        INVOCATION_LIST_SAY_NT'the second entry'
                                            INVOCATION_NT'the second entry'
                                                RVALUE_CONTEXT_NT'second entry'
                                                    TABLE_ENTRY_NT'second entry'
                                                        CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'" "'
                                            INVOCATION_NT'" "'
                                                RVALUE_CONTEXT_NT'" "'
                                                    CONSTANT_NT'" "'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if total entry is 1'
                                    INVOCATION_NT'if total entry is 1'
                                        CONDITION_CONTEXT_NT'total entry is 1'
                                            TEST_PROPOSITION_NT'total entry is 1'(test: [ is('total entry', '1') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if the character entry is the last person named'
                                            INVOCATION_NT'if the character entry is the last person named'
                                                CONDITION_CONTEXT_NT'character entry is the last person named'
                                                    TEST_PROPOSITION_NT'character entry is the last person named'(test: [ is('character entry', 'the last person named') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[The character entry as pronoun] "'
                                                INVOCATION_LIST_SAY_NT'the character entry as pronoun'
                                                    [1/2] INVOCATION_NT'the character entry as pronoun'/1
                                                        RVALUE_CONTEXT_NT'character entry'
                                                            TABLE_ENTRY_NT'character entry'
                                                                CONSTANT_NT-nothing valued table column
                                                    [2/2] INVOCATION_NT'the character entry as pronoun'
                                                        RVALUE_CONTEXT_NT'character entry'
                                                            TABLE_ENTRY_NT'character entry'
                                                                CONSTANT_NT-nothing valued table column
                                                INVOCATION_LIST_SAY_NT'" "'
                                                    INVOCATION_NT'" "'
                                                        RVALUE_CONTEXT_NT'" "'
                                                            CONSTANT_NT'" "'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "[The character entry] "'
                                                INVOCATION_LIST_SAY_NT'the character entry'
                                                    INVOCATION_NT'the character entry'
                                                        RVALUE_CONTEXT_NT'character entry'
                                                            TABLE_ENTRY_NT'character entry'
                                                                CONSTANT_NT-nothing valued table column
                                                INVOCATION_LIST_SAY_NT'" "'
                                                    INVOCATION_NT'" "'
                                                        RVALUE_CONTEXT_NT'" "'
                                                            CONSTANT_NT'" "'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if total entry is 1'
                                    INVOCATION_NT'if total entry is 1'
                                        CONDITION_CONTEXT_NT'total entry is 1'
                                            TEST_PROPOSITION_NT'total entry is 1'(test: [ is('total entry', '1') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[walk style of the character entry]s "'
                                        INVOCATION_LIST_SAY_NT'walk style of the character entry'
                                            INVOCATION_NT'walk style of the character entry'
                                                RVALUE_CONTEXT_NT'walk style of the character entry'
                                                    PROPERTY_VALUE_NT'walk style of the character entry'
                                                        CONSTANT_NT-nothing valued property
                                                        TABLE_ENTRY_NT'the character entry'
                                                            CONSTANT_NT-nothing valued table column
                                        INVOCATION_LIST_SAY_NT'"s "'
                                            INVOCATION_NT'"s "'
                                                RVALUE_CONTEXT_NT'"s "'
                                                    CONSTANT_NT'"s "'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT'say "walk[if total entry is 1]s[end if] "'
                                        INVOCATION_LIST_SAY_NT'"walk"'
                                            INVOCATION_NT'"walk"'
                                                RVALUE_CONTEXT_NT'"walk"'
                                                    CONSTANT_NT'"walk"'-text
                                        INVOCATION_LIST_SAY_NT'if total entry is 1'
                                            INVOCATION_NT'if total entry is 1'
                                                CONDITION_CONTEXT_NT'total entry is 1'
                                                    TEST_PROPOSITION_NT'total entry is 1'(test: [ is('total entry', '1') ])
                                        INVOCATION_LIST_SAY_NT'"s"'
                                            INVOCATION_NT'"s"'
                                                RVALUE_CONTEXT_NT'"s"'
                                                    CONSTANT_NT'"s"'-text
                                        INVOCATION_LIST_SAY_NT'end if'
                                            INVOCATION_NT'end if'
                                        INVOCATION_LIST_SAY_NT'" "'
                                            INVOCATION_NT'" "'
                                                RVALUE_CONTEXT_NT'" "'
                                                    CONSTANT_NT'" "'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the character entry is in the location'
                                    INVOCATION_NT'if the character entry is in the location'
                                        CONDITION_CONTEXT_NT'character entry is in the location'
                                            TEST_PROPOSITION_NT'character entry is in the location'(test: [ is('the location', {<schema: ContainerOf(*1)>:'character entry'}) ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is indoors and target is indoors'
                                            INVOCATION_NT'if location is indoors and target is indoors'
                                                CONDITION_CONTEXT_NT'location is indoors and target is indoors'
                                                    LOGICAL_AND_NT'location is indoors and target is indoors'
                                                        TEST_PROPOSITION_NT'location is indoors'(test: [ A127'indoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is indoors'(test: [ A127'indoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "over from "'
                                                INVOCATION_LIST_SAY_NT'"over from "'
                                                    INVOCATION_NT'"over from "'
                                                        RVALUE_CONTEXT_NT'"over from "'
                                                            CONSTANT_NT'"over from "'-text
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is outdoors and target is indoors'
                                            INVOCATION_NT'if location is outdoors and target is indoors'
                                                CONDITION_CONTEXT_NT'location is outdoors and target is indoors'
                                                    LOGICAL_AND_NT'location is outdoors and target is indoors'
                                                        TEST_PROPOSITION_NT'location is outdoors'(test: [ A128'outdoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is indoors'(test: [ A127'indoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "out of "'
                                                INVOCATION_LIST_SAY_NT'"out of "'
                                                    INVOCATION_NT'"out of "'
                                                        RVALUE_CONTEXT_NT'"out of "'
                                                            CONSTANT_NT'"out of "'-text
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is indoors and target is outdoors'
                                            INVOCATION_NT'if location is indoors and target is outdoors'
                                                CONDITION_CONTEXT_NT'location is indoors and target is outdoors'
                                                    LOGICAL_AND_NT'location is indoors and target is outdoors'
                                                        TEST_PROPOSITION_NT'location is indoors'(test: [ A127'indoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is outdoors'(test: [ A128'outdoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "in from "'
                                                INVOCATION_LIST_SAY_NT'"in from "'
                                                    INVOCATION_NT'"in from "'
                                                        RVALUE_CONTEXT_NT'"in from "'
                                                            CONSTANT_NT'"in from "'-text
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is outdoors and target is outdoors'
                                            INVOCATION_NT'if location is outdoors and target is outdoors'
                                                CONDITION_CONTEXT_NT'location is outdoors and target is outdoors'
                                                    LOGICAL_AND_NT'location is outdoors and target is outdoors'
                                                        TEST_PROPOSITION_NT'location is outdoors'(test: [ A128'outdoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is outdoors'(test: [ A128'outdoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "over from "'
                                                INVOCATION_LIST_SAY_NT'"over from "'
                                                    INVOCATION_NT'"over from "'
                                                        RVALUE_CONTEXT_NT'"over from "'
                                                            CONSTANT_NT'"over from "'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is indoors and target is indoors'
                                            INVOCATION_NT'if location is indoors and target is indoors'
                                                CONDITION_CONTEXT_NT'location is indoors and target is indoors'
                                                    LOGICAL_AND_NT'location is indoors and target is indoors'
                                                        TEST_PROPOSITION_NT'location is indoors'(test: [ A127'indoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is indoors'(test: [ A127'indoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "over to "'
                                                INVOCATION_LIST_SAY_NT'"over to "'
                                                    INVOCATION_NT'"over to "'
                                                        RVALUE_CONTEXT_NT'"over to "'
                                                            CONSTANT_NT'"over to "'-text
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is outdoors and target is indoors'
                                            INVOCATION_NT'if location is outdoors and target is indoors'
                                                CONDITION_CONTEXT_NT'location is outdoors and target is indoors'
                                                    LOGICAL_AND_NT'location is outdoors and target is indoors'
                                                        TEST_PROPOSITION_NT'location is outdoors'(test: [ A128'outdoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is indoors'(test: [ A127'indoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "into "'
                                                INVOCATION_LIST_SAY_NT'"into "'
                                                    INVOCATION_NT'"into "'
                                                        RVALUE_CONTEXT_NT'"into "'
                                                            CONSTANT_NT'"into "'-text
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is indoors and target is outdoors'
                                            INVOCATION_NT'if location is indoors and target is outdoors'
                                                CONDITION_CONTEXT_NT'location is indoors and target is outdoors'
                                                    LOGICAL_AND_NT'location is indoors and target is outdoors'
                                                        TEST_PROPOSITION_NT'location is indoors'(test: [ A127'indoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is outdoors'(test: [ A128'outdoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "out [if a door is visible][the random visible door][end'
                                                INVOCATION_LIST_SAY_NT'"out "'
                                                    INVOCATION_NT'"out "'
                                                        RVALUE_CONTEXT_NT'"out "'
                                                            CONSTANT_NT'"out "'-text
                                                INVOCATION_LIST_SAY_NT'if a door is visible'
                                                    INVOCATION_NT'if a door is visible'
                                                        CONDITION_CONTEXT_NT'a door is visible'
                                                            TEST_PROPOSITION_NT'a door is visible'(test: [ Exists x : kind=door(x) ^ A30'visible'(x) ])
                                                INVOCATION_LIST_SAY_NT'the random visible door'
                                                    INVOCATION_NT'the random visible door'
                                                        RVALUE_CONTEXT_NT'random visible door'
                                                            PHRASE_TO_DECIDE_VALUE_NT'random visible door'
                                                                INVOCATION_LIST_NT'random visible door'
                                                                    INVOCATION_NT'random visible door'
                                                                        RVALUE_CONTEXT_NT'visible door'
                                                                            CONSTANT_NT'visible door'-description of doors
                                                INVOCATION_LIST_SAY_NT'end if'
                                                    INVOCATION_NT'end if'
                                                INVOCATION_LIST_SAY_NT'" to "'
                                                    INVOCATION_NT'" to "'
                                                        RVALUE_CONTEXT_NT'" to "'
                                                            CONSTANT_NT'" to "'-text
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if location is outdoors and target is outdoors'
                                            INVOCATION_NT'if location is outdoors and target is outdoors'
                                                CONDITION_CONTEXT_NT'location is outdoors and target is outdoors'
                                                    LOGICAL_AND_NT'location is outdoors and target is outdoors'
                                                        TEST_PROPOSITION_NT'location is outdoors'(test: [ A128'outdoors'('location') ])
                                                        TEST_PROPOSITION_NT'target is outdoors'(test: [ A128'outdoors'('target') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "over to "'
                                                INVOCATION_LIST_SAY_NT'"over to "'
                                                    INVOCATION_NT'"over to "'
                                                        RVALUE_CONTEXT_NT'"over to "'
                                                            CONSTANT_NT'"over to "'-text
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if target is outdoors'
                                    INVOCATION_NT'if target is outdoors'
                                        CONDITION_CONTEXT_NT'target is outdoors'
                                            TEST_PROPOSITION_NT'target is outdoors'(test: [ A128'outdoors'('target') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "[the heading chosen entry]"'
                                        INVOCATION_LIST_SAY_NT'the heading chosen entry'
                                            INVOCATION_NT'the heading chosen entry'
                                                RVALUE_CONTEXT_NT'heading chosen entry'
                                                    TABLE_ENTRY_NT'heading chosen entry'
                                                        CONSTANT_NT-nothing valued table column
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT'say "[the target]"'
                                        INVOCATION_LIST_SAY_NT'the target'
                                            INVOCATION_NT'the target'
                                                RVALUE_CONTEXT_NT'target'
                                                    LOCAL_VARIABLE_NT'target'(tmp_5;room)
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the total entry is 1 and count is 1 and accomplice carrie'
                                    INVOCATION_NT'if the total entry is 1 and count is 1 and accomplice carrie'
                                        CONDITION_CONTEXT_NT'total entry is 1 and count is 1 and accomplice carries somet'
                                            LOGICAL_AND_NT'total entry is 1 and count is 1 and accomplice carries somet'
                                                TEST_PROPOSITION_NT'total entry is 1'(test: [ is('total entry', '1') ])
                                                LOGICAL_AND_NT
                                                    TEST_PROPOSITION_NT'count is 1'(test: [ is('count', '1') ])
                                                    TEST_PROPOSITION_NT'accomplice carries something'(test: [ Exists x : kind=thing_c(x) ^ is('accomplice', {<schema: CarrierOf(*1)>:x}) ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say ", carrying [a list of things carried by the accomplice]'
                                        INVOCATION_LIST_SAY_NT'", carrying "'
                                            INVOCATION_NT'", carrying "'
                                                RVALUE_CONTEXT_NT'", carrying "'
                                                    CONSTANT_NT'", carrying "'-text
                                        INVOCATION_LIST_SAY_NT'a list of things carried by the accomplice'
                                            INVOCATION_NT'a list of things carried by the accomplice'
                                                RVALUE_CONTEXT_NT'things carried by the accomplice'
                                                    CONSTANT_NT'things carried by the accomplice'-description of things
                            INVOCATION_LIST_NT'decrement index'
                                INVOCATION_NT'decrement index'
                                    LVALUE_CONTEXT_NT'index'
                                        LOCAL_VARIABLE_NT'index'(tmp_1;number)
                            INVOCATION_LIST_NT'make delimiter index of count , continuing'
                                INVOCATION_NT'make delimiter index of count'
                                    RVALUE_CONTEXT_NT'index'
                                        LOCAL_VARIABLE_NT'index'(tmp_1;number)
                                    RVALUE_CONTEXT_NT'count'
                                        LOCAL_VARIABLE_NT'count'(tmp_0;number)
                            INVOCATION_LIST_NT'now group size is total entry'
                                CONDITION_CONTEXT_NT'group size is total entry'
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if a marked for listing person is infected'
                            INVOCATION_NT'if a marked for listing person is infected'
                                CONDITION_CONTEXT_NT'a marked for listing person is infected'
                                    TEST_PROPOSITION_NT'a marked for listing person is infected'(test: [ Exists x : kind=person(x) ^ A73'marked for listing'(x) ^ A125'infected'(x) ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if looking and a marked for listing person is not in the loc'
                                    INVOCATION_NT'if looking and a marked for listing person is not in the loc'
                                        CONDITION_CONTEXT_NT'looking and a marked for listing person is not in the locati'
                                            LOGICAL_AND_NT'looking and a marked for listing person is not in the locati'
                                                TEST_VALUE_NT'looking'
                                                    CONSTANT_NT'looking'-action
                                                TEST_PROPOSITION_NT'a marked for listing person is not in the location'(test: [ Exists x : kind=person(x) ^ A73'marked for listing'(x) ^ NOT[ is('the location', {<schema: ContainerOf(*1)>:x}) NOT] ])
                                CODE_BLOCK_NT
                                    INVOCATION_LIST_NT'clear marked people'
                                        INVOCATION_NT'clear marked people'
                                    CODE_BLOCK_NT'say paragraph break'
                                        INVOCATION_LIST_SAY_NT'paragraph break'
                                            INVOCATION_NT'paragraph break'
                                CODE_BLOCK_NT'otherwise'
                                    INVOCATION_LIST_NT'describe patients'
                                        INVOCATION_NT'describe patients'
                        CODE_BLOCK_NT'otherwise'
                            INVOCATION_LIST_NT'clear marked people'
                                INVOCATION_NT'clear marked people'
                            CODE_BLOCK_NT'say paragraph break'
                                INVOCATION_LIST_SAY_NT'paragraph break'
                                    INVOCATION_NT'paragraph break'
            SENTENCE_NT'the last person named is a person that varies'
                VERB_NT'is'
                PROPER_NOUN_NT'last person named'
                COMMON_NOUN_NT'person that varies'
            RULE_NT'before printing the name of a person ( called target )'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'now the last person named is the target'
                        CONDITION_CONTEXT_NT'the last person named is the target'
            SENTENCE_NT'group size is a number that varies'
                VERB_NT'is'
                PROPER_NOUN_NT'group size'
                COMMON_NOUN_NT'number that varies'
            SENTENCE_NT'group size is 1'
                VERB_NT'is'
                PROPER_NOUN_NT'group size'
                PROPER_NOUN_NT'1'
            RULE_NT'to clear marked people'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat with named party running through people'
                            INVOCATION_NT'repeat with named party running through people'
                                NEW_LOCAL_CONTEXT_NT'named party'
                                    UNKNOWN_NT'named party'
                                RVALUE_CONTEXT_NT'people'
                                    CONSTANT_NT'people'-description of people
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'now the named party is not marked for listing'
                                CONDITION_CONTEXT_NT'the named party is not marked for listing'
            RULE_NT'before listing nondescript items'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the number of people who are marked for listing is 0'
                            INVOCATION_NT'if the number of people who are marked for listing is 0'
                                CONDITION_CONTEXT_NT'number of people who are marked for listing is 0'
                                    TEST_PROPOSITION_NT'number of people who are marked for listing is 0'(test: [ is('number of people who are marked for listing', '0') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'make no decision'
                                INVOCATION_NT'make no decision'
                    CODE_BLOCK_NT'say "You can see [a list of people who are marked for listin'
                        INVOCATION_LIST_SAY_NT'"You can see "'
                            INVOCATION_NT'"You can see "'
                                RVALUE_CONTEXT_NT'"You can see "'
                                    CONSTANT_NT'"You can see "'-text
                        INVOCATION_LIST_SAY_NT'a list of people who are marked for listing'
                            INVOCATION_NT'a list of people who are marked for listing'
                                RVALUE_CONTEXT_NT'people who are marked for listing'
                                    CONSTANT_NT'people who are marked for listing'-description of people
                        INVOCATION_LIST_SAY_NT'" here. "'
                            INVOCATION_NT'" here. "'
                                RVALUE_CONTEXT_NT'" here. "'
                                    CONSTANT_NT'" here. "'-text
                    INVOCATION_LIST_NT'now group size is the number of people who are marked for li'
                        CONDITION_CONTEXT_NT'group size is the number of people who are marked for listin'
                    INVOCATION_LIST_NT'describe patients'
                        INVOCATION_NT'describe patients'
                    INVOCATION_LIST_NT'now every marked for listing person is not marked for listin'
                        CONDITION_CONTEXT_NT'every marked for listing person is not marked for listing'
            RULE_NT'to describe patients'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if every marked for listing person is infected and at least '
                            INVOCATION_NT'if every marked for listing person is infected and at least '
                                CONDITION_CONTEXT_NT'every marked for listing person is infected and at least thr'
                                    LOGICAL_AND_NT'every marked for listing person is infected and at least thr'
                                        TEST_PROPOSITION_NT'every marked for listing person is infected'(test: [ ForAll x IN[ kind=person(x) ^ A73'marked for listing'(x) IN] : A125'infected'(x) ])
                                        TEST_PROPOSITION_NT'at least three people are marked for listing'(test: [ Card>=3 x IN[ kind=person(x) IN] : A73'marked for listing'(x) ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "They are all sick as dogs, every one."'
                                INVOCATION_LIST_SAY_NT'"They are all sick as dogs, every one."'
                                    INVOCATION_NT'"They are all sick as dogs, every one."'
                                        RVALUE_CONTEXT_NT'"They are all sick as dogs, every one."'
                                            CONSTANT_NT'"They are all sick as dogs, every one."'-text
                            INVOCATION_LIST_NT'clear marked people'
                                INVOCATION_NT'clear marked people'
                            INVOCATION_LIST_NT'rule succeeds'
                                INVOCATION_NT'rule succeeds'
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if the number of people who are marked for listing is greate'
                                    INVOCATION_NT'if the number of people who are marked for listing is greate'
                                        CONDITION_CONTEXT_NT'number of people who are marked for listing is greater than '
                                            LOGICAL_AND_NT'number of people who are marked for listing is greater than '
                                                TEST_PROPOSITION_NT'number of people who are marked for listing is greater than '(test: [ greater-than('number of people who are marked for listing', 'two') ])
                                                TEST_PROPOSITION_NT'the number of infected people who are marked for listing is '(test: [ greater-than('the number of infected people who are marked for listing', 'the number of clean people who are marked for listing') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say "Only [the list of clean people who are marked for listi'
                                        INVOCATION_LIST_SAY_NT'"Only "'
                                            INVOCATION_NT'"Only "'
                                                RVALUE_CONTEXT_NT'"Only "'
                                                    CONSTANT_NT'"Only "'-text
                                        INVOCATION_LIST_SAY_NT'the list of clean people who are marked for listing'
                                            INVOCATION_NT'the list of clean people who are marked for listing'
                                                RVALUE_CONTEXT_NT'clean people who are marked for listing'
                                                    CONSTANT_NT'clean people who are marked for listing'-description of people
                                        INVOCATION_LIST_SAY_NT'" currently remain"'
                                            INVOCATION_NT'" currently remain"'
                                                RVALUE_CONTEXT_NT'" currently remain"'
                                                    CONSTANT_NT'" currently remain"'-text
                                        INVOCATION_LIST_SAY_NT'if the number of clean people who are marked for listing is '
                                            INVOCATION_NT'if the number of clean people who are marked for listing is '
                                                CONDITION_CONTEXT_NT'number of clean people who are marked for listing is 1'
                                                    TEST_PROPOSITION_NT'number of clean people who are marked for listing is 1'(test: [ is('number of clean people who are marked for listing', '1') ])
                                        INVOCATION_LIST_SAY_NT'"s"'
                                            INVOCATION_NT'"s"'
                                                RVALUE_CONTEXT_NT'"s"'
                                                    CONSTANT_NT'"s"'-text
                                        INVOCATION_LIST_SAY_NT'end if'
                                            INVOCATION_NT'end if'
                                        INVOCATION_LIST_SAY_NT'" untainted."'
                                            INVOCATION_NT'" untainted."'
                                                RVALUE_CONTEXT_NT'" untainted."'
                                                    CONSTANT_NT'" untainted."'-text
                                    INVOCATION_LIST_NT'clear marked people'
                                        INVOCATION_NT'clear marked people'
                                    INVOCATION_LIST_NT'rule succeeds'
                                        INVOCATION_NT'rule succeeds'
                    INVOCATION_LIST_NT'let count be the number of marked for listing other people w'
                        INVOCATION_NT'let count be the number of marked for listing other people w'
                            NEW_LOCAL_CONTEXT_NT'count'
                                UNKNOWN_NT'count'
                            RVALUE_CONTEXT_NT'number of marked for listing other people who are infected'
                                PHRASE_TO_DECIDE_VALUE_NT'number of marked for listing other people who are infected'
                                    INVOCATION_LIST_NT'number of marked for listing other people who are infected'
                                        INVOCATION_NT'number of marked for listing other people who are infected'
                                            RVALUE_CONTEXT_NT'marked for listing other people who are infected'
                                                CONSTANT_NT'marked for listing other people who are infected'-description of people
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if count is 0'
                            INVOCATION_NT'if count is 0'
                                CONDITION_CONTEXT_NT'count is 0'
                                    TEST_PROPOSITION_NT'count is 0'(test: [ is('count', '0') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say paragraph break'
                                INVOCATION_LIST_SAY_NT'paragraph break'
                                    INVOCATION_NT'paragraph break'
                            INVOCATION_LIST_NT'make no decision'
                                INVOCATION_NT'make no decision'
                    INVOCATION_LIST_NT'let index be count'
                        INVOCATION_NT'let index be count'
                            NEW_LOCAL_CONTEXT_NT'index'
                                UNKNOWN_NT'index'
                            RVALUE_CONTEXT_NT'count'
                                LOCAL_VARIABLE_NT'count'(tmp_0;number)
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'repeat with patient running through marked for listing other'
                            INVOCATION_NT'repeat with patient running through marked for listing other'
                                NEW_LOCAL_CONTEXT_NT'patient'
                                    UNKNOWN_NT'patient'
                                RVALUE_CONTEXT_NT'marked for listing other people who are infected'
                                    CONSTANT_NT'marked for listing other people who are infected'-description of people
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if index is count'
                                    INVOCATION_NT'if index is count'
                                        CONDITION_CONTEXT_NT'index is count'
                                            TEST_PROPOSITION_NT'index is count'(test: [ is('index', 'count') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if count is 1 and the patient is the last person named'
                                            INVOCATION_NT'if count is 1 and the patient is the last person named'
                                                CONDITION_CONTEXT_NT'count is 1 and the patient is the last person named'
                                                    LOGICAL_AND_NT'count is 1 and the patient is the last person named'
                                                        TEST_PROPOSITION_NT'count is 1'(test: [ is('count', '1') ])
                                                        TEST_PROPOSITION_NT'the patient is the last person named'(test: [ is('the patient', 'the last person named') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say "[The patient as pronoun]"'
                                                INVOCATION_LIST_SAY_NT'the patient as pronoun'
                                                    [1/2] INVOCATION_NT'the patient as pronoun'/1
                                                        RVALUE_CONTEXT_NT'patient'
                                                            LOCAL_VARIABLE_NT'patient'(tmp_2;person)
                                                    [2/2] INVOCATION_NT'the patient as pronoun'
                                                        RVALUE_CONTEXT_NT'patient'
                                                            LOCAL_VARIABLE_NT'patient'(tmp_2;person)
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "[The patient]"'
                                                INVOCATION_LIST_SAY_NT'the patient'
                                                    INVOCATION_NT'the patient'
                                                        RVALUE_CONTEXT_NT'patient'
                                                            LOCAL_VARIABLE_NT'patient'(tmp_2;person)
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT'say "[the patient]"'
                                        INVOCATION_LIST_SAY_NT'the patient'
                                            INVOCATION_NT'the patient'
                                                RVALUE_CONTEXT_NT'patient'
                                                    LOCAL_VARIABLE_NT'patient'(tmp_2;person)
                            CODE_BLOCK_NT'say " [looks as though dipped in for index] [infection color'
                                INVOCATION_LIST_SAY_NT'" "'
                                    INVOCATION_NT'" "'
                                        RVALUE_CONTEXT_NT'" "'
                                            CONSTANT_NT'" "'-text
                                INVOCATION_LIST_SAY_NT'looks as though dipped in for index'
                                    INVOCATION_NT'looks as though dipped in for index'
                                        RVALUE_CONTEXT_NT'index'
                                            LOCAL_VARIABLE_NT'index'(tmp_1;number)
                                INVOCATION_LIST_SAY_NT'" "'
                                    INVOCATION_NT'" "'
                                        RVALUE_CONTEXT_NT'" "'
                                            CONSTANT_NT'" "'-text
                                INVOCATION_LIST_SAY_NT'infection color of the patient'
                                    INVOCATION_NT'infection color of the patient'
                                        RVALUE_CONTEXT_NT'infection color of the patient'
                                            PROPERTY_VALUE_NT'infection color of the patient'
                                                CONSTANT_NT-infection colors valued property
                                                LOCAL_VARIABLE_NT'the patient'(tmp_2;person)
                            INVOCATION_LIST_NT'decrement index'
                                INVOCATION_NT'decrement index'
                                    LVALUE_CONTEXT_NT'index'
                                        LOCAL_VARIABLE_NT'index'(tmp_1;number)
                            INVOCATION_LIST_NT'make delimiter index of count'
                                INVOCATION_NT'make delimiter index of count'
                                    RVALUE_CONTEXT_NT'index'
                                        LOCAL_VARIABLE_NT'index'(tmp_1;number)
                                    RVALUE_CONTEXT_NT'count'
                                        LOCAL_VARIABLE_NT'count'(tmp_0;number)
                    INVOCATION_LIST_NT'clear marked people'
                        INVOCATION_NT'clear marked people'
            RULE_NT'to say ( named character - a man ) as pronoun'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if group size is 1'
                            INVOCATION_NT'if group size is 1'
                                CONDITION_CONTEXT_NT'group size is 1'
                                    TEST_PROPOSITION_NT'group size is 1'(test: [ is('group size', '1') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "He"'
                                INVOCATION_LIST_SAY_NT'"He"'
                                    INVOCATION_NT'"He"'
                                        RVALUE_CONTEXT_NT'"He"'
                                            CONSTANT_NT'"He"'-text
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if group size is 2'
                            INVOCATION_NT'if group size is 2'
                                CONDITION_CONTEXT_NT'group size is 2'
                                    TEST_PROPOSITION_NT'group size is 2'(test: [ is('group size', '2') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "The latter"'
                                INVOCATION_LIST_SAY_NT'"The latter"'
                                    INVOCATION_NT'"The latter"'
                                        RVALUE_CONTEXT_NT'"The latter"'
                                            CONSTANT_NT'"The latter"'-text
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if group size is greater than 2'
                            INVOCATION_NT'if group size is greater than 2'
                                CONDITION_CONTEXT_NT'group size is greater than 2'
                                    TEST_PROPOSITION_NT'group size is greater than 2'(test: [ greater-than('group size', '2') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "The last"'
                                INVOCATION_LIST_SAY_NT'"The last"'
                                    INVOCATION_NT'"The last"'
                                        RVALUE_CONTEXT_NT'"The last"'
                                            CONSTANT_NT'"The last"'-text
            RULE_NT'to say ( named character - a woman ) as pronoun'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if group size is 1'
                            INVOCATION_NT'if group size is 1'
                                CONDITION_CONTEXT_NT'group size is 1'
                                    TEST_PROPOSITION_NT'group size is 1'(test: [ is('group size', '1') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "She"'
                                INVOCATION_LIST_SAY_NT'"She"'
                                    INVOCATION_NT'"She"'
                                        RVALUE_CONTEXT_NT'"She"'
                                            CONSTANT_NT'"She"'-text
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if group size is 2'
                            INVOCATION_NT'if group size is 2'
                                CONDITION_CONTEXT_NT'group size is 2'
                                    TEST_PROPOSITION_NT'group size is 2'(test: [ is('group size', '2') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "The latter"'
                                INVOCATION_LIST_SAY_NT'"The latter"'
                                    INVOCATION_NT'"The latter"'
                                        RVALUE_CONTEXT_NT'"The latter"'
                                            CONSTANT_NT'"The latter"'-text
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if group size is greater than 2'
                            INVOCATION_NT'if group size is greater than 2'
                                CONDITION_CONTEXT_NT'group size is greater than 2'
                                    TEST_PROPOSITION_NT'group size is greater than 2'(test: [ greater-than('group size', '2') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say "The last"'
                                INVOCATION_LIST_SAY_NT'"The last"'
                                    INVOCATION_NT'"The last"'
                                        RVALUE_CONTEXT_NT'"The last"'
                                            CONSTANT_NT'"The last"'-text
            RULE_NT'to say looks as though dipped in for ( index - a number )'
                CODE_BLOCK_NT
                    INVOCATION_LIST_NT'let divider be the number of filled rows in the table of dip'
                        INVOCATION_NT'let divider be the number of filled rows in the table of dip'
                            NEW_LOCAL_CONTEXT_NT'divider'
                                UNKNOWN_NT'divider'
                            RVALUE_CONTEXT_NT'number of filled rows in the table of dipping phrases'
                                PHRASE_TO_DECIDE_VALUE_NT'number of filled rows in the table of dipping phrases'
                                    INVOCATION_LIST_NT'number of filled rows in the table of dipping phrases'
                                        INVOCATION_NT'number of filled rows in the table of dipping phrases'
                                            RVALUE_CONTEXT_NT'table of dipping phrases'
                                                CONSTANT_NT'table of dipping phrases'-table name
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if index is greater than 4'
                            INVOCATION_NT'if index is greater than 4'
                                CONDITION_CONTEXT_NT'index is greater than 4'
                                    TEST_PROPOSITION_NT'index is greater than 4'(test: [ greater-than('index', '4') ])
                        CODE_BLOCK_NT
                            INVOCATION_LIST_NT'let index be the remainder after dividing index by divider'
                                INVOCATION_NT'let index be the remainder after dividing index by divider'
                                    LVALUE_LOCAL_CONTEXT_NT'index'
                                        LOCAL_VARIABLE_NT'index'(t_0;number)
                                    RVALUE_CONTEXT_NT'remainder after dividing index by divider'
                                        PHRASE_TO_DECIDE_VALUE_NT'remainder after dividing index by divider'
                                            INVOCATION_LIST_NT'remainder after dividing index by divider'
                                                INVOCATION_NT'remainder after dividing index by divider'
                                                    RVALUE_CONTEXT_NT'index'
                                                        LOCAL_VARIABLE_NT'index'(t_0;number)
                                                    RVALUE_CONTEXT_NT'divider'
                                                        LOCAL_VARIABLE_NT'divider'(tmp_0;number)
                    INVOCATION_LIST_NT'choose row index in the table of dipping phrases'
                        INVOCATION_NT'choose row index in the table of dipping phrases'
                            RVALUE_CONTEXT_NT'index'
                                LOCAL_VARIABLE_NT'index'(t_0;number)
                            RVALUE_CONTEXT_NT'table of dipping phrases'
                                CONSTANT_NT'table of dipping phrases'-table name
                    CODE_BLOCK_NT'say dipping entry'
                        INVOCATION_LIST_SAY_NT'dipping entry'
                            INVOCATION_NT'dipping entry'
                                RVALUE_CONTEXT_NT'dipping entry'
                                    TABLE_ENTRY_NT'dipping entry'
                                        CONSTANT_NT-nothing valued table column
            TABLE_NT'table of dipping phrases dipping "looks as though dipped in"'
            SENTENCE_NT'a door is usually scenery'
                VERB_NT'is usually'
                COMMON_NOUN_NT'door'
                ADJECTIVE_NT'scenery'
            RULE_NT'to make delimiter ( index - a number ) of ( count - a number'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if index is 0'
                            INVOCATION_NT'if index is 0'
                                CONDITION_CONTEXT_NT'index is 0'
                                    TEST_PROPOSITION_NT'index is 0'(test: [ is('index', '0') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if continuing'
                                    INVOCATION_NT'if continuing'
                                        CONDITION_CONTEXT_NT'continuing'
                                            TEST_PHRASE_OPTION_NT'continuing'
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT'say ". [run paragraph on]"'
                                        INVOCATION_LIST_SAY_NT'". "'
                                            INVOCATION_NT'". "'
                                                RVALUE_CONTEXT_NT'". "'
                                                    CONSTANT_NT'". "'-text
                                        INVOCATION_LIST_SAY_NT'run paragraph on'
                                            INVOCATION_NT'run paragraph on'
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT'say "."'
                                        INVOCATION_LIST_SAY_NT'"."'
                                            INVOCATION_NT'"."'
                                                RVALUE_CONTEXT_NT'"."'
                                                    CONSTANT_NT'"."'-text
                        CODE_BLOCK_NT'otherwise'
                            CODE_BLOCK_NT
                                INVOCATION_LIST_NT'if index is 1'
                                    INVOCATION_NT'if index is 1'
                                        CONDITION_CONTEXT_NT'index is 1'
                                            TEST_PROPOSITION_NT'index is 1'(test: [ is('index', '1') ])
                                CODE_BLOCK_NT
                                    CODE_BLOCK_NT
                                        INVOCATION_LIST_NT'if count is 2'
                                            INVOCATION_NT'if count is 2'
                                                CONDITION_CONTEXT_NT'count is 2'
                                                    TEST_PROPOSITION_NT'count is 2'(test: [ is('count', '2') ])
                                        CODE_BLOCK_NT
                                            CODE_BLOCK_NT'say " and "'
                                                INVOCATION_LIST_SAY_NT'" and "'
                                                    INVOCATION_NT'" and "'
                                                        RVALUE_CONTEXT_NT'" and "'
                                                            CONSTANT_NT'" and "'-text
                                        CODE_BLOCK_NT'otherwise'
                                            CODE_BLOCK_NT'say "[optional comma] and "'
                                                INVOCATION_LIST_SAY_NT'optional comma'
                                                    INVOCATION_NT'optional comma'
                                                INVOCATION_LIST_SAY_NT'" and "'
                                                    INVOCATION_NT'" and "'
                                                        RVALUE_CONTEXT_NT'" and "'
                                                            CONSTANT_NT'" and "'-text
                                CODE_BLOCK_NT'otherwise'
                                    CODE_BLOCK_NT'say ", "'
                                        INVOCATION_LIST_SAY_NT'", "'
                                            INVOCATION_NT'", "'
                                                RVALUE_CONTEXT_NT'", "'
                                                    CONSTANT_NT'", "'-text
            RULE_NT'to say optional comma'
                CODE_BLOCK_NT
                    CODE_BLOCK_NT
                        INVOCATION_LIST_NT'if the serial comma option is active'
                            INVOCATION_NT'if the serial comma option is active'
                                CONDITION_CONTEXT_NT'serial comma option is active'
                                    TEST_PROPOSITION_NT'serial comma option is active'(test: [ A11'active'('serial comma option') ])
                        CODE_BLOCK_NT
                            CODE_BLOCK_NT'say ","'
                                INVOCATION_LIST_SAY_NT'","'
                                    INVOCATION_NT'","'
                                        RVALUE_CONTEXT_NT'","'
                                            CONSTANT_NT'","'-text
            SENTENCE_NT'test me with go to cold comfort / z / z / z / z / ask vaness'
                VERB_NT'test'
                PROPER_NOUN_NT'me'
                PROPER_NOUN_NT'go to cold comfort / z / z / z / z / ask vanessa for french '
            SENTENCE_NT'use fast route-finding'
                VERB_NT'use'
                PROPER_NOUN_NT'fast route-finding'
    HEADING_NT'invented sentences' (level 0)
        SENTENCE_NT'external file understood is a external file which varies'
            VERB_NT'is'
            PROPER_NOUN_NT'external file understood'
            COMMON_NOUN_NT'external file which varies'
        SENTENCE_NT'scene understood is a scene which varies'
            VERB_NT'is'
            PROPER_NOUN_NT'scene understood'
            COMMON_NOUN_NT'scene which varies'
        SENTENCE_NT'figure name understood is a figure name which varies'
            VERB_NT'is'
            PROPER_NOUN_NT'figure name understood'
            COMMON_NOUN_NT'figure name which varies'
        SENTENCE_NT'sound name understood is a sound name which varies'
            VERB_NT'is'
            PROPER_NOUN_NT'sound name understood'
            COMMON_NOUN_NT'sound name which varies'
        SENTENCE_NT'natural language understood is a natural language which vari'
            VERB_NT'is'
            PROPER_NOUN_NT'natural language understood'
            COMMON_NOUN_NT'natural language which varies'
        SENTENCE_NT'grammatical tense understood is a grammatical tense which va'
            VERB_NT'is'
            PROPER_NOUN_NT'grammatical tense understood'
            COMMON_NOUN_NT'grammatical tense which varies'
        SENTENCE_NT'narrative viewpoint understood is a narrative viewpoint whic'
            VERB_NT'is'
            PROPER_NOUN_NT'narrative viewpoint understood'
            COMMON_NOUN_NT'narrative viewpoint which varies'
        SENTENCE_NT'grammatical case understood is a grammatical case which vari'
            VERB_NT'is'
            PROPER_NOUN_NT'grammatical case understood'
            COMMON_NOUN_NT'grammatical case which varies'
        SENTENCE_NT'grammatical gender understood is a grammatical gender which '
            VERB_NT'is'
            PROPER_NOUN_NT'grammatical gender understood'
            COMMON_NOUN_NT'grammatical gender which varies'
        SENTENCE_NT'command parser error understood is a command parser error wh'
            VERB_NT'is'
            PROPER_NOUN_NT'command parser error understood'
            COMMON_NOUN_NT'command parser error which varies'
        SENTENCE_NT'infection color understood is a infection color which varies'
            VERB_NT'is'
            PROPER_NOUN_NT'infection color understood'
            COMMON_NOUN_NT'infection color which varies'
